file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/antTask/edu/umd/cs/findbugs/anttask/AbstractFindBugsTask.java
module edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   inherits from org::apache::tools::ant::Task
   abstract class
   function addArg(String) in line 322
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable findbugsEngine defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function afterExecuteJavaProcess(int) in line 376
      1 lines of code
      1 parameters
      1 conditional paths
   function beforeExecuteJavaProcess() in line 374
      1 lines of code
      0 parameters
      1 conditional paths
   function checkParameters() in line 231
      26 lines of code
      0 parameters
      7 conditional paths
      uses variable homeDir defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable classpath defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable pluginList defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable systemPropertyList defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function configureFindbugsEngine() in line 372
      1 lines of code
      0 parameters
      1 conditional paths
   function createClasspath() in line 168
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable classpath defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function createFindbugsEngine() in line 263
      47 lines of code
      0 parameters
      7 conditional paths
      uses variable findbugsEngine defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable jvm defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable timeout defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable debug defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable jvmargs defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable systemPropertyList defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable homeDir defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable classpath defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable pluginList defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable mainClass defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function createPluginList() in line 198
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable pluginList defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function createSystemProperty() in line 148
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function SystemProperty() defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask::SystemProperty
      uses variable systemPropertyList defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function execFindbugs() in line 331
      40 lines of code
      0 parameters
      3 conditional paths
      uses function createFindbugsEngine() defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses function configureFindbugsEngine() defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses function beforeExecuteJavaProcess() defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses function getDebug() defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses function getFindbugsEngine() defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable execResultProperty defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses function afterExecuteJavaProcess(int) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function execute() in line 213
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses function checkParameters() defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses function execFindbugs() defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable errorProperty defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable failOnError defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function getDebug() in line 104
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable debug defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function getFindbugsEngine() in line 314
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable findbugsEngine defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function setClasspath(Path) in line 157
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable classpath defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function setClasspathRef(Reference) in line 178
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function createClasspath() defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function setDebug(boolean) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setErrorProperty(String) in line 141
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask::SystemProperty
   function setFailOnError(boolean) in line 133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHome(File) in line 90
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable homeDir defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function setJvm(String) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable jvm defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function setJvmargs(String) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPluginList(Path) in line 187
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable pluginList defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function setPluginListRef(Reference) in line 208
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createPluginList() defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function setTimeout(long) in line 126
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable timeout defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function AbstractFindBugsTask(String) in line 81
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable mainClass defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable RESULT_PROPERTY_SUFFIX defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   variable classpath in line 69
   variable debug in line 61
   variable DEFAULT_TIMEOUT in line 41
      protection public
   variable errorProperty in line 67
   variable execResultProperty in line 74
      protection public
   variable failOnError in line 66
   variable FINDBUGS_JAR in line 40
      protection public
   variable findbugsEngine in line 72
   variable homeDir in line 62
   variable jvm in line 63
   variable jvmargs in line 64
   variable mainClass in line 60
   variable pluginList in line 70
   variable RESULT_PROPERTY_SUFFIX in line 43
      protection public
   variable systemPropertyList in line 68
   variable timeout in line 65
module edu::umd::cs::findbugs::anttask::AbstractFindBugsTask::SystemProperty
   function getName() in line 56
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask::SystemProperty
   function getValue() in line 57
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask::SystemProperty
   function setName(String) in line 53
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask::SystemProperty
   function setValue(String) in line 54
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask::SystemProperty
   function SystemProperty() in line 50
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable name in line 47
   variable value in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/antTask/edu/umd/cs/findbugs/anttask/ComputeBugHistoryTask.java
module edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
   inherits from edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function afterExecuteJavaProcess(int) in line 146
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable outputFile defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
   function beforeExecuteJavaProcess() in line 138
      3 lines of code
      0 parameters
      1 conditional paths
   function checkParameters() in line 95
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable outputFile defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
   function configureFindbugsEngine() in line 107
      26 lines of code
      0 parameters
      8 conditional paths
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable outputFile defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
      uses variable overrideRevisionNames defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
      uses variable noPackageMoves defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
      uses variable preciseMatch defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
      uses variable precisePriorityMatch defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
      uses variable quiet defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
      uses variable withMessages defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
      uses variable dataFileList defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
   function createDataFile() in line 85
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable dataFileList defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
   function setNoPackageMoves(boolean) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setOutput(File) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setOverrideRevisionNames(boolean) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPreciseMatch(boolean) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrecisePriorityMatch(boolean) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setQuiet(boolean) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setWithMessages(boolean) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ComputeBugHistoryTask() in line 44
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable dataFileList defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
      uses function setFailOnError(boolean) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   variable dataFileList in line 42
   variable noPackageMoves in line 37
   variable outputFile in line 35
   variable overrideRevisionNames in line 36
   variable preciseMatch in line 38
   variable precisePriorityMatch in line 39
   variable quiet in line 40
   variable withMessages in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/antTask/edu/umd/cs/findbugs/anttask/ConvertXmlToTextTask.java
module edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   inherits from edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function afterExecuteJavaProcess(int) in line 140
      5 lines of code
      1 parameters
      2 conditional paths
   function beforeExecuteJavaProcess() in line 132
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable input defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
      uses variable output defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
      uses variable format defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   function checkParameters() in line 95
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable input defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
      uses variable output defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
      uses variable format defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   function configureFindbugsEngine() in line 114
      13 lines of code
      0 parameters
      4 conditional paths
      uses variable format defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable longBugCodes defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
      uses variable applySuppression defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
      uses variable input defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
      uses variable output defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   function setApplySuppression(boolean) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable applySuppression defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   function setFormat(String) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable format defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   function setInput(String) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable input defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   function setInputFile(String) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable input defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   function setLongBugCodes(boolean) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable longBugCodes defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   function setOutput(String) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable output defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   function setOutputFile(String) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable output defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   function ConvertXmlToTextTask() in line 38
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setFailOnError(boolean) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   variable applySuppression in line 33
   variable format in line 36
   variable input in line 34
   variable longBugCodes in line 32
   variable output in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/antTask/edu/umd/cs/findbugs/anttask/DataFile.java
module edu::umd::cs::findbugs::anttask::DataFile
   function getName() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setName(String) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function DataFile() in line 30
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/antTask/edu/umd/cs/findbugs/anttask/FilterBugsTask.java
module edu::umd::cs::findbugs::anttask::FilterBugsTask
   inherits from edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function addBoolOption(String,String) in line 226
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function addOption(String,String) in line 219
      6 lines of code
      2 parameters
      2 conditional paths
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function afterExecuteJavaProcess(int) in line 285
      5 lines of code
      1 parameters
      2 conditional paths
   function beforeExecuteJavaProcess() in line 277
      3 lines of code
      0 parameters
      1 conditional paths
   function checkBoolean(String,String) in line 184
      9 lines of code
      2 parameters
      3 conditional paths
   function checkParameters() in line 198
      20 lines of code
      0 parameters
      3 conditional paths
      uses variable outputFile defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable inputFile defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses function checkBoolean(String,String) defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable withSource defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable applySuppression defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable active defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable introducedByChange defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable removedByChange defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable newCode defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable removedCode defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable withMessages defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
   function configureFindbugsEngine() in line 236
      36 lines of code
      0 parameters
      3 conditional paths
      uses variable not defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses function addBoolOption(String,String) defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable withSource defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses function addOption(String,String) defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable exclude defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable include defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable annotation defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable after defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable before defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable first defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable last defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable fixed defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable present defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable absent defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable active defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable introducedByChange defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable removedByChange defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable newCode defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable removedCode defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable priority defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable clazz defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable bugPattern defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable category defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable designation defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable withMessages defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable applySuppression defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable excludeBugs defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable inputFile defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses function getName() defined in edu::umd::cs::findbugs::anttask::DataFile
      uses function getFindbugsEngine() defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable outputFile defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
   function createDataFile() in line 68
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable inputFile defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
   function setAbsent(String) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setActive(String) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAfter(String) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAnnotation(String) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setApplySuppression(String) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBefore(String) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBugPattern(String) in line 164
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setCategory(String) in line 168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setClass(String) in line 160
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDesignation(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setExclude(String) in line 93
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setExcludeBugs(String) in line 180
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFirst(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFixed(String) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setInclude(String) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setInput(String) in line 80
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setIntroducedByChange(String) in line 140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLast(String) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNewCode(String) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNot(String) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setOutput(File) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPresent(String) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPriority(String) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRemovedByChange(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRemovedCode(String) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setWithMessages(String) in line 176
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setWithSource(String) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function FilterBugsTask() in line 62
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setFailOnError(boolean) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   variable absent in line 47
   variable active in line 48
   variable after in line 41
   variable annotation in line 40
   variable applySuppression in line 35
   variable before in line 42
   variable bugPattern in line 55
   variable category in line 56
   variable clazz in line 54
   variable designation in line 57
   variable exclude in line 38
   variable excludeBugs in line 59
   variable first in line 43
   variable fixed in line 45
   variable include in line 39
   variable inputFile in line 60
   variable introducedByChange in line 49
   variable last in line 44
   variable newCode in line 51
   variable not in line 36
   variable outputFile in line 34
   variable present in line 46
   variable priority in line 53
   variable removedByChange in line 50
   variable removedCode in line 52
   variable withMessages in line 58
   variable withSource in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/antTask/edu/umd/cs/findbugs/anttask/FindBugsTask.java
module edu::umd::cs::findbugs::anttask::FindBugsTask
   inherits from edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function afterExecuteJavaProcess(int) in line 549
      15 lines of code
      1 parameters
      5 conditional paths
      uses variable ERROR_FLAG defined in edu::umd::cs::findbugs::ExitCodes
      uses variable MISSING_CLASS_FLAG defined in edu::umd::cs::findbugs::ExitCodes
      uses variable warningsProperty defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable BUGS_FOUND_FLAG defined in edu::umd::cs::findbugs::ExitCodes
      uses variable outputFileName defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function beforeExecuteJavaProcess() in line 541
      3 lines of code
      0 parameters
      1 conditional paths
   function checkParameters() in line 491
      45 lines of code
      0 parameters
      5 conditional paths
      uses variable projectFile defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable classLocations defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable auxAnalyzepath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses function getLocation() defined in edu::umd::cs::findbugs::anttask::FindBugsTask::ClassLocation
      uses variable outputFormat defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable reportLevel defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable effort defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function configureFindbugsEngine() in line 566
      119 lines of code
      0 parameters
      31 conditional paths
      uses variable projectName defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable adjustExperimental defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable conserveSpace defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable workHard defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable effort defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable sorted defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable timestampNow defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable outputFormat defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable stylesheet defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable quietErrors defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable reportLevel defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable projectFile defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable applySuppression defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable baselineBugs defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable excludeFile defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable includeFile defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable visitors defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable omitVisitors defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable chooseVisitors defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable auxClasspath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable sourcePath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable outputFileName defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable relaxed defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable noClassOk defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable onlyAnalyze defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable classLocations defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable auxAnalyzepath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function createAuxAnalyzepath() in line 421
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable auxAnalyzepath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function createAuxClasspath() in line 379
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable auxClasspath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function createClass() in line 466
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable classLocations defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function createSourcePath() in line 449
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable sourcePath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setAdjustExperimental(boolean) in line 212
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable adjustExperimental defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setApplySuppression(boolean) in line 280
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAuxAnalyzepath(Path) in line 398
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable auxAnalyzepath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setAuxAnalyzepathRef(Reference) in line 431
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createAuxAnalyzepath() defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setAuxClasspath(Path) in line 356
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable auxClasspath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setAuxClasspathRef(Reference) in line 389
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function createAuxClasspath() defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setBaselineBugs(File) in line 340
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable baselineBugs defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setChooseVisitors(String) in line 225
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setConserveSpace(boolean) in line 313
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setEffort(String) in line 297
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable effort defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setExcludeFilter(File) in line 320
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function setIncludeFilter(File) in line 331
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function setNoClassOk(boolean) in line 194
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable noClassOk defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setOmitVisitors(String) in line 232
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setOnlyAnalyze(String) in line 483
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setOutput(String) in line 239
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setOutputFile(String) in line 475
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable outputFileName defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setProjectFile(File) in line 349
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable projectFile defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setProjectName(String) in line 306
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable projectName defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setQuietErrors(boolean) in line 273
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRelaxed(boolean) in line 203
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable relaxed defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setReportLevel(String) in line 253
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSort(boolean) in line 260
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSourcePath(Path) in line 438
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable sourcePath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setSourcePathRef(Reference) in line 459
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createSourcePath() defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setStylesheet(String) in line 246
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stylesheet defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setTimestampNow(boolean) in line 266
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setVisitors(String) in line 219
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setWarningsProperty(String) in line 288
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setWorkHard(boolean) in line 184
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable workHard defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function FindBugsTask() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable adjustExperimental in line 135
   variable applySuppression in line 138
   variable auxAnalyzepath in line 143
   variable auxClasspath in line 142
   variable baselineBugs in line 137
   variable chooseVisitors in line 148
   variable classLocations in line 152
   variable conserveSpace in line 127
   variable effort in line 126
   variable excludeFile in line 140
   variable includeFile in line 141
   variable noClassOk in line 154
   variable omitVisitors in line 149
   variable onlyAnalyze in line 153
   variable outputFileName in line 150
   variable outputFormat in line 145
   variable projectFile in line 136
   variable projectName in line 132
   variable quietErrors in line 130
   variable relaxed in line 134
   variable reportLevel in line 146
   variable sorted in line 128
   variable sourcePath in line 144
   variable stylesheet in line 151
   variable timestampNow in line 129
   variable visitors in line 147
   variable warningsProperty in line 131
   variable workHard in line 133
module edu::umd::cs::findbugs::anttask::FindBugsTask::ClassLocation
   function getLocation() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setLocation(File) in line 164
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 173
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/antTask/edu/umd/cs/findbugs/anttask/FindBugsViewerTask.java
module edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   inherits from org::apache::tools::ant::Task
   function addArg(String) in line 206
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable findbugsEngine defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function createClasspath() in line 149
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable classpath defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function createPluginList() in line 179
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable pluginList defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function execute() in line 211
      protection public
      75 lines of code
      0 parameters
      11 conditional paths
      uses variable findbugsEngine defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable timeout defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable debug defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable jvmargs defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable homeDir defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable classpath defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable pluginList defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable projectFile defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable loadbugs defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable look defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable ERROR_FLAG defined in edu::umd::cs::findbugs::ExitCodes
      uses variable MISSING_CLASS_FLAG defined in edu::umd::cs::findbugs::ExitCodes
   function setClasspathRef(Reference) in line 159
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createClasspath() defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function setDebug(boolean) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHome(File) in line 141
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable homeDir defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function setJvmargs(String) in line 126
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLoadbugs(File) in line 105
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable loadbugs defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function setLook(String) in line 133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable look defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function setPluginList(Path) in line 167
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable pluginList defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function setPluginListRef(Reference) in line 189
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createPluginList() defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function setProjectFile(File) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable projectFile defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function setTimeout(long) in line 198
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable timeout defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function FindBugsViewerTask() in line 97
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable classpath in line 91
   variable debug in line 84
   variable DEFAULT_TIMEOUT in line 81
   variable findbugsEngine in line 94
   variable homeDir in line 90
   variable jvmargs in line 88
   variable loadbugs in line 86
   variable look in line 89
   variable pluginList in line 92
   variable projectFile in line 85
   variable timeout in line 87
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/antTask/edu/umd/cs/findbugs/anttask/MineBugHistoryTask.java
module edu::umd::cs::findbugs::anttask::MineBugHistoryTask
   inherits from edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function addBoolOption(String,String) in line 101
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function afterExecuteJavaProcess(int) in line 134
      5 lines of code
      1 parameters
      2 conditional paths
   function beforeExecuteJavaProcess() in line 126
      3 lines of code
      0 parameters
      1 conditional paths
   function checkBoolean(String,String) in line 75
      9 lines of code
      2 parameters
      3 conditional paths
   function checkParameters() in line 89
      11 lines of code
      0 parameters
      2 conditional paths
      uses variable inputFile defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
      uses function checkBoolean(String,String) defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
      uses variable formatDates defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
      uses variable noTabs defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
      uses variable summary defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
   function configureFindbugsEngine() in line 111
      10 lines of code
      0 parameters
      2 conditional paths
      uses function addBoolOption(String,String) defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
      uses variable formatDates defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
      uses variable noTabs defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
      uses variable summary defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable inputFile defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
      uses function getName() defined in edu::umd::cs::findbugs::anttask::DataFile
      uses variable outputFile defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
   function createDataFile() in line 46
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable inputFile defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
   function setFormatDates(String) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setInput(String) in line 58
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setNoTabs(String) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setOutput(File) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSummary(String) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function MineBugHistoryTask() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function setFailOnError(boolean) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   variable formatDates in line 36
   variable inputFile in line 39
   variable noTabs in line 37
   variable outputFile in line 35
   variable summary in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/antTask/edu/umd/cs/findbugs/anttask/SetBugDatabaseInfoTask.java
module edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
   inherits from edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function addBoolOption(String,String) in line 122
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function addOption(String,String) in line 115
      6 lines of code
      2 parameters
      2 conditional paths
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable name defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
   function afterExecuteJavaProcess(int) in line 160
      5 lines of code
      1 parameters
      2 conditional paths
   function beforeExecuteJavaProcess() in line 152
      3 lines of code
      0 parameters
      1 conditional paths
   function checkBoolean(String,String) in line 86
      9 lines of code
      2 parameters
      3 conditional paths
   function checkParameters() in line 100
      14 lines of code
      0 parameters
      3 conditional paths
      uses variable outputFile defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable inputFile defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses function checkBoolean(String,String) defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable withMessages defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable resetSource defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
   function configureFindbugsEngine() in line 132
      15 lines of code
      0 parameters
      3 conditional paths
      uses function addOption(String,String) defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable name defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable timestamp defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable source defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable findSource defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable suppress defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses function addBoolOption(String,String) defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable withMessages defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable resetSource defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable inputFile defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable outputFile defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
   function setFindSource(String) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setInput(String) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setName(String) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setOutput(String) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setResetSource(String) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSource(String) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSuppress(String) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setTimestamp(String) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setWithMessages(String) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function SetBugDatabaseInfoTask() in line 45
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function setFailOnError(boolean) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   variable findSource in line 39
   variable inputFile in line 43
   variable name in line 36
   variable outputFile in line 35
   variable resetSource in line 42
   variable source in line 38
   variable suppress in line 40
   variable timestamp in line 37
   variable withMessages in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/antTask/edu/umd/cs/findbugs/anttask/UnionBugs.java
module edu::umd::cs::findbugs::anttask::UnionBugs
   inherits from org::apache::tools::ant::Task
   function addFileset(FileSet) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable sets defined in edu::umd::cs::findbugs::anttask::UnionBugs
   function copyFile(File,File) in line 146
      13 lines of code
      2 parameters
      4 conditional paths
   function createCommandArgumentsArray(List< File >) in line 123
      15 lines of code
      1 parameters
      2 conditional paths
      uses variable into defined in edu::umd::cs::findbugs::anttask::UnionBugs
   function createListOfAllFilesToMerge() in line 112
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable sets defined in edu::umd::cs::findbugs::anttask::UnionBugs
   function execute() in line 80
      protection public
      31 lines of code
      0 parameters
      5 conditional paths
      uses function createListOfAllFilesToMerge() defined in edu::umd::cs::findbugs::anttask::UnionBugs
      uses variable into defined in edu::umd::cs::findbugs::anttask::UnionBugs
      uses function copyFile(File,File) defined in edu::umd::cs::findbugs::anttask::UnionBugs
      uses function createCommandArgumentsArray(List< File >) defined in edu::umd::cs::findbugs::anttask::UnionBugs
   function setTo(String) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable into defined in edu::umd::cs::findbugs::anttask::UnionBugs
   variable into in line 58
   variable sets in line 57
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/antTask/edu/umd/cs/findbugs/anttask/UnionBugs2.java
module edu::umd::cs::findbugs::anttask::UnionBugs2
   inherits from edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function afterExecuteJavaProcess(int) in line 78
      5 lines of code
      1 parameters
      2 conditional paths
   function beforeExecuteJavaProcess() in line 85
      3 lines of code
      0 parameters
      1 conditional paths
   function checkParameters() in line 67
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable to defined in edu::umd::cs::findbugs::anttask::UnionBugs2
      uses variable fileSets defined in edu::umd::cs::findbugs::anttask::UnionBugs2
   function configureFindbugsEngine() in line 90
      12 lines of code
      0 parameters
      3 conditional paths
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable to defined in edu::umd::cs::findbugs::anttask::UnionBugs2
      uses variable fileSets defined in edu::umd::cs::findbugs::anttask::UnionBugs2
   function setFileset(FileSet) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setTo(String) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function UnionBugs2() in line 61
      4 lines of code
      0 parameters
      1 conditional paths
      uses function setFailOnError(boolean) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   variable fileSets in line 48
   variable to in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/infonodeJava/edu/umd/cs/findbugs/gui2/DockLayout.java
module edu::umd::cs::findbugs::gui2::DockLayout
   inherits from edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
   function createWindowMenu() in line 126
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable viewMenuItems defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable summaryView defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable commentsView defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable sourceView defined in edu::umd::cs::findbugs::gui2::DockLayout
   function initialize() in line 144
      protection public
      55 lines of code
      0 parameters
      2 conditional paths
      uses variable topView defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable summaryView defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable commentsView defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable sourceView defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable rootWindow defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable tabs defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses function getDockingLayout() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable viewMenuItems defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses function windowClosed(DockingWindow) defined in edu::umd::cs::findbugs::gui2::DockLayout::DockParentListener
   function makeCommentsVisible() in line 203
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable commentsView defined in edu::umd::cs::findbugs::gui2::DockLayout
   function makeSourceVisible() in line 211
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceView defined in edu::umd::cs::findbugs::gui2::DockLayout
   function saveState() in line 219
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
      uses variable rootWindow defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses function setDockingLayout(byte[]) defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setSourceTitle(final String) in line 236
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceView defined in edu::umd::cs::findbugs::gui2::DockLayout
   function DockLayout(MainFrame) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable commentsView in line 108
   variable rootWindow in line 110
   variable sourceView in line 111
   variable summaryView in line 112
   variable tabs in line 113
   variable topView in line 115
   variable viewMenuItems in line 116
module edu::umd::cs::findbugs::gui2::DockLayout::DockParentListener
   inherits from net::infonode::docking::DockingWindowAdapter
   function windowClosed(DockingWindow) in line 60
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
module edu::umd::cs::findbugs::gui2::DockLayout::ViewMenuItem
   inherits from javax::swing::JCheckBoxMenuItem
   inherits from java::awt::event::ItemListener
   function itemStateChanged(ItemEvent) in line 83
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable rootWindow defined in edu::umd::cs::findbugs::gui2::DockLayout
   function ViewMenuItem(View,String) in line 74
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   variable view in line 72
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/AbstractBugReporter.java
module edu::umd::cs::findbugs::AbstractBugReporter
   inherits from edu::umd::cs::findbugs::BugReporter
   abstract class
   function addObserver(BugReporterObserver) in line 359
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable observerList defined in edu::umd::cs::findbugs::AbstractBugReporter
   function doReportBug(BugInstance) in line 384
      1 lines of code
      1 parameters
      1 conditional paths
   function getMissingClasses() in line 306
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable missingClassMessageList defined in edu::umd::cs::findbugs::AbstractBugReporter
   function getMissingClassName(ClassNotFoundException) in line 186
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function getProjectStats() in line 363
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable projectStats defined in edu::umd::cs::findbugs::AbstractBugReporter
   function getQueuedErrors() in line 299
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable errorSet defined in edu::umd::cs::findbugs::AbstractBugReporter
   function isValidMissingClassMessage(String) in line 219
      32 lines of code
      1 parameters
      6 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function logError(String) in line 285
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable verbosityLevel defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable SILENT defined in edu::umd::cs::findbugs::BugReporter
      uses function Error(int,String) defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable errorCount defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable errorSet defined in edu::umd::cs::findbugs::AbstractBugReporter
   function logError(String,Throwable) in line 310
      protection public
      31 lines of code
      2 parameters
      6 conditional paths
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses variable verbosityLevel defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable SILENT defined in edu::umd::cs::findbugs::BugReporter
      uses function Error(int,String) defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable errorCount defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable errorSet defined in edu::umd::cs::findbugs::AbstractBugReporter
   function logMissingClass(String) in line 271
      6 lines of code
      1 parameters
      2 conditional paths
      uses function isValidMissingClassMessage(String) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable missingClassMessageList defined in edu::umd::cs::findbugs::AbstractBugReporter
   function notifyObservers(BugInstance) in line 372
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable observerList defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function doReportBug(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function reportAnalysisError(AnalysisError) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function reportAnalysisError(AnalysisError) in line 391
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reportBug(BugInstance) in line 141
      protection public
      35 lines of code
      1 parameters
      9 conditional paths
      uses variable priorityThreshold defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable analysisUnderway defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEBUG defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugRank() defined in edu::umd::cs::findbugs::BugInstance
      uses variable rankThreshold defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function doReportBug(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function reportBugsFromXml(@WillClose InputStream,Project) in line 177
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function doReportBug(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function reportMissingClass(ClassNotFoundException) in line 206
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable DEBUG_MISSING_CLASSES defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable verbosityLevel defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable SILENT defined in edu::umd::cs::findbugs::BugReporter
      uses function logMissingClass(String) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function getMissingClassName(ClassNotFoundException) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function reportMissingClass(ClassDescriptor) in line 255
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable DEBUG_MISSING_CLASSES defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable verbosityLevel defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable SILENT defined in edu::umd::cs::findbugs::BugReporter
      uses function logMissingClass(String) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function reportMissingClass(String) in line 398
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reportQueuedErrors() in line 342
      protection public
      16 lines of code
      0 parameters
      3 conditional paths
      uses variable errorSet defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function getSequence() defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses function reportAnalysisError(AnalysisError) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable missingClassMessageList defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function reportSkippedAnalysis(MethodDescriptor) in line 282
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setErrorVerbosity(int) in line 129
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPriorityThreshold(int) in line 133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRankThreshold(int) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractBugReporter() in line 117
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable verbosityLevel defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable NORMAL defined in edu::umd::cs::findbugs::BugReporter
      uses variable missingClassMessageList defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable errorSet defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable observerList defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable projectStats defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable rankThreshold defined in edu::umd::cs::findbugs::AbstractBugReporter
   variable analysisUnderway in line 109
   variable DEBUG in line 47
   variable DEBUG_MISSING_CLASSES in line 48
   variable errorCount in line 110
   variable errorSet in line 113
   variable missingClassMessageList in line 112
   variable observerList in line 114
   variable priorityThreshold in line 107
   variable projectStats in line 115
   variable rankThreshold in line 108
   variable verbosityLevel in line 106
module edu::umd::cs::findbugs::AbstractBugReporter::Error
   function equals(Object) in line 88
      protection public
      16 lines of code
      1 parameters
      5 conditional paths
      uses function Error(int,String) defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable cause defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses function equals(Object) defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function getCause() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cause defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function getMessage() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function getSequence() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function hashCode() in line 78
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable cause defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function Error(int,String) in line 55
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function Error(int,String,Throwable) in line 59
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable cause defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   variable cause in line 53
   variable message in line 52
   variable sequence in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/AddAnnotation.java
module edu::umd::cs::findbugs::AddAnnotation
   function execute() in line 55
      protection public
      18 lines of code
      0 parameters
      4 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::AddAnnotation
      uses function iterator() defined in edu::umd::cs::findbugs::BugCollection
      uses function annotationTextContainsWord(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable annotation defined in edu::umd::cs::findbugs::AddAnnotation
      uses function getAnnotationText() defined in edu::umd::cs::findbugs::BugInstance
      uses function setAnnotationText(String,@CheckForNull BugCollection) defined in edu::umd::cs::findbugs::BugInstance
   function getBugCollection() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::AddAnnotation
   function getProject() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::AddAnnotation
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
   function main(String[]) in line 75
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses variable annotation defined in edu::umd::cs::findbugs::AddAnnotation
      uses function AddAnnotation(BugCollection,String) defined in edu::umd::cs::findbugs::AddAnnotation
      uses function execute() defined in edu::umd::cs::findbugs::AddAnnotation
      uses function getBugCollection() defined in edu::umd::cs::findbugs::AddAnnotation
      uses function writeXML(String) defined in edu::umd::cs::findbugs::BugCollection
   function AddAnnotation(BugCollection,String) in line 36
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::AddAnnotation
      uses variable annotation defined in edu::umd::cs::findbugs::AddAnnotation
   function AddAnnotation(String,String) in line 41
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable annotation defined in edu::umd::cs::findbugs::AddAnnotation
      uses variable bugCollection defined in edu::umd::cs::findbugs::AddAnnotation
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
   variable annotation in line 34
   variable bugCollection in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/AddMessages.java
module edu::umd::cs::findbugs::AddMessages
   function addBugCategories(Set< String >) in line 110
      23 lines of code
      1 parameters
      5 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::AddMessages
      uses function getBugCategoryDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses function getBugCategory(String) defined in edu::umd::cs::findbugs::I18N
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugCategory
      uses function getDetailText() defined in edu::umd::cs::findbugs::BugCategory
   function addBugCodes(Set< String >) in line 139
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::AddMessages
      uses function getBugTypeDescription(String) defined in edu::umd::cs::findbugs::I18N
   function addBugPatterns(Set< String >) in line 149
      19 lines of code
      1 parameters
      3 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::AddMessages
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::I18N
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses function getDetailText() defined in edu::umd::cs::findbugs::BugPattern
   function execute() in line 61
      protection public
      43 lines of code
      0 parameters
      3 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::AddMessages
      uses variable bugCollection defined in edu::umd::cs::findbugs::AddMessages
      uses function iterator() defined in edu::umd::cs::findbugs::BugCollection
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function toString(ClassAnnotation) defined in edu::umd::cs::findbugs::BugAnnotation
      uses function addBugCategories(Set< String >) defined in edu::umd::cs::findbugs::AddMessages
      uses function addBugPatterns(Set< String >) defined in edu::umd::cs::findbugs::AddMessages
      uses function addBugCodes(Set< String >) defined in edu::umd::cs::findbugs::AddMessages
   function main(String[]) in line 170
      protection public
      26 lines of code
      1 parameters
      2 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable document defined in edu::umd::cs::findbugs::AddMessages
      uses function toDocument() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function AddMessages(BugCollection,Document) defined in edu::umd::cs::findbugs::AddMessages
      uses function execute() defined in edu::umd::cs::findbugs::AddMessages
   function AddMessages(BugCollection,Document) in line 53
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::AddMessages
      uses variable document defined in edu::umd::cs::findbugs::AddMessages
   variable bugCollection in line 44
   variable document in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/AnalysisCacheToRepositoryAdapter.java
module edu::umd::cs::findbugs::AnalysisCacheToRepositoryAdapter
   inherits from org::apache::bcel::util::Repository
   function clear() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function findClass(String) in line 56
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function probeClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function getClassPath() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function loadClass(String) in line 72
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function loadClass(Class) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function loadClass(String) defined in edu::umd::cs::findbugs::AnalysisCacheToRepositoryAdapter
   function removeClass(JavaClass) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function storeClass(JavaClass) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AnalysisCacheToRepositoryAdapter() in line 43
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/AnalysisError.java
module edu::umd::cs::findbugs::AnalysisError
   function getException() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exception defined in edu::umd::cs::findbugs::AnalysisError
   function getExceptionMessage() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionMessage defined in edu::umd::cs::findbugs::AnalysisError
   function getMessage() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AnalysisError
   function getNestedExceptionMessage() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nestedExceptionMessage defined in edu::umd::cs::findbugs::AnalysisError
   function getNestedStackTrace() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nestedStackTrace defined in edu::umd::cs::findbugs::AnalysisError
   function getStackTrace() in line 117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stackTrace defined in edu::umd::cs::findbugs::AnalysisError
   function getStackTraceAsStringArray(Throwable) in line 51
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable exception defined in edu::umd::cs::findbugs::AnalysisError
   function setExceptionMessage(String) in line 83
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable exceptionMessage defined in edu::umd::cs::findbugs::AnalysisError
   function setMessage(String) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AnalysisError
   function setStackTrace(String[]) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stackTrace defined in edu::umd::cs::findbugs::AnalysisError
   function AnalysisError(String) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AnalysisError
   function AnalysisError(String,Throwable) in line 32
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AnalysisError
      uses variable exception defined in edu::umd::cs::findbugs::AnalysisError
      uses variable exceptionMessage defined in edu::umd::cs::findbugs::AnalysisError
      uses variable stackTrace defined in edu::umd::cs::findbugs::AnalysisError
      uses function getStackTraceAsStringArray(Throwable) defined in edu::umd::cs::findbugs::AnalysisError
      uses variable nestedExceptionMessage defined in edu::umd::cs::findbugs::AnalysisError
      uses variable nestedStackTrace defined in edu::umd::cs::findbugs::AnalysisError
   variable exception in line 16
   variable exceptionMessage in line 12
   variable message in line 11
   variable nestedExceptionMessage in line 14
   variable nestedStackTrace in line 15
   variable stackTrace in line 13
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/AnalysisLocal.java
module edu::umd::cs::findbugs::AnalysisLocal
   function get() in line 35
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
   function getMap() in line 30
      4 lines of code
      0 parameters
      1 conditional paths
   function initialValue() in line 25
      3 lines of code
      0 parameters
      1 conditional paths
   function remove() in line 55
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function set(T) in line 51
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/AnalysisOptions.java
module edu::umd::cs::findbugs::AnalysisOptions
   function AnalysisOptions(boolean) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mergeSimilarWarnings defined in edu::umd::cs::findbugs::AnalysisOptions
   variable abridgedMessages in line 37
      protection public
   variable analysisFeatureSettingList in line 57
      protection public
   variable applySuppression in line 67
      protection public
   variable mergeSimilarWarnings in line 72
      protection public
   variable noClassOk in line 77
      protection public
   variable relaxedReportingMode in line 32
      protection public
   variable scanNestedArchives in line 62
      protection public
   variable sourceInfoFileName in line 52
      protection public
   variable trainingInputDir in line 42
      protection public
   variable trainingOutputDir in line 47
      protection public
   variable userAnnotationSync in line 82
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/Analyze.java
module edu::umd::cs::findbugs::Analyze
   function containsConcreteClasses(Set< JavaClass >) in line 44
      6 lines of code
      1 parameters
      3 conditional paths
   function deepInstanceOf(String,String) in line 140
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function deepInstanceOf(JavaClass,JavaClass) in line 157
      protection public
      53 lines of code
      2 parameters
      15 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getTransitiveCommonSubtypes(ClassDescriptor,ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function isAbstract() defined in edu::umd::cs::findbugs::ba::XClass
      uses function isInterface() defined in edu::umd::cs::findbugs::ba::XClass
   function getComponentClass(String) in line 98
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function isDeepRemote(String) in line 67
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable remote defined in edu::umd::cs::findbugs::Analyze
      uses function getComponentClass(String) defined in edu::umd::cs::findbugs::Analyze
      uses function deepInstanceOf(String,String) defined in edu::umd::cs::findbugs::Analyze
   function isDeepSerializable(String) in line 51
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable storedException defined in edu::umd::cs::findbugs::Analyze
      uses function isPrimitiveComponentClass(String) defined in edu::umd::cs::findbugs::Analyze
      uses function getComponentClass(String) defined in edu::umd::cs::findbugs::Analyze
   function isDeepSerializable(JavaClass) in line 108
      protection public
      19 lines of code
      1 parameters
      6 conditional paths
      uses variable storedException defined in edu::umd::cs::findbugs::Analyze
      uses function deepInstanceOf(String,String) defined in edu::umd::cs::findbugs::Analyze
      uses variable serializable defined in edu::umd::cs::findbugs::Analyze
      uses variable collection defined in edu::umd::cs::findbugs::Analyze
      uses variable map defined in edu::umd::cs::findbugs::Analyze
      uses variable comparator defined in edu::umd::cs::findbugs::Analyze
   function isPrimitiveComponentClass(String) in line 84
      13 lines of code
      1 parameters
      2 conditional paths
   variable collection in line 20
   variable comparator in line 21
   variable map in line 23
   variable remote in line 24
   variable serializable in line 18
   variable storedException in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/AppVersion.java
module edu::umd::cs::findbugs::AppVersion
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   inherits from Cloneable
   function clone() in line 71
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getCodeSize() in line 171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeSize defined in edu::umd::cs::findbugs::AppVersion
   function getNumClasses() in line 158
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable numClasses defined in edu::umd::cs::findbugs::AppVersion
   function getReleaseName() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable releaseName defined in edu::umd::cs::findbugs::AppVersion
   function getSequenceNumber() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AppVersion
   function getTimestamp() in line 89
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::AppVersion
   function setCodeSize(int) in line 164
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable codeSize defined in edu::umd::cs::findbugs::AppVersion
   function setNumClasses(int) in line 151
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable numClasses defined in edu::umd::cs::findbugs::AppVersion
   function setReleaseName(String) in line 113
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable releaseName defined in edu::umd::cs::findbugs::AppVersion
   function setTimestamp(long) in line 105
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::AppVersion
   function toString() in line 135
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AppVersion
      uses variable timestamp defined in edu::umd::cs::findbugs::AppVersion
      uses variable releaseName defined in edu::umd::cs::findbugs::AppVersion
      uses variable codeSize defined in edu::umd::cs::findbugs::AppVersion
   function writeXML(XMLOutput) in line 121
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::AppVersion
      uses variable sequence defined in edu::umd::cs::findbugs::AppVersion
      uses variable timestamp defined in edu::umd::cs::findbugs::AppVersion
      uses variable releaseName defined in edu::umd::cs::findbugs::AppVersion
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable codeSize defined in edu::umd::cs::findbugs::AppVersion
      uses variable numClasses defined in edu::umd::cs::findbugs::AppVersion
   function AppVersion(long,long,String) in line 50
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AppVersion
   function AppVersion(long,Date,String) in line 55
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AppVersion
   function AppVersion(long) in line 60
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AppVersion
   variable codeSize in line 48
   variable ELEMENT_NAME in line 42
      protection public
   variable numClasses in line 47
   variable releaseName in line 46
   variable sequence in line 44
   variable timestamp in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/asm/AbstractFBMethodVisitor.java
module edu::umd::cs::findbugs::asm::AbstractFBMethodVisitor
   inherits from org::objectweb::asm::MethodAdapter
   inherits from edu::umd::cs::findbugs::asm::FBMethodVisitor
   abstract class
   function getPC() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitOffset(int) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractFBMethodVisitor() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/asm/ClassNodeDetector.java
module edu::umd::cs::findbugs::asm::ClassNodeDetector
   inherits from org::objectweb::asm::tree::ClassNode
   inherits from edu::umd::cs::findbugs::Detector2
   abstract class
   function finishPass() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDetectorClassName() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitClass(ClassDescriptor) in line 54
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function accept(ClassVisitor,Attribute[],int) defined in edu::umd::cs::findbugs::asm::FBClassReader
   function ClassNodeDetector(BugReporter) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::asm::ClassNodeDetector
   variable bugReporter in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/asm/FBClassReader.java
module edu::umd::cs::findbugs::asm::FBClassReader
   inherits from org::objectweb::asm::ClassReader
   function accept(ClassVisitor,Attribute[],int) in line 42
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function readLabel(int,Label[]) in line 48
      11 lines of code
      2 parameters
      3 conditional paths
   function FBClassReader(byte[]) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function FBClassReader(byte[],int,int) in line 37
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
module edu::umd::cs::findbugs::asm::FBClassReader::MyClassAdapter
   inherits from org::objectweb::asm::ClassAdapter
   function visitMethod(int,String,String,String,String[]) in line 67
      protection public
      9 lines of code
      5 parameters
      2 conditional paths
   function MyClassAdapter(ClassVisitor) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::asm::FBClassReader::MyMethodAdapter
   inherits from org::objectweb::asm::MethodAdapter
   function visitLabel(Label) in line 85
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
   function MyMethodAdapter(FBMethodVisitor) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::asm::FBClassReader::MyLabel
   inherits from org::objectweb::asm::Label
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/asm/FBMethodVisitor.java
module edu::umd::cs::findbugs::asm::FBMethodVisitor
   inherits from org::objectweb::asm::MethodVisitor
   function visitOffset(int) in line 25
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/AbstractBlockOrder.java
module edu::umd::cs::findbugs::ba::AbstractBlockOrder
   inherits from edu::umd::cs::findbugs::ba::BlockOrder
   abstract class
   function blockIterator() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable blockList defined in edu::umd::cs::findbugs::ba::AbstractBlockOrder
   function AbstractBlockOrder(CFG,Comparator< BasicBlock >) in line 38
      protection public
      17 lines of code
      2 parameters
      3 conditional paths
      uses function getNumBasicBlocks() defined in edu::umd::cs::findbugs::ba::CFG
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses variable blockList defined in edu::umd::cs::findbugs::ba::AbstractBlockOrder
   variable blockList in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/AbstractClassMember.java
module edu::umd::cs::findbugs::ba::AbstractClassMember
   inherits from edu::umd::cs::findbugs::ba::ClassMember
   abstract class
   function equals(Object) in line 159
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function AbstractClassMember(@DottedClassName String,String,String,int) defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable name defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable signature defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getAccessFlags() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getClassDescriptor() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassDescriptorForDottedClassName(@DottedClassName String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getClassName() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getName() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getPackageName() in line 75
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getSignature() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function hashCode() in line 151
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable name defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable signature defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isFinal() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isPrivate() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isProtected() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isPublic() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isReferenceType() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isResolved() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable resolved defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isStatic() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function toString() in line 169
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable name defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function AbstractClassMember(@DottedClassName String,String,String,int) in line 40
      19 lines of code
      4 parameters
      5 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable signature defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable name defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   variable accessFlags in line 31
   variable cachedHashCode in line 33
   variable className in line 28
   variable name in line 29
   variable resolved in line 32
   variable signature in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/AbstractDataflow.java
module edu::umd::cs::findbugs::ba::AbstractDataflow
   inherits from Dataflow< Fact, AnalysisType >
   function getFactOnEdge(Edge) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractDataflow(CFG,AnalysisType) in line 41
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/AbstractDataflowAnalysis.java
module edu::umd::cs::findbugs::ba::AbstractDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::BasicAbstractDataflowAnalysis
   abstract class
   function getFactAfterLocation(Location) in line 89
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function getFactAtLocation(Location) in line 72
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function isFactValid(Fact) in line 61
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function transfer(BasicBlock,@CheckForNull InstructionHandle,Fact,Fact) in line 103
      protection public
      20 lines of code
      4 parameters
      1 conditional paths
   function transferInstruction(InstructionHandle,BasicBlock,Fact) in line 54
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   variable DEBUG in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/AbstractDataflowTestDriver.java
module edu::umd::cs::findbugs::ba::AbstractDataflowTestDriver
   abstract class
   function configureAnalysisContext(AnalysisContext) in line 62
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable KNOB_LIST defined in edu::umd::cs::findbugs::ba::AbstractDataflowTestDriver
      uses function setBoolProperty(int,boolean) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function overrideIsForwards() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AbstractDataflowTestDriver() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable KNOB_LIST in line 47
   variable overrideIsForwards in line 31
module edu::umd::cs::findbugs::ba::AbstractDataflowTestDriver::Knob
   function Knob(String,int) in line 37
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable systemPropertyName defined in edu::umd::cs::findbugs::ba::AbstractDataflowTestDriver::Knob
      uses variable analysisProperty defined in edu::umd::cs::findbugs::ba::AbstractDataflowTestDriver::Knob
   variable analysisProperty in line 35
      protection public
   variable systemPropertyName in line 34
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/AbstractDominatorsAnalysis.java
module edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
   inherits from BasicAbstractDataflowAnalysis< BitSet >
   abstract class
   function copy(BitSet,BitSet) in line 84
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function createFact() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAllDominatedBy(BasicBlock) in line 152
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getResultFact(BasicBlock) defined in BasicAbstractDataflowAnalysis< BitSet >
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function getAllDominatorsOf(BasicBlock) in line 139
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getResultFact(BasicBlock) defined in BasicAbstractDataflowAnalysis< BitSet >
   function initEntryFact(BitSet) in line 89
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function isTop(BitSet) in line 94
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function getNumBasicBlocks() defined in edu::umd::cs::findbugs::ba::CFG
   function makeFactTop(BitSet) in line 99
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function getNumBasicBlocks() defined in edu::umd::cs::findbugs::ba::CFG
   function meetInto(BitSet,Edge,BitSet) in line 118
      protection public
      12 lines of code
      3 parameters
      4 conditional paths
      uses variable edgeChooser defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function choose(Edge) defined in edu::umd::cs::findbugs::ba::EdgeChooser
      uses function isTop(BitSet) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function copy(BitSet,BitSet) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
   function same(BitSet,BitSet) in line 104
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function transfer(BasicBlock,@CheckForNull InstructionHandle,BitSet,BitSet) in line 108
      protection public
      9 lines of code
      4 parameters
      2 conditional paths
      uses function copy(BitSet,BitSet) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function isTop(BitSet) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
   function AbstractDominatorsAnalysis(CFG,final boolean) in line 58
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
   function AbstractDominatorsAnalysis(CFG,EdgeChooser) in line 75
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable edgeChooser defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
   variable cfg in line 49
   variable edgeChooser in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/AbstractField.java
module edu::umd::cs::findbugs::ba::AbstractField
   inherits from edu::umd::cs::findbugs::ba::AbstractClassMember
   inherits from edu::umd::cs::findbugs::ba::XField
   abstract class
   function getFieldDescriptor() in line 45
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isSynthetic() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getAccessFlags() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isVolatile() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getAccessFlags() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function AbstractField(@DottedClassName String,String,String,int) in line 30
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/AbstractFrameModelingVisitor.java
module edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   inherits from org::apache::bcel::classfile::Visitor
   abstract class
   function analyzeInstruction(Instruction) in line 74
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function getCPG() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefaultValue() in line 126
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getFrame() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLocation() in line 117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumWordsConsumed(Instruction) in line 131
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function getNumWordsProduced(Instruction) in line 141
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function handleLoadInstruction(LoadInstruction) in line 278
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
   function handleNormalInstruction(Instruction) in line 299
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function handleStoreInstruction(StoreInstruction) in line 254
      protection public
      18 lines of code
      1 parameters
      1 conditional paths
   function illegalBytecode(Instruction) in line 153
      3 lines of code
      1 parameters
      1 conditional paths
   function modelInstruction(Instruction,int,int,Value) in line 327
      protection public
      24 lines of code
      4 parameters
      1 conditional paths
   function modelNormalInstruction(Instruction,int,int) in line 311
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
   function setFrameAndLocation(FrameType,Location) in line 98
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visitAALOAD(AALOAD) in line 924
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitAASTORE(AASTORE) in line 936
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitACONST_NULL(ACONST_NULL) in line 524
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitAllocationInstruction(AllocationInstruction) in line 218
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitALOAD(ALOAD) in line 380
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitANEWARRAY(ANEWARRAY) in line 1032
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitARETURN(ARETURN) in line 940
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitArithmeticInstruction(ArithmeticInstruction) in line 206
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitArrayInstruction(ArrayInstruction) in line 215
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitARRAYLENGTH(ARRAYLENGTH) in line 568
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitASTORE(ASTORE) in line 356
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitATHROW(ATHROW) in line 560
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitBALOAD(BALOAD) in line 860
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitBASTORE(BASTORE) in line 544
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitBIPUSH(BIPUSH) in line 692
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitBranchInstruction(BranchInstruction) in line 167
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitBREAKPOINT(BREAKPOINT) in line 516
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitCALOAD(CALOAD) in line 588
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitCASTORE(CASTORE) in line 680
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitCHECKCAST(CHECKCAST) in line 548
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitConstantPushInstruction(ConstantPushInstruction) in line 227
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitConversionInstruction(ConversionInstruction) in line 179
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitCPInstruction(CPInstruction) in line 209
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitD2F(D2F) in line 952
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitD2I(D2I) in line 928
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitD2L(D2L) in line 880
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDADD(DADD) in line 600
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDALOAD(DALOAD) in line 720
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDASTORE(DASTORE) in line 652
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDCMPG(DCMPG) in line 876
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDCMPL(DCMPL) in line 564
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDCONST(DCONST) in line 616
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDDIV(DDIV) in line 660
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDLOAD(DLOAD) in line 384
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDMUL(DMUL) in line 804
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDNEG(DNEG) in line 968
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDREM(DREM) in line 580
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDRETURN(DRETURN) in line 648
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDSTORE(DSTORE) in line 360
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDSUB(DSUB) in line 728
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDUP(DUP) in line 412
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function visitDUP2(DUP2) in line 448
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function visitDUP2_X1(DUP2_X1) in line 461
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function visitDUP2_X2(DUP2_X2) in line 476
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
   function visitDUP_X1(DUP_X1) in line 422
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function visitDUP_X2(DUP_X2) in line 434
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function visitExceptionThrower(ExceptionThrower) in line 230
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitF2D(F2D) in line 740
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitF2I(F2I) in line 964
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitF2L(F2L) in line 696
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFADD(FADD) in line 1040
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFALOAD(FALOAD) in line 832
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFASTORE(FASTORE) in line 904
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFCMPG(FCMPG) in line 552
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFCMPL(FCMPL) in line 1008
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFCONST(FCONST) in line 852
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFDIV(FDIV) in line 976
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFieldInstruction(FieldInstruction) in line 173
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitFieldOrMethod(FieldOrMethod) in line 224
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitFLOAD(FLOAD) in line 388
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFMUL(FMUL) in line 700
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFNEG(FNEG) in line 944
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFREM(FREM) in line 684
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFRETURN(FRETURN) in line 1036
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFSTORE(FSTORE) in line 364
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFSUB(FSUB) in line 708
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGETFIELD(GETFIELD) in line 820
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGETSTATIC(GETSTATIC) in line 528
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGOTO(GOTO) in line 956
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGOTO_W(GOTO_W) in line 948
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGotoInstruction(GotoInstruction) in line 188
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitI2B(I2B) in line 980
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitI2C(I2C) in line 1012
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitI2D(I2D) in line 596
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitI2F(I2F) in line 556
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitI2L(I2L) in line 744
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitI2S(I2S) in line 752
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIADD(IADD) in line 996
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIALOAD(IALOAD) in line 656
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIAND(IAND) in line 608
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIASTORE(IASTORE) in line 768
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitICONST(ICONST) in line 972
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIDIV(IDIV) in line 672
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ACMPEQ(IF_ACMPEQ) in line 864
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ACMPNE(IF_ACMPNE) in line 748
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ICMPEQ(IF_ICMPEQ) in line 932
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ICMPGE(IF_ICMPGE) in line 664
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ICMPGT(IF_ICMPGT) in line 736
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ICMPLE(IF_ICMPLE) in line 812
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ICMPLT(IF_ICMPLT) in line 532
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ICMPNE(IF_ICMPNE) in line 912
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIFEQ(IFEQ) in line 756
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIFGE(IFGE) in line 584
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIFGT(IFGT) in line 892
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIfInstruction(IfInstruction) in line 176
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitIFLE(IFLE) in line 840
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIFLT(IFLT) in line 540
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIFNE(IFNE) in line 808
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIFNONNULL(IFNONNULL) in line 800
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIFNULL(IFNULL) in line 624
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIINC(IINC) in line 644
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitILOAD(ILOAD) in line 392
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIMPDEP1(IMPDEP1) in line 508
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIMPDEP2(IMPDEP2) in line 512
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIMUL(IMUL) in line 992
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitINEG(INEG) in line 780
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitINSTANCEOF(INSTANCEOF) in line 836
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitInvokeInstruction(InvokeInstruction) in line 212
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitINVOKEINTERFACE(INVOKEINTERFACE) in line 776
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitINVOKESPECIAL(INVOKESPECIAL) in line 604
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitINVOKESTATIC(INVOKESTATIC) in line 572
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitINVOKEVIRTUAL(INVOKEVIRTUAL) in line 900
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIOR(IOR) in line 760
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIREM(IREM) in line 764
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIRETURN(IRETURN) in line 908
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitISHL(ISHL) in line 1024
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitISHR(ISHR) in line 636
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitISTORE(ISTORE) in line 368
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitISUB(ISUB) in line 960
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIUSHR(IUSHR) in line 856
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIXOR(IXOR) in line 896
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitJSR(JSR) in line 704
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitJSR_W(JSR_W) in line 788
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitJsrInstruction(JsrInstruction) in line 185
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitL2D(L2D) in line 884
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitL2F(L2F) in line 732
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitL2I(L2I) in line 632
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLADD(LADD) in line 824
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLALOAD(LALOAD) in line 1028
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLAND(LAND) in line 668
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLASTORE(LASTORE) in line 592
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLCMP(LCMP) in line 784
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLCONST(LCONST) in line 576
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLDC(LDC) in line 688
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLDC2_W(LDC2_W) in line 816
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLDIV(LDIV) in line 916
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLLOAD(LLOAD) in line 396
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLMUL(LMUL) in line 1016
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLNEG(LNEG) in line 984
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLoadClass(LoadClass) in line 170
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitLoadInstruction(LoadInstruction) in line 233
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitLocalVariableInstruction(LocalVariableInstruction) in line 164
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitLOOKUPSWITCH(LOOKUPSWITCH) in line 1004
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLOR(LOR) in line 676
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLREM(LREM) in line 988
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLRETURN(LRETURN) in line 848
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLSHL(LSHL) in line 872
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLSHR(LSHR) in line 1000
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLSTORE(LSTORE) in line 372
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLSUB(LSUB) in line 628
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLUSHR(LUSHR) in line 1020
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLXOR(LXOR) in line 844
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitMONITORENTER(MONITORENTER) in line 868
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitMONITOREXIT(MONITOREXIT) in line 536
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitMULTIANEWARRAY(MULTIANEWARRAY) in line 792
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitNEW(NEW) in line 620
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitNEWARRAY(NEWARRAY) in line 772
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitNOP(NOP) in line 828
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitPOP(POP) in line 404
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitPOP2(POP2) in line 408
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitPopInstruction(PopInstruction) in line 182
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitPushInstruction(PushInstruction) in line 203
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitPUTFIELD(PUTFIELD) in line 612
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitPUTSTATIC(PUTSTATIC) in line 920
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitRET(RET) in line 888
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitRETURN(RETURN) in line 716
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitReturnInstruction(ReturnInstruction) in line 221
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitSALOAD(SALOAD) in line 796
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitSASTORE(SASTORE) in line 712
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitSelect(Select) in line 197
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitSIPUSH(SIPUSH) in line 724
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitStackConsumer(StackConsumer) in line 242
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitStackInstruction(StackInstruction) in line 161
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitStackProducer(StackProducer) in line 239
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitStoreInstruction(StoreInstruction) in line 191
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitSWAP(SWAP) in line 493
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function visitTABLESWITCH(TABLESWITCH) in line 640
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitTypedInstruction(TypedInstruction) in line 194
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitUnconditionalBranch(UnconditionalBranch) in line 200
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitVariableLengthInstruction(VariableLengthInstruction) in line 236
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function AbstractFrameModelingVisitor(ConstantPoolGen) in line 61
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable cpg in line 54
   variable frame in line 52
   variable location in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/AbstractMethod.java
module edu::umd::cs::findbugs::ba::AbstractMethod
   inherits from edu::umd::cs::findbugs::ba::AbstractClassMember
   inherits from edu::umd::cs::findbugs::ba::XMethod
   abstract class
   function getBridgeSignature() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMethodDescriptor() in line 61
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getNumParams() in line 40
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function isBridged() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isNative() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getAccessFlags() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isSynchronized() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getAccessFlags() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function toString() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AbstractMethod(@DottedClassName String,String,String,@CheckForNull String,int) in line 34
      5 lines of code
      5 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/AccessibleEntity.java
module edu::umd::cs::findbugs::ba::AccessibleEntity
   function getAccessFlags() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getClassDescriptor() in line 74
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isDeprecated() in line 69
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isFinal() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isPrivate() in line 60
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isProtected() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isPublic() in line 50
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isSynthetic() in line 65
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/AnalysisCacheToAnalysisContextAdapter.java
module edu::umd::cs::findbugs::ba::AnalysisCacheToAnalysisContextAdapter
   inherits from edu::umd::cs::findbugs::ba::AnalysisContext
   function addClasspathEntry(String) in line 117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function clearClassContextCache() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function clearRepository() in line 133
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getAnnotationRetentionDatabase() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCheckReturnAnnotationDatabase() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getClassContext(JavaClass) in line 159
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function getClassContextStats() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDirectlyRelevantTypeQualifiersDatabase() in line 371
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function getFieldStoreTypeDatabase() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInnerClassAccessMap() in line 290
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function getJCIPAnnotationDatabase() in line 195
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLookupFailureCallback() in line 203
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::AnalysisCacheToAnalysisContextAdapter
   function getNullnessAnnotationDatabase() in line 213
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable USE_TYPE_QUALIFIERS defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
      uses variable tqNullnessDatabase defined in edu::umd::cs::findbugs::ba::AnalysisCacheToAnalysisContextAdapter
   function getReturnValueNullnessPropertyDatabase() in line 353
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSourceFinder() in line 228
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSourceFinder() defined in edu::umd::cs::findbugs::Project
   function getSourceInfoMap() in line 236
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSubtypes2() in line 363
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function getUnconditionalDerefParamDatabase() in line 255
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initDatabases() in line 263
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function lookupClass(@DottedClassName String) in line 271
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function setAppClassList(List< ClassDescriptor >) in line 312
      protection public
      24 lines of code
      1 parameters
      7 conditional paths
      uses function getAllClassDescriptors() defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getXClass(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::AnalysisCacheToAnalysisContextAdapter
      uses function addApplicationClass(XClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function addClass(XClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable ENABLE_SUBTYPES2 defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function updateDatabases(int) in line 341
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getCheckReturnAnnotationDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisCacheToAnalysisContextAdapter
      uses function loadAuxiliaryAnnotations() defined in edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
      uses function getNullnessAnnotationDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisCacheToAnalysisContextAdapter
      uses function loadAuxiliaryAnnotations() defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
   function AnalysisCacheToAnalysisContextAdapter() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable lookupFailureCallback in line 96
   variable tqNullnessDatabase in line 207
module edu::umd::cs::findbugs::ba::AnalysisCacheToAnalysisContextAdapter::DelegatingRepositoryLookupFailureCallback
   inherits from edu::umd::cs::findbugs::ba::RepositoryLookupFailureCallback
   function logError(String) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function logError(String,Throwable) in line 69
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function reportMissingClass(ClassNotFoundException) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function reportMissingClass(ClassDescriptor) in line 83
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function reportSkippedAnalysis(MethodDescriptor) in line 90
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/AnalysisContext.java
module edu::umd::cs::findbugs::ba::AnalysisContext
   abstract class
   function addClasspathEntry(String) in line 339
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function clear() in line 139
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable boolPropertySet defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable databaseInputDir defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable databaseOutputDir defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function initDatabases() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function updateDatabases(int) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function clearClassContextCache() in line 331
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function clearRepository() in line 325
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function currentAnalysisContext() in line 172
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function currentXFactory() in line 176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAnnotationRetentionDatabase() in line 113
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBoolProperty(int) in line 530
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable boolPropertySet defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSourceInfoMap() defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getCheckReturnAnnotationDatabase() in line 112
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getClassContext(JavaClass) in line 469
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getClassContextStats() in line 476
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getClassSummary() in line 181
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
   function getDatabaseInputDir() in line 554
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable databaseInputDir defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getDatabaseOutputDir() in line 573
      protection public
      3 lines of code
      0 parameters
      7 conditional paths
      uses variable databaseOutputDir defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getFieldStoreTypeDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getUnconditionalDerefParamDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getReturnValueNullnessPropertyDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDatabaseInputDir() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function read(@WillClose InputStream) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses function getInnerClassAccessMap() defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getDirectlyRelevantTypeQualifiersDatabase() in line 240
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEqualsKindSummary() in line 195
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFieldStoreTypeDatabase() in line 583
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getFieldSummary() in line 200
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function logError(String,Exception) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getInnerClassAccessMap() in line 699
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getJCIPAnnotationDatabase() in line 114
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getLookupFailureCallback() in line 300
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNullnessAnnotationDatabase() in line 111
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getReturnValueNullnessPropertyDatabase() in line 598
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSourceFinder() in line 312
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSourceInfoMap() in line 537
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSubtypes2() in line 722
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getUnconditionalDerefParamDatabase() in line 591
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getUnreadFields() in line 216
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
   function getXClassCollection() in line 729
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getXClassCollection() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function initDatabases() in line 161
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isApplicationClass(JavaClass) in line 355
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isApplicationClass(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function isApplicationClass(@DottedClassName String) in line 367
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isApplicationClass(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function isApplicationClass(ClassDescriptor) in line 379
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isApplicationClass(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function isTooBig(ClassDescriptor) in line 383
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getData() defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function logError(String,Exception) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function lookupClass(@NonNull @DottedClassName String) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function loadDefaultInterproceduralDatabases() in line 501
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses variable IGNORE_BUILTIN_MODELS defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getUnconditionalDerefParamDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable UNCONDITIONAL_DEREF_DB_RESOURCE defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getReturnValueNullnessPropertyDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NONNULL_RETURN_DB_RESOURCE defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function loadInterproceduralDatabases() in line 481
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function getFieldStoreTypeDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable DEFAULT_FILENAME defined in edu::umd::cs::findbugs::ba::type::FieldStoreTypeDatabase
      uses function getUnconditionalDerefParamDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable UNCONDITIONAL_DEREF_DB_FILENAME defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getReturnValueNullnessPropertyDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NONNULL_RETURN_DB_FILENAME defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function logError(String,Exception) in line 265
      protection public
      14 lines of code
      2 parameters
      5 conditional paths
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function currentAnalysisContext() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function logError(String) in line 282
      protection public
      6 lines of code
      1 parameters
      3 conditional paths
      uses function currentAnalysisContext() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function lookupClass(@NonNull @DottedClassName String) in line 407
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function lookupClass(@NonNull ClassDescriptor) in line 417
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function lookupClass(@NonNull @DottedClassName String) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function lookupSourceFile(@NonNull @DottedClassName String) in line 448
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getSource() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable UNKNOWN_SOURCE_FILE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getClassContext(JavaClass) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassContextStats() defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function lookupSystemClass(@NonNull String) in line 433
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable originalRepository defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function removeCurrentAnalysisContext() in line 711
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function currentAnalysisContext() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function clear() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function reportMissingClass(ClassNotFoundException) in line 246
      protection public
      15 lines of code
      1 parameters
      8 conditional paths
      uses function currentAnalysisContext() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function setBoolProperty(int,boolean) in line 519
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable boolPropertySet defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function setClassSummary(@NonNull ClassSummary) in line 186
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function setCurrentAnalysisContext(AnalysisContext) in line 706
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function currentAnalysisContext() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function currentXFactory() defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function setDatabaseInputDir(String) in line 544
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable databaseInputDir defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function setDatabaseOutputDir(String) in line 563
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable databaseOutputDir defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function setFieldSummary(@NonNull FieldSummary) in line 207
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function logError(String,Exception) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function setMissingClassWarningsSuppressed(boolean) in line 292
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function setProject(Project) in line 305
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSourceFinder() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function clearRepository() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function clearClassContextCache() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addClasspathEntry(String) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function setUnreadFields(@NonNull UnreadFields) in line 223
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function getDirectlyRelevantTypeQualifiersDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function unreadFieldsAvailable() in line 220
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function updateDatabases(int) in line 168
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function AnalysisContext() in line 135
      3 lines of code
      0 parameters
      1 conditional paths
   variable boolPropertySet in line 130
   variable currentAnalysisContext in line 94
   variable currentXFactory in line 103
   variable databaseInputDir in line 131
   variable databaseOutputDir in line 132
   variable DEBUG in line 77
      protection public
   variable DEFAULT_CACHE_SIZE in line 126
   variable DEFAULT_CHECK_FOR_NULL_PARAM_DATABASE_FILENAME in line 83
      protection public
   variable DEFAULT_NONNULL_PARAM_DATABASE_FILENAME in line 80
      protection public
   variable DEFAULT_NULL_RETURN_VALUE_ANNOTATION_DATABASE in line 84
      protection public
   variable DEFAULT_NULL_RETURN_VALUE_DB_FILENAME in line 92
      protection public
   variable IGNORE_BUILTIN_MODELS in line 78
      protection public
   variable NONNULL_RETURN_DB_FILENAME in line 87
      protection public
   variable NONNULL_RETURN_DB_RESOURCE in line 90
      protection public
   variable originalRepository in line 119
   variable project in line 290
   variable UNCONDITIONAL_DEREF_DB_FILENAME in line 86
      protection public
   variable UNCONDITIONAL_DEREF_DB_RESOURCE in line 89
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/AnalysisException.java
module edu::umd::cs::findbugs::ba::AnalysisException
   inherits from edu::umd::cs::findbugs::classfile::UncheckedAnalysisException
   function AnalysisException(String) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AnalysisException(String,Throwable) in line 54
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function AnalysisException(String,MethodGen,Throwable) in line 66
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function AnalysisException(String,MethodGen,InstructionHandle) in line 77
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function AnalysisException(String,MethodGen,Instruction) in line 88
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function AnalysisException(String,MethodGen,InstructionHandle,Throwable) in line 100
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   function AnalysisException(String,MethodGen,Instruction,Throwable) in line 113
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   variable serialVersionUID in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/AnalysisFeatures.java
module edu::umd::cs::findbugs::ba::AnalysisFeatures
   variable ACCURATE_EXCEPTIONS in line 46
      protection public
   variable CONSERVE_SPACE in line 52
      protection public
   variable INTERATIVE_OPCODE_STACK_ANALYSIS in line 67
      protection public
   variable MERGE_SIMILAR_WARNINGS in line 88
      protection public
   variable MODEL_INSTANCEOF in line 57
      protection public
   variable NUM_BOOLEAN_ANALYSIS_PROPERTIES in line 94
      protection public
   variable SKIP_HUGE_METHODS in line 62
      protection public
   variable TRACK_GUARANTEED_VALUE_DEREFS_IN_NULL_POINTER_ANALYSIS in line 73
      protection public
   variable TRACK_VALUE_NUMBERS_IN_NULL_POINTER_ANALYSIS in line 82
      protection public
module edu::umd::cs::findbugs::ba::AnalysisFeatures::AnalysisFeature
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/AnnotationDatabase.java
module edu::umd::cs::findbugs::ba::AnnotationDatabase
   function addDefaultAnnotation(Target,String,AnnotationEnum) in line 87
      protection public
      9 lines of code
      3 parameters
      1 conditional paths
   function addDefaultMethodAnnotation(String,AnnotationEnum) in line 327
      11 lines of code
      2 parameters
      1 conditional paths
   function addDirectAnnotation(Object,AnnotationEnum) in line 82
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function addFieldAnnotation(String,String,String,boolean,AnnotationEnum) in line 339
      8 lines of code
      5 parameters
      1 conditional paths
   function addMethodAnnotation(@DottedClassName String,String,String,boolean,AnnotationEnum) in line 348
      20 lines of code
      5 parameters
      1 conditional paths
   function addMethodParameterAnnotation(String,String,String,boolean,int,AnnotationEnum) in line 373
      20 lines of code
      6 parameters
      1 conditional paths
   function annotationIsDirect(Object) in line 135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function anyAnnotations(AnnotationEnum) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function classDefinesMethod(JavaClass,XMethod) in line 284
      8 lines of code
      2 parameters
      1 conditional paths
   function getDirectAnnotation(final Object) in line 278
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getResolvedAnnotation(Object,boolean) in line 105
      protection public
      29 lines of code
      2 parameters
      1 conditional paths
   function getUncachedResolvedAnnotation(final Object,boolean) in line 139
      protection public
      134 lines of code
      2 parameters
      1 conditional paths
   function loadAuxiliaryAnnotations() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function lookInOverriddenMethod(final Object,String,XMethod,boolean) in line 293
      27 lines of code
      4 parameters
      1 conditional paths
   function onlyAppliesToReferenceParameters(AnnotationEnum) in line 369
      4 lines of code
      1 parameters
      1 conditional paths
   function setAddClassOnly(boolean) in line 322
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function AnnotationDatabase() in line 61
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   variable DEFAULT_ANNOTATION_ANNOTATION_CLASS in line 53
   variable defaultAnnotation in line 58
   variable directAnnotations in line 55
   variable IGNORE_BUILTIN_ANNOTATIONS in line 49
      protection public
   variable seen in line 79
module edu::umd::cs::findbugs::ba::AnnotationDatabase::Target
   variable ANY in line 51
      protection public
   variable CLASS in line 51
      protection public
   variable FIELD in line 51
      protection public
   variable METHOD in line 51
      protection public
   variable PARAMETER in line 51
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/AnnotationEnumeration.java
module edu::umd::cs::findbugs::ba::AnnotationEnumeration
   inherits from Comparable
   function compareTo(E) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 35
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getIndex() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AnnotationEnumeration(String,int) in line 30
      4 lines of code
      2 parameters
      1 conditional paths
   variable index in line 26
   variable name in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/AnnotationRetentionDatabase.java
module edu::umd::cs::findbugs::ba::AnnotationRetentionDatabase
   function hasRuntimeRetention(String) in line 27
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable annotationRetention defined in edu::umd::cs::findbugs::ba::AnnotationRetentionDatabase
   function lacksRuntimeRetention(String) in line 34
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable annotationRetention defined in edu::umd::cs::findbugs::ba::AnnotationRetentionDatabase
   function setRuntimeRetention(String,boolean) in line 40
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable annotationRetention defined in edu::umd::cs::findbugs::ba::AnnotationRetentionDatabase
   variable annotationRetention in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/AssertionMethods.java
module edu::umd::cs::findbugs::ba::AssertionMethods
   inherits from org::apache::bcel::Constants
   function init(JavaClass) in line 109
      58 lines of code
      1 parameters
      8 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
      uses variable className defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses function isUserAssertionMethod(String,String) defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses variable assertionMethodRefSet defined in edu::umd::cs::findbugs::ba::AssertionMethods
   function isAssertionCall(InvokeInstruction) in line 224
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses variable assertionMethodRefSet defined in edu::umd::cs::findbugs::ba::AssertionMethods
   function isAssertionHandle(InstructionHandle,ConstantPoolGen) in line 176
      protection public
      20 lines of code
      2 parameters
      6 conditional paths
      uses function isAssertionInstruction(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses variable className defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
   function isAssertionInstruction(Instruction,ConstantPoolGen) in line 204
      protection public
      18 lines of code
      2 parameters
      5 conditional paths
      uses function isAssertionCall(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses variable className defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
   function isUserAssertionMethod(String,String) in line 168
      7 lines of code
      2 parameters
      3 conditional paths
      uses variable userAssertionMethodList defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses variable className defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
      uses variable methodName defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
   function AssertionMethods(JavaClass) in line 104
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function init(JavaClass) defined in edu::umd::cs::findbugs::ba::AssertionMethods
   variable assertionMethodRefSet in line 61
   variable DEBUG in line 56
   variable userAssertionMethodList in line 81
module edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
   function getClassName() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
   function getMethodName() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
   function UserAssertionMethod(String,String) in line 67
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
      uses variable methodName defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
   variable className in line 64
   variable methodName in line 65
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/AssignedFieldMap.java
module edu::umd::cs::findbugs::ba::AssignedFieldMap
   inherits from org::apache::bcel::Constants
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/BackwardDataflowAnalysis.java
module edu::umd::cs::findbugs::ba::BackwardDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflowAnalysis
   abstract class
   function getBlockOrder(CFG) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getReverseDepthFirstSearch() in line 41
      3 lines of code
      0 parameters
      1 conditional paths
   function isForwards() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BackwardDataflowAnalysis(ReverseDepthFirstSearch,DepthFirstSearch) in line 35
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   variable dfs in line 33
   variable rdfs in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/BasicAbstractDataflowAnalysis.java
module edu::umd::cs::findbugs::ba::BasicAbstractDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::DataflowAnalysis
   abstract class
   function edgeTransfer(Edge,Fact) in line 148
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function factToString(Fact) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function finishIteration() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFactAfterLocation(Location) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFactAtLocation(Location) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFactOnEdge(Edge) in line 116
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function getLastUpdateTimestamp(Fact) in line 162
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getResultFact(BasicBlock) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getStartFact(BasicBlock) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function lookupOrCreateFact(Map< BasicBlock, Fact >,BasicBlock) in line 153
      8 lines of code
      2 parameters
      1 conditional paths
   function resultFactIterator() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setLastUpdateTimestamp(Fact,int) in line 165
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function startIteration() in line 134
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BasicAbstractDataflowAnalysis() in line 45
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable resultFactMap in line 40
   variable startFactMap in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/BasicBlock.java
module edu::umd::cs::findbugs::ba::BasicBlock
   inherits from edu::umd::cs::findbugs::graph::AbstractVertex
   inherits from edu::umd::cs::findbugs::ba::Debug
   function addInstruction(InstructionHandle) in line 221
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable firstInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable lastInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
   function containsInstruction(InstructionHandle) in line 386
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function containsInstructionWithOffset(int) in line 403
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable numNonExceptionSuccessors defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getExceptionGen() in line 366
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionGen defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getExceptionThrower() in line 153
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionThrower defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getFirstInstruction() in line 173
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable firstInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getId() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function getLastInstruction() in line 180
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getPredecessorOf(InstructionHandle) in line 206
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function containsInstruction(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable firstInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getSuccessorOf(InstructionHandle) in line 190
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function containsInstruction(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable lastInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function instructionIterator() in line 300
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function InstructionIterator(InstructionHandle,InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses variable firstInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable lastInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function instructionReverseIterator() in line 336
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable firstInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isEmpty() in line 343
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable firstInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isExceptionHandler() in line 356
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionGen defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isExceptionThrower() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionThrower defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isInJSRSubroutine() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable inJSRSubroutine defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isNullCheck() in line 160
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable exceptionThrower defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable nullCheckInstructionSet defined in edu::umd::cs::findbugs::ba::BasicBlock
   function pos() in line 347
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable firstInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function setExceptionGen(CodeExceptionGen) in line 376
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable exceptionGen defined in edu::umd::cs::findbugs::ba::BasicBlock
   function setExceptionThrower(InstructionHandle) in line 137
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable exceptionThrower defined in edu::umd::cs::findbugs::ba::BasicBlock
   function toString() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function BasicBlock() in line 99
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   variable exceptionGen in line 88
   variable exceptionThrower in line 87
   variable firstInstruction in line 85
   variable inJSRSubroutine in line 89
   variable lastInstruction in line 86
   variable nullCheckInstructionSet in line 48
   variable numNonExceptionSuccessors in line 90
module edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   inherits from java::util::Iterator
   function duplicate() in line 261
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function InstructionIterator(InstructionHandle,InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function next() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function equals(Object) in line 266
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function InstructionIterator(InstructionHandle,InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses variable next defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function getBasicBlock() in line 281
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 274
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function hashCode() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function next() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function hasNext() in line 245
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function next() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function next() in line 249
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function remove() in line 257
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 286
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function next() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function InstructionIterator(InstructionHandle,InstructionHandle) in line 240
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable next in line 238
module edu::umd::cs::findbugs::ba::BasicBlock::InstructionReverseIterator
   inherits from java::util::Iterator
   function hasNext() in line 315
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function next() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function next() in line 319
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function next() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function remove() in line 327
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function InstructionReverseIterator(InstructionHandle,InstructionHandle) in line 310
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable next in line 308
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/Binding.java
module edu::umd::cs::findbugs::ba::bcp::Binding
   function getVariable() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable variable defined in edu::umd::cs::findbugs::ba::bcp::Binding
   function getVarName() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable varName defined in edu::umd::cs::findbugs::ba::bcp::Binding
   function toString() in line 59
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable varName defined in edu::umd::cs::findbugs::ba::bcp::Binding
      uses variable variable defined in edu::umd::cs::findbugs::ba::bcp::Binding
   function Binding(String,Variable) in line 38
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable variable defined in edu::umd::cs::findbugs::ba::bcp::Binding
      uses variable varName defined in edu::umd::cs::findbugs::ba::bcp::Binding
   variable variable in line 30
   variable varName in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/BindingSet.java
module edu::umd::cs::findbugs::ba::bcp::BindingSet
   function lookup(String) in line 51
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable binding defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses function getVarName() defined in edu::umd::cs::findbugs::ba::bcp::Binding
      uses variable parent defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses function lookup(String) defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
   function toString() in line 58
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable binding defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses function toString() defined in edu::umd::cs::findbugs::ba::bcp::Binding
      uses variable parent defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses function toString() defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
   function BindingSet(Binding,BindingSet) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable binding defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses variable parent defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
   variable binding in line 31
   variable parent in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/ByteCodePattern.java
module edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function add(PatternElement) in line 43
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable first defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
      uses function addInterElementWild() defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
      uses function addElement(PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function addElement(PatternElement) in line 108
      9 lines of code
      1 parameters
      2 conditional paths
      uses function setIndex(int) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses variable numElements defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
      uses variable first defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
      uses function setNext(PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function addInterElementWild() in line 103
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable interElementWild defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
      uses function isLastWild() defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
      uses function addElement(PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function addWild(int) in line 58
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function isLastWild() defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
      uses function setMinAndMax(int,int) defined in edu::umd::cs::findbugs::ba::bcp::Wild
      uses function addElement(PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function dummyVariable() in line 96
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable dummyVariableCount defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function getFirst() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable first defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function isLastWild() in line 118
      6 lines of code
      0 parameters
      2 conditional paths
   function setInterElementWild(int) in line 76
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable dummyVariableCount in line 35
   variable first in line 32
   variable interElementWild in line 33
   variable numElements in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/ByteCodePatternMatch.java
module edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
   function getBindingSet() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
   function getFirstLabeledMatch(String) in line 59
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable lastElementMatch defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses function getFirstLabeledMatch(String) defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getLabeledInstruction(String) in line 53
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable lastElementMatch defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses function getLabeledInstruction(String) defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getLastLabeledMatch(String) in line 65
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable lastElementMatch defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses function getLastLabeledMatch(String) defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function patternElementMatchIterator() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElementMatchList defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
   function ByteCodePatternMatch(BindingSet,PatternElementMatch) in line 32
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses variable lastElementMatch defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses variable patternElementMatchList defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses function getPrev() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   variable bindingSet in line 28
   variable lastElementMatch in line 29
   variable patternElementMatchList in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/FieldAccess.java
module edu::umd::cs::findbugs::ba::bcp::FieldAccess
   inherits from edu::umd::cs::findbugs::ba::bcp::SingleInstruction
   inherits from org::apache::bcel::Constants
   abstract class
   function checkConsistent(Variable,Variable,BindingSet) in line 64
      11 lines of code
      3 parameters
      3 conditional paths
      uses variable fieldVarName defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
      uses variable valueVarName defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
   function isLongOrDouble(FieldInstruction,ConstantPoolGen) in line 82
      5 lines of code
      2 parameters
      1 conditional paths
   function snarfFieldValue(FieldInstruction,ConstantPoolGen,ValueNumberFrame) in line 97
      13 lines of code
      3 parameters
      2 conditional paths
      uses function isLongOrDouble(FieldInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
   function FieldAccess(String,String) in line 49
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable fieldVarName defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
      uses variable valueVarName defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
   variable fieldVarName in line 40
   variable valueVarName in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/FieldVariable.java
module edu::umd::cs::findbugs::ba::bcp::FieldVariable
   inherits from edu::umd::cs::findbugs::ba::bcp::Variable
   function getClassName() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function getFieldName() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldName defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function getFieldSig() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldSig defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function isStatic() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ref defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function sameAs(Variable) in line 85
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function FieldVariable(String,String,String) defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable ref defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable className defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable fieldName defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable fieldSig defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function toString() in line 98
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable fieldName defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function FieldVariable(String,String,String) in line 38
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable fieldName defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable fieldSig defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function FieldVariable(@Nullable ValueNumber,String,String,String) in line 50
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable ref defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable className defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable fieldName defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable fieldSig defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   variable className in line 27
   variable fieldName in line 28
   variable fieldSig in line 29
   variable ref in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/IfNull.java
module edu::umd::cs::findbugs::ba::bcp::IfNull
   inherits from edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function acceptBranch(Edge,InstructionHandle) in line 55
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 40
      protection public
      13 lines of code
      5 parameters
      2 conditional paths
      uses function addOrCheckDefinition(Variable,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   function IfNull(String) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable varName defined in edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/Invoke.java
module edu::umd::cs::findbugs::ba::bcp::Invoke
   inherits from edu::umd::cs::findbugs::ba::bcp::PatternElement
   function acceptBranch(Edge,InstructionHandle) in line 216
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function createClassMatcher(String) in line 168
      5 lines of code
      1 parameters
      1 conditional paths
      uses function createMatcher(String) defined in edu::umd::cs::findbugs::ba::bcp::Invoke
   function createMatcher(String) in line 174
      5 lines of code
      1 parameters
      1 conditional paths
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 181
      protection public
      33 lines of code
      5 parameters
      7 conditional paths
      uses variable STATIC defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable CONSTRUCTOR defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable INSTANCE defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable mode defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable methodNameMatcher defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses function match(String) defined in edu::umd::cs::findbugs::ba::bcp::Invoke::StringMatcher
      uses variable methodSigMatcher defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable classNameMatcher defined in edu::umd::cs::findbugs::ba::bcp::Invoke
   function maxOccur() in line 226
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function minOccur() in line 221
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Invoke(String,String,String,int,@Nullable RepositoryLookupFailureCallback) in line 160
      protection public
      7 lines of code
      5 parameters
      1 conditional paths
      uses function createClassMatcher(String) defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses function createMatcher(String) defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable mode defined in edu::umd::cs::findbugs::ba::bcp::Invoke
   variable ANY in line 99
      protection public
   variable classNameMatcher in line 146
   variable CONSTRUCTOR in line 89
      protection public
   variable INSTANCE in line 79
      protection public
   variable methodNameMatcher in line 147
   variable methodSigMatcher in line 148
   variable mode in line 149
   variable ORDINARY_METHOD in line 94
      protection public
   variable STATIC in line 84
      protection public
module edu::umd::cs::findbugs::ba::bcp::Invoke::StringMatcher
   function match(String) in line 102
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::bcp::Invoke::ExactStringMatcher
   inherits from edu::umd::cs::findbugs::ba::bcp::Invoke::StringMatcher
   function match(String) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ExactStringMatcher(String) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable value in line 106
module edu::umd::cs::findbugs::ba::bcp::Invoke::RegexpStringMatcher
   inherits from edu::umd::cs::findbugs::ba::bcp::Invoke::StringMatcher
   function match(String) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function RegexpStringMatcher(String) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable pattern in line 118
module edu::umd::cs::findbugs::ba::bcp::Invoke::SubclassMatcher
   inherits from edu::umd::cs::findbugs::ba::bcp::Invoke::StringMatcher
   function match(String) in line 136
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function SubclassMatcher(String) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable className in line 130
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/Load.java
module edu::umd::cs::findbugs::ba::bcp::Load
   inherits from edu::umd::cs::findbugs::ba::bcp::FieldAccess
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 53
      protection public
      22 lines of code
      5 parameters
      3 conditional paths
      uses function checkConsistent(Variable,Variable,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
   function Load(String,String) in line 48
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable fieldVarName defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/LocalVariable.java
module edu::umd::cs::findbugs::ba::bcp::LocalVariable
   inherits from edu::umd::cs::findbugs::ba::bcp::Variable
   function sameAs(Variable) in line 31
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function LocalVariable(ValueNumber) defined in edu::umd::cs::findbugs::ba::bcp::LocalVariable
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::bcp::LocalVariable
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function toString() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::bcp::LocalVariable
      uses function toString() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function LocalVariable(ValueNumber) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::bcp::LocalVariable
   variable valueNumber in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/LongOrDoubleLocalVariable.java
module edu::umd::cs::findbugs::ba::bcp::LongOrDoubleLocalVariable
   inherits from edu::umd::cs::findbugs::ba::bcp::Variable
   function sameAs(Variable) in line 32
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function LongOrDoubleLocalVariable(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::bcp::LongOrDoubleLocalVariable
      uses variable topValue defined in edu::umd::cs::findbugs::ba::bcp::LongOrDoubleLocalVariable
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function LongOrDoubleLocalVariable(ValueNumber,ValueNumber) in line 27
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable topValue defined in edu::umd::cs::findbugs::ba::bcp::LongOrDoubleLocalVariable
   variable topValue in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/MatchAny.java
module edu::umd::cs::findbugs::ba::bcp::MatchAny
   inherits from edu::umd::cs::findbugs::ba::bcp::PatternElement
   function acceptBranch(Edge,InstructionHandle) in line 89
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function label(String) in line 56
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable childList defined in edu::umd::cs::findbugs::ba::bcp::MatchAny
      uses variable label defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 75
      protection public
      12 lines of code
      5 parameters
      3 conditional paths
      uses variable childList defined in edu::umd::cs::findbugs::ba::bcp::MatchAny
   function maxOccur() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function minOccur() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAllowTrailingEdges(boolean) in line 64
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable childList defined in edu::umd::cs::findbugs::ba::bcp::MatchAny
      uses function setAllowTrailingEdges(boolean) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function allowTrailingEdges() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function MatchAny(PatternElement[]) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable childList defined in edu::umd::cs::findbugs::ba::bcp::MatchAny
   variable childList in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/MatchResult.java
module edu::umd::cs::findbugs::ba::bcp::MatchResult
   function getBindingSet() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::MatchResult
   function getPatternElement() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::MatchResult
   function MatchResult(PatternElement,BindingSet) in line 43
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::MatchResult
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::MatchResult
   variable bindingSet in line 35
   variable patternElement in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/Monitorenter.java
module edu::umd::cs::findbugs::ba::bcp::Monitorenter
   inherits from edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 47
      protection public
      13 lines of code
      5 parameters
      2 conditional paths
      uses function addOrCheckDefinition(Variable,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   function Monitorenter(String) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable varName defined in edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/New.java
module edu::umd::cs::findbugs::ba::bcp::New
   inherits from edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 48
      protection public
      10 lines of code
      5 parameters
      2 conditional paths
      uses function addOrCheckDefinition(Variable,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   function New(String) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/OneVariableInstruction.java
module edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   inherits from edu::umd::cs::findbugs::ba::bcp::SingleInstruction
   abstract class
   function addOrCheckDefinition(Variable,BindingSet) in line 51
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable varName defined in edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   function OneVariableInstruction(String) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable varName defined in edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   variable varName in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/Opcode.java
module edu::umd::cs::findbugs::ba::bcp::Opcode
   inherits from edu::umd::cs::findbugs::ba::bcp::PatternElement
   function acceptBranch(Edge,InstructionHandle) in line 59
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 48
      protection public
      9 lines of code
      5 parameters
      2 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::ba::bcp::Opcode
   function maxOccur() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function minOccur() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Opcode(int) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::ba::bcp::Opcode
   variable opcode in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ca/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ch/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/constant/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/heap/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/interproc/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/obl/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/rta/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/type/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/vna/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/analysis/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/asm/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/impl/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/PatternElement.java
module edu::umd::cs::findbugs::ba::bcp::PatternElement
   abstract class
   function acceptBranch(Edge,InstructionHandle) in line 162
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function addOrCheckDefinition(String,Variable,BindingSet) in line 188
      13 lines of code
      3 parameters
      4 conditional paths
      uses function lookup(String,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function sameAs(Variable) defined in edu::umd::cs::findbugs::ba::bcp::Variable
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function allowTrailingEdges() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function dominatedBy(String) in line 82
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable dominatedBy defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function getDominatedBy() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dominatedBy defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function getLabel() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable label defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function getNext() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable next defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function label(String) in line 63
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable label defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function lookup(String,BindingSet) in line 131
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function lookup(String) defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses function getVariable() defined in edu::umd::cs::findbugs::ba::bcp::Binding
      uses function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function acceptBranch(Edge,InstructionHandle) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function minOccur() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function maxOccur() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 152
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   function maxOccur() in line 174
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function minOccur() in line 168
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setAllowTrailingEdges(boolean) in line 112
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function allowTrailingEdges() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function setIndex(int) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable index defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function setNext(PatternElement) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 203
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable index defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   variable allowTrailingEdges in line 41
   variable DEBUG in line 35
   variable dominatedBy in line 39
   variable index in line 40
   variable label in line 38
   variable next in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/PatternElementMatch.java
module edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function allowTrailingEdges() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable allowTrailingEdges defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function equals(Object) in line 163
      protection public
      18 lines of code
      1 parameters
      4 conditional paths
      uses function PatternElementMatch(PatternElement,InstructionHandle,BasicBlock,int,PatternElementMatch) defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable matchedInstruction defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable prev defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getBasicBlock() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getFirstLabeledMatch(String) in line 110
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function getLabel() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses variable prev defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getLabeledInstruction(String) in line 101
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getFirstLabeledMatch(String) defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function getMatchedInstructionInstructionHandle() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getLastLabeledMatch(String) in line 125
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function getLabel() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses variable prev defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getMatchCount() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getMatchedInstructionInstructionHandle() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable matchedInstruction defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getPatternElement() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getPrev() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable prev defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function hashCode() in line 157
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 145
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function toString() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses variable matchedInstruction defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function toString() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function PatternElementMatch(PatternElement,InstructionHandle,BasicBlock,int,PatternElementMatch) in line 51
      protection public
      9 lines of code
      5 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable matchedInstruction defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable prev defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   variable basicBlock in line 36
   variable matchCount in line 37
   variable matchedInstruction in line 35
   variable patternElement in line 34
   variable prev in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/PatternMatcher.java
module edu::umd::cs::findbugs::ba::bcp::PatternMatcher
   inherits from edu::umd::cs::findbugs::ba::DFSEdgeTypes
   function attemptMatch(BasicBlock,BasicBlock.InstructionIterator) in line 138
      4 lines of code
      2 parameters
      1 conditional paths
      uses function work(State) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable pattern defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function getFirst() defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function byteCodePatternMatchIterator() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable resultList defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
   function execute() in line 97
      protection public
      25 lines of code
      0 parameters
      5 conditional paths
      uses variable workList defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable cfg defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses variable visitedBlockMap defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function attemptMatch(BasicBlock,BasicBlock.InstructionIterator) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function successorIterator(final VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function work(State) in line 417
      74 lines of code
      1 parameters
      15 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable resultList defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function advanceToNextElement() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable cfg defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable dfs defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable BACK_EDGE defined in edu::umd::cs::findbugs::graph::DFSEdgeTypes
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function advanceToSuccessor(Edge,MatchResult) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function PatternMatcher(ByteCodePattern,ClassContext,Method) in line 77
      protection public
      12 lines of code
      3 parameters
      1 conditional paths
      uses variable pattern defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
   variable cfg in line 61
   variable cpg in line 62
   variable DEBUG in line 57
   variable dfs in line 63
   variable domAnalysis in line 65
   variable nextPath in line 144
   variable pattern in line 60
   variable resultList in line 68
   variable SHOW_WILD in line 58
   variable visitedBlockMap in line 67
   variable vnaDataflow in line 64
   variable workList in line 66
module edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function advanceToNextElement() in line 244
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
      uses variable canFork defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function minOccur() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function State(BasicBlock,BasicBlock.InstructionIterator,PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable instructionIterator defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function getNext() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function advanceToSuccessor(Edge,MatchResult) in line 314
      protection public
      13 lines of code
      2 parameters
      2 conditional paths
      uses function getPatternElement() defined in edu::umd::cs::findbugs::ba::bcp::MatchResult
      uses function acceptBranch(Edge,InstructionHandle) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function getLastMatchedInstruction() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function State(BasicBlock,BasicBlock.InstructionIterator,PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable canFork defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function canAdvanceToNextBasicBlock() in line 294
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function allowTrailingEdges() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function currentElementCanContinue() in line 266
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function maxOccur() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function dominatedInstructionStateIterator() in line 340
      protection public
      35 lines of code
      0 parameters
      8 conditional paths
      uses function lookForDominatedInstruction() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function duplicate() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function getFirstLabeledMatch(String) defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function getDominatedBy() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable cfg defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses variable domAnalysis defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::BasicAbstractDataflowAnalysis
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function duplicate() in line 197
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function State(BasicBlock,BasicBlock.InstructionIterator,PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable instructionIterator defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable canFork defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function getBasicBlock() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function getCurrentMatch() in line 218
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function getLastMatchedInstruction() in line 301
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function getMatchedInstructionInstructionHandle() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getPatternElement() in line 211
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function getResult() in line 234
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses function isComplete() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function isComplete() in line 225
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function lookForDominatedInstruction() in line 332
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function getDominatedBy() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function matchLocation(Location) in line 376
      31 lines of code
      1 parameters
      5 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable SHOW_WILD defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable parentPath defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable path defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function toString() defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses variable cpg defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable canFork defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function getPatternElement() defined in edu::umd::cs::findbugs::ba::bcp::MatchResult
      uses function getBindingSet() defined in edu::umd::cs::findbugs::ba::bcp::MatchResult
   function matchNextInBasicBlock() in line 282
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function moreInstructionsInBasicBlock() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable instructionIterator defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function matchLocation(Location) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function moreInstructionsInBasicBlock() in line 273
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instructionIterator defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function State(BasicBlock,BasicBlock.InstructionIterator,PatternElement) in line 171
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable instructionIterator defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function State(@Nullable State,BasicBlock,BasicBlock.InstructionIterator,PatternElement,int,@Nullable PatternElementMatch,@Nullable BindingSet,boolean) in line 179
      protection public
      14 lines of code
      8 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable instructionIterator defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable canFork defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable nextPath defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
   variable basicBlock in line 152
   variable bindingSet in line 157
   variable canFork in line 158
   variable currentMatch in line 156
   variable instructionIterator in line 153
   variable matchCount in line 155
   variable parentPath in line 159
   variable path in line 160
   variable patternElement in line 154
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/SingleInstruction.java
module edu::umd::cs::findbugs::ba::bcp::SingleInstruction
   inherits from edu::umd::cs::findbugs::ba::bcp::PatternElement
   abstract class
   function acceptBranch(Edge,InstructionHandle) in line 37
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function maxOccur() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function minOccur() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/Store.java
module edu::umd::cs::findbugs::ba::bcp::Store
   inherits from edu::umd::cs::findbugs::ba::bcp::FieldAccess
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 52
      protection public
      25 lines of code
      5 parameters
      3 conditional paths
      uses function checkConsistent(Variable,Variable,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
   function Store(String,String) in line 47
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable fieldVarName defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
      uses variable valueVarName defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/Variable.java
module edu::umd::cs::findbugs::ba::bcp::Variable
   function sameAs(Variable) in line 31
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/bcp/Wild.java
module edu::umd::cs::findbugs::ba::bcp::Wild
   inherits from edu::umd::cs::findbugs::ba::bcp::PatternElement
   function acceptBranch(Edge,InstructionHandle) in line 91
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 96
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
   function maxOccur() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function minOccur() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable min defined in edu::umd::cs::findbugs::ba::bcp::Wild
   function setMinAndMax(int,int) in line 75
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable min defined in edu::umd::cs::findbugs::ba::bcp::Wild
   function Wild() in line 43
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function Wild(int) in line 53
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function Wild(int,int) in line 64
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable min defined in edu::umd::cs::findbugs::ba::bcp::Wild
   variable min in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/BetterCFGBuilder2.java
module edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   inherits from edu::umd::cs::findbugs::ba::CFGBuilder
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   inherits from edu::umd::cs::findbugs::ba::Debug
   function build() in line 538
      protection public
      24 lines of code
      0 parameters
      4 conditional paths
      uses variable topLevelSubroutine defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable subroutineWorkList defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getStartInstruction() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses variable cfg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function inlineAll() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function addInstruction(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkIntegrity() defined in edu::umd::cs::findbugs::ba::CFG
   function build(Subroutine) in line 580
      103 lines of code
      1 parameters
      19 conditional paths
      uses variable START_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getStartInstruction() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
      uses function isPEI(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function handleExceptions(Subroutine,InstructionHandle,BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function addInstruction(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable jsrSubroutineMap defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable subroutineWorkList defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable JSR_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable RET_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable cpg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function isEndOfBasicBlock() defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses function instructionIsThrow() defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses function instructionIsExit() defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses function instructionIsReturn() defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses function targetIterator() defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses function getTargetInstruction() defined in edu::umd::cs::findbugs::ba::Target
      uses function getEdgeType() defined in edu::umd::cs::findbugs::ba::Target
      uses function isMerge(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   function getCFG() in line 563
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   function handleExceptions(Subroutine,InstructionHandle,BasicBlock) in line 691
      27 lines of code
      3 parameters
      6 conditional paths
      uses function setExceptionThrower(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable exceptionHandlerMap defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getHandlerList(InstructionHandle) defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
      uses function addEdgeAndExplore(BasicBlock,InstructionHandle,int) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses variable HANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function setUnhandledExceptionBlock(BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
   function inline(Context) in line 789
      protection public
      152 lines of code
      1 parameters
      14 conditional paths
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable next defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function addInstruction(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function setExceptionThrower(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isExceptionHandler() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function setExceptionGen(CodeExceptionGen) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionGen() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable JSR_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable jsrSubroutineMap defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getBlock(BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
      uses function getStartBlock() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function createEdge(BasicBlock,BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable GOTO_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getBlock(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function mapBlock(BasicBlock,BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
      uses function getExit() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function escapeTargetIterator(BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function getTarget() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::EscapeTarget
      uses function getCaller() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
      uses function getSubroutine() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
      uses function containsInstruction(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function getEdgeType() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::EscapeTarget
      uses function isReturnBlock(BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
      uses variable RETURN_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function isExitBlock(BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses variable EXIT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function isUnhandledExceptionBlock(BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses variable UNHANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function inlineAll() in line 769
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable topLevelSubroutine defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function mapBlock(BasicBlock,BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getExit() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getBlock(BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
      uses function getStartBlock() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function createEdge(BasicBlock,BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable START_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function isMerge(InstructionHandle) in line 749
      12 lines of code
      1 parameters
      4 conditional paths
   function isPEI(InstructionHandle) in line 725
      18 lines of code
      1 parameters
      8 conditional paths
   function main(String[]) in line 945
      protection public
      33 lines of code
      1 parameters
      5 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function BetterCFGBuilder2(@NonNull MethodGen) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable cfg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function print(PrintStream) defined in edu::umd::cs::findbugs::ba::CFGPrinter
   function BetterCFGBuilder2(@NonNull MethodGen) in line 529
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   variable cfg in line 518
   variable cpg in line 512
   variable DEBUG in line 65
   variable emptyEscapeTargetList in line 142
   variable exceptionHandlerMap in line 513
   variable jsrSubroutineMap in line 516
   variable methodGen in line 511
   variable subroutineWorkList in line 515
   variable topLevelSubroutine in line 517
   variable usedInstructionSet in line 514
module edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   function getBasicBlock() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   function getStartInstruction() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable start defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   function WorkListItem(InstructionHandle,BasicBlock) in line 86
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable start defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   variable basicBlock in line 78
   variable start in line 77
module edu::umd::cs::findbugs::ba::BetterCFGBuilder2::EscapeTarget
   function getEdgeType() in line 137
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTarget() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function EscapeTarget(InstructionHandle,int) in line 122
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable edgeType in line 113
   variable target in line 112
module edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
   function addEdge(BasicBlock,BasicBlock,int) in line 371
      protection public
      9 lines of code
      3 parameters
      3 conditional paths
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function isExceptionHandler() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable HANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable cfg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function createEdge(BasicBlock,BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
   function addEdgeAndExplore(BasicBlock,InstructionHandle,int) in line 348
      protection public
      15 lines of code
      3 parameters
      3 conditional paths
      uses variable usedInstructionSet defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   function addInstruction(InstructionHandle) in line 249
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable usedInstructionSet defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   function addItem(WorkListItem) in line 195
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function allocateBasicBlock() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function allocate() defined in edu::umd::cs::findbugs::ba::CFG
   function containsInstruction(InstructionHandle) in line 260
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function escapeTargetIterator(BasicBlock) in line 387
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable emptyEscapeTargetList defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   function getBlock(InstructionHandle) in line 273
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable start defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
      uses variable exceptionHandlerMap defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getHandlerForStartInstruction(InstructionHandle) defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
      uses function setExceptionGen(CodeExceptionGen) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function WorkListItem(InstructionHandle,BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   function getCFG() in line 238
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   function getEntry() in line 216
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
   function getExit() in line 223
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
   function getStartBlock() in line 231
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable start defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   function getStartInstruction() in line 181
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable start defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   function hasMoreWork() in line 202
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isExitBlock(BasicBlock) in line 317
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function isReturnBlock(BasicBlock) in line 301
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function isUnhandledExceptionBlock(BasicBlock) in line 334
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function nextItem() in line 209
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setExitBlock(BasicBlock) in line 310
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function setReturnBlock(BasicBlock) in line 294
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function setUnhandledExceptionBlock(BasicBlock) in line 327
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function Subroutine(InstructionHandle) in line 166
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses variable start defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   variable blockMap in line 154
   variable cfg in line 153
   variable escapeTargetListMap in line 155
   variable exitBlockSet in line 157
   variable instructionSet in line 152
   variable returnBlockSet in line 156
   variable start in line 151
   variable unhandledExceptionBlockSet in line 158
   variable workList in line 159
module edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
   function addItem(BasicBlock) in line 447
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function checkForRecursion() in line 496
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable subroutine defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
      uses variable caller defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
   function getBlock(BasicBlock) in line 483
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function allocate() defined in edu::umd::cs::findbugs::ba::CFG
   function getCaller() in line 426
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getResult() in line 440
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSubroutine() in line 433
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasMoreWork() in line 454
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function mapBlock(BasicBlock,BasicBlock) in line 472
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function nextItem() in line 461
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Context(@Nullable Context,Subroutine,CFG) in line 415
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
   variable blockMap in line 405
   variable caller in line 402
   variable result in line 404
   variable subroutine in line 403
   variable workList in line 406
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/BlockOrder.java
module edu::umd::cs::findbugs::ba::BlockOrder
   function blockIterator() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/BlockType.java
module edu::umd::cs::findbugs::ba::BlockType
   inherits from java::util::BitSet
   function copyFrom(BlockType) in line 176
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable isValid defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable isTop defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
   function equals(Object) in line 81
      protection public
      16 lines of code
      1 parameters
      7 conditional paths
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
      uses function isTop() defined in edu::umd::cs::findbugs::ba::BlockType
      uses function isValid() defined in edu::umd::cs::findbugs::ba::BlockType
   function getDepth() in line 111
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
   function getTopValue() in line 119
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
   function hashCode() in line 71
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
      uses function isTop() defined in edu::umd::cs::findbugs::ba::BlockType
      uses function isValid() defined in edu::umd::cs::findbugs::ba::BlockType
   function isBottom() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::BlockType
      uses function isTop() defined in edu::umd::cs::findbugs::ba::BlockType
   function isNormal() in line 128
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::BlockType
      uses function getDepth() defined in edu::umd::cs::findbugs::ba::BlockType
   function isTop() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::BlockType
   function isValid() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function mergeWith(BlockType) in line 221
      protection public
      14 lines of code
      1 parameters
      5 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::BlockType
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::BlockType
      uses function copyFrom(BlockType) defined in edu::umd::cs::findbugs::ba::BlockType
      uses function isValid() defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
   function push(boolean) in line 266
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
   function pushCatch() in line 239
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function push(boolean) defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable CATCH defined in edu::umd::cs::findbugs::ba::BlockType
   function pushFinally() in line 246
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function push(boolean) defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable FINALLY defined in edu::umd::cs::findbugs::ba::BlockType
   function sameAs(BlockType) in line 193
      protection public
      22 lines of code
      1 parameters
      6 conditional paths
      uses variable isValid defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable isTop defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
   function setBottom() in line 166
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setNormal() in line 136
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setTop() in line 151
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 251
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::BlockType
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable CATCH defined in edu::umd::cs::findbugs::ba::BlockType
   variable CATCH in line 56
      protection public
   variable depth in line 61
   variable FINALLY in line 57
      protection public
   variable isTop in line 60
   variable isValid in line 59
   variable serialVersionUID in line 55
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/BlockTypeAnalysis.java
module edu::umd::cs::findbugs::ba::BlockTypeAnalysis
   inherits from BasicAbstractDataflowAnalysis< BlockType >
   function copy(BlockType,BlockType) in line 52
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(BlockType) defined in edu::umd::cs::findbugs::ba::BlockType
   function createFact() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBlockOrder(CFG) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::BlockTypeAnalysis
   function initEntryFact(BlockType) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isForwards() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTop(BlockType) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::BlockType
   function makeFactTop(BlockType) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::BlockType
   function meetInto(BlockType,Edge,BlockType) in line 99
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function same(BlockType,BlockType) in line 74
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function sameAs(BlockType) defined in edu::umd::cs::findbugs::ba::BlockType
   function transfer(BasicBlock,@CheckForNull InstructionHandle,BlockType,BlockType) in line 78
      protection public
      20 lines of code
      4 parameters
      4 conditional paths
   function BlockTypeAnalysis(DepthFirstSearch) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::BlockTypeAnalysis
   variable dfs in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/BlockTypeDataflow.java
module edu::umd::cs::findbugs::ba::BlockTypeDataflow
   inherits from Dataflow< BlockType, BlockTypeAnalysis >
   function BlockTypeDataflow(CFG,BlockTypeAnalysis) in line 26
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< BlockType, BlockTypeAnalysis >
      uses variable analysis defined in Dataflow< BlockType, BlockTypeAnalysis >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/BytecodeScanner.java
module edu::umd::cs::findbugs::ba::BytecodeScanner
   inherits from org::apache::bcel::Constants
   function extractInt(byte[],int) in line 70
      6 lines of code
      2 parameters
      1 conditional paths
   function scan(byte[],Callback) in line 85
      protection public
      307 lines of code
      2 parameters
      209 conditional paths
      uses function unsignedValueOf(byte) defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses function handleInstruction(int,int) defined in edu::umd::cs::findbugs::ba::BytecodeScanner::Callback
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses variable PAD defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses function extractInt(byte[],int) defined in edu::umd::cs::findbugs::ba::BytecodeScanner
   function unsignedValueOf(byte) in line 53
      10 lines of code
      1 parameters
      2 conditional paths
   variable DEBUG in line 32
   variable PAD in line 77
module edu::umd::cs::findbugs::ba::BytecodeScanner::Callback
   function handleInstruction(int,int) in line 44
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ca/Call.java
module edu::umd::cs::findbugs::ba::ca::Call
   function equals(Object) in line 46
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function Call(String,String,String) defined in edu::umd::cs::findbugs::ba::ca::Call
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::ca::Call
      uses variable className defined in edu::umd::cs::findbugs::ba::ca::Call
      uses variable methodName defined in edu::umd::cs::findbugs::ba::ca::Call
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::ca::Call
   function getClassName() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::ca::Call
   function getMethodName() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::ca::Call
   function getMethodSig() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::ca::Call
   function hashCode() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::ca::Call
      uses variable methodName defined in edu::umd::cs::findbugs::ba::ca::Call
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::ca::Call
   function Call(String,String,String) in line 26
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::ca::Call
      uses variable methodName defined in edu::umd::cs::findbugs::ba::ca::Call
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::ca::Call
   variable className in line 22
   variable methodName in line 23
   variable methodSig in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ca/CallList.java
module edu::umd::cs::findbugs::ba::ca::CallList
   function add(Call) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function callIterator() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function clear() in line 60
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function copyFrom(CallList) in line 77
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function equals(Object) in line 107
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function CallList() defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function get(int) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function hashCode() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function isBottom() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTop() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isValid() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::ca::CallList
   function merge(CallList,CallList) in line 84
      protection public
      20 lines of code
      2 parameters
      6 conditional paths
      uses function CallList() defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses variable isTop defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses function copyFrom(CallList) defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses function size() defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses function get(int) defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::ca::Call
      uses function add(Call) defined in edu::umd::cs::findbugs::ba::ca::CallList
   function setBottom() in line 54
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function setTop() in line 48
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function size() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function toString() in line 121
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function CallList() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable callList in line 26
   variable isTop in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ca/CallListAnalysis.java
module edu::umd::cs::findbugs::ba::ca::CallListAnalysis
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflowAnalysis
   function buildCallMap(CFG,ConstantPoolGen) in line 52
      16 lines of code
      2 parameters
      3 conditional paths
      uses variable callMap defined in edu::umd::cs::findbugs::ba::ca::CallListAnalysis
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
   function copy(CallList,CallList) in line 107
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(CallList) defined in edu::umd::cs::findbugs::ba::ca::CallList
   function createFact() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBlockOrder(CFG) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ca::CallListAnalysis
   function initEntryFact(CallList) in line 69
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function clear() defined in edu::umd::cs::findbugs::ba::ca::CallList
   function isFactValid(CallList) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::ca::CallList
   function isForwards() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTop(CallList) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::ca::CallList
   function makeFactTop(CallList) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::ca::CallList
   function meetInto(CallList,Edge,CallList) in line 101
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function copyFrom(CallList) defined in edu::umd::cs::findbugs::ba::ca::CallList
   function same(CallList,CallList) in line 97
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::ca::CallList
   function transferInstruction(InstructionHandle,BasicBlock,CallList) in line 112
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable callMap defined in edu::umd::cs::findbugs::ba::ca::CallListAnalysis
   function CallListAnalysis(CFG,DepthFirstSearch,ConstantPoolGen) in line 46
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ca::CallListAnalysis
      uses function buildCallMap(CFG,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::ca::CallListAnalysis
   variable callMap in line 44
   variable dfs in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ca/CallListDataflow.java
module edu::umd::cs::findbugs::ba::ca::CallListDataflow
   inherits from edu::umd::cs::findbugs::ba::Dataflow
   function CallListDataflow(CFG,CallListAnalysis) in line 30
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable analysis defined in edu::umd::cs::findbugs::ba::Dataflow
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/CFG.java
module edu::umd::cs::findbugs::ba::CFG
   inherits from edu::umd::cs::findbugs::graph::AbstractGraph
   inherits from edu::umd::cs::findbugs::ba::Debug
   function allocate() in line 446
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addVertex(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function allocateEdge(BasicBlock,BasicBlock) in line 486
      3 lines of code
      2 parameters
      1 conditional paths
   function blockIterator() in line 256
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function vertexIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function checkIntegrity() in line 470
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function clearFlag(int) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::ba::CFG
   function createEdge(BasicBlock,BasicBlock,int) in line 214
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function setType(int) defined in edu::umd::cs::findbugs::ba::Edge
   function getBlocks(BitSet) in line 289
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function getBlocksContainingInstructionWithOffset(int) in line 307
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function containsInstructionWithOffset(int) defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getEdgeWithType(Iterator< Edge >,int) in line 433
      8 lines of code
      2 parameters
      3 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
   function getEntry() in line 185
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable entry defined in edu::umd::cs::findbugs::ba::CFG
      uses function allocate() defined in edu::umd::cs::findbugs::ba::CFG
   function getExceptionThrowerLocation(Edge) in line 368
      protection public
      33 lines of code
      1 parameters
      8 conditional paths
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getSuccessorWithEdgeType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable removedEdgeList defined in edu::umd::cs::findbugs::ba::CFG
   function getExit() in line 195
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function allocate() defined in edu::umd::cs::findbugs::ba::CFG
   function getFlags() in line 174
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::ba::CFG
   function getIncomingEdgeWithType(BasicBlock,int) in line 418
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getEdgeWithType(Iterator< Edge >,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function incomingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function getLocationAtEntry() in line 532
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getLocationsContainingInstructionWithOffset(int) in line 324
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function getMaxEdgeId() in line 466
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNumEdgeLabels() defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function getMethodGen() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::CFG
   function getMethodName() in line 161
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::CFG
   function getNumBasicBlocks() in line 457
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNumVertices() defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function getNumNonExceptionSucessors(BasicBlock) in line 510
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
   function getOutgoingEdgeWithType(BasicBlock,int) in line 429
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getEdgeWithType(Iterator< Edge >,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function getPredecessorWithEdgeType(BasicBlock,int) in line 343
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getIncomingEdgeWithType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getSuccessorWithEdgeType(BasicBlock,int) in line 356
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getOutgoingEdgeWithType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function isFlagSet(int) in line 178
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::ba::CFG
   function locationIterator() in line 263
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function LocationIterator() defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
   function lookupBlockByLabel(int) in line 243
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function lookupEdgeById(int) in line 226
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getId() defined in edu::umd::cs::findbugs::ba::Edge
   function orderedLocations() in line 273
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
   function removedEdgeIterator() in line 407
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable removedEdgeList defined in edu::umd::cs::findbugs::ba::CFG
   function removeEdge(Edge) in line 494
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable removedEdgeList defined in edu::umd::cs::findbugs::ba::CFG
   function setFlag(int) in line 168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::ba::CFG
   function setFlags(int) in line 165
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::ba::CFG
   function setMethodGen(MethodGen) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::CFG
   function setMethodName(String) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::CFG
   function CFG() in line 142
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable BUSY in line 63
      protection public
   variable entry in line 128
   variable flags in line 129
   variable FOUND_INEXACT_UNCONDITIONAL_THROWERS in line 65
      protection public
   variable methodGen in line 131
   variable methodName in line 130
   variable PRUNED_FAILED_ASSERTION_EDGES in line 60
      protection public
   variable PRUNED_INFEASIBLE_EXCEPTIONS in line 49
      protection public
   variable PRUNED_UNCONDITIONAL_THROWERS in line 53
      protection public
   variable REFINED in line 57
      protection public
   variable removedEdgeList in line 132
module edu::umd::cs::findbugs::ba::CFG::LocationIterator
   inherits from java::util::Iterator
   function findNext() in line 106
      16 lines of code
      0 parameters
      5 conditional paths
      uses function next() defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
      uses variable instructionIter defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
      uses variable blockIter defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
      uses variable curBlock defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function hasNext() in line 89
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
      uses function next() defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
   function next() in line 94
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
   function remove() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function LocationIterator() in line 84
      4 lines of code
      0 parameters
      1 conditional paths
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function findNext() defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
   variable blockIter in line 79
   variable curBlock in line 80
   variable instructionIter in line 81
   variable next in line 82
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/CFGBuilder.java
module edu::umd::cs::findbugs::ba::CFGBuilder
   function build() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCFG() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/CFGBuilderException.java
module edu::umd::cs::findbugs::ba::CFGBuilderException
   inherits from edu::umd::cs::findbugs::classfile::CheckedAnalysisException
   function CFGBuilderException(String) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable serialVersionUID in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/CFGBuilderFactory.java
module edu::umd::cs::findbugs::ba::CFGBuilderFactory
   function create(@NonNull MethodGen) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/CFGPrinter.java
module edu::umd::cs::findbugs::ba::CFGPrinter
   function blockAnnotate(BasicBlock) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function blockStartAnnotate(BasicBlock) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function edgeAnnotate(Edge) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function instructionAnnotate(InstructionHandle,BasicBlock) in line 104
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function instructionIterator(BasicBlock) in line 108
      6 lines of code
      1 parameters
      2 conditional paths
      uses function isForwards() defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function instructionReverseIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isForwards() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function print(PrintStream) in line 62
      protection public
      29 lines of code
      1 parameters
      6 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function blockStartAnnotate(BasicBlock) defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionGen() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function instructionIterator(BasicBlock) defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function instructionAnnotate(InstructionHandle,BasicBlock) defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function blockAnnotate(BasicBlock) defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function isForwards() defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function incomingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function formatAsString(boolean) defined in edu::umd::cs::findbugs::ba::Edge
      uses function edgeAnnotate(Edge) defined in edu::umd::cs::findbugs::ba::CFGPrinter
   function setIsForwards(boolean) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isForwards() defined in edu::umd::cs::findbugs::ba::CFGPrinter
   function CFGPrinter(CFG) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::CFGPrinter
   variable cfg in line 43
   variable isForwards in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ch/ClassVertex.java
module edu::umd::cs::findbugs::ba::ch::ClassVertex
   inherits from edu::umd::cs::findbugs::graph::AbstractVertex
   function createMissingClassVertex(ClassDescriptor,boolean) in line 95
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function createResolvedClassVertex(ClassDescriptor,XClass) in line 84
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function equals(Object) in line 51
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getClassDescriptor() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDirectSuperclass() in line 177
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getXClass() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isApplicationClass() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isFinished() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isFlagSet(int) in line 189
      3 lines of code
      1 parameters
      1 conditional paths
   function isInterface() in line 161
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isResolved() in line 117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function markAsApplicationClass() in line 138
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setDirectSuperclass(ClassVertex) in line 170
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFinished(boolean) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFlag(int,boolean) in line 181
      7 lines of code
      2 parameters
      1 conditional paths
   function setInterface() in line 153
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ClassVertex(ClassDescriptor,XClass) in line 59
      8 lines of code
      2 parameters
      1 conditional paths
   function ClassVertex(ClassDescriptor,boolean) in line 68
      8 lines of code
      2 parameters
      1 conditional paths
   variable APPLICATION_CLASS in line 38
   variable classDescriptor in line 41
   variable directSuperclass in line 44
   variable FINISHED in line 37
   variable flags in line 43
   variable INTERFACE in line 39
   variable xclass in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ch/InheritanceEdge.java
module edu::umd::cs::findbugs::ba::ch::InheritanceEdge
   inherits from edu::umd::cs::findbugs::graph::AbstractEdge
   function InheritanceEdge(ClassVertex,ClassVertex) in line 33
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable target defined in edu::umd::cs::findbugs::graph::AbstractEdge
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ch/InheritanceGraph.java
module edu::umd::cs::findbugs::ba::ch::InheritanceGraph
   inherits from edu::umd::cs::findbugs::graph::AbstractGraph
   function allocateEdge(ClassVertex,ClassVertex) in line 35
      3 lines of code
      2 parameters
      1 conditional paths
   function createEdge(ClassVertex,ClassVertex) in line 43
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ch/InheritanceGraphVisitor.java
module edu::umd::cs::findbugs::ba::ch::InheritanceGraphVisitor
   function visitClass(ClassDescriptor,@CheckForNull XClass) in line 40
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visitEdge(ClassDescriptor,XClass,ClassDescriptor,@CheckForNull XClass) in line 51
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ch/InterproceduralCallGraph.java
module edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraph
   inherits from edu::umd::cs::findbugs::graph::AbstractGraph
   function addVertex(InterproceduralCallGraphVertex) in line 50
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable methodDescToVertexMap defined in edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraph
      uses function getXmethod() defined in edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraphVertex
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
   function allocateEdge(InterproceduralCallGraphVertex,InterproceduralCallGraphVertex) in line 70
      3 lines of code
      2 parameters
      1 conditional paths
   function lookupVertex(MethodDescriptor) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodDescToVertexMap defined in edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraph
   function InterproceduralCallGraph() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable methodDescToVertexMap in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ch/InterproceduralCallGraphEdge.java
module edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraphEdge
   inherits from edu::umd::cs::findbugs::graph::AbstractEdge
   function InterproceduralCallGraphEdge(InterproceduralCallGraphVertex,InterproceduralCallGraphVertex) in line 38
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable target defined in edu::umd::cs::findbugs::graph::AbstractEdge
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ch/InterproceduralCallGraphVertex.java
module edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraphVertex
   inherits from edu::umd::cs::findbugs::graph::AbstractVertex
   function getXmethod() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraphVertex
   function setXmethod(XMethod) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraphVertex
   variable xmethod in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ch/OverriddenMethodsVisitor.java
module edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
   inherits from edu::umd::cs::findbugs::ba::ch::InheritanceGraphVisitor
   abstract class
   function getXmethod() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
   function visitClass(ClassDescriptor,XClass) in line 58
      protection public
      25 lines of code
      2 parameters
      4 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
      uses function isBridged() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getBridgeSignature() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isInterface() defined in edu::umd::cs::findbugs::ba::XClass
      uses function visitOverriddenMethod(XMethod) defined in edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
   function visitEdge(ClassDescriptor,XClass,ClassDescriptor,XClass) in line 87
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function visitOverriddenMethod(XMethod) defined in edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
   function visitOverriddenMethod(XMethod) in line 101
      1 lines of code
      1 parameters
      1 conditional paths
   function OverriddenMethodsVisitor(XMethod) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   variable xmethod in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ch/Subtypes2.java
module edu::umd::cs::findbugs::ba::ch::Subtypes2
   function addApplicationClass(XClass) in line 162
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function addClassAndGetClassVertex(XClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function addClass(XClass) in line 184
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addClassAndGetClassVertex(XClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function addClassAndGetClassVertex(XClass) in line 196
      28 lines of code
      1 parameters
      5 conditional paths
      uses variable classDescriptorToVertexMap defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function addVertexToGraph(ClassDescriptor,ClassVertex) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function addSupertypeEdges(ClassVertex,LinkedList< XClass >) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function addClassVertexForMissingClass(ClassDescriptor,boolean) in line 1129
      9 lines of code
      2 parameters
      1 conditional paths
      uses function addVertexToGraph(ClassDescriptor,ClassVertex) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function addInheritanceEdge(ClassVertex,ClassDescriptor,boolean,@CheckForNull LinkedList< XClass >) in line 1083
      38 lines of code
      4 parameters
      7 conditional paths
      uses variable classDescriptorToVertexMap defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addClassVertexForMissingClass(ClassDescriptor,boolean) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function addVertexToGraph(ClassDescriptor,ClassVertex) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable graph defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function lookupEdge(VertexType,VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function createEdge(ClassVertex,ClassVertex) defined in edu::umd::cs::findbugs::ba::ch::InheritanceGraph
   function addSupertypeEdges(ClassVertex,LinkedList< XClass >) in line 1061
      12 lines of code
      2 parameters
      3 conditional paths
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function addInheritanceEdge(ClassVertex,ClassDescriptor,boolean,@CheckForNull LinkedList< XClass >) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
   function addToWorkList(LinkedList< SupertypeTraversalPath >,SupertypeTraversalPath,ClassDescriptor) in line 835
      17 lines of code
      3 parameters
      2 conditional paths
      uses variable classDescriptorToVertexMap defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function hasBeenSeen(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeTraversalPath
      uses function fork(ClassVertex) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeTraversalPath
   function addVertexToGraph(ClassDescriptor,ClassVertex) in line 225
      19 lines of code
      2 parameters
      4 conditional paths
      uses variable classDescriptorToVertexMap defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable graph defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function addVertex(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable xclassSet defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function addInheritanceEdge(ClassVertex,ClassDescriptor,boolean,@CheckForNull LinkedList< XClass >) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function checkFirstCommonSuperclassQueryCache(ReferenceType,ReferenceType) in line 635
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable firstCommonSuperclassQueryCache defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function get(K1,K2) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
   function computeFirstCommonSuperclassOfDifferentDimensionArrays(ArrayType,ArrayType) in line 505
      36 lines of code
      2 parameters
      4 conditional paths
   function computeFirstCommonSuperclassOfObjectTypes(ObjectType,ObjectType) in line 573
      52 lines of code
      2 parameters
      10 conditional paths
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function resolveClassVertex(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function computeKnownSupertypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getAllSuperclassVertices(ClassVertex) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getPackageName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function computeFirstCommonSuperclassOfReferenceTypes(ReferenceType,ReferenceType) in line 429
      27 lines of code
      2 parameters
      4 conditional paths
      uses function computeFirstCommonSuperclassOfSameDimensionArrays(ArrayType,ArrayType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function computeFirstCommonSuperclassOfDifferentDimensionArrays(ArrayType,ArrayType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getFirstCommonSuperclass(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function computeFirstCommonSuperclassOfSameDimensionArrays(ArrayType,ArrayType) in line 465
      31 lines of code
      2 parameters
      3 conditional paths
      uses function getFirstCommonSuperclass(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function computeKnownSubtypes(ClassDescriptor) in line 882
      29 lines of code
      1 parameters
      4 conditional paths
      uses function resolveClassVertex(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable graph defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function incomingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function computeKnownSupertypes(ClassDescriptor) in line 912
      29 lines of code
      1 parameters
      4 conditional paths
      uses function resolveClassVertex(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable graph defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function computeSupertypes(ClassDescriptor) in line 966
      43 lines of code
      1 parameters
      7 conditional paths
      uses variable DEBUG_QUERIES defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function optionallyResolveClassVertex(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable supertypeSet defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeQueryResults
      uses variable graph defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getAllSuperclassVertices(ClassVertex) in line 652
      12 lines of code
      1 parameters
      3 conditional paths
   function getDirectSubtypes(ClassDescriptor) in line 704
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses function resolveClassVertex(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable graph defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function incomingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getFirstCommonSuperclass(ReferenceType,ReferenceType) in line 415
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses function checkFirstCommonSuperclassQueryCache(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function computeFirstCommonSuperclassOfReferenceTypes(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function putFirstCommonSuperclassQueryCache(ReferenceType,ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function getFirstCommonSuperclass(ObjectType,ObjectType) in line 558
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses function checkFirstCommonSuperclassQueryCache(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function computeFirstCommonSuperclassOfObjectTypes(ObjectType,ObjectType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable firstCommonSuperclassQueryCache defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function put(K1,K2,V) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
   function getGraph() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable graph defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function getSubtypes(ClassDescriptor) in line 673
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable subtypeSetMap defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function computeKnownSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function getSupertypeQueryResults(ClassDescriptor) in line 950
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable supertypeSetMap defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function computeSupertypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function getTransitiveCommonSubtypes(ClassDescriptor,ClassDescriptor) in line 727
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function getSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function getXClassCollection() in line 741
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable xclassSet defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function hasSubtypes(ClassDescriptor) in line 689
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getDirectSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function instanceOf(@DottedClassName String,@DottedClassName String) in line 124
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function instanceOf(ClassDescriptor,@DottedClassName String) in line 135
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function instanceOf(JavaClass,@DottedClassName String) in line 146
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function isApplicationClass(ClassDescriptor) in line 169
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function resolveClassVertex(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function isSubtype(ReferenceType,ReferenceType) in line 255
      protection public
      71 lines of code
      2 parameters
      12 conditional paths
      uses variable SERIALIZABLE defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable CLONEABLE defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function isSubtype(ClassDescriptor,ClassDescriptor) in line 327
      protection public
      15 lines of code
      2 parameters
      4 conditional paths
      uses function getSupertypeQueryResults(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function containsType(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeQueryResults
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
   function isSubtype(ObjectType,ObjectType) in line 352
      protection public
      46 lines of code
      2 parameters
      10 conditional paths
      uses variable DEBUG_QUERIES defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function resolveClassVertex(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getSupertypeQueryResults(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable supertypeSet defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeQueryResults
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function containsType(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeQueryResults
   function optionallyResolveClassVertex(ClassDescriptor) in line 1033
      18 lines of code
      1 parameters
      3 conditional paths
      uses variable classDescriptorToVertexMap defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addClassVertexForMissingClass(ClassDescriptor,boolean) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function addClassAndGetClassVertex(XClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function putFirstCommonSuperclassQueryCache(ReferenceType,ReferenceType,ReferenceType) in line 626
      8 lines of code
      3 parameters
      2 conditional paths
      uses variable firstCommonSuperclassQueryCache defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function put(K1,K2,V) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
   function resolveClassVertex(ClassDescriptor) in line 1018
      10 lines of code
      1 parameters
      2 conditional paths
      uses function optionallyResolveClassVertex(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function traverseEdge(ClassVertex,@CheckForNull ClassDescriptor,boolean,InheritanceGraphVisitor) in line 853
      22 lines of code
      4 parameters
      4 conditional paths
      uses variable classDescriptorToVertexMap defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function resolveClassVertex(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function addClassVertexForMissingClass(ClassDescriptor,boolean) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function visitEdge(ClassDescriptor,XClass,ClassDescriptor,@CheckForNull XClass) defined in edu::umd::cs::findbugs::ba::ch::InheritanceGraphVisitor
   function traverseSupertypes(ClassDescriptor,InheritanceGraphVisitor) in line 797
      protection public
      37 lines of code
      2 parameters
      7 conditional paths
      uses function resolveClassVertex(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getNext() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeTraversalPath
      uses function hasBeenSeen(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeTraversalPath
      uses function markSeen(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeTraversalPath
      uses function traverseEdge(ClassVertex,@CheckForNull ClassDescriptor,boolean,InheritanceGraphVisitor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function addToWorkList(LinkedList< SupertypeTraversalPath >,SupertypeTraversalPath,ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function Subtypes2() in line 106
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   variable classDescriptorToVertexMap in line 66
   variable CLONEABLE in line 73
   variable DEBUG in line 62
      protection public
   variable DEBUG_QUERIES in line 63
      protection public
   variable ENABLE_SUBTYPES2 in line 59
      protection public
   variable ENABLE_SUBTYPES2_FOR_COMMON_SUPERCLASS_QUERIES in line 60
      protection public
   variable firstCommonSuperclassQueryCache in line 70
   variable graph in line 65
   variable SERIALIZABLE in line 72
   variable subtypeSetMap in line 68
   variable supertypeSetMap in line 67
   variable xclassSet in line 69
module edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeQueryResults
   function addSupertype(ClassDescriptor) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable supertypeSet defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeQueryResults
   function containsType(ClassDescriptor) in line 90
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable supertypeSet defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeQueryResults
      uses variable encounteredMissingClasses defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeQueryResults
   function setEncounteredMissingClasses(boolean) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable encounteredMissingClasses defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeQueryResults
   variable encounteredMissingClasses in line 80
   variable supertypeSet in line 79
module edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeTraversalPath
   function fork(ClassVertex) in line 779
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function setNext(ClassVertex) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeTraversalPath
   function getNext() in line 762
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasBeenSeen(ClassDescriptor) in line 766
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function markSeen(ClassDescriptor) in line 770
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNext(ClassVertex) in line 774
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 759
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SupertypeTraversalPath(@CheckForNull ClassVertex) in line 753
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/CheckReturnAnnotationDatabase.java
module edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
   inherits from AnnotationDatabase< CheckReturnValueAnnotation >
   function getResolvedAnnotation(Object,boolean) in line 127
      protection public
      31 lines of code
      2 parameters
      9 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable throwableClass defined in edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable CHECK_RETURN_VALUE_VERY_HIGH defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_LOW defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_MEDIUM defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
   function loadAuxiliaryAnnotations() in line 38
      protection public
      87 lines of code
      0 parameters
      4 conditional paths
      uses variable IGNORE_BUILTIN_ANNOTATIONS defined in AnnotationDatabase< CheckReturnValueAnnotation >
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addMethodAnnotation(@DottedClassName String,String,String,boolean,AnnotationEnum) defined in AnnotationDatabase< CheckReturnValueAnnotation >
      uses variable CHECK_RETURN_VALUE_LOW defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_MEDIUM_BAD_PRACTICE defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_MEDIUM defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_HIGH defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_IGNORE defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_LOW_BAD_PRACTICE defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses function addDefaultMethodAnnotation(String,AnnotationEnum) defined in AnnotationDatabase< CheckReturnValueAnnotation >
      uses variable throwableClass defined in edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
   function CheckReturnAnnotationDatabase() in line 31
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setAddClassOnly(boolean) defined in AnnotationDatabase< CheckReturnValueAnnotation >
      uses function loadAuxiliaryAnnotations() defined in edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
   variable throwableClass in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/CheckReturnValueAnnotation.java
module edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
   inherits from AnnotationEnumeration< CheckReturnValueAnnotation >
   function getPattern() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPriority() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parse(String) in line 57
      protection public
      12 lines of code
      1 parameters
      5 conditional paths
      uses variable CHECK_RETURN_VALUE_MEDIUM defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_HIGH defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_LOW defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
   function values() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable myValues defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
   function CheckReturnValueAnnotation(String,int,int) in line 79
      5 lines of code
      3 parameters
      1 conditional paths
   function CheckReturnValueAnnotation(String,int,String,int) in line 84
      5 lines of code
      4 parameters
      1 conditional paths
   variable CHECK_RETURN_VALUE_HIGH in line 35
      protection public
   variable CHECK_RETURN_VALUE_IGNORE in line 44
      protection public
   variable CHECK_RETURN_VALUE_LOW in line 40
      protection public
   variable CHECK_RETURN_VALUE_LOW_BAD_PRACTICE in line 48
      protection public
   variable CHECK_RETURN_VALUE_MEDIUM in line 38
      protection public
   variable CHECK_RETURN_VALUE_MEDIUM_BAD_PRACTICE in line 50
      protection public
   variable CHECK_RETURN_VALUE_UNKNOWN in line 32
      protection public
   variable CHECK_RETURN_VALUE_VERY_HIGH in line 46
      protection public
   variable myValues in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ClassContext.java
module edu::umd::cs::findbugs::ba::ClassContext
   function dumpDataflowInformation(Method) in line 823
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getUnconditionalValueDerefDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function dumpDataflowInformation(Method,CFG,ValueNumberDataflow,IsNullValueDataflow,@CheckForNull UnconditionalValueDerefDataflow,@CheckForNull TypeDataflow) in line 843
      protection public
      23 lines of code
      6 parameters
      7 conditional paths
   function dumpLiveLocalStoreDataflow(MethodDescriptor,CFG,LiveLocalStoreDataflow) in line 894
      protection public
      15 lines of code
      3 parameters
      8 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable jclass defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function dumpSimpleDataflowInformation(Method) in line 813
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function dumpDataflowInformation(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function dumpTypeDataflow(Method,CFG,TypeDataflow) in line 872
      protection public
      15 lines of code
      3 parameters
      3 conditional paths
   function getAnalysisContext() in line 294
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisContext defined in edu::umd::cs::findbugs::ba::ClassContext
   function getAssertionMethods() in line 674
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBlockTypeDataflow(Method) in line 652
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getBytecodeSet(Method) in line 419
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable jclass defined in edu::umd::cs::findbugs::ba::ClassContext
   function getBytecodeSet(JavaClass,Method) in line 434
      protection public
      25 lines of code
      2 parameters
      4 conditional paths
      uses function scan(byte[],Callback) defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses function getUnpackedCode() defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedBytecodeCallback
      uses function getBytecodeSet() defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedCode
   function getCallListDataflow(Method) in line 723
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getCFG(Method) in line 330
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getClassDescriptor() in line 211
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classInfo defined in edu::umd::cs::findbugs::ba::ClassContext
   function getCompactLocationNumbering(Method) in line 782
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getConstantDataflow(Method) in line 686
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getConstantPoolGen() in line 340
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefinitelyNullSetDataflow(Method) in line 795
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getDepthFirstSearch(Method) in line 390
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getExceptionSetFactory(Method) in line 610
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFullyQualifiedMethodName(Method) in line 233
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getIsNullValueDataflow(Method) in line 370
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getJavaClass() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable jclass defined in edu::umd::cs::findbugs::ba::ClassContext
   function getLiveLocalStoreDataflow(Method) in line 641
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getLoadDataflow(Method) in line 699
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getLoadedFieldSet(Method) in line 631
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getLockChecker(Method) in line 553
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getLockDataflow(Method) in line 537
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getLookupFailureCallback() in line 303
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisContext defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getLoopExitBranches(Method,MethodGen) in line 460
      protection public
      25 lines of code
      2 parameters
      18 conditional paths
   function getMethod(MethodGen) in line 221
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable jclass defined in edu::umd::cs::findbugs::ba::ClassContext
   function getMethodAnalysis(Class<?>,MethodDescriptor) in line 165
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getObjectMap(Class<?>) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getMethodGen(Method) in line 315
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMethodsInCallOrder() in line 238
      protection public
      52 lines of code
      0 parameters
      10 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function get(K) defined in edu::umd::cs::findbugs::util::MultiMap
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
   function getNonExceptionDominatorsAnalysis(Method) in line 575
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getNonExceptionPostDominatorsAnalysis(Method) in line 599
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getNonImplicitExceptionDominatorsAnalysis(Method) in line 587
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getObjectMap(Class<?>) in line 126
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable methodAnalysisObjectMap defined in edu::umd::cs::findbugs::ba::ClassContext
   function getOffsetToOpcodeMap(Method) in line 526
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getOffsetToBytecodeMap() defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedCode
   function getParameterSignatureList(Method) in line 621
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getReturnPathDataflow(Method) in line 563
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getReturnPathTypeDataflow(Method) in line 808
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getReverseDepthFirstSearch(Method) in line 400
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getStoreDataflow(Method) in line 711
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getTypeDataflow(Method) in line 380
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getUnconditionalValueDerefDataflow(Method) in line 770
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getUsagesRequiringNonNullValues(Method) in line 350
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getValueNumberDataflow(Method) in line 360
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getXClass() in line 208
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classInfo defined in edu::umd::cs::findbugs::ba::ClassContext
   function indent() in line 97
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
      uses variable depth defined in edu::umd::cs::findbugs::ba::ClassContext
   function linesMentionedMultipleTimes(Method) in line 729
      protection public
      32 lines of code
      1 parameters
      10 conditional paths
   function purgeAllMethodAnalyses() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodAnalysisObjectMap defined in edu::umd::cs::findbugs::ba::ClassContext
   function purgeMethodAnalyses(MethodDescriptor) in line 179
      protection public
      21 lines of code
      1 parameters
      3 conditional paths
      uses variable methodAnalysisObjectMap defined in edu::umd::cs::findbugs::ba::ClassContext
   function putMethodAnalysis(Class<?>,MethodDescriptor,Object) in line 149
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses function getObjectMap(Class<?>) defined in edu::umd::cs::findbugs::ba::ClassContext
   function ClassContext(JavaClass,AnalysisContext) in line 115
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable jclass defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable analysisContext defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable classInfo defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   variable analysisContext in line 103
   variable classInfo in line 102
   variable DEBUG in line 89
      protection public
   variable depth in line 95
      protection public
   variable DUMP_DATAFLOW_ANALYSIS in line 93
      protection public
   variable jclass in line 101
   variable methodAnalysisObjectMap in line 104
   variable TIME_ANALYSES in line 91
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ClassHash.java
module edu::umd::cs::findbugs::ba::ClassHash
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   inherits from Comparable
   function compareTo(ClassHash) in line 317
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
   function computeHash(JavaClass) in line 140
      protection public
      62 lines of code
      1 parameters
      6 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassHash
      uses function work(MessageDigest,String,CharsetEncoder) defined in edu::umd::cs::findbugs::ba::ClassHash
      uses function computeHash(Method) defined in edu::umd::cs::findbugs::ba::MethodHash
      uses variable methodHashMap defined in edu::umd::cs::findbugs::ba::ClassHash
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
   function equals(Object) in line 310
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function isSameHash(ClassHash) defined in edu::umd::cs::findbugs::ba::ClassHash
   function getClassHash() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
   function getClassName() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::ClassHash
   function getMethodHash(XMethod) in line 130
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodHashMap defined in edu::umd::cs::findbugs::ba::ClassHash
   function hashCode() in line 298
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
   function hashToString(byte[]) in line 249
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable HEX_CHARS defined in edu::umd::cs::findbugs::ba::ClassHash
   function hexDigitValue(char) in line 258
      10 lines of code
      1 parameters
      4 conditional paths
   function isSameHash(ClassHash) in line 293
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
   function setClassHash(byte[]) in line 119
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
   function setMethodHash(XMethod,byte[]) in line 90
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable methodHashMap defined in edu::umd::cs::findbugs::ba::ClassHash
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function stringToHash(String) in line 275
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function hexDigitValue(char) defined in edu::umd::cs::findbugs::ba::ClassHash
   function toString() in line 328
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassHash
      uses function hashToString(byte[]) defined in edu::umd::cs::findbugs::ba::ClassHash
   function work(MessageDigest,String,CharsetEncoder) in line 203
      17 lines of code
      3 parameters
      2 conditional paths
   function writeXML(XMLOutput) in line 221
      protection public
      17 lines of code
      1 parameters
      2 conditional paths
      uses variable CLASS_HASH_ELEMENT_NAME defined in edu::umd::cs::findbugs::ba::ClassHash
      uses variable className defined in edu::umd::cs::findbugs::ba::ClassHash
      uses function hashToString(byte[]) defined in edu::umd::cs::findbugs::ba::ClassHash
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
      uses variable methodHashMap defined in edu::umd::cs::findbugs::ba::ClassHash
      uses variable METHOD_HASH_ELEMENT_NAME defined in edu::umd::cs::findbugs::ba::ClassHash
   function ClassHash() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ClassHash(String,byte[]) in line 77
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::ClassHash
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
   variable CLASS_HASH_ELEMENT_NAME in line 53
      protection public
   variable classHash in line 62
   variable className in line 61
   variable HEX_CHARS in line 239
   variable METHOD_HASH_ELEMENT_NAME in line 58
      protection public
   variable methodHashMap in line 63
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ClassMember.java
module edu::umd::cs::findbugs::ba::ClassMember
   inherits from java::io::Serializable
   inherits from edu::umd::cs::findbugs::ba::AccessibleEntity
   inherits from Comparable
   inherits from edu::umd::cs::findbugs::classfile::FieldOrMethodName
   function getClassName() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 50
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPackageName() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSignature() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSourceSignature() in line 60
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isResolved() in line 65
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ClassNotFoundExceptionParser.java
module edu::umd::cs::findbugs::ba::ClassNotFoundExceptionParser
   function getMissingClassName(ClassNotFoundException) in line 67
      protection public
      25 lines of code
      1 parameters
      6 conditional paths
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable patternList defined in edu::umd::cs::findbugs::ba::ClassNotFoundExceptionParser
   variable BCEL_MISSING_CLASS_PATTERN in line 42
   variable patternList in line 50
   variable TYPE_REPOSITORY_MISSING_CLASS_PATTERN in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ClassSummary.java
module edu::umd::cs::findbugs::ba::ClassSummary
   function checksForEqualTo(ClassDescriptor,ClassDescriptor) in line 44
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::ba::ClassSummary
      uses variable veryFunky defined in edu::umd::cs::findbugs::ba::ClassSummary
   function mightBeEqualTo(ClassDescriptor,ClassDescriptor) in line 40
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable map defined in edu::umd::cs::findbugs::ba::ClassSummary
      uses variable veryFunky defined in edu::umd::cs::findbugs::ba::ClassSummary
   variable map in line 36
   variable veryFunky in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/CompactLocationNumbering.java
module edu::umd::cs::findbugs::ba::CompactLocationNumbering
   function build(CFG) in line 79
      9 lines of code
      1 parameters
      2 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses variable locationToNumberMap defined in edu::umd::cs::findbugs::ba::CompactLocationNumbering
      uses variable numberToLocationMap defined in edu::umd::cs::findbugs::ba::CompactLocationNumbering
   function getLocation(int) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable numberToLocationMap defined in edu::umd::cs::findbugs::ba::CompactLocationNumbering
   function getNumber(Location) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable locationToNumberMap defined in edu::umd::cs::findbugs::ba::CompactLocationNumbering
   function getSize() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable locationToNumberMap defined in edu::umd::cs::findbugs::ba::CompactLocationNumbering
   function CompactLocationNumbering(CFG) in line 41
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function build(CFG) defined in edu::umd::cs::findbugs::ba::CompactLocationNumbering
   variable locationToNumberMap in line 33
   variable numberToLocationMap in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/CompoundMethodChooser.java
module edu::umd::cs::findbugs::ba::CompoundMethodChooser
   inherits from edu::umd::cs::findbugs::ba::JavaClassAndMethodChooser
   function choose(JavaClassAndMethod) in line 33
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
   function choose(XMethod) in line 44
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
   function CompoundMethodChooser(JavaClassAndMethodChooser[]) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/constant/Constant.java
module edu::umd::cs::findbugs::ba::constant::Constant
   function equals(Object) in line 111
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function Constant(@Nullable Object) defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::constant::Constant
   function getConstantInt() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function getConstantString() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function hashCode() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function isConstant() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function isConstantInteger() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isConstant() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function isConstantString() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isConstant() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function merge(Constant,Constant) in line 101
      protection public
      7 lines of code
      2 parameters
      3 conditional paths
      uses function isConstant() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable NOT_CONSTANT defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function toString() in line 130
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function isConstant() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function Constant(@Nullable Object) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   variable NOT_CONSTANT in line 36
      protection public
   variable value in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/constant/ConstantAnalysis.java
module edu::umd::cs::findbugs::ba::constant::ConstantAnalysis
   inherits from edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   function createFact() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::constant::ConstantAnalysis
   function initEntryFact(ConstantFrame) in line 52
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function setValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable NOT_CONSTANT defined in edu::umd::cs::findbugs::ba::constant::Constant
   function meetInto(ConstantFrame,Edge,ConstantFrame) in line 70
      protection public
      21 lines of code
      3 parameters
      4 conditional paths
      uses function modifyFrame(FrameType,@Nullable FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses function pushValue(ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable NOT_CONSTANT defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses function mergeInto(FrameType,FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   function mergeValues(ConstantFrame,ConstantFrame,int) in line 93
      5 lines of code
      3 parameters
      1 conditional paths
   function transferInstruction(InstructionHandle,BasicBlock,ConstantFrame) in line 62
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses variable visitor defined in edu::umd::cs::findbugs::ba::constant::ConstantAnalysis
      uses function setFrameAndLocation(FrameType,Location) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function analyzeInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function ConstantAnalysis(MethodGen,DepthFirstSearch) in line 42
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::constant::ConstantAnalysis
   variable methodGen in line 39
   variable visitor in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/constant/ConstantDataflow.java
module edu::umd::cs::findbugs::ba::constant::ConstantDataflow
   inherits from edu::umd::cs::findbugs::ba::Dataflow
   function ConstantDataflow(CFG,ConstantAnalysis) in line 32
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable analysis defined in edu::umd::cs::findbugs::ba::Dataflow
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/constant/ConstantFrame.java
module edu::umd::cs::findbugs::ba::constant::ConstantFrame
   inherits from edu::umd::cs::findbugs::ba::Frame
   function ConstantFrame(int) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable numLocals defined in edu::umd::cs::findbugs::ba::Frame
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/constant/ConstantFrameModelingVisitor.java
module edu::umd::cs::findbugs::ba::constant::ConstantFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function getDefaultValue() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NOT_CONSTANT defined in edu::umd::cs::findbugs::ba::constant::Constant
   function visitBIPUSH(BIPUSH) in line 74
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitICONST(ICONST) in line 66
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitIINC(IINC) in line 53
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isConstantInteger() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getConstantInt() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable NOT_CONSTANT defined in edu::umd::cs::findbugs::ba::constant::Constant
   function visitLDC(LDC) in line 89
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitLDC2_W(LDC2_W) in line 96
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitSIPUSH(SIPUSH) in line 81
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function ConstantFrameModelingVisitor(ConstantPoolGen) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/Dataflow.java
module edu::umd::cs::findbugs::ba::Dataflow
   function blockId(BasicBlock) in line 419
      5 lines of code
      1 parameters
      1 conditional paths
   function debug(BasicBlock,String) in line 424
      5 lines of code
      2 parameters
      1 conditional paths
   function debug(BasicBlock,BasicBlock,Edge,String) in line 430
      4 lines of code
      4 parameters
      1 conditional paths
   function dumpDataflow(AnalysisType) in line 526
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
   function execute() in line 142
      protection public
      264 lines of code
      0 parameters
      1 conditional paths
   function getAnalysis() in line 496
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCFG() in line 503
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFactAfterLocation(Location) in line 478
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFactAtLocation(Location) in line 465
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFactOnEdge(Edge) in line 489
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFullyQualifiedMethodName() in line 100
      8 lines of code
      0 parameters
      1 conditional paths
   function getNumIterations() in line 438
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getResultFact(BasicBlock) in line 452
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getStartFact(BasicBlock) in line 445
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function logicalEntryBlock() in line 521
      3 lines of code
      0 parameters
      1 conditional paths
   function logicalPredecessorEdgeIterator(BasicBlock) in line 512
      3 lines of code
      1 parameters
      1 conditional paths
   function reportAnalysis(String) in line 410
      8 lines of code
      1 parameters
      1 conditional paths
   function Dataflow(CFG,AnalysisType) in line 70
      protection public
      26 lines of code
      2 parameters
      1 conditional paths
   variable analysis in line 57
   variable blockOrder in line 58
   variable cfg in line 56
   variable DEBUG in line 62
      protection public
   variable isForwards in line 59
   variable MAX_ITERS in line 98
   variable numIterations in line 60
module edu::umd::cs::findbugs::ba::Dataflow::ForwardProgramOrder
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(BasicBlock,BasicBlock) in line 110
      protection public
      17 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::Dataflow::BackwardProgramOrder
   inherits from edu::umd::cs::findbugs::ba::Dataflow::ForwardProgramOrder
   function compare(BasicBlock,BasicBlock) in line 132
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/DataflowAnalysis.java
module edu::umd::cs::findbugs::ba::DataflowAnalysis
   function copy(Fact,Fact) in line 95
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function createFact() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function edgeTransfer(Edge,Fact) in line 159
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function factToString(Fact) in line 193
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function finishIteration() in line 180
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBlockOrder(CFG) in line 122
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getFactAfterLocation(Location) in line 81
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getFactAtLocation(Location) in line 70
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getFactOnEdge(Edge) in line 90
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getLastUpdateTimestamp(Fact) in line 182
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getResultFact(BasicBlock) in line 59
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getStartFact(BasicBlock) in line 52
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function initEntryFact(Fact) in line 100
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isForwards() in line 114
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isTop(Fact) in line 110
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function makeFactTop(Fact) in line 105
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function meetInto(Fact,Edge,Fact) in line 169
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function same(Fact,Fact) in line 127
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function setLastUpdateTimestamp(Fact,int) in line 184
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function startIteration() in line 175
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function transfer(BasicBlock,@CheckForNull InstructionHandle,Fact,Fact) in line 143
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/DataflowAnalysisException.java
module edu::umd::cs::findbugs::ba::DataflowAnalysisException
   inherits from edu::umd::cs::findbugs::classfile::CheckedAnalysisException
   function DataflowAnalysisException() in line 39
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function DataflowAnalysisException(String) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function DataflowAnalysisException(String,Throwable) in line 57
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function DataflowAnalysisException(String,MethodGen,InstructionHandle) in line 68
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function DataflowAnalysisException(String,MethodGen,InstructionHandle,Throwable) in line 80
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
   variable serialVersionUID in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/DataflowCFGPrinter.java
module edu::umd::cs::findbugs::ba::DataflowCFGPrinter
   inherits from edu::umd::cs::findbugs::ba::CFGPrinter
   function blockAnnotate(BasicBlock) in line 68
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function isForwards() defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses variable dataflow defined in edu::umd::cs::findbugs::ba::DataflowCFGPrinter
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
   function blockStartAnnotate(BasicBlock) in line 60
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function isForwards() defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses variable dataflow defined in edu::umd::cs::findbugs::ba::DataflowCFGPrinter
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
   function edgeAnnotate(Edge) in line 49
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable dataflow defined in edu::umd::cs::findbugs::ba::DataflowCFGPrinter
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function instructionAnnotate(InstructionHandle,BasicBlock) in line 76
      protection public
      14 lines of code
      2 parameters
      2 conditional paths
      uses function isForwards() defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses variable dataflow defined in edu::umd::cs::findbugs::ba::DataflowCFGPrinter
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function printCFG(Dataflow< Fact, AnalysisType >,PrintStream) in line 100
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable dataflow defined in edu::umd::cs::findbugs::ba::DataflowCFGPrinter
      uses function print(PrintStream) defined in edu::umd::cs::findbugs::ba::CFGPrinter
   function DataflowCFGPrinter(Dataflow< Fact, AnalysisType >) in line 38
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable dataflow defined in edu::umd::cs::findbugs::ba::DataflowCFGPrinter
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function setIsForwards(boolean) defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   variable dataflow in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/DataflowValueChooser.java
module edu::umd::cs::findbugs::ba::DataflowValueChooser
   function choose(Value) in line 28
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/Debug.java
module edu::umd::cs::findbugs::ba::Debug
   variable VERIFY_INTEGRITY in line 30
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/Debug.java
module edu::umd::cs::findbugs::gui2::Debug
   function main(String[]) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function printf(String,Object...) in line 35
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
   function println(Object) in line 29
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
   function println(Exception) in line 41
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/DebugRepositoryLookupFailureCallback.java
module edu::umd::cs::findbugs::ba::DebugRepositoryLookupFailureCallback
   inherits from edu::umd::cs::findbugs::ba::RepositoryLookupFailureCallback
   function logError(String) in line 62
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function logError(String,Throwable) in line 71
      protection public
      19 lines of code
      2 parameters
      3 conditional paths
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::ba::DebugRepositoryLookupFailureCallback
   function reportMissingClass(ClassNotFoundException) in line 40
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function reportMissingClass(ClassDescriptor) in line 53
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function reportSkippedAnalysis(MethodDescriptor) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/DefaultNullnessAnnotations.java
module edu::umd::cs::findbugs::ba::DefaultNullnessAnnotations
   function addDefaultNullnessAnnotations(INullnessAnnotationDatabase) in line 31
      protection public
      124 lines of code
      1 parameters
      2 conditional paths
      uses variable IGNORE_BUILTIN_ANNOTATIONS defined in edu::umd::cs::findbugs::ba::AnnotationDatabase
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addDefaultAnnotation(AnnotationDatabase.Target,@DottedClassName String,NullnessAnnotation) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses variable METHOD defined in edu::umd::cs::findbugs::ba::AnnotationDatabase::Target
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function addFieldAnnotation(@DottedClassName String,String,String,boolean,NullnessAnnotation) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses function addMethodAnnotation(@DottedClassName String,String,String,boolean,NullnessAnnotation) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function addMethodParameterAnnotation(@DottedClassName String,String,String,boolean,int,NullnessAnnotation) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses variable NULLABLE defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable PARAMETER defined in edu::umd::cs::findbugs::ba::AnnotationDatabase::Target
      uses variable UNKNOWN_NULLNESS defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/DepthFirstSearch.java
module edu::umd::cs::findbugs::ba::DepthFirstSearch
   inherits from DepthFirstSearch< CFG, Edge, BasicBlock >
   function getNextSearchTreeRoot() in line 44
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable firstRoot defined in edu::umd::cs::findbugs::ba::DepthFirstSearch
   function DepthFirstSearch(CFG) in line 38
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable firstRoot defined in edu::umd::cs::findbugs::ba::DepthFirstSearch
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
   variable firstRoot in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/graph/DepthFirstSearch.java
module edu::umd::cs::findbugs::graph::DepthFirstSearch
   inherits from AbstractDepthFirstSearch< GraphType, EdgeType, VertexType >
   function getSource(EdgeType) in line 59
      3 lines of code
      1 parameters
      1 conditional paths
   function getTarget(EdgeType) in line 54
      3 lines of code
      1 parameters
      1 conditional paths
   function outgoingEdgeIterator(GraphType,VertexType) in line 49
      3 lines of code
      2 parameters
      1 conditional paths
   function DepthFirstSearch(GraphType) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/deref/UnconditionalValueDerefAnalysis.java
module edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   inherits from edu::umd::cs::findbugs::ba::BackwardDataflowAnalysis
   function check(InstructionHandle,int[]) in line 167
      24 lines of code
      2 parameters
      11 conditional paths
   function checkAllNonNullParams(Location,ValueNumberFrame,ConstantPoolGen,@CheckForNull Method,@CheckForNull IsNullValueDataflow,TypeDataflow) in line 487
      protection public
      17 lines of code
      6 parameters
      4 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function checkNonNullParams(Location,ValueNumberFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable method defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function checkUnconditionalDerefDatabase(Location,ValueNumberFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function checkInstance(Location,ValueNumberFrame,UnconditionalValueDerefSet) in line 558
      53 lines of code
      3 parameters
      10 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getPredecessorWithEdgeType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function isNullCheck() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstanceSlot(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function reportDereference(IsNullValueFrame,int) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable IGNORE_DEREF_OF_NCP defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function checkNonNullParams(Location,ValueNumberFrame,UnconditionalValueDerefSet) in line 481
      5 lines of code
      3 parameters
      2 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable method defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
   function checkNonNullParams(Location,ValueNumberFrame,ConstantPoolGen,@CheckForNull Method,@CheckForNull IsNullValueFrame) in line 505
      protection public
      43 lines of code
      5 parameters
      8 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getSlotsFromTopOfStackForParameter(int) defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function reportDereference(IsNullValueFrame,int) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function parameterMustBeNonNull(XMethod,int) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses variable method defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
   function checkNonNullPutField(Location,ValueNumberFrame,UnconditionalValueDerefSet) in line 447
      22 lines of code
      3 parameters
      6 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getResolvedAnnotation(final Object,boolean) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function reportDereference(IsNullValueFrame,int) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function checkNonNullReturnValue(XMethod,Location,ValueNumberFrame,UnconditionalValueDerefSet) in line 423
      12 lines of code
      4 parameters
      4 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getResolvedAnnotation(final Object,boolean) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function reportPotentialDereference(Location,IsNullValueFrame) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
   function checkUnconditionalDerefDatabase(Location,ValueNumberFrame,UnconditionalValueDerefSet) in line 304
      10 lines of code
      3 parameters
      2 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function checkUnconditionalDerefDatabase(Location,ValueNumberFrame,ConstantPoolGen,@CheckForNull IsNullValueFrame,TypeDataflow) in line 314
      protection public
      96 lines of code
      5 parameters
      23 conditional paths
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function hasReferenceParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable DEBUG_CHECK_CALLS defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getProperty(KeyType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses function copyFrom(ParameterNullnessProperty) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
      uses function intersectWith(ParameterNullnessProperty) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function isNonNull(int) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
      uses function getSlotsFromTopOfStackForParameter(int) defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function reportDereference(IsNullValueFrame,int) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function clearDerefsOnNonNullBranches(IsNullValueDataflow) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function copy(UnconditionalValueDerefSet,UnconditionalValueDerefSet) in line 642
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function makeSameAs(UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function createFact() in line 649
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function duplicateFact(UnconditionalValueDerefSet) in line 844
      6 lines of code
      1 parameters
      1 conditional paths
      uses function createFact() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function copy(UnconditionalValueDerefSet,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function findValueKnownNonnullOnBranch(UnconditionalValueDerefSet,Edge) in line 859
      23 lines of code
      2 parameters
      5 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getDecision() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function getDecision(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function getLastUpdateTimestamp(UnconditionalValueDerefSet) in line 909
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLastUpdateTimestamp() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function handleNullCheck(Location,ValueNumberFrame,UnconditionalValueDerefSet) in line 206
      6 lines of code
      3 parameters
      2 conditional paths
      uses function reportPotentialDereference(Location,IsNullValueFrame) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
   function initEntryFact(UnconditionalValueDerefSet) in line 656
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function isAssertion(InstructionHandle) in line 632
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable assertionMethods defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function isAssertionHandle(InstructionHandle,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function isExceptionEdge(Edge) in line 889
      6 lines of code
      1 parameters
      2 conditional paths
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function isFactValid(UnconditionalValueDerefSet) in line 159
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function isNullCheck(InstructionHandle,ConstantPoolGen) in line 191
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
      uses function check(InstructionHandle,int[]) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable NULLCHECK1 defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable NULLCHECK2 defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function isTop(UnconditionalValueDerefSet) in line 675
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function makeFactTop(UnconditionalValueDerefSet) in line 671
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setIsTop() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function meetInto(UnconditionalValueDerefSet,Edge,UnconditionalValueDerefSet) in line 681
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function meetInto(UnconditionalValueDerefSet,Edge,UnconditionalValueDerefSet,boolean) in line 688
      protection public
      74 lines of code
      4 parameters
      18 conditional paths
      uses function isExceptionEdge(Edge) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function isFactValid(UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function propagateDerefSetsToMergeInputValues(UnconditionalValueDerefSet,Edge) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function findValueKnownNonnullOnBranch(UnconditionalValueDerefSet,Edge) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function duplicateFact(UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable method defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function copy(UnconditionalValueDerefSet,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable ASSUME_NONZERO_TRIP_LOOPS defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function propagateDerefSetsToMergeInputValues(UnconditionalValueDerefSet,Edge) in line 775
      62 lines of code
      2 parameters
      14 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function duplicateFact(UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function clearDerefSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function isUnconditionallyDereferenced(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function setDerefSet(ValueNumber,Set< Location >) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getUnconditionalDerefLocationSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function valueNumbersForLoads() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getAvailableLoad(AvailableLoad) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable PHI_NODE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses variable phiNodeForLoads defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function cleanDerefSet(@CheckForNull Location,ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function reportDereference(IsNullValueFrame,int) in line 614
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
   function reportDereference(IsNullValue) in line 618
      7 lines of code
      1 parameters
      4 conditional paths
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable IGNORE_DEREF_OF_NCP defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function isNullOnComplicatedPath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function reportPotentialDereference(Location,IsNullValueFrame) in line 213
      protection public
      10 lines of code
      2 parameters
      4 conditional paths
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function same(UnconditionalValueDerefSet,UnconditionalValueDerefSet) in line 899
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function isSameAs(UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function setLastUpdateTimestamp(UnconditionalValueDerefSet,int) in line 913
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function setLastUpdateTimestamp(int) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function setTypeDataflow(TypeDataflow) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function startIteration() in line 904
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function transferInstruction(InstructionHandle,BasicBlock,UnconditionalValueDerefSet) in line 227
      protection public
      67 lines of code
      3 parameters
      13 conditional paths
      uses function isAssertion(InstructionHandle) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function makeFactTop(UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function isNullCheck(InstructionHandle,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function handleNullCheck(Location,ValueNumberFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable CHECK_CALLS defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function checkUnconditionalDerefDatabase(Location,ValueNumberFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable CHECK_ANNOTATIONS defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function checkNonNullParams(Location,ValueNumberFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function checkNonNullReturnValue(XMethod,Location,ValueNumberFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function checkNonNullPutField(Location,ValueNumberFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function checkInstance(Location,ValueNumberFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function UnconditionalValueDerefAnalysis(ReverseDepthFirstSearch,DepthFirstSearch,CFG,Method,MethodGen,ValueNumberDataflow,AssertionMethods) in line 117
      protection public
      19 lines of code
      7 parameters
      2 conditional paths
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::BackwardDataflowAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::BackwardDataflowAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable method defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable assertionMethods defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   variable assertionMethods in line 101
   variable ASSUME_NONZERO_TRIP_LOOPS in line 86
      protection public
   variable cfg in line 97
   variable CHECK_ANNOTATIONS in line 90
      protection public
   variable CHECK_CALLS in line 92
      protection public
   variable DEBUG in line 85
      protection public
   variable DEBUG_CHECK_CALLS in line 94
      protection public
   variable IGNORE_DEREF_OF_NCP in line 87
      protection public
   variable invDataflow in line 103
   variable method in line 98
   variable methodGen in line 99
   variable NULLCHECK1 in line 163
   variable NULLCHECK2 in line 164
   variable typeDataflow in line 104
   variable VERBOSE_NULLARG_DEBUG in line 410
      protection public
   variable vnaDataflow in line 100
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/deref/UnconditionalValueDerefDataflow.java
module edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefDataflow
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflow
   function UnconditionalValueDerefDataflow(CFG,UnconditionalValueDerefAnalysis) in line 39
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< Fact, AnalysisType >
      uses variable analysis defined in Dataflow< Fact, AnalysisType >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/deref/UnconditionalValueDerefSet.java
module edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function addDeref(ValueNumber,Location) in line 234
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getDerefLocationSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function cleanDerefSet(@CheckForNull Location,ValueNumberFrame) in line 399
      protection public
      19 lines of code
      2 parameters
      4 conditional paths
      uses function allSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function valueNumbersForLoads() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getValueNumbersThatAreUnconditionallyDereferenced() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function retainOnlyTheseValueNumbers(Collection< ValueNumber >) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function clearDerefSet(ValueNumber) in line 267
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function getDerefLocationSet(ValueNumber) in line 281
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function getDerefLocationSet(int) in line 386
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function getLastUpdateTimestamp() in line 429
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastUpdateTimestamp defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function getUnconditionalDerefLocationSet(ValueNumber) in line 327
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function getValueNumbersThatAreUnconditionallyDereferenced() in line 300
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function isBottom() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function isEmpty() in line 436
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function isSameAs(UnconditionalValueDerefSet) in line 145
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function isTop() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function isUnconditionallyDereferenced(ValueNumber) in line 296
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function makeSameAs(UnconditionalValueDerefSet) in line 122
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable lastUpdateTimestamp defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function mergeWith(UnconditionalValueDerefSet,@CheckForNull ValueNumber,ValueNumberFactory) in line 159
      protection public
      43 lines of code
      3 parameters
      11 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function forNumber(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function retainOnlyTheseValueNumbers(Collection< ValueNumber >) in line 309
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function setDerefSet(ValueNumber,Set< Location >) in line 251
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getDerefLocationSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function setIsBottom() in line 84
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function setIsTop() in line 101
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable lastUpdateTimestamp defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function setLastUpdateTimestamp(int) in line 422
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lastUpdateTimestamp defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function toString() in line 339
      protection public
      46 lines of code
      0 parameters
      9 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getDerefLocationSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function unionWith(UnconditionalValueDerefSet,ValueNumberFactory) in line 202
      protection public
      25 lines of code
      2 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function forNumber(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getDerefLocationSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function UnconditionalValueDerefSet(int) in line 65
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   variable derefLocationSetMap in line 52
   variable lastUpdateTimestamp in line 56
   variable numValueNumbersInMethod in line 45
   variable valueNumbersUnconditionallyDereferenced in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/DFSCFGPrinter.java
module edu::umd::cs::findbugs::ba::DFSCFGPrinter
   inherits from edu::umd::cs::findbugs::ba::CFGPrinter
   inherits from edu::umd::cs::findbugs::ba::DFSEdgeTypes
   function edgeAnnotate(Edge) in line 31
      protection public
      17 lines of code
      1 parameters
      6 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::DFSCFGPrinter
      uses variable UNKNOWN_EDGE defined in edu::umd::cs::findbugs::graph::DFSEdgeTypes
      uses variable TREE_EDGE defined in edu::umd::cs::findbugs::graph::DFSEdgeTypes
      uses variable BACK_EDGE defined in edu::umd::cs::findbugs::graph::DFSEdgeTypes
      uses variable CROSS_EDGE defined in edu::umd::cs::findbugs::graph::DFSEdgeTypes
      uses variable FORWARD_EDGE defined in edu::umd::cs::findbugs::graph::DFSEdgeTypes
   function DFSCFGPrinter(CFG,DepthFirstSearch) in line 25
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses variable dfs defined in edu::umd::cs::findbugs::ba::DFSCFGPrinter
   variable dfs in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/DFSEdgeTypes.java
module edu::umd::cs::findbugs::ba::DFSEdgeTypes
   inherits from edu::umd::cs::findbugs::graph::DFSEdgeTypes
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/graph/DFSEdgeTypes.java
module edu::umd::cs::findbugs::graph::DFSEdgeTypes
   variable BACK_EDGE in line 41
      protection public
   variable CROSS_EDGE in line 52
      protection public
   variable FORWARD_EDGE in line 46
      protection public
   variable TREE_EDGE in line 36
      protection public
   variable UNKNOWN_EDGE in line 31
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/DominatorsAnalysis.java
module edu::umd::cs::findbugs::ba::DominatorsAnalysis
   inherits from edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
   function getBlockOrder(CFG) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::DominatorsAnalysis
   function isForwards() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function DominatorsAnalysis(CFG,DepthFirstSearch,boolean) in line 39
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::DominatorsAnalysis
   variable dfs in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/Edge.java
module edu::umd::cs::findbugs::ba::Edge
   inherits from edu::umd::cs::findbugs::graph::AbstractEdge
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   inherits from edu::umd::cs::findbugs::ba::Debug
   function compareTo(Edge) in line 128
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::Edge
   function edgeTypeToString(int) in line 212
      protection public
      33 lines of code
      1 parameters
      15 conditional paths
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable SWITCH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable SWITCH_DEFAULT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable JSR_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable RET_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable GOTO_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable RETURN_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable UNHANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable HANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable START_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable BACKEDGE_TARGET_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable BACKEDGE_SOURCE_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable EXIT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function equals(Object) in line 111
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function Edge(BasicBlock,BasicBlock) defined in edu::umd::cs::findbugs::ba::Edge
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
   function formatAsString(boolean) in line 167
      protection public
      41 lines of code
      1 parameters
      6 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable target defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function edgeTypeToString(int) defined in edu::umd::cs::findbugs::ba::Edge
      uses variable type defined in edu::umd::cs::findbugs::ba::Edge
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function getFlags() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::ba::Edge
   function getId() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getType() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::Edge
   function hashCode() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function isBackwardInBytecode() in line 140
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable target defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function isExceptionEdge() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::Edge
      uses variable HANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable UNHANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function isFlagSet(int) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFlags(int) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::ba::Edge
   function setType(int) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::Edge
   function sourceIsTopOfLoop(@Nonnull Set< Integer >) in line 152
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function stringToEdgeType(String) in line 249
      protection public
      34 lines of code
      1 parameters
      15 conditional paths
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable SWITCH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable SWITCH_DEFAULT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable JSR_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable RET_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable GOTO_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable RETURN_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable UNHANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable HANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable START_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable BACKEDGE_TARGET_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable BACKEDGE_SOURCE_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable EXIT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function toString() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function formatAsString(boolean) defined in edu::umd::cs::findbugs::ba::Edge
   function Edge(BasicBlock,BasicBlock) in line 57
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::graph::AbstractEdge
   variable flags in line 45
   variable type in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/EdgeChooser.java
module edu::umd::cs::findbugs::ba::EdgeChooser
   function choose(Edge) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/EdgeTypes.java
module edu::umd::cs::findbugs::ba::EdgeTypes
   variable BACKEDGE_SOURCE_EDGE in line 92
      protection public
   variable BACKEDGE_TARGET_EDGE in line 88
      protection public
   variable CHECKED_EXCEPTIONS_FLAG in line 105
      protection public
   variable EXIT_EDGE in line 96
      protection public
   variable EXPLICIT_EXCEPTIONS_FLAG in line 110
      protection public
   variable FALL_THROUGH_EDGE in line 41
      protection public
   variable GOTO_EDGE in line 65
      protection public
   variable HANDLED_EXCEPTION_EDGE in line 80
      protection public
   variable IFCMP_EDGE in line 45
      protection public
   variable JSR_EDGE in line 57
      protection public
   variable RET_EDGE in line 61
      protection public
   variable RETURN_EDGE in line 69
      protection public
   variable START_EDGE in line 84
      protection public
   variable SWITCH_DEFAULT_EDGE in line 53
      protection public
   variable SWITCH_EDGE in line 49
      protection public
   variable UNHANDLED_EXCEPTION_EDGE in line 75
      protection public
   variable UNKNOWN_EDGE in line 37
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/EqualsKindSummary.java
module edu::umd::cs::findbugs::ba::EqualsKindSummary
   function get(ClassAnnotation) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function put(ClassAnnotation,EqualsKindSummary.KindOfEquals) in line 40
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
   variable ABSTRACT_GETCLASS_GOOD_EQUALS in line 35
      protection public
   variable ABSTRACT_INSTANCE_OF in line 35
      protection public
   variable ALWAYS_FALSE in line 35
      protection public
   variable ALWAYS_TRUE in line 35
      protection public
   variable CHECKED_CAST_EQUALS in line 35
      protection public
   variable COMPARE_EQUALS in line 35
      protection public
   variable DELEGATE_EQUALS in line 35
      protection public
   variable GETCLASS_BAD_EQUALS in line 35
      protection public
   variable GETCLASS_GOOD_EQUALS in line 35
      protection public
   variable INSTANCE_OF_EQUALS in line 35
      protection public
   variable INVOKES_SUPER in line 35
      protection public
   variable OBJECT_EQUALS in line 35
      protection public
   variable RETURNS_SUPER in line 35
      protection public
   variable TRIVIAL_EQUALS in line 35
      protection public
   variable UNKNOWN in line 35
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ExceptionHandlerMap.java
module edu::umd::cs::findbugs::ba::ExceptionHandlerMap
   function addHandler(InstructionHandle,CodeExceptionGen) in line 116
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable codeToHandlerMap defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
   function build(MethodGen) in line 81
      34 lines of code
      1 parameters
      6 conditional paths
      uses variable startInstructionToHandlerMap defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
      uses function addHandler(InstructionHandle,CodeExceptionGen) defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
   function getHandlerForStartInstruction(InstructionHandle) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable startInstructionToHandlerMap defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
   function getHandlerList(InstructionHandle) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable codeToHandlerMap defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
   function ExceptionHandlerMap(MethodGen) in line 48
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable codeToHandlerMap defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
      uses variable startInstructionToHandlerMap defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
      uses function build(MethodGen) defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
   variable codeToHandlerMap in line 40
   variable startInstructionToHandlerMap in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/FieldSummary.java
module edu::umd::cs::findbugs::ba::FieldSummary
   function addWrittenOutsideOfConstructor(XField) in line 149
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable writtenOutsideOfConstructor defined in edu::umd::cs::findbugs::ba::FieldSummary
   function callsOverriddenMethodsFromConstructor(ClassDescriptor) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable callsOverriddenMethodsFromConstructor defined in edu::umd::cs::findbugs::ba::FieldSummary
   function callsOverriddenMethodsFromSuperConstructor(ClassDescriptor) in line 74
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable callsOverriddenMethodsFromConstructor defined in edu::umd::cs::findbugs::ba::FieldSummary
   function getCalledFromSuperConstructor(ClassDescriptor,XMethod) in line 99
      protection public
      20 lines of code
      2 parameters
      5 conditional paths
      uses variable callsOverriddenMethodsFromConstructor defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses variable selfMethodsCalledFromConstructor defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function getFieldsWritten(XMethod) in line 130
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable fieldsWritten defined in edu::umd::cs::findbugs::ba::FieldSummary
   function getSummary(XField) in line 59
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable summary defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function getSuperCall(XMethod) in line 226
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable nonVoidSuperConstructorsCalled defined in edu::umd::cs::findbugs::ba::FieldSummary
   function isComplete() in line 209
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable complete defined in edu::umd::cs::findbugs::ba::FieldSummary
   function isWrittenOutsideOfConstructor(XField) in line 135
      protection public
      12 lines of code
      1 parameters
      5 conditional paths
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable writtenOutsideOfConstructor defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isReflexive(XField) defined in edu::umd::cs::findbugs::detect::UnreadFields
   function mergeSummary(XField,OpcodeStack.Item) in line 153
      protection public
      27 lines of code
      2 parameters
      5 conditional paths
      uses variable ASSERTIONS_ENABLED defined in edu::umd::cs::findbugs::SystemProperties
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getPriority() defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function toString() defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable summary defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function clearNewlyAllocated() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function sawSuperCall(XMethod,XMethod) in line 217
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable nonVoidSuperConstructorsCalled defined in edu::umd::cs::findbugs::ba::FieldSummary
   function setCalledFromSuperConstructor(ProgramPoint,XMethod) in line 89
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable selfMethodsCalledFromConstructor defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses variable callsOverriddenMethodsFromConstructor defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses variable method defined in edu::umd::cs::findbugs::ProgramPoint
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function setComplete(boolean) in line 185
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses variable complete defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function isComplete() defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses variable summary defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function makeCrossMethod() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function setFieldsWritten(XMethod,Collection< XField >) in line 119
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable fieldsWritten defined in edu::umd::cs::findbugs::ba::FieldSummary
   variable callsOverriddenMethodsFromConstructor in line 56
   variable complete in line 58
   variable fieldsWritten in line 52
   variable nonVoidSuperConstructorsCalled in line 53
   variable selfMethodsCalledFromConstructor in line 55
   variable summary in line 51
   variable writtenOutsideOfConstructor in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/FileSourceFileDataSource.java
module edu::umd::cs::findbugs::ba::FileSourceFileDataSource
   inherits from edu::umd::cs::findbugs::ba::SourceFileDataSource
   function getFullFileName() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fileName defined in edu::umd::cs::findbugs::ba::FileSourceFileDataSource
   function open() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fileName defined in edu::umd::cs::findbugs::ba::FileSourceFileDataSource
   function FileSourceFileDataSource(String) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fileName defined in edu::umd::cs::findbugs::ba::FileSourceFileDataSource
   variable fileName in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ForwardDataflowAnalysis.java
module edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflowAnalysis
   abstract class
   function getBlockOrder(CFG) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDepthFirstSearch() in line 39
      3 lines of code
      0 parameters
      1 conditional paths
   function isForwards() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ForwardDataflowAnalysis(DepthFirstSearch) in line 34
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable dfs in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/Frame.java
module edu::umd::cs::findbugs::ba::Frame
   abstract class
   function allSlots() in line 651
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function clearStack() in line 480
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function contains(ValueType) in line 509
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function copyFrom(Frame< ValueType >) in line 582
      protection public
      18 lines of code
      1 parameters
      1 conditional paths
   function getArgument(InvokeInstruction,ConstantPoolGen,int,int) in line 381
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
   function getArgument(InvokeInstruction,ConstantPoolGen,int,SignatureParser) in line 399
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
   function getArgumentSet(InvokeInstruction,ConstantPoolGen,DataflowValueChooser< ValueType >) in line 460
      protection public
      15 lines of code
      3 parameters
      1 conditional paths
   function getArgumentSlot(int,int) in line 417
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function getInstance(Instruction,ConstantPoolGen) in line 271
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function getInstanceSlot(Instruction,ConstantPoolGen) in line 315
      protection public
      14 lines of code
      2 parameters
      1 conditional paths
   function getInstanceStackLocation(Instruction,ConstantPoolGen) in line 295
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function getLastUpdateTimestamp() in line 668
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumArguments(InvokeInstruction,ConstantPoolGen) in line 341
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function getNumArgumentsIncludingObjectInstance(InvokeInstruction,ConstantPoolGen) in line 358
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function getNumLocals() in line 498
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumSlots() in line 505
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getOperand(StackConsumer,ConstantPoolGen,int) in line 436
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
   function getStackDepth() in line 491
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStackLocation(int) in line 251
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function getStackValue(int) in line 232
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function getTopStackWords(ValueType[]) in line 214
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function getTopValue() in line 200
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function getValue(int) in line 523
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function isBottom() in line 138
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTop() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isValid() in line 161
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function popValue() in line 186
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function pushValue(ValueType) in line 171
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function sameAs(Frame< ValueType >) in line 553
      protection public
      22 lines of code
      1 parameters
      1 conditional paths
   function setBottom() in line 146
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setLastUpdateTimestamp(int) in line 661
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setTop() in line 128
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function setValid() in line 154
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setValue(int,ValueType) in line 537
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 608
      protection public
      29 lines of code
      0 parameters
      1 conditional paths
   function valueToString(ValueType) in line 643
      4 lines of code
      1 parameters
      1 conditional paths
   function Frame(int) in line 108
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   variable DEFAULT_STACK_CAPACITY in line 94
   variable isBottom in line 89
   variable isTop in line 83
   variable lastUpdateTimestamp in line 67
   variable numLocals in line 72
   variable slotList in line 77
   variable STACK_ONLY in line 601
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/FrameDataflowAnalysis.java
module edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   inherits from ForwardDataflowAnalysis< FrameType >
   abstract class
   function copy(FrameType,FrameType) in line 37
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getLastUpdateTimestamp(FrameType) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isFactValid(FrameType) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isTop(FrameType) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function makeFactTop(FrameType) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function mergeInto(FrameType,FrameType) in line 111
      34 lines of code
      2 parameters
      1 conditional paths
   function mergeValues(FrameType,FrameType,int) in line 154
      1 lines of code
      3 parameters
      1 conditional paths
   function modifyFrame(FrameType,@Nullable FrameType) in line 96
      7 lines of code
      2 parameters
      1 conditional paths
   function same(FrameType,FrameType) in line 47
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function setLastUpdateTimestamp(FrameType,int) in line 61
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function FrameDataflowAnalysis(DepthFirstSearch) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/generic/GenericObjectType.java
module edu::umd::cs::findbugs::ba::generic::GenericObjectType
   inherits from org::apache::bcel::generic::ObjectType
   function equals(Object) in line 63
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function getExtension() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGenericParametersAsString() in line 212
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getTypeCategory() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function toString() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function getNumParameters() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getObjectType() in line 181
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParameterAt(int) in line 130
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function getParameters() in line 137
      protection public
      4 lines of code
      0 parameters
      3 conditional paths
   function getTypeCategory() in line 94
      protection public
      16 lines of code
      0 parameters
      6 conditional paths
      uses function hasParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function getUpperBound() in line 71
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function getVariable() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 56
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function hasParameters() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toPlainString() in line 208
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(boolean) in line 196
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getTypeCategory() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function toString() in line 203
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getTypeCategory() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/generic/GenericSignatureParser.java
module edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function compareSignatures(String,String) in line 228
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function GenericSignatureParser(String) defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function getGenericSignatureIterator(Method) in line 192
      protection public
      31 lines of code
      1 parameters
      8 conditional paths
      uses function compareSignatures(String,String) defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function GenericSignatureParser(String) defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function getNumParameters() in line 165
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function getNumParametersForInvocation(InvokeInstruction,ConstantPoolGen) in line 181
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function GenericSignatureParser(String) defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function getReturnTypeSignature() in line 153
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function main(String[]) in line 242
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses function GenericSignatureParser(String) defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function parameterSignatureIterator() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function GenericSignatureParser(String) in line 129
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   variable signature in line 121
module edu::umd::cs::findbugs::ba::generic::GenericSignatureParser::ParameterSignatureIterator
   inherits from java::util::Iterator
   function hasNext() in line 47
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable index defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser::ParameterSignatureIterator
      uses variable signature defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function next() in line 52
      protection public
      63 lines of code
      0 parameters
      23 conditional paths
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser::ParameterSignatureIterator
      uses variable signature defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses variable index defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser::ParameterSignatureIterator
   function remove() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable index in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/generic/GenericUtilities.java
module edu::umd::cs::findbugs::ba::generic::GenericUtilities
   function getString(Type) in line 172
      protection public
      8 lines of code
      1 parameters
      9 conditional paths
      uses variable asString defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
   function getType(String,List<?extends ReferenceType >) in line 202
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getType(String) in line 214
      protection public
      38 lines of code
      1 parameters
      9 conditional paths
      uses function lastMatchedLeftAngleBracket(String) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
      uses function nextUnmatchedRightAngleBracket(String,int) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
      uses function getTypes(String) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
      uses function removeMatchedAngleBrackets(String) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
      uses function getType(String,List<?extends ReferenceType >) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
   function getTypeCategory(Type) in line 152
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
   function getTypes(String) in line 316
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function getType(String,List<?extends ReferenceType >) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
   function isPlainObject(Type) in line 165
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getTypeCategory(Type) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
   function lastMatchedLeftAngleBracket(String) in line 294
      protection public
      16 lines of code
      1 parameters
      7 conditional paths
   function merge(Type,ObjectType) in line 253
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
   function merge(GenericObjectType,ObjectType) in line 258
      protection public
      7 lines of code
      2 parameters
      3 conditional paths
      uses function getParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function nextUnmatchedRightAngleBracket(String,int) in line 280
      protection public
      14 lines of code
      2 parameters
      6 conditional paths
   function removeMatchedAngleBrackets(String) in line 265
      protection public
      15 lines of code
      1 parameters
      6 conditional paths
module edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
   function asString(GenericObjectType) in line 139
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function asString(ArrayType) in line 141
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getString(Type) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
   variable asString in line 137
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/heap/FieldSet.java
module edu::umd::cs::findbugs::ba::heap::FieldSet
   function addField(XField) in line 69
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function clear() in line 64
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function contains(XField) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function copyFrom(FieldSet) in line 97
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function isBottom() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isEmpty() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function isIntersectionNonEmpty(FieldSet) in line 104
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function isTop() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isValid() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function mergeWith(FieldSet) in line 79
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function copyFrom(FieldSet) defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function sameAs(FieldSet) in line 91
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function setBottom() in line 47
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function clear() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function setTop() in line 38
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function clear() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isTop() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function toString() in line 113
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function FieldSet() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   variable fieldSet in line 32
   variable isTop in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/heap/FieldSetAnalysis.java
module edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   inherits from edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
   abstract class
   function copy(FieldSet,FieldSet) in line 90
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(FieldSet) defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function createFact() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCPG() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   function handleInstruction(InstructionHandle,BasicBlock,FieldSet) in line 110
      34 lines of code
      3 parameters
      11 conditional paths
      uses function lookupField(InstructionHandle,FieldInstruction) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
      uses function sawLoad(FieldSet,XField) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
      uses function sawStore(FieldSet,XField) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   function initEntryFact(FieldSet) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isFactValid(FieldSet) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function isTop(FieldSet) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function lookupField(InstructionHandle,FieldInstruction) in line 145
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable instructionToFieldMap defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
      uses function sawLoad(FieldSet,XField) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
      uses function sawStore(FieldSet,XField) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   function makeFactTop(FieldSet) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function meetInto(FieldSet,Edge,FieldSet) in line 72
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function same(FieldSet,FieldSet) in line 76
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function sameAs(FieldSet) defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function sawLoad(FieldSet,XField) in line 154
      1 lines of code
      2 parameters
      1 conditional paths
   function sawStore(FieldSet,XField) in line 155
      1 lines of code
      2 parameters
      1 conditional paths
   function transferInstruction(InstructionHandle,BasicBlock,FieldSet) in line 95
      protection public
      14 lines of code
      3 parameters
      3 conditional paths
      uses function isFactValid(FieldSet) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
      uses function handleInstruction(InstructionHandle,BasicBlock,FieldSet) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   function FieldSetAnalysis(DepthFirstSearch,ConstantPoolGen) in line 48
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
      uses variable cpg defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   variable cpg in line 44
   variable instructionToFieldMap in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/heap/LoadAnalysis.java
module edu::umd::cs::findbugs::ba::heap::LoadAnalysis
   inherits from edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   function sawLoad(FieldSet,XField) in line 34
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addField(XField) defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function sawStore(FieldSet,XField) in line 40
      2 lines of code
      2 parameters
      1 conditional paths
   function LoadAnalysis(DepthFirstSearch,ConstantPoolGen) in line 28
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
      uses variable cpg defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/heap/LoadDataflow.java
module edu::umd::cs::findbugs::ba::heap::LoadDataflow
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflow
   function LoadDataflow(CFG,LoadAnalysis) in line 29
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< Fact, AnalysisType >
      uses variable analysis defined in Dataflow< Fact, AnalysisType >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/heap/StoreAnalysis.java
module edu::umd::cs::findbugs::ba::heap::StoreAnalysis
   inherits from edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   function sawLoad(FieldSet,XField) in line 40
      2 lines of code
      2 parameters
      1 conditional paths
   function sawStore(FieldSet,XField) in line 48
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addField(XField) defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function StoreAnalysis(DepthFirstSearch,ConstantPoolGen) in line 31
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
      uses variable cpg defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/heap/StoreDataflow.java
module edu::umd::cs::findbugs::ba::heap::StoreDataflow
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflow
   function StoreDataflow(CFG,StoreAnalysis) in line 29
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< Fact, AnalysisType >
      uses variable analysis defined in Dataflow< Fact, AnalysisType >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/Hierarchy.java
module edu::umd::cs::findbugs::ba::Hierarchy
   function accessFlagsAreConcrete(int) in line 516
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function findConcreteMethod(JavaClass,String,String) in line 461
      protection public
      22 lines of code
      3 parameters
      5 conditional paths
      uses variable DEBUG_METHOD_LOOKUP defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function accessFlagsAreConcrete(int) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findDeclaredExceptions(InvokeInstruction,ConstantPoolGen) in line 382
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function findExactMethod(InvokeInstruction,ConstantPoolGen) in line 219
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable ANY_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findExactMethod(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) in line 233
      protection public
      11 lines of code
      3 parameters
      1 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findField(String,String) in line 818
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
   function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen) in line 304
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable ANY_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) in line 310
      protection public
      41 lines of code
      3 parameters
      8 conditional paths
      uses variable DEBUG_METHOD_LOOKUP defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable INSTANCE_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable STATIC_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function findExactMethod(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findInvocationLeastUpperBound(JavaClass,String,String,JavaClassAndMethodChooser,boolean) in line 352
      protection public
      19 lines of code
      5 parameters
      6 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findMethod(JavaClass,String,String) in line 395
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable ANY_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findMethod(JavaClass,String,String,JavaClassAndMethodChooser) in line 398
      protection public
      24 lines of code
      4 parameters
      7 conditional paths
      uses variable DEBUG_METHOD_LOOKUP defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function choose(JavaClassAndMethod) defined in edu::umd::cs::findbugs::ba::JavaClassAndMethodChooser
   function findMethod(ClassDescriptor,String,String,boolean) in line 432
      protection public
      19 lines of code
      4 parameters
      3 conditional paths
      uses variable DEBUG_METHOD_LOOKUP defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
   function findMethod(JavaClass[],String,String) in line 570
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable ANY_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findMethod(JavaClass[],String,String,JavaClassAndMethodChooser) in line 585
      protection public
      11 lines of code
      4 parameters
      3 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findXField(String,String,String,boolean) in line 849
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
   function findXField(FieldInstruction,@NonNull ConstantPoolGen) in line 864
      protection public
      17 lines of code
      2 parameters
      2 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function findXField(String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function findXMethod(JavaClass,String,String,JavaClassAndMethodChooser) in line 494
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function findXMethod(JavaClass[],String,String) in line 607
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function findXMethod(JavaClass,String,String,JavaClassAndMethodChooser) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable ANY_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findXMethod(JavaClass[],String,String,JavaClassAndMethodChooser) in line 623
      protection public
      10 lines of code
      4 parameters
      3 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function choose(JavaClassAndMethod) defined in edu::umd::cs::findbugs::ba::JavaClassAndMethodChooser
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function getInnerClassAccess(INVOKESTATIC,ConstantPoolGen) in line 902
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getMethodSignature() defined in edu::umd::cs::findbugs::ba::InnerClassAccess
   function isConcrete(XMethod) in line 805
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getAccessFlags() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function isInnerClassAccess(INVOKESTATIC,ConstantPoolGen) in line 889
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function isMonitorNotify(String,String) in line 185
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function isMonitorNotify(Instruction,ConstantPoolGen) in line 197
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses function isMonitorNotify(String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function isMonitorWait(String,String) in line 151
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function isMonitorWait(Instruction,ConstantPoolGen) in line 164
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses function isMonitorWait(String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function isSubtype(String,String) in line 89
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function isSubtype(ReferenceType,ReferenceType) in line 103
      protection public
      17 lines of code
      2 parameters
      4 conditional paths
      uses variable ENABLE_SUBTYPES2 defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function isUncheckedException(ObjectType) in line 139
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isSubtype(String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable RUNTIME_EXCEPTION_TYPE defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable ERROR_TYPE defined in edu::umd::cs::findbugs::ba::Hierarchy
   function isUniversalExceptionHandler(ObjectType) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function resolveMethodCallTargets(InvokeInstruction,TypeFrame,ConstantPoolGen) in line 645
      protection public
      47 lines of code
      3 parameters
      7 conditional paths
      uses function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable CONCRETE_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable DEBUG_METHOD_LOOKUP defined in edu::umd::cs::findbugs::ba::Hierarchy
   function resolveMethodCallTargets(ReferenceType,InvokeInstruction,ConstantPoolGen) in line 704
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses function resolveMethodCallTargets(InvokeInstruction,TypeFrame,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function resolveMethodCallTargets(ReferenceType,InvokeInstruction,ConstantPoolGen,boolean) in line 723
      protection public
      74 lines of code
      4 parameters
      13 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable INSTANCE_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function lookupClass(@NonNull @DottedClassName String) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable CONCRETE_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable DEBUG_METHOD_LOOKUP defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getAccessFlags() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function visitSuperClassMethods(JavaClassAndMethod,JavaClassAndMethodChooser) in line 253
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function visitSuperInterfaceMethods(JavaClassAndMethod,JavaClassAndMethodChooser) in line 270
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
   variable ANY_METHOD in line 503
      protection public
   variable CONCRETE_METHOD in line 524
      protection public
   variable DEBUG_METHOD_LOOKUP in line 64
   variable ERROR_TYPE in line 74
      protection public
   variable EXCEPTION_TYPE in line 70
      protection public
   variable INSTANCE_METHOD in line 550
      protection public
   variable RUNTIME_EXCEPTION_TYPE in line 78
      protection public
   variable STATIC_METHOD in line 538
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/Hierarchy2.java
module edu::umd::cs::findbugs::ba::Hierarchy2
   function findDeclaredExceptions(InvokeInstruction,ConstantPoolGen) in line 413
      protection public
      17 lines of code
      2 parameters
      4 conditional paths
      uses function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses variable STATIC_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable INSTANCE_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function getThrownExceptions() defined in edu::umd::cs::findbugs::ba::XMethod
   function findExactMethod(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) in line 77
      protection public
      12 lines of code
      3 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function findMethod(ClassDescriptor,String,String,boolean) defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses function thisOrNothing(@CheckForNull XMethod,JavaClassAndMethodChooser) defined in edu::umd::cs::findbugs::ba::Hierarchy2
   function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) in line 95
      protection public
      45 lines of code
      3 parameters
      9 conditional paths
      uses function findExactMethod(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses function thisOrNothing(@CheckForNull XMethod,JavaClassAndMethodChooser) defined in edu::umd::cs::findbugs::ba::Hierarchy2
   function findInvocationLeastUpperBound(ClassDescriptor,String,String,boolean,boolean) in line 141
      protection public
      11 lines of code
      5 parameters
      2 conditional paths
      uses function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) defined in edu::umd::cs::findbugs::ba::Hierarchy2
   function findInvocationLeastUpperBound(XClass,String,String,boolean,boolean) in line 153
      protection public
      20 lines of code
      5 parameters
      6 conditional paths
      uses function findMethod(ClassDescriptor,String,String,boolean) defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) defined in edu::umd::cs::findbugs::ba::Hierarchy2
   function findMethod(ClassDescriptor,String,String,boolean) in line 200
      protection public
      7 lines of code
      4 parameters
      2 conditional paths
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function findSuperMethods(XMethod) in line 174
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function findSuperMethods(@CheckForNull ClassDescriptor,XMethod,Set< XMethod >) in line 182
      17 lines of code
      3 parameters
      6 conditional paths
      uses function findMatchingMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::ba::XClass
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function findSuperMethods(XMethod) defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
   function resolveMethodCallTargets(InvokeInstruction,TypeFrame,ConstantPoolGen) in line 229
      protection public
      42 lines of code
      3 parameters
      6 conditional paths
      uses function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) defined in edu::umd::cs::findbugs::ba::Hierarchy2
   function resolveMethodCallTargets(ReferenceType,InvokeInstruction,ConstantPoolGen) in line 283
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses function resolveMethodCallTargets(InvokeInstruction,TypeFrame,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Hierarchy2
   function resolveMethodCallTargets(ReferenceType,InvokeInstruction,ConstantPoolGen,boolean) in line 301
      protection public
      33 lines of code
      4 parameters
      5 conditional paths
      uses variable objectDescriptor defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses function findMethod(ClassDescriptor,String,String,boolean) defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses function resolveVirtualMethodCallTargets(String,String,String,boolean,boolean) defined in edu::umd::cs::findbugs::ba::Hierarchy2
   function resolveVirtualMethodCallTargets(String,String,String,boolean,boolean) in line 344
      protection public
      5 lines of code
      5 parameters
      1 conditional paths
   function resolveVirtualMethodCallTargets(XMethod,boolean,boolean) in line 350
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function resolveVirtualMethodCallTargets(String,String,String,boolean,boolean) defined in edu::umd::cs::findbugs::ba::Hierarchy2
   function resolveVirtualMethodCallTargets(ClassDescriptor,String,String,boolean,boolean) in line 355
      protection public
      48 lines of code
      5 parameters
      10 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function findMethod(ClassDescriptor,String,String,boolean) defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function isAbstract() defined in edu::umd::cs::findbugs::ba::XMethod
   function thisOrNothing(@CheckForNull XMethod,JavaClassAndMethodChooser) in line 90
      5 lines of code
      2 parameters
      3 conditional paths
      uses function choose(JavaClassAndMethod) defined in edu::umd::cs::findbugs::ba::JavaClassAndMethodChooser
   variable objectDescriptor in line 66
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/IncompatibleTypes.java
module edu::umd::cs::findbugs::ba::IncompatibleTypes
   function containsAtLeastOneInstantiableClass(Set< ClassDescriptor >) in line 289
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function isInterface() defined in edu::umd::cs::findbugs::ba::XClass
      uses function isAbstract() defined in edu::umd::cs::findbugs::ba::XClass
   function getMsg() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPriority() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPriorityForAssumingCompatible(GenericObjectType,Type) in line 104
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getPriorityForAssumingCompatible(GenericObjectType,Type) defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function getObjectType() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getPriority() defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses variable UNRELATED_TYPES_BUT_MATCHES_TYPE_PARAMETER defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
   function getPriorityForAssumingCompatible(Type,Type) in line 113
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getPriorityForAssumingCompatible(GenericObjectType,Type) defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
   function getPriorityForAssumingCompatible(Type,Type,boolean) in line 118
      protection public
      39 lines of code
      3 parameters
      12 conditional paths
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable INCOMPATIBLE_CLASSES defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable PRIMATIVE_ARRAY_AND_OTHER_ARRAY defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable INCOMPATIBLE_PRIMATIVE_ARRAYS defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function getPriorityForAssumingCompatibleWithArray(Type) defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function getPriorityForAssumingCompatible(GenericObjectType,Type) defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
   function getPriorityForAssumingCompatible(ObjectType,ObjectType,boolean) in line 185
      protection public
      41 lines of code
      3 parameters
      9 conditional paths
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable UNCHECKED defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable GWT_JAVASCRIPTOBJECT_TYPE defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function getPriorityForAssumingCompatible(GenericObjectType,Type) defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable COLLECTION_TYPE defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable MAP_TYPE defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function getPriority() defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
   function getPriorityForAssumingCompatible(boolean,ClassDescriptor,ClassDescriptor) in line 234
      protection public
      54 lines of code
      3 parameters
      10 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable INCOMPATIBLE_CLASSES defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable SET_DESCRIPTOR defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable MAP_DESCRIPTOR defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable LIST_DESCRIPTOR defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function isInterface() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getTransitiveCommonSubtypes(ClassDescriptor,ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function containsAtLeastOneInstantiableClass(Set< ClassDescriptor >) defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable UNRELATED_FINAL_CLASS_AND_INTERFACE defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable UNRELATED_UTIL_INTERFACE defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable UNRELATED_INTERFACES defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable UNRELATED_CLASS_AND_INTERFACE defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
   function getPriorityForAssumingCompatibleWithArray(Type) in line 158
      8 lines of code
      1 parameters
      7 conditional paths
      uses variable ARRAY_AND_OBJECT defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable ARRAY_AND_NON_ARRAY defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function toString() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function IncompatibleTypes(String,int) in line 54
      4 lines of code
      2 parameters
      1 conditional paths
   variable ARRAY_AND_NON_ARRAY in line 74
      protection public
   variable ARRAY_AND_OBJECT in line 85
      protection public
   variable COLLECTION_TYPE in line 44
   variable GWT_JAVASCRIPTOBJECT_TYPE in line 43
   variable INCOMPATIBLE_CLASSES in line 87
      protection public
   variable INCOMPATIBLE_PRIMATIVE_ARRAYS in line 79
      protection public
   variable LIST_DESCRIPTOR in line 46
   variable MAP_DESCRIPTOR in line 47
   variable MAP_TYPE in line 45
   variable PRIMATIVE_ARRAY_AND_OTHER_ARRAY in line 77
      protection public
   variable SEEMS_OK in line 72
      protection public
   variable SET_DESCRIPTOR in line 48
   variable UNCHECKED in line 82
      protection public
   variable UNRELATED_CLASS_AND_INTERFACE in line 90
      protection public
   variable UNRELATED_FINAL_CLASS_AND_INTERFACE in line 93
      protection public
   variable UNRELATED_INTERFACES in line 96
      protection public
   variable UNRELATED_TYPES_BUT_MATCHES_TYPE_PARAMETER in line 100
      protection public
   variable UNRELATED_UTIL_INTERFACE in line 98
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/InnerClassAccess.java
module edu::umd::cs::findbugs::ba::InnerClassAccess
   function getField() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable field defined in edu::umd::cs::findbugs::ba::InnerClassAccess
   function getMethodName() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::InnerClassAccess
   function getMethodSignature() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::InnerClassAccess
   function isLoad() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable field defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function InnerClassAccess(String,String,XField,boolean) in line 28
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses variable field defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function isLoad() defined in edu::umd::cs::findbugs::ba::InnerClassAccess
   variable field in line 25
   variable isLoad in line 26
   variable methodName in line 23
   variable methodSig in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/InnerClassAccessMap.java
module edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function clearCache() in line 113
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classToAccessMap defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function create() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function InnerClassAccessMap() defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function getAccessMapForClass(String) in line 314
      46 lines of code
      1 parameters
      11 conditional paths
      uses variable classToAccessMap defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
      uses function scan(byte[],Callback) defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses function getException() defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::LookupFailure
      uses function getAccess() defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
      uses variable emptyMap defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function getIndex(byte[],int) in line 141
      3 lines of code
      2 parameters
      1 conditional paths
      uses function toInt(byte) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function getInnerClassAccess(String,String) in line 87
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getAccessMapForClass(String) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function getInnerClassAccess(INVOKESTATIC,ConstantPoolGen) in line 100
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function getInnerClassAccess(String,String) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function toInt(byte) in line 131
      6 lines of code
      1 parameters
      2 conditional paths
   function InnerClassAccessMap() in line 124
      3 lines of code
      0 parameters
      1 conditional paths
   variable classToAccessMap in line 64
   variable DEBUG in line 54
   variable emptyMap in line 305
module edu::umd::cs::findbugs::ba::InnerClassAccessMap::LookupFailure
   inherits from RuntimeException
   function getException() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exception defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::LookupFailure
   function LookupFailure(ClassNotFoundException) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable exception defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::LookupFailure
   variable exception in line 150
   variable serialVersionUID in line 149
module edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
   inherits from edu::umd::cs::findbugs::ba::BytecodeScanner::Callback
   function getAccess() in line 210
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function handleInstruction(int,int) in line 190
      protection public
      12 lines of code
      2 parameters
      5 conditional paths
      uses function getIndex(byte[],int) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function isValidAccessMethod(String,XField,boolean) in line 258
      45 lines of code
      3 parameters
      8 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function setField(int,boolean,boolean) in line 221
      27 lines of code
      3 parameters
      4 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function LookupFailure(ClassNotFoundException) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::LookupFailure
   function InstructionCallback(JavaClass,String,String,byte[]) in line 181
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
   variable access in line 170
   variable accessCount in line 171
   variable instructionList in line 169
   variable javaClass in line 166
   variable methodName in line 167
   variable methodSig in line 168
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/InstructionHandleMap.java
module edu::umd::cs::findbugs::ba::InstructionHandleMap
   function get(InstructionHandle) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::ba::InstructionHandleMap
   function put(InstructionHandle,ValueType) in line 42
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::ba::InstructionHandleMap
   function InstructionHandleMap(MethodGen) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::ba::InstructionHandleMap
   variable map in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/interproc/FieldPropertyDatabase.java
module edu::umd::cs::findbugs::ba::interproc::FieldPropertyDatabase
   inherits from PropertyDatabase< FieldDescriptor, Property >
   abstract class
   function parseKey(String) in line 44
      22 lines of code
      1 parameters
      1 conditional paths
   function writeKey(Writer,FieldDescriptor) in line 72
      9 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/interproc/MethodPropertyDatabase.java
module edu::umd::cs::findbugs::ba::interproc::MethodPropertyDatabase
   inherits from PropertyDatabase< MethodDescriptor, Property >
   abstract class
   function parseKey(String) in line 41
      22 lines of code
      1 parameters
      1 conditional paths
   function writeKey(Writer,MethodDescriptor) in line 65
      9 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/interproc/PropertyDatabase.java
module edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
   abstract class
   function decodeProperty(String) in line 247
      1 lines of code
      1 parameters
      1 conditional paths
   function encodeProperty(ValueType) in line 257
      1 lines of code
      1 parameters
      1 conditional paths
   function entrySet() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getKeys() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getProperty(KeyType) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isEmpty() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parseKey(String) in line 229
      1 lines of code
      1 parameters
      1 conditional paths
   function read(@WillClose InputStream) in line 127
      protection public
      30 lines of code
      1 parameters
      1 conditional paths
   function readFromFile(String) in line 114
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeProperty(KeyType) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setProperty(KeyType,ValueType) in line 68
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function write(@WillClose OutputStream) in line 190
      protection public
      31 lines of code
      1 parameters
      1 conditional paths
   function writeKey(Writer,KeyType) in line 237
      1 lines of code
      2 parameters
      1 conditional paths
   function writeToFile(String) in line 164
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function PropertyDatabase() in line 58
      3 lines of code
      0 parameters
      1 conditional paths
   variable propertyMap in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/interproc/PropertyDatabaseFormatException.java
module edu::umd::cs::findbugs::ba::interproc::PropertyDatabaseFormatException
   inherits from Exception
   function PropertyDatabaseFormatException(String) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable serialVersionUID in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/INullnessAnnotationDatabase.java
module edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
   function addDefaultAnnotation(AnnotationDatabase.Target,@DottedClassName String,NullnessAnnotation) in line 107
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function addFieldAnnotation(@DottedClassName String,String,String,boolean,NullnessAnnotation) in line 75
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   function addMethodAnnotation(@DottedClassName String,String,String,boolean,NullnessAnnotation) in line 86
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   function addMethodParameterAnnotation(@DottedClassName String,String,String,boolean,int,NullnessAnnotation) in line 98
      protection public
      1 lines of code
      6 parameters
      1 conditional paths
   function getResolvedAnnotation(final Object,boolean) in line 50
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function loadAuxiliaryAnnotations() in line 56
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function parameterMustBeNonNull(XMethod,int) in line 40
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/InvalidBytecodeException.java
module edu::umd::cs::findbugs::ba::InvalidBytecodeException
   inherits from RuntimeException
   function InvalidBytecodeException(String) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function InvalidBytecodeException(String,Throwable) in line 52
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function InvalidBytecodeException(String,MethodGen,InstructionHandle) in line 63
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function InvalidBytecodeException(String,MethodGen,InstructionHandle,Throwable) in line 75
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
   variable serialVersionUID in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/JavaClassAndMethod.java
module edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function equals(Object) in line 116
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function JavaClassAndMethod(JavaClass,Method) defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function getJavaClass() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function getMethod() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function getSlashedClassName() in line 106
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function hashCode() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function toMethodDescriptor() in line 98
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getSlashedClassName() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function toString() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function toXMethod() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function JavaClassAndMethod(JavaClass,Method) in line 47
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function JavaClassAndMethod(XMethod) in line 58
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   variable javaClass in line 38
   variable method in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/JavaClassAndMethodChooser.java
module edu::umd::cs::findbugs::ba::JavaClassAndMethodChooser
   function choose(JavaClassAndMethod) in line 27
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function choose(XMethod) in line 28
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/JCIPAnnotationDatabase.java
module edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function getClassAnnotation(String,String) in line 31
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getEntryForClass(String) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function getEntryForClass(String) in line 62
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
   function getEntryForClassMember(ClassMember) in line 52
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function getFieldAnnotation(XField,String) in line 39
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getEntryForClassMember(ClassMember) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function getMethodAnnotation(XMethod,String) in line 45
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getEntryForClassMember(ClassMember) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function hasClassAnnotation(String,String) in line 35
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getEntryForClass(String) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function hasFieldAnnotation(XField,String) in line 42
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getEntryForClassMember(ClassMember) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function hasMethodAnnotation(XMethod,String) in line 48
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getEntryForClassMember(ClassMember) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/AbstractMethodAnnotationAccumulator.java
module edu::umd::cs::findbugs::ba::jsr305::AbstractMethodAnnotationAccumulator
   inherits from edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
   abstract class
   function getResult() in line 73
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTypeQualifierValue() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::AbstractMethodAnnotationAccumulator
   function lookupAnnotation(XMethod) in line 74
      1 lines of code
      1 parameters
      1 conditional paths
   function overrides() in line 76
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function visitOverriddenMethod(XMethod) in line 50
      22 lines of code
      1 parameters
      3 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
      uses function getXmethod() defined in edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
      uses function lookupAnnotation(XMethod) defined in edu::umd::cs::findbugs::ba::jsr305::AbstractMethodAnnotationAccumulator
      uses function getResult() defined in edu::umd::cs::findbugs::ba::jsr305::AbstractMethodAnnotationAccumulator
      uses function overrides() defined in edu::umd::cs::findbugs::ba::jsr305::AbstractMethodAnnotationAccumulator
   function AbstractMethodAnnotationAccumulator(TypeQualifierValue,XMethod) in line 34
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::AbstractMethodAnnotationAccumulator
   variable typeQualifierValue in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/Analysis.java
module edu::umd::cs::findbugs::ba::jsr305::Analysis
   function addEffectiveRelevantQualifiers(HashSet< TypeQualifierValue >,XMethod) in line 157
      37 lines of code
      2 parameters
      10 conditional paths
      uses variable DEBUG_FIND_EFFECTIVE_RELEVANT_QUALIFIERS defined in edu::umd::cs::findbugs::ba::jsr305::Analysis
      uses function getNumParams() defined in edu::umd::cs::findbugs::ba::XMethod
   function addKnownTypeQualifiers(HashSet< TypeQualifierValue >,Collection< TypeQualifierAnnotation >) in line 220
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
   function addKnownTypeQualifiersForParameters(HashSet< TypeQualifierValue >,XMethod) in line 209
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function addKnownTypeQualifiers(HashSet< TypeQualifierValue >,Collection< TypeQualifierAnnotation >) defined in edu::umd::cs::findbugs::ba::jsr305::Analysis
   function getDirectlyRelevantTypeQualifiers(XMethod,HashSet< TypeQualifierValue >) in line 199
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
   function getRelevantTypeQualifiers(MethodDescriptor,CFG) in line 78
      protection public
      78 lines of code
      2 parameters
      8 conditional paths
      uses variable FIND_EFFECTIVE_RELEVANT_QUALIFIERS defined in edu::umd::cs::findbugs::ba::jsr305::Analysis
      uses variable DEBUG_FIND_EFFECTIVE_RELEVANT_QUALIFIERS defined in edu::umd::cs::findbugs::ba::jsr305::Analysis
      uses function getDirectlyRelevantTypeQualifiers(XMethod,HashSet< TypeQualifierValue >) defined in edu::umd::cs::findbugs::ba::jsr305::Analysis
      uses function addEffectiveRelevantQualifiers(HashSet< TypeQualifierValue >,XMethod) defined in edu::umd::cs::findbugs::ba::jsr305::Analysis
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   variable DEBUG in line 55
   variable DEBUG_FIND_EFFECTIVE_RELEVANT_QUALIFIERS in line 67
      protection public
   variable FIND_EFFECTIVE_RELEVANT_QUALIFIERS in line 65
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/BackwardTypeQualifierDataflow.java
module edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflow
   inherits from TypeQualifierDataflow< BackwardTypeQualifierDataflowAnalysis >
   function BackwardTypeQualifierDataflow(CFG,BackwardTypeQualifierDataflowAnalysis) in line 37
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/BackwardTypeQualifierDataflowAnalysis.java
module edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   function edgeTransfer(Edge,TypeQualifierValueSet) in line 97
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable PRUNE_CONFLICTING_VALUES defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
      uses variable forwardTypeQualifierDataflow defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
      uses function pruneConflictingValues(TypeQualifierValueSet,TypeQualifierValueSet) defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
   function getBlockOrder(CFG) in line 141
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
   function isForwards() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function modelArguments(Location) in line 216
      49 lines of code
      1 parameters
      6 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumParams() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable USE_DATABASE defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getParameter(MethodDescriptor,int,TypeQualifierValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function getArgument(InvokeInstruction,ConstantPoolGen,int,int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable ARGUMENT_TO_CALLED_METHOD defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkType
      uses function setParameter(int) defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function setInterproc(boolean) defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function registerSourceSink(SourceSinkInfo) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   function modelFieldStore(Location) in line 199
      16 lines of code
      1 parameters
      2 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable FIELD_STORE defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkType
      uses function registerSourceSink(SourceSinkInfo) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   function modelReturn(TypeQualifierAnnotation,Location) in line 187
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable RETURN_VALUE defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkType
      uses function registerSourceSink(SourceSinkInfo) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   function propagateAcrossPhiNode(TypeQualifierValueSet,ValueNumber,ValueNumber) in line 270
      4 lines of code
      3 parameters
      1 conditional paths
      uses function propagateAcrossPhiNode(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function pruneConflictingValues(TypeQualifierValueSet,TypeQualifierValueSet) in line 124
      13 lines of code
      2 parameters
      4 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function getValueNumbers() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function getValue(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function pruneValue(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function registerInstructionSinks() in line 160
      26 lines of code
      0 parameters
      6 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function modelReturn(TypeQualifierAnnotation,Location) defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
      uses function modelFieldStore(Location) defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
      uses function modelArguments(Location) defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
   function registerSourceSinkLocations() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function registerInstructionSinks() defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
   function setForwardTypeQualifierDataflow(ForwardTypeQualifierDataflow) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable forwardTypeQualifierDataflow defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
   function transferInstruction(InstructionHandle,BasicBlock,TypeQualifierValueSet) in line 109
      protection public
      14 lines of code
      3 parameters
      3 conditional paths
      uses variable PRUNE_CONFLICTING_VALUES defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
      uses variable forwardTypeQualifierDataflow defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
      uses function pruneConflictingValues(TypeQualifierValueSet,TypeQualifierValueSet) defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
   function BackwardTypeQualifierDataflowAnalysis(DepthFirstSearch,ReverseDepthFirstSearch,XMethod,CFG,ValueNumberDataflow,ConstantPoolGen,TypeQualifierValue) in line 76
      protection public
      9 lines of code
      7 parameters
      1 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable cpg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
   variable dfs in line 61
   variable forwardTypeQualifierDataflow in line 63
   variable PRUNE_CONFLICTING_VALUES in line 60
   variable rdfs in line 62
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/BackwardTypeQualifierDataflowFactory.java
module edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowFactory
   inherits from TypeQualifierDataflowFactory< BackwardTypeQualifierDataflowAnalysis, BackwardTypeQualifierDataflow >
   function getDataflow(DepthFirstSearch,XMethod,CFG,ValueNumberDataflow,ConstantPoolGen,IAnalysisCache,MethodDescriptor,TypeQualifierValue) in line 64
      24 lines of code
      8 parameters
      1 conditional paths
      uses variable methodDescriptor defined in TypeQualifierDataflowFactory< BackwardTypeQualifierDataflowAnalysis, BackwardTypeQualifierDataflow >
      uses function getDataflow(DepthFirstSearch,XMethod,CFG,ValueNumberDataflow,ConstantPoolGen,IAnalysisCache,MethodDescriptor,TypeQualifierValue) defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowFactory
      uses function setForwardTypeQualifierDataflow(ForwardTypeQualifierDataflow) defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
      uses function registerSourceSinkLocations() defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
   function populateDatabase(BackwardTypeQualifierDataflow,ValueNumberDataflow,XMethod,TypeQualifierValue) in line 90
      29 lines of code
      4 parameters
      4 conditional paths
      uses variable USE_DATABASE defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
      uses function getValue(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable ALWAYS defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses variable NEVER defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function setParameter(MethodDescriptor,int,TypeQualifierValue,TypeQualifierAnnotation) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
   function BackwardTypeQualifierDataflowFactory(MethodDescriptor) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodDescriptor defined in TypeQualifierDataflowFactory< BackwardTypeQualifierDataflowAnalysis, BackwardTypeQualifierDataflow >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/DirectlyRelevantTypeQualifiersDatabase.java
module edu::umd::cs::findbugs::ba::jsr305::DirectlyRelevantTypeQualifiersDatabase
   function getAllKnownQualifiers() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable allKnownQualifiers defined in edu::umd::cs::findbugs::ba::jsr305::DirectlyRelevantTypeQualifiersDatabase
   function getDirectlyRelevantTypeQualifiers(MethodDescriptor) in line 60
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable methodToDirectlyRelevantQualifiersMap defined in edu::umd::cs::findbugs::ba::jsr305::DirectlyRelevantTypeQualifiersDatabase
   function setDirectlyRelevantTypeQualifiers(MethodDescriptor,Collection< TypeQualifierValue >) in line 83
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable methodToDirectlyRelevantQualifiersMap defined in edu::umd::cs::findbugs::ba::jsr305::DirectlyRelevantTypeQualifiersDatabase
      uses variable allKnownQualifiers defined in edu::umd::cs::findbugs::ba::jsr305::DirectlyRelevantTypeQualifiersDatabase
   function DirectlyRelevantTypeQualifiersDatabase() in line 48
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable methodToDirectlyRelevantQualifiersMap defined in edu::umd::cs::findbugs::ba::jsr305::DirectlyRelevantTypeQualifiersDatabase
      uses variable allKnownQualifiers defined in edu::umd::cs::findbugs::ba::jsr305::DirectlyRelevantTypeQualifiersDatabase
   variable allKnownQualifiers in line 43
   variable methodToDirectlyRelevantQualifiersMap in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/FindBugsDefaultAnnotations.java
module edu::umd::cs::findbugs::ba::jsr305::FindBugsDefaultAnnotations
   abstract class
   variable DEFAULT_ANNOTATION in line 39
      protection public
   variable DEFAULT_ANNOTATION_FOR_FIELDS in line 43
      protection public
   variable DEFAULT_ANNOTATION_FOR_METHODS in line 47
      protection public
   variable DEFAULT_ANNOTATION_FOR_PARAMETERS in line 51
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/FlowValue.java
module edu::umd::cs::findbugs::ba::jsr305::FlowValue
   function backwardsValueConflictsWithSource(FlowValue,SourceSinkInfo,TypeQualifierValue) in line 135
      protection public
      15 lines of code
      3 parameters
      2 conditional paths
      uses function getWhen() defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function isStrictQualifier() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses variable ALWAYS defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses variable NEVER defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
   function flowValueFromWhen(When) in line 110
      protection public
      14 lines of code
      1 parameters
      5 conditional paths
      uses variable ALWAYS defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses variable UNKNOWN defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses variable NEVER defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
   function isNo() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NO defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue::Bits
   function isUncertain() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable UNCERTAIN defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue::Bits
   function isYes() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable YES defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue::Bits
   function meet(FlowValue,FlowValue) in line 76
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
   function valuesConflict(FlowValue,FlowValue) in line 96
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
   function FlowValue(int) in line 44
      3 lines of code
      1 parameters
      1 conditional paths
   variable ALWAYS in line 32
      protection public
   variable bits in line 42
   variable mergeMatrix in line 74
   variable NEVER in line 33
      protection public
   variable TOP in line 31
      protection public
   variable UNKNOWN in line 34
      protection public
module edu::umd::cs::findbugs::ba::jsr305::FlowValue::Bits
   variable NO in line 39
      protection public
   variable UNCERTAIN in line 38
      protection public
   variable YES in line 37
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/ForwardTypeQualifierDataflow.java
module edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflow
   inherits from TypeQualifierDataflow< ForwardTypeQualifierDataflowAnalysis >
   function ForwardTypeQualifierDataflow(CFG,ForwardTypeQualifierDataflowAnalysis) in line 37
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/ForwardTypeQualifierDataflowAnalysis.java
module edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   function getBlockOrder(CFG) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
   function isForwards() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function propagateAcrossPhiNode(TypeQualifierValueSet,ValueNumber,ValueNumber) in line 191
      4 lines of code
      3 parameters
      1 conditional paths
      uses function propagateAcrossPhiNode(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function registerFieldLoadSource(Location) in line 139
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function registerTopOfStackSource(SourceSinkType,Location,When,boolean) defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
      uses variable FIELD_LOAD defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkType
   function registerInstructionSources() in line 95
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function registerReturnValueSource(Location) defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
      uses function registerFieldLoadSource(Location) defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
   function registerParameterSources() in line 161
      25 lines of code
      0 parameters
      2 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable cfg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable PARAMETER defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkType
      uses function getLocationAtEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function setParameterAndLocal(int,int) defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function registerSourceSink(SourceSinkInfo) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   function registerReturnValueSource(Location) in line 110
      28 lines of code
      1 parameters
      5 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable USE_DATABASE defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getReturnValue(MethodDescriptor,TypeQualifierValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function registerTopOfStackSource(SourceSinkType,Location,When,boolean) defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
      uses variable RETURN_VALUE_OF_CALLED_METHOD defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkType
   function registerSourceSinkLocations() in line 90
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function registerParameterSources() defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
      uses function registerInstructionSources() defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
   function registerTopOfStackSource(SourceSinkType,Location,When,boolean) in line 150
      10 lines of code
      4 parameters
      2 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function setInterproc(boolean) defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function registerSourceSink(SourceSinkInfo) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   function ForwardTypeQualifierDataflowAnalysis(DepthFirstSearch,XMethod,CFG,ValueNumberDataflow,ConstantPoolGen,TypeQualifierValue) in line 64
      protection public
      7 lines of code
      6 parameters
      1 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable cpg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
   variable dfs in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/ForwardTypeQualifierDataflowFactory.java
module edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowFactory
   inherits from TypeQualifierDataflowFactory< ForwardTypeQualifierDataflowAnalysis, ForwardTypeQualifierDataflow >
   function getDataflow(DepthFirstSearch,XMethod,CFG,ValueNumberDataflow,ConstantPoolGen,IAnalysisCache,MethodDescriptor,TypeQualifierValue) in line 69
      12 lines of code
      8 parameters
      1 conditional paths
      uses function registerSourceSinkLocations() defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
   function populateDatabase(ForwardTypeQualifierDataflow,ValueNumberDataflow,XMethod,TypeQualifierValue) in line 83
      54 lines of code
      4 parameters
      10 conditional paths
      uses variable USE_DATABASE defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
      uses variable ALWAYS defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses variable NEVER defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function setReturnValue(MethodDescriptor,TypeQualifierValue,TypeQualifierAnnotation) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
   function ForwardTypeQualifierDataflowFactory(MethodDescriptor) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodDescriptor defined in TypeQualifierDataflowFactory< ForwardTypeQualifierDataflowAnalysis, ForwardTypeQualifierDataflow >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/JSR305NullnessAnnotations.java
module edu::umd::cs::findbugs::ba::jsr305::JSR305NullnessAnnotations
   abstract class
   variable CHECK_FOR_NULL in line 32
      protection public
   variable NONNULL in line 34
      protection public
   variable NULLABLE in line 36
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/ParameterAnnotationAccumulator.java
module edu::umd::cs::findbugs::ba::jsr305::ParameterAnnotationAccumulator
   inherits from edu::umd::cs::findbugs::ba::jsr305::AbstractMethodAnnotationAccumulator
   function getResult() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in edu::umd::cs::findbugs::ba::jsr305::ParameterAnnotationAccumulator
   function lookupAnnotation(XMethod) in line 65
      9 lines of code
      1 parameters
      2 conditional paths
      uses function overrides() defined in edu::umd::cs::findbugs::ba::jsr305::ParameterAnnotationAccumulator
      uses variable result defined in edu::umd::cs::findbugs::ba::jsr305::ParameterAnnotationAccumulator
      uses variable parameter defined in edu::umd::cs::findbugs::ba::jsr305::ParameterAnnotationAccumulator
      uses function getTypeQualifierValue() defined in edu::umd::cs::findbugs::ba::jsr305::AbstractMethodAnnotationAccumulator
   function overrides() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ParameterAnnotationAccumulator(TypeQualifierValue,XMethod,int) in line 41
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::AbstractMethodAnnotationAccumulator
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
      uses variable parameter defined in edu::umd::cs::findbugs::ba::jsr305::ParameterAnnotationAccumulator
   variable overrides in line 32
   variable parameter in line 30
   variable result in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/ParameterAnnotationLookupResult.java
module edu::umd::cs::findbugs::ba::jsr305::ParameterAnnotationLookupResult
   inherits from edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult
   function combine(TypeQualifierAnnotation,TypeQualifierAnnotation) in line 33
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/ReturnTypeAnnotationAccumulator.java
module edu::umd::cs::findbugs::ba::jsr305::ReturnTypeAnnotationAccumulator
   inherits from edu::umd::cs::findbugs::ba::jsr305::AbstractMethodAnnotationAccumulator
   function getResult() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function lookupAnnotation(XMethod) in line 57
      4 lines of code
      1 parameters
      1 conditional paths
   function overrides() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ReturnTypeAnnotationAccumulator(TypeQualifierValue,XMethod) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable overrides in line 32
   variable result in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/ReturnTypeAnnotationLookupResult.java
module edu::umd::cs::findbugs::ba::jsr305::ReturnTypeAnnotationLookupResult
   inherits from edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult
   function combine(TypeQualifierAnnotation,TypeQualifierAnnotation) in line 33
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/SourceSinkInfo.java
module edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   inherits from Comparable
   function compareTo(SourceSinkInfo) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function compareTo(Location) defined in edu::umd::cs::findbugs::ba::Location
      uses variable location defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function equals(Object) in line 161
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function SourceSinkInfo(SourceSinkType,Location,ValueNumber,When) defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable type defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable vn defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::Location
      uses variable location defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function getInterproc() in line 138
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable interproc defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function getLocal() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable local defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function getLocation() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function getParameter() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parameter defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function getType() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function getValueNumber() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vn defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function getWhen() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function hashCode() in line 153
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::Location
   function setInterproc(boolean) in line 125
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable interproc defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function setParameter(int) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parameter defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function setParameterAndLocal(int,int) in line 97
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable parameter defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable local defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function toString() in line 175
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable location defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function toCompactString() defined in edu::umd::cs::findbugs::ba::Location
      uses variable vn defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function SourceSinkInfo(SourceSinkType,Location,ValueNumber,When) in line 51
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable location defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable vn defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   variable interproc in line 40
   variable local in line 39
   variable location in line 35
   variable parameter in line 38
   variable type in line 34
   variable vn in line 36
   variable when in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/SourceSinkType.java
module edu::umd::cs::findbugs::ba::jsr305::SourceSinkType
   variable ARGUMENT_TO_CALLED_METHOD in line 36
      protection public
   variable FIELD_LOAD in line 33
      protection public
   variable FIELD_STORE in line 39
      protection public
   variable PARAMETER in line 31
      protection public
   variable RETURN_VALUE in line 37
      protection public
   variable RETURN_VALUE_OF_CALLED_METHOD in line 32
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierAnnotation.java
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function clearInstance() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function combineAnnotations(TypeQualifierAnnotation,TypeQualifierAnnotation,When) in line 134
      19 lines of code
      3 parameters
      3 conditional paths
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function getValue(TypeQualifierValue,When) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function combineParameterAnnotations(TypeQualifierAnnotation,TypeQualifierAnnotation) in line 130
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function combineAnnotations(TypeQualifierAnnotation,TypeQualifierAnnotation,When) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses variable combineParameterMatrix defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function combineReturnTypeAnnotations(TypeQualifierAnnotation,TypeQualifierAnnotation) in line 119
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function combineAnnotations(TypeQualifierAnnotation,TypeQualifierAnnotation,When) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses variable combineReturnValueMatrix defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function equals(Object) in line 176
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function TypeQualifierAnnotation(TypeQualifierValue,When) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function getValue(TypeQualifierValue,When) in line 162
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function get(K1,K2) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function TypeQualifierAnnotation(TypeQualifierValue,When) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function put(K1,K2,V) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
   function getValues(Map< TypeQualifierValue, When >) in line 154
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getValue(TypeQualifierValue,When) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function hashCode() in line 172
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function toString() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function TypeQualifierAnnotation(TypeQualifierValue,When) in line 43
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses variable OVERRIDES_BUT_NO_ANNOTATION defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   variable combineParameterMatrix in line 102
   variable combineReturnValueMatrix in line 94
   variable instance in line 58
   variable OVERRIDES_BUT_NO_ANNOTATION in line 48
      protection public
   variable TOP in line 92
   variable typeQualifier in line 40
      protection public
   variable when in line 41
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierAnnotationLookupResult.java
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult
   function combine(TypeQualifierAnnotation,TypeQualifierAnnotation) in line 120
      3 lines of code
      2 parameters
      1 conditional paths
   function getEffectiveTypeQualifierAnnotation() in line 95
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses variable partialResultList defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult
      uses function getTypeQualifierAnnotation() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult::PartialResult
      uses function combine(TypeQualifierAnnotation,TypeQualifierAnnotation) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult
   function toString() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable partialResultList defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult
   variable partialResultList in line 78
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult::PartialResult
   function getAnnotatedObject() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable annotatedObject defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult::PartialResult
   function getTypeQualifierAnnotation() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeQualifierAnnotation defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult::PartialResult
   function toString() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable annotatedObject defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult::PartialResult
      uses variable typeQualifierAnnotation defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult::PartialResult
   variable annotatedObject in line 47
   variable typeQualifierAnnotation in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierApplications.java
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function checkFindBugsDefaultAnnotation(ClassDescriptor,AnnotatedObject,TypeQualifierValue) in line 399
      60 lines of code
      3 parameters
      13 conditional paths
      uses function getAnnotation(ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getValue(String) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses function toString() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function extractAnnotation(Collection< AnnotationValue >,TypeQualifierValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function clearInstance() in line 97
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function computeEffectiveTypeQualifierAnnotation(TypeQualifierValue,AnnotatedObject) in line 523
      52 lines of code
      2 parameters
      8 conditional paths
      uses function getEffectiveObjectAnnotations() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function getDirectTypeQualifierAnnotation(AnnotatedObject,TypeQualifierValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function getInheritedTypeQualifierAnnotation(XMethod,TypeQualifierValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses variable OVERRIDES_BUT_NO_ANNOTATION defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function getDefaultTypeQualifierAnnotation(AnnotatedObject,TypeQualifierValue,boolean) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function computeEffectiveTypeQualifierAnnotation(TypeQualifierValue,XMethod,int) in line 700
      102 lines of code
      3 parameters
      22 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function getEffectiveParameterAnnotations() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function get(K1,K2) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
      uses function put(K1,K2,V) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
      uses function containsKey(K1,K2) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getDirectTypeQualifierAnnotation(AnnotatedObject,TypeQualifierValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isPrivate() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getInheritedTypeQualifierAnnotation(XMethod,TypeQualifierValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses variable OVERRIDES_BUT_NO_ANNOTATION defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function getDefaultTypeQualifierAnnotationForParameters(XMethod,TypeQualifierValue,boolean) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function computeExclusiveQualifier(TypeQualifierValue,ComputeEffectiveTypeQualifierAnnotation) in line 897
      48 lines of code
      2 parameters
      7 conditional paths
      uses function isExclusiveQualifier() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function isExhaustiveQualifier() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function compute(TypeQualifierValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications::ComputeEffectiveTypeQualifierAnnotation
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
   function constructTypeQualifierAnnotation(AnnotationValue) in line 223
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function getValue(String) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses variable value defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
      uses function getAnnotationClass() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function constructTypeQualifierAnnotation(Set< TypeQualifierAnnotation >,AnnotationValue) in line 240
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function constructTypeQualifierAnnotation(AnnotationValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function extractAnnotation(Collection< AnnotationValue >,TypeQualifierValue) in line 460
      12 lines of code
      2 parameters
      4 conditional paths
      uses function constructTypeQualifierAnnotation(AnnotationValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
   function findMatchingTypeQualifierAnnotation(Collection< TypeQualifierAnnotation >,TypeQualifierValue) in line 341
      10 lines of code
      2 parameters
      3 conditional paths
   function getApplicableApplications(AnnotatedObject) in line 312
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getApplicableScopedApplications(Set< TypeQualifierAnnotation >,AnnotatedObject,ElementType) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function getElementType() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function getApplicableApplications(XMethod,int) in line 330
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getApplicableScopedApplications(Set< TypeQualifierAnnotation >,AnnotatedObject,ElementType) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getApplicableScopedApplications(Set< TypeQualifierAnnotation >,AnnotatedObject,ElementType) in line 256
      8 lines of code
      3 parameters
      3 conditional paths
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getContainingScope() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getDirectApplications(Set< TypeQualifierAnnotation >,XMethod,int) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getApplicableScopedApplications(AnnotatedObject,ElementType) in line 275
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getApplicableScopedApplications(Set< TypeQualifierAnnotation >,AnnotatedObject,ElementType) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getApplicableScopedApplications(XMethod,int) in line 291
      7 lines of code
      2 parameters
      1 conditional paths
      uses function getApplicableScopedApplications(Set< TypeQualifierAnnotation >,AnnotatedObject,ElementType) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function getDirectApplications(Set< TypeQualifierAnnotation >,XMethod,int) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getDefaultAnnotation(AnnotatedObject,TypeQualifierValue,ElementType) in line 360
      38 lines of code
      3 parameters
      6 conditional paths
      uses function getAnnotations() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function extractAnnotation(Collection< AnnotationValue >,TypeQualifierValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function checkFindBugsDefaultAnnotation(ClassDescriptor,AnnotatedObject,TypeQualifierValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses variable DEFAULT_ANNOTATION defined in edu::umd::cs::findbugs::ba::jsr305::FindBugsDefaultAnnotations
      uses variable DEFAULT_ANNOTATION_FOR_FIELDS defined in edu::umd::cs::findbugs::ba::jsr305::FindBugsDefaultAnnotations
      uses variable DEFAULT_ANNOTATION_FOR_METHODS defined in edu::umd::cs::findbugs::ba::jsr305::FindBugsDefaultAnnotations
      uses variable DEFAULT_ANNOTATION_FOR_PARAMETERS defined in edu::umd::cs::findbugs::ba::jsr305::FindBugsDefaultAnnotations
   function getDefaultTypeQualifierAnnotation(AnnotatedObject,TypeQualifierValue,boolean) in line 630
      32 lines of code
      3 parameters
      7 conditional paths
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getElementType() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getContainingScope() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getDirectApplications(Set< TypeQualifierAnnotation >,XMethod,int) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function findMatchingTypeQualifierAnnotation(Collection< TypeQualifierAnnotation >,TypeQualifierValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function getDefaultAnnotation(AnnotatedObject,TypeQualifierValue,ElementType) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getDefaultTypeQualifierAnnotationForParameters(XMethod,TypeQualifierValue,boolean) in line 860
      36 lines of code
      3 parameters
      9 conditional paths
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function isAnonymousClass() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getContainingScope() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getDirectApplications(Set< TypeQualifierAnnotation >,XMethod,int) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function findMatchingTypeQualifierAnnotation(Collection< TypeQualifierAnnotation >,TypeQualifierValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function getDefaultAnnotation(AnnotatedObject,TypeQualifierValue,ElementType) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getDirectAnnotation(AnnotatedObject) in line 135
      9 lines of code
      1 parameters
      4 conditional paths
      uses function getDirectObjectAnnotations() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function getAnnotationDescriptors() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getAnnotations() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function getDirectAnnotation(XMethod,int) in line 153
      30 lines of code
      2 parameters
      9 conditional paths
      uses function getDirectParameterAnnotations() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function getNumParams() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function getParameterAnnotations(int) defined in edu::umd::cs::findbugs::ba::XMethod
   function getDirectApplications(Set< TypeQualifierAnnotation >,XMethod,int) in line 193
      protection public
      6 lines of code
      3 parameters
      2 conditional paths
      uses function getDirectAnnotation(AnnotatedObject) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function constructTypeQualifierAnnotation(AnnotationValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getDirectApplications(Set< TypeQualifierAnnotation >,AnnotatedObject,ElementType) in line 209
      protection public
      7 lines of code
      3 parameters
      3 conditional paths
      uses function getElementType() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getDirectAnnotation(AnnotatedObject) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function constructTypeQualifierAnnotation(AnnotationValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getDirectObjectAnnotations() in line 116
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getDirectParameterAnnotations() in line 112
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getDirectTypeQualifierAnnotation(AnnotatedObject,TypeQualifierValue) in line 584
      11 lines of code
      2 parameters
      1 conditional paths
      uses function getDirectApplications(Set< TypeQualifierAnnotation >,XMethod,int) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function getElementType() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function findMatchingTypeQualifierAnnotation(Collection< TypeQualifierAnnotation >,TypeQualifierValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getDirectTypeQualifierAnnotation(XMethod,int,TypeQualifierValue) in line 813
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses function getDirectApplications(Set< TypeQualifierAnnotation >,XMethod,int) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function findMatchingTypeQualifierAnnotation(Collection< TypeQualifierAnnotation >,TypeQualifierValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getEffectiveObjectAnnotations() in line 108
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getEffectiveParameterAnnotations() in line 104
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getEffectiveTypeQualifierAnnotation(AnnotatedObject,TypeQualifierValue) in line 486
      protection public
      36 lines of code
      2 parameters
      6 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getInnerClassAccess(String,String) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable isLoad defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function getField() defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function computeEffectiveTypeQualifierAnnotation(TypeQualifierValue,AnnotatedObject) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function isExclusiveQualifier() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function computeExclusiveQualifier(TypeQualifierValue,ComputeEffectiveTypeQualifierAnnotation) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getEffectiveTypeQualifierAnnotation(final XMethod,final int,TypeQualifierValue) in line 674
      protection public
      23 lines of code
      3 parameters
      2 conditional paths
      uses function computeEffectiveTypeQualifierAnnotation(TypeQualifierValue,AnnotatedObject) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function isExclusiveQualifier() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function computeExclusiveQualifier(TypeQualifierValue,ComputeEffectiveTypeQualifierAnnotation) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getInheritedTypeQualifierAnnotation(XMethod,TypeQualifierValue) in line 605
      15 lines of code
      2 parameters
      3 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses variable OVERRIDES_BUT_NO_ANNOTATION defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function getInheritedTypeQualifierAnnotation(XMethod,int,TypeQualifierValue) in line 834
      16 lines of code
      3 parameters
      3 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getResult() defined in edu::umd::cs::findbugs::ba::jsr305::ParameterAnnotationAccumulator
      uses function getEffectiveTypeQualifierAnnotation() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult
      uses variable overrides defined in edu::umd::cs::findbugs::ba::jsr305::ParameterAnnotationAccumulator
      uses variable OVERRIDES_BUT_NO_ANNOTATION defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   variable instance in line 89
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications::Data
   variable directObjectAnnotations in line 67
   variable directParameterAnnotations in line 71
   variable effectiveObjectAnnotations in line 78
   variable effectiveParameterAnnotations in line 85
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications::ComputeEffectiveTypeQualifierAnnotation
   function compute(TypeQualifierValue) in line 125
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierDatabase.java
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
   function getParameter(MethodDescriptor,int,TypeQualifierValue) in line 125
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses variable parameterMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
   function getReturnValue(MethodDescriptor,TypeQualifierValue) in line 83
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable returnValueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
   function setParameter(MethodDescriptor,int,TypeQualifierValue,TypeQualifierAnnotation) in line 102
      protection public
      12 lines of code
      4 parameters
      3 conditional paths
      uses variable parameterMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
   function setReturnValue(MethodDescriptor,TypeQualifierValue,TypeQualifierAnnotation) in line 61
      protection public
      12 lines of code
      3 parameters
      3 conditional paths
      uses variable returnValueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
   function TypeQualifierDatabase() in line 49
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG in line 41
      protection public
   variable parameterMap in line 44
   variable returnValueMap in line 43
   variable USE_DATABASE in line 39
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierDataflow.java
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflow
   inherits from edu::umd::cs::findbugs::ba::Dataflow
   function TypeQualifierDataflow(CFG,AnalysisType) in line 42
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierDataflowAnalysis.java
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflowAnalysis
   abstract class
   function copy(TypeQualifierValueSet,TypeQualifierValueSet) in line 99
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function makeSameAs(TypeQualifierValueSet) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function createFact() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function edgeTransfer(Edge,TypeQualifierValueSet) in line 153
      protection public
      37 lines of code
      2 parameters
      7 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable PHI_NODE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function propagateAcrossPhiNode(TypeQualifierValueSet,ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function isForwards() defined in edu::umd::cs::findbugs::ba::DataflowAnalysis
      uses function registerSourceSinkLocations() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   function getSourceSinkInfoSet(Location) in line 217
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceSinkMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   function initEntryFact(TypeQualifierValueSet) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isFactValid(TypeQualifierValueSet) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function isTop(TypeQualifierValueSet) in line 113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function makeFactTop(TypeQualifierValueSet) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function meetInto(TypeQualifierValueSet,Edge,TypeQualifierValueSet) in line 127
      protection public
      14 lines of code
      3 parameters
      3 conditional paths
   function propagateAcrossPhiNode(TypeQualifierValueSet,ValueNumber,ValueNumber) in line 191
      1 lines of code
      3 parameters
      1 conditional paths
   function registerSourceSink(SourceSinkInfo) in line 201
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable sourceSinkMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function registerSourceSinkLocations() in line 199
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function same(TypeQualifierValueSet,TypeQualifierValueSet) in line 145
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function transferInstruction(InstructionHandle,BasicBlock,TypeQualifierValueSet) in line 226
      protection public
      21 lines of code
      3 parameters
      5 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable sourceSinkMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function toCompactString() defined in edu::umd::cs::findbugs::ba::Location
      uses function modelSourceSink(SourceSinkInfo) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function TypeQualifierDataflowAnalysis(XMethod,CFG,ValueNumberDataflow,ConstantPoolGen,TypeQualifierValue) in line 67
      protection public
      13 lines of code
      5 parameters
      1 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable cpg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   variable cfg in line 52
   variable cpg in line 55
   variable sourceSinkMap in line 56
   variable typeQualifierValue in line 54
   variable vnaDataflow in line 53
   variable xmethod in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierDataflowFactory.java
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowFactory
   abstract class
   function compute(TypeQualifierValue) in line 82
      31 lines of code
      1 parameters
      1 conditional paths
   function getDataflow(TypeQualifierValue) in line 73
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function getDataflow(DepthFirstSearch,XMethod,CFG,ValueNumberDataflow,ConstantPoolGen,IAnalysisCache,MethodDescriptor,TypeQualifierValue) in line 114
      1 lines of code
      8 parameters
      1 conditional paths
   function populateDatabase(DataflowType,ValueNumberDataflow,XMethod,TypeQualifierValue) in line 124
      1 lines of code
      4 parameters
      1 conditional paths
   function TypeQualifierDataflowFactory(MethodDescriptor) in line 68
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable dataflowMap in line 65
   variable methodDescriptor in line 66
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowFactory::DataflowResult
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierResolver.java
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierResolver
   function logMissingAnnotationClass(MissingClassException) in line 128
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function resolveTypeQualifierDefaults(Collection< AnnotationValue >,ElementType) in line 73
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
   function resolveTypeQualifierDefaults(AnnotationValue,ElementType,LinkedList< AnnotationValue >) in line 160
      30 lines of code
      3 parameters
      8 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getAnnotationClass() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses function getAnnotation(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::XClass
      uses function getValue(String) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses variable desc defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable value defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
      uses function getAnnotationDescriptors() defined in edu::umd::cs::findbugs::ba::XClass
      uses function resolveTypeQualifierNicknames(AnnotationValue,LinkedList< AnnotationValue >,LinkedList< ClassDescriptor >) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierResolver
      uses function logMissingAnnotationClass(MissingClassException) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierResolver
   function resolveTypeQualifierNicknames(AnnotationValue,LinkedList< AnnotationValue >,LinkedList< ClassDescriptor >) in line 90
      37 lines of code
      3 parameters
      9 conditional paths
      uses function getAnnotationClass() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable NULLABLE defined in edu::umd::cs::findbugs::ba::jsr305::JSR305NullnessAnnotations
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getAnnotationDescriptors() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getAnnotation(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::XClass
      uses function logMissingAnnotationClass(MissingClassException) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierResolver
   function resolveTypeQualifiers(AnnotationValue) in line 59
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function resolveTypeQualifierNicknames(AnnotationValue,LinkedList< AnnotationValue >,LinkedList< ClassDescriptor >) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierResolver
   function resolveTypeQualifiers(Collection< AnnotationValue >) in line 142
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function resolveTypeQualifierNicknames(AnnotationValue,LinkedList< AnnotationValue >,LinkedList< ClassDescriptor >) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierResolver
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierValue.java
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
   function clearInstance() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
   function determineIfQualifierIsExclusiveOrExhaustive(ClassDescriptor,TypeQualifierValue) in line 194
      51 lines of code
      2 parameters
      11 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses variable isExclusive defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses variable isExhaustive defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getXMethods() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable EXHAUSTIVE_ANNOTATION defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses variable EXCLUSIVE_ANNOTATION defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function setIsExclusive() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function setIsExhaustive() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
   function determineIfQualifierIsStrict(ClassDescriptor,TypeQualifierValue) in line 169
      24 lines of code
      2 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses function setIsStrict() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function isStrictQualifier() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
   function equals(Object) in line 310
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function TypeQualifierValue(ClassDescriptor,@CheckForNull Object) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable value defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
   function getAllKnownTypeQualifiers() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
   function getComplementaryExclusiveTypeQualifierValue(TypeQualifierValue) in line 132
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses function isExclusiveQualifier() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses variable instance defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses variable value defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
   function getTypeQualifierClassDescriptor() in line 251
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
   function getValue(ClassDescriptor,Object) in line 105
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function get(K1,K2) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
      uses variable value defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function TypeQualifierValue(ClassDescriptor,@CheckForNull Object) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function determineIfQualifierIsStrict(ClassDescriptor,TypeQualifierValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function determineIfQualifierIsExclusiveOrExhaustive(ClassDescriptor,TypeQualifierValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function put(K1,K2,V) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
   function hashCode() in line 303
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function hashCode() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable value defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
   function hasMultipleVariants(TypeQualifierValue) in line 159
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
   function isExclusiveQualifier() in line 283
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isExclusive defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
   function isExhaustiveQualifier() in line 298
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isExhaustive defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
   function isStrictQualifier() in line 269
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isStrict defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
   function setIsExclusive() in line 273
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsExhaustive() in line 288
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsStrict() in line 259
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 320
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function toString() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable value defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
   function TypeQualifierValue(ClassDescriptor,@CheckForNull Object) in line 64
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses variable value defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
   variable DEBUG in line 51
      protection public
   variable EXCLUSIVE_ANNOTATION in line 53
   variable EXHAUSTIVE_ANNOTATION in line 55
   variable instance in line 86
   variable isExclusive in line 61
   variable isExhaustive in line 62
   variable isStrict in line 60
   variable typeQualifier in line 58
      protection public
   variable value in line 59
      protection public
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue::Data
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierValueSet.java
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function addSourceSinkInfo(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber,SourceSinkInfo) in line 75
      4 lines of code
      3 parameters
      1 conditional paths
      uses function getOrCreateSourceSinkInfoSet(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function appendSourceSinkInfos(StringBuilder,String,Set< SourceSinkInfo >) in line 296
      16 lines of code
      3 parameters
      3 conditional paths
   function copySourceSinkInfoSetMap(Map< ValueNumber, Set< SourceSinkInfo >>,Map< ValueNumber, Set< SourceSinkInfo >>) in line 138
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getOrCreateSourceSinkInfoSet(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function equals(Object) in line 236
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function TypeQualifierValueSet() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function isValid() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable valueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable state defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function getOrCreateSourceSinkInfoSet(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber) in line 95
      8 lines of code
      2 parameters
      2 conditional paths
   function getValue(ValueNumber) in line 104
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable valueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable TOP defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
   function getValueNumbers() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function getWhereAlways(ValueNumber) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getOrCreateSourceSinkInfoSet(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereAlways defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function getWhereNever(ValueNumber) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getOrCreateSourceSinkInfoSet(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereNever defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function hashCode() in line 252
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isBottom() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function isTop() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function isValid() in line 113
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function makeSameAs(TypeQualifierValueSet) in line 127
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function reset(State) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable state defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable valueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function copySourceSinkInfoSetMap(Map< ValueNumber, Set< SourceSinkInfo >>,Map< ValueNumber, Set< SourceSinkInfo >>) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereAlways defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereNever defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function makeValid() in line 117
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function reset(State) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function mergeSourceSinkInfoSets(Map< ValueNumber, Set< SourceSinkInfo >>,Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber) in line 221
      10 lines of code
      3 parameters
      2 conditional paths
      uses function getOrCreateSourceSinkInfoSet(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function mergeWith(TypeQualifierValueSet) in line 205
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function setValue(ValueNumber,FlowValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function mergeSourceSinkInfoSets(Map< ValueNumber, Set< SourceSinkInfo >>,Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function modelSourceSink(SourceSinkInfo) in line 55
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function getValueNumber() defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function getWhen() defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function setValue(ValueNumber,FlowValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function isYes() defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses function addSourceSinkInfo(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber,SourceSinkInfo) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereAlways defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function isNo() defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses variable whereNever defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function propagateAcrossPhiNode(ValueNumber,ValueNumber) in line 179
      protection public
      14 lines of code
      2 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function setValue(ValueNumber,FlowValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function getValue(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function transferSourceSinkInfoSet(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereAlways defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereNever defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable valueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function pruneValue(ValueNumber) in line 80
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable valueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereAlways defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereNever defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function reset(State) in line 172
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable valueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereAlways defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereNever defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable state defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function setBottom() in line 164
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function reset(State) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function setTop() in line 152
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function reset(State) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function setValue(ValueNumber,FlowValue) in line 71
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable valueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function toString() in line 257
      protection public
      23 lines of code
      0 parameters
      4 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable valueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function valueNumberToString(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function transferSourceSinkInfoSet(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber,ValueNumber) in line 194
      10 lines of code
      3 parameters
      2 conditional paths
      uses function getOrCreateSourceSinkInfoSet(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function addSourceSinkInfo(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber,SourceSinkInfo) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function valueNumberToString(ValueNumber) in line 281
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getValue(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function toString() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function appendSourceSinkInfos(StringBuilder,String,Set< SourceSinkInfo >) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function getOrCreateSourceSinkInfoSet(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereAlways defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereNever defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function TypeQualifierValueSet() in line 48
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   variable DEFAULT_FLOW_VALUE in line 41
   variable state in line 46
   variable valueMap in line 43
   variable whereAlways in line 44
   variable whereNever in line 45
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet::State
   variable BOTTOM in line 39
      protection public
   variable TOP in line 39
      protection public
   variable VALID in line 39
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/LineNumberMap.java
module edu::umd::cs::findbugs::ba::LineNumberMap
   function build() in line 66
      protection public
      40 lines of code
      0 parameters
      10 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::LineNumberMap
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::LineNumberMap
      uses function checkTable(LineNumberTable) defined in edu::umd::cs::findbugs::ba::LineNumberMap
      uses variable LINE_NUMBER_BUG defined in edu::umd::cs::findbugs::ba::LineNumberMap
      uses variable lineNumberMap defined in edu::umd::cs::findbugs::ba::LineNumberMap
      uses function hasLineNumbers() defined in edu::umd::cs::findbugs::ba::LineNumberMap
   function checkTable(LineNumberTable) in line 107
      11 lines of code
      1 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::LineNumberMap
   function hasLineNumbers() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function lookupLineNumber(InstructionHandle) in line 133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lineNumberMap defined in edu::umd::cs::findbugs::ba::LineNumberMap
   function LineNumberMap(MethodGen) in line 56
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::LineNumberMap
      uses variable lineNumberMap defined in edu::umd::cs::findbugs::ba::LineNumberMap
      uses function hasLineNumbers() defined in edu::umd::cs::findbugs::ba::LineNumberMap
   variable DEBUG in line 39
   variable hasLineNumbers in line 49
   variable LINE_NUMBER_BUG in line 45
   variable lineNumberMap in line 48
   variable methodGen in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/LiveLocalStoreAnalysis.java
module edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   inherits from BackwardDataflowAnalysis< BitSet >
   inherits from edu::umd::cs::findbugs::ba::Debug
   function copy(BitSet,BitSet) in line 61
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function createFact() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function factToString(BitSet) in line 143
      protection public
      20 lines of code
      1 parameters
      7 conditional paths
      uses function isTop(BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
      uses variable killedByStoreOffset defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
      uses function killedByStore(BitSet,int) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
      uses function isStoreAlive(BitSet,int) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function initEntryFact(BitSet) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isFactValid(BitSet) in line 127
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function verifyFact(BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
      uses function isTop(BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function isStoreAlive(BitSet,int) in line 177
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function isTop(BitSet) in line 167
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable topBit defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function killedByStore(BitSet,int) in line 185
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable killedByStoreOffset defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function makeFactTop(BitSet) in line 70
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable topBit defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function meetInto(BitSet,Edge,BitSet) in line 79
      protection public
      16 lines of code
      3 parameters
      3 conditional paths
      uses function verifyFact(BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
      uses function isTop(BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
      uses function copy(BitSet,BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function same(BitSet,BitSet) in line 75
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function transferInstruction(InstructionHandle,BasicBlock,BitSet) in line 97
      protection public
      28 lines of code
      3 parameters
      5 conditional paths
      uses function isFactValid(BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
      uses variable killedByStoreOffset defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function verifyFact(BitSet) in line 135
      6 lines of code
      1 parameters
      3 conditional paths
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function isTop(BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
      uses variable topBit defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function LiveLocalStoreAnalysis(MethodGen,ReverseDepthFirstSearch,DepthFirstSearch) in line 51
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable rdfs defined in BackwardDataflowAnalysis< BitSet >
      uses variable dfs defined in BackwardDataflowAnalysis< BitSet >
   variable killedByStoreOffset in line 49
   variable topBit in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/LiveLocalStoreDataflow.java
module edu::umd::cs::findbugs::ba::LiveLocalStoreDataflow
   inherits from Dataflow< BitSet, LiveLocalStoreAnalysis >
   function LiveLocalStoreDataflow(CFG,LiveLocalStoreAnalysis) in line 31
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< BitSet, LiveLocalStoreAnalysis >
      uses variable analysis defined in Dataflow< BitSet, LiveLocalStoreAnalysis >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/Location.java
module edu::umd::cs::findbugs::ba::Location
   inherits from Comparable
   function compareTo(Location) in line 107
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
   function equals(Object) in line 121
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function Location(@NonNull InstructionHandle,@NonNull BasicBlock) defined in edu::umd::cs::findbugs::ba::Location
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
   function getBasicBlock() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
   function getFirstLocation(@NonNull BasicBlock) in line 59
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function Location(@NonNull InstructionHandle,@NonNull BasicBlock) defined in edu::umd::cs::findbugs::ba::Location
   function getHandle() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
   function getLastLocation(@NonNull BasicBlock) in line 65
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function Location(@NonNull InstructionHandle,@NonNull BasicBlock) defined in edu::umd::cs::findbugs::ba::Location
   function hashCode() in line 113
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable hash defined in edu::umd::cs::findbugs::ba::Location
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
   function isFirstInstructionInBasicBlock() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isLastInstructionInBasicBlock() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function toCompactString() in line 137
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
   function toString() in line 129
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function Location(@NonNull InstructionHandle,@NonNull BasicBlock) in line 52
      protection public
      6 lines of code
      2 parameters
      3 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
   variable basicBlock in line 43
   variable handle in line 42
   variable hash in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/LockAnalysis.java
module edu::umd::cs::findbugs::ba::LockAnalysis
   inherits from ForwardDataflowAnalysis< LockSet >
   function copy(LockSet,LockSet) in line 65
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(LockSet) defined in edu::umd::cs::findbugs::ba::LockSet
   function createFact() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initEntryFact(LockSet) in line 69
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function clear() defined in edu::umd::cs::findbugs::ba::LockSet
      uses function setDefaultLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable isSynchronized defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable isStatic defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable vna defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses function getThisValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function setLockCount(int,int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getClassObjectValue(String) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::LockAnalysis
   function isFactValid(LockSet) in line 129
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isTop(LockSet) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::LockSet
   function lockOp(LockSet,int,int) in line 117
      10 lines of code
      3 parameters
      4 conditional paths
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable BOTTOM defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses function setLockCount(int,int) defined in edu::umd::cs::findbugs::ba::LockSet
   function makeFactTop(LockSet) in line 82
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function clear() defined in edu::umd::cs::findbugs::ba::LockSet
      uses function setDefaultLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable TOP defined in edu::umd::cs::findbugs::ba::LockSet
   function meetInto(LockSet,Edge,LockSet) in line 93
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function same(LockSet,LockSet) in line 89
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function sameAs(LockSet) defined in edu::umd::cs::findbugs::ba::LockSet
   function transferInstruction(InstructionHandle,BasicBlock,LockSet) in line 98
      protection public
      18 lines of code
      3 parameters
      4 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function lockOp(LockSet,int,int) defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable isSynchronized defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable isStatic defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable vna defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses function getThisValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function LockAnalysis(MethodGen,ValueNumberDataflow,DepthFirstSearch) in line 51
      protection public
      9 lines of code
      3 parameters
      2 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< LockSet >
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::LockAnalysis
   variable DEBUG in line 43
   variable isStatic in line 49
   variable isSynchronized in line 48
   variable methodGen in line 45
   variable vna in line 47
   variable vnaDataflow in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/LockChecker.java
module edu::umd::cs::findbugs::ba::LockChecker
   function execute() in line 68
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::LockChecker
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable methodDescriptor defined in edu::umd::cs::findbugs::ba::LockChecker
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getLockDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getFactAtLocation(Location) in line 88
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses variable lockDataflow defined in edu::umd::cs::findbugs::ba::LockChecker
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable cache defined in edu::umd::cs::findbugs::ba::LockChecker
      uses function setDefaultLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable method defined in edu::umd::cs::findbugs::ba::LockChecker
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::LockChecker
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function setLockCount(int,int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function LockChecker(MethodDescriptor) in line 59
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable methodDescriptor defined in edu::umd::cs::findbugs::ba::LockChecker
   variable cache in line 54
   variable lockDataflow in line 52
   variable method in line 51
   variable methodDescriptor in line 50
   variable vnaDataflow in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/LockDataflow.java
module edu::umd::cs::findbugs::ba::LockDataflow
   inherits from Dataflow< LockSet, LockAnalysis >
   function LockDataflow(CFG,LockAnalysis) in line 28
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< LockSet, LockAnalysis >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/LockSet.java
module edu::umd::cs::findbugs::ba::LockSet
   function addEntry(int,int,int) in line 291
      26 lines of code
      3 parameters
      3 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable INVALID defined in edu::umd::cs::findbugs::ba::LockSet
   function clear() in line 147
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable INVALID defined in edu::umd::cs::findbugs::ba::LockSet
   function containsReturnValue(ValueNumberFactory) in line 198
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses function forNumber(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable RETURN_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function copyFrom(LockSet) in line 136
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable defaultLockCount defined in edu::umd::cs::findbugs::ba::LockSet
   function findIndex(int) in line 280
      10 lines of code
      1 parameters
      4 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
   function getLockCount(int) in line 82
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function findIndex(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable defaultLockCount defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
   function getLockedValueNumbers(ValueNumberFrame) in line 355
      protection public
      8 lines of code
      1 parameters
      4 conditional paths
      uses function allSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
   function getNumLockedObjects() in line 120
      protection public
      10 lines of code
      0 parameters
      4 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable INVALID defined in edu::umd::cs::findbugs::ba::LockSet
   function identicalSubset(LockSet) in line 253
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
   function intersectWith(LockSet) in line 218
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
   function isEmpty() in line 241
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
   function isTop() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable defaultLockCount defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable TOP defined in edu::umd::cs::findbugs::ba::LockSet
   function meetWith(LockSet) in line 159
      protection public
      23 lines of code
      1 parameters
      5 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function mergeValues(int,int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function setLockCount(int,int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function setDefaultLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
   function mergeValues(int,int) in line 267
      12 lines of code
      2 parameters
      5 conditional paths
      uses variable TOP defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable BOTTOM defined in edu::umd::cs::findbugs::ba::LockSet
   function sameAs(LockSet) in line 188
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function identicalSubset(LockSet) defined in edu::umd::cs::findbugs::ba::LockSet
   function setDefaultLockCount(int) in line 113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable defaultLockCount defined in edu::umd::cs::findbugs::ba::LockSet
   function setLockCount(int,int) in line 99
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function findIndex(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function addEntry(int,int,int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
   function toString() in line 319
      protection public
      31 lines of code
      0 parameters
      8 conditional paths
      uses variable defaultLockCount defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable TOP defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable BOTTOM defined in edu::umd::cs::findbugs::ba::LockSet
   function LockSet() in line 70
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable DEFAULT_CAPACITY defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable TOP defined in edu::umd::cs::findbugs::ba::LockSet
      uses function clear() defined in edu::umd::cs::findbugs::ba::LockSet
   variable array in line 58
   variable BOTTOM in line 47
      protection public
   variable DEFAULT_CAPACITY in line 50
   variable defaultLockCount in line 63
   variable INVALID in line 49
   variable TOP in line 41
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/MethodBytecodeSet.java
module edu::umd::cs::findbugs::ba::MethodBytecodeSet
   inherits from java::util::BitSet
   function toString() in line 33
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/MethodChooser.java
module edu::umd::cs::findbugs::ba::MethodChooser
   function choose(Method) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/MethodHash.java
module edu::umd::cs::findbugs::ba::MethodHash
   inherits from Comparable
   function compareHashes(byte[],byte[]) in line 163
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function toUnsigned(byte) defined in edu::umd::cs::findbugs::ba::MethodHash
   function compareTo(MethodHash) in line 146
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function compareHashes(byte[],byte[]) defined in edu::umd::cs::findbugs::ba::MethodHash
      uses variable hash defined in edu::umd::cs::findbugs::ba::MethodHash
   function computeHash(Method) in line 103
      protection public
      29 lines of code
      1 parameters
      3 conditional paths
      uses function scan(byte[],Callback) defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses variable hash defined in edu::umd::cs::findbugs::ba::MethodHash
   function equals(Object) in line 151
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function isSameHash(MethodHash) defined in edu::umd::cs::findbugs::ba::MethodHash
   function getMethodHash() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable hash defined in edu::umd::cs::findbugs::ba::MethodHash
   function getMethodName() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::MethodHash
   function getMethodSig() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::MethodHash
   function hashCode() in line 157
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable hash defined in edu::umd::cs::findbugs::ba::MethodHash
   function isSameHash(MethodHash) in line 139
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable hash defined in edu::umd::cs::findbugs::ba::MethodHash
   function isStatic() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toUnsigned(byte) in line 179
      7 lines of code
      1 parameters
      2 conditional paths
   function MethodHash() in line 48
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function MethodHash(String,String,boolean,byte[]) in line 59
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::MethodHash
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::MethodHash
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::MethodHash
      uses variable hash defined in edu::umd::cs::findbugs::ba::MethodHash
   variable hash in line 39
   variable isStatic in line 42
   variable METHOD_HASH_ELEMENT_NAME in line 37
      protection public
   variable methodName in line 40
   variable methodSig in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/MethodUnprofitableException.java
module edu::umd::cs::findbugs::ba::MethodUnprofitableException
   inherits from edu::umd::cs::findbugs::ba::CFGBuilderException
   function getMethod() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::MethodUnprofitableException
   function MethodUnprofitableException(JavaClassAndMethod) in line 40
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::MethodUnprofitableException
   function MethodUnprofitableException(JavaClass,Method) in line 51
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::MethodUnprofitableException
   function MethodUnprofitableException(MethodDescriptor) in line 61
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   variable method in line 33
   variable serialVersionUID in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/MissingClassException.java
module edu::umd::cs::findbugs::ba::MissingClassException
   inherits from edu::umd::cs::findbugs::ba::DataflowAnalysisException
   function getClassName() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::MissingClassException
   function getClassNotFoundException() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function MissingClassException(String) in line 33
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::MissingClassException
   function MissingClassException(ClassNotFoundException) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable className in line 31
   variable serialVersionUID in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/MissingClassException.java
module edu::umd::cs::findbugs::classfile::MissingClassException
   inherits from edu::umd::cs::findbugs::classfile::ResourceNotFoundException
   function getClassDescriptor() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::MissingClassException
   function MissingClassException(ClassDescriptor) in line 37
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::MissingClassException
      uses function toResourceName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function MissingClassException(ClassDescriptor,Throwable) in line 48
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::MissingClassException
      uses function toResourceName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   variable classDescriptor in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/DerefFinder.java
module edu::umd::cs::findbugs::ba::npe::DerefFinder
   function getAnalysis(ClassContext,Method) in line 66
      protection public
      130 lines of code
      2 parameters
      27 conditional paths
      uses function getXClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::DerefFinder
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getMethodNullnessAnnotation(ClassContext,Method) defined in edu::umd::cs::findbugs::ba::npe::DerefFinder
      uses function isNullCheck() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function add(Location,ValueNumber,PointerUsageRequiringNonNullValue) defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function parameterMustBeNonNull(XMethod,int) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses function getSlotsFromTopOfStackForParameter(int) defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getProperty(KeyType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   function getMethodNullnessAnnotation(ClassContext,Method) in line 197
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable UNKNOWN_NULLNESS defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   variable DEBUG in line 65
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/IsNullConditionDecision.java
module edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function equals(Object) in line 66
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function IsNullConditionDecision(@CheckForNull ValueNumber,@CheckForNull IsNullValue,@CheckForNull IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable value defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function getDecision(int) in line 109
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function getValue() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function hashCode() in line 59
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function isEdgeFeasible(int) in line 97
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getDecision(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function isRedundant() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function toString() in line 121
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses function toString() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses function toString() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function IsNullConditionDecision(@CheckForNull ValueNumber,@CheckForNull IsNullValue,@CheckForNull IsNullValue) in line 49
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   variable fallThroughDecision in line 39
   variable ifcmpDecision in line 38
   variable value in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/IsNullValue.java
module edu::umd::cs::findbugs::ba::npe::IsNullValue
   inherits from edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
   inherits from edu::umd::cs::findbugs::ba::Debug
   function checkedNonNullValue() in line 270
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function checkedNullValue() in line 254
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function checkNoKaboomNNLocation() in line 131
      5 lines of code
      0 parameters
      2 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function createInstanceByFlagList() in line 94
      20 lines of code
      0 parameters
      2 conditional paths
      uses variable FLAG_MASK defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_SHIFT defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function IsNullValue(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NSP defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN_UNKNOWN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP2 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP3 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function downgradeOnControlSplit() in line 490
      protection public
      18 lines of code
      0 parameters
      5 conditional paths
      uses variable NCP_EXTRA_BRANCH defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function nullOnComplexPathValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function nullOnComplexPathValue3() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function equals(Object) in line 138
      protection public
      9 lines of code
      1 parameters
      5 conditional paths
      uses function IsNullValue(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::Location
   function getBaseKind() in line 156
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_MASK defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function getFlags() in line 160
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_MASK defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function getLocationOfKaBoom() in line 480
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function hasFlag(int) in line 164
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function hashCode() in line 149
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::Location
   function isChecked() in line 197
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isDefinitelyNotNull() in line 437
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isDefinitelyNull() in line 382
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isException() in line 171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable EXCEPTION defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isFieldValue() in line 184
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FIELD_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isNullOnComplicatedPath() in line 405
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN_UNKNOWN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP2 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP3 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isNullOnComplicatedPath2() in line 419
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP2 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isNullOnComplicatedPath23() in line 412
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP2 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP3 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isNullOnSomePath() in line 390
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP_EXTRA_BRANCH defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
      uses variable NSP defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP2 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isParamValue() in line 190
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable PARAM defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isReadlineValue() in line 180
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable READLINE_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isReturnValue() in line 177
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable RETURN_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function markInformationAsComingFromFieldValue(XField) in line 237
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function IsNullValue(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FIELD_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_SHIFT defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function markInformationAsComingFromReturnValueOfMethod(XMethod) in line 225
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable RETURN_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable READLINE_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function IsNullValue(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_SHIFT defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function merge(IsNullValue,IsNullValue) in line 344
      protection public
      34 lines of code
      2 parameters
      6 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable EXCEPTION defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable mergeMatrix defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function noKaboomNonNullValue(@NonNull Location) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_SHIFT defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function mightBeNull() in line 430
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function noKaboomNonNullValue(@NonNull Location) in line 278
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function IsNullValue(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function nonNullValue() in line 261
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function nonReportingNotNullValue() in line 303
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN_UNKNOWN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function nullOnComplexPathValue() in line 314
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP2 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function nullOnComplexPathValue3() in line 323
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP3 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function nullOnSimplePathValue() in line 288
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NSP defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function nullValue() in line 245
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function parameterMarkedAsMightBeNull(XMethodParameter) in line 295
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable PARAM defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_SHIFT defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NSP defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function pathSensitiveNonNullValue() in line 337
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function pathSensitiveNullValue() in line 330
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function toBaseValue() in line 208
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function toExceptionValue() in line 215
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function IsNullValue(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable EXCEPTION defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_SHIFT defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function toString() in line 443
      protection public
      37 lines of code
      0 parameters
      16 conditional paths
      uses variable DEBUG_EXCEPTION defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable EXCEPTION defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable PARAM defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable RETURN_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FIELD_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable DEBUG_KABOOM defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NSP defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN_UNKNOWN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP2 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function wouldHaveBeenAKaboom() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function IsNullValue(int) in line 119
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkNoKaboomNNLocation() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function IsNullValue(int,Location) in line 125
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkNoKaboomNNLocation() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   variable CHECKED_NN in line 51
   variable CHECKED_NULL in line 46
   variable DEBUG_EXCEPTION in line 40
   variable DEBUG_KABOOM in line 41
   variable EXCEPTION in line 68
   variable FIELD_VAL in line 73
   variable FLAG_MASK in line 77
   variable FLAG_SHIFT in line 65
   variable instanceByFlagsList in line 92
   variable kind in line 116
   variable locationOfKaBoom in line 117
   variable mergeMatrix in line 79
   variable NCP2 in line 61
   variable NCP3 in line 63
   variable NN in line 49
   variable NN_UNKNOWN in line 59
   variable NO_KABOOM_NN in line 53
   variable NSP in line 57
   variable NULL in line 44
   variable PARAM in line 70
   variable READLINE_VAL in line 75
   variable RETURN_VAL in line 72
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/IsNullValueAnalysis.java
module edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   inherits from edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   inherits from edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
   function addLocationWhereValueBecomesNull(LocationWhereValueBecomesNull) in line 591
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable locationWhereValueBecomesNullSet defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function createFact() in line 207
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function endTransfer(BasicBlock,@CheckForNull InstructionHandle,IsNullValueFrame) in line 275
      protection public
      14 lines of code
      3 parameters
      3 conditional paths
      uses variable lastFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getDecision(BasicBlock,IsNullValueFrame) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable instanceOfFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function getClassAndMethod() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function getDecision(BasicBlock,IsNullValueFrame) in line 618
      129 lines of code
      2 parameters
      23 conditional paths
      uses variable lastFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable instanceOfFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable nullComparisonInstructionSet defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function handleIfNull(IsNullValue,ValueNumber,boolean) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
   function getFactAtMidEdge(Edge) in line 846
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses function isForwards() defined in ForwardDataflowAnalysis< FrameType >
      uses function createFact() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function copy(FrameType,FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses function makeFactTop(FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses function meetInto(IsNullValueFrame,Edge,IsNullValueFrame) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function getForPointerEqualityCheck(CFG,ValueNumberDataflow) in line 126
      protection public
      53 lines of code
      2 parameters
      15 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function orderedLocations() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
   function getKnownNonnullDueToPointerDisequality(ValueNumber,int) in line 181
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable pointerEqualityCheck defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function getLocationWhereValueBecomesNullSet() in line 596
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable locationWhereValueBecomesNullSet defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function handleIfNull(IsNullValue,ValueNumber,boolean) in line 748
      24 lines of code
      3 parameters
      5 conditional paths
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function wouldHaveBeenAKaboom() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function initEntryFact(IsNullValueFrame) in line 213
      protection public
      43 lines of code
      1 parameters
      7 conditional paths
      uses variable cachedEntryFact defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function createFact() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function setValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getResolvedAnnotation(final Object,boolean) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function copy(FrameType,FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   function meetInto(IsNullValueFrame,Edge,IsNullValueFrame) in line 365
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function meetInto(IsNullValueFrame,Edge,IsNullValueFrame,boolean) in line 369
      protection public
      192 lines of code
      4 parameters
      37 conditional paths
      uses variable NO_SPLIT_DOWNGRADE_NSP defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
      uses variable cfg defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getNumNonExceptionSucessors(BasicBlock) defined in edu::umd::cs::findbugs::ba::CFG
      uses function modifyFrame(FrameType,@Nullable FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses function downgradeOnControlSplit() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable NO_SWITCH_DEFAULT_AS_EXCEPTION defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
      uses variable SWITCH_DEFAULT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function toExceptionValues() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function isExceptionHandler() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getExceptionGen() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses function pushValue(ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getDecision() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function isEdgeFeasible(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses function createFact() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function setTop() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function getValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getDecision(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function availableLoadMapAsString() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function replaceValues(IsNullValueFrame,IsNullValueFrame,ValueNumber,ValueNumberFrame,ValueNumberFrame,IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function addLocationWhereValueBecomesNull(LocationWhereValueBecomesNull) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getKnownNonnullDueToPointerDisequality(ValueNumber,int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function isNullCheck() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable phiNodeForLoads defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getAvailableLoad(AvailableLoad) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function useNewValueNumberForLoad(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function mergeInto(IsNullValueFrame,IsNullValueFrame) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function mergeInto(IsNullValueFrame,IsNullValueFrame) in line 566
      13 lines of code
      2 parameters
      4 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function mergeValues(IsNullValueFrame,IsNullValueFrame,int) in line 601
      5 lines of code
      3 parameters
      1 conditional paths
   function replaceValues(IsNullValueFrame,IsNullValueFrame,ValueNumber,ValueNumberFrame,ValueNumberFrame,IsNullValue) in line 788
      57 lines of code
      6 parameters
      14 conditional paths
      uses function modifyFrame(FrameType,@Nullable FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getAvailableLoad(AvailableLoad) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function setKnownValue(@NonNull ValueNumber,@NonNull IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
   function setClassAndMethod(JavaClassAndMethod) in line 201
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function startIteration() in line 584
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable locationWhereValueBecomesNullSet defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function startTransfer() in line 270
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable lastFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable instanceOfFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function transfer(BasicBlock,@CheckForNull InstructionHandle,IsNullValueFrame,IsNullValueFrame) in line 259
      protection public
      10 lines of code
      4 parameters
      2 conditional paths
      uses function startTransfer() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function endTransfer(BasicBlock,@CheckForNull InstructionHandle,IsNullValueFrame) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
   function transferInstruction(InstructionHandle,BasicBlock,IsNullValueFrame) in line 291
      protection public
      63 lines of code
      3 parameters
      9 conditional paths
      uses variable lastFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function createFact() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function copyFrom(Frame< IsNullValue >) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable instanceOfFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable visitor defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function setFrameAndLocation(FrameType,Location) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function analyzeInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getSlotContainingNewNullValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function addLocationWhereValueBecomesNull(LocationWhereValueBecomesNull) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function IsNullValueAnalysis(MethodDescriptor,MethodGen,CFG,ValueNumberDataflow,TypeDataflow,DepthFirstSearch,AssertionMethods) in line 97
      protection public
      23 lines of code
      7 parameters
      2 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable TRACK_VALUE_NUMBERS_IN_NULL_POINTER_ANALYSIS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getForPointerEqualityCheck(CFG,ValueNumberDataflow) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   variable cachedEntryFact in line 92
   variable cfg in line 86
   variable classAndMethod in line 94
   variable instanceOfFrame in line 91
   variable lastFrame in line 90
   variable locationWhereValueBecomesNullSet in line 87
   variable methodGen in line 81
   variable nullComparisonInstructionSet in line 355
   variable pointerEqualityCheck in line 95
   variable trackValueNumbers in line 88
   variable typeDataflow in line 84
   variable visitor in line 82
   variable vnaDataflow in line 83
module edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis::PointerEqualityCheckState
   variable IFEQUAL in line 123
      protection public
   variable INIT in line 123
      protection public
   variable SAW1 in line 123
      protection public
   variable SAW2 in line 123
      protection public
   variable START in line 123
      protection public
module edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis::PointerEqualityCheck
   function PointerEqualityCheck(ValueNumber,ValueNumber,int) in line 194
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/IsNullValueAnalysisFeatures.java
module edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
   variable NCP_EXTRA_BRANCH in line 52
      protection public
   variable NO_SPLIT_DOWNGRADE_NSP in line 38
      protection public
   variable NO_SWITCH_DEFAULT_AS_EXCEPTION in line 44
      protection public
   variable UNKNOWN_VALUES_ARE_NSP in line 59
      protection public
   variable USE_TYPE_QUALIFIERS in line 67
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/IsNullValueDataflow.java
module edu::umd::cs::findbugs::ba::npe::IsNullValueDataflow
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflow
   function getFactAtMidEdge(Edge) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAnalysis() defined in Dataflow< Fact, AnalysisType >
   function IsNullValueDataflow(CFG,IsNullValueAnalysis) in line 28
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< Fact, AnalysisType >
      uses variable analysis defined in Dataflow< Fact, AnalysisType >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/IsNullValueFrame.java
module edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   inherits from edu::umd::cs::findbugs::ba::Frame
   function cleanStaleKnowledge(ValueNumberFrame) in line 81
      protection public
      15 lines of code
      1 parameters
      7 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function copyFrom(Frame< IsNullValue >) in line 204
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable decision defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function IsNullValueFrame(int,boolean) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function downgradeOnControlSplit() in line 256
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function downgradeOnControlSplit() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function getDecision() in line 121
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable decision defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function getKnownValue(ValueNumber) in line 145
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function getKnownValueMapEntrySet() in line 158
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function getKnownValues() in line 150
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function mergeKnownValuesWith(IsNullValueFrame) in line 166
      protection public
      33 lines of code
      1 parameters
      7 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function sameAs(Frame< IsNullValue >) in line 213
      protection public
      12 lines of code
      1 parameters
      5 conditional paths
      uses function IsNullValueFrame(int,boolean) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable decision defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function setDecision(@CheckForNull IsNullConditionDecision) in line 117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable decision defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function setKnownValue(@NonNull ValueNumber,@NonNull IsNullValue) in line 125
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function setTop() in line 97
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable decision defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function toExceptionValues() in line 104
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function toString() in line 226
      protection public
      25 lines of code
      0 parameters
      5 conditional paths
      uses variable decision defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function toString() defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function useNewValueNumberForLoad(ValueNumber,ValueNumber) in line 134
      protection public
      11 lines of code
      2 parameters
      4 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function IsNullValueFrame(int,boolean) in line 73
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable numLocals defined in edu::umd::cs::findbugs::ba::Frame
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   variable decision in line 69
   variable knownValueMap in line 71
   variable trackValueNumbers in line 70
module edu::umd::cs::findbugs::ba::npe::IsNullValueFrame::PointerEqualityInfo
   function equals(Object) in line 59
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PointerEqualityInfo(ValueNumber,ValueNumber,boolean) in line 42
      protection public
      10 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/IsNullValueFrameModelingVisitor.java
module edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function analyzeInstruction(Instruction) in line 92
      protection public
      22 lines of code
      1 parameters
      7 conditional paths
      uses variable slotContainingNewNullValue defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable NO_ASSERT_HACK defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable assertionMethods defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function isAssertionHandle(InstructionHandle,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function checkForKnownValue(Instruction) in line 374
      23 lines of code
      1 parameters
      5 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function modelNormalInstruction(Instruction,int,int) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function getDefaultValue() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSlotContainingNewNullValue() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable slotContainingNewNullValue defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function handleInvoke(InvokeInstruction) in line 160
      71 lines of code
      1 parameters
      16 conditional paths
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable location defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function mightBeNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable MODEL_NONNULL_RETURN defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function markInformationAsComingFromReturnValueOfMethod(XMethod) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NULLABLE defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function modelInstruction(Instruction,int,int,Value) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsProduced(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function newValueOnTOS() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function newValueOnTOS() in line 236
      22 lines of code
      0 parameters
      6 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable slotContainingNewNullValue defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
   function produce(IsNullValue) in line 143
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function newValueOnTOS() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function produce2(IsNullValue) in line 149
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitACONST_NULL(ACONST_NULL) in line 399
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitANEWARRAY(ANEWARRAY) in line 413
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function modelNormalInstruction(Instruction,int,int) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitCHECKCAST(CHECKCAST) in line 433
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGETFIELD(GETFIELD) in line 290
      protection public
      26 lines of code
      1 parameters
      5 conditional paths
      uses function getNumWordsProduced(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function checkForKnownValue(Instruction) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function modelNormalInstruction(Instruction,int,int) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function markInformationAsComingFromFieldValue(XField) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function visitGETSTATIC(GETSTATIC) in line 321
      protection public
      41 lines of code
      1 parameters
      9 conditional paths
      uses function getNumWordsProduced(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function checkForKnownValue(Instruction) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isNull() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function modelNormalInstruction(Instruction,int,int) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function markInformationAsComingFromFieldValue(XField) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function visitINVOKEINTERFACE(INVOKEINTERFACE) in line 445
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitINVOKESPECIAL(INVOKESPECIAL) in line 441
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitINVOKESTATIC(INVOKESTATIC) in line 437
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitINVOKEVIRTUAL(INVOKEVIRTUAL) in line 449
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitLDC(LDC) in line 423
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitLDC2_W(LDC2_W) in line 428
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function produce2(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitMULTIANEWARRAY(MULTIANEWARRAY) in line 418
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function modelNormalInstruction(Instruction,int,int) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitNEW(NEW) in line 403
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitNEWARRAY(NEWARRAY) in line 408
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function modelNormalInstruction(Instruction,int,int) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitPUTFIELD(PUTFIELD) in line 260
      protection public
      28 lines of code
      1 parameters
      7 conditional paths
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getAvailableLoad(AvailableLoad) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function IsNullValueFrameModelingVisitor(ConstantPoolGen,AssertionMethods,ValueNumberDataflow,TypeDataflow,boolean) in line 76
      protection public
      11 lines of code
      5 parameters
      1 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable assertionMethods defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   variable assertionMethods in line 70
   variable MODEL_NONNULL_RETURN in line 69
   variable NO_ASSERT_HACK in line 68
   variable slotContainingNewNullValue in line 74
   variable trackValueNumbers in line 73
   variable typeDataflow in line 72
   variable vnaDataflow in line 71
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/LocationWhereValueBecomesNull.java
module edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
   inherits from Comparable
   function compareTo(LocationWhereValueBecomesNull) in line 62
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function compareTo(Location) defined in edu::umd::cs::findbugs::ba::Location
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses function compareTo(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
   function equals(Object) in line 75
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function LocationWhereValueBecomesNull(Location,ValueNumber) defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::Location
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
   function getLocation() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
   function getValueNumber() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
   function hashCode() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::Location
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function toString() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function LocationWhereValueBecomesNull(Location,ValueNumber) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
   variable location in line 31
   variable valueNumber in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/MayReturnNullPropertyDatabase.java
module edu::umd::cs::findbugs::ba::npe::MayReturnNullPropertyDatabase
   inherits from edu::umd::cs::findbugs::ba::interproc::MethodPropertyDatabase
   function decodeProperty(String) in line 36
      4 lines of code
      1 parameters
      1 conditional paths
   function encodeProperty(Boolean) in line 43
      3 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 47
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function readFromFile(String) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses variable DEFAULT_NULL_RETURN_VALUE_DB_FILENAME defined in edu::umd::cs::findbugs::ba::AnalysisContext
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/NonNullParamViolation.java
module edu::umd::cs::findbugs::ba::npe::NonNullParamViolation
   function getClassAndMethod() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::NonNullParamViolation
   function getParam() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable param defined in edu::umd::cs::findbugs::ba::npe::NonNullParamViolation
   function NonNullParamViolation(JavaClassAndMethod,int) in line 28
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::NonNullParamViolation
      uses variable param defined in edu::umd::cs::findbugs::ba::npe::NonNullParamViolation
   variable classAndMethod in line 25
   variable param in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/NonNullSpecification.java
module edu::umd::cs::findbugs::ba::npe::NonNullSpecification
   function getCheckForNullProperty() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable possiblyNullProperty defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
   function getClassAndMethod() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
   function getNonNullProperty() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nonNullProperty defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
   function toString() in line 48
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
      uses variable nonNullProperty defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
      uses variable possiblyNullProperty defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
   function NonNullSpecification(JavaClassAndMethod,ParameterNullnessProperty,ParameterNullnessProperty) in line 29
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
      uses variable possiblyNullProperty defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
   variable classAndMethod in line 25
   variable nonNullProperty in line 26
   variable possiblyNullProperty in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/NullDerefAndRedundantComparisonCollector.java
module edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonCollector
   function foundGuaranteedNullDeref(Set< Location >,Set< Location >,SortedSet< Location >,ValueNumberDataflow,ValueNumber,@CheckForNull BugAnnotation,NullValueUnconditionalDeref,boolean) in line 86
      protection public
      1 lines of code
      8 parameters
      1 conditional paths
   function foundNullDeref(Location,ValueNumber,IsNullValue,ValueNumberFrame) in line 50
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
   function foundNullDeref(Location,ValueNumber,IsNullValue,ValueNumberFrame,boolean) in line 61
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   function foundRedundantNullCheck(Location,RedundantBranch) in line 70
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/NullDerefAndRedundantComparisonFinder.java
module edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function analyzeIfNullBranch(BasicBlock,InstructionHandle) in line 639
      52 lines of code
      2 parameters
      10 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getLineNumber(Method,InstructionHandle) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable undeterminedBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable definitelySameBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable definitelyDifferentBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getOutgoingEdgeWithType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function setInfeasibleEdge(Edge) defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses variable redundantBranchList defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function analyzeNullCheck(IsNullValueDataflow,BasicBlock) in line 692
      70 lines of code
      2 parameters
      15 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable classContext defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function mightBeNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function isNullCheck() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable collector defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function foundNullDeref(Location,ValueNumber,IsNullValue,ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonCollector
   function analyzeRefComparisonBranch(BasicBlock,InstructionHandle) in line 583
      54 lines of code
      2 parameters
      11 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getLineNumber(Method,InstructionHandle) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable definitelySameBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable definitelyDifferentBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getOutgoingEdgeWithType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function setInfeasibleEdge(Edge) defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses variable redundantBranchList defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable undeterminedBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function checkForUnconditionallyDereferencedNullValues(Location,Map< ValueNumber, SortedSet< Location >>,Map< ValueNumber, NullValueUnconditionalDeref >,ValueNumberFrame,IsNullValueFrame,UnconditionalValueDerefSet) in line 440
      56 lines of code
      6 parameters
      9 conditional paths
      uses variable DEBUG_DEREFS defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isReturnValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isUnconditionallyDereferenced(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable MY_DEBUG defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function noteUnconditionallyDereferencedNullValue(Location,Map< ValueNumber, SortedSet< Location >>,Map< ValueNumber, NullValueUnconditionalDeref >,UnconditionalValueDerefSet,IsNullValue,ValueNumber) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getKnownValueMapEntrySet() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function isFieldValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function examineBasicBlocks() in line 171
      31 lines of code
      0 parameters
      8 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function isNullCheck() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function analyzeNullCheck(IsNullValueDataflow,BasicBlock) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function analyzeRefComparisonBranch(BasicBlock,InstructionHandle) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function analyzeIfNullBranch(BasicBlock,InstructionHandle) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function examineNullValues() in line 211
      193 lines of code
      0 parameters
      38 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DEBUG_DEREFS defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable classContext defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable uvdDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function isUnconditionallyDereferenced(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function noteUnconditionallyDereferencedNullValue(Location,Map< ValueNumber, SortedSet< Location >>,Map< ValueNumber, NullValueUnconditionalDeref >,UnconditionalValueDerefSet,IsNullValue,ValueNumber) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable assertionMethods defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function isAssertionHandle(InstructionHandle,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses function checkForUnconditionallyDereferencedNullValues(Location,Map< ValueNumber, SortedSet< Location >>,Map< ValueNumber, NullValueUnconditionalDeref >,ValueNumberFrame,IsNullValueFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
      uses function formatAsString(boolean) defined in edu::umd::cs::findbugs::ba::Edge
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getFactOnEdge(Edge) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getFactAtMidEdge(Edge) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueDataflow
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function isAssertionInstruction(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable PRUNE_GUARANTEED_DEREFERENCES defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getNonExceptionPostDominatorsAnalysis(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function removeStrictlyPostDominatedLocations(Set< Location >,PostDominatorsAnalysis) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable collector defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function foundGuaranteedNullDeref(Set< Location >,Set< Location >,SortedSet< Location >,ValueNumberDataflow,ValueNumber,@CheckForNull BugAnnotation,NullValueUnconditionalDeref,boolean) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonCollector
   function examineRedundantBranches() in line 547
      35 lines of code
      0 parameters
      8 conditional paths
      uses variable redundantBranchList defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable undeterminedBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable definitelySameBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable definitelyDifferentBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable lineMentionedMultipleTimes defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable collector defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function foundRedundantNullCheck(Location,RedundantBranch) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonCollector
   function execute() in line 130
      protection public
      33 lines of code
      0 parameters
      5 conditional paths
      uses function getProfiler() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses variable classContext defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable findGuaranteedDerefs defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable DEBUG_DEREFS defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getUnconditionalValueDerefDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function examineBasicBlocks() defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function examineNullValues() defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function examineRedundantBranches() defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
   function findAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) in line 803
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function findFieldAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) in line 777
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function findLocalAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) in line 787
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function findXFieldFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) in line 767
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function getLineNumber(Method,InstructionHandle) in line 809
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function noteUnconditionallyDereferencedNullValue(Location,Map< ValueNumber, SortedSet< Location >>,Map< ValueNumber, NullValueUnconditionalDeref >,UnconditionalValueDerefSet,IsNullValue,ValueNumber) in line 507
      36 lines of code
      6 parameters
      6 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getUnconditionalDerefLocationSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable classContext defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function add(IsNullValue,Set< Location >) defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
   function removeStrictlyPostDominatedLocations(Set< Location >,PostDominatorsAnalysis) in line 405
      23 lines of code
      2 parameters
      6 conditional paths
      uses function getAllDominatedBy(BasicBlock) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function equals(Object) defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function NullDerefAndRedundantComparisonFinder(ClassContext,Method,NullDerefAndRedundantComparisonCollector) in line 111
      protection public
      18 lines of code
      3 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable collector defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getAnalysisContext() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getBoolProperty(int) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable TRACK_GUARANTEED_VALUE_DEREFS_IN_NULL_POINTER_ANALYSIS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses function getAssertionMethods() defined in edu::umd::cs::findbugs::ba::ClassContext
   variable assertionMethods in line 98
   variable classContext in line 84
   variable collector in line 86
   variable DEBUG in line 79
   variable DEBUG_DEREFS in line 82
   variable definitelyDifferentBranchSet in line 91
   variable definitelySameBranchSet in line 90
   variable findGuaranteedDerefs in line 87
   variable invDataflow in line 95
   variable lineMentionedMultipleTimes in line 93
   variable method in line 85
   variable MY_DEBUG in line 429
   variable PRUNE_GUARANTEED_DEREFERENCES in line 80
   variable redundantBranchList in line 89
   variable undeterminedBranchSet in line 92
   variable uvdDataflow in line 97
   variable vnaDataflow in line 96
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/NullValueUnconditionalDeref.java
module edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
   function add(IsNullValue,Set< Location >) in line 33
      protection public
      15 lines of code
      2 parameters
      5 conditional paths
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable alwaysOnExceptionPath defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
      uses function isFieldValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable alwaysFieldValue defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
      uses function isReturnValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable alwaysMethodReturnValue defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
      uses function isReadlineValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable alwaysReadlineValue defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
      uses variable values defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
      uses variable derefLocationSet defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
   function getDerefLocationSet() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable derefLocationSet defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
   function isAlwaysOnExceptionPath() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable alwaysOnExceptionPath defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
   function isFieldValue() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable alwaysFieldValue defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
   function isMethodReturnValue() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable alwaysMethodReturnValue defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
   function isReadlineValue() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable alwaysReadlineValue defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
   function NullValueUnconditionalDeref() in line 21
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   variable alwaysFieldValue in line 15
   variable alwaysMethodReturnValue in line 16
   variable alwaysOnExceptionPath in line 14
   variable alwaysReadlineValue in line 17
   variable derefLocationSet in line 18
   variable values in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/ParameterNullnessProperty.java
module edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function copyFrom(ParameterNullnessProperty) in line 205
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nonNullParamSet defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function getAsBitSet() in line 155
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
      uses function isNonNull(int) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function getViolatedParamSet(BitSet) in line 147
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function isNonNull(int) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function intersectWith(ParameterNullnessProperty) in line 196
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nonNullParamSet defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function isEmpty() in line 169
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nonNullParamSet defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function isNonNull(int) in line 132
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable nonNullParamSet defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function iterable() in line 56
      protection public
      33 lines of code
      0 parameters
      3 conditional paths
      uses function isNonNull(int) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
      uses variable nonNullParamSet defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function setNonNull(int,boolean) in line 116
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable nonNullParamSet defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function setNonNullParamSet(BitSet) in line 104
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function setNonNull(int,boolean) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function toString() in line 174
      protection public
      15 lines of code
      0 parameters
      4 conditional paths
      uses function isNonNull(int) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function ParameterNullnessProperty() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nonNullParamSet defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   variable MAX_PARAMS in line 35
      protection public
   variable nonNullParamSet in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/ParameterNullnessPropertyDatabase.java
module edu::umd::cs::findbugs::ba::npe::ParameterNullnessPropertyDatabase
   inherits from edu::umd::cs::findbugs::ba::interproc::MethodPropertyDatabase
   function decodeProperty(String) in line 38
      11 lines of code
      1 parameters
      2 conditional paths
   function encodeProperty(ParameterNullnessProperty) in line 55
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/PointerUsageRequiringNonNullValue.java
module edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
   abstract class
   function getDescription() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNonNullField() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNonNullParameter() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPassedAsNonNullParameter(final XMethod,final int) in line 94
      protection public
      15 lines of code
      2 parameters
      1 conditional paths
      uses function getNonNullParameter() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
      uses function getDescription() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
   function getPointerDereference() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
   function getPointerNullChecked() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nullCheckInstance defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
   function getReturnFromNonNullMethod() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getReturnFromNonNullMethod(XMethod) in line 90
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nonNullReturnInstance defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
   function getStoredIntoNonNullField(final XField) in line 110
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
      uses function getNonNullField() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
      uses function getDescription() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
   function isDirect() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable instance in line 52
   variable nonNullReturnInstance in line 64
   variable nullCheckInstance in line 80
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/RedundantBranch.java
module edu::umd::cs::findbugs::ba::npe::RedundantBranch
   function setInfeasibleEdge(Edge) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable infeasibleEdge defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
   function toString() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses function toString() defined in edu::umd::cs::findbugs::ba::Location
      uses variable lineNumber defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
   function RedundantBranch(Location,int,IsNullValue,IsNullValue) in line 51
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses variable lineNumber defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses variable firstValue defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
   function RedundantBranch(Location,int,IsNullValue) in line 69
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses variable lineNumber defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses variable firstValue defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
   variable firstValue in line 35
      protection public
   variable infeasibleEdge in line 37
      protection public
   variable lineNumber in line 33
      protection public
   variable location in line 31
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/ReturnPathType.java
module edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function canReturnNormally() in line 55
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable CAN_RETURN_NORMALLY defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function copyFrom(ReturnPathType) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function isTop() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable TOP defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function isValid() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable TOP defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function mergeWith(ReturnPathType) in line 100
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function copyFrom(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable CAN_RETURN_NORMALLY defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function setCanReturnNormally(boolean) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable CAN_RETURN_NORMALLY defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable CANNOT_RETURN_NORMALLY defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function setTop() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable TOP defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function toString() in line 140
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable TOP defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable CAN_RETURN_NORMALLY defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable CANNOT_RETURN_NORMALLY defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function ReturnPathType() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable TOP defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   variable CAN_RETURN_NORMALLY in line 37
   variable CANNOT_RETURN_NORMALLY in line 38
   variable TOP in line 39
   variable type in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/ReturnPathTypeAnalysis.java
module edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
   inherits from edu::umd::cs::findbugs::ba::BasicAbstractDataflowAnalysis
   function copy(ReturnPathType,ReturnPathType) in line 64
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function createFact() in line 71
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function edgeTransfer(Edge,ReturnPathType) in line 81
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable cfg defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
      uses function setCanReturnNormally(boolean) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
   function finishIteration() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBlockOrder(CFG) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
   function getLastUpdateTimestamp(ReturnPathType) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getOrCreateFact(HashMap< BasicBlock, ReturnPathType >,BasicBlock) in line 123
      8 lines of code
      2 parameters
      2 conditional paths
      uses function createFact() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
   function initEntryFact(ReturnPathType) in line 135
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function isForwards() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTop(ReturnPathType) in line 155
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function makeFactTop(ReturnPathType) in line 162
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function meetInto(ReturnPathType,Edge,ReturnPathType) in line 169
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function same(ReturnPathType,ReturnPathType) in line 177
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function setLastUpdateTimestamp(ReturnPathType,int) in line 185
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function startIteration() in line 193
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function transfer(BasicBlock,InstructionHandle,ReturnPathType,ReturnPathType) in line 200
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
   function ReturnPathTypeAnalysis(CFG,ReverseDepthFirstSearch,DepthFirstSearch) in line 55
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
   variable cfg in line 44
   variable dfs in line 45
   variable rdfs in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/ReturnPathTypeDataflow.java
module edu::umd::cs::findbugs::ba::npe::ReturnPathTypeDataflow
   inherits from edu::umd::cs::findbugs::ba::Dataflow
   function ReturnPathTypeDataflow(CFG,ReturnPathTypeAnalysis) in line 38
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable analysis defined in edu::umd::cs::findbugs::ba::Dataflow
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/ReturnValueNullnessPropertyDatabase.java
module edu::umd::cs::findbugs::ba::npe::ReturnValueNullnessPropertyDatabase
   inherits from edu::umd::cs::findbugs::ba::interproc::MethodPropertyDatabase
   function decodeProperty(String) in line 36
      4 lines of code
      1 parameters
      1 conditional paths
   function encodeProperty(Boolean) in line 48
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/TypeQualifierNullnessAnnotationDatabase.java
module edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
   inherits from edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
   function addDefaultAnnotation(Target,String,NullnessAnnotation) in line 171
      protection public
      55 lines of code
      3 parameters
      10 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function getClassDescriptorForDottedClassName(@DottedClassName String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable PARAMETER defined in edu::umd::cs::findbugs::ba::AnnotationDatabase::Target
      uses function addAnnotation(AnnotationValue) defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses variable PARAMETERS_ARE_NONNULL_BY_DEFAULT defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses variable METHOD defined in edu::umd::cs::findbugs::ba::AnnotationDatabase::Target
      uses variable RETURN_VALUES_ARE_NONNULL_BY_DEFAULT defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses variable ANY defined in edu::umd::cs::findbugs::ba::AnnotationDatabase::Target
      uses variable DEFAULT_ANNOTATION defined in edu::umd::cs::findbugs::ba::jsr305::FindBugsDefaultAnnotations
      uses variable FIELD defined in edu::umd::cs::findbugs::ba::AnnotationDatabase::Target
      uses variable DEFAULT_ANNOTATION_FOR_FIELDS defined in edu::umd::cs::findbugs::ba::jsr305::FindBugsDefaultAnnotations
      uses variable DEFAULT_ANNOTATION_FOR_METHODS defined in edu::umd::cs::findbugs::ba::jsr305::FindBugsDefaultAnnotations
      uses variable DEFAULT_ANNOTATION_FOR_PARAMETERS defined in edu::umd::cs::findbugs::ba::jsr305::FindBugsDefaultAnnotations
      uses function getNullnessAnnotationClassDescriptor(NullnessAnnotation) defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function getAnnotationVisitor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function addFieldAnnotation(String,String,String,boolean,NullnessAnnotation) in line 236
      protection public
      22 lines of code
      5 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function getNullnessAnnotationClassDescriptor(NullnessAnnotation) defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
   function addMethodAnnotation(String,String,String,boolean,NullnessAnnotation) in line 298
      protection public
      15 lines of code
      5 parameters
      3 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function getXMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function getNullnessAnnotationClassDescriptor(NullnessAnnotation) defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
   function addMethodParameterAnnotation(@DottedClassName String,String,String,boolean,int,NullnessAnnotation) in line 317
      protection public
      26 lines of code
      6 parameters
      7 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function getXMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getNullnessAnnotationClassDescriptor(NullnessAnnotation) defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
   function getNullnessAnnotationClassDescriptor(NullnessAnnotation) in line 151
      13 lines of code
      1 parameters
      5 conditional paths
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::jsr305::JSR305NullnessAnnotations
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::jsr305::JSR305NullnessAnnotations
      uses variable NULLABLE defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable NULLABLE defined in edu::umd::cs::findbugs::ba::jsr305::JSR305NullnessAnnotations
      uses variable UNKNOWN_NULLNESS defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   function getResolvedAnnotation(Object,boolean) in line 78
      protection public
      30 lines of code
      2 parameters
      6 conditional paths
      uses function getProfiler() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses function getParameterNumber() defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses variable nonnullTypeQualifierValue defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function toNullnessAnnotation(@CheckForNull TypeQualifierAnnotation) defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function toString() defined in edu::umd::cs::findbugs::ba::AnnotationEnumeration
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
   function getXMethod(String,String,String,boolean) in line 260
      protection public
      35 lines of code
      4 parameters
      9 conditional paths
      uses function getClassDescriptorForDottedClassName(@DottedClassName String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getXMethods() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   function loadAuxiliaryAnnotations() in line 347
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parameterMustBeNonNull(XMethod,int) in line 112
      protection public
      26 lines of code
      2 parameters
      6 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses variable nonnullTypeQualifierValue defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function toNullnessAnnotation(@CheckForNull TypeQualifierAnnotation) in line 358
      18 lines of code
      1 parameters
      6 conditional paths
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable UNKNOWN_NULLNESS defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   function TypeQualifierNullnessAnnotationDatabase() in line 70
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG in line 66
   variable nonnullTypeQualifierValue in line 68
      protection public
   variable PARAMETERS_ARE_NONNULL_BY_DEFAULT in line 164
   variable RETURN_VALUES_ARE_NONNULL_BY_DEFAULT in line 166
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe/UsagesRequiringNonNullValues.java
module edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues
   function add(Location,ValueNumber,PointerUsageRequiringNonNullValue) in line 67
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable vn defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues::Pair
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::DerefFinder
      uses function add(K,V) defined in edu::umd::cs::findbugs::util::MultiMap
   function get(Location,ValueNumber,ValueNumberDataflow) in line 76
      protection public
      12 lines of code
      3 parameters
      4 conditional paths
      uses function get(K) defined in edu::umd::cs::findbugs::util::MultiMap
      uses variable vn defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues::Pair
      uses variable PHI_NODE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getTransitiveInputSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function getPairs(Location) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function get(K) defined in edu::umd::cs::findbugs::util::MultiMap
   function toString() in line 56
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function keySet() defined in edu::umd::cs::findbugs::util::MultiMap
      uses function getPairs(Location) defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues
module edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues::Pair
   function toString() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vn defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues::Pair
      uses function toString() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   variable pu in line 40
      protection public
   variable vn in line 39
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe2/AcmpCondition.java
module edu::umd::cs::findbugs::ba::npe2::AcmpCondition
   inherits from edu::umd::cs::findbugs::ba::npe2::Condition
   function getDecision(Edge) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getValueNumber() in line 52
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function refresh(ValueNumberFrame,DefinitelyNullSet) in line 61
      protection public
      33 lines of code
      2 parameters
      1 conditional paths
   function AcmpCondition(Location) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe2::Condition
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe2/Condition.java
module edu::umd::cs::findbugs::ba::npe2::Condition
   abstract class
   function getDecision(Edge) in line 46
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getLocation() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe2::Condition
      uses function refresh(ValueNumberFrame,DefinitelyNullSet) defined in edu::umd::cs::findbugs::ba::npe2::Condition
      uses function getValueNumber() defined in edu::umd::cs::findbugs::ba::npe2::Condition
      uses function getDecision(Edge) defined in edu::umd::cs::findbugs::ba::npe2::Condition
   function getValueNumber() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function refresh(ValueNumberFrame,DefinitelyNullSet) in line 42
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function Condition(Location) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe2::Condition
   variable location in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe2/Decision.java
module edu::umd::cs::findbugs::ba::npe2::Decision
   function getNullnessValue() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nullnessValue defined in edu::umd::cs::findbugs::ba::npe2::Decision
   function isFeasible() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable feasible defined in edu::umd::cs::findbugs::ba::npe2::Decision
   function Decision(boolean,NullnessValue) in line 30
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable feasible defined in edu::umd::cs::findbugs::ba::npe2::Decision
      uses variable nullnessValue defined in edu::umd::cs::findbugs::ba::npe2::Decision
   variable feasible in line 27
   variable nullnessValue in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe2/DefinitelyNullSet.java
module edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function addAssignedNullLocation(int,int) in line 115
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function bottomBit() in line 135
      3 lines of code
      0 parameters
      1 conditional paths
      uses function lastUsedBit() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function clear() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function clearAssignNullLocations(int) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 151
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function DefinitelyNullSet(int) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function getAssignedNullLocationSet(ValueNumber) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getNulllessValue(ValueNumber) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getNullnessValue(int) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function getNullnessValue(int) in line 44
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getStartIndex(int) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function getStartIndex(int) in line 123
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function isBottom() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function lastUsedBit() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function isTop() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function lastUsedBit() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function isValid() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function lastUsedBit() in line 127
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable numValueNumbers defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function makeSameAs(DefinitelyNullSet) in line 92
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function mergeWith(DefinitelyNullSet) in line 97
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function isTop() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function makeSameAs(DefinitelyNullSet) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function setBottom() in line 79
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function lastUsedBit() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function setNullnessValue(ValueNumber,NullnessValue) in line 57
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getStartIndex(int) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function setTop() in line 70
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function lastUsedBit() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function topBit() in line 131
      3 lines of code
      0 parameters
      1 conditional paths
      uses function lastUsedBit() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function toString() in line 164
      protection public
      30 lines of code
      0 parameters
      6 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses variable numValueNumbers defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function getNullnessValue(int) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses function toString() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function DefinitelyNullSet(int) in line 35
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable numValueNumbers defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   variable contents in line 32
   variable numValueNumbers in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe2/DefinitelyNullSetAnalysis.java
module edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
   inherits from edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
   function changeNullnessOfValue(ValueNumber,Location,DefinitelyNullSet,NullnessValue) in line 215
      16 lines of code
      4 parameters
      2 conditional paths
   function copy(DefinitelyNullSet,DefinitelyNullSet) in line 235
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function makeSameAs(DefinitelyNullSet) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function createFact() in line 242
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function edgeTransfer(Edge,DefinitelyNullSet) in line 159
      protection public
      31 lines of code
      2 parameters
      5 conditional paths
      uses function getCondition(BasicBlock) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
      uses function getDecision(Edge) defined in edu::umd::cs::findbugs::ba::npe2::Condition
      uses function isFeasible() defined in edu::umd::cs::findbugs::ba::npe2::Decision
      uses function changeNullnessOfValue(ValueNumber,Location,DefinitelyNullSet,NullnessValue) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
      uses function getValueNumber() defined in edu::umd::cs::findbugs::ba::npe2::Condition
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::npe2::Condition
      uses function getNullnessValue() defined in edu::umd::cs::findbugs::ba::npe2::Decision
   function getCondition(BasicBlock) in line 136
      18 lines of code
      1 parameters
      4 conditional paths
      uses variable conditionMap defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
      uses variable IFNULL_OPCODE_SET defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
      uses variable IFACMP_OPCODE_SET defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
   function initEntryFact(DefinitelyNullSet) in line 250
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function isFactValid(DefinitelyNullSet) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function isTop(DefinitelyNullSet) in line 261
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function makeFactTop(DefinitelyNullSet) in line 258
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function meetInto(DefinitelyNullSet,Edge,DefinitelyNullSet) in line 267
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   function same(DefinitelyNullSet,DefinitelyNullSet) in line 276
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function setTOS(ValueNumberFrame,Location,DefinitelyNullSet,NullnessValue) in line 200
      5 lines of code
      4 parameters
      1 conditional paths
      uses function changeNullnessOfValue(ValueNumber,Location,DefinitelyNullSet,NullnessValue) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
   function transferInstruction(InstructionHandle,BasicBlock,DefinitelyNullSet) in line 95
      protection public
      32 lines of code
      3 parameters
      6 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function setTOS(ValueNumberFrame,Location,DefinitelyNullSet,NullnessValue) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
      uses variable REFCMP_OPCODE_SET defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
      uses function getCondition(BasicBlock) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
      uses function refresh(ValueNumberFrame,DefinitelyNullSet) defined in edu::umd::cs::findbugs::ba::npe2::Condition
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
   function DefinitelyNullSetAnalysis(DepthFirstSearch,ValueNumberDataflow,CompactLocationNumbering) in line 74
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
   variable conditionMap in line 49
   variable IFACMP_OPCODE_SET in line 52
   variable IFNULL_OPCODE_SET in line 51
   variable REFCMP_OPCODE_SET in line 53
   variable vnaDataflow in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe2/DefinitelyNullSetDataflow.java
module edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetDataflow
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflow
   function DefinitelyNullSetDataflow(CFG,DefinitelyNullSetAnalysis) in line 28
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< Fact, AnalysisType >
      uses variable analysis defined in Dataflow< Fact, AnalysisType >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe2/IfNullCondition.java
module edu::umd::cs::findbugs::ba::npe2::IfNullCondition
   inherits from edu::umd::cs::findbugs::ba::npe2::Condition
   function getDecision(Edge) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe2::IfNullCondition
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe2::IfNullCondition
   function getValueNumber() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe2::IfNullCondition
   function refresh(ValueNumberFrame,DefinitelyNullSet) in line 63
      protection public
      37 lines of code
      2 parameters
      2 conditional paths
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe2::IfNullCondition
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::npe2::Condition
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe2::IfNullCondition
      uses function toCheckedValue() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe2::IfNullCondition
   function IfNullCondition(Location) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe2::Condition
   variable fallThroughDecision in line 37
   variable ifcmpDecision in line 36
   variable valueNumber in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/npe2/NullnessValue.java
module edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function definitelyNotNullValue() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function definitelyNullValue() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isChecked() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function isDefinitelyNotNull() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function isDefinitelyNull() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function isFlagSet(int) in line 92
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses variable instanceList defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function isNoKaboom() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function toCheckedValue() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceList defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses variable flags defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function toNoKaboomValue() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceList defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses variable flags defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function toString() in line 116
      protection public
      23 lines of code
      0 parameters
      5 conditional paths
      uses function isChecked() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses function isNoKaboom() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function unknownValue() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function NullnessValue(int) in line 44
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   variable flags in line 42
   variable instanceList in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/NullnessAnnotation.java
module edu::umd::cs::findbugs::ba::NullnessAnnotation
   inherits from AnnotationEnumeration< NullnessAnnotation >
   function values() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable myValues defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   function NullnessAnnotation(String,int) in line 59
      4 lines of code
      2 parameters
      1 conditional paths
   variable CHECK_FOR_NULL in line 28
      protection public
   variable myValues in line 40
   variable NONNULL in line 31
      protection public
   variable NULLABLE in line 34
      protection public
   variable UNKNOWN_NULLNESS in line 37
      protection public
module edu::umd::cs::findbugs::ba::NullnessAnnotation::Parser
   function parse(String) in line 45
      protection public
      9 lines of code
      1 parameters
      5 conditional paths
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable myValues defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/NullnessAnnotationDatabase.java
module edu::umd::cs::findbugs::ba::NullnessAnnotationDatabase
   inherits from AnnotationDatabase< NullnessAnnotation >
   inherits from edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
   function addDefaultAnnotation(AnnotationDatabase.Target,String,NullnessAnnotation) in line 143
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function addDefaultMethodAnnotation(String,NullnessAnnotation) in line 135
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function addFieldAnnotation(String,String,String,boolean,NullnessAnnotation) in line 151
      protection public
      3 lines of code
      5 parameters
      1 conditional paths
   function addMethodAnnotation(String,String,String,boolean,NullnessAnnotation) in line 159
      protection public
      3 lines of code
      5 parameters
      1 conditional paths
   function addMethodParameterAnnotation(String,String,String,boolean,int,NullnessAnnotation) in line 167
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
   function assertsFirstParameterIsNonnull(XMethod) in line 126
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function getResolvedAnnotation(final Object,boolean) in line 74
      protection public
      48 lines of code
      2 parameters
      10 conditional paths
      uses function getProfiler() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses function getParameterNumber() defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function assertsFirstParameterIsNonnull(XMethod) defined in edu::umd::cs::findbugs::ba::NullnessAnnotationDatabase
      uses function isPrivate() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
   function loadAuxiliaryAnnotations() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parameterMustBeNonNull(XMethod,int) in line 44
      protection public
      25 lines of code
      2 parameters
      8 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function assertsFirstParameterIsNonnull(XMethod) defined in edu::umd::cs::findbugs::ba::NullnessAnnotationDatabase
      uses function anyAnnotations(AnnotationEnum) defined in AnnotationDatabase< NullnessAnnotation >
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function getResolvedAnnotation(final Object,boolean) defined in edu::umd::cs::findbugs::ba::NullnessAnnotationDatabase
   function NullnessAnnotationDatabase() in line 31
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setAddClassOnly(boolean) defined in AnnotationDatabase< NullnessAnnotation >
      uses function loadAuxiliaryAnnotations() defined in edu::umd::cs::findbugs::ba::NullnessAnnotationDatabase
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ObjectTypeFactory.java
module edu::umd::cs::findbugs::ba::ObjectTypeFactory
   function clearInstance() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::ObjectTypeFactory
   function getInstance(@DottedClassName String) in line 51
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses variable instance defined in edu::umd::cs::findbugs::ba::ObjectTypeFactory
   variable instance in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/obl/InstructionActionCache.java
module edu::umd::cs::findbugs::ba::obl::InstructionActionCache
   function addsObligation(InstructionHandle,ConstantPoolGen,Obligation) in line 93
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function hasAction(InstructionHandle,ConstantPoolGen,Obligation,ObligationPolicyDatabaseActionType) defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
      uses variable ADD defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
   function deletesObligation(InstructionHandle,ConstantPoolGen,Obligation) in line 97
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function hasAction(InstructionHandle,ConstantPoolGen,Obligation,ObligationPolicyDatabaseActionType) defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
      uses variable DEL defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
   function getActions(InstructionHandle,ConstantPoolGen) in line 53
      protection public
      39 lines of code
      2 parameters
      7 conditional paths
      uses variable actionCache defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
      uses variable CLEAR defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
      uses variable database defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
      uses function getActions(ReferenceType,String,String,boolean,Collection< ObligationPolicyDatabaseAction >) defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses variable DEBUG_LOOKUP defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
   function hasAction(InstructionHandle,ConstantPoolGen,Obligation,ObligationPolicyDatabaseActionType) in line 101
      10 lines of code
      4 parameters
      3 conditional paths
      uses function getActions(InstructionHandle,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
   function InstructionActionCache(ObligationPolicyDatabase) in line 48
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
   variable actionCache in line 46
   variable database in line 45
   variable DEBUG_LOOKUP in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/obl/MatchMethodEntry.java
module edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
   inherits from edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseEntry
   function getActions(ReferenceType,String,String,boolean,Collection< ObligationPolicyDatabaseAction >) in line 114
      protection public
      17 lines of code
      5 parameters
      3 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable signature defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable isStatic defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable receiverType defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable obligations defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable action defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
   function getEntryType() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entryType defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
   function toString() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable receiverType defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable methodName defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable signature defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable isStatic defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable action defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable obligations defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable entryType defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
   function MatchMethodEntry(XMethod,ObligationPolicyDatabaseActionType,ObligationPolicyDatabaseEntryType,Obligation...) in line 58
      protection public
      12 lines of code
      4 parameters
      1 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable action defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable entryType defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable obligations defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
   function MatchMethodEntry(MethodDescriptor,ObligationPolicyDatabaseActionType,ObligationPolicyDatabaseEntryType,Obligation...) in line 71
      protection public
      12 lines of code
      4 parameters
      1 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable action defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable entryType defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable obligations defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
   function MatchMethodEntry(TypeMatcher,StringMatcher,StringMatcher,boolean,ObligationPolicyDatabaseActionType,ObligationPolicyDatabaseEntryType,Obligation...) in line 94
      protection public
      15 lines of code
      7 parameters
      1 conditional paths
      uses variable receiverType defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable methodName defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable signature defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable isStatic defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable action defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable obligations defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable entryType defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
   variable action in line 45
   variable entryType in line 47
   variable isStatic in line 44
   variable methodName in line 42
   variable obligations in line 46
   variable receiverType in line 41
   variable signature in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/obl/NonexistentObligationException.java
module edu::umd::cs::findbugs::ba::obl::NonexistentObligationException
   inherits from Exception
   function NonexistentObligationException(Obligation) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::obl::Obligation
   variable serialVersionUID in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/obl/Obligation.java
module edu::umd::cs::findbugs::ba::obl::Obligation
   function getClassName() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function getId() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable id defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function getType() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function isUserObligationType() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable userObligationType defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function setUserObligationType(boolean) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable userObligationType defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function toString() in line 70
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function Obligation(String,int) in line 43
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::obl::Obligation
      uses variable id defined in edu::umd::cs::findbugs::ba::obl::Obligation
   variable className in line 38
   variable id in line 40
   variable type in line 39
   variable userObligationType in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/obl/ObligationAcquiredOrReleasedInLoopException.java
module edu::umd::cs::findbugs::ba::obl::ObligationAcquiredOrReleasedInLoopException
   inherits from edu::umd::cs::findbugs::ba::DataflowAnalysisException
   function getObligation() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable obligation defined in edu::umd::cs::findbugs::ba::obl::ObligationAcquiredOrReleasedInLoopException
   function ObligationAcquiredOrReleasedInLoopException(Obligation) in line 34
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable obligation defined in edu::umd::cs::findbugs::ba::obl::ObligationAcquiredOrReleasedInLoopException
   variable obligation in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/obl/ObligationAnalysis.java
module edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
   inherits from edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
   function acmpNullCheck(short,Edge,InstructionHandle,BasicBlock) in line 269
      35 lines of code
      4 parameters
      5 conditional paths
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable DEBUG_NULL_CHECK defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
   function comparesObligationTypeToNull(Edge) in line 211
      38 lines of code
      1 parameters
      9 conditional paths
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable DEBUG_NULL_CHECK defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function nullCheck(short,Edge,InstructionHandle,BasicBlock) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function acmpNullCheck(short,Edge,InstructionHandle,BasicBlock) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable database defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getObligationByType(ObjectType) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses variable errorLogger defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function copy(StateSet,StateSet) in line 308
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(StateSet) defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function createFact() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
   function edgeTransfer(Edge,StateSet) in line 164
      protection public
      42 lines of code
      2 parameters
      8 conditional paths
      uses variable CHECKED_EXCEPTIONS_FLAG defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable actionCache defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function getActions(InstructionHandle,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
      uses variable cpg defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable DEL defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
      uses function isPossibleIfComparison(Edge) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function comparesObligationTypeToNull(Edge) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable DEBUG_NULL_CHECK defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function toString() defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function endTransfer(BasicBlock,@CheckForNull InstructionHandle,StateSet) in line 155
      7 lines of code
      3 parameters
      2 conditional paths
      uses function stateIterator() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function getPath() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function append(int) defined in edu::umd::cs::findbugs::ba::Path
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function getActionCache() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable actionCache defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
   function initEntryFact(StateSet) in line 315
      protection public
      26 lines of code
      1 parameters
      4 conditional paths
      uses variable cachedEntryFact defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function getParameterObligationTypes(XMethod) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function getParameterAnnotation(int,ClassDescriptor) defined in edu::umd::cs::findbugs::ba::XMethod
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function add(Obligation) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function replaceMap(Map< ObligationSet, State >) defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function isFactValid(StateSet) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function isPossibleIfComparison(Edge) in line 207
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function isTop(StateSet) in line 349
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function makeFactTop(StateSet) in line 345
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function meetInto(StateSet,Edge,StateSet) in line 363
      protection public
      69 lines of code
      3 parameters
      11 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function isValid() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function stateIterator() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function getPath() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function getLength() defined in edu::umd::cs::findbugs::ba::Path
      uses function getBlockIdAt(int) defined in edu::umd::cs::findbugs::ba::Path
      uses variable isTop defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable isBottom defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function copy(StateSet,StateSet) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function getAllObligationSets() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function getStateWithObligationSet(ObligationSet) defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function copyFrom(ObligationSet) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function copyFrom(Path) defined in edu::umd::cs::findbugs::ba::Path
      uses function duplicate() defined in edu::umd::cs::findbugs::ba::obl::State
   function nullCheck(short,Edge,InstructionHandle,BasicBlock) in line 250
      18 lines of code
      4 parameters
      5 conditional paths
      uses variable DEBUG_NULL_CHECK defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
   function same(StateSet,StateSet) in line 356
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function transfer(BasicBlock,@CheckForNull InstructionHandle,StateSet,StateSet) in line 150
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function endTransfer(BasicBlock,@CheckForNull InstructionHandle,StateSet) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
   function transferInstruction(InstructionHandle,BasicBlock,StateSet) in line 129
      protection public
      16 lines of code
      3 parameters
      5 conditional paths
      uses variable actionCache defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function getActions(InstructionHandle,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
      uses variable cpg defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
   function ObligationAnalysis(DepthFirstSearch,XMethod,ConstantPoolGen,ObligationFactory,ObligationPolicyDatabase,TypeDataflow,IsNullValueDataflow,IErrorLogger) in line 95
      protection public
      19 lines of code
      8 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable cpg defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable database defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable errorLogger defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
   variable actionCache in line 79
   variable cachedEntryFact in line 80
   variable cpg in line 73
   variable database in line 75
   variable DEBUG in line 69
   variable DEBUG_NULL_CHECK in line 70
   variable errorLogger in line 78
   variable factory in line 74
   variable invDataflow in line 77
   variable typeDataflow in line 76
   variable xmethod in line 72
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/obl/ObligationDataflow.java
module edu::umd::cs::findbugs::ba::obl::ObligationDataflow
   inherits from edu::umd::cs::findbugs::ba::Dataflow
   function ObligationDataflow(CFG,ObligationAnalysis) in line 31
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable analysis defined in edu::umd::cs::findbugs::ba::Dataflow
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/obl/ObligationFactory.java
module edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function addObligation(@DottedClassName String) in line 159
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable classNameToObligationMap defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses variable slashedClassNames defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function createObligationSet() in line 181
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMaxObligationTypes() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classNameToObligationMap defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function getObligationById(int) in line 170
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable classNameToObligationMap defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function getObligationByName(@DottedClassName String) in line 178
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classNameToObligationMap defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function getObligationByType(ObjectType) in line 104
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function obligationIterator() defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function getType() defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function getObligationByType(ClassDescriptor) in line 125
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getObligationByType(ObjectType) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getErrorLogger() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function getParameterObligationTypes(XMethod) in line 143
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getObligationByType(ObjectType) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function getErrorLogger() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function isObligationType(ClassDescriptor) in line 75
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getObligationByType(ObjectType) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getErrorLogger() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function obligationIterator() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classNameToObligationMap defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function signatureInvolvesObligations(String) in line 62
      protection public
      5 lines of code
      1 parameters
      3 conditional paths
      uses variable slashedClassNames defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function ObligationFactory() in line 53
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable classNameToObligationMap in line 45
   variable slashedClassNames in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/obl/ObligationPolicyDatabase.java
module edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
   function addEntry(ObligationPolicyDatabaseEntry) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable entryList defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
   function getActions(ReferenceType,String,String,boolean,Collection< ObligationPolicyDatabaseAction >) in line 78
      protection public
      20 lines of code
      5 parameters
      6 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses variable entryList defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
   function getEntries() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entryList defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
   function getFactory() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
   function isStrictChecking() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable strictChecking defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
   function setStrictChecking(boolean) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable strictChecking defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
   function ObligationPolicyDatabase() in line 54
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG in line 48
      protection public
   variable entryList in line 51
   variable factory in line 50
   variable strictChecking in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/obl/ObligationPolicyDatabaseAction.java
module edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
   function apply(StateSet,int) in line 51
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses variable actionType defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
      uses variable obligation defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
      uses variable CLEAR defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
   function getActionType() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable actionType defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
   function getObligation() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable obligation defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
   function toString() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable actionType defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
      uses variable obligation defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
   function ObligationPolicyDatabaseAction(ObligationPolicyDatabaseActionType,@Nullable Obligation) in line 38
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable actionType defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
      uses variable obligation defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
   variable actionType in line 33
   variable CLEAR in line 36
      protection public
   variable obligation in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/obl/ObligationPolicyDatabaseActionType.java
module edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
   variable ADD in line 9
      protection public
   variable CLEAR in line 10
      protection public
   variable DEL in line 9
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/obl/ObligationPolicyDatabaseEntry.java
module edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseEntry
   function getActions(ReferenceType,String,String,boolean,Collection< ObligationPolicyDatabaseAction >) in line 49
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   function getEntryType() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/obl/ObligationPolicyDatabaseEntryType.java
module edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseEntryType
   variable STRONG in line 30
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/obl/ObligationSet.java
module edu::umd::cs::findbugs::ba::obl::ObligationSet
   function add(Obligation) in line 51
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function invalidate() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function getId() defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function copyFrom(ObligationSet) in line 139
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function invalidate() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function duplicate() in line 145
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function ObligationSet(ObligationFactory) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function copyFrom(ObligationSet) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function equals(Object) in line 100
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function ObligationSet(ObligationFactory) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function getCount(int) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function hashCode() in line 152
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable INVALID_HASH_CODE defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function invalidate() in line 163
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable INVALID_HASH_CODE defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function remove(Obligation) in line 56
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function invalidate() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function toString() in line 120
      protection public
      18 lines of code
      0 parameters
      4 conditional paths
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function getObligationById(int) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function toString() defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function ObligationSet(ObligationFactory) in line 44
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function getMaxObligationTypes() defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function invalidate() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   variable cachedHashCode in line 42
   variable countList in line 39
   variable factory in line 41
   variable INVALID_HASH_CODE in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/obl/State.java
module edu::umd::cs::findbugs::ba::obl::State
   function duplicate() in line 62
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function State() defined in edu::umd::cs::findbugs::ba::obl::State
      uses variable obligationSet defined in edu::umd::cs::findbugs::ba::obl::State
      uses function duplicate() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable path defined in edu::umd::cs::findbugs::ba::obl::State
      uses function duplicate() defined in edu::umd::cs::findbugs::ba::Path
   function equals(Object) in line 71
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function State() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable obligationSet defined in edu::umd::cs::findbugs::ba::obl::State
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::Path
      uses variable path defined in edu::umd::cs::findbugs::ba::obl::State
   function getObligationSet() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable obligationSet defined in edu::umd::cs::findbugs::ba::obl::State
   function getPath() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable path defined in edu::umd::cs::findbugs::ba::obl::State
   function hashCode() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable obligationSet defined in edu::umd::cs::findbugs::ba::obl::State
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable path defined in edu::umd::cs::findbugs::ba::obl::State
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::Path
   function toString() in line 85
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable obligationSet defined in edu::umd::cs::findbugs::ba::obl::State
      uses function toString() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable path defined in edu::umd::cs::findbugs::ba::obl::State
      uses function toString() defined in edu::umd::cs::findbugs::ba::Path
   function State() in line 40
      2 lines of code
      0 parameters
      1 conditional paths
   function State(ObligationFactory) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable obligationSet in line 37
   variable path in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/obl/StateSet.java
module edu::umd::cs::findbugs::ba::obl::StateSet
   function addObligation(final Obligation,int) in line 162
      protection public
      17 lines of code
      2 parameters
      2 conditional paths
      uses function stateIterator() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function checkCircularity(State,Obligation,int) defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function add(Obligation) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function replaceMap(Map< ObligationSet, State >) defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function checkCircularity(State,Obligation,int) in line 206
      5 lines of code
      3 parameters
      2 conditional paths
   function clear() in line 81
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function copyFrom(StateSet) in line 135
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable isBottom defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function duplicate() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
   function createEmptyMap() in line 278
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function deleteObligation(final Obligation,int) in line 187
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function stateIterator() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function checkCircularity(State,Obligation,int) defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function remove(Obligation) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function replaceMap(Map< ObligationSet, State >) defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function duplicate() in line 150
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function StateSet(ObligationFactory) defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function copyFrom(StateSet) defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function equals(Object) in line 239
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function StateSet(ObligationFactory) defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable isTop defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable isBottom defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function getAllObligationSets() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function getPrefixStates(Path) in line 228
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function getStateWithObligationSet(ObligationSet) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function hashCode() in line 249
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isBottom() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTop() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isValid() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function replaceMap(Map< ObligationSet, State >) in line 218
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function setBottom() in line 68
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setTop() in line 58
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function stateIterator() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function toString() in line 254
      protection public
      19 lines of code
      0 parameters
      5 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function stateIterator() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function toString() defined in edu::umd::cs::findbugs::ba::obl::State
   function StateSet(ObligationFactory) in line 52
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::StateSet
   variable factory in line 50
   variable isBottom in line 48
   variable isTop in line 47
   variable stateMap in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/OpcodeStackScanner.java
module edu::umd::cs::findbugs::ba::OpcodeStackScanner
   function getStackAt(JavaClass,Method,int) in line 44
      protection public
      9 lines of code
      3 parameters
      3 conditional paths
module edu::umd::cs::findbugs::ba::OpcodeStackScanner::EarlyExitException
   inherits from RuntimeException
   function EarlyExitException(OpcodeStack) in line 38
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::OpcodeStackScanner::Scanner
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function execute() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function sawOpcode(int) in line 69
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visitJavaClass(JavaClass) in line 75
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/Path.java
module edu::umd::cs::findbugs::ba::Path
   function acceptVisitor(CFG,PathVisitor) in line 125
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function getLength() defined in edu::umd::cs::findbugs::ba::Path
      uses function lookupBlockByLabel(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getBlockIdAt(int) defined in edu::umd::cs::findbugs::ba::Path
      uses function acceptVisitorStartingFromLocation(CFG,PathVisitor,BasicBlock,InstructionHandle) defined in edu::umd::cs::findbugs::ba::Path
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function acceptVisitorStartingFromLocation(CFG,PathVisitor,BasicBlock,InstructionHandle) in line 141
      protection public
      50 lines of code
      4 parameters
      9 conditional paths
      uses function getLength() defined in edu::umd::cs::findbugs::ba::Path
      uses function getBlockIdAt(int) defined in edu::umd::cs::findbugs::ba::Path
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable next defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function visitBasicBlock(BasicBlock) defined in edu::umd::cs::findbugs::ba::PathVisitor
      uses function visitInstructionHandle(InstructionHandle) defined in edu::umd::cs::findbugs::ba::PathVisitor
      uses function lookupBlockByLabel(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function lookupEdge(VertexType,VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function visitEdge(Edge) defined in edu::umd::cs::findbugs::ba::PathVisitor
   function append(int) in line 53
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function grow(int) defined in edu::umd::cs::findbugs::ba::Path
      uses variable length defined in edu::umd::cs::findbugs::ba::Path
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::Path
      uses function invalidate() defined in edu::umd::cs::findbugs::ba::Path
   function copyFrom(Path) in line 112
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function grow(int) defined in edu::umd::cs::findbugs::ba::Path
      uses variable length defined in edu::umd::cs::findbugs::ba::Path
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::Path
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::ba::Path
   function duplicate() in line 101
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function Path() defined in edu::umd::cs::findbugs::ba::Path
      uses function copyFrom(Path) defined in edu::umd::cs::findbugs::ba::Path
   function equals(Object) in line 227
      protection public
      12 lines of code
      1 parameters
      5 conditional paths
      uses function Path() defined in edu::umd::cs::findbugs::ba::Path
      uses variable length defined in edu::umd::cs::findbugs::ba::Path
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::Path
   function getBlockIdAt(int) in line 82
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable length defined in edu::umd::cs::findbugs::ba::Path
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::Path
   function getLength() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable length defined in edu::umd::cs::findbugs::ba::Path
   function grow(int) in line 256
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::Path
      uses variable length defined in edu::umd::cs::findbugs::ba::Path
   function hasComponent(int) in line 67
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable length defined in edu::umd::cs::findbugs::ba::Path
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::Path
   function hashCode() in line 215
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::ba::Path
      uses variable INVALID_HASH_CODE defined in edu::umd::cs::findbugs::ba::Path
      uses variable length defined in edu::umd::cs::findbugs::ba::Path
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::Path
   function invalidate() in line 210
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable INVALID_HASH_CODE defined in edu::umd::cs::findbugs::ba::Path
   function isPrefixOf(Path) in line 198
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function getLength() defined in edu::umd::cs::findbugs::ba::Path
      uses function getBlockIdAt(int) defined in edu::umd::cs::findbugs::ba::Path
   function toString() in line 244
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable length defined in edu::umd::cs::findbugs::ba::Path
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::Path
      uses variable SYMBOLS defined in edu::umd::cs::findbugs::ba::Path
   function Path() in line 42
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable DEFAULT_CAPACITY defined in edu::umd::cs::findbugs::ba::Path
      uses function invalidate() defined in edu::umd::cs::findbugs::ba::Path
   variable blockIdList in line 34
   variable cachedHashCode in line 36
   variable DEFAULT_CAPACITY in line 31
   variable INVALID_HASH_CODE in line 32
   variable length in line 35
   variable SYMBOLS in line 240
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/PathVisitor.java
module edu::umd::cs::findbugs::ba::PathVisitor
   function visitBasicBlock(BasicBlock) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitEdge(Edge) in line 50
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitInstructionHandle(InstructionHandle) in line 43
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/PostDominatorsAnalysis.java
module edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
   inherits from edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
   function getBlockOrder(CFG) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
   function isForwards() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PostDominatorsAnalysis(CFG,ReverseDepthFirstSearch,DepthFirstSearch,EdgeChooser) in line 41
      5 lines of code
      4 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable edgeChooser defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
   function PostDominatorsAnalysis(CFG,ReverseDepthFirstSearch,DepthFirstSearch,boolean) in line 55
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
   variable dfs in line 31
   variable rdfs in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/PruneInfeasibleExceptionEdges.java
module edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function execute() in line 113
      protection public
      51 lines of code
      0 parameters
      11 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable edge defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges::MarkedEdge
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
      uses function getEdgeExceptionSet(Edge) defined in edu::umd::cs::findbugs::ba::type::TypeDataflow
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function add(ObjectType,boolean) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function isSingleton(String) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function getMethodName() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getMethodGen() defined in edu::umd::cs::findbugs::ba::CFG
      uses function containsCheckedExceptions() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function containsExplicitExceptions() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable CHECKED_EXCEPTIONS_FLAG defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable EXPLICIT_EXCEPTIONS_FLAG defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function MarkedEdge(Edge,int) defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges::MarkedEdge
      uses function removeEdge(Edge) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable STATS defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
      uses variable numEdgesPruned defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
      uses variable cfgModified defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
   function wasCFGModified() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfgModified defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
   function PruneInfeasibleExceptionEdges(CFG,MethodGen,TypeDataflow) in line 98
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
   variable cfg in line 86
   variable cfgModified in line 88
   variable DEBUG in line 46
   variable numEdgesPruned in line 48
   variable STATS in line 47
   variable typeDataflow in line 87
module edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges::MarkedEdge
   function apply() in line 79
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable edge defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges::MarkedEdge
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable flag defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges::MarkedEdge
      uses function setFlags(int) defined in edu::umd::cs::findbugs::ba::Edge
   function MarkedEdge(Edge,int) in line 74
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable edge defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges::MarkedEdge
      uses variable flag defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges::MarkedEdge
   variable edge in line 71
   variable flag in line 72
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/PruneUnconditionalExceptionThrowerEdges.java
module edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function doesMethodUnconditionallyThrowException(XMethod,JavaClass,Method) in line 220
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function doesMethodUnconditionallyThrowException(XMethod) in line 228
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isUnconditionalThrower() defined in edu::umd::cs::findbugs::ba::XMethod
   function execute() in line 90
      protection public
      113 lines of code
      0 parameters
      30 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getBoolProperty(int) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable CONSERVE_SPACE defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable cfg defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable cpg defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable unconditionalThrowerPattern defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses function isUnconditionalThrower(XMethod) defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isAbstract() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable analysisContext defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getOutgoingEdgeWithType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable cfgModified defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses function setFlag(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FOUND_INEXACT_UNCONDITIONAL_THROWERS defined in edu::umd::cs::findbugs::ba::CFG
      uses function removeEdge(Edge) defined in edu::umd::cs::findbugs::ba::CFG
   function isUnconditionalThrower(XMethod) in line 208
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isUnconditionalThrower() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function isUnsupported() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function wasCFGModified() in line 237
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfgModified defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
   function PruneUnconditionalExceptionThrowerEdges(JavaClass,Method,MethodGen,CFG,ConstantPoolGen,TypeDataflow,AnalysisContext) in line 80
      protection public
      9 lines of code
      7 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable cfg defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable cpg defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable analysisContext defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
   variable analysisContext in line 54
   variable cfg in line 51
   variable cfgModified in line 55
   variable cpg in line 52
   variable DEBUG in line 46
   variable DEBUG_DIFFERENCES in line 47
   variable methodGen in line 50
   variable RETURN_OPCODE_SET in line 58
   variable typeDataflow in line 53
   variable UNCONDITIONAL_THROWER_METHOD_NAMES in line 48
   variable unconditionalThrowerPattern in line 57
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/PutfieldScanner.java
module edu::umd::cs::findbugs::ba::PutfieldScanner
   function getPutfieldsFor(JavaClass,Method,XField) in line 38
      protection public
      7 lines of code
      3 parameters
      3 conditional paths
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
module edu::umd::cs::findbugs::ba::PutfieldScanner::Scanner
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function execute() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function sawOpcode(int) in line 62
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function visitJavaClass(JavaClass) in line 74
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function Scanner(JavaClass,Method,XField) in line 49
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/RepositoryClassParser.java
module edu::umd::cs::findbugs::ba::RepositoryClassParser
   function parse() in line 76
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable classParser defined in edu::umd::cs::findbugs::ba::RepositoryClassParser
   function RepositoryClassParser(InputStream,String) in line 44
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable classParser defined in edu::umd::cs::findbugs::ba::RepositoryClassParser
   function RepositoryClassParser(String) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classParser defined in edu::umd::cs::findbugs::ba::RepositoryClassParser
   function RepositoryClassParser(String,String) in line 65
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable classParser defined in edu::umd::cs::findbugs::ba::RepositoryClassParser
   variable classParser in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/RepositoryLookupFailureCallback.java
module edu::umd::cs::findbugs::ba::RepositoryLookupFailureCallback
   inherits from edu::umd::cs::findbugs::classfile::IErrorLogger
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ResourceTracker.java
module edu::umd::cs::findbugs::ba::ResourceTracker
   function createVisitor(Resource,ConstantPoolGen) in line 84
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function ignoreExceptionEdge(Edge,Resource,ConstantPoolGen) in line 110
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function ignoreImplicitExceptions(Resource) in line 98
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isParamInstance(Resource,int) in line 122
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function isResourceClose(BasicBlock,InstructionHandle,ConstantPoolGen,Resource,ResourceValueFrame) in line 59
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   function isResourceCreation(BasicBlock,InstructionHandle,ConstantPoolGen) in line 44
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function mightCloseResource(BasicBlock,InstructionHandle,ConstantPoolGen) in line 74
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ResourceValue.java
module edu::umd::cs::findbugs::ba::ResourceValue
   function instance() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isInstance() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function instance() defined in edu::umd::cs::findbugs::ba::ResourceValue
   function merge(ResourceValue,ResourceValue) in line 37
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function notInstance() defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses function instance() defined in edu::umd::cs::findbugs::ba::ResourceValue
   function notInstance() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function instance() defined in edu::umd::cs::findbugs::ba::ResourceValue
   function ResourceValue() in line 23
      2 lines of code
      0 parameters
      1 conditional paths
   variable instance in line 26
   variable notInstance in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ResourceValueAnalysis.java
module edu::umd::cs::findbugs::ba::ResourceValueAnalysis
   inherits from FrameDataflowAnalysis< ResourceValue, ResourceValueFrame >
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function createFact() in line 62
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::Frame
   function initEntryFact(ResourceValueFrame) in line 68
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function setValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isParamInstance(Resource,int) defined in edu::umd::cs::findbugs::ba::ResourceTracker
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses variable notInstance defined in edu::umd::cs::findbugs::ba::ResourceValue
   function meetInto(ResourceValueFrame,Edge,ResourceValueFrame) in line 78
      protection public
      119 lines of code
      3 parameters
      23 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable ACCURATE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses function ignoreExceptionEdge(Edge,Resource,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::ResourceTracker
      uses variable OPEN defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function setStatus(int) defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable OPEN_ON_EXCEPTION_PATH defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getSuccessorWithEdgeType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function isResourceClose(BasicBlock,InstructionHandle,ConstantPoolGen,Resource,ResourceValueFrame) defined in edu::umd::cs::findbugs::ba::ResourceTracker
      uses variable CLOSED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function isExceptionHandler() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses function pushValue(ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable notInstance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isInstance() defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses variable NONEXISTENT defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function mergeInto(ResourceValueFrame,ResourceValueFrame) in line 199
      8 lines of code
      2 parameters
      1 conditional paths
   function mergeValues(ResourceValueFrame,ResourceValueFrame,int) in line 210
      4 lines of code
      3 parameters
      1 conditional paths
   function transferInstruction(InstructionHandle,BasicBlock,ResourceValueFrame) in line 216
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses function setFrameAndLocation(FrameType,Location) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function transferInstruction(InstructionHandle,BasicBlock) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function ResourceValueAnalysis(MethodGen,CFG,DepthFirstSearch,ResourceTracker< Resource >,Resource) in line 49
      protection public
      12 lines of code
      5 parameters
      1 conditional paths
      uses function createVisitor(Resource,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::ResourceTracker
      uses function ignoreImplicitExceptions(Resource) defined in edu::umd::cs::findbugs::ba::ResourceTracker
   variable cfg in line 43
   variable DEBUG in line 40
   variable ignoreImplicitExceptions in line 47
   variable methodGen in line 42
   variable resource in line 45
   variable resourceTracker in line 44
   variable visitor in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ResourceValueFrame.java
module edu::umd::cs::findbugs::ba::ResourceValueFrame
   inherits from Frame< ResourceValue >
   function copyFrom(Frame< ResourceValue >) in line 78
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function ResourceValueFrame(int) defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable status defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function getStatus() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable status defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function sameAs(Frame< ResourceValue >) in line 69
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function ResourceValueFrame(int) defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable status defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function setStatus(int) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable status defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function toString() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable statusList defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable status defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function ResourceValueFrame(int) in line 55
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable NONEXISTENT defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   variable CLOSED in line 41
      protection public
   variable CREATED in line 46
      protection public
   variable ESCAPED in line 26
      protection public
   variable NONEXISTENT in line 51
      protection public
   variable OPEN in line 31
      protection public
   variable OPEN_ON_EXCEPTION_PATH in line 36
      protection public
   variable status in line 53
   variable statusList in line 84
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ResourceValueFrameModelingVisitor.java
module edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   inherits from AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
   abstract class
   function getDefaultValue() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable notInstance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses function transferInstruction(InstructionHandle,BasicBlock) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function handleArrayStore(ArrayInstruction) in line 79
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable frame defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getFrame() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses variable ESCAPED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function handleNormalInstruction(Instruction) defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
   function handleFieldStore(FieldInstruction) in line 60
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable frame defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getFrame() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses variable ESCAPED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function handleNormalInstruction(Instruction) defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
   function handleInvoke(InvokeInstruction) in line 119
      20 lines of code
      1 parameters
      4 conditional paths
      uses variable frame defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getFrame() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getNumWordsConsumed(Instruction) defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses function instanceEscapes(InvokeInstruction,int) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
      uses variable ESCAPED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function handleNormalInstruction(Instruction) defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
   function instanceEscapes(InvokeInstruction,int) in line 115
      3 lines of code
      2 parameters
      1 conditional paths
   function transferInstruction(InstructionHandle,BasicBlock) in line 51
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visitAASTORE(AASTORE) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleArrayStore(ArrayInstruction) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function visitARETURN(ARETURN) in line 175
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable frame defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getFrame() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses variable ESCAPED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function handleNormalInstruction(Instruction) defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
   function visitCHECKCAST(CHECKCAST) in line 141
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable frame defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getFrame() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses variable ESCAPED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function visitINVOKEINTERFACE(INVOKEINTERFACE) in line 160
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function visitINVOKESPECIAL(INVOKESPECIAL) in line 165
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function visitINVOKESTATIC(INVOKESTATIC) in line 170
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function visitINVOKEVIRTUAL(INVOKEVIRTUAL) in line 155
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function visitPUTFIELD(PUTFIELD) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleFieldStore(FieldInstruction) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function visitPUTSTATIC(PUTSTATIC) in line 102
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleFieldStore(FieldInstruction) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function ResourceValueFrameModelingVisitor(ConstantPoolGen) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cpg defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ReturnPath.java
module edu::umd::cs::findbugs::ba::ReturnPath
   function copyFrom(ReturnPath) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::ReturnPath
   function getKind() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::ReturnPath
   function mergeWith(ReturnPath) in line 75
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable mergeMatrix defined in edu::umd::cs::findbugs::ba::ReturnPath
   function sameAs(ReturnPath) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::ReturnPath
   function setKind(int) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::ReturnPath
   function toString() in line 82
      protection public
      16 lines of code
      0 parameters
      6 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable TOP defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable EXIT defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable UE defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable EXIT_UE defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable RETURNS defined in edu::umd::cs::findbugs::ba::ReturnPath
   function ReturnPath(int) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::ReturnPath
   variable EXIT in line 30
      protection public
   variable EXIT_UE in line 38
      protection public
   variable kind in line 44
   variable mergeMatrix in line 66
   variable RETURNS in line 42
      protection public
   variable TOP in line 26
      protection public
   variable UE in line 34
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ReturnPathAnalysis.java
module edu::umd::cs::findbugs::ba::ReturnPathAnalysis
   inherits from ForwardDataflowAnalysis< ReturnPath >
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function copy(ReturnPath,ReturnPath) in line 33
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(ReturnPath) defined in edu::umd::cs::findbugs::ba::ReturnPath
   function createFact() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable TOP defined in edu::umd::cs::findbugs::ba::ReturnPath
   function initEntryFact(ReturnPath) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setKind(int) defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable RETURNS defined in edu::umd::cs::findbugs::ba::ReturnPath
   function isFactValid(ReturnPath) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isTop(ReturnPath) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getKind() defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable TOP defined in edu::umd::cs::findbugs::ba::ReturnPath
   function makeFactTop(ReturnPath) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setKind(int) defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable TOP defined in edu::umd::cs::findbugs::ba::ReturnPath
   function meetInto(ReturnPath,Edge,ReturnPath) in line 63
      protection public
      12 lines of code
      3 parameters
      3 conditional paths
      uses variable UNHANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable UE defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable EXIT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable EXIT defined in edu::umd::cs::findbugs::ba::ReturnPath
   function same(ReturnPath,ReturnPath) in line 48
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function sameAs(ReturnPath) defined in edu::umd::cs::findbugs::ba::ReturnPath
   function transferInstruction(InstructionHandle,BasicBlock,ReturnPath) in line 53
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function ReturnPathAnalysis(DepthFirstSearch) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< ReturnPath >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ReturnPathDataflow.java
module edu::umd::cs::findbugs::ba::ReturnPathDataflow
   inherits from Dataflow< ReturnPath, ReturnPathAnalysis >
   function ReturnPathDataflow(CFG,ReturnPathAnalysis) in line 23
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< ReturnPath, ReturnPathAnalysis >
      uses variable analysis defined in Dataflow< ReturnPath, ReturnPathAnalysis >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ReverseDepthFirstSearch.java
module edu::umd::cs::findbugs::ba::ReverseDepthFirstSearch
   inherits from ReverseDepthFirstSearch< CFG, Edge, BasicBlock >
   function getNextSearchTreeRoot() in line 45
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable firstRoot defined in edu::umd::cs::findbugs::ba::ReverseDepthFirstSearch
   function ReverseDepthFirstSearch(CFG) in line 39
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
   variable firstRoot in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/graph/ReverseDepthFirstSearch.java
module edu::umd::cs::findbugs::graph::ReverseDepthFirstSearch
   inherits from AbstractDepthFirstSearch< GraphType, EdgeType, VertexType >
   function getSource(EdgeType) in line 60
      3 lines of code
      1 parameters
      1 conditional paths
   function getTarget(EdgeType) in line 55
      3 lines of code
      1 parameters
      1 conditional paths
   function outgoingEdgeIterator(GraphType,VertexType) in line 50
      3 lines of code
      2 parameters
      1 conditional paths
   function ReverseDepthFirstSearch(GraphType) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ReverseDFSOrder.java
module edu::umd::cs::findbugs::ba::ReverseDFSOrder
   inherits from edu::umd::cs::findbugs::ba::AbstractBlockOrder
   function ReverseDFSOrder(CFG,ReverseDepthFirstSearch,DepthFirstSearch) in line 59
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function ReverseDFSComparator(ReverseDepthFirstSearch,DepthFirstSearch) defined in edu::umd::cs::findbugs::ba::ReverseDFSOrder::ReverseDFSComparator
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::ReverseDFSOrder::ReverseDFSComparator
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ReverseDFSOrder::ReverseDFSComparator
   variable dfs in line 37
      protection public
   variable rdfs in line 36
      protection public
module edu::umd::cs::findbugs::ba::ReverseDFSOrder::ReverseDFSComparator
   inherits from java::util::Comparator
   function compare(BasicBlock,BasicBlock) in line 47
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ReverseDFSOrder::ReverseDFSComparator
   function ReverseDFSComparator(ReverseDepthFirstSearch,DepthFirstSearch) in line 41
      protection public
      6 lines of code
      2 parameters
      3 conditional paths
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::ReverseDFSOrder::ReverseDFSComparator
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ReverseDFSOrder::ReverseDFSComparator
   variable dfs in line 40
      protection public
   variable rdfs in line 39
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ReversePostOrder.java
module edu::umd::cs::findbugs::ba::ReversePostOrder
   inherits from edu::umd::cs::findbugs::ba::AbstractBlockOrder
   function ReversePostOrder(CFG,DepthFirstSearch) in line 58
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function ReversePostfixComparator(DepthFirstSearch) defined in edu::umd::cs::findbugs::ba::ReversePostOrder::ReversePostfixComparator
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ReversePostOrder::ReversePostfixComparator
module edu::umd::cs::findbugs::ba::ReversePostOrder::ReversePostfixComparator
   inherits from java::util::Comparator
   function compare(BasicBlock,BasicBlock) in line 47
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ReversePostOrder::ReversePostfixComparator
   function ReversePostfixComparator(DepthFirstSearch) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ReversePostOrder::ReversePostfixComparator
   variable dfs in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/rta/RapidTypeAnalysis.java
module edu::umd::cs::findbugs::ba::rta::RapidTypeAnalysis
   inherits from edu::umd::cs::findbugs::classfile::IClassObserver
   function execute() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function observeClass(ClassDescriptor) in line 52
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable observedClassSet defined in edu::umd::cs::findbugs::ba::rta::RapidTypeAnalysis
   function RapidTypeAnalysis() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable observedClassSet in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/SignatureConverter.java
module edu::umd::cs::findbugs::ba::SignatureConverter
   function convert(String) in line 249
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function SignatureConverter(String) defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function convertMethodSignature(JavaClass,Method) in line 143
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function convertMethodSignature(MethodGen) in line 153
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function convertMethodSignature(JavaClass,Method) defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function convertMethodSignature(InvokeInstruction,ConstantPoolGen) in line 164
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function convertMethodSignature(JavaClass,Method) defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function convertMethodSignature(String,String,String) in line 176
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function convertMethodSignature(JavaClass,Method) defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function convertMethodSignature(XMethod) in line 187
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function convertMethodSignature(JavaClass,Method) defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function convertMethodSignature(MethodDescriptor) in line 200
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function convertMethodSignature(JavaClass,Method) defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function convertMethodSignature(String,String,String,String) in line 217
      protection public
      25 lines of code
      4 parameters
      3 conditional paths
      uses function SignatureConverter(String) defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function skip() defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function getFirst() defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function shorten(String,String) defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function parseNext() defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function getFirst() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function parseNext() in line 78
      protection public
      57 lines of code
      0 parameters
      15 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function skip() defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function shorten(String,String) in line 253
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
   function skip() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function SignatureConverter(String) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureConverter
   variable signature in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/SignatureParser.java
module edu::umd::cs::findbugs::ba::SignatureParser
   function calculateOffsets() in line 38
      16 lines of code
      0 parameters
      5 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function getNumParameters() in line 160
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function getNumParametersForInvocation(InvokeInstruction,ConstantPoolGen) in line 205
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function SignatureParser(String) defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function getNumSlotsForType(String) in line 218
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getParameter(int) in line 177
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureParser
   function getReturnTypeSignature() in line 148
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureParser
   function getSlotsFromTopOfStackForParameter(int) in line 55
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function calculateOffsets() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function hasReferenceParameters() in line 169
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function isReferenceType(String) in line 194
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureParser
   function main(String[]) in line 226
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function SignatureParser(String) defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function parameterSignatureIterator() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureParser
   function SignatureParser(String) in line 128
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureParser
   variable signature in line 117
module edu::umd::cs::findbugs::ba::SignatureParser::ParameterSignatureIterator
   inherits from java::util::Iterator
   function hasNext() in line 64
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable index defined in edu::umd::cs::findbugs::ba::SignatureParser::ParameterSignatureIterator
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureParser
   function next() in line 69
      protection public
      42 lines of code
      0 parameters
      15 conditional paths
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::SignatureParser::ParameterSignatureIterator
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses variable index defined in edu::umd::cs::findbugs::ba::SignatureParser::ParameterSignatureIterator
   function remove() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable index in line 62
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/SimplePathEnumerator.java
module edu::umd::cs::findbugs::ba::SimplePathEnumerator
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   inherits from edu::umd::cs::findbugs::ba::DFSEdgeTypes
   function enumerate() in line 88
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses variable work defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable maxWork defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
   function iterator() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pathList defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
   function work(LinkedList< Edge >) in line 109
      36 lines of code
      1 parameters
      7 conditional paths
      uses variable pathList defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable maxPaths defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable cfg defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable dfs defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable BACK_EDGE defined in edu::umd::cs::findbugs::graph::DFSEdgeTypes
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable UNHANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable work defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable maxWork defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
   function SimplePathEnumerator(CFG,int,int) in line 63
      protection public
      9 lines of code
      3 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable dfs defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable maxPaths defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable maxWork defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
   function SimplePathEnumerator(CFG,int) in line 79
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable maxPaths defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable DEFAULT_MAX_WORK defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
   variable cfg in line 41
   variable DEBUG in line 48
   variable DEFAULT_MAX_WORK in line 53
      protection public
   variable dfs in line 42
   variable maxPaths in line 43
   variable maxWork in line 44
   variable pathList in line 46
   variable work in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/SourceFile.java
module edu::umd::cs::findbugs::ba::SourceFile
   function addLineOffset(int) in line 147
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable numLines defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable lineNumberMap defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable offset defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
   function getFullFileName() in line 113
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dataSource defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function getFullFileName() defined in edu::umd::cs::findbugs::ba::SourceFileDataSource
   function getInputStream() in line 123
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFileData() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable data defined in edu::umd::cs::findbugs::ba::SourceFile
   function getInputStreamFromOffset(int) in line 135
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function loadFileData() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable data defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable offset defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
   function getLineOffset(int) in line 168
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function loadFileData() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable numLines defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable lineNumberMap defined in edu::umd::cs::findbugs::ba::SourceFile
   function intValueOf(byte) in line 36
      3 lines of code
      1 parameters
      1 conditional paths
   function loadFileData() in line 180
      29 lines of code
      0 parameters
      5 conditional paths
      uses variable data defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable dataSource defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function open() defined in edu::umd::cs::findbugs::ba::SourceFileDataSource
      uses function addLineOffset(int) defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function LineNumberMapBuilder(SourceFile) defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
      uses function addData(byte[],int) defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
      uses function eof() defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
      uses function setData(byte[]) defined in edu::umd::cs::findbugs::ba::SourceFile
   function setData(byte[]) in line 215
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable data defined in edu::umd::cs::findbugs::ba::SourceFile
   function SourceFile(SourceFileDataSource) in line 104
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable dataSource defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable DEFAULT_SIZE defined in edu::umd::cs::findbugs::ba::SourceFile
   variable data in line 94
   variable dataSource in line 93
   variable DEFAULT_SIZE in line 91
   variable lineNumberMap in line 95
   variable numLines in line 96
module edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
   function add(int) in line 67
      22 lines of code
      1 parameters
      4 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
      uses function addLineOffset(int) defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable offset defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
      uses variable lastSeen defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
   function addData(byte[],int) in line 55
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function intValueOf(byte) defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable data defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function add(int) defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
   function eof() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function add(int) defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
   function LineNumberMapBuilder(SourceFile) in line 49
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
   variable lastSeen in line 47
   variable offset in line 46
   variable sourceFile in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/SourceFileDataSource.java
module edu::umd::cs::findbugs::ba::SourceFileDataSource
   function getFullFileName() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function open() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/SourceFinder.java
module edu::umd::cs::findbugs::ba::SourceFinder
   function findSourceFile(SourceLineAnnotation) in line 391
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
   function findSourceFile(String,String) in line 412
      protection public
      38 lines of code
      2 parameters
      7 conditional paths
      uses variable cache defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable repositoryList defined in edu::umd::cs::findbugs::ba::SourceFinder
   function getProject() in line 342
      protection public
      3 lines of code
      0 parameters
      6 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable repositoryList defined in edu::umd::cs::findbugs::ba::SourceFinder
   function hasSourceFile(SourceLineAnnotation) in line 451
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function isSourceFileKnown() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function hasSourceFile(String,String) in line 465
      protection public
      35 lines of code
      2 parameters
      7 conditional paths
      uses variable cache defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable repositoryList defined in edu::umd::cs::findbugs::ba::SourceFinder
   function openSource(String,String) in line 383
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getInputStream() defined in edu::umd::cs::findbugs::ba::SourceFile
   function openSource(SourceLineAnnotation) in line 387
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getInputStream() defined in edu::umd::cs::findbugs::ba::SourceFile
   function setProject(Project) in line 503
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable repositoryList defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable cache defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getResolvedSourcePaths() defined in edu::umd::cs::findbugs::Project
   function SourceFinder(Project) in line 335
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setProject(Project) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable project defined in edu::umd::cs::findbugs::ba::SourceFinder
   variable cache in line 327
   variable CACHE_SIZE in line 61
   variable DEBUG in line 60
   variable project in line 328
   variable repositoryList in line 326
module edu::umd::cs::findbugs::ba::SourceFinder::Cache
   inherits from java::util::LinkedHashMap
   function removeEldestEntry(Map.Entry< String, SourceFile >) in line 79
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable CACHE_SIZE defined in edu::umd::cs::findbugs::ba::SourceFinder
   variable serialVersionUID in line 76
module edu::umd::cs::findbugs::ba::SourceFinder::SourceRepository
   function contains(String) in line 88
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getDataSource(String) in line 92
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isPlatformDependent() in line 90
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::SourceFinder::DirectorySourceRepository
   inherits from edu::umd::cs::findbugs::ba::SourceFinder::SourceRepository
   function contains(String) in line 109
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::SourceFinder
   function getDataSource(String) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFullFileName(String) in line 124
      3 lines of code
      1 parameters
      1 conditional paths
   function isPlatformDependent() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function DirectorySourceRepository(String) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable baseDir in line 99
module edu::umd::cs::findbugs::ba::SourceFinder::InMemorySourceRepository
   inherits from edu::umd::cs::findbugs::ba::SourceFinder::SourceRepository
   function contains(String) in line 167
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDataSource(final String) in line 174
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function isPlatformDependent() in line 190
      protection public
      3 lines of code
      0 parameters
      8 conditional paths
      uses function getProject() defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::Project
      uses function getProgressMonitorInputStream(InputStream,int,String) defined in edu::umd::cs::findbugs::IGuiCallback
      uses function setErrorMessage(String) defined in edu::umd::cs::findbugs::IGuiCallback
      uses function contains(String) defined in edu::umd::cs::findbugs::ba::SourceFinder::SourceRepository
      uses function getDataSource(String) defined in edu::umd::cs::findbugs::ba::SourceFinder::SourceRepository
      uses function isPlatformDependent() defined in edu::umd::cs::findbugs::ba::SourceFinder::SourceRepository
module edu::umd::cs::findbugs::ba::SourceFinder::BlockingSourceRepository
   inherits from edu::umd::cs::findbugs::ba::SourceFinder::SourceRepository
   function await() in line 276
      7 lines of code
      0 parameters
      1 conditional paths
   function contains(String) in line 283
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getDataSource(String) in line 287
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function isPlatformDependent() in line 291
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function isReady() in line 269
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setBase(SourceRepository) in line 272
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function BlockingSourceRepository() in line 266
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::SourceFinder::ZipSourceRepository
   inherits from edu::umd::cs::findbugs::ba::SourceFinder::SourceRepository
   function contains(String) in line 309
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDataSource(String) in line 317
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isPlatformDependent() in line 313
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ZipSourceRepository(ZipFile) in line 305
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/SourceInfoMap.java
module edu::umd::cs::findbugs::ba::SourceInfoMap
   function addClassLine(String,SourceLineRange) in line 241
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable classLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function addFieldLine(String,String,SourceLineRange) in line 218
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable fieldLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function addMethodLine(String,String,String,SourceLineRange) in line 230
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses variable methodLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function createRange(String,String) in line 399
      3 lines of code
      2 parameters
      1 conditional paths
   function expect(StringTokenizer,String) in line 391
      7 lines of code
      2 parameters
      3 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function fallBackToClassfile() in line 195
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function getClassLine(String) in line 274
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function getFieldLine(String,String) in line 252
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable fieldLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function getMethodLine(String,String,String) in line 264
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable methodLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function isEmpty() in line 198
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable methodLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable classLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function parseVersionNumber(String) in line 372
      10 lines of code
      1 parameters
      2 conditional paths
      uses function expect(StringTokenizer,String) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function read(@WillClose InputStream) in line 287
      protection public
      77 lines of code
      1 parameters
      15 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses function parseVersionNumber(String) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable DIGITS defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses function createRange(String,String) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable classLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable methodLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable fieldLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function SourceInfoMap() in line 205
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   variable classLineMap in line 193
   variable DEBUG in line 189
   variable DIGITS in line 278
   variable fieldLineMap in line 191
   variable methodLineMap in line 192
module edu::umd::cs::findbugs::ba::SourceInfoMap::FieldDescriptor
   inherits from Comparable
   function compareTo(FieldDescriptor) in line 65
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 84
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FieldDescriptor(String,String) in line 53
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::SourceInfoMap::MethodDescriptor
   inherits from Comparable
   function compareTo(MethodDescriptor) in line 109
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 132
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 122
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function MethodDescriptor(String,String,String) in line 97
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable className in line 93
   variable methodName in line 94
   variable methodSignature in line 95
module edu::umd::cs::findbugs::ba::SourceInfoMap::SourceLineRange
   function getEnd() in line 176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStart() in line 169
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 184
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SourceLineRange(@NonNull Integer) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function SourceLineRange(@NonNull Integer,@NonNull Integer) in line 161
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable start in line 146
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/StackDepth.java
module edu::umd::cs::findbugs::ba::StackDepth
   function getDepth() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable depth defined in edu::umd::cs::findbugs::ba::StackDepth
   function setDepth(int) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable depth defined in edu::umd::cs::findbugs::ba::StackDepth
   function toString() in line 54
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function getDepth() defined in edu::umd::cs::findbugs::ba::StackDepth
      uses variable TOP defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
      uses variable BOTTOM defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
      uses variable depth defined in edu::umd::cs::findbugs::ba::StackDepth
   function StackDepth(int) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable depth defined in edu::umd::cs::findbugs::ba::StackDepth
   variable depth in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/StackDepthAnalysis.java
module edu::umd::cs::findbugs::ba::StackDepthAnalysis
   inherits from ForwardDataflowAnalysis< StackDepth >
   function copy(StackDepth,StackDepth) in line 69
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function setDepth(int) defined in edu::umd::cs::findbugs::ba::StackDepth
      uses function getDepth() defined in edu::umd::cs::findbugs::ba::StackDepth
   function createFact() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable TOP defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
   function initEntryFact(StackDepth) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setDepth(int) defined in edu::umd::cs::findbugs::ba::StackDepth
   function isFactValid(StackDepth) in line 64
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getDepth() defined in edu::umd::cs::findbugs::ba::StackDepth
      uses variable TOP defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
      uses variable BOTTOM defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
   function isTop(StackDepth) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getDepth() defined in edu::umd::cs::findbugs::ba::StackDepth
      uses variable TOP defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
   function makeFactTop(StackDepth) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setDepth(int) defined in edu::umd::cs::findbugs::ba::StackDepth
      uses variable TOP defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
   function meetInto(StackDepth,Edge,StackDepth) in line 96
      protection public
      16 lines of code
      3 parameters
      4 conditional paths
      uses function getDepth() defined in edu::umd::cs::findbugs::ba::StackDepth
      uses variable TOP defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
      uses variable BOTTOM defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
      uses function setDepth(int) defined in edu::umd::cs::findbugs::ba::StackDepth
   function same(StackDepth,StackDepth) in line 77
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getDepth() defined in edu::umd::cs::findbugs::ba::StackDepth
   function transferInstruction(InstructionHandle,BasicBlock,StackDepth) in line 82
      protection public
      13 lines of code
      3 parameters
      3 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
      uses variable BOTTOM defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
   function StackDepthAnalysis(ConstantPoolGen,DepthFirstSearch) in line 47
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< StackDepth >
      uses variable cpg defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
   variable BOTTOM in line 37
      protection public
   variable cpg in line 39
   variable TOP in line 36
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/Target.java
module edu::umd::cs::findbugs::ba::Target
   function getEdgeType() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable edgeType defined in edu::umd::cs::findbugs::ba::Target
   function getTargetInstruction() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable targetInstruction defined in edu::umd::cs::findbugs::ba::Target
   function Target(InstructionHandle,int) in line 37
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable targetInstruction defined in edu::umd::cs::findbugs::ba::Target
      uses variable edgeType defined in edu::umd::cs::findbugs::ba::Target
   variable edgeType in line 29
   variable targetInstruction in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/TargetEnumeratingVisitor.java
module edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
   inherits from org::apache::bcel::generic::EmptyVisitor
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function instructionIsExit() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instructionIsReturn() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instructionIsThrow() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isEndOfBasicBlock() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isBranch defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
   function targetIterator() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable targetList defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
   function visitATHROW(ATHROW) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGotoInstruction(GotoInstruction) in line 102
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable isBranch defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable targetList defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable GOTO_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function visitIfInstruction(IfInstruction) in line 110
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable isBranch defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable targetList defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable handle defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function visitINVOKESTATIC(INVOKESTATIC) in line 148
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable constPoolGen defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
   function visitReturnInstruction(ReturnInstruction) in line 138
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitSelect(Select) in line 120
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable isBranch defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable targetList defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable SWITCH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable SWITCH_DEFAULT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function TargetEnumeratingVisitor(InstructionHandle,ConstantPoolGen) in line 56
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable constPoolGen defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable targetList defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable isBranch defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
   variable constPoolGen in line 46
   variable handle in line 45
   variable isBranch in line 48
   variable targetList in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/TestCaseDetector.java
module edu::umd::cs::findbugs::ba::TestCaseDetector
   function likelyTestCase(XMethod) in line 35
      protection public
      16 lines of code
      1 parameters
      5 conditional paths
      uses function getAnnotation(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable JUNIT4TEST defined in edu::umd::cs::findbugs::ba::TestCaseDetector
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable JUNIT3TESTCASE defined in edu::umd::cs::findbugs::ba::TestCaseDetector
   variable JUNIT3TESTCASE in line 33
   variable JUNIT4TEST in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/type/BottomType.java
module edu::umd::cs::findbugs::ba::type::BottomType
   inherits from org::apache::bcel::generic::Type
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function equals(Object) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::ba::type::BottomType
   function BottomType() in line 40
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_BOTTOM defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   variable serialVersionUID in line 37
   variable theInstance in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/type/DoubleExtraType.java
module edu::umd::cs::findbugs::ba::type::DoubleExtraType
   inherits from org::apache::bcel::generic::Type
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function equals(Object) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::ba::type::DoubleExtraType
   function DoubleExtraType() in line 42
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_DOUBLE_EXTRA defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   variable serialVersionUID in line 39
   variable theInstance in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/type/ExceptionObjectType.java
module edu::umd::cs::findbugs::ba::type::ExceptionObjectType
   inherits from org::apache::bcel::generic::ObjectType
   inherits from org::apache::bcel::Constants
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function equals(Object) in line 81
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function ExceptionObjectType(String,ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function fromExceptionSet(ExceptionSet) in line 57
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
      uses function getCommonSupertype() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function ExceptionObjectType(String,ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
   function getExceptionSet() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
   function getType() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_EXCEPTION defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function hashCode() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 100
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
      uses function iterator() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   function ExceptionObjectType(String,ExceptionSet) in line 45
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
   variable exceptionSet in line 37
   variable serialVersionUID in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/type/ExceptionSet.java
module edu::umd::cs::findbugs::ba::type::ExceptionSet
   inherits from java::io::Serializable
   function add(ObjectType,boolean) in line 233
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function size() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable commonSupertype defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function addAll(ExceptionSet) in line 249
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function size() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function countBits(BitSet) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable commonSupertype defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function addExplicit(ObjectType) in line 213
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function add(ObjectType,boolean) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function addImplicit(ObjectType) in line 222
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function add(ObjectType,boolean) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function clear() in line 269
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable universalHandler defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable commonSupertype defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function containsCheckedExceptions() in line 295
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   function containsExplicitExceptions() in line 307
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   function countBits(BitSet) in line 257
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function duplicate() in line 116
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function createExceptionSet() defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable size defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable universalHandler defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable commonSupertype defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function equals(Object) in line 135
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable universalHandler defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function getCommonSupertype() in line 150
      protection public
      31 lines of code
      0 parameters
      6 conditional paths
      uses variable commonSupertype defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function iterator() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses variable ENABLE_SUBTYPES2_FOR_COMMON_SUPERCLASS_QUERIES defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function hashCode() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function isEmpty() in line 192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function size() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function isSingleton(String) in line 202
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function size() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function iterator() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function iterator() in line 185
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function sawUniversal() in line 280
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function clear() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable universalHandler defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function sawUniversalHandler() in line 288
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable universalHandler defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function size() in line 335
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 317
      protection public
      18 lines of code
      0 parameters
      5 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   variable commonSupertype in line 54
   variable exceptionSet in line 50
   variable explicitSet in line 51
   variable factory in line 49
   variable serialVersionUID in line 47
   variable size in line 52
   variable universalHandler in line 53
module edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   inherits from java::util::Iterator
   function findNext() in line 91
      8 lines of code
      0 parameters
      3 conditional paths
      uses function next() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses variable factory defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function hasNext() in line 66
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable last defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses function next() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses function findNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses variable factory defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function isExplicit() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable last defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   function next() in line 72
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses variable factory defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable last defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   function remove() in line 84
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable last defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function size() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable commonSupertype defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   variable last in line 60
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/type/ExceptionSetFactory.java
module edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
   inherits from java::io::Serializable
   function createExceptionSet() in line 41
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
      uses variable typeIndexMap defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
      uses variable typeList defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
   function ExceptionSetFactory() in line 36
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable serialVersionUID in line 32
   variable typeIndexMap in line 33
   variable typeList in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/type/ExtendedTypes.java
module edu::umd::cs::findbugs::ba::type::ExtendedTypes
   variable T_AVAIL_TYPE in line 83
      protection public
   variable T_BOTTOM in line 58
      protection public
   variable T_DOUBLE_EXTRA in line 53
      protection public
   variable T_EXCEPTION in line 76
      protection public
   variable T_LONG_EXTRA in line 46
      protection public
   variable T_NULL in line 67
      protection public
   variable T_TOP in line 39
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/type/FieldStoreType.java
module edu::umd::cs::findbugs::ba::type::FieldStoreType
   function addTypeSignature(String) in line 50
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable loadType defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
      uses variable typeSignatureSet defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
   function computeLoadType(ReferenceType) in line 66
      45 lines of code
      1 parameters
      9 conditional paths
      uses function signatureIterator() defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
      uses variable ENABLE_SUBTYPES2_FOR_COMMON_SUPERCLASS_QUERIES defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable loadType defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
   function getLoadType(ReferenceType) in line 59
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable loadType defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
      uses function computeLoadType(ReferenceType) defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
   function signatureIterator() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeSignatureSet defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
   function FieldStoreType() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable loadType in line 43
   variable typeSignatureSet in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/type/FieldStoreTypeDatabase.java
module edu::umd::cs::findbugs::ba::type::FieldStoreTypeDatabase
   inherits from edu::umd::cs::findbugs::ba::interproc::FieldPropertyDatabase
   function decodeProperty(String) in line 59
      9 lines of code
      1 parameters
      2 conditional paths
   function encodeProperty(FieldStoreType) in line 71
      10 lines of code
      1 parameters
      3 conditional paths
      uses function signatureIterator() defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
   function purgeBoringEntries() in line 42
      protection public
      15 lines of code
      0 parameters
      4 conditional paths
      uses function getKeys() defined in PropertyDatabase< FieldDescriptor, Property >
      uses function getProperty(KeyType) defined in PropertyDatabase< FieldDescriptor, Property >
      uses function removeProperty(KeyType) defined in PropertyDatabase< FieldDescriptor, Property >
      uses function getLoadType(ReferenceType) defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
   variable DEFAULT_FILENAME in line 40
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/type/LongExtraType.java
module edu::umd::cs::findbugs::ba::type::LongExtraType
   inherits from org::apache::bcel::generic::Type
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function equals(Object) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::ba::type::LongExtraType
   function LongExtraType() in line 42
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_LONG_EXTRA defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   variable serialVersionUID in line 39
   variable theInstance in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/type/NullType.java
module edu::umd::cs::findbugs::ba::type::NullType
   inherits from org::apache::bcel::generic::ReferenceType
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function equals(Object) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::ba::type::NullType
   function NullType() in line 42
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_NULL defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   variable serialVersionUID in line 39
   variable theInstance in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/type/StandardTypeMerger.java
module edu::umd::cs::findbugs::ba::type::StandardTypeMerger
   inherits from edu::umd::cs::findbugs::ba::type::TypeMerger
   inherits from org::apache::bcel::Constants
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function isIntegerType(byte) in line 112
      3 lines of code
      1 parameters
      1 conditional paths
   function isObjectType(byte) in line 102
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable T_EXCEPTION defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function isReferenceType(byte) in line 94
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable T_NULL defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses variable T_EXCEPTION defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function isThrowable(ReferenceType) in line 165
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable ENABLE_SUBTYPES2 defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function mergeReferenceTypes(ReferenceType,ReferenceType) in line 133
      31 lines of code
      2 parameters
      7 conditional paths
      uses function isObjectType(byte) defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses variable T_EXCEPTION defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses function isThrowable(ReferenceType) defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses function updateExceptionSet(ExceptionSet,ObjectType) defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses variable ENABLE_SUBTYPES2_FOR_COMMON_SUPERCLASS_QUERIES defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function mergeTypes(Type,Type) in line 58
      protection public
      29 lines of code
      2 parameters
      10 conditional paths
      uses variable T_TOP defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses variable T_BOTTOM defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses function isReferenceType(byte) defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses variable T_NULL defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses function mergeReferenceTypes(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses function isIntegerType(byte) defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
   function updateExceptionSet(ExceptionSet,ObjectType) in line 116
      6 lines of code
      2 parameters
      2 conditional paths
      uses function addAll(ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function addExplicit(ObjectType) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function StandardTypeMerger(RepositoryLookupFailureCallback,ExceptionSetFactory) in line 52
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
   variable exceptionSetFactory in line 43
   variable lookupFailureCallback in line 42
   variable OBJECT_TYPE in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/type/ThrownException.java
module edu::umd::cs::findbugs::ba::type::ThrownException
   function duplicate() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function ThrownException(ObjectType,boolean) defined in edu::umd::cs::findbugs::ba::type::ThrownException
      uses variable type defined in edu::umd::cs::findbugs::ba::type::ThrownException
   function equals(Object) in line 88
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses function ThrownException(ObjectType,boolean) defined in edu::umd::cs::findbugs::ba::type::ThrownException
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::type::ThrownException
      uses variable type defined in edu::umd::cs::findbugs::ba::type::ThrownException
      uses variable explicit defined in edu::umd::cs::findbugs::ba::type::ThrownException
   function getType() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::type::ThrownException
   function hashCode() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::type::ThrownException
   function isExplicit() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setExplicit(boolean) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ThrownException(ObjectType,boolean) in line 49
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::type::ThrownException
   variable explicit in line 41
   variable type in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/type/TopType.java
module edu::umd::cs::findbugs::ba::type::TopType
   inherits from org::apache::bcel::generic::Type
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function equals(Object) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::ba::type::TopType
   function TopType() in line 40
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_TOP defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   variable serialVersionUID in line 37
   variable theInstance in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/type/TypeAnalysis.java
module edu::umd::cs::findbugs::ba::type::TypeAnalysis
   inherits from edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function computeBlockExceptionSet(BasicBlock,TypeFrame) in line 710
      22 lines of code
      2 parameters
      2 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses function computeThrownExceptionTypes(BasicBlock,@CheckForNull InstructionHandle,TypeFrame) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function createExceptionSet() defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
      uses function addExplicit(ObjectType) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function createFact() defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function copy(TypeFrame,TypeFrame) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses function CachedExceptionSet(TypeFrame,ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable thrownExceptionSetMap defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function computeEdgeExceptionSet(Edge,ExceptionSet) in line 749
      68 lines of code
      2 parameters
      11 conditional paths
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function createExceptionSet() defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable UNHANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function clear() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getExceptionGen() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function iterator() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function computeThrownExceptionTypes(BasicBlock,@CheckForNull InstructionHandle,TypeFrame) in line 425
      60 lines of code
      3 parameters
      11 conditional paths
      uses variable FORCE_ACCURATE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable ACCURATE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses function getCachedExceptionSet(BasicBlock) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function isUpToDate(TypeFrame) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable cfg defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
      uses function computeBlockExceptionSet(BasicBlock,TypeFrame) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function setEdgeExceptionSet(Edge,ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses function getExceptionSet() defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function duplicate() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function computeEdgeExceptionSet(Edge,ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function computeThrownExceptionTypes(BasicBlock) in line 825
      100 lines of code
      1 parameters
      14 conditional paths
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function createExceptionSet() defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
      uses function addImplicit(ObjectType) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable ERROR_TYPE defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function clear() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function addExplicit(ObjectType) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function addAll(ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function getExceptionSet() defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable EXCEPTION_TYPE defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable RUNTIME_EXCEPTION_TYPE defined in edu::umd::cs::findbugs::ba::Hierarchy
   function copy(TypeFrame,TypeFrame) in line 350
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(Frame< Type >) defined in edu::umd::cs::findbugs::ba::type::TypeFrame
   function createFact() in line 290
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function getCachedExceptionSet(BasicBlock) in line 678
      19 lines of code
      1 parameters
      2 conditional paths
      uses variable thrownExceptionSetMap defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function createFact() defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function makeFactTop(TypeFrame) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function CachedExceptionSet(TypeFrame,ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function createExceptionSet() defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
   function getEdgeExceptionSet(Edge) in line 285
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable thrownExceptionSetMap defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getEdgeExceptionSet(Edge) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
   function handleInstanceOfBranch(TypeFrame,TypeFrame,Edge) in line 547
      102 lines of code
      3 parameters
      20 conditional paths
      uses variable instanceOfCheckMap defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function modifyFrame(FrameType,@Nullable FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function initEntryFact(TypeFrame) in line 294
      protection public
      54 lines of code
      1 parameters
      8 conditional paths
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses function setValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function isFactValid(TypeFrame) in line 360
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
   function makeFactTop(TypeFrame) in line 355
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::type::TypeFrame
   function meetInto(TypeFrame,Edge,TypeFrame) in line 486
      protection public
      60 lines of code
      3 parameters
      10 conditional paths
      uses function isExceptionHandler() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function modifyFrame(FrameType,@Nullable FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses function getExceptionGen() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable FORCE_ACCURATE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable ACCURATE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses function getCachedExceptionSet(BasicBlock) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getEdgeExceptionSet(Edge) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function handleInstanceOfBranch(TypeFrame,TypeFrame,Edge) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function mergeInto(FrameType,FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
   function mergeValues(TypeFrame,TypeFrame,int) in line 651
      17 lines of code
      3 parameters
      1 conditional paths
      uses variable typeMerger defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function mergeTypes(Type,Type) defined in edu::umd::cs::findbugs::ba::type::TypeMerger
   function same(TypeFrame,TypeFrame) in line 365
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function sameAs(Frame< ValueType >) defined in edu::umd::cs::findbugs::ba::Frame
   function setFieldStoreTypeDatabase(FieldStoreTypeDatabase) in line 274
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function setFieldStoreTypeDatabase(FieldStoreTypeDatabase) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function setValueNumberDataflow(ValueNumberDataflow) in line 262
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function setValueNumberDataflow(ValueNumberDataflow) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function transfer(BasicBlock,@CheckForNull InstructionHandle,TypeFrame,TypeFrame) in line 404
      protection public
      20 lines of code
      4 parameters
      3 conditional paths
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function startBasicBlock() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses function computeThrownExceptionTypes(BasicBlock,@CheckForNull InstructionHandle,TypeFrame) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable instanceOfCheckMap defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function isInstanceOfFollowedByBranch() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getInstanceOfValueNumber() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getInstanceOfType() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function transferInstruction(InstructionHandle,BasicBlock,TypeFrame) in line 370
      protection public
      29 lines of code
      3 parameters
      8 conditional paths
      uses variable typeTable defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable startOfLocalTypedVariables defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function setFrameAndLocation(FrameType,Location) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function analyzeInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function TypeAnalysis(Method,MethodGen,CFG,DepthFirstSearch,TypeMerger,TypeFrameModelingVisitor,RepositoryLookupFailureCallback,ExceptionSetFactory) in line 190
      protection public
      29 lines of code
      8 parameters
      7 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable typeTable defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable startOfLocalTypedVariables defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable typeMerger defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function TypeAnalysis(Method,MethodGen,CFG,DepthFirstSearch,TypeMerger,RepositoryLookupFailureCallback,ExceptionSetFactory) in line 230
      protection public
      7 lines of code
      7 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses variable typeMerger defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function TypeAnalysis(Method,MethodGen,CFG,DepthFirstSearch,RepositoryLookupFailureCallback,ExceptionSetFactory) in line 247
      protection public
      7 lines of code
      6 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   variable cfg in line 167
   variable DEBUG in line 91
      protection public
   variable exceptionSetFactory in line 174
   variable FORCE_ACCURATE_EXCEPTIONS in line 96
      protection public
   variable instanceOfCheckMap in line 176
   variable lookupFailureCallback in line 173
   variable method in line 166
   variable methodGen in line 165
   variable startOfLocalTypedVariables in line 171
   variable thrownExceptionSetMap in line 172
   variable typeMerger in line 168
   variable typeTable in line 170
   variable valueNumberDataflow in line 175
   variable visitor in line 169
module edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
   function getEdgeExceptionSet(Edge) in line 128
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable edgeExceptionMap defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function createExceptionSet() defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
   function getExceptionSet() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
   function isUpToDate(TypeFrame) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
   function setEdgeExceptionSet(Edge,ExceptionSet) in line 124
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable edgeExceptionMap defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
   function CachedExceptionSet(TypeFrame,ExceptionSet) in line 110
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
   variable edgeExceptionMap in line 108
   variable exceptionSet in line 107
   variable result in line 106
module edu::umd::cs::findbugs::ba::type::TypeAnalysis::InstanceOfCheck
   function getType() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getValueNumber() in line 153
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/type/TypeDataflow.java
module edu::umd::cs::findbugs::ba::type::TypeDataflow
   inherits from edu::umd::cs::findbugs::ba::Dataflow
   function getEdgeExceptionSet(Edge) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function getLocationAndFactForInstruction(int) in line 49
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getLocationsContainingInstructionWithOffset(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable location defined in edu::umd::cs::findbugs::ba::type::TypeDataflow::LocationAndFactPair
      uses variable frame defined in edu::umd::cs::findbugs::ba::type::TypeDataflow::LocationAndFactPair
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
   function TypeDataflow(CFG,TypeAnalysis) in line 41
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable analysis defined in edu::umd::cs::findbugs::ba::Dataflow
module edu::umd::cs::findbugs::ba::type::TypeDataflow::LocationAndFactPair
   variable frame in line 33
      protection public
   variable location in line 32
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/type/TypeFrame.java
module edu::umd::cs::findbugs::ba::type::TypeFrame
   inherits from edu::umd::cs::findbugs::ba::Frame
   function clearExactSet() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exactTypeSet defined in edu::umd::cs::findbugs::ba::type::TypeFrame
   function copyFrom(Frame< Type >) in line 84
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function clearExactSet() defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function TypeFrame(int) defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses variable exactTypeSet defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function copyFrom(Frame< ValueType >) defined in edu::umd::cs::findbugs::ba::Frame
   function getBottomType() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDoubleExtraType() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLongExtraType() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNullType() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTopType() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isExact(int) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable exactTypeSet defined in edu::umd::cs::findbugs::ba::type::TypeFrame
   function popValue() in line 155
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable exactTypeSet defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function getStackLocation(int) defined in edu::umd::cs::findbugs::ba::Frame
   function pushValue(Type) in line 135
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable exactTypeSet defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function getStackLocation(int) defined in edu::umd::cs::findbugs::ba::Frame
   function setExact(int,boolean) in line 54
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable exactTypeSet defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function isExact(int) defined in edu::umd::cs::findbugs::ba::type::TypeFrame
   function setTop() in line 78
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function clearExactSet() defined in edu::umd::cs::findbugs::ba::type::TypeFrame
   function toString() in line 162
      protection public
      32 lines of code
      0 parameters
      9 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumLocals() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isExact(int) defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function valueToString(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
   function valueToString(Type) in line 95
      3 lines of code
      1 parameters
      1 conditional paths
   function TypeFrame(int) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable numLocals defined in edu::umd::cs::findbugs::ba::Frame
   variable exactTypeSet in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/type/TypeFrameModelingVisitor.java
module edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   inherits from org::apache::bcel::Constants
   inherits from edu::umd::cs::findbugs::ba::Debug
   function analyzeInstruction(Instruction) in line 150
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function consumeStack(Instruction) in line 171
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function getDefaultValue() in line 142
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInstanceOfType() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceOfType defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function getInstanceOfValueNumber() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceOfValueNumber defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function handleLoadInstruction(LoadInstruction) in line 523
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function setTopOfStackIsExact() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function handleStoreInstruction(StoreInstruction) in line 501
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isTopOfStackExact() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function handleToArray(InvokeInstruction) in line 469
      30 lines of code
      1 parameters
      5 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isCollection(ReferenceType) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushReturnType(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function isCollection(ReferenceType) in line 541
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable ENABLE_SUBTYPES2 defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable COLLECTION_TYPE defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function isInstanceOfFollowedByBranch() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function isTopOfStackExact() in line 1095
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function modelFieldLoad(FieldInstruction) in line 301
      protection public
      56 lines of code
      1 parameters
      10 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable database defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getProperty(KeyType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses function getFieldDescriptor() defined in edu::umd::cs::findbugs::ba::XField
      uses variable fieldSummary defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getSummary(XField) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isNull() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
   function modelNormalInstruction(Instruction,int,int) in line 220
      protection public
      7 lines of code
      3 parameters
      3 conditional paths
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
   function pushReturnType(InvokeInstruction) in line 208
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function pushValue(Type) in line 193
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function setFieldStoreTypeDatabase(FieldStoreTypeDatabase) in line 137
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function setTopOfStackIsExact() in line 1090
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function setValueNumberDataflow(ValueNumberDataflow) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function startBasicBlock() in line 162
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceOfType defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable instanceOfValueNumber defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitAALOAD(AALOAD) in line 988
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitACONST_NULL(ACONST_NULL) in line 247
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitANEWARRAY(ANEWARRAY) in line 1072
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function setTopOfStackIsExact() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitARRAYLENGTH(ARRAYLENGTH) in line 982
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitATHROW(ATHROW) in line 242
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitBALOAD(BALOAD) in line 1008
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitBIPUSH(BIPUSH) in line 282
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitCALOAD(CALOAD) in line 1014
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitCHECKCAST(CHECKCAST) in line 551
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitD2F(D2F) in line 663
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitD2I(D2I) in line 669
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitD2L(D2L) in line 675
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDADD(DADD) in line 823
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDALOAD(DALOAD) in line 1020
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDCMPG(DCMPG) in line 651
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDCMPL(DCMPL) in line 645
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDCONST(DCONST) in line 252
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDDIV(DDIV) in line 912
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDMUL(DMUL) in line 888
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDNEG(DNEG) in line 964
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitDREM(DREM) in line 936
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDSUB(DSUB) in line 847
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDUP(DUP) in line 853
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isTopOfStackExact() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function setTopOfStackIsExact() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitF2D(F2D) in line 681
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitF2I(F2I) in line 687
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitF2L(F2L) in line 693
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFADD(FADD) in line 829
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFALOAD(FALOAD) in line 1026
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFCMPG(FCMPG) in line 639
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFCMPL(FCMPL) in line 633
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFCONST(FCONST) in line 257
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFDIV(FDIV) in line 918
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFMUL(FMUL) in line 894
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFNEG(FNEG) in line 968
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitFREM(FREM) in line 942
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFSUB(FSUB) in line 870
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitGETFIELD(GETFIELD) in line 297
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function modelFieldLoad(FieldInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitGETSTATIC(GETSTATIC) in line 292
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function modelFieldLoad(FieldInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitI2B(I2B) in line 699
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitI2C(I2C) in line 705
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitI2D(I2D) in line 711
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitI2F(I2F) in line 717
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitI2L(I2L) in line 723
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitI2S(I2S) in line 729
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitIADD(IADD) in line 835
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIALOAD(IALOAD) in line 1032
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIAND(IAND) in line 751
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitICONST(ICONST) in line 262
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIDIV(IDIV) in line 924
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIFEQ(IFEQ) in line 1115
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIFGT(IFGT) in line 1122
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIFLE(IFLE) in line 1129
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIFNE(IFNE) in line 1136
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIFNONNULL(IFNONNULL) in line 611
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instanceOfValueNumber defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instanceOfType defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIFNULL(IFNULL) in line 589
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instanceOfValueNumber defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instanceOfType defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIINC(IINC) in line 960
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitIMUL(IMUL) in line 900
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitINEG(INEG) in line 972
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitINSTANCEOF(INSTANCEOF) in line 564
      protection public
      23 lines of code
      1 parameters
      5 conditional paths
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable instanceOfValueNumber defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instanceOfType defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitINVOKEINTERFACE(INVOKEINTERFACE) in line 380
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function handleToArray(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushReturnType(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitINVOKESPECIAL(INVOKESPECIAL) in line 374
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushReturnType(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitINVOKESTATIC(INVOKESTATIC) in line 359
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushReturnType(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitINVOKEVIRTUAL(INVOKEVIRTUAL) in line 387
      protection public
      81 lines of code
      1 parameters
      17 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getClassName(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberDataflow
      uses variable instanceOfValueNumber defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instanceOfType defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function handleToArray(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushReturnType(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIOR(IOR) in line 763
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIREM(IREM) in line 948
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitISHL(ISHL) in line 811
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitISHR(ISHR) in line 787
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitISUB(ISUB) in line 876
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIUSHR(IUSHR) in line 793
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIXOR(IXOR) in line 775
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitJSR(JSR) in line 1101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitJSR_W(JSR_W) in line 1106
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitL2D(L2D) in line 733
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitL2F(L2F) in line 739
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitL2I(L2I) in line 745
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLADD(LADD) in line 841
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLALOAD(LALOAD) in line 1038
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLAND(LAND) in line 757
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLCMP(LCMP) in line 657
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLCONST(LCONST) in line 267
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLDC(LDC) in line 272
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitLDC2_W(LDC2_W) in line 277
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitLDIV(LDIV) in line 930
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLMUL(LMUL) in line 906
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLNEG(LNEG) in line 978
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitLOR(LOR) in line 769
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLREM(LREM) in line 954
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLSHL(LSHL) in line 817
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLSHR(LSHR) in line 799
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLSUB(LSUB) in line 882
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLUSHR(LUSHR) in line 805
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLXOR(LXOR) in line 781
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitMULTIANEWARRAY(MULTIANEWARRAY) in line 1082
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function setTopOfStackIsExact() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitNEW(NEW) in line 1052
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function setTopOfStackIsExact() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitNEWARRAY(NEWARRAY) in line 1062
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function setTopOfStackIsExact() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitRET(RET) in line 1111
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitSALOAD(SALOAD) in line 1044
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitSIPUSH(SIPUSH) in line 287
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function TypeFrameModelingVisitor(ConstantPoolGen) in line 78
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable fieldSummary defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   variable COLLECTION_TYPE in line 62
   variable database in line 71
   variable fieldSummary in line 70
   variable instanceOfFollowedByBranch in line 67
   variable instanceOfType in line 68
   variable instanceOfValueNumber in line 69
   variable valueNumberDataflow in line 64
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/type/TypeMerger.java
module edu::umd::cs::findbugs::ba::type::TypeMerger
   function mergeTypes(Type,Type) in line 42
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/UnresolvedXField.java
module edu::umd::cs::findbugs::ba::UnresolvedXField
   inherits from edu::umd::cs::findbugs::ba::AbstractField
   function compareTo(Object) in line 59
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getAnnotation(ClassDescriptor) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getAnnotationDescriptors() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAnnotations() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getContainingScope() in line 91
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getElementType() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSourceSignature() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isDeprecated() in line 105
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function UnresolvedXField(@DottedClassName String,String,String,int) in line 40
      8 lines of code
      4 parameters
      3 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable DEBUG_UNRESOLVED defined in edu::umd::cs::findbugs::ba::XFactory
   function UnresolvedXField(FieldDescriptor) in line 48
      8 lines of code
      1 parameters
      3 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable DEBUG_UNRESOLVED defined in edu::umd::cs::findbugs::ba::XFactory
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/UnresolvedXMethod.java
module edu::umd::cs::findbugs::ba::UnresolvedXMethod
   inherits from edu::umd::cs::findbugs::ba::AbstractMethod
   function compareTo(Object) in line 46
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function getAnnotation(ClassDescriptor) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getAnnotationDescriptors() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAnnotations() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getContainingScope() in line 100
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function getElementType() in line 95
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getParameterAnnotation(int,ClassDescriptor) in line 77
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getParameterAnnotationDescriptors(int) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getParameterAnnotations(int) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSourceSignature() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getThrownExceptions() in line 111
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function isAbstract() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isDeprecated() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isReturnTypeReferenceType() in line 37
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function isStub() in line 165
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function isSynthetic() in line 137
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isUnconditionalThrower() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isUnsupported() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isVarArgs() in line 149
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function usesConcurrency() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function UnresolvedXMethod(@DottedClassName String,String,String,int) in line 22
      6 lines of code
      4 parameters
      1 conditional paths
   function UnresolvedXMethod(MethodDescriptor) in line 28
      6 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/URLClassPath.java
module edu::umd::cs::findbugs::ba::URLClassPath
   inherits from java::io::Serializable
   function addURL(String) in line 263
      protection public
      33 lines of code
      1 parameters
      7 conditional paths
      uses function getURLProtocol(String) defined in edu::umd::cs::findbugs::ba::URLClassPath
      uses function getFileExtension(String) defined in edu::umd::cs::findbugs::ba::URLClassPath
      uses function isArchiveExtension(String) defined in edu::umd::cs::findbugs::ba::URLClassPath
      uses variable entryList defined in edu::umd::cs::findbugs::ba::URLClassPath
   function close() in line 405
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable entryList defined in edu::umd::cs::findbugs::ba::URLClassPath
   function getClassPath() in line 301
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable entryList defined in edu::umd::cs::findbugs::ba::URLClassPath
   function getFileExtension(String) in line 432
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function getInputStreamForResource(String) in line 320
      36 lines of code
      1 parameters
      6 conditional paths
      uses variable entryList defined in edu::umd::cs::findbugs::ba::URLClassPath
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function getURLProtocol(String) in line 417
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable knownURLProtocolSet defined in edu::umd::cs::findbugs::FindBugs
   function isArchiveExtension(String) in line 446
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ARCHIVE_EXTENSION_SET defined in edu::umd::cs::findbugs::util::Archive
   function lookupClass(String) in line 364
      protection public
      37 lines of code
      1 parameters
      6 conditional paths
      uses variable classesThatCantBeFound defined in edu::umd::cs::findbugs::ba::URLClassPath
      uses function getInputStreamForResource(String) defined in edu::umd::cs::findbugs::ba::URLClassPath
   function URLClassPath() in line 249
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable classesThatCantBeFound in line 356
   variable entryList in line 243
   variable serialVersionUID in line 50
module edu::umd::cs::findbugs::ba::URLClassPath::Entry
   function close() in line 74
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getURL() in line 69
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function openStream(String) in line 64
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::URLClassPath::LocalArchiveEntry
   inherits from edu::umd::cs::findbugs::ba::URLClassPath::Entry
   function close() in line 111
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getURL() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function openStream(String) in line 97
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function LocalArchiveEntry(String) in line 84
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
   variable zipFile in line 82
module edu::umd::cs::findbugs::ba::URLClassPath::LocalDirectoryEntry
   inherits from edu::umd::cs::findbugs::ba::URLClassPath::Entry
   function close() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getURL() in line 152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function openStream(String) in line 142
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function LocalDirectoryEntry(String) in line 133
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   variable dirName in line 125
module edu::umd::cs::findbugs::ba::URLClassPath::RemoteArchiveEntry
   inherits from edu::umd::cs::findbugs::ba::URLClassPath::Entry
   function close() in line 198
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getURL() in line 194
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function openStream(String) in line 181
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
   function RemoteArchiveEntry(URL) in line 174
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable remoteArchiveURL in line 168
module edu::umd::cs::findbugs::ba::URLClassPath::RemoteDirectoryEntry
   inherits from edu::umd::cs::findbugs::ba::URLClassPath::Entry
   function close() in line 237
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getURL() in line 233
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function openStream(String) in line 221
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function RemoteDirectoryEntry(URL) in line 214
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable remoteDirURL in line 208
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/URLClassPathRepository.java
module edu::umd::cs::findbugs::ba::URLClassPathRepository
   inherits from org::apache::bcel::Repository
   function addURL(String) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable urlClassPath defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function addURL(String) defined in edu::umd::cs::findbugs::ba::URLClassPath
   function clear() in line 158
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function dumpStack() defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses variable nameToClassMap defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function destroy() in line 67
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable nameToClassMap defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses variable urlClassPath defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function close() defined in edu::umd::cs::findbugs::ba::URLClassPath
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function dumpStack() in line 112
      3 lines of code
      0 parameters
      1 conditional paths
   function findClass(@NonNull String) in line 119
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable nameToClassMap defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function getClassPath() in line 169
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable urlClassPath defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function getClassPath() defined in edu::umd::cs::findbugs::ba::URLClassPath
   function loadClass(@NonNull String) in line 133
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function findClass(@NonNull String) defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function dumpStack() defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses variable urlClassPath defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function lookupClass(String) defined in edu::umd::cs::findbugs::ba::URLClassPath
      uses function storeClass(JavaClass) defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function loadClass(Class) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function loadClass(@NonNull String) defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function removeClass(JavaClass) in line 104
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable nameToClassMap defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function dumpStack() defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function storeClass(JavaClass) in line 87
      protection public
      13 lines of code
      1 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses variable nameToClassMap defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function dumpStack() defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function URLClassPathRepository() in line 59
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG in line 52
      protection public
   variable nameToClassMap in line 56
   variable serialVersionUID in line 54
   variable urlClassPath in line 57
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/vna/AvailableLoad.java
module edu::umd::cs::findbugs::ba::vna::AvailableLoad
   inherits from Comparable
   function compareTo(AvailableLoad) in line 90
      protection public
      13 lines of code
      1 parameters
      5 conditional paths
      uses variable field defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses variable reference defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function compareTo(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function equals(Object) in line 110
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function AvailableLoad(XField) defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses variable reference defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable field defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   function getField() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable field defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   function getReference() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reference defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   function hashCode() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reference defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable field defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   function matchesReference(ValueNumber) in line 75
      protection public
      5 lines of code
      1 parameters
      3 conditional paths
      uses variable reference defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function toString() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reference defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable field defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   function AvailableLoad(XField) in line 48
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function AvailableLoad(ValueNumber,XField) in line 59
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable reference defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses variable field defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   variable field in line 41
   variable reference in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/vna/LoadedFieldSet.java
module edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function addLoad(InstructionHandle,XField) in line 99
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getLoadStoreCount(XField) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses variable handleToFieldMap defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses variable loadHandleSet defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function addStore(InstructionHandle,XField) in line 111
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getLoadStoreCount(XField) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses variable handleToFieldMap defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function getField(InstructionHandle) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable handleToFieldMap defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function getLoadStoreCount(XField) in line 84
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable loadStoreCountMap defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function instructionIsLoad(InstructionHandle) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable loadHandleSet defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function isLoaded(XField) in line 135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLoadStoreCount(XField) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function LoadedFieldSet(MethodGen) in line 71
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   variable handleToFieldMap in line 62
   variable loadHandleSet in line 63
   variable loadStoreCountMap in line 61
module edu::umd::cs::findbugs::ba::vna::LoadedFieldSet::LoadStoreCount
   function getLoadCount() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStoreCount() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/vna/MergeTree.java
module edu::umd::cs::findbugs::ba::vna::MergeTree
   function getInputSet(ValueNumber) in line 73
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable outputToInputMap defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function getTransitiveInputSet(ValueNumber) in line 92
      protection public
      36 lines of code
      1 parameters
      9 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getInputSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses function getNumValuesAllocated() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function forNumber(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function mapInputToOutput(ValueNumber,ValueNumber) in line 57
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getInputSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::vna::MergeTree
   function MergeTree(ValueNumberFactory) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::MergeTree
   variable DEBUG in line 36
      protection public
   variable factory in line 38
   variable outputToInputMap in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumber.java
module edu::umd::cs::findbugs::ba::vna::ValueNumber
   inherits from Comparable
   function compareTo(ValueNumber) in line 145
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function createValueNumber(int,int) in line 47
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function ValueNumber(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function createValueNumber(int) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createValueNumber(int,int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function equals(Object) in line 139
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function ValueNumber(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function getFlags() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumber() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasFlag(int) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setFlag(int) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFlags(int) in line 115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 129
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
   function ValueNumber(int) in line 98
      4 lines of code
      1 parameters
      1 conditional paths
   function ValueNumber(int,int) in line 102
      4 lines of code
      2 parameters
      1 conditional paths
   variable ARRAY_VALUE in line 85
      protection public
   variable CONSTANT_CLASS_OBJECT in line 87
      protection public
   variable CONSTANT_VALUE in line 91
      protection public
   variable PHI_NODE in line 89
      protection public
   variable RETURN_VALUE in line 83
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberAnalysis.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   inherits from edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   function compactValueNumbers(Dataflow< ValueNumberFrame, ValueNumberAnalysis >) in line 335
      protection public
      27 lines of code
      1 parameters
      5 conditional paths
      uses function ValueCompacter(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function getNumValuesAllocated() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function factIterator() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function markFrameValues(ValueNumberFrame,ValueCompacter) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function compact(int[],int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable discovered defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
      uses variable numValuesUsed defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function createFact() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function factIterator() in line 285
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factAtLocationMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function getClassName(ValueNumber) in line 413
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function getClassName(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function getClassObjectValue(String) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable visitor defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function getClassObjectValue(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function getEntryValue(int) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable entryLocalValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function getEntryValueForParameter(int) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getEntryValue(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function getExceptionValueNumber(BasicBlock) in line 404
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable exceptionHandlerValueNumberMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function getFactAfterLocation(Location) in line 263
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable TRACE defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses variable factAfterLocationMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function createFact() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function makeFactTop(FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   function getFactAtLocation(Location) in line 251
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable factAtLocationMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function createFact() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function makeFactTop(FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   function getFactory() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function getMergeTree() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mergeTree defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function getNumValuesAllocated() in line 113
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function getNumValuesAllocated() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function getThisValue() in line 121
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable thisValue defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function initEntryFact(ValueNumberFrame) in line 151
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function setValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable entryLocalValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function isThisValue(ValueNumber) in line 117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable thisValue defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function markFrameValues(ValueNumberFrame,ValueCompacter) in line 366
      15 lines of code
      2 parameters
      4 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function isUsed(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
      uses variable discovered defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
      uses function allocateValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
      uses function setUsed(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
   function meetInto(ValueNumberFrame,Edge,ValueNumberFrame) in line 178
      protection public
      21 lines of code
      3 parameters
      2 conditional paths
      uses function getExceptionValueNumber(BasicBlock) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function createFact() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function copyFrom(Frame< ValueNumber >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses function pushValue(ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses function mergeInto(ValueNumberFrame,ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function mergeInto(ValueNumberFrame,ValueNumberFrame) in line 201
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses variable mergeTree defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function mergeValues(ValueNumberFrame,ValueNumberFrame,int) in line 207
      5 lines of code
      3 parameters
      1 conditional paths
   function mergeValues(ValueNumberFrame,int,ValueNumber,ValueNumber) in line 213
      36 lines of code
      4 parameters
      5 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable PHI_NODE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable mergeTree defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function mapInputToOutput(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::MergeTree
   function setMergeTree(MergeTree) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mergeTree defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function transferInstruction(InstructionHandle,BasicBlock,ValueNumberFrame) in line 162
      protection public
      15 lines of code
      3 parameters
      1 conditional paths
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function copy(FrameType,FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses variable visitor defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function setFrameAndLocation(FrameType,Location) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function setHandle(InstructionHandle) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function analyzeInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function ValueNumberAnalysis(MethodGen,DepthFirstSearch,LoadedFieldSet,RepositoryLookupFailureCallback) in line 69
      protection public
      29 lines of code
      4 parameters
      4 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable entryLocalValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   variable DEBUG in line 57
      protection public
   variable entryLocalValueList in line 62
   variable exceptionHandlerValueNumberMap in line 63
   variable factAfterLocationMap in line 66
   variable factAtLocationMap in line 65
   variable factory in line 60
   variable mergeTree in line 67
   variable methodGen in line 59
   variable thisValue in line 64
   variable TRACE in line 261
   variable visitor in line 61
module edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
   function allocateValue() in line 316
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable numValuesUsed defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
   function isUsed(int) in line 308
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable valuesUsed defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
   function setUsed(int) in line 312
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable valuesUsed defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
   function ValueCompacter(int) in line 295
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable valuesUsed defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
      uses variable numValuesUsed defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
      uses variable discovered defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
   variable discovered in line 293
      protection public
   variable numValuesUsed in line 292
      protection public
   variable valuesUsed in line 291
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberAnalysisFeatures.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
   variable REDUNDANT_LOAD_ELIMINATION in line 41
      protection public
   variable RLE_DEBUG in line 46
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberCache.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberCache
   function addOutputValues(Entry,ValueNumber[]) in line 128
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable entryToOutputMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache
   function lookupOutputValues(Entry) in line 112
      protection public
      6 lines of code
      1 parameters
      3 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache
      uses variable entryToOutputMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache
   variable DEBUG in line 39
   variable entryToOutputMap in line 103
module edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
   function equals(Object) in line 58
      protection public
      15 lines of code
      1 parameters
      6 conditional paths
      uses function Entry(InstructionHandle,ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
      uses variable inputValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
   function hashCode() in line 75
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
      uses variable inputValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function toString() in line 89
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
      uses variable inputValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
   function Entry(InstructionHandle,ValueNumber[]) in line 51
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
      uses variable inputValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
   variable cachedHashCode in line 48
   variable handle in line 46
      protection public
   variable inputValueList in line 47
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberDataflow.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberDataflow
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflow
   function getClassName(ValueNumber) in line 74
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getAnalysis() defined in Dataflow< Fact, AnalysisType >
   function getValueNumberToParamMap(Method) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getValueNumberToParamMap(String,boolean) in line 58
      protection public
      15 lines of code
      2 parameters
      2 conditional paths
      uses function getStartFact(BasicBlock) defined in Dataflow< Fact, AnalysisType >
      uses function getCFG() defined in Dataflow< Fact, AnalysisType >
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function ValueNumberDataflow(CFG,ValueNumberAnalysis) in line 35
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< Fact, AnalysisType >
      uses variable analysis defined in Dataflow< Fact, AnalysisType >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberFactory.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function compact(int[],int) in line 82
      protection public
      17 lines of code
      2 parameters
      4 conditional paths
      uses variable allocatedValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function createFreshValue() in line 49
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getNumValuesAllocated() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable allocatedValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function createFreshValue(int) in line 54
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getNumValuesAllocated() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable allocatedValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function forNumber(int) in line 62
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getNumValuesAllocated() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable allocatedValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function getClassName(ValueNumber) in line 116
      protection public
      8 lines of code
      1 parameters
      4 conditional paths
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable classObjectValueMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function getClassObjectValue(@DottedClassName String) in line 104
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable classObjectValueMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function getNumValuesAllocated() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable allocatedValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   variable allocatedValueList in line 43
   variable classObjectValueMap in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberFrame.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   inherits from edu::umd::cs::findbugs::ba::Frame
   inherits from edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
   function addAvailableLoad(AvailableLoad,@NonNull ValueNumber[]) in line 107
      protection public
      11 lines of code
      2 parameters
      4 conditional paths
      uses function getUpdateableAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getUpdateablePreviouslyKnownAs() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
   function assignAvailableLoadMap(ValueNumberFrame) in line 349
      12 lines of code
      1 parameters
      2 conditional paths
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function setAvailableLoadMap(Map< AvailableLoad, ValueNumber[]>) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function assignPreviouslyKnownAs(ValueNumberFrame) in line 362
      12 lines of code
      1 parameters
      2 conditional paths
      uses function getPreviouslyKnownAs() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function setPreviouslyKnownAs(Map< ValueNumber, AvailableLoad >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function availableLoadMapAsString() in line 66
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function copyFrom(Frame< ValueNumber >) in line 329
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable mergedValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function assignAvailableLoadMap(ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function assignPreviouslyKnownAs(ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function extractPackageName(String) in line 240
      3 lines of code
      1 parameters
      22 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function availableLoadMapAsString() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function setAvailableLoadMap(Map< AvailableLoad, ValueNumber[]>) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getUpdateableAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable PHI_NODE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getMergedLoads() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function getUpdateableMergedLoads() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function mapInputToOutput(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getPreviouslyKnownAs() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function assignPreviouslyKnownAs(ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getUpdateablePreviouslyKnownAs() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable mergedValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function fromMatchingFields(ValueNumber,ValueNumber) in line 445
      protection public
      16 lines of code
      2 parameters
      9 conditional paths
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getPreviouslyKnownAs() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function getField() defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function getReference() defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function contains(ValueType) defined in edu::umd::cs::findbugs::ba::Frame
   function fromMatchingLoads(ValueNumber,ValueNumber) in line 435
      protection public
      9 lines of code
      2 parameters
      5 conditional paths
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getPreviouslyKnownAs() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   function fuzzyMatch(ValueNumber,ValueNumber) in line 422
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function fromMatchingLoads(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function haveMatchingFlags(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function getAvailableLoad(AvailableLoad) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function getAvailableLoadMap() in line 494
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable availableLoadMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function getLoad(ValueNumber) in line 79
      protection public
      12 lines of code
      1 parameters
      6 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function getMergedLoads() in line 515
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mergedLoads defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function getPreviouslyKnownAs() in line 535
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable previouslyKnownAs defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function getUpdateableAvailableLoadMap() in line 497
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable availableLoadMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function getUpdateableMergedLoads() in line 518
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable mergedLoads defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function getUpdateablePreviouslyKnownAs() in line 556
      15 lines of code
      0 parameters
      3 conditional paths
      uses variable previouslyKnownAs defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function haveMatchingFlags(ValueNumber,ValueNumber) in line 466
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function killAllLoads() in line 148
      protection public
      15 lines of code
      0 parameters
      5 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable USE_WRITTEN_OUTSIDE_OF_CONSTRUCTOR defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function isWrittenOutsideOfConstructor(XField) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function killAvailableLoads(HashSet< AvailableLoad >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function killAllLoadsExceptFor(@CheckForNull ValueNumber) in line 163
      protection public
      13 lines of code
      1 parameters
      5 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function killAvailableLoads(HashSet< AvailableLoad >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function killAllLoadsOf(@CheckForNull ValueNumber) in line 181
      protection public
      16 lines of code
      1 parameters
      6 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable USE_WRITTEN_OUTSIDE_OF_CONSTRUCTOR defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function isWrittenOutsideOfConstructor(XField) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function killAvailableLoads(HashSet< AvailableLoad >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function killAvailableLoads(HashSet< AvailableLoad >) in line 230
      4 lines of code
      1 parameters
      2 conditional paths
      uses function removeAllKeys(Map< K, V >,Iterable< K >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getUpdateableAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function killLoadsOf(Set< XField >) in line 198
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function killAvailableLoads(HashSet< AvailableLoad >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function killLoadsOfField(XField) in line 129
      protection public
      12 lines of code
      1 parameters
      5 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function killAvailableLoads(HashSet< AvailableLoad >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function killLoadsWithSimilarName(String,String) in line 210
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function extractPackageName(String) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function killAvailableLoads(HashSet< AvailableLoad >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function removeAllKeys(Map< K, V >,Iterable< K >) in line 120
      4 lines of code
      2 parameters
      2 conditional paths
   function setAvailableLoadMap(Map< AvailableLoad, ValueNumber[]>) in line 487
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable availableLoadMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function setMergedLoads(Map< AvailableLoad, ValueNumber >) in line 508
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mergedLoads defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function setPreviouslyKnownAs(Map< ValueNumber, AvailableLoad >) in line 528
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable previouslyKnownAs defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function toString() in line 380
      protection public
      26 lines of code
      0 parameters
      5 conditional paths
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function valueToString(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable phiNodeForLoads defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function valueNumbersForLoads() in line 472
      protection public
      11 lines of code
      0 parameters
      5 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function valueToString(ValueNumber[]) in line 407
      14 lines of code
      1 parameters
      3 conditional paths
   function veryFuzzyMatch(ValueNumber,ValueNumber) in line 429
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function fromMatchingFields(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function haveMatchingFlags(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function ValueNumberFrame(int) in line 57
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable numLocals defined in edu::umd::cs::findbugs::ba::Frame
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function setAvailableLoadMap(Map< AvailableLoad, ValueNumber[]>) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function setMergedLoads(Map< AvailableLoad, ValueNumber >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function setPreviouslyKnownAs(Map< ValueNumber, AvailableLoad >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   variable availableLoadMap in line 52
   variable mergedLoads in line 53
   variable mergedValueList in line 51
   variable phiNodeForLoads in line 55
      protection public
   variable previouslyKnownAs in line 54
   variable USE_WRITTEN_OUTSIDE_OF_CONSTRUCTOR in line 142
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberFrameModelingVisitor.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::Debug
   inherits from edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
   function allocateValueNumberArray(int) in line 595
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable EMPTY_INPUT_VALUE_LIST defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function checkConsumedAndProducedValues(Instruction,ValueNumber[],ValueNumber[]) in line 186
      20 lines of code
      3 parameters
      5 conditional paths
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function doForwardSubstitution() in line 167
      18 lines of code
      0 parameters
      5 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable loadedFieldSet defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getField(InstructionHandle) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function isReferenceType() defined in edu::umd::cs::findbugs::ba::XField
      uses function isLoaded(XField) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function doRedundantLoadElimination() in line 140
      18 lines of code
      0 parameters
      5 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable loadedFieldSet defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getField(InstructionHandle) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function isReferenceType() defined in edu::umd::cs::findbugs::ba::XField
      uses function getLoadStoreCount(XField) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses function getLoadCount() defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet::LoadStoreCount
   function getDefaultValue() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function getOutputValues(ValueNumber[],int) in line 565
      3 lines of code
      2 parameters
      1 conditional paths
   function getOutputValues(ValueNumber[],int,int) in line 569
      20 lines of code
      3 parameters
      5 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable cache defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function lookupOutputValues(Entry) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache
      uses function allocateValueNumberArray(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function vlts(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function addOutputValues(Entry,ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache
   function killLoadsOfObjectsPassed(InvokeInstruction) in line 392
      26 lines of code
      1 parameters
      5 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable ANY_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getFieldsWritten(XMethod) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function allocateValueNumberArray(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function loadInstanceField(XField,Instruction) in line 617
      43 lines of code
      2 parameters
      8 conditional paths
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getOutputValues(ValueNumber[],int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getNumWordsProduced(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function vlts(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function pushOutputValues(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkConsumedAndProducedValues(Instruction,ValueNumber[],ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function loadStaticField(XField,Instruction) in line 667
      28 lines of code
      2 parameters
      6 conditional paths
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsProduced(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getOutputValues(ValueNumber[],int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable EMPTY_INPUT_VALUE_LIST defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkConsumedAndProducedValues(Instruction,ValueNumber[],ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function pushOutputValues(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function modelNormalInstruction(Instruction,int,int) in line 211
      protection public
      24 lines of code
      3 parameters
      4 conditional paths
      uses variable RETURN_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable ARRAY_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function popInputValues(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getOutputValues(ValueNumber[],int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkConsumedAndProducedValues(Instruction,ValueNumber[],ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function pushOutputValues(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function popInputValues(int) in line 536
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function allocateValueNumberArray(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function pushOutputValues(ValueNumber[]) in line 556
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function setHandle(InstructionHandle) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function storeInstanceField(XField,Instruction,boolean) in line 704
      37 lines of code
      3 parameters
      5 conditional paths
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function popInputValues(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function allocateValueNumberArray(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function pushOutputValues(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkConsumedAndProducedValues(Instruction,ValueNumber[],ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable EMPTY_INPUT_VALUE_LIST defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function storeStaticField(XField,Instruction,boolean) in line 750
      28 lines of code
      3 parameters
      5 conditional paths
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function popInputValues(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function pushOutputValues(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkConsumedAndProducedValues(Instruction,ValueNumber[],ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable EMPTY_INPUT_VALUE_LIST defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function visitCHECKCAST(CHECKCAST) in line 524
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGETFIELD(GETFIELD) in line 237
      protection public
      17 lines of code
      1 parameters
      5 conditional paths
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function doRedundantLoadElimination() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function loadInstanceField(XField,Instruction) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitGETSTATIC(GETSTATIC) in line 274
      protection public
      33 lines of code
      1 parameters
      8 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getClassObjectValue(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses function doRedundantLoadElimination() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function loadStaticField(XField,Instruction) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitIINC(IINC) in line 499
      protection public
      23 lines of code
      1 parameters
      3 conditional paths
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable cache defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function lookupOutputValues(Entry) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function addOutputValues(Entry,ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache
   function visitINVOKEINTERFACE(INVOKEINTERFACE) in line 441
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function killLoadsOfObjectsPassed(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitINVOKESPECIAL(INVOKESPECIAL) in line 433
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function killLoadsOfObjectsPassed(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitINVOKESTATIC(INVOKESTATIC) in line 325
      protection public
      66 lines of code
      1 parameters
      13 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable stringConstantMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getClassObjectValue(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable loadedFieldSet defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getField(InstructionHandle) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses function instructionIsLoad(InstructionHandle) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses function doRedundantLoadElimination() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function loadStaticField(XField,Instruction) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function loadInstanceField(XField,Instruction) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function doForwardSubstitution() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function storeStaticField(XField,Instruction,boolean) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function storeInstanceField(XField,Instruction,boolean) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function killLoadsOfObjectsPassed(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitINVOKEVIRTUAL(INVOKEVIRTUAL) in line 451
      protection public
      22 lines of code
      1 parameters
      4 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function killLoadsOfObjectsPassed(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitLDC(LDC) in line 475
      protection public
      22 lines of code
      1 parameters
      4 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getClassObjectValue(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable constantValueMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable CONSTANT_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable stringConstantMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitMONITORENTER(MONITORENTER) in line 419
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitPUTFIELD(PUTFIELD) in line 256
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function doForwardSubstitution() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function storeInstanceField(XField,Instruction,boolean) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitPUTSTATIC(PUTSTATIC) in line 309
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function doForwardSubstitution() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function storeStaticField(XField,Instruction,boolean) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function vlts(ValueNumber[]) in line 602
      8 lines of code
      1 parameters
      3 conditional paths
   function ValueNumberFrameModelingVisitor(MethodGen,ValueNumberFactory,ValueNumberCache,LoadedFieldSet,RepositoryLookupFailureCallback) in line 100
      protection public
      14 lines of code
      5 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable cache defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable loadedFieldSet defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   variable cache in line 79
   variable constantValueMap in line 82
   variable EMPTY_INPUT_VALUE_LIST in line 271
   variable handle in line 85
   variable loadedFieldSet in line 80
   variable lookupFailureCallback in line 84
   variable methodGen in line 77
   variable stringConstantMap in line 83
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberSourceInfo.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberSourceInfo
   abstract class
   function findAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame,@CheckForNull String) in line 51
      protection public
      20 lines of code
      5 parameters
      6 conditional paths
      uses function findLocalAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberSourceInfo
      uses function setDescription(String) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function isSignificant() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function findFieldAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberSourceInfo
      uses function setDescription(String) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function findFieldAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) in line 111
      protection public
      9 lines of code
      4 parameters
      2 conditional paths
      uses function findXFieldFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberSourceInfo
   function findLocalAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) in line 88
      protection public
      22 lines of code
      4 parameters
      5 conditional paths
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumLocals() defined in edu::umd::cs::findbugs::ba::Frame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function findRequiredAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame,@CheckForNull String) in line 80
      protection public
      7 lines of code
      5 parameters
      2 conditional paths
      uses function findAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame,@CheckForNull String) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberSourceInfo
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function findXFieldFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) in line 121
      protection public
      12 lines of code
      4 parameters
      3 conditional paths
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getField() defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/XClass.java
module edu::umd::cs::findbugs::ba::XClass
   inherits from Comparable
   inherits from edu::umd::cs::findbugs::ba::AccessibleEntity
   inherits from edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function findField(String,String,boolean) in line 116
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function findMatchingMethod(MethodDescriptor) in line 106
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function findMethod(String,String,boolean) in line 90
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function findMethod(MethodDescriptor) in line 98
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getAnnotation(ClassDescriptor) in line 80
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getAnnotationDescriptors() in line 78
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getImmediateEnclosingClass() in line 60
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getInterfaceDescriptorList() in line 51
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSource() in line 76
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSourceSignature() in line 121
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSuperclassDescriptor() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getXFields() in line 118
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getXMethods() in line 119
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function hasStubs() in line 124
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isAbstract() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isInterface() in line 65
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function usesConcurrency() in line 123
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/XFactory.java
module edu::umd::cs::findbugs::ba::XFactory
   function addCalledMethod(MethodDescriptor) in line 110
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable calledMethods defined in edu::umd::cs::findbugs::ba::XFactory
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
   function addEmptyArrayField(XField) in line 114
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable emptyArrays defined in edu::umd::cs::findbugs::ba::XFactory
   function addReflectiveClasses(ClassDescriptor) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reflectiveClasses defined in edu::umd::cs::findbugs::ba::XFactory
   function allFields() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fields defined in edu::umd::cs::findbugs::ba::XFactory
   function assertDottedClassName(@DottedClassName String) in line 256
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function assertSlashedClassName(@SlashedClassName String) in line 260
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function canonicalizeAll() in line 80
      protection public
      10 lines of code
      0 parameters
      5 conditional paths
      uses variable methods defined in edu::umd::cs::findbugs::ba::XFactory
      uses function canonicalize(MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable fields defined in edu::umd::cs::findbugs::ba::XFactory
   function canonicalizeString(String) in line 208
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function compare(E,E) in line 599
      protection public
      20 lines of code
      2 parameters
      4 conditional paths
   function createReferencedXField(DismantleBytecode) in line 396
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getOpcode() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function createXFieldUsingSlashedClassName(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRefFieldIsStatic() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function createReferencedXMethod(DismantleBytecode) in line 404
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function createXMethodUsingSlashedClassName(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getOpcode() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function createXField(@DottedClassName String,String,String,boolean) in line 378
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function createXField(FieldInstruction,ConstantPoolGen) in line 387
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function createXField(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXField(FieldAnnotation) in line 409
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createXField(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getFieldName() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getFieldSignature() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable isStatic defined in edu::umd::cs::findbugs::FieldAnnotation
   function createXField(JavaClass,Field) in line 413
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function createXField(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXField(String,Field) in line 426
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getExactXField(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
   function createXField(FieldDescriptor) in line 468
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable fields defined in edu::umd::cs::findbugs::ba::XFactory
      uses function resolveXField(FieldDescriptor) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXField(PreorderVisitor) in line 550
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function createXField(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXFieldUsingSlashedClassName(@SlashedClassName String,String,String,boolean) in line 362
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function createXField(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXMethod(String,Method) in line 222
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
   function createXMethod(@DottedClassName String,String,String,int) in line 233
      4 lines of code
      4 parameters
      1 conditional paths
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXMethod(JavaClass,Method) in line 248
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
   function createXMethod(@DottedClassName String,String,String,boolean) in line 289
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses function assertDottedClassName(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXMethod(MethodDescriptor) in line 297
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable methods defined in edu::umd::cs::findbugs::ba::XFactory
      uses function resolveXMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function canonicalize(MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function createXMethod(MethodAnnotation) in line 348
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getMethodSignature() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable isStatic defined in edu::umd::cs::findbugs::MethodAnnotation
   function createXMethod(InvokeInstruction,ConstantPoolGen) in line 519
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXMethod(PreorderVisitor) in line 535
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXMethod(MethodGen) in line 557
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXMethod(JavaClassAndMethod) in line 565
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function createXMethodUsingSlashedClassName(@SlashedClassName String,String,String,boolean) in line 273
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses function assertSlashedClassName(@SlashedClassName String) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
   function getCalledMethods() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable calledMethods defined in edu::umd::cs::findbugs::ba::XFactory
   function getDetailedSignature(XMethod) in line 199
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function getExactXField(@SlashedClassName String,String,String,boolean) in line 451
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getExactXField(@SlashedClassName String,Field) in line 457
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getExactXField(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
   function getExactXField(FieldDescriptor) in line 461
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable fields defined in edu::umd::cs::findbugs::ba::XFactory
   function getReflectiveClasses() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reflectiveClasses defined in edu::umd::cs::findbugs::ba::XFactory
   function getXClass(ClassDescriptor) in line 578
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function intern(XClass) in line 96
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function getXMethods() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable methods defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getXFields() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable fields defined in edu::umd::cs::findbugs::ba::XFactory
   function isCalled(XMethod) in line 120
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable calledMethods defined in edu::umd::cs::findbugs::ba::XFactory
   function isCalledDirectlyOrIndirectly(XMethod) in line 139
      protection public
      26 lines of code
      1 parameters
      7 conditional paths
      uses function isCalled(XMethod) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isPrivate() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
   function isCalledDirectlyOrIndirectly(@CheckForNull ClassDescriptor,XMethod) in line 172
      18 lines of code
      2 parameters
      6 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses function isCalled(XMethod) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function isCalledDirectlyOrIndirectly(XMethod) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
   function isEmptyArrayField(@CheckForNull XField) in line 117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable emptyArrays defined in edu::umd::cs::findbugs::ba::XFactory
   function isInterned(XMethod) in line 204
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
   function isReflectiveClass(ClassDescriptor) in line 133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reflectiveClasses defined in edu::umd::cs::findbugs::ba::XFactory
   function nameAndSignatureIsCalled(XMethod) in line 191
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable calledMethodSignatures defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getDetailedSignature(XMethod) defined in edu::umd::cs::findbugs::ba::XFactory
   function profile() in line 312
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable methods defined in edu::umd::cs::findbugs::ba::XFactory
      uses function profile() defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function resolveXField(FieldDescriptor) in line 478
      31 lines of code
      1 parameters
      9 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable fields defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
   function resolveXMethod(MethodDescriptor) in line 324
      23 lines of code
      1 parameters
      6 conditional paths
      uses variable methods defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function XFactory() in line 93
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable calledMethods in line 74
   variable calledMethodSignatures in line 77
   variable DEBUG_CIRCULARITY in line 385
      protection public
   variable DEBUG_UNRESOLVED in line 67
      protection public
   variable emptyArrays in line 75
   variable fields in line 72
   variable methods in line 70
   variable reflectiveClasses in line 69
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/XField.java
module edu::umd::cs::findbugs::ba::XField
   inherits from edu::umd::cs::findbugs::ba::ClassMember
   inherits from edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function getFieldDescriptor() in line 57
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isReferenceType() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isVolatile() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/XMethod.java
module edu::umd::cs::findbugs::ba::XMethod
   inherits from edu::umd::cs::findbugs::ba::ClassMember
   inherits from edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function getAnnotation(ClassDescriptor) in line 146
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getAnnotationDescriptors() in line 137
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getAnnotations() in line 155
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBridgeSignature() in line 84
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMethodDescriptor() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumParams() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getParameterAnnotation(int,ClassDescriptor) in line 119
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getParameterAnnotationDescriptors(int) in line 109
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getParameterAnnotations(int) in line 129
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getThrownExceptions() in line 59
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isAbstract() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isBridged() in line 79
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isNative() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isReturnTypeReferenceType() in line 100
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isStub() in line 74
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isSynchronized() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isUnconditionalThrower() in line 64
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isUnsupported() in line 89
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isVarArgs() in line 94
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function usesConcurrency() in line 69
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/XMethodParameter.java
module edu::umd::cs::findbugs::ba::XMethodParameter
   inherits from Comparable
   function compareTo(XMethodParameter) in line 54
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses variable parameter defined in edu::umd::cs::findbugs::ba::XMethodParameter
   function equals(Object) in line 44
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function XMethodParameter(XMethod,int) defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses variable parameter defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses variable method defined in edu::umd::cs::findbugs::ba::XMethodParameter
   function getMethod() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::XMethodParameter
   function getParameterNumber() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parameter defined in edu::umd::cs::findbugs::ba::XMethodParameter
   function hashCode() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses variable parameter defined in edu::umd::cs::findbugs::ba::XMethodParameter
   function toString() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parameter defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses variable method defined in edu::umd::cs::findbugs::ba::XMethodParameter
   function XMethodParameter(XMethod,int) in line 31
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses variable parameter defined in edu::umd::cs::findbugs::ba::XMethodParameter
   variable method in line 35
   variable parameter in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ba/ZipSourceFileDataSource.java
module edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
   inherits from edu::umd::cs::findbugs::ba::SourceFileDataSource
   function getFullFileName() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entryName defined in edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
   function open() in line 43
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable zipEntry defined in edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
      uses variable entryName defined in edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
      uses variable zipFile defined in edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
   function ZipSourceFileDataSource(ZipFile,String) in line 37
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable zipFile defined in edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
      uses variable entryName defined in edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
   variable entryName in line 34
   variable zipEntry in line 35
   variable zipFile in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/bcel/AnnotationDetector.java
module edu::umd::cs::findbugs::bcel::AnnotationDetector
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::UseAnnotationDatabase
   abstract class
   function getClassContext() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::bcel::AnnotationDetector
   function report() in line 51
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 37
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::bcel::AnnotationDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   variable classContext in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/bcel/BCELUtil.java
module edu::umd::cs::findbugs::bcel::BCELUtil
   abstract class
   function getAccessedFieldDescriptor(FieldInstruction,ConstantPoolGen) in line 78
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getCalledMethodDescriptor(InvokeInstruction,ConstantPoolGen) in line 62
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getClassDescriptor(JavaClass) in line 92
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getClassDescriptor(ObjectType) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getMethodDescriptor(JavaClass,Method) in line 49
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function preTiger(JavaClass) in line 103
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable JDK15_MAJOR defined in edu::umd::cs::findbugs::bcel::BCELUtil
      uses variable JDK15_MINOR defined in edu::umd::cs::findbugs::bcel::BCELUtil
   function throwClassNotFoundException(ClassDescriptor) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable JDK15_MAJOR in line 97
   variable JDK15_MINOR in line 98
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/bcel/CFGDetector.java
module edu::umd::cs::findbugs::bcel::CFGDetector
   inherits from edu::umd::cs::findbugs::Detector2
   abstract class
   function finishPass() in line 45
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function getDetectorClassName() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitClass(ClassDescriptor) in line 58
      protection public
      24 lines of code
      1 parameters
      4 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getMethodsInCallOrder() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function visitMethodCFG(MethodDescriptor,CFG) defined in edu::umd::cs::findbugs::bcel::CFGDetector
   function visitMethodCFG(MethodDescriptor,CFG) in line 91
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/bcel/OpcodeStackDetector.java
module edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   abstract class
   function afterOpcode(int) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function sawOpcode(int) defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function beforeOpcode(int) in line 47
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function precomputation(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isTop() defined in edu::umd::cs::findbugs::OpcodeStack
   function sawOpcode(int) in line 59
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitCode(Code) in line 39
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function resetForMethodEntry(final DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
   variable stack in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/bcel/PreorderDetector.java
module edu::umd::cs::findbugs::bcel::PreorderDetector
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   abstract class
   function getClassContext() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::bcel::PreorderDetector
   function report() in line 49
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 35
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::bcel::PreorderDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   variable classContext in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/BugAccumulator.java
module edu::umd::cs::findbugs::BugAccumulator
   function accumulateBug(BugInstance,SourceLineAnnotation) in line 63
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable performAccumulation defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable map defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable reporter defined in edu::umd::cs::findbugs::BugAccumulator
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function accumulateBug(BugInstance,BytecodeScanningDetector) in line 78
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function accumulateBug(BugInstance,ClassContext,Method,Location) in line 128
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function accumulateBug(BugInstance,ClassContext,MethodGen,String,Location) in line 140
      protection public
      6 lines of code
      5 parameters
      1 conditional paths
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function clearBugs() in line 117
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::BugAccumulator
   function locations(BugInstance) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::BugAccumulator
   function reportAccumulatedBugs() in line 96
      protection public
      17 lines of code
      0 parameters
      5 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable ROLE_ANOTHER_INSTANCE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable reporter defined in edu::umd::cs::findbugs::BugAccumulator
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function clearBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function uniqueBugs() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::BugAccumulator
   function BugAccumulator(BugReporter) in line 51
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable performAccumulation defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable MERGE_SIMILAR_WARNINGS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
   variable map in line 44
   variable performAccumulation in line 43
   variable reporter in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/BugAnnotation.java
module edu::umd::cs::findbugs::BugAnnotation
   inherits from Comparable
   inherits from edu::umd::cs::findbugs::XMLWriteableWithMessages
   inherits from java::io::Serializable
   inherits from Cloneable
   function accept(BugAnnotationVisitor) in line 44
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function clone() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function format(String,ClassAnnotation) in line 54
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getDescription() in line 60
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isSignificant() in line 72
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setDescription(String) in line 66
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function toString(ClassAnnotation) in line 74
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable MESSAGE_TAG in line 35
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/BugAnnotationUtil.java
module edu::umd::cs::findbugs::BugAnnotationUtil
   abstract class
   function writeXML(XMLOutput,String,BugAnnotation,XMLAttributeList,boolean) in line 42
      protection public
      26 lines of code
      5 parameters
      5 conditional paths
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable MESSAGE_TAG defined in edu::umd::cs::findbugs::BugAnnotation
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/BugAnnotationVisitor.java
module edu::umd::cs::findbugs::BugAnnotationVisitor
   function visitClassAnnotation(ClassAnnotation) in line 23
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitFieldAnnotation(FieldAnnotation) in line 25
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitIntAnnotation(IntAnnotation) in line 29
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitLocalVariableAnnotation(LocalVariableAnnotation) in line 33
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitMethodAnnotation(MethodAnnotation) in line 27
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitSourceLineAnnotation(SourceLineAnnotation) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitStringAnnotation(StringAnnotation) in line 31
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitTypeAnnotation(TypeAnnotation) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/BugAnnotationWithSourceLines.java
module edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   inherits from edu::umd::cs::findbugs::BugAnnotation
   abstract class
   function clone() in line 38
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getSourceFileName() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceFileName defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function getSourceLines() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceLines defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function setSourceLines(SourceLineAnnotation) in line 56
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceLines defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses variable sourceFileName defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function toString(ClassAnnotation) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function BugAnnotationWithSourceLines() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable sourceFileName in line 27
   variable sourceLines in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/BugCategory.java
module edu::umd::cs::findbugs::BugCategory
   inherits from Comparable
   function compareTo(BugCategory) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
   function equals(Object) in line 114
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function BugCategory(String,String,String,String) defined in edu::umd::cs::findbugs::BugCategory
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
   function getAbbrev() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCategory
   function getCategory() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
   function getDetailText() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detailText defined in edu::umd::cs::findbugs::BugCategory
   function getShortDescription() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable shortDescription defined in edu::umd::cs::findbugs::BugCategory
   function hashCode() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
   function setAbbrev(String) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCategory
   function setDetailText(String) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detailText defined in edu::umd::cs::findbugs::BugCategory
   function toString() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
      uses variable shortDescription defined in edu::umd::cs::findbugs::BugCategory
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCategory
      uses variable detailText defined in edu::umd::cs::findbugs::BugCategory
   function BugCategory(String,String,String,String) in line 41
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
      uses variable shortDescription defined in edu::umd::cs::findbugs::BugCategory
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCategory
      uses variable detailText defined in edu::umd::cs::findbugs::BugCategory
   function BugCategory(String,String) in line 54
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
      uses variable shortDescription defined in edu::umd::cs::findbugs::BugCategory
   variable abbrev in line 30
   variable category in line 28
   variable detailText in line 31
   variable shortDescription in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/BugCode.java
module edu::umd::cs::findbugs::BugCode
   inherits from Comparable
   function compareTo(BugCode) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCode
   function equals(Object) in line 87
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function BugCode(String,String) defined in edu::umd::cs::findbugs::BugCode
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCode
   function getAbbrev() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCode
   function getCWEid() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cweid defined in edu::umd::cs::findbugs::BugCode
   function getDescription() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::BugCode
   function hashCode() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCode
   function toString() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCode
   function BugCode(String,String) in line 43
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCode
      uses variable description defined in edu::umd::cs::findbugs::BugCode
   function BugCode(String,String,int) in line 49
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCode
      uses variable description defined in edu::umd::cs::findbugs::BugCode
      uses variable cweid defined in edu::umd::cs::findbugs::BugCode
   variable abbrev in line 32
   variable cweid in line 33
   variable description in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/BugCollection.java
module edu::umd::cs::findbugs::BugCollection
   inherits from Iterable
   function add(BugInstance) in line 160
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function add(BugInstance,boolean) in line 171
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function addAppVersion(AppVersion) in line 140
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addError(String) in line 190
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addError(AnalysisError) in line 197
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addMissingClass(String) in line 204
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function appVersionIterator() in line 150
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function clearAppVersions() in line 134
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function clearClassFeatures() in line 212
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function clearMissingClasses() in line 213
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEmptyCollectionWithMetadata() in line 287
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function findBug(String,String,int) in line 305
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function getAnalysisTimestamp() in line 102
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getAppVersionFromSequenceNumber(long) in line 109
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getCloud() in line 318
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCollection() in line 273
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCurrentAppVersion() in line 145
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getProject() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getProjectStats() in line 71
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getReleaseName() in line 66
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSequenceNumber() in line 128
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTimestamp() in line 83
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getWithMessages() in line 303
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isApplySuppressions() in line 308
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function iterator() in line 268
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function lookupFromUniqueId(String) in line 183
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function readXML(String) in line 220
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function readXML(@WillClose InputStream) in line 231
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reinitializeCloud() in line 321
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setAnalysisTimestamp(long) in line 90
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setAnalysisVersion(String) in line 97
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setApplySuppressions(boolean) in line 310
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setClassFeatureSet(ClassFeatureSet) in line 206
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setMinimalXML(boolean) in line 297
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setReleaseName(String) in line 60
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setRequestDatabaseCloud(boolean) in line 320
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setSequenceNumber(long) in line 117
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setTimestamp(long) in line 78
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setWithMessages(boolean) in line 292
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function toDocument() in line 280
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function writeEpilogue(XMLOutput) in line 210
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writePrologue(XMLOutput) in line 208
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writeXML(String) in line 239
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writeXML(@WillClose OutputStream) in line 248
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writeXML(@WillClose XMLOutput) in line 262
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable ANALYSIS_ERROR_ELEMENT_NAME in line 41
      protection public
   variable APP_CLASS_ELEMENT_NAME in line 48
      protection public
   variable CLASS_HASHES_ELEMENT_NAME in line 49
      protection public
   variable ERROR_ELEMENT_NAME in line 42
      protection public
   variable ERROR_EXCEPTION_ELEMENT_NAME in line 44
      protection public
   variable ERROR_MESSAGE_ELEMENT_NAME in line 43
      protection public
   variable ERROR_STACK_TRACE_ELEMENT_NAME in line 45
      protection public
   variable ERRORS_ELEMENT_NAME in line 40
      protection public
   variable HISTORY_ELEMENT_NAME in line 50
      protection public
   variable MISSING_CLASS_ELEMENT_NAME in line 46
      protection public
   variable PROJECT_ELEMENT_NAME in line 39
      protection public
   variable ROOT_ELEMENT_NAME in line 37
      protection public
   variable SRCMAP_ELEMENT_NAME in line 38
      protection public
   variable SUMMARY_HTML_ELEMENT_NAME in line 47
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/BugCollectionBugReporter.java
module edu::umd::cs::findbugs::BugCollectionBugReporter
   inherits from edu::umd::cs::findbugs::TextUIBugReporter
   inherits from edu::umd::cs::findbugs::ba::Debug
   function doReportBug(BugInstance) in line 81
      protection public
      5 lines of code
      1 parameters
      3 conditional paths
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkBugInstance(BugInstance) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function notifyObservers(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function finish() in line 98
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function getCloud() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function bugsPopulated() defined in edu::umd::cs::findbugs::cloud::Cloud
   function getBugCollection() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
   function getProject() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::BugCollectionBugReporter
   function getRealBugReporter() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function logError(String) in line 50
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function addError(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function logError(String,Throwable) in line 56
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function addError(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function observeClass(ClassDescriptor) in line 46
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function reportMissingClass(ClassNotFoundException) in line 71
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function addMissingClass(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function BugCollectionBugReporter(Project) in line 32
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function getProjectStats() defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::SortedBugCollection
   variable bugCollection in line 29
   variable project in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/BugDesignation.java
module edu::umd::cs::findbugs::BugDesignation
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   inherits from java::io::Serializable
   inherits from Comparable
   function cleanDirty() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dirty defined in edu::umd::cs::findbugs::BugDesignation
   function compareTo(BugDesignation) in line 217
      protection public
      21 lines of code
      1 parameters
      6 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
   function equals(Object) in line 212
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function compareTo(BugDesignation) defined in edu::umd::cs::findbugs::BugDesignation
   function getAnnotationText() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
   function getDesignationKey() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
   function getNonnullAnnotationText() in line 143
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
   function getTimestamp() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
   function getUser() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
   function hashCode() in line 201
      protection public
      10 lines of code
      0 parameters
      4 conditional paths
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
   function isDirty() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dirty defined in edu::umd::cs::findbugs::BugDesignation
   function merge(@CheckForNull BugDesignation) in line 176
      protection public
      24 lines of code
      1 parameters
      7 conditional paths
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
      uses variable dirty defined in edu::umd::cs::findbugs::BugDesignation
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::BugDesignation
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
   function setAnnotationText(String) in line 148
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
      uses variable dirty defined in edu::umd::cs::findbugs::BugDesignation
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
   function setDesignationKey(String) in line 114
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
      uses variable dirty defined in edu::umd::cs::findbugs::BugDesignation
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::BugDesignation
   function setTimestamp(long) in line 133
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
      uses variable dirty defined in edu::umd::cs::findbugs::BugDesignation
   function setUser(String) in line 126
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
   function toString() in line 50
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
   function writeXML(XMLOutput) in line 156
      protection public
      18 lines of code
      1 parameters
      5 conditional paths
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::BugDesignation
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
      uses function equals(Object) defined in edu::umd::cs::findbugs::BugDesignation
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
   function BugDesignation() in line 69
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function BugDesignation(String,long,String,String) in line 78
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
   function BugDesignation(BugDesignation) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
   variable annotationText in line 92
   variable designation in line 46
   variable dirty in line 58
   variable timestamp in line 88
   variable UNCLASSIFIED in line 41
      protection public
   variable user in line 66
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/BugInstance.java
module edu::umd::cs::findbugs::BugInstance
   inherits from Comparable
   inherits from edu::umd::cs::findbugs::XMLWriteableWithMessages
   inherits from java::io::Serializable
   inherits from Cloneable
   function add(@Nonnull BugAnnotation) in line 1882
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::BugInstance
      uses variable INVALID_HASH_CODE defined in edu::umd::cs::findbugs::BugInstance
   function addAnnotations(Collection<?extends BugAnnotation >) in line 863
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addCalledMethod(DismantleBytecode) in line 1348
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
   function addCalledMethod(String,String,String,boolean) in line 1361
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
   function addCalledMethod(ConstantPoolGen,InvokeInstruction) in line 1373
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
   function addCalledMethod(MethodGen,InvokeInstruction) in line 1390
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
   function addClass(String,String) in line 948
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addClass(@DottedClassName String) in line 961
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addClass(ClassNode) in line 973
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addClass(ClassDescriptor) in line 986
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addClass(JavaClass) in line 998
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
   function addClass(PreorderVisitor) in line 1009
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
   function addClassAndMethod(MethodDescriptor) in line 874
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getSlashedClassName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addClassAndMethod(XMethod) in line 879
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
   function addClassAndMethod(PreorderVisitor) in line 889
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addClassAndMethod(MethodAnnotation) in line 901
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addClassAndMethod(MethodGen,String) in line 914
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addClassAndMethod(JavaClass,Method) in line 928
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addEqualsMethodUsed(ClassDescriptor) in line 1067
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
   function addEqualsMethodUsed(@CheckForNull Collection< XMethod >) in line 1080
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_EQUALS_USED defined in edu::umd::cs::findbugs::MethodAnnotation
   function addField(String,String,String,boolean) in line 1115
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   function addField(String,String,String,int) in line 1129
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addField(PreorderVisitor) in line 1133
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addField(FieldAnnotation) in line 1143
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addField(FieldVariable) in line 1154
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function getFieldName() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function getFieldSig() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function addField(XField) in line 1174
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function addField(FieldDescriptor) in line 1183
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addFieldOrMethodValueSource(OpcodeStack.Item) in line 1964
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getFieldOrMethodValueSource(@CheckForNull OpcodeStack.Item) defined in edu::umd::cs::findbugs::BugInstance
   function addFoundAndExpectedType(Type,Type) in line 1054
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses variable EXPECTED_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
   function addFoundAndExpectedType(String,String) in line 1061
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses variable EXPECTED_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
   function addInt(int) in line 1428
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addMethod(String,String,String,boolean) in line 1251
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   function addMethod(String,String,String,int) in line 1266
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addMethod(MethodGen,String) in line 1281
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLinesForMethod(MethodAnnotation,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addMethod(JavaClass,Method) in line 1300
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
      uses function setSourceLines(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addMethod(JavaClassAndMethod) in line 1320
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function addMethod(PreorderVisitor) in line 1332
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLinesForMethod(MethodAnnotation,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addMethod(XMethod) in line 1401
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addMethod(MethodAnnotation) in line 1413
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addOptionalAnnotation(@CheckForNull BugAnnotation) in line 1874
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addOptionalAnnotation(@CheckForNull BugAnnotation,String) in line 1878
      protection public
      4 lines of code
      2 parameters
      2 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
   function addOptionalField(@CheckForNull XField) in line 1164
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addOptionalLocalVariable(DismantleBytecode,OpcodeStack.Item) in line 1228
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function addOptionalUniqueAnnotations(BugAnnotation...) in line 1969
      protection public
      6 lines of code
      1 parameters
      3 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addOptionalUniqueAnnotationsWithFallback(BugAnnotation,BugAnnotation...) in line 1975
      protection public
      8 lines of code
      2 parameters
      4 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addParameterAnnotation(int,String) in line 1438
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addInt(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
   function addProperty(BugProperty) in line 844
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable propertyListHead defined in edu::umd::cs::findbugs::BugInstance
   function addReferencedField(DismantleBytecode) in line 1198
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addReferencedField(FieldAnnotation) in line 1207
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addSomeSourceForTopTwoStackValues(ClassContext,Method,Location) in line 1895
      protection public
      11 lines of code
      3 parameters
      1 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getSomeSource(ClassContext,Method,Location,OpcodeStack,int) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalUniqueAnnotations(BugAnnotation...) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceForTopStackValue(ClassContext,Method,Location) in line 1907
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function getSourceForTopStackValue(ClassContext,Method,Location) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLine(SourceLineAnnotation) in line 1472
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLine(BytecodeScanningDetector,int) in line 1487
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLine(ClassContext,PreorderVisitor,int) in line 1506
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLine(ClassContext,MethodGen,String,@NonNull InstructionHandle) in line 1525
      protection public
      7 lines of code
      4 parameters
      2 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLine(ClassContext,MethodGen,String,InstructionHandle,InstructionHandle) in line 1543
      protection public
      13 lines of code
      5 parameters
      3 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLine(ClassContext,Method,Location) in line 1565
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function addSourceLine(MethodDescriptor,Location) in line 1576
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function addSourceLine(ClassContext,Method,InstructionHandle) in line 1595
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLine(BytecodeScanningDetector) in line 1652
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLineRange(BytecodeScanningDetector,int,int) in line 1614
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLineRange(ClassContext,PreorderVisitor,int,int) in line 1635
      protection public
      7 lines of code
      4 parameters
      2 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLinesForMethod(MethodAnnotation,SourceLineAnnotation) in line 2003
      11 lines of code
      2 parameters
      2 conditional paths
      uses function setSourceLines(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function addString(String) in line 1447
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addString(char) in line 1458
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSuperclass(PreorderVisitor) in line 1022
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
   function addType(String) in line 1042
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addType(Type) in line 1048
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addType(ClassDescriptor) in line 1097
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addTypeOfNamedClass(String) in line 1092
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addUnknownSourceLine(String,String) in line 1668
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addValueSource(OpcodeStack.Item,DismantleBytecode) in line 1953
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function addValueSource(OpcodeStack.Item,Method,int) in line 1957
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getValueSource(OpcodeStack.Item,Method,int) defined in edu::umd::cs::findbugs::BugInstance
   function addVisitedField(PreorderVisitor) in line 1219
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function annotationIterator() in line 515
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
   function annotationTextContainsWord(String) in line 662
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getTextAnnotationWords() defined in edu::umd::cs::findbugs::BugInstance
   function boundedPriority(int) in line 336
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable IGNORE_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function boundPriority() in line 172
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function boundedPriority(int) defined in edu::umd::cs::findbugs::BugInstance
   function clone() in line 177
      protection public
      20 lines of code
      0 parameters
      4 conditional paths
      uses function BugInstance(String,int) defined in edu::umd::cs::findbugs::BugInstance
      uses function clone() defined in edu::umd::cs::findbugs::BugInstance
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses variable propertyListHead defined in edu::umd::cs::findbugs::BugInstance
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function addProperty(BugProperty) defined in edu::umd::cs::findbugs::BugInstance
   function compareTo(BugInstance) in line 2051
      protection public
      23 lines of code
      1 parameters
      5 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
   function deleteProperty(String) in line 812
      protection public
      31 lines of code
      1 parameters
      6 conditional paths
      uses variable prev defined in edu::umd::cs::findbugs::BugInstance::BugPropertyIterator
      uses variable propertyListHead defined in edu::umd::cs::findbugs::BugInstance
      uses function getName() defined in edu::umd::cs::findbugs::BugProperty
   function describe(String) in line 1753
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
   function equals(Object) in line 2031
      protection public
      19 lines of code
      1 parameters
      7 conditional paths
      uses function BugInstance(String,int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
   function getAbbrev() in line 531
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
   function getAbridgedMessage() in line 1701
      protection public
      17 lines of code
      0 parameters
      3 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses function format(BugAnnotation[],ClassAnnotation) defined in edu::umd::cs::findbugs::FindBugsMessageFormat
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
   function getAnnotations() in line 522
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
   function getAnnotationText() in line 639
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses function getAnnotationText() defined in edu::umd::cs::findbugs::BugDesignation
   function getBugPattern() in line 260
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::I18N
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
   function getBugRank() in line 277
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCategoryAbbrev() in line 303
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategoryAbbrev() defined in edu::umd::cs::findbugs::BugPattern
   function getDetectorFactory() in line 2203
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detectorFactory defined in edu::umd::cs::findbugs::BugInstance
   function getFieldOrMethodValueSource(@CheckForNull OpcodeStack.Item) in line 1983
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses function setDescription(String) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable LOADED_FROM_ROLE defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable METHOD_RETURN_VALUE_OF defined in edu::umd::cs::findbugs::MethodAnnotation
   function getFirstVersion() in line 2088
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable firstVersion defined in edu::umd::cs::findbugs::BugInstance
   function getInstanceHash() in line 2156
      protection public
      15 lines of code
      0 parameters
      4 conditional paths
      uses variable instanceHash defined in edu::umd::cs::findbugs::BugInstance
      uses function getInstanceKey() defined in edu::umd::cs::findbugs::BugInstance
      uses variable DONT_HASH defined in edu::umd::cs::findbugs::BugInstance
   function getInstanceKey() in line 461
      protection public
      16 lines of code
      0 parameters
      3 conditional paths
      uses function getInstanceKeyNew() defined in edu::umd::cs::findbugs::BugInstance
      uses function getInstanceKeyOld() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMessageWithoutPrefix() defined in edu::umd::cs::findbugs::BugInstance
   function getInstanceKeyNew() in line 489
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
   function getInstanceKeyOld() in line 477
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses function isSignificant() defined in edu::umd::cs::findbugs::MethodAnnotation
   function getInstanceOccurrenceMax() in line 2199
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceOccurrenceMax defined in edu::umd::cs::findbugs::BugInstance
   function getInstanceOccurrenceNum() in line 2185
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceOccurrenceNum defined in edu::umd::cs::findbugs::BugInstance
   function getLastVersion() in line 2105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastVersion defined in edu::umd::cs::findbugs::BugInstance
   function getMessage() in line 1723
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function format(BugAnnotation[],ClassAnnotation) defined in edu::umd::cs::findbugs::FindBugsMessageFormat
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
   function getMessageWithoutPrefix() in line 1684
      protection public
      14 lines of code
      0 parameters
      2 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses function format(BugAnnotation[],ClassAnnotation) defined in edu::umd::cs::findbugs::FindBugsMessageFormat
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLongDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
   function getMessageWithPriorityType() in line 1739
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getPriorityTypeString() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
   function getMessageWithPriorityTypeAbbreviation() in line 1743
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getPriorityTypeAbbreviation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
   function getNonnullUserDesignation() in line 558
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
   function getPrimaryClass() in line 362
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function getPrimaryField() in line 380
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrimaryLocalVariableAnnotation() in line 411
      protection public
      6 lines of code
      0 parameters
      3 conditional paths
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
   function getPrimaryMethod() in line 374
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrimarySourceLineAnnotation() in line 424
      protection public
      24 lines of code
      0 parameters
      9 conditional paths
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses function getDescription() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function inspectPackageMemberSourceLines(PackageMemberAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
   function getPriority() in line 272
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
   function getPriorityAbbreviation() in line 326
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getPriorityString() defined in edu::umd::cs::findbugs::BugInstance
   function getPriorityString() in line 309
      protection public
      16 lines of code
      0 parameters
      5 conditional paths
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function getPriorityTypeAbbreviation() in line 297
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getPriorityAbbreviation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategoryAbbrev() defined in edu::umd::cs::findbugs::BugInstance
   function getPriorityTypeString() in line 285
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses function getPriorityString() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugCategoryDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
   function getProperty(String) in line 740
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function lookupProperty(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getValue() defined in edu::umd::cs::findbugs::BugProperty
   function getProperty(String,String) in line 754
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getProperty(String) defined in edu::umd::cs::findbugs::BugInstance
   function getSomeSource(ClassContext,Method,Location,OpcodeStack,int) in line 1917
      protection public
      25 lines of code
      5 parameters
      5 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getValueSource(OpcodeStack.Item,Method,int) defined in edu::umd::cs::findbugs::BugInstance
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
   function getSourceForTopStackValue(ClassContext,Method,Location) in line 1911
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getSomeSource(ClassContext,Method,Location,OpcodeStack,int) defined in edu::umd::cs::findbugs::BugInstance
   function getTextAnnotationWords() in line 669
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function getAnnotationText() defined in edu::umd::cs::findbugs::BugInstance
   function getType() in line 253
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
   function getUserDesignation() in line 549
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
   function getUserDesignationKey() in line 576
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::BugDesignation
      uses function getDesignationKey() defined in edu::umd::cs::findbugs::BugDesignation
   function getUserDesignationKeyIndex() in line 590
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getUserDesignationKeys() defined in edu::umd::cs::findbugs::I18N
      uses function getUserDesignationKey() defined in edu::umd::cs::findbugs::BugInstance
   function getUserName() in line 581
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses function getUser() defined in edu::umd::cs::findbugs::BugDesignation
   function getUserTimestamp() in line 585
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses function getTimestamp() defined in edu::umd::cs::findbugs::BugDesignation
   function getValueSource(OpcodeStack.Item,Method,int) in line 1943
      protection public
      9 lines of code
      3 parameters
      2 conditional paths
      uses function isNamed() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function getFieldOrMethodValueSource(@CheckForNull OpcodeStack.Item) defined in edu::umd::cs::findbugs::BugInstance
   function hashCode() in line 2016
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::BugInstance
      uses variable INVALID_HASH_CODE defined in edu::umd::cs::findbugs::BugInstance
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
   function inspectPackageMemberSourceLines(PackageMemberAnnotation) in line 508
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSourceLines() defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function isDead() in line 2109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastVersion defined in edu::umd::cs::findbugs::BugInstance
   function isExperimental() in line 354
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function isExperimental() defined in edu::umd::cs::findbugs::BugPattern
   function isInstanceHashConsistent() in line 2172
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable oldInstanceHash defined in edu::umd::cs::findbugs::BugInstance
      uses variable instanceHash defined in edu::umd::cs::findbugs::BugInstance
   function isIntroducedByChangeOfExistingClass() in line 2122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable introducedByChangeOfExistingClass defined in edu::umd::cs::findbugs::BugInstance
   function isRemovedByChangeOfPersistingClass() in line 2136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable removedByChangeOfPersistingClass defined in edu::umd::cs::findbugs::BugInstance
   function lookupProperty(String) in line 793
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable propertyListHead defined in edu::umd::cs::findbugs::BugInstance
      uses function getName() defined in edu::umd::cs::findbugs::BugProperty
   function lowerPriority() in line 343
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function boundedPriority(int) defined in edu::umd::cs::findbugs::BugInstance
   function lowerPriorityALot() in line 347
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function boundedPriority(int) defined in edu::umd::cs::findbugs::BugInstance
   function lowerPriorityIfDeprecated() in line 385
      protection public
      9 lines of code
      0 parameters
      5 conditional paths
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses function isDeprecated() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function lowerPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function getDescription() defined in edu::umd::cs::findbugs::BugAnnotation
   function propertyIterator() in line 764
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function raisePriority() in line 339
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function boundedPriority(int) defined in edu::umd::cs::findbugs::BugInstance
   function setAdjustExperimental(boolean) in line 242
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable adjustExperimental defined in edu::umd::cs::findbugs::BugInstance
   function setAnnotationText(String,@CheckForNull BugCollection) in line 623
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses function getNonnullUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAnnotationText() defined in edu::umd::cs::findbugs::BugDesignation
      uses function setAnnotationText(String) defined in edu::umd::cs::findbugs::BugDesignation
      uses function storeUserAnnotation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
   function setFirstVersion(long) in line 2078
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable firstVersion defined in edu::umd::cs::findbugs::BugInstance
      uses variable lastVersion defined in edu::umd::cs::findbugs::BugInstance
   function setInstanceHash(String) in line 2143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceHash defined in edu::umd::cs::findbugs::BugInstance
   function setInstanceOccurrenceMax(int) in line 2192
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceOccurrenceMax defined in edu::umd::cs::findbugs::BugInstance
   function setInstanceOccurrenceNum(int) in line 2178
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceOccurrenceNum defined in edu::umd::cs::findbugs::BugInstance
   function setIntroducedByChangeOfExistingClass(boolean) in line 2115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable introducedByChangeOfExistingClass defined in edu::umd::cs::findbugs::BugInstance
   function setLastVersion(long) in line 2095
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable lastVersion defined in edu::umd::cs::findbugs::BugInstance
      uses variable firstVersion defined in edu::umd::cs::findbugs::BugInstance
   function setOldInstanceHash(String) in line 2149
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable oldInstanceHash defined in edu::umd::cs::findbugs::BugInstance
   function setPriority(int) in line 332
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function boundedPriority(int) defined in edu::umd::cs::findbugs::BugInstance
   function setProperty(String,String) in line 775
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function lookupProperty(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function setValue(String) defined in edu::umd::cs::findbugs::BugProperty
      uses function addProperty(BugProperty) defined in edu::umd::cs::findbugs::BugInstance
   function setRemovedByChangeOfPersistingClass(boolean) in line 2129
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable removedByChangeOfPersistingClass defined in edu::umd::cs::findbugs::BugInstance
   function setUser(String) in line 647
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses function getNonnullUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function setUser(String) defined in edu::umd::cs::findbugs::BugDesignation
   function setUserAnnotationTimestamp(long) in line 651
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses function getNonnullUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::BugDesignation
   function setUserDesignation(BugDesignation) in line 539
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
   function setUserDesignationKey(String,@CheckForNull BugCollection) in line 598
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses function getNonnullUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getDesignationKey() defined in edu::umd::cs::findbugs::BugDesignation
      uses function setDesignationKey(String) defined in edu::umd::cs::findbugs::BugDesignation
      uses function storeUserAnnotation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
   function setUserDesignationKeyIndex(int,@CheckForNull BugCollection) in line 612
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function setUserDesignationKey(String,@CheckForNull BugCollection) defined in edu::umd::cs::findbugs::BugInstance
      uses function getUserDesignationKey(int) defined in edu::umd::cs::findbugs::I18N
   function toString() in line 1767
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getShortMessage(String) defined in edu::umd::cs::findbugs::I18N
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
   function writeXML(XMLOutput) in line 1775
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean,boolean) in line 1779
      protection public
      87 lines of code
      3 parameters
      17 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getInstanceHash() defined in edu::umd::cs::findbugs::BugInstance
      uses function getInstanceOccurrenceNum() defined in edu::umd::cs::findbugs::BugInstance
      uses function getInstanceOccurrenceMax() defined in edu::umd::cs::findbugs::BugInstance
      uses variable firstVersion defined in edu::umd::cs::findbugs::BugInstance
      uses variable lastVersion defined in edu::umd::cs::findbugs::BugInstance
      uses variable introducedByChangeOfExistingClass defined in edu::umd::cs::findbugs::BugInstance
      uses variable removedByChangeOfPersistingClass defined in edu::umd::cs::findbugs::BugInstance
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::BugInstance
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::BugDesignation
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses function toString() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMessageWithoutPrefix() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses function setSynthetic(boolean) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable propertyListHead defined in edu::umd::cs::findbugs::BugInstance
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::BugProperty
   function BugInstance(String,int) in line 153
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::BugInstance
      uses variable INVALID_HASH_CODE defined in edu::umd::cs::findbugs::BugInstance
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::I18N
      uses variable missingBugTypes defined in edu::umd::cs::findbugs::BugInstance
      uses function getPriorityAdjustment() defined in edu::umd::cs::findbugs::BugPattern
      uses variable adjustExperimental defined in edu::umd::cs::findbugs::BugInstance
      uses function isExperimental() defined in edu::umd::cs::findbugs::BugInstance
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function boundPriority() defined in edu::umd::cs::findbugs::BugInstance
   function BugInstance(Detector,String,int) in line 206
      protection public
      13 lines of code
      3 parameters
      3 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses variable detectorFactory defined in edu::umd::cs::findbugs::BugInstance
      uses function getFactoryByClassName(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getPriorityAdjustment() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function boundPriority() defined in edu::umd::cs::findbugs::BugInstance
   function BugInstance(Detector2,String,int) in line 228
      protection public
      14 lines of code
      3 parameters
      3 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses variable detectorFactory defined in edu::umd::cs::findbugs::BugInstance
      uses function getFactoryByClassName(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getDetectorClassName() defined in edu::umd::cs::findbugs::Detector2
      uses function getPriorityAdjustment() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function boundPriority() defined in edu::umd::cs::findbugs::BugInstance
   variable adjustExperimental in line 143
   variable annotationList in line 113
   variable cachedHashCode in line 114
   variable detectorFactory in line 121
   variable DONT_HASH in line 2152
   variable ELEMENT_NAME in line 1867
   variable firstVersion in line 128
   variable instanceHash in line 118
   variable instanceOccurrenceMax in line 120
   variable instanceOccurrenceNum in line 119
   variable introducedByChangeOfExistingClass in line 130
   variable INVALID_HASH_CODE in line 137
   variable lastVersion in line 129
   variable missingBugTypes in line 145
   variable oldInstanceHash in line 117
   variable priority in line 112
   variable propertyListHead in line 116
   variable removedByChangeOfPersistingClass in line 131
   variable serialVersionUID in line 109
   variable type in line 111
   variable USER_ANNOTATION_ELEMENT_NAME in line 1868
   variable userDesignation in line 115
module edu::umd::cs::findbugs::BugInstance::BugPropertyIterator
   inherits from java::util::Iterator
   function findNext() in line 727
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyListHead defined in edu::umd::cs::findbugs::BugInstance
   function hasNext() in line 694
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::BugInstance::BugPropertyIterator
   function next() in line 700
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::BugInstance::BugPropertyIterator
      uses variable prev defined in edu::umd::cs::findbugs::BugInstance::BugPropertyIterator
      uses variable removed defined in edu::umd::cs::findbugs::BugInstance::BugPropertyIterator
   function remove() in line 713
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses variable removed defined in edu::umd::cs::findbugs::BugInstance::BugPropertyIterator
      uses variable prev defined in edu::umd::cs::findbugs::BugInstance::BugPropertyIterator
      uses variable propertyListHead defined in edu::umd::cs::findbugs::BugInstance
   variable prev in line 688
   variable removed in line 689
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/BugPattern.java
module edu::umd::cs::findbugs::BugPattern
   inherits from Comparable
   function adjustPriority(int) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function compareTo(BugPattern) in line 195
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugPattern
   function equals(Object) in line 205
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function BugPattern(String,String,String,boolean,String,String,String) defined in edu::umd::cs::findbugs::BugPattern
      uses variable type defined in edu::umd::cs::findbugs::BugPattern
   function getAbbrev() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugPattern
   function getCategory() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugPattern
   function getCategoryAbbrev() in line 127
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function getBugCategory(String) defined in edu::umd::cs::findbugs::I18N
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugCategory
   function getCWEid() in line 214
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDetailHTML() in line 179
      protection public
      15 lines of code
      0 parameters
      2 conditional paths
      uses variable detailHTML defined in edu::umd::cs::findbugs::BugPattern
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses function getDetailText() defined in edu::umd::cs::findbugs::BugPattern
   function getDetailPlainText() in line 168
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable detailText defined in edu::umd::cs::findbugs::BugPattern
   function getDetailText() in line 161
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detailText defined in edu::umd::cs::findbugs::BugPattern
   function getLongDescription() in line 154
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable longDescription defined in edu::umd::cs::findbugs::BugPattern
   function getPriorityAdjustment() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getShortDescription() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable shortDescription defined in edu::umd::cs::findbugs::BugPattern
   function getType() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugPattern
   function hashCode() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugPattern
   function isDeprecated() in line 236
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable deprecated defined in edu::umd::cs::findbugs::BugPattern
   function isExperimental() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable experimental defined in edu::umd::cs::findbugs::BugPattern
   function toString() in line 219
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugPattern
      uses variable deprecated defined in edu::umd::cs::findbugs::BugPattern
   function BugPattern(String,String,String,boolean,String,String,String) in line 63
      protection public
      4 lines of code
      7 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugPattern
      uses variable abbrev defined in edu::umd::cs::findbugs::BugPattern
      uses variable category defined in edu::umd::cs::findbugs::BugPattern
      uses variable experimental defined in edu::umd::cs::findbugs::BugPattern
      uses variable shortDescription defined in edu::umd::cs::findbugs::BugPattern
      uses variable longDescription defined in edu::umd::cs::findbugs::BugPattern
      uses variable detailText defined in edu::umd::cs::findbugs::BugPattern
   function BugPattern(String,String,String,boolean,String,String,String,int) in line 79
      protection public
      12 lines of code
      8 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugPattern
      uses variable abbrev defined in edu::umd::cs::findbugs::BugPattern
      uses variable category defined in edu::umd::cs::findbugs::BugPattern
      uses variable experimental defined in edu::umd::cs::findbugs::BugPattern
      uses variable shortDescription defined in edu::umd::cs::findbugs::BugPattern
      uses variable longDescription defined in edu::umd::cs::findbugs::BugPattern
      uses variable detailText defined in edu::umd::cs::findbugs::BugPattern
      uses function BugPattern(String,String,String,boolean,String,String,String) defined in edu::umd::cs::findbugs::BugPattern
   variable abbrev in line 40
   variable category in line 41
   variable deprecated in line 49
   variable detailHTML in line 46
   variable detailText in line 45
   variable experimental in line 42
   variable longDescription in line 44
   variable shortDescription in line 43
   variable type in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/BugProperty.java
module edu::umd::cs::findbugs::BugProperty
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   inherits from java::io::Serializable
   inherits from Cloneable
   function clone() in line 65
      7 lines of code
      0 parameters
      2 conditional paths
   function getName() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::BugProperty
   function getValue() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::BugProperty
   function getValueAsBoolean() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getValue() defined in edu::umd::cs::findbugs::BugProperty
   function getValueAsInt() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getValue() defined in edu::umd::cs::findbugs::BugProperty
   function setValue(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::BugProperty
      uses variable next defined in edu::umd::cs::findbugs::BugProperty
   function writeXML(XMLOutput) in line 141
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::BugProperty
      uses function getValue() defined in edu::umd::cs::findbugs::BugProperty
   variable IS_BUG in line 42
      protection public
   variable name in line 48
   variable next in line 50
   variable serialVersionUID in line 37
   variable SEVERITY in line 45
      protection public
   variable value in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/BugRanker.java
module edu::umd::cs::findbugs::BugRanker
   function findRank(BugInstance) in line 198
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function getDetectorFactory() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPlugin() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getAdjustmentBugRanker() defined in edu::umd::cs::findbugs::BugRanker
      uses function getBugRanker() defined in edu::umd::cs::findbugs::Plugin
      uses function getCoreRanker() defined in edu::umd::cs::findbugs::BugRanker
      uses function rankBug(BugInstance,BugRanker...) defined in edu::umd::cs::findbugs::BugRanker
   function findRank(BugPattern,Plugin,int) in line 212
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses function getAdjustmentBugRanker() defined in edu::umd::cs::findbugs::BugRanker
      uses function getBugRanker() defined in edu::umd::cs::findbugs::Plugin
      uses function getCoreRanker() defined in edu::umd::cs::findbugs::BugRanker
      uses function rankBugPatternWithPriorityAdustment(BugPattern,int,BugRanker...) defined in edu::umd::cs::findbugs::BugRanker
   function findRank(BugPattern,int) in line 224
      protection public
      15 lines of code
      2 parameters
      3 conditional paths
      uses function getAdjustmentBugRanker() defined in edu::umd::cs::findbugs::BugRanker
      uses function plugins() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getCoreRanker() defined in edu::umd::cs::findbugs::BugRanker
      uses function rankBugPatternWithPriorityAdustment(BugPattern,int,BugRanker...) defined in edu::umd::cs::findbugs::BugRanker
   function getAdjustmentBugRanker() in line 190
      4 lines of code
      0 parameters
      1 conditional paths
   function getCoreRanker() in line 194
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBugRanker() defined in edu::umd::cs::findbugs::Plugin
   function priorityAdjustment(int) in line 143
      12 lines of code
      1 parameters
      4 conditional paths
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function rankBug(BugInstance,BugRanker...) in line 155
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function rankBugPatternWithPriorityAdustment(BugPattern,int,BugRanker...) defined in edu::umd::cs::findbugs::BugRanker
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
   function rankBugPattern(BugPattern,BugRanker...) in line 167
      22 lines of code
      2 parameters
      10 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::BugPattern
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
   function rankBugPatternWithPriorityAdustment(BugPattern,int,BugRanker...) in line 159
      7 lines of code
      3 parameters
      2 conditional paths
      uses function rankBugPattern(BugPattern,BugRanker...) defined in edu::umd::cs::findbugs::BugRanker
      uses function priorityAdjustment(int) defined in edu::umd::cs::findbugs::BugRanker
   function trimToMaxRank(BugCollection,int) in line 242
      protection public
      9 lines of code
      2 parameters
      4 conditional paths
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses function findRank(BugInstance) defined in edu::umd::cs::findbugs::BugRanker
   function BugRanker(@CheckForNull URL) in line 110
      protection public
      23 lines of code
      1 parameters
      7 conditional paths
      uses variable bugPatterns defined in edu::umd::cs::findbugs::BugRanker
      uses variable bugKinds defined in edu::umd::cs::findbugs::BugRanker
      uses variable bugCategories defined in edu::umd::cs::findbugs::BugRanker
   variable ADJUST_FILENAME in line 141
      protection public
   variable bugCategories in line 136
   variable bugKinds in line 135
   variable bugPatterns in line 134
   variable FILENAME in line 140
      protection public
module edu::umd::cs::findbugs::BugRanker::Scorer
   variable adjustment in line 85
   variable isRelative in line 86
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/BugReporter.java
module edu::umd::cs::findbugs::BugReporter
   inherits from edu::umd::cs::findbugs::ba::RepositoryLookupFailureCallback
   inherits from edu::umd::cs::findbugs::classfile::IClassObserver
   function addObserver(BugReporterObserver) in line 88
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function finish() in line 76
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getProjectStats() in line 94
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getRealBugReporter() in line 103
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function reportBug(@NonNull BugInstance) in line 69
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reportQueuedErrors() in line 81
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setErrorVerbosity(int) in line 52
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setPriorityThreshold(int) in line 60
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable NORMAL in line 45
      protection public
   variable SILENT in line 40
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/BugReporterObserver.java
module edu::umd::cs::findbugs::BugReporterObserver
   function reportBug(BugInstance) in line 38
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ByteCodePatternDetector.java
module edu::umd::cs::findbugs::ByteCodePatternDetector
   inherits from edu::umd::cs::findbugs::Detector
   abstract class
   function getBugReporter() in line 48
      1 lines of code
      0 parameters
      1 conditional paths
   function getDetectorName() in line 102
      8 lines of code
      0 parameters
      2 conditional paths
   function getPattern() in line 117
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function prescreen(Method,ClassContext) in line 138
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function report() in line 111
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
      uses function getPattern() defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses function prescreen(Method,ClassContext) defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses function reportMatch(ClassContext,Method,ByteCodePatternMatch) defined in edu::umd::cs::findbugs::ByteCodePatternDetector
   function reportMatch(ClassContext,Method,ByteCodePatternMatch) in line 148
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 50
      protection public
      51 lines of code
      1 parameters
      11 conditional paths
      uses function getPattern() defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable METHOD defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses variable DEBUG defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses function prescreen(Method,ClassContext) defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function byteCodePatternMatchIterator() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function patternElementMatchIterator() defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses function toString() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function reportMatch(ClassContext,Method,ByteCodePatternMatch) defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses function getBugReporter() defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getDetectorName() defined in edu::umd::cs::findbugs::ByteCodePatternDetector
   variable DEBUG in line 45
   variable METHOD in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/BytecodeScanningDetector.java
module edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::visitclass::DismantleBytecode
   inherits from edu::umd::cs::findbugs::Detector
   function getClassContext() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
   function report() in line 48
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 34
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   variable classContext in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/CallGraph.java
module edu::umd::cs::findbugs::CallGraph
   inherits from edu::umd::cs::findbugs::graph::AbstractGraph
   function addNode(Method) in line 41
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function addVertex(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable methodToNodeMap defined in edu::umd::cs::findbugs::CallGraph
   function allocateEdge(CallGraphNode,CallGraphNode) in line 54
      3 lines of code
      2 parameters
      1 conditional paths
   function createEdge(CallGraphNode,CallGraphNode,CallSite) in line 35
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   function getNodeForMethod(Method) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodToNodeMap defined in edu::umd::cs::findbugs::CallGraph
   function CallGraph() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable methodToNodeMap in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/CallGraphEdge.java
module edu::umd::cs::findbugs::CallGraphEdge
   inherits from edu::umd::cs::findbugs::graph::AbstractEdge
   function getCalledMethod() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getCallingMethod() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getCallSite() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable callSite defined in edu::umd::cs::findbugs::CallGraphEdge
   variable callSite in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/CallGraphNode.java
module edu::umd::cs::findbugs::CallGraphNode
   inherits from edu::umd::cs::findbugs::graph::AbstractVertex
   function getMethod() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::CallGraphNode
   variable method in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/CallSite.java
module edu::umd::cs::findbugs::CallSite
   function equals(Object) in line 83
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function CallSite(Method,BasicBlock,InstructionHandle) defined in edu::umd::cs::findbugs::CallSite
      uses variable method defined in edu::umd::cs::findbugs::CallSite
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::CallSite
      uses function getHandle() defined in edu::umd::cs::findbugs::CallSite
   function getBasicBlock() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::CallSite
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
   function getHandle() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::CallSite
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function getLocation() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::CallSite
   function getMethod() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::CallSite
   function hashCode() in line 76
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::CallSite
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::CallSite
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses variable location defined in edu::umd::cs::findbugs::CallSite
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function CallSite(Method,BasicBlock,InstructionHandle) in line 42
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::CallSite
   variable location in line 33
   variable method in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/CategoryFilteringBugReporter.java
module edu::umd::cs::findbugs::CategoryFilteringBugReporter
   inherits from edu::umd::cs::findbugs::DelegatingBugReporter
   function reportBug(BugInstance) in line 38
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses variable categorySet defined in edu::umd::cs::findbugs::CategoryFilteringBugReporter
      uses function getDelegate() defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable DEBUG defined in edu::umd::cs::findbugs::CategoryFilteringBugReporter
   function CategoryFilteringBugReporter(BugReporter,Set< String >) in line 32
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable categorySet defined in edu::umd::cs::findbugs::CategoryFilteringBugReporter
   variable categorySet in line 30
   variable DEBUG in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/CheckBcel.java
module edu::umd::cs::findbugs::CheckBcel
   function check() in line 91
      protection public
      34 lines of code
      0 parameters
      7 conditional paths
      uses variable ORG_APACHE_BCEL_GENERIC_OBJECT_TYPE defined in edu::umd::cs::findbugs::CheckBcel
      uses variable ORG_APACHE_BCEL_GENERIC_TYPE defined in edu::umd::cs::findbugs::CheckBcel
      uses variable ORG_APACHE_BCEL_CONSTANTS defined in edu::umd::cs::findbugs::CheckBcel
      uses variable ORG_APACHE_BCEL_CLASSFILE_EMPTY_VISITOR defined in edu::umd::cs::findbugs::CheckBcel
      uses variable ORG_APACHE_BCEL_REPOSITORY defined in edu::umd::cs::findbugs::CheckBcel
      uses function isFinal(Class) defined in edu::umd::cs::findbugs::CheckBcel
      uses function error(String) defined in edu::umd::cs::findbugs::CheckBcel
   function error(String) in line 75
      8 lines of code
      1 parameters
      1 conditional paths
   function isFinal(Class) in line 67
      3 lines of code
      1 parameters
      1 conditional paths
   variable ORG_APACHE_BCEL_CLASSFILE_EMPTY_VISITOR in line 48
   variable ORG_APACHE_BCEL_CONSTANTS in line 52
   variable ORG_APACHE_BCEL_GENERIC_OBJECT_TYPE in line 60
   variable ORG_APACHE_BCEL_GENERIC_TYPE in line 56
   variable ORG_APACHE_BCEL_REPOSITORY in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ClassAnnotation.java
module edu::umd::cs::findbugs::ClassAnnotation
   inherits from edu::umd::cs::findbugs::PackageMemberAnnotation
   function accept(BugAnnotationVisitor) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitClassAnnotation(ClassAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function compareTo(BugAnnotation) in line 110
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function ClassAnnotation(String) defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function contains(ClassAnnotation) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function equals(Object) in line 94
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function ClassAnnotation(String) defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function formatPackageMember(String,ClassAnnotation) in line 77
      10 lines of code
      2 parameters
      4 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function fromClassDescriptor(ClassDescriptor) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function ClassAnnotation(String) defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getSourceLines() in line 121
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable sourceLines defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function getSourceLinesForClass(@DottedClassName String,String) defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable sourceFileName defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function getSourceLinesForClass(@DottedClassName String,String) in line 127
      protection public
      16 lines of code
      2 parameters
      3 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable sourceFileName defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function getSourceInfoMap() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassLine(String) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function getTopLevelClass() in line 104
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function ClassAnnotation(String) defined in edu::umd::cs::findbugs::ClassAnnotation
   function hashCode() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function isSignificant() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable SUBCLASS_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable description defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function writeXML(XMLOutput) in line 155
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean,boolean) in line 159
      protection public
      19 lines of code
      3 parameters
      4 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function getSourceLines() defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable MESSAGE_TAG defined in edu::umd::cs::findbugs::BugAnnotation
      uses function toString() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function ClassAnnotation(String) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
   variable ANNOTATION_ROLE in line 46
      protection public
   variable DEFAULT_ROLE in line 41
   variable ELEMENT_NAME in line 150
   variable IMPLEMENTED_INTERFACE_ROLE in line 44
      protection public
   variable INTERFACE_ROLE in line 45
      protection public
   variable serialVersionUID in line 39
   variable SUBCLASS_ROLE in line 42
      protection public
   variable SUPERCLASS_ROLE in line 43
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/analysis/AnnotatedObject.java
module edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function getAnnotation(ClassDescriptor) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getAnnotationDescriptors() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getAnnotations() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getClassDescriptor() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getContainingScope() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getElementType() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isSynthetic() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/analysis/AnnotationValue.java
module edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function getAnnotationClass() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable annotationClass defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function getAnnotationVisitor() in line 97
      protection public
      50 lines of code
      0 parameters
      1 conditional paths
      uses variable valueMap defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses function AnnotationValue(ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses variable typeMap defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses function getAnnotationVisitor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function getDesc(String) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable typeMap defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function getValue(String) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable valueMap defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function toString() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable annotationClass defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses variable valueMap defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function AnnotationValue(ClassDescriptor) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable annotationClass defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function AnnotationValue(String) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable annotationClass defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   variable annotationClass in line 38
   variable typeMap in line 40
   variable valueMap in line 39
module edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
   inherits from org::objectweb::asm::AnnotationVisitor
   function visit(String,Object) in line 174
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable result defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
   function visitAnnotation(String,String) in line 178
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function AnnotationValue(ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses variable result defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
      uses function getAnnotationVisitor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function visitArray(String) in line 184
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function AnnotationArrayVisitor(String) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
      uses variable result defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
   function visitEnd() in line 188
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
      uses variable valueMap defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses variable result defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
      uses variable outerList defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
   function visitEnum(String,String,String) in line 195
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable result defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
   function AnnotationArrayVisitor(String) in line 164
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
   function AnnotationArrayVisitor(List< Object >) in line 169
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable outerList defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
   variable name in line 151
   variable outerList in line 153
   variable result in line 158
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/analysis/ClassData.java
module edu::umd::cs::findbugs::classfile::analysis::ClassData
   function getClassDescriptor() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
   function getCodeBaseEntry() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
   function getData() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable data defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
   function getInputStream() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable data defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
   function ClassData(ClassDescriptor,ICodeBaseEntry,byte[]) in line 44
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses variable data defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
   variable classDescriptor in line 34
   variable codeBaseEntry in line 35
   variable data in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/analysis/ClassInfo.java
module edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   inherits from edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   inherits from edu::umd::cs::findbugs::ba::XClass
   inherits from edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function addAnnotation(AnnotationValue) in line 348
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getAnnotationClass() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function findField(String,String,boolean) in line 265
      protection public
      24 lines of code
      3 parameters
      9 conditional paths
      uses variable xFields defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function findField(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
   function findMatchingMethod(MethodDescriptor) in line 258
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function findMethod(String,String,boolean) in line 230
      protection public
      16 lines of code
      3 parameters
      6 conditional paths
      uses variable xMethods defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
   function findMethod(MethodDescriptor) in line 250
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function findMatchingMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   function getAnnotation(ClassDescriptor) in line 333
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getAnnotationDescriptors() in line 327
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAnnotations() in line 330
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getContainingScope() in line 367
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable containingScopeCached defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses function getContainingScope0() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   function getContainingScope0() in line 374
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable immediateEnclosingClass defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getImmediateEnclosingClass() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getSlashedPackageName() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   function getElementType() in line 354
      protection public
      6 lines of code
      0 parameters
      3 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function isAnnotation() defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   function getImmediateEnclosingClass() in line 293
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable immediateEnclosingClass defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function getPackageName() in line 303
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getSlashedPackageName() in line 318
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getSource() in line 361
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function getSourceSignature() in line 392
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classSourceSignature defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function getXFields() in line 216
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable xFields defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   function getXMethods() in line 223
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable xMethods defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   function hasStubs() in line 400
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function usesConcurrency() in line 396
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ClassInfo(ClassDescriptor,String,ClassDescriptor,ClassDescriptor[],ICodeBaseEntry,int,String,int,int,Collection< ClassDescriptor >,Collection< ClassDescriptor >,Map< ClassDescriptor, AnnotationValue >,FieldInfo[],MethodInfo[],ClassDescriptor,boolean,boolean) in line 194
      18 lines of code
      17 parameters
      2 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses variable classSourceSignature defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses variable fieldDescriptorList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses variable EMPTY_ARRAY defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
      uses variable methodDescriptorList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses variable immediateEnclosingClass defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   variable classSourceSignature in line 57
   variable containingScopeCached in line 366
   variable hasStubs in line 60
   variable immediateEnclosingClass in line 54
   variable source in line 58
   variable usesConcurrency in line 59
   variable xFields in line 50
   variable xMethods in line 52
module edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   inherits from edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo::Builder
   function addAnnotation(String,AnnotationValue) in line 121
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function addBridgeMethodDescriptor(MethodInfo,String) in line 146
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable bridgedSignatures defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function addMethodDescriptor(MethodInfo) defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function addFieldDescriptor(FieldInfo) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fieldDescriptorList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function addMethodDescriptor(MethodInfo) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodDescriptorList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function build() in line 81
      protection public
      25 lines of code
      0 parameters
      5 conditional paths
      uses variable fieldDescriptorList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses variable EMPTY_ARRAY defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
      uses variable methodDescriptorList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable bridgedSignatures defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses variable EMPTY_ARRAY defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
      uses function ClassInfo(ClassDescriptor,String,ClassDescriptor,ClassDescriptor[],ICodeBaseEntry,int,String,int,int,Collection< ClassDescriptor >,Collection< ClassDescriptor >,Map< ClassDescriptor, AnnotationValue >,FieldInfo[],MethodInfo[],ClassDescriptor,boolean,boolean) defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses variable classSourceSignature defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses variable source defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses variable immediateEnclosingClass defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function getClassDescriptor() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setFieldDescriptorList(FieldInfo   []) in line 129
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fieldDescriptorList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function setHasStubs() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setImmediateEnclosingClass(ClassDescriptor) in line 157
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable immediateEnclosingClass defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function setMethodDescriptorList(MethodInfo[]) in line 140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodDescriptorList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function setSource(String) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function setSourceSignature(String) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classSourceSignature defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function setUsesConcurrency() in line 161
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable bridgedSignatures in line 71
   variable classSourceSignature in line 76
   variable fieldDescriptorList in line 64
   variable immediateEnclosingClass in line 74
   variable methodDescriptorList in line 66
   variable source in line 77
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/analysis/ClassNameAndSuperclassInfo.java
module edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   inherits from edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getAccessFlags() in line 171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCalledClassDescriptorList() in line 213
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getClassDescriptor() in line 192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCodeBaseEntry() in line 199
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInterfaceDescriptorList() in line 206
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMajorVersion() in line 178
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMinorVersion() in line 185
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSuperclassDescriptor() in line 219
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isAbstract() in line 250
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable ACC_ABSTRACT defined in edu::umd::cs::findbugs::classfile::IClassConstants
   function isAnnotation() in line 253
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable ACC_ANNOTATION defined in edu::umd::cs::findbugs::classfile::IClassConstants
   function isDeprecated() in line 259
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   function isFinal() in line 227
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable ACC_FINAL defined in edu::umd::cs::findbugs::classfile::IClassConstants
   function isFlagSet(int) in line 223
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAccessFlags() defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   function isInterface() in line 247
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable ACC_INTERFACE defined in edu::umd::cs::findbugs::classfile::IClassConstants
   function isPrivate() in line 231
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable ACC_PRIVATE defined in edu::umd::cs::findbugs::classfile::IClassConstants
   function isProtected() in line 235
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable ACC_PROTECTED defined in edu::umd::cs::findbugs::classfile::IClassConstants
   function isPublic() in line 239
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable ACC_PUBLIC defined in edu::umd::cs::findbugs::classfile::IClassConstants
   function isStatic() in line 243
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable ACC_STATIC defined in edu::umd::cs::findbugs::classfile::IClassConstants
   function isSynthetic() in line 256
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable ACC_SYNTHETIC defined in edu::umd::cs::findbugs::classfile::IClassConstants
   variable accessFlags in line 46
   variable calledClassDescriptorList in line 47
   variable codeBaseEntry in line 44
   variable interfaceDescriptorList in line 42
   variable majorVersion in line 48
   variable superclassDescriptor in line 40
module edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo::Builder
   function build() in line 67
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setAccessFlags(int) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setCalledClassDescriptors(Collection< ClassDescriptor >) in line 126
      protection public
      6 lines of code
      1 parameters
      3 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function setClassDescriptor(ClassDescriptor) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setClassfileVersion(int,int) in line 112
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function setCodeBaseEntry(ICodeBaseEntry) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setInterfaceDescriptorList(ClassDescriptor[]) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setReferencedClassDescriptors(Collection< ClassDescriptor >) in line 120
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function setSuperclassDescriptor(ClassDescriptor) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/analysis/EnumValue.java
module edu::umd::cs::findbugs::classfile::analysis::EnumValue
   function equals(Object) in line 52
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function EnumValue(String,String) defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable desc defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
      uses variable value defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
   function hashCode() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable desc defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
      uses function hashCode() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable value defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
   function toString() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable desc defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable value defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
   function EnumValue(String,String) in line 36
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable desc defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
      uses variable value defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
   variable desc in line 33
      protection public
   variable value in line 34
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/analysis/FieldInfo.java
module edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   inherits from edu::umd::cs::findbugs::classfile::FieldDescriptor
   inherits from edu::umd::cs::findbugs::ba::XField
   inherits from edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function addAnnotation(AnnotationValue) in line 241
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getAnnotationClass() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function checkFlag(int) in line 117
      3 lines of code
      1 parameters
      1 conditional paths
   function compareTo(Object) in line 146
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
   function createUnresolvedFieldInfo(String,String,String,boolean) in line 264
      protection public
      11 lines of code
      4 parameters
      1 conditional paths
      uses function FieldInfo(@SlashedClassName String,String,String,@CheckForNull String,int,Map< ClassDescriptor, AnnotationValue >,boolean) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable signature defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function getAccessFlags() in line 161
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAnnotation(ClassDescriptor) in line 223
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getAnnotationDescriptors() in line 220
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAnnotations() in line 226
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getClassName() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getContainingScope() in line 279
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function getElementType() in line 276
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFieldDescriptor() in line 250
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumParams() in line 113
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function getPackageName() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getPackageName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getSourceSignature() in line 138
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isDeprecated() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   function isFinal() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   function isNative() in line 121
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   function isPrivate() in line 175
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   function isProtected() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   function isPublic() in line 189
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   function isReferenceType() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function isResolved() in line 196
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSynchronized() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   function isSynthetic() in line 217
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   function isVolatile() in line 212
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   function FieldInfo(@SlashedClassName String,String,String,@CheckForNull String,int,Map< ClassDescriptor, AnnotationValue >,boolean) in line 97
      14 lines of code
      7 parameters
      1 conditional paths
      uses function isResolved() defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   variable EMPTY_ARRAY in line 50
      protection public
module edu::umd::cs::findbugs::classfile::analysis::FieldInfo::Builder
   function addAnnotation(String,AnnotationValue) in line 71
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function build() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function FieldInfo(@SlashedClassName String,String,String,@CheckForNull String,int,Map< ClassDescriptor, AnnotationValue >,boolean) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
      uses function isResolved() defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   function setSourceSignature(String) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function Builder(@SlashedClassName String,String,String,int) in line 60
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/analysis/MethodInfo.java
module edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   inherits from edu::umd::cs::findbugs::classfile::MethodDescriptor
   inherits from edu::umd::cs::findbugs::ba::XMethod
   inherits from edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function addAnnotation(AnnotationValue) in line 344
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getAnnotationClass() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function addParameterAnnotation(int,AnnotationValue) in line 356
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function getAnnotationClass() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function checkFlag(int) in line 188
      3 lines of code
      1 parameters
      1 conditional paths
   function compareTo(Object) in line 232
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
   function getAccessFlags() in line 249
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAnnotation(ClassDescriptor) in line 325
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getAnnotationDescriptors() in line 321
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAnnotations() in line 329
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getClassName() in line 213
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getContainingScope() in line 381
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function getElementType() in line 376
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function getMethodDescriptor() in line 372
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumParams() in line 184
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function getPackageName() in line 218
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getPackageName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getParameterAnnotation(int,ClassDescriptor) in line 309
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
   function getParameterAnnotationDescriptors(int) in line 303
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function getParameterAnnotations(int) in line 315
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function getSourceSignature() in line 222
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getThrownExceptions() in line 174
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isAbstract() in line 196
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function isDeprecated() in line 270
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function isFinal() in line 258
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function isNative() in line 192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function isPrivate() in line 267
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function isProtected() in line 278
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function isPublic() in line 287
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function isResolved() in line 299
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isReturnTypeReferenceType() in line 206
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getReturnTypeSignature() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function isStub() in line 402
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSlashedClassName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function isSynchronized() in line 199
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function isSynthetic() in line 291
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function isUnconditionalThrower() in line 177
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isUnsupported() in line 180
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isVarArgs() in line 392
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function usesConcurrency() in line 399
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable EMPTY_ARRAY in line 52
      protection public
module edu::umd::cs::findbugs::classfile::analysis::MethodInfo::Builder
   function addAccessFlags(int) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function addAnnotation(String,AnnotationValue) in line 97
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function addParameterAnnotation(int,String,AnnotationValue) in line 102
      protection public
      9 lines of code
      3 parameters
      2 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function build() in line 112
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setAccessFlags(int) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsStub() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsUnconditionalThrower() in line 117
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setSourceSignature(String) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setThrownExceptions(String   []) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setUnsupported() in line 121
      protection public
      4 lines of code
      0 parameters
      5 conditional paths
      uses variable bridgeMethodSignature defined in edu::umd::cs::findbugs::classfile::MethodDescriptor
   function setUsesConcurrency() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Builder(@SlashedClassName String,String,String,int) in line 70
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/CheckedAnalysisException.java
module edu::umd::cs::findbugs::classfile::CheckedAnalysisException
   inherits from Exception
   function CheckedAnalysisException() in line 32
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function CheckedAnalysisException(CheckedAnalysisException) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function CheckedAnalysisException(String) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function CheckedAnalysisException(String,Throwable) in line 53
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/ClassDescriptor.java
module edu::umd::cs::findbugs::classfile::ClassDescriptor
   inherits from Comparable
   inherits from java::io::Serializable
   function compareTo(ClassDescriptor) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function createClassDescriptor(@SlashedClassName String) in line 161
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function createClassDescriptor(String[]) in line 168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function createClassDescriptor(JavaClass) in line 182
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function createClassDescriptorFromDottedClassName(String) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function createClassDescriptorFromSignature(String) in line 154
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 197
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function fromFieldSignature(String) in line 134
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function fromResourceName(String) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getClassName() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getDottedClassName() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getPackageName() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getSimpleName() in line 113
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function hashCode() in line 212
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function isAnonymousClass() in line 230
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ANONYMOUS_CLASS_NAME defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function isClassResource(String) in line 146
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function throwClassNotFoundException(ClassDescriptor) in line 226
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toDottedClassName() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function toResourceName() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function toString() in line 189
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function ClassDescriptor(@SlashedClassName String) in line 48
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   variable ANONYMOUS_CLASS_NAME in line 40
   variable className in line 39
   variable EMPTY_ARRAY in line 42
      protection public
   variable serialVersionUID in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/ClassNameMismatchException.java
module edu::umd::cs::findbugs::classfile::ClassNameMismatchException
   inherits from edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   function getLoadedClassDescriptor() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable loadedClassDescriptor defined in edu::umd::cs::findbugs::classfile::ClassNameMismatchException
   function ClassNameMismatchException(ClassDescriptor,ClassDescriptor,ICodeBaseEntry) in line 39
      protection public
      12 lines of code
      3 parameters
      1 conditional paths
      uses variable loadedClassDescriptor defined in edu::umd::cs::findbugs::classfile::ClassNameMismatchException
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   variable loadedClassDescriptor in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/DescriptorFactory.java
module edu::umd::cs::findbugs::classfile::DescriptorFactory
   function canonicalize(MethodDescriptor) in line 173
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable methodDescriptorMap defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function canonicalize(FieldDescriptor) in line 180
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable fieldDescriptorMap defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function canonicalizeString(@CheckForNull String) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function clearInstance() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceThreadLocal defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function clearStringCache() in line 71
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function createClassDescriptor(JavaClass) in line 225
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createClassDescriptorFromDottedClassName(String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function createClassDescriptor(Class) in line 289
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function instance() defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function createClassDescriptor(@SlashedClassName String) in line 294
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function instance() defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function createClassDescriptor(String[]) in line 299
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable EMPTY_ARRAY defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function createClassDescriptor(JavaClass) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function createClassDescriptorFromDottedClassName(String) in line 308
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createClassDescriptor(JavaClass) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function createClassDescriptorFromFieldSignature(String) in line 246
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function createClassDescriptor(JavaClass) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function createClassDescriptorFromResourceName(String) in line 235
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function isClassResource(String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function createClassDescriptor(JavaClass) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function createClassDescriptorFromSignature(String) in line 269
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
      uses function createClassDescriptor(JavaClass) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function createClassOrObjectDescriptorFromSignature(String) in line 284
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function createClassDescriptor(JavaClass) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function createClassDescriptorFromSignature(String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getAllClassDescriptors() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classDescriptorMap defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getClassDescriptor(Class<?>) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getClassDescriptorForDottedClassName(@DottedClassName String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getClassDescriptor(@SlashedClassName String) in line 107
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function canonicalizeString(@CheckForNull String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable classDescriptorMap defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getClassDescriptor(ObjectType) in line 221
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function instance() defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassDescriptorForDottedClassName(@DottedClassName String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getClassDescriptorForDottedClassName(@DottedClassName String) in line 124
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable dottedClassDescriptorMap defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getFieldDescriptor(@SlashedClassName String,String,String,boolean) in line 199
      protection public
      9 lines of code
      4 parameters
      2 conditional paths
      uses variable fieldDescriptorMap defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getFieldDescriptor(@SlashedClassName String,Field) in line 208
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getFieldDescriptor(FieldAnnotation) in line 212
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getFieldName() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getFieldSignature() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable isStatic defined in edu::umd::cs::findbugs::FieldAnnotation
   function getMethodDescriptor(JavaClass,Method) in line 134
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getMethodDescriptor(@SlashedClassName String,String,String,boolean) in line 147
      protection public
      10 lines of code
      4 parameters
      3 conditional paths
      uses variable methodDescriptorMap defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getMethodDescriptor(MethodAnnotation) in line 187
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getMethodSignature() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable isStatic defined in edu::umd::cs::findbugs::MethodAnnotation
   function instance() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceThreadLocal defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function isClassResource(String) in line 264
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function profile() in line 158
      protection public
      15 lines of code
      0 parameters
      5 conditional paths
      uses variable methodDescriptorMap defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function purge(Collection< ClassDescriptor >) in line 90
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable classDescriptorMap defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable dottedClassDescriptorMap defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function DescriptorFactory() in line 61
      6 lines of code
      0 parameters
      1 conditional paths
   variable classDescriptorMap in line 56
   variable dottedClassDescriptorMap in line 57
   variable fieldDescriptorMap in line 59
   variable instanceThreadLocal in line 47
   variable methodDescriptorMap in line 58
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/AbstractFieldAnnotationVisitor.java
module edu::umd::cs::findbugs::classfile::engine::AbstractFieldAnnotationVisitor
   inherits from org::objectweb::asm::FieldVisitor
   abstract class
   function visitAttribute(Attribute) in line 34
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/AbstractMethodVisitor.java
module edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   inherits from org::objectweb::asm::MethodVisitor
   abstract class
   function visitAnnotationDefault() in line 37
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function visitAttribute(Attribute) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitCode() in line 52
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function visitFieldInsn(int,String,String,String) in line 60
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function visitFrame(int,int,Object[],int,Object[]) in line 68
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
   function visitIincInsn(int,int) in line 76
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function visitInsn(int) in line 84
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function visitIntInsn(int,int) in line 92
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function visitJumpInsn(int,Label) in line 100
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function visitLabel(Label) in line 108
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visitLdcInsn(Object) in line 116
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function visitLineNumber(int,Label) in line 124
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visitLocalVariable(String,String,String,Label,Label,int) in line 132
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
   function visitLookupSwitchInsn(Label,int[],Label[]) in line 140
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function visitMaxs(int,int) in line 148
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visitMethodInsn(int,String,String,String) in line 156
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function visitMultiANewArrayInsn(String,int) in line 164
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function visitSomeInsn() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function visitTableSwitchInsn(int,int,Label,Label[]) in line 173
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   function visitTryCatchBlock(Label,Label,Label,String) in line 181
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   function visitTypeInsn(int,String) in line 189
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function visitVarInsn(int,int) in line 197
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/asm/ClassNodeAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::engine::asm::ClassNodeAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::RecomputableClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 43
      protection public
      17 lines of code
      2 parameters
      2 conditional paths
   function registerWith(IAnalysisCache) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/asm/ClassReaderAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::engine::asm::ClassReaderAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::RecomputableClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 39
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses function getData() defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
   function registerWith(IAnalysisCache) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/asm/EngineRegistrar.java
module edu::umd::cs::findbugs::classfile::engine::asm::EngineRegistrar
   inherits from edu::umd::cs::findbugs::classfile::IAnalysisEngineRegistrar
   function registerAnalysisEngines(IAnalysisCache) in line 50
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable classAnalysisEngineList defined in edu::umd::cs::findbugs::classfile::engine::asm::EngineRegistrar
      uses variable methodAnalysisEngineList defined in edu::umd::cs::findbugs::classfile::engine::asm::EngineRegistrar
   function EngineRegistrar() in line 44
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable classAnalysisEngineList in line 33
   variable methodAnalysisEngineList in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/EngineRegistrar.java
module edu::umd::cs::findbugs::classfile::engine::bcel::EngineRegistrar
   inherits from edu::umd::cs::findbugs::classfile::IAnalysisEngineRegistrar
   function registerAnalysisEngines(IAnalysisCache) in line 122
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable classAnalysisEngineList defined in edu::umd::cs::findbugs::classfile::engine::bcel::EngineRegistrar
      uses variable methodAnalysisEngineList defined in edu::umd::cs::findbugs::classfile::engine::bcel::EngineRegistrar
      uses variable databaseFactoryList defined in edu::umd::cs::findbugs::classfile::engine::bcel::EngineRegistrar
   variable classAnalysisEngineList in line 59
   variable databaseFactoryList in line 103
   variable methodAnalysisEngineList in line 67
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/EngineRegistrar.java
module edu::umd::cs::findbugs::classfile::engine::EngineRegistrar
   inherits from edu::umd::cs::findbugs::classfile::IAnalysisEngineRegistrar
   function registerAnalysisEngines(IAnalysisCache) in line 53
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable classAnalysisEngineList defined in edu::umd::cs::findbugs::classfile::engine::EngineRegistrar
      uses variable methodAnalysisEngineList defined in edu::umd::cs::findbugs::classfile::engine::EngineRegistrar
   function EngineRegistrar() in line 47
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable classAnalysisEngineList in line 34
   variable methodAnalysisEngineList in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/AnalysisFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::AnalysisFactory
   inherits from edu::umd::cs::findbugs::classfile::IMethodAnalysisEngine
   abstract class
   function getAssertionMethods(IAnalysisCache,ClassDescriptor) in line 111
      4 lines of code
      2 parameters
      1 conditional paths
   function getCFG(IAnalysisCache,MethodDescriptor) in line 81
      4 lines of code
      2 parameters
      1 conditional paths
   function getCompactLocationNumbering(IAnalysisCache,MethodDescriptor) in line 101
      4 lines of code
      2 parameters
      1 conditional paths
   function getConstantPoolGen(IAnalysisCache,ClassDescriptor) in line 91
      4 lines of code
      2 parameters
      1 conditional paths
   function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) in line 86
      4 lines of code
      2 parameters
      1 conditional paths
   function getExceptionSetFactory(IAnalysisCache,MethodDescriptor) in line 131
      4 lines of code
      2 parameters
      1 conditional paths
   function getIsNullValueDataflow(IAnalysisCache,MethodDescriptor) in line 136
      4 lines of code
      2 parameters
      1 conditional paths
   function getJavaClass(IAnalysisCache,ClassDescriptor) in line 116
      4 lines of code
      2 parameters
      1 conditional paths
   function getLoadedFieldSet(IAnalysisCache,MethodDescriptor) in line 146
      4 lines of code
      2 parameters
      1 conditional paths
   function getMethod(IAnalysisCache,MethodDescriptor) in line 121
      4 lines of code
      2 parameters
      1 conditional paths
   function getMethodGen(IAnalysisCache,MethodDescriptor) in line 96
      4 lines of code
      2 parameters
      1 conditional paths
   function getReverseDepthFirstSearch(IAnalysisCache,MethodDescriptor) in line 126
      4 lines of code
      2 parameters
      1 conditional paths
   function getTypeDataflow(IAnalysisCache,MethodDescriptor) in line 141
      4 lines of code
      2 parameters
      1 conditional paths
   function getValueNumberDataflow(IAnalysisCache,MethodDescriptor) in line 106
      4 lines of code
      2 parameters
      1 conditional paths
   function registerWith(IAnalysisCache) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AnalysisFactory(String,Class< Analysis >) in line 54
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable analysisClass in line 47
   variable analysisName in line 46
   variable NULL_ANALYSIS_RESULT in line 75
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/AssertionMethodsFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::AssertionMethodsFactory
   inherits from edu::umd::cs::findbugs::classfile::RecomputableClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 37
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function registerWith(IAnalysisCache) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/AssignedFieldMapFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::AssignedFieldMapFactory
   inherits from edu::umd::cs::findbugs::classfile::RecomputableClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 38
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function registerWith(IAnalysisCache) in line 49
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/BackwardTypeQualifierDataflowFactoryFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::BackwardTypeQualifierDataflowFactoryFactory
   inherits from AnalysisFactory< BackwardTypeQualifierDataflowFactory >
   function analyze(IAnalysisCache,MethodDescriptor) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function BackwardTypeQualifierDataflowFactoryFactory() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/BlockTypeAnalysisFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::BlockTypeAnalysisFactory
   inherits from AnalysisFactory< BlockTypeDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 24
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< BlockTypeDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< BlockTypeDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
   function BlockTypeAnalysisFactory() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/CallListDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::CallListDataflowFactory
   inherits from AnalysisFactory< CallListDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 22
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< CallListDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< CallListDataflow >
      uses function getConstantPoolGen(IAnalysisCache,ClassDescriptor) defined in AnalysisFactory< CallListDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
   function CallListDataflowFactory() in line 15
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/CFGFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::CFGFactory
   inherits from AnalysisFactory< CFG >
   function analyze(IAnalysisCache,MethodDescriptor) in line 77
      protection public
      166 lines of code
      2 parameters
      23 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function build() defined in edu::umd::cs::findbugs::ba::CFGBuilder
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::CFGBuilder
      uses function setFlag(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable BUSY defined in edu::umd::cs::findbugs::ba::CFG
      uses function setMethodName(String) defined in edu::umd::cs::findbugs::ba::CFG
      uses function setMethodGen(MethodGen) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable DEBUG_CFG defined in edu::umd::cs::findbugs::classfile::engine::bcel::CFGFactory
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function removeEdge(Edge) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable PRUNED_FAILED_ASSERTION_EDGES defined in edu::umd::cs::findbugs::ba::CFG
      uses variable ACCURATE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable PRUNED_INFEASIBLE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::CFG
      uses function execute() defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
      uses function wasCFGModified() defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses variable CONSERVE_SPACE defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses variable PRUNED_UNCONDITIONAL_THROWERS defined in edu::umd::cs::findbugs::ba::CFG
      uses function execute() defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses function wasCFGModified() defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable REFINED defined in edu::umd::cs::findbugs::ba::CFG
      uses function clearFlag(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function removeVertex(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function purgeMethodAnalyses(@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function registerWith(IAnalysisCache) in line 248
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerMethodAnalysisEngine(Class< E >,IMethodAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function CFGFactory() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG_CFG in line 65
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ClassContextClassAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ClassContextClassAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::RecomputableClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 43
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function registerWith(IAnalysisCache) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/CompactLocationNumberingFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::CompactLocationNumberingFactory
   inherits from AnalysisFactory< CompactLocationNumbering >
   function analyze(IAnalysisCache,MethodDescriptor) in line 45
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< CompactLocationNumbering >
   function CompactLocationNumberingFactory() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ConstantDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ConstantDataflowFactory
   inherits from AnalysisFactory< ConstantDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 24
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function getMethodGen(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ConstantDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ConstantDataflow >
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ConstantDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
   function ConstantDataflowFactory() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ConstantPoolGenFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ConstantPoolGenFactory
   inherits from edu::umd::cs::findbugs::classfile::RecomputableClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 41
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function registerWith(IAnalysisCache) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/DefinitelyNullSetDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::DefinitelyNullSetDataflowFactory
   inherits from AnalysisFactory< DefinitelyNullSetDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 45
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< DefinitelyNullSetDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< DefinitelyNullSetDataflow >
      uses function getValueNumberDataflow(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< DefinitelyNullSetDataflow >
      uses function getCompactLocationNumbering(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< DefinitelyNullSetDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
   function DefinitelyNullSetDataflowFactory() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/DepthFirstSearchFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::DepthFirstSearchFactory
   inherits from AnalysisFactory< DepthFirstSearch >
   function analyze(IAnalysisCache,MethodDescriptor) in line 44
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< DepthFirstSearch >
   function DepthFirstSearchFactory() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/DominatorsAnalysisFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::DominatorsAnalysisFactory
   inherits from AnalysisFactory< DominatorsAnalysis >
   function analyze(IAnalysisCache,MethodDescriptor) in line 28
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< DominatorsAnalysis >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< DominatorsAnalysis >
   function DominatorsAnalysisFactory() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ExceptionSetFactoryFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ExceptionSetFactoryFactory
   inherits from AnalysisFactory< ExceptionSetFactory >
   function analyze(IAnalysisCache,MethodDescriptor) in line 43
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function ExceptionSetFactoryFactory() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ForwardTypeQualifierDataflowFactoryFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ForwardTypeQualifierDataflowFactoryFactory
   inherits from AnalysisFactory< ForwardTypeQualifierDataflowFactory >
   function analyze(IAnalysisCache,MethodDescriptor) in line 40
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function ForwardTypeQualifierDataflowFactoryFactory() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/IsNullValueDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::IsNullValueDataflowFactory
   inherits from AnalysisFactory< IsNullValueDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 55
      protection public
      27 lines of code
      2 parameters
      3 conditional paths
      uses function getMethodGen(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< IsNullValueDataflow >
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< IsNullValueDataflow >
      uses function getValueNumberDataflow(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< IsNullValueDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< IsNullValueDataflow >
      uses function getAssertionMethods(IAnalysisCache,ClassDescriptor) defined in AnalysisFactory< IsNullValueDataflow >
      uses function getTypeDataflow(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< IsNullValueDataflow >
      uses function setClassAndMethod(JavaClassAndMethod) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getJavaClass(IAnalysisCache,ClassDescriptor) defined in AnalysisFactory< IsNullValueDataflow >
      uses function getMethod(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< IsNullValueDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DUMP_DATAFLOW_ANALYSIS defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function dumpDataflow(AnalysisType) defined in edu::umd::cs::findbugs::ba::Dataflow
   function IsNullValueDataflowFactory() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/JavaClassAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::engine::bcel::JavaClassAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::IClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 51
      protection public
      27 lines of code
      2 parameters
      5 conditional paths
      uses function getInputStream() defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses variable JVM_VERSION defined in edu::umd::cs::findbugs::classfile::engine::bcel::JavaClassAnalysisEngine
      uses variable DEBUG_MISSING_CLASSES defined in edu::umd::cs::findbugs::classfile::engine::bcel::JavaClassAnalysisEngine
   function canRecompute() in line 89
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function registerWith(IAnalysisCache) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   variable DEBUG_MISSING_CLASSES in line 44
   variable JVM_VERSION in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/LiveLocalStoreDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::LiveLocalStoreDataflowFactory
   inherits from AnalysisFactory< LiveLocalStoreDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 49
      protection public
      21 lines of code
      2 parameters
      3 conditional paths
      uses function getMethodGen(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LiveLocalStoreDataflow >
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LiveLocalStoreDataflow >
      uses function getReverseDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LiveLocalStoreDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LiveLocalStoreDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DUMP_DATAFLOW_ANALYSIS defined in edu::umd::cs::findbugs::ba::ClassContext
   function LiveLocalStoreDataflowFactory() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/LoadDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::LoadDataflowFactory
   inherits from AnalysisFactory< LoadDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 46
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function getMethodGen(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LoadDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LoadDataflow >
      uses function getConstantPoolGen(IAnalysisCache,ClassDescriptor) defined in AnalysisFactory< LoadDataflow >
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LoadDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
   function LoadDataflowFactory() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/LoadedFieldSetFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::LoadedFieldSetFactory
   inherits from AnalysisFactory< LoadedFieldSet >
   function analyze(IAnalysisCache,MethodDescriptor) in line 74
      protection public
      47 lines of code
      2 parameters
      11 conditional paths
      uses function getMethodGen(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LoadedFieldSet >
      uses function getConstantPoolGen(IAnalysisCache,ClassDescriptor) defined in AnalysisFactory< LoadedFieldSet >
      uses variable isLoad defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function addLoad(InstructionHandle,XField) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses function getField() defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function addStore(InstructionHandle,XField) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function LoadedFieldSetFactory() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/LockCheckerFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::LockCheckerFactory
   inherits from AnalysisFactory< LockChecker >
   function analyze(IAnalysisCache,MethodDescriptor) in line 42
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function execute() defined in edu::umd::cs::findbugs::ba::LockChecker
   function LockCheckerFactory() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/LockDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::LockDataflowFactory
   inherits from AnalysisFactory< LockDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 50
      protection public
      15 lines of code
      2 parameters
      2 conditional paths
      uses function getMethodGen(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LockDataflow >
      uses function getValueNumberDataflow(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LockDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LockDataflow >
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LockDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
   function LockDataflowFactory() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/MethodBytecodeSetFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::MethodBytecodeSetFactory
   inherits from AnalysisFactory< MethodBytecodeSet >
   function analyze(IAnalysisCache,MethodDescriptor) in line 47
      protection public
      24 lines of code
      2 parameters
      3 conditional paths
      uses function scan(byte[],Callback) defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses function getUnpackedCode() defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedBytecodeCallback
      uses function getBytecodeSet() defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedCode
   function registerWith(IAnalysisCache) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerMethodAnalysisEngine(Class< E >,IMethodAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function MethodBytecodeSetFactory(String,Class< MethodBytecodeSet >) in line 40
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable analysisName defined in AnalysisFactory< MethodBytecodeSet >
      uses variable analysisClass defined in AnalysisFactory< MethodBytecodeSet >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/MethodFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::MethodFactory
   inherits from AnalysisFactory< Method >
   function analyze(IAnalysisCache,MethodDescriptor) in line 44
      protection public
      21 lines of code
      2 parameters
      3 conditional paths
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function registerWith(IAnalysisCache) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerMethodAnalysisEngine(Class< E >,IMethodAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function MethodFactory() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/MethodGenFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::MethodGenFactory
   inherits from AnalysisFactory< MethodGen >
   function analyze(IAnalysisCache,MethodDescriptor) in line 51
      protection public
      31 lines of code
      2 parameters
      6 conditional paths
      uses function getMethod(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< MethodGen >
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getJavaClass(IAnalysisCache,ClassDescriptor) defined in AnalysisFactory< MethodGen >
      uses function getConstantPoolGen(IAnalysisCache,ClassDescriptor) defined in AnalysisFactory< MethodGen >
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function reportSkippedAnalysis(MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getBoolProperty(int) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable SKIP_HUGE_METHODS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
   function MethodGenFactory() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/NonExceptionPostdominatorsAnalysis.java
module edu::umd::cs::findbugs::classfile::engine::bcel::NonExceptionPostdominatorsAnalysis
   inherits from edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
   function NonExceptionPostdominatorsAnalysis(CFG,ReverseDepthFirstSearch,DepthFirstSearch) in line 40
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/NonExceptionPostdominatorsAnalysisFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::NonExceptionPostdominatorsAnalysisFactory
   inherits from AnalysisFactory< NonExceptionPostdominatorsAnalysis >
   function analyze(IAnalysisCache,MethodDescriptor) in line 43
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< NonExceptionPostdominatorsAnalysis >
      uses function getReverseDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< NonExceptionPostdominatorsAnalysis >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< NonExceptionPostdominatorsAnalysis >
   function NonExceptionPostdominatorsAnalysisFactory() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/NonImplicitExceptionPostDominatorsAnalysis.java
module edu::umd::cs::findbugs::classfile::engine::bcel::NonImplicitExceptionPostDominatorsAnalysis
   inherits from edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
   function NonImplicitExceptionPostDominatorsAnalysis(CFG,ReverseDepthFirstSearch,DepthFirstSearch) in line 39
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::ba::Edge
      uses variable EXPLICIT_EXCEPTIONS_FLAG defined in edu::umd::cs::findbugs::ba::EdgeTypes
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/NonImplicitExceptionPostDominatorsAnalysisFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::NonImplicitExceptionPostDominatorsAnalysisFactory
   inherits from AnalysisFactory< NonImplicitExceptionPostDominatorsAnalysis >
   function analyze(IAnalysisCache,MethodDescriptor) in line 48
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< NonImplicitExceptionPostDominatorsAnalysis >
      uses function getReverseDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< NonImplicitExceptionPostDominatorsAnalysis >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< NonImplicitExceptionPostDominatorsAnalysis >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
   function NonImplicitExceptionPostDominatorsAnalysisFactory() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ObligationDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ObligationDataflowFactory
   inherits from AnalysisFactory< ObligationDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 52
      protection public
      34 lines of code
      2 parameters
      3 conditional paths
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses variable DEBUG_PRINTCFG defined in edu::umd::cs::findbugs::classfile::engine::bcel::ObligationDataflowFactory
      uses function printCFG(Dataflow< Fact, AnalysisType >,PrintStream) defined in edu::umd::cs::findbugs::ba::DataflowCFGPrinter
   function ObligationDataflowFactory() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG_PRINTCFG in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ParameterSignatureListFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ParameterSignatureListFactory
   inherits from AnalysisFactory< String[]>
   function analyze(IAnalysisCache,MethodDescriptor) in line 47
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function ParameterSignatureListFactory() in line 39
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ReturnPathDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ReturnPathDataflowFactory
   inherits from AnalysisFactory< ReturnPathDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 46
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ReturnPathDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ReturnPathDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
   function ReturnPathDataflowFactory() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ReturnPathTypeDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ReturnPathTypeDataflowFactory
   inherits from AnalysisFactory< ReturnPathTypeDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 47
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ReturnPathTypeDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ReturnPathTypeDataflow >
      uses function getReverseDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ReturnPathTypeDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
   function ReturnPathTypeDataflowFactory() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ReverseDepthFirstSearchFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ReverseDepthFirstSearchFactory
   inherits from AnalysisFactory< ReverseDepthFirstSearch >
   function analyze(IAnalysisCache,MethodDescriptor) in line 44
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ReverseDepthFirstSearch >
   function ReverseDepthFirstSearchFactory() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/StoreDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::StoreDataflowFactory
   inherits from AnalysisFactory< StoreDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 46
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function getMethodGen(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< StoreDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< StoreDataflow >
      uses function getConstantPoolGen(IAnalysisCache,ClassDescriptor) defined in AnalysisFactory< StoreDataflow >
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< StoreDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
   function StoreDataflowFactory() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/TypeDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::TypeDataflowFactory
   inherits from AnalysisFactory< TypeDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 55
      protection public
      34 lines of code
      2 parameters
      4 conditional paths
      uses function getMethodGen(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< TypeDataflow >
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< TypeDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< TypeDataflow >
      uses function getExceptionSetFactory(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< TypeDataflow >
      uses function getMethod(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< TypeDataflow >
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable MODEL_INSTANCEOF defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses function setValueNumberDataflow(ValueNumberDataflow) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getValueNumberDataflow(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< TypeDataflow >
      uses function setFieldStoreTypeDatabase(FieldStoreTypeDatabase) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable DUMP_DATAFLOW_ANALYSIS defined in edu::umd::cs::findbugs::ba::ClassContext
   function TypeDataflowFactory() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/UnconditionalValueDerefDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::UnconditionalValueDerefDataflowFactory
   inherits from AnalysisFactory< UnconditionalValueDerefDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 52
      protection public
      41 lines of code
      2 parameters
      4 conditional paths
      uses function getMethodGen(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< UnconditionalValueDerefDataflow >
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< UnconditionalValueDerefDataflow >
      uses function getValueNumberDataflow(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< UnconditionalValueDerefDataflow >
      uses function getReverseDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< UnconditionalValueDerefDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< UnconditionalValueDerefDataflow >
      uses function getMethod(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< UnconditionalValueDerefDataflow >
      uses function getAssertionMethods(IAnalysisCache,ClassDescriptor) defined in AnalysisFactory< UnconditionalValueDerefDataflow >
      uses function getIsNullValueDataflow(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< UnconditionalValueDerefDataflow >
      uses function clearDerefsOnNonNullBranches(IsNullValueDataflow) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getTypeDataflow(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< UnconditionalValueDerefDataflow >
      uses function setTypeDataflow(TypeDataflow) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DUMP_DATAFLOW_ANALYSIS defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function dumpDataflow(AnalysisType) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function dumpDataflowInformation(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function UnconditionalValueDerefDataflowFactory() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/UnpackedBytecodeCallback.java
module edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedBytecodeCallback
   inherits from edu::umd::cs::findbugs::ba::BytecodeScanner::Callback
   function getUnpackedCode() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bytecodeSet defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedBytecodeCallback
      uses variable offsetToOpcodeMap defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedBytecodeCallback
   function handleInstruction(int,int) in line 38
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable bytecodeSet defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedBytecodeCallback
      uses variable offsetToOpcodeMap defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedBytecodeCallback
   function UnpackedBytecodeCallback(int) in line 30
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable bytecodeSet in line 27
   variable offsetToOpcodeMap in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/UnpackedCode.java
module edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedCode
   function getBytecodeSet() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bytecodeSet defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedCode
   function getOffsetToBytecodeMap() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable offsetToBytecodeMap defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedCode
   function UnpackedCode(MethodBytecodeSet,short[]) in line 13
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable bytecodeSet defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedCode
      uses variable offsetToBytecodeMap defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedCode
   variable bytecodeSet in line 11
   variable offsetToBytecodeMap in line 12
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/UnpackedCodeFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedCodeFactory
   inherits from AnalysisFactory< UnpackedCode >
   function analyze(IAnalysisCache,MethodDescriptor) in line 46
      protection public
      18 lines of code
      2 parameters
      2 conditional paths
      uses function getMethod(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< UnpackedCode >
      uses function scan(byte[],Callback) defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses function getUnpackedCode() defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedBytecodeCallback
   function UnpackedCodeFactory() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/UsagesRequiringNonNullValuesFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::UsagesRequiringNonNullValuesFactory
   inherits from AnalysisFactory< UsagesRequiringNonNullValues >
   function analyze(IAnalysisCache,MethodDescriptor) in line 40
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethod(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< UsagesRequiringNonNullValues >
   function UsagesRequiringNonNullValuesFactory() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ValueNumberDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ValueNumberDataflowFactory
   inherits from AnalysisFactory< ValueNumberDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 58
      protection public
      31 lines of code
      2 parameters
      5 conditional paths
      uses function getMethodGen(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ValueNumberDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ValueNumberDataflow >
      uses function getLoadedFieldSet(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ValueNumberDataflow >
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function setMergeTree(MergeTree) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ValueNumberDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DUMP_DATAFLOW_ANALYSIS defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
   function ValueNumberDataflowFactory() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/ClassDataAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::engine::ClassDataAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::RecomputableClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 47
      protection public
      45 lines of code
      2 parameters
      6 conditional paths
      uses function getNumBytes() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses function openResource() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function registerWith(IAnalysisCache) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/ClassInfoAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::engine::ClassInfoAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::IClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 52
      protection public
      24 lines of code
      2 parameters
      3 conditional paths
      uses function getCodeBaseEntry() defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses function parse(ClassNameAndSuperclassInfo.Builder) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserInterface
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function canRecompute() in line 87
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function registerWith(IAnalysisCache) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/ClassNameAndSuperclassInfoAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::engine::ClassNameAndSuperclassInfoAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::IClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 45
      protection public
      21 lines of code
      2 parameters
      2 conditional paths
      uses function getData() defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses function getCodeBaseEntry() defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses function parse(ClassNameAndSuperclassInfo.Builder) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserInterface
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function canRecompute() in line 77
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function registerWith(IAnalysisCache) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/ClassParser.java
module edu::umd::cs::findbugs::classfile::engine::ClassParser
   inherits from edu::umd::cs::findbugs::classfile::engine::ClassParserInterface
   function checkConstantPoolIndex(int) in line 328
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable constantPool defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function checkConstantTag(Constant,int) in line 341
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function extractReferencedClasses() in line 156
      27 lines of code
      0 parameters
      7 conditional paths
      uses variable constantPool defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable CONSTANT_Class defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses function getUtf8String(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function extractReferencedClassesFromSignature(Set< ClassDescriptor >,String) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable CONSTANT_Methodref defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses variable CONSTANT_Fieldref defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses variable CONSTANT_InterfaceMethodref defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses function getClassName(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function getSignatureFromNameAndType(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function extractReferencedClassesFromSignature(Set< ClassDescriptor >,String) in line 188
      protection public
      17 lines of code
      2 parameters
      5 conditional paths
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getClassDescriptor(int) in line 301
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getClassName(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getClassName(int) in line 279
      14 lines of code
      1 parameters
      2 conditional paths
      uses function checkConstantPoolIndex(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable constantPool defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function checkConstantTag(Constant,int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable CONSTANT_Class defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses function getUtf8String(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function getSignatureFromNameAndType(int) in line 479
      6 lines of code
      1 parameters
      1 conditional paths
      uses function checkConstantPoolIndex(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable constantPool defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function checkConstantTag(Constant,int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable CONSTANT_NameAndType defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses function getUtf8String(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function getUtf8String(int) in line 313
      6 lines of code
      1 parameters
      1 conditional paths
      uses function checkConstantPoolIndex(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable constantPool defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function checkConstantTag(Constant,int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable CONSTANT_Utf8 defined in edu::umd::cs::findbugs::classfile::IClassConstants
   function parse(ClassNameAndSuperclassInfo.Builder) in line 86
      protection public
      56 lines of code
      1 parameters
      8 conditional paths
      uses variable in defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable constantPool defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function readConstant() defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable CONSTANT_Double defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses variable CONSTANT_Long defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses function getClassDescriptor(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable EMPTY_ARRAY defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function extractReferencedClasses() defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function parse(ClassInfo.Builder) in line 146
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function readAttribute() in line 430
      15 lines of code
      0 parameters
      3 conditional paths
      uses variable in defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function getUtf8String(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function readInnerClassesAttribute(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function readConstant() in line 235
      35 lines of code
      0 parameters
      9 conditional paths
      uses variable in defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable CONSTANT_FORMAT_MAP defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function readField(ClassDescriptor) in line 360
      11 lines of code
      1 parameters
      1 conditional paths
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable ACC_STATIC defined in edu::umd::cs::findbugs::classfile::IClassConstants
   function readInnerClassesAttribute(int) in line 453
      18 lines of code
      1 parameters
      4 conditional paths
      uses variable in defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function getClassDescriptor(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function readMethod(ClassDescriptor) in line 380
      11 lines of code
      1 parameters
      3 conditional paths
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable ACC_STATIC defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses variable in defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function getUtf8String(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function readAttribute() defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function ClassParser(DataInputStream,@CheckForNull ClassDescriptor,ICodeBaseEntry) in line 74
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
      uses variable in defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   variable codeBaseEntry in line 63
   variable CONSTANT_FORMAT_MAP in line 212
   variable constantPool in line 64
   variable expectedClassDescriptor in line 62
   variable immediateEnclosingClass in line 65
   variable in in line 61
module edu::umd::cs::findbugs::classfile::engine::ClassParser::Constant
module edu::umd::cs::findbugs::classfile::engine::ClassParser::FieldOrMethodDescriptorCreator
   function create(String,String,String,int) in line 349
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/ClassParserInterface.java
module edu::umd::cs::findbugs::classfile::engine::ClassParserInterface
   function parse(ClassNameAndSuperclassInfo.Builder) in line 45
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function parse(ClassInfo.Builder) in line 55
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/ClassParserUsingASM.java
module edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM
   inherits from edu::umd::cs::findbugs::classfile::engine::ClassParserInterface
   function parse(final ClassNameAndSuperclassInfo.Builder) in line 87
      protection public
      325 lines of code
      1 parameters
      64 conditional paths
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM
      uses variable classReader defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM
      uses variable slashedClassName defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM
      uses function getAnnotationVisitor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses function setUsesConcurrency() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses function setSourceSignature(String) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo::Builder
      uses function setSourceSignature(String) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo::Builder
      uses variable RETURN_OPCODE_SET defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function addBridgeMethodDescriptor(MethodInfo,String) defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses function addMethodDescriptor(MethodInfo) defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses function setHasStubs() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function parse(ClassInfo.Builder) in line 413
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function parse(final ClassNameAndSuperclassInfo.Builder) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM
   function ClassParserUsingASM(ClassReader,@CheckForNull ClassDescriptor,ICodeBaseEntry) in line 77
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses variable classReader defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM
   variable classReader in line 69
   variable codeBaseEntry in line 72
   variable expectedClassDescriptor in line 71
   variable RETURN_OPCODE_SET in line 58
   variable slashedClassName in line 70
module edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::State
   variable AFTER_METHOD_CALL in line 73
      protection public
   variable INITIAL in line 73
      protection public
   variable THIS_LOADED in line 73
      protection public
   variable VARIABLE_LOADED in line 73
      protection public
module edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::StubState
   variable INITIAL in line 74
      protection public
   variable INITIALIZE_RUNTIME in line 74
      protection public
   variable LOADED_STUB in line 74
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/ClassParserUsingBCEL.java
module edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
   inherits from edu::umd::cs::findbugs::classfile::engine::ClassParserInterface
   function parse(final ClassNameAndSuperclassInfo.Builder) in line 69
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
      uses variable javaClass defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable EMPTY_ARRAY defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function parse(ClassInfo.Builder) in line 94
      protection public
      33 lines of code
      1 parameters
      3 conditional paths
      uses function parse(final ClassNameAndSuperclassInfo.Builder) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
      uses variable javaClass defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
      uses function parseMethod(Method) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
      uses function parseField(Field) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function parseField(Field) in line 131
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable slashedClassName defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
   function parseMethod(Method) in line 138
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable slashedClassName defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
   function ClassParserUsingBCEL(JavaClass,@CheckForNull ClassDescriptor,ICodeBaseEntry) in line 57
      protection public
      9 lines of code
      3 parameters
      1 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
   variable codeBaseEntry in line 54
   variable expectedClassDescriptor in line 53
   variable javaClass in line 51
   variable slashedClassName in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/engine/SelfMethodCalls.java
module edu::umd::cs::findbugs::classfile::engine::SelfMethodCalls
   function getSelfCalls(final ClassDescriptor,final Map< String, T >) in line 45
      protection public
      32 lines of code
      2 parameters
      3 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function interestingSignature(String) defined in edu::umd::cs::findbugs::classfile::engine::SelfMethodCalls
      uses function add(K,V) defined in edu::umd::cs::findbugs::util::MultiMap
   function interestingSignature(String) in line 42
      3 lines of code
      1 parameters
      1 conditional paths
   function SelfMethodCalls(ClassReader) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classReader defined in edu::umd::cs::findbugs::classfile::engine::SelfMethodCalls
   variable classReader in line 77
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/FieldDescriptor.java
module edu::umd::cs::findbugs::classfile::FieldDescriptor
   inherits from edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function FieldDescriptor(@SlashedClassName String,String,String,boolean) in line 40
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/FieldOrMethodDescriptor.java
module edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   inherits from edu::umd::cs::findbugs::classfile::FieldOrMethodName
   inherits from Comparable
   abstract class
   function compareTo(FieldOrMethodName) in line 97
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function compareTo(ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodName
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodName
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodName
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodName
   function compareTo(Object) in line 151
      protection public
      12 lines of code
      1 parameters
      5 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function FieldOrMethodDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function compareTo(FieldOrMethodName) defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function equals(Object) in line 118
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function FieldOrMethodDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable isStatic defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable slashedClassName defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable signature defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function getClassDescriptor() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable slashedClassName defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function getName() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function getNameSigHashCode(String,String) in line 51
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable signature defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function getNameSigHashCode() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nameSigHashCode defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function getSignature() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function getSlashedClassName() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable slashedClassName defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function hashCode() in line 133
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable slashedClassName defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable nameSigHashCode defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function isStatic() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 146
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable signature defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function FieldOrMethodDescriptor(@SlashedClassName String,String,String,boolean) in line 40
      protection public
      9 lines of code
      4 parameters
      1 conditional paths
      uses variable slashedClassName defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable signature defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getNameSigHashCode() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   variable CACHE_SIZE in line 32
   variable cachedHashCode in line 37
   variable isStatic in line 36
   variable name in line 34
   variable nameSigHashCode in line 38
   variable signature in line 35
   variable slashedClassName in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/FieldOrMethodName.java
module edu::umd::cs::findbugs::classfile::FieldOrMethodName
   function getClassDescriptor() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSignature() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/Global.java
module edu::umd::cs::findbugs::classfile::Global
   abstract class
   function getAnalysisCache() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisCacheThreadLocal defined in edu::umd::cs::findbugs::classfile::Global
   function removeAnalysisCacheForCurrentThread() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisCacheThreadLocal defined in edu::umd::cs::findbugs::classfile::Global
   function setAnalysisCacheForCurrentThread(IAnalysisCache) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable analysisCacheThreadLocal defined in edu::umd::cs::findbugs::classfile::Global
   variable analysisCacheThreadLocal in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/IAnalysisCache.java
module edu::umd::cs::findbugs::classfile::IAnalysisCache
   function eagerlyPutDatabase(Class< E >,E) in line 152
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function eagerlyPutMethodAnalysis(Class< E >,@Nonnull MethodDescriptor,Object) in line 102
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function getAnalysisLocals() in line 171
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) in line 66
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getClassPath() in line 159
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDatabase(Class< E >) in line 142
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getErrorLogger() in line 166
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) in line 88
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getProfiler() in line 177
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function probeClassAnalysis(Class< E >,@Nonnull ClassDescriptor) in line 77
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function purgeAllMethodAnalysis() in line 116
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function purgeMethodAnalyses(@Nonnull MethodDescriptor) in line 111
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine< E >) in line 43
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function registerDatabaseFactory(Class< E >,IDatabaseFactory< E >) in line 125
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function registerMethodAnalysisEngine(Class< E >,IMethodAnalysisEngine< E >) in line 54
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/IAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::IAnalysisEngine
   function analyze(IAnalysisCache,DescriptorType) in line 35
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function registerWith(IAnalysisCache) in line 43
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/IAnalysisEngineRegistrar.java
module edu::umd::cs::findbugs::classfile::IAnalysisEngineRegistrar
   function registerAnalysisEngines(IAnalysisCache) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/IClassAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::IClassAnalysisEngine
   inherits from IAnalysisEngine< ClassDescriptor, ResultType >
   function canRecompute() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/IClassConstants.java
module edu::umd::cs::findbugs::classfile::IClassConstants
   variable ACC_ABSTRACT in line 49
      protection public
   variable ACC_ANNOTATION in line 51
      protection public
   variable ACC_BRIDGE in line 55
      protection public
   variable ACC_ENUM in line 52
      protection public
   variable ACC_FINAL in line 44
      protection public
   variable ACC_INTERFACE in line 48
      protection public
   variable ACC_NATIVE in line 57
      protection public
   variable ACC_PRIVATE in line 41
      protection public
   variable ACC_PROTECTED in line 42
      protection public
   variable ACC_PUBLIC in line 40
      protection public
   variable ACC_STATIC in line 43
      protection public
   variable ACC_STRICT in line 58
      protection public
   variable ACC_SUPER in line 45
      protection public
   variable ACC_SYNCHRONIZED in line 54
      protection public
   variable ACC_SYNTHETIC in line 50
      protection public
   variable ACC_TRANSIENT in line 47
      protection public
   variable ACC_VARARGS in line 56
      protection public
   variable ACC_VOLATILE in line 46
      protection public
   variable CONSTANT_Class in line 28
      protection public
   variable CONSTANT_Double in line 36
      protection public
   variable CONSTANT_Fieldref in line 29
      protection public
   variable CONSTANT_Float in line 34
      protection public
   variable CONSTANT_Integer in line 33
      protection public
   variable CONSTANT_InterfaceMethodref in line 31
      protection public
   variable CONSTANT_Long in line 35
      protection public
   variable CONSTANT_Methodref in line 30
      protection public
   variable CONSTANT_NameAndType in line 37
      protection public
   variable CONSTANT_String in line 32
      protection public
   variable CONSTANT_Utf8 in line 38
      protection public
   variable MAGIC in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/IClassFactory.java
module edu::umd::cs::findbugs::classfile::IClassFactory
   function createAnalysisCache(IClassPath,BugReporter) in line 39
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function createClassPath() in line 30
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createClassPathBuilder(IErrorLogger) in line 32
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function createFilesystemCodeBaseLocator(String) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function createNestedArchiveCodeBaseLocator(ICodeBase,String) in line 37
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/IClassObserver.java
module edu::umd::cs::findbugs::classfile::IClassObserver
   function observeClass(ClassDescriptor) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/IClassPath.java
module edu::umd::cs::findbugs::classfile::IClassPath
   function addCodeBase(ICodeBase) in line 39
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function appCodeBaseIterator() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function auxCodeBaseIterator() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function close() in line 78
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function lookupResource(String) in line 62
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function mapResourceNameToCodeBaseEntry(String,ICodeBaseEntry) in line 72
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/IClassPathBuilder.java
module edu::umd::cs::findbugs::classfile::IClassPathBuilder
   function addCodeBase(ICodeBaseLocator,boolean) in line 43
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function build(IClassPath,IClassPathBuilderProgress) in line 63
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getAppClassList() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function scanNestedArchives(boolean) in line 52
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/IClassPathBuilderProgress.java
module edu::umd::cs::findbugs::classfile::IClassPathBuilderProgress
   function finishArchive() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function startArchive(String) in line 33
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/ICodeBase.java
module edu::umd::cs::findbugs::classfile::ICodeBase
   function close() in line 126
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function containsSourceFiles() in line 93
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCodeBaseLocator() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getHowDiscovered() in line 85
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getLastModifiedTime() in line 121
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPathName() in line 101
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isApplicationCodeBase() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function lookupResource(String) in line 56
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setApplicationCodeBase(boolean) in line 63
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setHowDiscovered(int) in line 78
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setLastModifiedTime(long) in line 109
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable IN_JAR_MANIFEST in line 37
      protection public
   variable IN_SYSTEM_CLASSPATH in line 40
      protection public
   variable NESTED in line 34
      protection public
   variable SPECIFIED in line 31
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/ICodeBaseEntry.java
module edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function getClassDescriptor() in line 72
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCodeBase() in line 59
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumBytes() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getResourceName() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function openResource() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function overrideResourceName(String) in line 79
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/ICodeBaseIterator.java
module edu::umd::cs::findbugs::classfile::ICodeBaseIterator
   function hasNext() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function next() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/ICodeBaseLocator.java
module edu::umd::cs::findbugs::classfile::ICodeBaseLocator
   function createRelativeCodeBaseLocator(String) in line 46
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function openCodeBase() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 57
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/IDatabaseFactory.java
module edu::umd::cs::findbugs::classfile::IDatabaseFactory
   function createDatabase() in line 28
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function registerWith(IAnalysisCache) in line 30
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/IErrorLogger.java
module edu::umd::cs::findbugs::classfile::IErrorLogger
   function logError(String) in line 47
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function logError(String,Throwable) in line 55
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function reportMissingClass(ClassNotFoundException) in line 33
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reportMissingClass(ClassDescriptor) in line 40
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reportSkippedAnalysis(MethodDescriptor) in line 62
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/IMethodAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::IMethodAnalysisEngine
   inherits from IAnalysisEngine< MethodDescriptor, ResultType >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/impl/AbstractScannableCodeBase.java
module edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   inherits from edu::umd::cs::findbugs::classfile::IScannableCodeBase
   abstract class
   function addResourceNameTranslation(String,String) in line 109
      protection public
      4 lines of code
      2 parameters
      2 conditional paths
      uses variable resourceNameTranslationMap defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function containsSourceFiles() in line 60
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getCodeBaseLocator() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function getHowDiscovered() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable howDiscovered defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function getLastModifiedTime() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastModifiedTime defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function isApplicationCodeBase() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isAppCodeBase defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function setApplicationCodeBase(boolean) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isAppCodeBase defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function setHowDiscovered(int) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable howDiscovered defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function setLastModifiedTime(long) in line 96
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable lastModifiedTime defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function translateResourceName(String) in line 114
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable resourceNameTranslationMap defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function AbstractScannableCodeBase(ICodeBaseLocator) in line 44
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   variable codeBaseLocator in line 38
   variable howDiscovered in line 40
   variable isAppCodeBase in line 39
   variable lastModifiedTime in line 41
   variable resourceNameTranslationMap in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/impl/AbstractScannableCodeBaseEntry.java
module edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   abstract class
   function getCodeBase() in line 28
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getRealResourceName() in line 30
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getResourceName() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getCodeBase() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
      uses function translateResourceName(String) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses function getRealResourceName() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   function overrideResourceName(String) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCodeBase() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
      uses function addResourceNameTranslation(String,String) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses function getRealResourceName() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/impl/AnalysisCache.java
module edu::umd::cs::findbugs::classfile::impl::AnalysisCache
   inherits from edu::umd::cs::findbugs::classfile::IAnalysisCache
   function findOrCreateDescriptorMap(final Map< Class<?>, Map< DescriptorType, Object >>,final Map< Class<?>,?extends IAnalysisEngine< DescriptorType, E >>,final Class< E >) in line 381
      24 lines of code
      3 parameters
      10 conditional paths
      uses variable MAX_JAVACLASS_RESULTS_TO_CACHE defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable MAX_CONSTANT_POOL_GEN_RESULTS_TO_CACHE defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable MAX_CLASS_RESULTS_TO_CACHE defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable classAnalysisEngineMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable methodAnalysisEngineMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable databaseFactoryMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable databaseMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses function createDatabase() defined in edu::umd::cs::findbugs::classfile::IDatabaseFactory
   function getAnalysisLocals() in line 83
      protection public
      3 lines of code
      0 parameters
      5 conditional paths
      uses variable analysisLocals defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable ASSERTIONS_ENABLED defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable classPath defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
   function getClassPath() in line 154
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classPath defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
   function getErrorLogger() in line 474
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
   function getProfiler() in line 480
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugReporter
      uses function getProfiler() defined in edu::umd::cs::findbugs::ProjectStats
   function purgeAllMethodAnalysis() in line 158
      protection public
      18 lines of code
      0 parameters
      23 conditional paths
      uses function findOrCreateDescriptorMap(final Map< Class<?>, Map< DescriptorType, Object >>,final Map< Class<?>,?extends IAnalysisEngine< DescriptorType, E >>,final Class< E >) defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable classAnalysisMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable classAnalysisEngineMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses function getProfiler() defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses function analyze(IAnalysisCache,DescriptorType) defined in edu::umd::cs::findbugs::classfile::IAnalysisEngine
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function putMethodAnalysis(Class<?>,MethodDescriptor,Object) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getObjectMap(Class<?>) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses variable methodAnalysisEngineMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses function analyze(IAnalysisCache,DescriptorType) defined in IAnalysisEngine< MethodDescriptor, ResultType >
   function purgeMethodAnalyses(MethodDescriptor) in line 356
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function purgeMethodAnalyses(MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   variable analysisLocals in line 80
   variable ASSERTIONS_ENABLED in line 68
   variable bugReporter in line 73
   variable classAnalysisEngineMap in line 74
   variable classAnalysisMap in line 77
   variable classPath in line 72
   variable databaseFactoryMap in line 76
   variable databaseMap in line 78
   variable MAX_CLASS_RESULTS_TO_CACHE in line 66
   variable MAX_CONSTANT_POOL_GEN_RESULTS_TO_CACHE in line 61
   variable MAX_JAVACLASS_RESULTS_TO_CACHE in line 60
   variable methodAnalysisEngineMap in line 75
module edu::umd::cs::findbugs::classfile::impl::AnalysisCache::AbnormalAnalysisResult
   function returnOrThrow() in line 110
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/impl/ClassFactory.java
module edu::umd::cs::findbugs::classfile::impl::ClassFactory
   inherits from edu::umd::cs::findbugs::classfile::IClassFactory
   function createAnalysisCache(IClassPath,BugReporter) in line 110
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function createClassPath() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createClassPathBuilder(IErrorLogger) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function createFilesystemCodeBaseLocator(String) in line 68
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
   function createNestedArchiveCodeBaseLocator(ICodeBase,String) in line 83
      protection public
      3 lines of code
      2 parameters
      3 conditional paths
      uses function getPathName() defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   function instance() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::classfile::impl::ClassFactory
   function ClassFactory() in line 44
      2 lines of code
      0 parameters
      1 conditional paths
   variable theInstance in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/impl/ClassPathBuilder.java
module edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   inherits from edu::umd::cs::findbugs::classfile::IClassPathBuilder
   function addCodeBase(ICodeBaseLocator,boolean) in line 178
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addToWorkList(LinkedList< WorkListItem >,WorkListItem) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable projectWorkList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable SPECIFIED defined in edu::umd::cs::findbugs::classfile::ICodeBase
   function addToWorkList(LinkedList< WorkListItem >,WorkListItem) in line 741
      25 lines of code
      2 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   function addWorkListItemsForClasspath(LinkedList< WorkListItem >,String) in line 461
      15 lines of code
      2 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function addToWorkList(LinkedList< WorkListItem >,WorkListItem) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable classFactory defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function createFilesystemCodeBaseLocator(String) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses variable IN_SYSTEM_CLASSPATH defined in edu::umd::cs::findbugs::classfile::ICodeBase
   function addWorkListItemsForExtDir(LinkedList< WorkListItem >,String) in line 483
      21 lines of code
      2 parameters
      3 conditional paths
      uses function addToWorkList(LinkedList< WorkListItem >,WorkListItem) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable classFactory defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function createFilesystemCodeBaseLocator(String) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses variable IN_SYSTEM_CLASSPATH defined in edu::umd::cs::findbugs::classfile::ICodeBase
   function build(IClassPath,IClassPathBuilderProgress) in line 192
      protection public
      52 lines of code
      2 parameters
      9 conditional paths
      uses function processWorkList(IClassPath,LinkedList< WorkListItem >,IClassPathBuilderProgress) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable projectWorkList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function locateCodebasesRequiredForAnalysis(IClassPath,IClassPathBuilderProgress) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable discoveredCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function hasNext() defined in edu::umd::cs::findbugs::classfile::ICodeBaseIterator
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses variable appClassList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable DEBUG defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function dumpCodeBaseList(Iterator<?extends ICodeBase >,String) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   function buildFindBugsAnnotationCodebaseList() in line 362
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createFindBugsLibWorkList(String) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   function buildFindBugsFullJarCodebaseList() in line 296
      16 lines of code
      0 parameters
      2 conditional paths
      uses variable IN_SYSTEM_CLASSPATH defined in edu::umd::cs::findbugs::classfile::ICodeBase
   function buildJSR305AnnotationsCodebaseList() in line 369
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createFindBugsLibWorkList(String) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   function buildSystemCodebaseList() in line 336
      22 lines of code
      0 parameters
      3 conditional paths
      uses function addWorkListItemsForClasspath(LinkedList< WorkListItem >,String) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function addWorkListItemsForExtDir(LinkedList< WorkListItem >,String) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   function createFindBugsLibWorkList(String) in line 373
      74 lines of code
      1 parameters
      15 conditional paths
      uses variable classFactory defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function createFilesystemCodeBaseLocator(String) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses variable IN_SYSTEM_CLASSPATH defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses variable DEBUG defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function matchesJarFile(String,String) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   function dumpCodeBaseList(Iterator<?extends ICodeBase >,String) in line 324
      11 lines of code
      2 parameters
      3 conditional paths
      uses function getCodeBaseLocator() defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses function toString() defined in edu::umd::cs::findbugs::classfile::ICodeBaseLocator
      uses function containsSourceFiles() defined in edu::umd::cs::findbugs::classfile::ICodeBase
   function getAppClassList() in line 770
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable appClassList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   function locateCodebasesRequiredForAnalysis(IClassPath,IClassPathBuilderProgress) in line 248
      41 lines of code
      2 parameters
      10 conditional paths
      uses variable discoveredCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function probeCodeBaseForResource(DiscoveredCodeBase,String) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable DEBUG defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function processWorkList(IClassPath,LinkedList< WorkListItem >,IClassPathBuilderProgress) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function buildSystemCodebaseList() defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function runningFindBugsFullJar() defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function buildFindBugsFullJarCodebaseList() defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function buildFindBugsAnnotationCodebaseList() defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function buildJSR305AnnotationsCodebaseList() defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   function matchesJarFile(String,String) in line 448
      5 lines of code
      2 parameters
      1 conditional paths
   function parseClassName(ICodeBaseEntry) in line 659
      26 lines of code
      1 parameters
      4 conditional paths
      uses function openResource() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses function parse(ClassNameAndSuperclassInfo.Builder) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserInterface
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses function overrideResourceName(String) defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses variable errorLogger defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function probeCodeBaseForResource(DiscoveredCodeBase,String) in line 319
      4 lines of code
      2 parameters
      1 conditional paths
   function processWorkList(IClassPath,LinkedList< WorkListItem >,IClassPathBuilderProgress) in line 518
      82 lines of code
      3 parameters
      15 conditional paths
      uses variable SPECIFIED defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses variable DEBUG defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable discoveredCodeBaseMap defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function getPathName() defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
      uses variable discoveredCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function scanCodebase(IClassPath,LinkedList< WorkListItem >,DiscoveredCodeBase) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function scanJarManifestForClassPathEntries(LinkedList< WorkListItem >,ICodeBase) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable errorLogger defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function runningFindBugsFullJar() in line 290
      5 lines of code
      0 parameters
      1 conditional paths
   function scanCodebase(IClassPath,LinkedList< WorkListItem >,DiscoveredCodeBase) in line 613
      38 lines of code
      3 parameters
      7 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function iterator() defined in edu::umd::cs::findbugs::classfile::IScannableCodeBase
      uses function hasNext() defined in edu::umd::cs::findbugs::classfile::ICodeBaseIterator
      uses function next() defined in edu::umd::cs::findbugs::classfile::ICodeBaseIterator
      uses variable VERBOSE defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses variable NO_PARSE_CLASS_NAMES defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function isApplicationCodeBase() defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses function parseClassName(ICodeBaseEntry) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable scanNestedArchives defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable classFactory defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function createNestedArchiveCodeBaseLocator(ICodeBase,String) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses function addToWorkList(LinkedList< WorkListItem >,WorkListItem) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable NESTED defined in edu::umd::cs::findbugs::classfile::ICodeBase
   function scanJarManifestForClassPathEntries(LinkedList< WorkListItem >,ICodeBase) in line 693
      38 lines of code
      2 parameters
      6 conditional paths
      uses function openResource() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses function createRelativeCodeBaseLocator(String) defined in edu::umd::cs::findbugs::classfile::ICodeBaseLocator
      uses function addToWorkList(LinkedList< WorkListItem >,WorkListItem) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable IN_JAR_MANIFEST defined in edu::umd::cs::findbugs::classfile::ICodeBase
   function scanNestedArchives(boolean) in line 185
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable scanNestedArchives defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   variable appClassList in line 157
   variable classFactory in line 152
   variable DEBUG in line 70
   variable discoveredCodeBaseList in line 155
   variable discoveredCodeBaseMap in line 156
   variable errorLogger in line 153
   variable NO_PARSE_CLASS_NAMES in line 71
   variable projectWorkList in line 154
   variable scanNestedArchives in line 158
   variable VERBOSE in line 69
module edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder::WorkListItem
   function getCodeBaseLocator() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHowDiscovered() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isAppCodeBase() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function WorkListItem(ICodeBaseLocator,boolean,int) in line 89
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable codeBaseLocator in line 80
   variable howDiscovered in line 82
   variable isAppCodeBase in line 81
module edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder::DiscoveredCodeBase
   function addCodeBaseEntry(ICodeBaseEntry) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getCodeBase() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getResourceList() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterator() in line 135
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   function DiscoveredCodeBase(ICodeBase) in line 118
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/impl/ClassPathImpl.java
module edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   inherits from edu::umd::cs::findbugs::classfile::IClassPath
   function addCodeBase(ICodeBase) in line 67
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function isApplicationCodeBase() defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses variable appCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
      uses variable auxCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   function appCodeBaseIterator() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable appCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   function auxCodeBaseIterator() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable auxCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   function close() in line 95
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable appCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
      uses variable auxCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
      uses variable codeBaseEntryMap defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   function lookupResource(String) in line 110
      protection public
      25 lines of code
      1 parameters
      4 conditional paths
      uses variable codeBaseEntryMap defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
      uses function search(List<?extends ICodeBase >,String) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
      uses variable appCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
      uses variable auxCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   function mapResourceNameToCodeBaseEntry(String,ICodeBaseEntry) in line 158
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable codeBaseEntryMap defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   function search(List<?extends ICodeBase >,String) in line 144
      10 lines of code
      2 parameters
      3 conditional paths
   function toString() in line 51
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable appCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
      uses variable auxCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   function ClassPathImpl() in line 44
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   variable appCodeBaseList in line 40
   variable auxCodeBaseList in line 41
   variable codeBaseEntryMap in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/impl/DelegatingCodeBaseEntry.java
module edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function equals(Object) in line 94
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function DelegatingCodeBaseEntry(ICodeBase,ICodeBaseEntry) defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses variable frontEndCodeBase defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
   function getClassDescriptor() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function getCodeBase() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable frontEndCodeBase defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
   function getNumBytes() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses function getNumBytes() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function getResourceName() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function hashCode() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable frontEndCodeBase defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
   function openResource() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses function openResource() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function overrideResourceName(String) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses function overrideResourceName(String) defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function toString() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
   function DelegatingCodeBaseEntry(ICodeBase,ICodeBaseEntry) in line 43
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable frontEndCodeBase defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
   variable delegateCodeBaseEntry in line 41
   variable frontEndCodeBase in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/impl/DelegatingCodeBaseIterator.java
module edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseIterator
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseIterator
   function hasNext() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBaseIterator defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseIterator
      uses function hasNext() defined in edu::umd::cs::findbugs::classfile::ICodeBaseIterator
   function next() in line 53
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBaseIterator defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseIterator
      uses function next() defined in edu::umd::cs::findbugs::classfile::ICodeBaseIterator
      uses variable frontEndCodeBase defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseIterator
   function DelegatingCodeBaseIterator(ICodeBase,IScannableCodeBase) in line 38
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable frontEndCodeBase defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseIterator
   variable delegateCodeBaseIterator in line 36
   variable frontEndCodeBase in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/impl/DirectoryCodeBase.java
module edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase
   inherits from edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function close() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPathName() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable directory defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase
   function iterator() in line 106
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable searchPerformed defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase
      uses variable rfs defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase
      uses function search() defined in edu::umd::cs::findbugs::RecursiveFileSearch
   function lookupResource(String) in line 132
      protection public
      12 lines of code
      1 parameters
      6 conditional paths
      uses function translateResourceName(String) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses variable directory defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase
   function toString() in line 202
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable directory defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase
   function DirectoryCodeBase(ICodeBaseLocator,File) in line 86
      protection public
      16 lines of code
      2 parameters
      2 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses variable directory defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase
   variable directory in line 76
   variable rfs in line 77
   variable searchPerformed in line 78
module edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase::DirectoryCodeBaseIterator
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseIterator
   function hasNext() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 59
      protection public
      15 lines of code
      0 parameters
      2 conditional paths
      uses function getLastModifiedTime() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses function setLastModifiedTime(long) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/impl/DirectoryCodeBaseEntry.java
module edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   inherits from edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   function equals(Object) in line 92
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function DirectoryCodeBaseEntry(DirectoryCodeBase,String) defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
      uses variable realResourceName defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   function getClassDescriptor() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   function getCodeBase() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   function getNumBytes() in line 48
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
      uses variable realResourceName defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   function getRealResourceName() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable realResourceName defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   function hashCode() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
      uses variable realResourceName defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   function openResource() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
      uses variable realResourceName defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   function toString() in line 113
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getCodeBase() defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   function DirectoryCodeBaseEntry(DirectoryCodeBase,String) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
      uses variable realResourceName defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   variable codeBase in line 37
   variable realResourceName in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/impl/FilesystemCodeBaseLocator.java
module edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseLocator
   function createRelativeCodeBaseLocator(String) in line 60
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable pathName defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
      uses function FilesystemCodeBaseLocator(String) defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   function equals(Object) in line 94
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function FilesystemCodeBaseLocator(String) defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
      uses variable pathName defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   function getPathName() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pathName defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   function hashCode() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pathName defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   function openCodeBase() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pathName defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   function FilesystemCodeBaseLocator(String) in line 36
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable pathName defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   variable pathName in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/impl/NestedZipFileCodeBase.java
module edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
   inherits from edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function close() in line 121
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable delegateCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
      uses function close() defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses variable tempFile defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
   function getPathName() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterator() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
   function lookupResource(String) in line 103
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable delegateCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
      uses function lookupResource(String) defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
   function NestedZipFileCodeBase(NestedZipFileCodeBaseLocator) in line 56
      protection public
      36 lines of code
      1 parameters
      5 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses variable tempFile defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
      uses variable parentCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
      uses function lookupResource(String) defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
      uses function openResource() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses variable delegateCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
   variable delegateCodeBase in line 49
   variable parentCodeBase in line 46
   variable resourceName in line 47
   variable tempFile in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/impl/NestedZipFileCodeBaseLocator.java
module edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseLocator
   function createRelativeCodeBaseLocator(String) in line 59
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function NestedZipFileCodeBaseLocator(ICodeBase,String) defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
      uses variable parentCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   function equals(Object) in line 83
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function NestedZipFileCodeBaseLocator(ICodeBase,String) defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
      uses variable parentCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   function getParentCodeBase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parentCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   function getResourceName() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   function hashCode() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parentCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   function openCodeBase() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parentCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
      uses function getCodeBaseLocator() defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   function NestedZipFileCodeBaseLocator(ICodeBase,String) in line 37
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable parentCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   variable parentCodeBase in line 34
   variable resourceName in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/impl/SingleFileCodeBase.java
module edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   inherits from edu::umd::cs::findbugs::classfile::IScannableCodeBase
   function close() in line 178
      protection public
      3 lines of code
      0 parameters
      6 conditional paths
      uses variable resourceNameKnown defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
      uses function toResourceName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable fileName defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
      uses function parse(ClassNameAndSuperclassInfo.Builder) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserInterface
   function containsSourceFiles() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCodeBaseLocator() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function getHowDiscovered() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable howDiscovered defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function getLastModifiedTime() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastModifiedTime defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function getPathName() in line 167
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fileName defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function isApplicationCodeBase() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isAppCodeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function iterator() in line 85
      protection public
      23 lines of code
      0 parameters
      2 conditional paths
   function lookupResource(String) in line 112
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function setApplicationCodeBase(boolean) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isAppCodeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function setHowDiscovered(int) in line 137
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable howDiscovered defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function setLastModifiedTime(long) in line 151
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable lastModifiedTime defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function toString() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fileName defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function SingleFileCodeBase(ICodeBaseLocator,String) in line 58
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
      uses variable fileName defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   variable codeBaseLocator in line 50
   variable fileName in line 51
   variable howDiscovered in line 53
   variable isAppCodeBase in line 52
   variable lastModifiedTime in line 54
   variable resourceName in line 56
   variable resourceNameKnown in line 55
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/impl/SingleFileCodeBaseEntry.java
module edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function equals(Object) in line 77
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function SingleFileCodeBaseEntry(SingleFileCodeBase) defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function getClassDescriptor() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function getCodeBase() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function getNumBytes() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function getResourceName() in line 40
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable overriddenResourceName defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function hashCode() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function openResource() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function overrideResourceName(String) in line 69
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable overriddenResourceName defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function toString() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
      uses function getPathName() defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function SingleFileCodeBaseEntry(SingleFileCodeBase) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   variable codeBase in line 18
   variable overriddenResourceName in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/impl/ZipCodeBaseFactory.java
module edu::umd::cs::findbugs::classfile::impl::ZipCodeBaseFactory
   function countUsingZipFile(ICodeBaseLocator,File) in line 87
      20 lines of code
      2 parameters
      5 conditional paths
   function countUsingZipInputStream(ICodeBaseLocator,File) in line 59
      18 lines of code
      2 parameters
      5 conditional paths
   function makeZipCodeBase(ICodeBaseLocator,File) in line 42
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getProfiler() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function countUsingZipFile(ICodeBaseLocator,File) defined in edu::umd::cs::findbugs::classfile::impl::ZipCodeBaseFactory
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/impl/ZipFileCodeBase.java
module edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBase
   inherits from edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function close() in line 145
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getPathName() in line 138
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterator() in line 92
      protection public
      42 lines of code
      0 parameters
      5 conditional paths
      uses function setLastModifiedTime(long) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function lookupResource(String) in line 73
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses function translateResourceName(String) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function toString() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ZipFileCodeBase(ICodeBaseLocator,File) in line 50
      protection public
      19 lines of code
      2 parameters
      6 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses function setLastModifiedTime(long) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/impl/ZipFileCodeBaseEntry.java
module edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   inherits from edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   function equals(Object) in line 85
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function ZipFileCodeBaseEntry(ZipFileCodeBase,ZipEntry) defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   function getClassDescriptor() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   function getCodeBase() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   function getNumBytes() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   function getRealResourceName() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   function hashCode() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   function openResource() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   function toString() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getCodeBase() defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   function ZipFileCodeBaseEntry(ZipFileCodeBase,ZipEntry) in line 39
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   variable codeBase in line 36
   variable zipEntry in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/impl/ZipInputStreamCodeBase.java
module edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBase
   inherits from edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function close() in line 227
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPathName() in line 220
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterator() in line 213
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function lookupResource(String) in line 100
      protection public
      47 lines of code
      1 parameters
      16 conditional paths
      uses function translateResourceName(String) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses function setLastModifiedTime(long) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function toString() in line 235
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ZipInputStreamCodeBase(ICodeBaseLocator,File) in line 60
      protection public
      36 lines of code
      2 parameters
      7 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses function setLastModifiedTime(long) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
module edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBase::MyIterator
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseIterator
   function getNextEntry() in line 176
      6 lines of code
      0 parameters
      1 conditional paths
   function hasNext() in line 186
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function next() in line 197
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/impl/ZipInputStreamCodeBaseEntry.java
module edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
   inherits from edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   function equals(Object) in line 91
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function ZipInputStreamCodeBaseEntry(ZipInputStreamCodeBase,ZipEntry,byte   []) defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
   function getBytes() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bytes defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
   function getClassDescriptor() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   function getCodeBase() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
   function getNumBytes() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
   function getRealResourceName() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
   function hashCode() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
   function openResource() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bytes defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
   function toString() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getCodeBase() defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   function ZipInputStreamCodeBaseEntry(ZipInputStreamCodeBase,ZipEntry,byte   []) in line 41
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
      uses variable bytes defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
   variable bytes in line 39
   variable codeBase in line 37
   variable zipEntry in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/InvalidClassFileFormatException.java
module edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   inherits from edu::umd::cs::findbugs::classfile::CheckedAnalysisException
   function getClassDescriptor() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   function getCodeBaseEntry() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   function getMessage() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   function InvalidClassFileFormatException(ClassDescriptor,ICodeBaseEntry) in line 29
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   function InvalidClassFileFormatException(ClassDescriptor,ICodeBaseEntry,Throwable) in line 35
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   function InvalidClassFileFormatException(String,ClassDescriptor,ICodeBaseEntry) in line 42
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   variable classDescriptor in line 26
   variable codeBaseEntry in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/IScannableCodeBase.java
module edu::umd::cs::findbugs::classfile::IScannableCodeBase
   inherits from edu::umd::cs::findbugs::classfile::ICodeBase
   function iterator() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/MethodDescriptor.java
module edu::umd::cs::findbugs::classfile::MethodDescriptor
   inherits from edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function getBridgeSignature() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bridgeMethodSignature defined in edu::umd::cs::findbugs::classfile::MethodDescriptor
   function isBridged() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bridgeMethodSignature defined in edu::umd::cs::findbugs::classfile::MethodDescriptor
   function MethodDescriptor(@SlashedClassName String,String,String,boolean) in line 47
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function MethodDescriptor(@SlashedClassName String,String,String,@CheckForNull String,boolean,boolean) in line 62
      protection public
      3 lines of code
      6 parameters
      1 conditional paths
      uses variable bridgeMethodSignature defined in edu::umd::cs::findbugs::classfile::MethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function MethodDescriptor(@SlashedClassName String,String,String,@CheckForNull String,boolean) in line 75
      protection public
      6 lines of code
      5 parameters
      1 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable bridgeMethodSignature defined in edu::umd::cs::findbugs::classfile::MethodDescriptor
   variable bridgeMethodSignature in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/RecomputableClassAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::RecomputableClassAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::IClassAnalysisEngine
   abstract class
   function canRecompute() in line 29
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/ReflectionDatabaseFactory.java
module edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
   inherits from IDatabaseFactory< E >
   function createDatabase() in line 49
      protection public
      16 lines of code
      0 parameters
      3 conditional paths
      uses function createUsingStaticCreateMethod() defined in edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
      uses function createUsingConstructor() defined in edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
      uses variable databaseClass defined in edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
   function createUsingConstructor() in line 103
      18 lines of code
      0 parameters
      3 conditional paths
      uses variable databaseClass defined in edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
   function createUsingStaticCreateMethod() in line 72
      24 lines of code
      0 parameters
      5 conditional paths
      uses variable databaseClass defined in edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
   function registerWith(IAnalysisCache) in line 125
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerDatabaseFactory(Class< E >,IDatabaseFactory< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable databaseClass defined in edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
   function ReflectionDatabaseFactory(Class< E >) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable databaseClass defined in edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
   variable databaseClass in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/ResourceNotFoundException.java
module edu::umd::cs::findbugs::classfile::ResourceNotFoundException
   inherits from edu::umd::cs::findbugs::classfile::CheckedAnalysisException
   function getResourceName() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::ResourceNotFoundException
   function toClassNotFoundException() in line 69
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::ResourceNotFoundException
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function ResourceNotFoundException(String) in line 38
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable MESSAGE_PREFIX defined in edu::umd::cs::findbugs::classfile::ResourceNotFoundException
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::ResourceNotFoundException
   function ResourceNotFoundException(String,Throwable) in line 49
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable MESSAGE_PREFIX defined in edu::umd::cs::findbugs::classfile::ResourceNotFoundException
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::ResourceNotFoundException
   variable MESSAGE_PREFIX in line 31
      protection public
   variable resourceName in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/classfile/UncheckedAnalysisException.java
module edu::umd::cs::findbugs::classfile::UncheckedAnalysisException
   inherits from RuntimeException
   function UncheckedAnalysisException(String) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function UncheckedAnalysisException(String,Throwable) in line 43
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ClassScreener.java
module edu::umd::cs::findbugs::ClassScreener
   inherits from edu::umd::cs::findbugs::IClassScreener
   function addAllowedClass(String) in line 87
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable START defined in edu::umd::cs::findbugs::ClassScreener
      uses function dotsToRegex(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses variable DEBUG defined in edu::umd::cs::findbugs::ClassScreener
      uses variable patternList defined in edu::umd::cs::findbugs::ClassScreener
   function addAllowedPackage(String) in line 99
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable START defined in edu::umd::cs::findbugs::ClassScreener
      uses function dotsToRegex(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses variable SEP defined in edu::umd::cs::findbugs::ClassScreener
      uses variable JAVA_IDENTIFIER_PART defined in edu::umd::cs::findbugs::ClassScreener
      uses variable DEBUG defined in edu::umd::cs::findbugs::ClassScreener
      uses variable patternList defined in edu::umd::cs::findbugs::ClassScreener
   function addAllowedPrefix(String) in line 116
      protection public
      9 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ClassScreener
      uses variable START defined in edu::umd::cs::findbugs::ClassScreener
      uses function dotsToRegex(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses variable SEP defined in edu::umd::cs::findbugs::ClassScreener
      uses variable patternList defined in edu::umd::cs::findbugs::ClassScreener
   function dotsToRegex(String) in line 72
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable SEP defined in edu::umd::cs::findbugs::ClassScreener
   function matches(String) in line 129
      protection public
      20 lines of code
      1 parameters
      8 conditional paths
      uses variable patternList defined in edu::umd::cs::findbugs::ClassScreener
      uses variable DEBUG defined in edu::umd::cs::findbugs::ClassScreener
   function vacuous() in line 153
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable patternList defined in edu::umd::cs::findbugs::ClassScreener
   function ClassScreener() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG in line 43
   variable JAVA_IDENTIFIER_PART in line 52
   variable patternList in line 54
   variable SEP in line 47
   variable START in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ClassWarningSuppressor.java
module edu::umd::cs::findbugs::ClassWarningSuppressor
   inherits from edu::umd::cs::findbugs::WarningSuppressor
   function getClassAnnotation() in line 16
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function match(BugInstance) in line 21
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function contains(ClassAnnotation) defined in edu::umd::cs::findbugs::ClassAnnotation
   function ClassWarningSuppressor(String,ClassAnnotation) in line 8
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/cloud/AbstractCloud.java
module edu::umd::cs::findbugs::cloud::AbstractCloud
   inherits from edu::umd::cs::findbugs::cloud::Cloud
   abstract class
   function addListener(CloudListener) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function canStoreUserAnnotation(BugInstance) in line 163
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function claim(BugInstance) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function claimedBy(BugInstance) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBugCollection() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function getBugLink(BugInstance) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBugLinkStatus(BugInstance) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getClassificationDisagreement(BugInstance) in line 167
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getClassificationScore(BugInstance) in line 135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getUserDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function score() defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function getClassificationVariance(BugInstance) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getCloudReport(BugInstance) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getIWillFix(BugInstance) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getUserDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable I_WILL_FIX defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function getNumberReviewers(BugInstance) in line 146
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getUserDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function getPortionObsoleteClassifications(BugInstance) in line 138
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getUserDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses enumvalue OBSOLETE_CODE defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function getSourceLink(BugInstance) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSourceLinkToolTip(BugInstance) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getStatusMsg() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUserDate(BugInstance) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getUserTimestamp(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
   function hasExistingBugLink(BugInstance) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function overallClassificationIsNotAProblem(BugInstance) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function printCloudReport(Iterable< BugInstance >,PrintWriter) in line 122
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function printCloudSummary(PrintWriter,Iterable< BugInstance >,String[]) in line 154
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function removeListener(CloudListener) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function shutdown() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function supportsBugLinks() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function supportsClaims() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function supportsCloudReports() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function supportsCloudSummaries() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function supportsSourceLinks() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function updatedIssue(BugInstance) in line 110
      4 lines of code
      1 parameters
      2 conditional paths
   function updatedStatus() in line 105
      4 lines of code
      0 parameters
      2 conditional paths
   function AbstractCloud(BugCollection) in line 38
      3 lines of code
      1 parameters
      1 conditional paths
   variable bugCollection in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/cloud/BugCollectionStorageCloud.java
module edu::umd::cs::findbugs::cloud::BugCollectionStorageCloud
   inherits from edu::umd::cs::findbugs::cloud::AbstractCloud
   function availableForInitialization() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function bugFiled(BugInstance,Object) in line 130
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function bugLinkEnabled(String) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function bugsPopulated() in line 99
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getFirstSeen(BugInstance) in line 88
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getMode() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUser() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getUserDesignation(BugInstance) in line 46
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getUserEvaluation(BugInstance) in line 52
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getUserTimestamp(BugInstance) in line 58
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function initialize() in line 107
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setMode(Mode) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setUserDesignation(BugInstance,UserDesignation,long) in line 68
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   function setUserEvaluation(BugInstance,String,long) in line 75
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
   function setUserTimestamp(BugInstance,long) in line 82
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function storeUserAnnotation(BugInstance) in line 115
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/cloud/Cloud.java
module edu::umd::cs::findbugs::cloud::Cloud
   function addListener(CloudListener) in line 133
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function availableForInitialization() in line 137
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function bugFiled(BugInstance,@CheckForNull Object) in line 165
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function bugsPopulated() in line 141
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function canStoreUserAnnotation(BugInstance) in line 211
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function claim(BugInstance) in line 176
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function claimedBy(BugInstance) in line 174
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getBugCollection() in line 129
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBugLink(BugInstance) in line 163
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getBugLinkStatus(BugInstance) in line 161
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getClassificationDisagreement(BugInstance) in line 192
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getClassificationScore(BugInstance) in line 188
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getClassificationVariance(BugInstance) in line 190
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getCloudReport(BugInstance) in line 169
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getFirstSeen(BugInstance) in line 202
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getIWillFix(BugInstance) in line 149
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getMode() in line 145
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumberReviewers(BugInstance) in line 196
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getPortionObsoleteClassifications(BugInstance) in line 194
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getSourceLink(BugInstance) in line 157
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getSourceLinkToolTip(@CheckForNull BugInstance) in line 155
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getStatusMsg() in line 131
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getUser() in line 153
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getUserDate(BugInstance) in line 182
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getUserDesignation(BugInstance) in line 184
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getUserEvaluation(BugInstance) in line 198
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getUserTimestamp(BugInstance) in line 178
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function initialize() in line 139
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function overallClassificationIsNotAProblem(BugInstance) in line 204
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function printCloudSummary(PrintWriter,Iterable< BugInstance >,String[]) in line 213
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function removeListener(CloudListener) in line 135
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setMode(Mode) in line 147
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setUserDesignation(BugInstance,UserDesignation,long) in line 186
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function setUserEvaluation(BugInstance,String,long) in line 200
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function setUserTimestamp(BugInstance,long) in line 180
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function shutdown() in line 143
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function storeUserAnnotation(BugInstance) in line 209
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function supportsBugLinks() in line 159
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function supportsClaims() in line 171
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function supportsCloudReports() in line 167
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function supportsCloudSummaries() in line 215
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function supportsSourceLinks() in line 151
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::cloud::Cloud::CloudListener
   function issueUpdate(BugInstance) in line 44
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function statusUpdated() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function score() in line 59
      protection public
      19 lines of code
      0 parameters
      8 conditional paths
   variable BAD_ANALYSIS in line 50
      protection public
   variable I_WILL_FIX in line 55
      protection public
   variable MOSTLY_HARMLESS in line 52
      protection public
   variable MUST_FIX in line 54
      protection public
   variable NEEDS_STUDY in line 49
      protection public
   variable NOT_A_BUG in line 51
      protection public
   variable SHOULD_FIX in line 53
      protection public
   variable UNCLASSIFIED in line 48
      protection public
module edu::umd::cs::findbugs::cloud::Cloud::Mode
   variable COMMUNAL in line 80
      protection public
   variable SECRET in line 81
      protection public
   variable VOTING in line 80
      protection public
module edu::umd::cs::findbugs::cloud::Cloud::BugFilingStatus
   function bugIsFiled() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function linkEnabled() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getBugCollection() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getStatusMsg() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function addListener(CloudListener) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function removeListener(CloudListener) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function availableForInitialization() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function initialize() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function bugsPopulated() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function shutdown() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getMode() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function setMode(Mode) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getIWillFix(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function supportsSourceLinks() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getUser() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getSourceLinkToolTip(@CheckForNull BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getSourceLink(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function supportsBugLinks() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getBugLinkStatus(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getBugLink(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function bugFiled(BugInstance,@CheckForNull Object) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function supportsCloudReports() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getCloudReport(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function supportsClaims() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function claimedBy(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function claim(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getUserTimestamp(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function setUserTimestamp(BugInstance,long) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getUserDate(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getUserDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function setUserDesignation(BugInstance,UserDesignation,long) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getClassificationScore(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getClassificationVariance(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getClassificationDisagreement(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getPortionObsoleteClassifications(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getNumberReviewers(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getUserEvaluation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function setUserEvaluation(BugInstance,String,long) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getFirstSeen(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function overallClassificationIsNotAProblem(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function storeUserAnnotation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function canStoreUserAnnotation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function printCloudSummary(PrintWriter,Iterable< BugInstance >,String[]) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function supportsCloudSummaries() defined in edu::umd::cs::findbugs::cloud::Cloud
   function BugFilingStatus(String) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable BUG_PENDING in line 95
      protection public
   variable displayName in line 108
      protection public
   variable FILE_AGAIN in line 90
      protection public
   variable FILE_BUG in line 89
      protection public
   variable NA in line 106
      protection public
   variable VIEW_BUG in line 96
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/cloud/CloudFactory.java
module edu::umd::cs::findbugs::cloud::CloudFactory
   function getCloud(BugCollection) in line 37
      protection public
      28 lines of code
      1 parameters
      8 conditional paths
      uses variable DEFAULT_CLOUD_CLASS defined in edu::umd::cs::findbugs::cloud::CloudFactory
      uses function availableForInitialization() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function initialize() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::Project
      uses function showMessageDialog(String) defined in edu::umd::cs::findbugs::IGuiCallback
      uses function getPlainCloud(BugCollection) defined in edu::umd::cs::findbugs::cloud::CloudFactory
   function getPlainCloud(BugCollection) in line 67
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function initialize() defined in edu::umd::cs::findbugs::cloud::Cloud
   variable DEFAULT_CLOUD_CLASS in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/cloud/db/DBCloud.java
module edu::umd::cs::findbugs::cloud::db::DBCloud
   inherits from edu::umd::cs::findbugs::cloud::AbstractCloud
   function alreadyDone(String) in line 1563
      4 lines of code
      1 parameters
      1 conditional paths
   function availableForInitialization() in line 259
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable sqlDriver defined in edu::umd::cs::findbugs::cloud::db::DBCloud
   function bugFiled(BugInstance,Object) in line 1885
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function checkForShutdown() defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function updatedStatus() defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function bugsPopulated() in line 271
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function canStoreUserAnnotation(BugInstance) in line 2135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function skipBug(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
   function checkForShutdown() in line 735
      6 lines of code
      0 parameters
      2 conditional paths
      uses function shutdown() defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable shutdownException defined in edu::umd::cs::findbugs::cloud::db::DBCloud
   function claimedBy(BugInstance) in line 2140
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
   function displayMessage(String,Exception) in line 1125
      13 lines of code
      2 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function isGuiAvaliable() defined in edu::umd::cs::findbugs::Project
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::Project
      uses function showMessageDialog(String) defined in edu::umd::cs::findbugs::IGuiCallback
   function displayMessage(String) in line 1139
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function isGuiAvaliable() defined in edu::umd::cs::findbugs::Project
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::Project
      uses function showMessageDialog(String) defined in edu::umd::cs::findbugs::IGuiCallback
   function firstTimeDoing(String) in line 1554
      9 lines of code
      1 parameters
      2 conditional paths
   function getBugComponent(@SlashedClassName String) in line 640
      13 lines of code
      1 parameters
      3 conditional paths
   function getBugFilingLink(BugInstance) in line 1702
      49 lines of code
      1 parameters
      9 conditional paths
      uses function getUserDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable BAD_ANALYSIS defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getBugComponent(@SlashedClassName String) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getMessageWithoutPrefix() defined in edu::umd::cs::findbugs::BugInstance
      uses function getSourceFileName() defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses variable firstBugRequest defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable bugCollection defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::Project
      uses function showDocument(URL) defined in edu::umd::cs::findbugs::IGuiCallback
      uses function showConfirmDialog(String,String,int) defined in edu::umd::cs::findbugs::IGuiCallback
      uses function getLineTerminatedUserEvaluation(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function displayNonmodelMessage(String,String) defined in edu::umd::cs::findbugs::IGuiCallback
   function getBugIsUnassigned(BugInstance) in line 2113
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getBugLinkStatus(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable VIEW_BUG defined in edu::umd::cs::findbugs::cloud::Cloud::BugFilingStatus
   function getBugLink(BugInstance) in line 1578
      protection public
      102 lines of code
      1 parameters
      14 conditional paths
      uses function getBugLinkStatus(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable VIEW_BUG defined in edu::umd::cs::findbugs::cloud::Cloud::BugFilingStatus
      uses function getBugViewLink(String) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function getInstanceHash() defined in edu::umd::cs::findbugs::BugInstance
      uses variable PENDING defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function pendingStatusHasExpired(long) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable NONE defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function getBugCollection() defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::Project
      uses function showConfirmDialog(String,String,int) defined in edu::umd::cs::findbugs::IGuiCallback
      uses function showMessageDialog(String) defined in edu::umd::cs::findbugs::IGuiCallback
      uses variable FILE_BUG defined in edu::umd::cs::findbugs::cloud::Cloud::BugFilingStatus
      uses function getBugFilingLink(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function firstTimeDoing(String) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable HAS_FILED_BUGS defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable bugCollection defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function insertPendingRecord(Connection,BugData,long,String) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable FILE_AGAIN defined in edu::umd::cs::findbugs::cloud::Cloud::BugFilingStatus
      uses function alreadyDone(String) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
   function getBugLinkStatus(BugInstance) in line 1849
      protection public
      26 lines of code
      1 parameters
      4 conditional paths
      uses variable NONE defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable FILE_BUG defined in edu::umd::cs::findbugs::cloud::Cloud::BugFilingStatus
      uses variable PENDING defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable FILE_AGAIN defined in edu::umd::cs::findbugs::cloud::Cloud::BugFilingStatus
      uses function pendingStatusHasExpired(long) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable BUG_PENDING defined in edu::umd::cs::findbugs::cloud::Cloud::BugFilingStatus
      uses variable VIEW_BUG defined in edu::umd::cs::findbugs::cloud::Cloud::BugFilingStatus
      uses variable NA defined in edu::umd::cs::findbugs::cloud::Cloud::BugFilingStatus
   function getBugViewLink(String) in line 1685
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable firstBugRequest defined in edu::umd::cs::findbugs::cloud::db::DBCloud
   function getClassificationDisagreement(BugInstance) in line 1519
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses function nonVoting(UserDesignation) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function score() defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function getClassificationScore(BugInstance) in line 1456
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function nonVoting(UserDesignation) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function score() defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function getClassificationVariance(BugInstance) in line 1497
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses function nonVoting(UserDesignation) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function score() defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function getCloudReport(BugInstance) in line 1764
      protection public
      34 lines of code
      1 parameters
      8 conditional paths
      uses function getUserDesignation(String) defined in edu::umd::cs::findbugs::I18N
   function getFirstSeen(BugInstance) in line 1153
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getIWillFix(BugInstance) in line 2104
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function getLineTerminatedUserEvaluation(BugInstance) in line 1319
      13 lines of code
      1 parameters
      20 conditional paths
      uses function getUserDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getUserEvaluation(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAnnotations() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceLines() defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function isSourceFileKnown() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getBugCollection() defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function getSourceFinder() defined in edu::umd::cs::findbugs::Project
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getInputStream() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function getInstanceHash() defined in edu::umd::cs::findbugs::BugInstance
   function getMode() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberReviewers(BugInstance) in line 1447
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getPortionObsoleteClassifications(BugInstance) in line 1483
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses enumvalue OBSOLETE_CODE defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function getProperty(String) in line 528
      3 lines of code
      1 parameters
      1 conditional paths
   function getReviewers(BugInstance) in line 1538
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function getSourceLink(BugInstance) in line 1816
      protection public
      25 lines of code
      1 parameters
      5 conditional paths
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getSourcePath() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getSourceLinkToolTip(BugInstance) in line 1843
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getStatusMsg() in line 1912
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function getStatusMsg0() defined in edu::umd::cs::findbugs::cloud::db::DBCloud
   function getStatusMsg0() in line 1923
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
   function getUser() in line 1147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUserDesignation(BugInstance) in line 1186
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getDesignationKey() defined in edu::umd::cs::findbugs::BugDesignation
   function getUserEvaluation(BugInstance) in line 1195
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function getAnnotationText() defined in edu::umd::cs::findbugs::BugDesignation
   function getUserTimestamp(BugInstance) in line 1206
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getTimestamp() defined in edu::umd::cs::findbugs::BugDesignation
   function getWillNotBeFixed(BugInstance) in line 2119
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getBugLinkStatus(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable VIEW_BUG defined in edu::umd::cs::findbugs::cloud::Cloud::BugFilingStatus
   function initialize() in line 549
      protection public
      90 lines of code
      0 parameters
      18 conditional paths
      uses function availableForInitialization() defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function getProperty(String) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function setMode(Mode) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable USER_NAME defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable bugCollection defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::Project
      uses function showQuestionDialog(String,String,String) defined in edu::umd::cs::findbugs::IGuiCallback
      uses function loadBugComponents() defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable sqlDriver defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function displayMessage(String,Exception) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
   function insertPendingRecord(Connection,BugData,long,String) in line 979
      68 lines of code
      4 parameters
      11 conditional paths
      uses variable instanceHash defined in edu::umd::cs::findbugs::BugInstance
      uses variable PENDING defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function pendingStatusHasExpired(long) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function getInstanceHash() defined in edu::umd::cs::findbugs::BugInstance
      uses variable NONE defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable bugCollection defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getAppVersionFromSequenceNumber(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
   function isClaimed(BugInstance) in line 1544
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function limitToMaxLength(String,int) in line 522
      5 lines of code
      2 parameters
      2 conditional paths
   function loadBugComponents() in line 653
      27 lines of code
      0 parameters
      9 conditional paths
      uses function shutdown() defined in edu::umd::cs::findbugs::cloud::db::DBCloud
   function nonVoting(UserDesignation) in line 1476
      5 lines of code
      1 parameters
      1 conditional paths
      uses enumvalue OBSOLETE_CODE defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses variable NEEDS_STUDY defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function overallClassificationIsNotAProblem(BugInstance) in line 1157
      protection public
      25 lines of code
      1 parameters
      10 conditional paths
   function pendingStatusHasExpired(long) in line 1879
      3 lines of code
      1 parameters
      1 conditional paths
   function printCloudSummary(PrintWriter,Iterable< BugInstance >,String[]) in line 1942
      protection public
      87 lines of code
      3 parameters
      27 conditional paths
      uses function getInstanceHash() defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugCollection defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function getNumClasses() defined in edu::umd::cs::findbugs::ProjectStats
      uses function add(K) defined in edu::umd::cs::findbugs::util::Multiset
      uses function getUser() defined in edu::umd::cs::findbugs::BugDesignation
      uses function getUserDesignation(String) defined in edu::umd::cs::findbugs::I18N
      uses function getDesignationKey() defined in edu::umd::cs::findbugs::BugDesignation
      uses function entriesInDecreasingFrequency() defined in edu::umd::cs::findbugs::util::Multiset
      uses function numKeys() defined in edu::umd::cs::findbugs::util::Multiset
   function setMode(Mode) in line 105
      protection public
      3 lines of code
      1 parameters
      21 conditional paths
      uses variable NONE defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function bugFiled(BugInstance,Object) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function getUserDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function getReviewers(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function isClaimed(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable I_WILL_FIX defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getInstanceHash() defined in edu::umd::cs::findbugs::BugInstance
   function setUserDesignation(BugInstance,UserDesignation,long) in line 1215
      protection public
      18 lines of code
      3 parameters
      4 conditional paths
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function setDesignationKey(String) defined in edu::umd::cs::findbugs::BugDesignation
      uses function isDirty() defined in edu::umd::cs::findbugs::BugDesignation
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::BugDesignation
      uses function storeUserAnnotation(BugData,BugDesignation) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
   function setUserEvaluation(BugInstance,String,long) in line 1236
      protection public
      16 lines of code
      3 parameters
      4 conditional paths
      uses function setAnnotationText(String) defined in edu::umd::cs::findbugs::BugDesignation
      uses function isDirty() defined in edu::umd::cs::findbugs::BugDesignation
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::BugDesignation
      uses function storeUserAnnotation(BugData,BugDesignation) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
   function setUserTimestamp(BugInstance,long) in line 1255
      protection public
      11 lines of code
      2 parameters
      8 conditional paths
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::BugDesignation
      uses function storeUserAnnotation(BugData,BugDesignation) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function getMessageWithoutPrefix() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAnnotations() defined in edu::umd::cs::findbugs::BugInstance
      uses function getSourceLink(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function overallClassificationIsNotAProblem(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function getProjects(@DottedClassName String) defined in edu::umd::cs::findbugs::ProjectPackagePrefixes
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getDetailPlainText() defined in edu::umd::cs::findbugs::BugPattern
      uses function getType() defined in edu::umd::cs::findbugs::BugPattern
   function shutdown() in line 692
      protection public
      40 lines of code
      0 parameters
      7 conditional paths
   function skipBug(BugInstance) in line 787
      12 lines of code
      1 parameters
      2 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function isDead() defined in edu::umd::cs::findbugs::BugInstance
      uses function firstTimeDoing(String) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable HAS_SKIPPED_BUG defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable bugCollection defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::Project
      uses function showMessageDialog(String) defined in edu::umd::cs::findbugs::IGuiCallback
   function storeFirstSeen(final BugData) in line 748
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function checkForShutdown() defined in edu::umd::cs::findbugs::cloud::db::DBCloud
   function storeLastSeen(final BugData,final long) in line 757
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses function checkForShutdown() defined in edu::umd::cs::findbugs::cloud::db::DBCloud
   function storeNewBug(BugInstance,long) in line 742
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function checkForShutdown() defined in edu::umd::cs::findbugs::cloud::db::DBCloud
   function storeUserAnnotation(BugData,BugDesignation) in line 766
      protection public
      17 lines of code
      2 parameters
      3 conditional paths
      uses function checkForShutdown() defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function updatedStatus() defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function firstTimeDoing(String) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable HAS_CLASSIFIED_ISSUES defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable VOTING defined in edu::umd::cs::findbugs::cloud::Cloud::Mode
      uses variable bugCollection defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::Project
      uses function showMessageDialog(String) defined in edu::umd::cs::findbugs::IGuiCallback
   function storeUserAnnotation(BugInstance) in line 1801
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function storeUserAnnotation(BugData,BugDesignation) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function getNonnullUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function updatedIssue(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function supportsBugLinks() in line 1759
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function supportsCloudReports() in line 1753
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function supportsCloudSummaries() in line 2128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function supportsSourceLinks() in line 1809
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function DBCloud(BugCollection) in line 249
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable sqlDriver defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function getProperty(String) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
   variable firstBugRequest in line 1567
   variable HAS_CLASSIFIED_ISSUES in line 1553
   variable HAS_FILED_BUGS in line 1552
   variable HAS_SKIPPED_BUG in line 784
   variable LAST_SEEN_UPDATE_WINDOW in line 276
   variable NONE in line 802
      protection public
   variable PENDING in line 801
      protection public
   variable shutdownException in line 734
   variable sqlDriver in line 542
   variable USER_NAME in line 99
module edu::umd::cs::findbugs::cloud::db::DBCloud::BugData
   function canSeeCommentsByOthers() in line 178
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function hasVoted() in line 187
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function BugData(String) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::cloud::db::DBCloud::PopulateBugs
   inherits from edu::umd::cs::findbugs::cloud::db::DBCloud::Update
   function execute(DatabaseSyncTask) in line 292
      protection public
      226 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::cloud::db::DBCloud::DatabaseSyncTask
   inherits from Runnable
   function closeConnection() in line 816
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function establishConnection() in line 810
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function fileBug(BugData) in line 960
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function newBug(BugInstance) in line 891
      protection public
      31 lines of code
      1 parameters
      1 conditional paths
   function newEvaluation(BugData,BugDesignation) in line 854
      protection public
      35 lines of code
      2 parameters
      1 conditional paths
   function run() in line 823
      protection public
      31 lines of code
      0 parameters
      1 conditional paths
   function storeFirstSeen(BugData) in line 922
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
   function storeLastSeen(BugData,long) in line 939
      protection public
      17 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::cloud::db::DBCloud::Update
   function execute(DatabaseSyncTask) in line 1049
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::cloud::db::DBCloud::ShutdownTask
   inherits from edu::umd::cs::findbugs::cloud::db::DBCloud::Update
   function execute(DatabaseSyncTask) in line 1053
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::cloud::db::DBCloud::DatabaseSyncShutdownException
   inherits from RuntimeException
module edu::umd::cs::findbugs::cloud::db::DBCloud::FileBug
   inherits from edu::umd::cs::findbugs::cloud::db::DBCloud::Update
   function execute(DatabaseSyncTask) in line 1080
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function FileBug(BugInstance) in line 1071
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::cloud::db::DBCloud::StoreNewBug
   inherits from edu::umd::cs::findbugs::cloud::db::DBCloud::Update
   function execute(DatabaseSyncTask) in line 1094
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function StoreNewBug(BugInstance,long) in line 1088
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::cloud::db::DBCloud::StoreUserAnnotation
   inherits from edu::umd::cs::findbugs::cloud::db::DBCloud::Update
   function execute(DatabaseSyncTask) in line 1117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function StoreUserAnnotation(BugData,BugDesignation) in line 1111
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::cloud::db::DBCloud::SourceLine
   function SourceLine(int,String) in line 1424
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/cloud/db/DBStats.java
module edu::umd::cs::findbugs::cloud::db::DBStats
   function getDesignationFromScore(int) in line 522
      16 lines of code
      1 parameters
      6 conditional paths
      uses variable BAD_ANALYSIS defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses variable NOT_A_BUG defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses variable MOSTLY_HARMLESS defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses variable NEEDS_STUDY defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses variable SHOULD_FIX defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses variable MUST_FIX defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function getDesignationTitle(I18N,edu.umd.cs.findbugs.cloud.Cloud.UserDesignation) in line 544
      17 lines of code
      2 parameters
      4 conditional paths
      uses function getUserDesignation(String) defined in edu::umd::cs::findbugs::I18N
   function main(String) in line 189
      protection public
      316 lines of code
      1 parameters
      31 conditional paths
      uses function initialize() defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::I18N
      uses function getType() defined in edu::umd::cs::findbugs::BugPattern
      uses function add(K) defined in edu::umd::cs::findbugs::util::Multiset
      uses function getDesignationTitle(I18N,edu.umd.cs.findbugs.cloud.Cloud.UserDesignation) defined in edu::umd::cs::findbugs::cloud::db::DBStats
      uses function score() defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses enumvalue OBSOLETE_CODE defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses variable PENDING defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable NONE defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function add(K,double) defined in edu::umd::cs::findbugs::util::FractionalMultiset
      uses function entrySet() defined in edu::umd::cs::findbugs::util::Multiset
      uses function getCount(K) defined in edu::umd::cs::findbugs::util::Multiset
      uses function getDesignationFromScore(int) defined in edu::umd::cs::findbugs::cloud::db::DBStats
      uses function printPatterns(String,String,FractionalMultiset< String >,FractionalMultiset< String >,Multiset< String >) defined in edu::umd::cs::findbugs::cloud::db::DBStats
      uses function turnTotalIntoAverage(Multiset< K >) defined in edu::umd::cs::findbugs::util::FractionalMultiset
      uses function entriesInDecreasingOrder() defined in edu::umd::cs::findbugs::util::FractionalMultiset
      uses function getValue(K) defined in edu::umd::cs::findbugs::util::FractionalMultiset
      uses function printTimeSeries(String,String,MergeMap.MinMap< String, Timestamp >) defined in edu::umd::cs::findbugs::cloud::db::DBStats
      uses function printMultiset(PrintWriter,String,Multiset< String >) defined in edu::umd::cs::findbugs::cloud::db::DBStats
      uses function printMultisetContents(PrintWriter,String,Multiset< String >) defined in edu::umd::cs::findbugs::cloud::db::DBStats
   function printMultiset(PrintWriter,String,Multiset< String >) in line 566
      4 lines of code
      3 parameters
      1 conditional paths
      uses function printMultisetContents(PrintWriter,String,Multiset< String >) defined in edu::umd::cs::findbugs::cloud::db::DBStats
   function printMultisetContents(PrintWriter,String,Multiset< String >) in line 574
      4 lines of code
      3 parameters
      2 conditional paths
      uses function entrySet() defined in edu::umd::cs::findbugs::util::Multiset
   function printPatterns(String,String,FractionalMultiset< String >,FractionalMultiset< String >,Multiset< String >) in line 506
      12 lines of code
      5 parameters
      3 conditional paths
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::I18N
   function printTimeSeries(String,String,MergeMap.MinMap< String, Timestamp >) in line 583
      24 lines of code
      3 parameters
      5 conditional paths
      uses function add(K) defined in edu::umd::cs::findbugs::util::Multiset
      uses function entrySet() defined in edu::umd::cs::findbugs::util::Multiset
module edu::umd::cs::findbugs::cloud::db::DBStats::BUG_STATUS
   function score(String) in line 57
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function score() in line 73
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
   function stage(String) in line 65
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function stage() in line 94
      protection public
      25 lines of code
      0 parameters
      1 conditional paths
   variable ACCEPTED in line 55
      protection public
   variable ASSIGNED in line 55
      protection public
   variable FIX_LATER in line 55
      protection public
   variable FIXED in line 55
      protection public
   variable NEW in line 55
      protection public
   variable VERIFIED in line 56
      protection public
   variable VERIFIER_ASSIGNED in line 56
      protection public
   variable WILL_NOT_FIX in line 56
      protection public
module edu::umd::cs::findbugs::cloud::db::DBStats::Rank
   function getRank(int) in line 122
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   variable OF_CONCERN in line 121
      protection public
   variable SCARIEST in line 121
      protection public
   variable SCARY in line 121
      protection public
   variable TROUBLING in line 121
      protection public
module edu::umd::cs::findbugs::cloud::db::DBStats::TimeSeries
   inherits from Comparable
   function compareTo(TimeSeries< K, V >) in line 178
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 152
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 142
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 174
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function TimeSeries(K,V) in line 166
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/CommandLineUiCallback.java
module edu::umd::cs::findbugs::CommandLineUiCallback
   inherits from edu::umd::cs::findbugs::IGuiCallback
   function displayNonmodelMessage(String,String) in line 99
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getProgressMonitorInputStream(InputStream,int,String) in line 91
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function parseAnswer(String) in line 72
      18 lines of code
      1 parameters
      6 conditional paths
   function setErrorMessage(String) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function showConfirmDialog(String,String,int) in line 41
      protection public
      30 lines of code
      3 parameters
      7 conditional paths
      uses function parseAnswer(String) defined in edu::umd::cs::findbugs::CommandLineUiCallback
   function showDocument(URL) in line 113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function showMessageDialog(String) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function showQuestionDialog(String,String,String) in line 106
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/config/AnalysisFeatureSetting.java
module edu::umd::cs::findbugs::config::AnalysisFeatureSetting
   function configure(AnalysisContext) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setBoolProperty(int,boolean) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable property defined in edu::umd::cs::findbugs::config::AnalysisFeatureSetting
      uses variable enabled defined in edu::umd::cs::findbugs::config::AnalysisFeatureSetting
   function AnalysisFeatureSetting(@AnalysisFeature int,boolean) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable property defined in edu::umd::cs::findbugs::config::AnalysisFeatureSetting
      uses variable enabled defined in edu::umd::cs::findbugs::config::AnalysisFeatureSetting
   variable enabled in line 32
   variable property in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/config/CommandLine.java
module edu::umd::cs::findbugs::config::CommandLine
   abstract class
   function addCommandLineOptions(ArrayList< String >,BufferedReader,boolean,boolean) in line 202
      17 lines of code
      4 parameters
      6 conditional paths
   function addOption(String,String,String) in line 120
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses variable optionList defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionDescriptionMap defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable requiresArgumentSet defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable argumentDescriptionMap defined in edu::umd::cs::findbugs::config::CommandLine
   function addSwitch(String,String) in line 85
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable optionList defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionDescriptionMap defined in edu::umd::cs::findbugs::config::CommandLine
   function addSwitchWithOptionalExtraPart(String,String,String) in line 101
      protection public
      11 lines of code
      3 parameters
      2 conditional paths
      uses variable optionList defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionExtraPartSynopsisMap defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionDescriptionMap defined in edu::umd::cs::findbugs::config::CommandLine
   function expandOptionFiles(String[],boolean,boolean) in line 151
      protection public
      33 lines of code
      3 parameters
      5 conditional paths
      uses function parse(String,int,int,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function getAnalysisOptionProperties(boolean,boolean) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function addCommandLineOptions(ArrayList< String >,BufferedReader,boolean,boolean) defined in edu::umd::cs::findbugs::config::CommandLine
   function getAnalysisOptionProperties(boolean,boolean) in line 185
      protection public
      16 lines of code
      2 parameters
      3 conditional paths
      uses function addCommandLineOptions(ArrayList< String >,BufferedReader,boolean,boolean) defined in edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 323
      1 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 332
      1 lines of code
      2 parameters
      1 conditional paths
   function makeOptionUnlisted(String) in line 135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable unlistedOptions defined in edu::umd::cs::findbugs::config::CommandLine
   function parse(String,int,int,String) in line 238
      protection public
      25 lines of code
      4 parameters
      3 conditional paths
      uses function printUsage(OutputStream) defined in edu::umd::cs::findbugs::config::CommandLine
   function parse(String) in line 275
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function parse(String,int,int,String) defined in edu::umd::cs::findbugs::config::CommandLine
   function parse(String,boolean) in line 279
      35 lines of code
      2 parameters
      10 conditional paths
      uses variable optionDescriptionMap defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable requiresArgumentSet defined in edu::umd::cs::findbugs::config::CommandLine
      uses function handleOptionWithArgument(String,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function handleOption(String,String) defined in edu::umd::cs::findbugs::config::CommandLine
   function printField(PrintStream,String,int) in line 374
      10 lines of code
      3 parameters
      3 conditional paths
      uses variable SPACES defined in edu::umd::cs::findbugs::config::CommandLine
   function printUsage(OutputStream) in line 339
      protection public
      32 lines of code
      1 parameters
      6 conditional paths
      uses variable optionList defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionGroups defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable unlistedOptions defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionExtraPartSynopsisMap defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable requiresArgumentSet defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable argumentDescriptionMap defined in edu::umd::cs::findbugs::config::CommandLine
      uses function printField(PrintStream,String,int) defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionDescriptionMap defined in edu::umd::cs::findbugs::config::CommandLine
   function startOptionGroup(String) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable optionGroups defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionList defined in edu::umd::cs::findbugs::config::CommandLine
   function CommandLine() in line 58
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   variable argumentDescriptionMap in line 55
   variable optionDescriptionMap in line 53
   variable optionExtraPartSynopsisMap in line 54
   variable optionGroups in line 50
   variable optionList in line 48
   variable requiresArgumentSet in line 52
   variable SPACES in line 372
   variable unlistedOptions in line 49
module edu::umd::cs::findbugs::config::CommandLine::HelpRequestedException
   inherits from Exception
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/config/ProjectFilterSettings.java
module edu::umd::cs::findbugs::config::ProjectFilterSettings
   inherits from Cloneable
   function addCategory(String) in line 297
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function clearAllCategories() in line 316
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable hiddenBugCategorySet defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function clone() in line 450
      protection public
      20 lines of code
      0 parameters
      2 conditional paths
      uses function ProjectFilterSettings() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getMinPriority() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable displayFalseWarnings defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function containsCategory(String) in line 328
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable hiddenBugCategorySet defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function createDefault() in line 113
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function ProjectFilterSettings() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable DEFAULT_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function displayFalseWarnings() in line 363
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function displayWarning(BugInstance) in line 227
      protection public
      26 lines of code
      1 parameters
      5 conditional paths
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMinPriorityAsInt() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function containsCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function displayFalseWarnings() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getProperty(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable IS_BUG defined in edu::umd::cs::findbugs::BugProperty
   function equals(Object) in line 423
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses function ProjectFilterSettings() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getMinPriority() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable hiddenBugCategorySet defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable displayFalseWarnings defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function fromEncodedString(String) in line 128
      protection public
      62 lines of code
      1 parameters
      10 conditional paths
      uses function ProjectFilterSettings() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable FIELD_DELIMITER defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable minPriority defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable priorityNameToValueMap defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable DEFAULT_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable LISTITEM_DELIMITER defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function addCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function displayFalseWarnings() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function setDisplayFalseWarnings(boolean) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function getActiveCategorySet() in line 342
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getIntPriorityAsString(int) in line 485
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses variable minPriority defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable EXPERIMENTAL_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable MEDIUM_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable DEFAULT_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function getMinPriority() in line 279
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable minPriority defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function getMinPriorityAsInt() in line 288
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable minPriorityAsInt defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function hashCode() in line 475
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable minPriority defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable hiddenBugCategorySet defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function displayFalseWarnings() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function hiddenFromEncodedString(ProjectFilterSettings,String) in line 200
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses variable FIELD_DELIMITER defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable LISTITEM_DELIMITER defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function removeCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function hiddenToEncodedString() in line 372
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable hiddenBugCategorySet defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable LISTITEM_DELIMITER defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable FIELD_DELIMITER defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function removeCategory(String) in line 307
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setDisplayFalseWarnings(boolean) in line 354
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function displayFalseWarnings() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function setMinPriority(String) in line 259
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable minPriority defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable priorityNameToValueMap defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable DEFAULT_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function toEncodedString() in line 391
      protection public
      22 lines of code
      0 parameters
      3 conditional paths
      uses function getMinPriority() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable FIELD_DELIMITER defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable activeBugCategorySet defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable LISTITEM_DELIMITER defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function displayFalseWarnings() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function toString() in line 415
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function toEncodedString() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function ProjectFilterSettings() in line 93
      12 lines of code
      0 parameters
      1 conditional paths
      uses function getBugCategories() defined in edu::umd::cs::findbugs::I18N
      uses variable activeBugCategorySet defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable hiddenBugCategorySet defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable DEFAULT_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   variable activeBugCategorySet in line 83
   variable DEFAULT_PRIORITY in line 62
      protection public
   variable displayFalseWarnings in line 87
   variable EXPERIMENTAL_PRIORITY in line 59
      protection public
   variable FIELD_DELIMITER in line 76
   variable hiddenBugCategorySet in line 84
   variable HIGH_PRIORITY in line 50
      protection public
   variable LISTITEM_DELIMITER in line 80
   variable LOW_PRIORITY in line 56
      protection public
   variable MEDIUM_PRIORITY in line 53
      protection public
   variable minPriority in line 85
   variable minPriorityAsInt in line 86
   variable priorityNameToValueMap in line 65
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/config/SortedProperties.java
module edu::umd::cs::findbugs::config::SortedProperties
   inherits from java::util::Properties
   function keys() in line 20
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function sortKeys(Set< String >) defined in edu::umd::cs::findbugs::config::SortedProperties
   function sortKeys(Set< String >) in line 35
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/config/UserPreferences.java
module edu::umd::cs::findbugs::config::UserPreferences
   inherits from Cloneable
   function clone() in line 469
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
      uses function UserPreferences() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function clone() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function clone() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable runAtFullBuild defined in edu::umd::cs::findbugs::config::UserPreferences
   function createDefaultUserPreferences() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function UserPreferences() defined in edu::umd::cs::findbugs::config::UserPreferences
   function enableAllDetectors(boolean) in line 367
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function factoryIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
   function enableDetector(DetectorFactory,boolean) in line 338
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
   function equals(Object) in line 444
      protection public
      16 lines of code
      1 parameters
      2 conditional paths
      uses function UserPreferences() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable runAtFullBuild defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function equals(Object) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable effort defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable includeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable excludeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable excludeBugsFiles defined in edu::umd::cs::findbugs::config::UserPreferences
   function getAnalysisFeatureSettings() in line 596
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable effort defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable EFFORT_DEFAULT defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable DEFAULT_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable EFFORT_MIN defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable MIN_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable MAX_EFFORT defined in edu::umd::cs::findbugs::FindBugs
   function getEffort() in line 487
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable effort defined in edu::umd::cs::findbugs::config::UserPreferences
   function getExcludeBugsFiles() in line 510
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable excludeBugsFiles defined in edu::umd::cs::findbugs::config::UserPreferences
   function getExcludeFilterFiles() in line 527
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable excludeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
   function getFilterSettings() in line 391
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
   function getIncludeFilterFiles() in line 499
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable includeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
   function getRecentProjects() in line 297
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
   function getUserDetectorThreshold() in line 400
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMinPriorityAsInt() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function getUserPreferences() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable preferencesSingleton defined in edu::umd::cs::findbugs::config::UserPreferences
   function hashCode() in line 462
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function hashCode() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable effort defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable includeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable excludeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable runAtFullBuild defined in edu::umd::cs::findbugs::config::UserPreferences
   function isDetectorEnabled(DetectorFactory) in line 348
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function isDefaultEnabled() defined in edu::umd::cs::findbugs::DetectorFactory
   function isRunAtFullBuild() in line 430
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable runAtFullBuild defined in edu::umd::cs::findbugs::config::UserPreferences
   function read() in line 133
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable PREF_FILE_NAME defined in edu::umd::cs::findbugs::config::UserPreferences
   function read(@WillClose InputStream) in line 152
      protection public
      72 lines of code
      1 parameters
      15 conditional paths
      uses variable MAX_RECENT_FILES defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable FILTER_SETTINGS_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable DETECTOR_THRESHOLD_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function setUserDetectorThreshold(int) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable FILTER_SETTINGS2_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable RUN_AT_FULL_BUILD defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable runAtFullBuild defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable effort defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable EFFORT_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable EFFORT_DEFAULT defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable includeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function readFilters(Properties,String) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable INCLUDE_FILTER_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable excludeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable EXCLUDE_FILTER_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable excludeBugsFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable EXCLUDE_BUGS_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
   function readFilters(Properties,String) in line 541
      16 lines of code
      2 parameters
      3 conditional paths
   function removeProject(String) in line 320
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
   function setEffort(String) in line 491
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable EFFORT_MIN defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable effort defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable EFFORT_DEFAULT defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable EFFORT_MAX defined in edu::umd::cs::findbugs::config::UserPreferences
   function setExcludeBugsFiles(Collection< String >) in line 514
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable excludeBugsFiles defined in edu::umd::cs::findbugs::config::UserPreferences
   function setExcludeFilterFiles(Collection< String >) in line 520
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable excludeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
   function setIncludeFilterFiles(Collection< String >) in line 503
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable includeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
   function setProjectFilterSettings(ProjectFilterSettings) in line 382
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
   function setRunAtFullBuild(boolean) in line 421
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setUserDetectorThreshold(int) in line 409
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function setUserDetectorThreshold(String) in line 439
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function useProject(String) in line 307
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function removeProject(String) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable MAX_RECENT_FILES defined in edu::umd::cs::findbugs::config::UserPreferences
   function write() in line 229
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable PREF_FILE_NAME defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
   function write(@WillClose OutputStream) in line 247
      protection public
      44 lines of code
      1 parameters
      6 conditional paths
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable FILTER_SETTINGS_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function toEncodedString() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable FILTER_SETTINGS2_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function hiddenToEncodedString() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable DETECTOR_THRESHOLD_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function getMinPriorityAsInt() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable RUN_AT_FULL_BUILD defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable runAtFullBuild defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable EFFORT_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable effort defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function writeFilters(Properties,String,Collection< String >) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable INCLUDE_FILTER_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable includeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable EXCLUDE_FILTER_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable excludeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable EXCLUDE_BUGS_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable excludeBugsFiles defined in edu::umd::cs::findbugs::config::UserPreferences
   function writeFilters(Properties,String,Collection< String >) in line 569
      18 lines of code
      3 parameters
      4 conditional paths
   function UserPreferences() in line 105
      3 lines of code
      0 parameters
      1 conditional paths
   variable DETECTOR_THRESHOLD_KEY in line 67
   variable detectorEnablementMap in line 77
   variable effort in line 98
   variable EFFORT_DEFAULT in line 87
      protection public
   variable EFFORT_KEY in line 91
   variable EFFORT_MAX in line 89
      protection public
   variable EFFORT_MIN in line 85
      protection public
   variable EXCLUDE_BUGS_KEY in line 96
   variable EXCLUDE_FILTER_KEY in line 95
   variable excludeBugsFiles in line 103
   variable excludeFilterFiles in line 102
   variable FILTER_SETTINGS2_KEY in line 71
   variable FILTER_SETTINGS_KEY in line 69
   variable filterSettings in line 79
   variable INCLUDE_FILTER_KEY in line 93
   variable includeFilterFiles in line 100
   variable MAX_RECENT_FILES in line 65
   variable PREF_FILE_NAME in line 63
   variable preferencesSingleton in line 83
   variable recentProjectsList in line 75
   variable RUN_AT_FULL_BUILD in line 73
   variable runAtFullBuild in line 81
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/DeepSubtypeAnalysis.java
module edu::umd::cs::findbugs::DeepSubtypeAnalysis
   function containsConcreteClasses(Set< JavaClass >) in line 42
      6 lines of code
      1 parameters
      3 conditional paths
   function deepInstanceOf(@DottedClassName String,@DottedClassName String) in line 187
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function deepInstanceOf(JavaClass,JavaClass) in line 203
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function getComponentClass(String) in line 100
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function isDeepRemote(String) in line 69
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable remote defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses function getComponentClass(String) defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
   function isDeepSerializable(@DottedClassName String) in line 49
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable storedException defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses function isPrimitiveComponentClass(String) defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses function getComponentClass(String) defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
   function isDeepSerializable(JavaClass) in line 110
      protection public
      64 lines of code
      1 parameters
      17 conditional paths
      uses variable storedException defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses variable serializable defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDirectSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function isDeepSerializable(@DottedClassName String) defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses variable collection defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses variable map defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses variable comparator defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
   function isPrimitiveComponentClass(String) in line 86
      13 lines of code
      1 parameters
      2 conditional paths
   variable collection in line 16
   variable comparator in line 17
   variable DEBUG in line 23
   variable map in line 19
   variable remote in line 20
   variable serializable in line 14
   variable storedException in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/DelegatingBugReporter.java
module edu::umd::cs::findbugs::DelegatingBugReporter
   inherits from edu::umd::cs::findbugs::BugReporter
   function addObserver(BugReporterObserver) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function addObserver(BugReporterObserver) defined in edu::umd::cs::findbugs::BugReporter
   function finish() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function finish() defined in edu::umd::cs::findbugs::BugReporter
   function getDelegate() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
   function getProjectStats() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugReporter
   function getRealBugReporter() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function getRealBugReporter() defined in edu::umd::cs::findbugs::BugReporter
   function logError(String) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function logError(String,Throwable) in line 112
      protection public
      4 lines of code
      2 parameters
      2 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function observeClass(ClassDescriptor) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function observeClass(ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IClassObserver
   function reportBug(BugInstance) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function reportMissingClass(ClassNotFoundException) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function reportMissingClass(ClassDescriptor) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function reportQueuedErrors() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportQueuedErrors() defined in edu::umd::cs::findbugs::BugReporter
   function reportSkippedAnalysis(MethodDescriptor) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportSkippedAnalysis(MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function setDelegate(BugReporter) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
   function setErrorVerbosity(int) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function setErrorVerbosity(int) defined in edu::umd::cs::findbugs::BugReporter
   function setPriorityThreshold(int) in line 69
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function setPriorityThreshold(int) defined in edu::umd::cs::findbugs::BugReporter
   function DelegatingBugReporter(BugReporter) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
   variable delegate in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/AnyMethodReturnValueStreamFactory.java
module edu::umd::cs::findbugs::detect::AnyMethodReturnValueStreamFactory
   inherits from edu::umd::cs::findbugs::detect::StreamFactory
   function createStream(Location,ObjectType,ConstantPoolGen,RepositoryLookupFailureCallback) in line 55
      protection public
      24 lines of code
      4 parameters
      5 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable baseClassType defined in edu::umd::cs::findbugs::detect::AnyMethodReturnValueStreamFactory
      uses function setIgnoreImplicitExceptions(boolean) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable bugType defined in edu::umd::cs::findbugs::detect::AnyMethodReturnValueStreamFactory
      uses function setInteresting(String) defined in edu::umd::cs::findbugs::detect::Stream
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function setBugType(String) in line 50
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugType defined in edu::umd::cs::findbugs::detect::AnyMethodReturnValueStreamFactory
   function AnyMethodReturnValueStreamFactory(String) in line 45
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable baseClassType in line 42
   variable bugType in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/AppendingToAnObjectOutputStream.java
module edu::umd::cs::findbugs::detect::AppendingToAnObjectOutputStream
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 51
      protection public
      36 lines of code
      1 parameters
      8 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSpecialKind() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable FILE_OPENED_IN_APPEND_MODE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function visit(Method) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AppendingToAnObjectOutputStream(BugReporter) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/AtomicityProblem.java
module edu::umd::cs::findbugs::detect::AtomicityProblem
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 65
      protection public
      34 lines of code
      1 parameters
      12 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::AtomicityProblem
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visit(Code) in line 51
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function AtomicityProblem(BugReporter) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::AtomicityProblem
   variable bugReporter in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/BadAppletConstructor.java
module edu::umd::cs::findbugs::detect::BadAppletConstructor
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 77
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadAppletConstructor
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable inConstructor defined in edu::umd::cs::findbugs::detect::BadAppletConstructor
   function visit(Code) in line 71
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable inConstructor defined in edu::umd::cs::findbugs::detect::BadAppletConstructor
   function visitClassContext(ClassContext) in line 52
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses variable appletClass defined in edu::umd::cs::findbugs::detect::BadAppletConstructor
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadAppletConstructor
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function BadAppletConstructor(BugReporter) in line 38
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadAppletConstructor
      uses variable appletClass defined in edu::umd::cs::findbugs::detect::BadAppletConstructor
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   variable appletClass in line 35
   variable bugReporter in line 34
   variable inConstructor in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/BadlyOverriddenAdapter.java
module edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function visit(JavaClass) in line 48
      protection public
      22 lines of code
      1 parameters
      5 conditional paths
      uses variable methodMap defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable badOverrideMap defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable packageName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable isAdapter defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(Method) in line 80
      protection public
      18 lines of code
      1 parameters
      5 conditional paths
      uses variable isAdapter defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodMap defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable badOverrideMap defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visitAfter(JavaClass) in line 72
      protection public
      6 lines of code
      1 parameters
      3 conditional paths
      uses variable badOverrideMap defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function BadlyOverriddenAdapter(BugReporter) in line 39
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable methodMap defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable badOverrideMap defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
   variable badOverrideMap in line 37
   variable bugReporter in line 34
   variable isAdapter in line 35
   variable methodMap in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/BadResultSetAccess.java
module edu::umd::cs::findbugs::detect::BadResultSetAccess
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 74
      protection public
      28 lines of code
      1 parameters
      5 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable dbFieldTypesSet defined in edu::umd::cs::findbugs::detect::BadResultSetAccess
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadResultSetAccess
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function BadResultSetAccess(BugReporter) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadResultSetAccess
   variable bugReporter in line 65
   variable dbFieldTypesSet in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/BadSyntaxForRegularExpression.java
module edu::umd::cs::findbugs::detect::BadSyntaxForRegularExpression
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function getIntValue(int,int) in line 105
      7 lines of code
      2 parameters
      3 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function sawOpcode(int) in line 114
      protection public
      52 lines of code
      1 parameters
      8 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawRegExPattern(int) defined in edu::umd::cs::findbugs::detect::BadSyntaxForRegularExpression
      uses function getIntValue(int,int) defined in edu::umd::cs::findbugs::detect::BadSyntaxForRegularExpression
      uses function singleDotPatternWouldBeSilly(int,boolean) defined in edu::umd::cs::findbugs::detect::BadSyntaxForRegularExpression
   function sawRegExPattern(int) in line 70
      3 lines of code
      1 parameters
      1 conditional paths
   function sawRegExPattern(int,int) in line 75
      28 lines of code
      2 parameters
      5 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable FILE_SEPARATOR_STRING defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function singleDotPatternWouldBeSilly(int,boolean) in line 40
      29 lines of code
      2 parameters
      9 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function BadSyntaxForRegularExpression(BugReporter) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/BadUseOfReturnValue.java
module edu::umd::cs::findbugs::detect::BadUseOfReturnValue
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 51
      protection public
      28 lines of code
      1 parameters
      7 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 42
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function BadUseOfReturnValue(BugReporter) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/BCPMethodReturnCheck.java
module edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
   inherits from edu::umd::cs::findbugs::ByteCodePatternDetector
   function addMethodWhoseReturnMustBeChecked(String,String,String,int) in line 87
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses function getPatternElementList() defined in edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
      uses variable localByteCodePattern defined in edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
   function extractPackageName(String) in line 317
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function getBugReporter() in line 244
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
   function getPattern() in line 70
      protection public
      15 lines of code
      0 parameters
      2 conditional paths
      uses variable localByteCodePattern defined in edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
      uses function getPatternElementList() defined in edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
      uses function add(PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function getPatternElementList() in line 99
      132 lines of code
      0 parameters
      6 conditional paths
      uses variable localPatternElementList defined in edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
      uses variable INSTANCE defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable CONSTRUCTOR defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable CHECK_ALL defined in edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
      uses function isSameOrNewerThan(JavaVersion) defined in edu::umd::cs::findbugs::JavaVersion
      uses variable JAVA_1_5 defined in edu::umd::cs::findbugs::JavaVersion
   function prescreen(Method,ClassContext) in line 250
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function reportMatch(ClassContext,Method,ByteCodePatternMatch) in line 258
      protection public
      58 lines of code
      3 parameters
      8 conditional paths
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getLabeledInstruction(String) defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function extractPackageName(String) defined in edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function BCPMethodReturnCheck(BugReporter) in line 237
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
   variable bugReporter in line 56
   variable CHECK_ALL in line 58
   variable localByteCodePattern in line 60
   variable localPatternElementList in line 63
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/BooleanReturnNull.java
module edu::umd::cs::findbugs::detect::BooleanReturnNull
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 57
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getPrevOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 42
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getReturnTypeSignature() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function BooleanReturnNull(BugReporter) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/BuildCheckReturnAnnotationDatabase.java
module edu::umd::cs::findbugs::detect::BuildCheckReturnAnnotationDatabase
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   function visitAnnotation(@DottedClassName String,Map< String, Object >,boolean) in line 67
      protection public
      60 lines of code
      3 parameters
      15 conditional paths
      uses variable defaultKind defined in edu::umd::cs::findbugs::detect::BuildCheckReturnAnnotationDatabase
      uses variable METHOD defined in edu::umd::cs::findbugs::ba::AnnotationDatabase::Target
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable CHECK_RETURN_VALUE_IGNORE defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_MEDIUM_BAD_PRACTICE defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_HIGH defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_MEDIUM defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function BuildCheckReturnAnnotationDatabase() in line 55
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   variable DEFAULT_ANNOTATION_ANNOTATION_CLASS in line 44
   variable defaultKind in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/BuildInterproceduralCallGraph.java
module edu::umd::cs::findbugs::detect::BuildInterproceduralCallGraph
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function findVertex(XMethod) in line 106
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable callGraph defined in edu::umd::cs::findbugs::detect::BuildInterproceduralCallGraph
      uses function lookupVertex(MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraph
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function setXmethod(XMethod) defined in edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraphVertex
      uses function addVertex(InterproceduralCallGraphVertex) defined in edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraph
   function report() in line 121
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable FIND_EFFECTIVE_RELEVANT_QUALIFIERS defined in edu::umd::cs::findbugs::ba::jsr305::Analysis
      uses function eagerlyPutDatabase(Class< E >,E) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable callGraph defined in edu::umd::cs::findbugs::detect::BuildInterproceduralCallGraph
   function sawOpcode(int) in line 87
      protection public
      12 lines of code
      1 parameters
      5 conditional paths
      uses function getMethodDescriptorOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function findVertex(XMethod) defined in edu::umd::cs::findbugs::detect::BuildInterproceduralCallGraph
      uses variable callGraph defined in edu::umd::cs::findbugs::detect::BuildInterproceduralCallGraph
      uses function createEdge(VertexType,VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable currentVertex defined in edu::umd::cs::findbugs::detect::BuildInterproceduralCallGraph
   function visitClassContext(ClassContext) in line 67
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable FIND_EFFECTIVE_RELEVANT_QUALIFIERS defined in edu::umd::cs::findbugs::ba::jsr305::Analysis
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
   function visitMethod(Method) in line 78
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable currentVertex defined in edu::umd::cs::findbugs::detect::BuildInterproceduralCallGraph
      uses function findVertex(XMethod) defined in edu::umd::cs::findbugs::detect::BuildInterproceduralCallGraph
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function BuildInterproceduralCallGraph(BugReporter) in line 56
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable FIND_EFFECTIVE_RELEVANT_QUALIFIERS defined in edu::umd::cs::findbugs::ba::jsr305::Analysis
      uses variable callGraph defined in edu::umd::cs::findbugs::detect::BuildInterproceduralCallGraph
   variable callGraph in line 48
   variable currentVertex in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/BuildNonNullAnnotationDatabase.java
module edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   function visitAnnotation(String,Map< String, Object >,boolean) in line 71
      protection public
      39 lines of code
      3 parameters
      10 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
      uses variable defaultKind defined in edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
      uses function addDefaultAnnotation(AnnotationDatabase.Target,String,NullnessAnnotation) defined in edu::umd::cs::findbugs::ba::NullnessAnnotationDatabase
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addDirectAnnotation(Object,AnnotationEnum) defined in edu::umd::cs::findbugs::ba::AnnotationDatabase
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitParameterAnnotation(int,String,Map< String, Object >,boolean) in line 127
      protection public
      26 lines of code
      4 parameters
      4 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
      uses function addDirectAnnotation(Object,AnnotationEnum) defined in edu::umd::cs::findbugs::ba::AnnotationDatabase
   function visitSyntheticParameterAnnotation(int,boolean) in line 111
      protection public
      13 lines of code
      2 parameters
      2 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
      uses function addDirectAnnotation(Object,AnnotationEnum) defined in edu::umd::cs::findbugs::ba::AnnotationDatabase
      uses variable UNKNOWN_NULLNESS defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   function BuildNonNullAnnotationDatabase(@CheckForNull NullnessAnnotationDatabase) in line 58
      protection public
      3 lines of code
      1 parameters
      2 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   variable database in line 56
   variable DEBUG in line 43
   variable DEFAULT_ANNOTATION_ANNOTATION_CLASS in line 45
   variable defaultKind in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/BuildNonnullReturnDatabase.java
module edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
   function analyzeMethod(ClassContext,Method) in line 72
      44 lines of code
      2 parameters
      8 conditional paths
      uses variable returnsReference defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable returnsNonNull defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
   function considerMethod(ClassContext,Method) in line 63
      6 lines of code
      2 parameters
      3 conditional paths
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable VERBOSE_DEBUG defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
   function visitClassContext(ClassContext) in line 52
      protection public
      9 lines of code
      1 parameters
      4 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable INTERPROCEDURAL_ANALYSIS_OF_REFERENCED_CLASSES defined in edu::umd::cs::findbugs::FindBugsAnalysisFeatures
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable VERBOSE_DEBUG defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
      uses function getMethodsInCallOrder() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function considerMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
   variable DEBUG in line 50
   variable returnsNonNull in line 70
   variable returnsReference in line 69
   variable VERBOSE_DEBUG in line 49
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/BuildObligationPolicyDatabase.java
module edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
   inherits from edu::umd::cs::findbugs::Detector2
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function addBuiltInPolicies() in line 271
      82 lines of code
      0 parameters
      1 conditional paths
      uses function addFileStreamEntries(String) defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getObligationByName(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function addEntry(ObligationPolicyDatabaseEntry) defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses variable ADD defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
      uses variable STRONG defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseEntryType
      uses function addObligation(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses variable DEL defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
   function addFileStreamEntries(String) in line 357
      18 lines of code
      1 parameters
      1 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function addObligation(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function addEntry(ObligationPolicyDatabaseEntry) defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses variable ADD defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
      uses variable STRONG defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseEntryType
      uses variable DEL defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
   function addParameterDeletesObligationDatabaseEntry(XMethod,Obligation,ObligationPolicyDatabaseEntryType) in line 384
      13 lines of code
      3 parameters
      2 conditional paths
      uses variable DEL defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function addEntry(ObligationPolicyDatabaseEntry) defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses variable DEBUG_ANNOTATIONS defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
   function finishPass() in line 249
      protection public
      17 lines of code
      0 parameters
      3 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function setStrictChecking(boolean) defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses variable sawAnnotationsInApplicationCode defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses variable DUMP_DB defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function isStrictChecking() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getEntries() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
   function getDetectorClassName() in line 267
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function handleWillCloseWhenClosed(XMethod,Obligation) in line 401
      50 lines of code
      2 parameters
      8 conditional paths
      uses variable DEBUG_ANNOTATIONS defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getObligationByType(ObjectType) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable reporter defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function addEntry(ObligationPolicyDatabaseEntry) defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses variable DEL defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
      uses variable STRONG defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseEntryType
      uses variable ADD defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
   function scanForResourceTypes() in line 452
      21 lines of code
      0 parameters
      5 conditional paths
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getXClassCollection() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable cleanupObligation defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function addObligation(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses variable DEBUG_ANNOTATIONS defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function obligationIterator() defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function visitClass(ClassDescriptor) in line 154
      protection public
      94 lines of code
      1 parameters
      16 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getObligationByType(ObjectType) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getXMethods() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable createsObligation defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function addEntry(ObligationPolicyDatabaseEntry) defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses variable ADD defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
      uses variable STRONG defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseEntryType
      uses variable dischargesObligation defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses variable DEL defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
      uses function getParameterObligationTypes(XMethod) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses variable INFER_CLOSE_METHODS defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function split() defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifier
      uses variable willCloseWhenClosed defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function handleWillCloseWhenClosed(XMethod,Obligation) defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses variable willClose defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses variable DEBUG_ANNOTATIONS defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function addParameterDeletesObligationDatabaseEntry(XMethod,Obligation,ObligationPolicyDatabaseEntryType) defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses variable sawAnnotationsInApplicationCode defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses variable willNotClose defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses enumvalue WEAK defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseEntryType
   function BuildObligationPolicyDatabase(BugReporter) in line 116
      protection public
      37 lines of code
      1 parameters
      5 conditional paths
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function addBuiltInPolicies() defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getObligationByName(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function addObligation(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function addEntry(ObligationPolicyDatabaseEntry) defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function scanForResourceTypes() defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function eagerlyPutDatabase(Class< E >,E) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   variable cleanupObligation in line 106
   variable createsObligation in line 107
   variable database in line 101
   variable DEBUG_ANNOTATIONS in line 97
   variable dischargesObligation in line 108
   variable DUMP_DB in line 98
   variable INFER_CLOSE_METHODS in line 96
   variable reporter in line 100
   variable sawAnnotationsInApplicationCode in line 114
   variable willClose in line 103
   variable willCloseWhenClosed in line 105
   variable willNotClose in line 104
module edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase::AuxilaryObligationPropertyDatabase
   inherits from edu::umd::cs::findbugs::ba::interproc::MethodPropertyDatabase
   function decodeProperty(String) in line 83
      3 lines of code
      1 parameters
      1 conditional paths
   function encodeProperty(String) in line 91
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/BuildUnconditionalParamDerefDatabase.java
module edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
   inherits from edu::umd::cs::findbugs::Detector
   abstract class
   function analyzeMethod(ClassContext,Method) in line 100
      80 lines of code
      2 parameters
      13 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getUnconditionalValueDerefDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isUnconditionallyDereferenced(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable nonnullTypeQualifierValue defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isPrivate() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function reportBug(BugInstance) defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
      uses variable VERBOSE_DEBUG defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
      uses function dumpDataflowInformation(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable nonnullReferenceParameters defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
   function considerMethod(ClassContext,Method) in line 83
      13 lines of code
      2 parameters
      5 conditional paths
      uses variable referenceParameters defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable VERBOSE_DEBUG defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
   function reportBug(BugInstance) in line 66
      1 lines of code
      1 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 72
      protection public
      9 lines of code
      1 parameters
      4 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable INTERPROCEDURAL_ANALYSIS_OF_REFERENCED_CLASSES defined in edu::umd::cs::findbugs::FindBugsAnalysisFeatures
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable VERBOSE_DEBUG defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
      uses function getMethodsInCallOrder() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function considerMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
   function BuildUnconditionalParamDerefDatabase() in line 68
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG in line 63
   variable nonnullReferenceParameters in line 98
   variable nonnullTypeQualifierValue in line 64
      protection public
   variable referenceParameters in line 97
   variable VERBOSE_DEBUG in line 62
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/CalledMethods.java
module edu::umd::cs::findbugs::detect::CalledMethods
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 84
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function sawOpcode(int) in line 48
      protection public
      35 lines of code
      1 parameters
      12 conditional paths
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isProtected() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getIntConstant() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPrevOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassDescriptorOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isApplicationClass(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getMethodDescriptorOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function CalledMethods(BugReporter) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/CallToUnconditionalThrower.java
module edu::umd::cs::findbugs::detect::CallToUnconditionalThrower
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 75
      72 lines of code
      2 parameters
      15 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable methodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function report() in line 69
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 148
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::CallToUnconditionalThrower
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function CallToUnconditionalThrower(BugReporter) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/CallToUnsupportedMethod.java
module edu::umd::cs::findbugs::detect::CallToUnsupportedMethod
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 91
      63 lines of code
      2 parameters
      15 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isAbstract() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function report() in line 158
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 62
      protection public
      23 lines of code
      1 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::CallToUnsupportedMethod
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function CallToUnsupportedMethod(BugReporter) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/CbeckMustOverrideSuperAnnotation.java
module edu::umd::cs::findbugs::detect::CbeckMustOverrideSuperAnnotation
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 70
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sawCallToSuper defined in edu::umd::cs::findbugs::detect::CbeckMustOverrideSuperAnnotation
   function visit(Code) in line 48
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getAnnotation(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable sawCallToSuper defined in edu::umd::cs::findbugs::detect::CbeckMustOverrideSuperAnnotation
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function CbeckMustOverrideSuperAnnotation(BugReporter) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable sawCallToSuper in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/CheckCalls.java
module edu::umd::cs::findbugs::detect::CheckCalls
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function analyzeMethod(ClassContext,Method) in line 86
      37 lines of code
      2 parameters
      5 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable TARGET_METHOD defined in edu::umd::cs::findbugs::detect::CheckCalls
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function report() in line 127
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 61
      protection public
      24 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable METHOD defined in edu::umd::cs::findbugs::detect::CheckCalls
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::CheckCalls
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function CheckCalls(BugReporter) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable METHOD in line 49
   variable TARGET_METHOD in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/CheckExpectedWarnings.java
module edu::umd::cs::findbugs::detect::CheckExpectedWarnings
   inherits from edu::umd::cs::findbugs::Detector2
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function check(XMethod,ClassDescriptor,boolean,int) in line 164
      21 lines of code
      4 parameters
      7 conditional paths
      uses function getAnnotation(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function getValue(String) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses function countWarnings(MethodDescriptor,String) defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable possibleBugCodes defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable reporter defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function reportBug(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function countWarnings(MethodDescriptor,String) in line 186
      13 lines of code
      2 parameters
      4 conditional paths
      uses variable warningsByMethod defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
   function finishPass() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDetectorClassName() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitClass(ClassDescriptor) in line 89
      protection public
      74 lines of code
      1 parameters
      13 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable warned defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable warningsByMethod defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses function toXMethod() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable possibleBugCodes defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function iterator() defined in edu::umd::cs::findbugs::plan::AnalysisPass
      uses function getReportedBugPatterns() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getXMethods() defined in edu::umd::cs::findbugs::ba::XClass
      uses function check(XMethod,ClassDescriptor,boolean,int) defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable expectWarning defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable desireWarning defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable noWarning defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable desireNoWarning defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
   function CheckExpectedWarnings(BugReporter) in line 78
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getRealBugReporter() defined in edu::umd::cs::findbugs::BugReporter
      uses variable reporter defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable expectWarning defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable noWarning defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable desireWarning defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable desireNoWarning defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
   variable DEBUG in line 65
   variable desireNoWarning in line 74
   variable desireWarning in line 73
   variable expectWarning in line 71
   variable noWarning in line 72
   variable possibleBugCodes in line 68
   variable reporter in line 67
   variable warned in line 76
   variable warningsByMethod in line 69
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/CheckImmutableAnnotation.java
module edu::umd::cs::findbugs::detect::CheckImmutableAnnotation
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function report() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(Field) in line 52
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visitClassContext(ClassContext) in line 64
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function visitJavaClass(JavaClass) in line 43
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function hasClassAnnotation(String,String) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function CheckImmutableAnnotation(BugReporter) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/CheckTypeQualifiers.java
module edu::umd::cs::findbugs::detect::CheckTypeQualifiers
   inherits from edu::umd::cs::findbugs::bcel::CFGDetector
   function annotateWarningWithSourceSinkInfo(BugInstance,MethodDescriptor,ValueNumber,SourceSinkInfo) in line 545
      31 lines of code
      4 parameters
      8 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getLocal() defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function setDescription(String) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function isSignificant() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function annotateWarningWithTypeQualifier(BugInstance,TypeQualifierValue) in line 531
      13 lines of code
      2 parameters
      2 conditional paths
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable value defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable TYPE_QUALIFIER_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
   function checkDataflow(MethodDescriptor,CFG,TypeQualifierValue,ValueNumberDataflow,ForwardTypeQualifierDataflow,BackwardTypeQualifierDataflow) in line 223
      77 lines of code
      6 parameters
      8 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses variable checkLocation defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function toCompactString() defined in edu::umd::cs::findbugs::ba::Location
      uses function checkForConflictingValues(MethodDescriptor,TypeQualifierValue,TypeQualifierValueSet,TypeQualifierValueSet,Location,Location,ValueNumberFrame) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getEdgeTargetLocation(CFG,Edge) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getEdgeSourceLocation(CFG,Edge) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
   function checkForConflictingValues(MethodDescriptor,TypeQualifierValue,TypeQualifierValueSet,TypeQualifierValueSet,Location,Location,ValueNumberFrame) in line 411
      38 lines of code
      7 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses variable checkLocation defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function emitDataflowWarning(MethodDescriptor,TypeQualifierValue,TypeQualifierValueSet,TypeQualifierValueSet,ValueNumber,FlowValue,FlowValue,Location,Location,ValueNumberFrame) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
   function checkQualifier(MethodDescriptor,CFG,TypeQualifierValue,ForwardTypeQualifierDataflowFactory,BackwardTypeQualifierDataflowFactory,ValueNumberDataflow) in line 184
      38 lines of code
      6 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses variable DEBUG_DATAFLOW defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses variable DEBUG_DATAFLOW_MODE defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function print(PrintStream) defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function checkDataflow(MethodDescriptor,CFG,TypeQualifierValue,ValueNumberDataflow,ForwardTypeQualifierDataflow,BackwardTypeQualifierDataflow) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function checkValueSources(MethodDescriptor,CFG,TypeQualifierValue,ValueNumberDataflow,ForwardTypeQualifierDataflow,BackwardTypeQualifierDataflow) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
   function checkValueSources(MethodDescriptor,CFG,TypeQualifierValue,ValueNumberDataflow,ForwardTypeQualifierDataflow,BackwardTypeQualifierDataflow) in line 301
      73 lines of code
      6 parameters
      9 conditional paths
      uses function getValue(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function toCompactString() defined in edu::umd::cs::findbugs::ba::Location
      uses variable ALWAYS defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses variable NEVER defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses function emitSourceWarning(String,MethodDescriptor,TypeQualifierValue,FlowValue,TypeQualifierValueSet,SourceSinkInfo,ValueNumber,Location) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses variable PARAMETER defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkType
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function emitDataflowWarning(MethodDescriptor,TypeQualifierValue,TypeQualifierValueSet,TypeQualifierValueSet,ValueNumber,FlowValue,FlowValue,Location,Location,ValueNumberFrame) in line 450
      57 lines of code
      10 parameters
      4 conditional paths
      uses variable NEVER defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function annotateWarningWithTypeQualifier(BugInstance,TypeQualifierValue) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function setDescription(String) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function isSignificant() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function setDescription(String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable ALWAYS defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses function annotateWarningWithSourceSinkInfo(BugInstance,MethodDescriptor,ValueNumber,SourceSinkInfo) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function emitSourceWarning(String,MethodDescriptor,TypeQualifierValue,FlowValue,TypeQualifierValueSet,SourceSinkInfo,ValueNumber,Location) in line 508
      22 lines of code
      8 parameters
      2 conditional paths
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function annotateWarningWithTypeQualifier(BugInstance,TypeQualifierValue) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function annotateWarningWithSourceSinkInfo(BugInstance,MethodDescriptor,ValueNumber,SourceSinkInfo) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses variable NEVER defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses function getWhereNever(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function getWhereAlways(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function getEdgeSourceLocation(CFG,Edge) in line 406
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getEdgeTargetLocation(CFG,Edge) in line 376
      29 lines of code
      2 parameters
      7 conditional paths
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getSuccessorWithEdgeType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function removedEdgeIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
   function visitClass(ClassDescriptor) in line 99
      protection public
      20 lines of code
      1 parameters
      6 conditional paths
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable NONNULL_ANNOTATION defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
   function visitMethodCFG(MethodDescriptor,CFG) in line 124
      47 lines of code
      2 parameters
      7 conditional paths
      uses variable METHOD defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable NONNULL_ANNOTATION defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function checkQualifier(MethodDescriptor,CFG,TypeQualifierValue,ForwardTypeQualifierDataflowFactory,BackwardTypeQualifierDataflowFactory,ValueNumberDataflow) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function CheckTypeQualifiers(BugReporter) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
   variable bugReporter in line 87
   variable checkLocation in line 172
   variable DEBUG in line 80
   variable DEBUG_DATAFLOW in line 81
   variable DEBUG_DATAFLOW_MODE in line 82
   variable METHOD in line 85
   variable NONNULL_ANNOTATION in line 83
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/CloneIdiom.java
module edu::umd::cs::findbugs::detect::CloneIdiom
   inherits from edu::umd::cs::findbugs::visitclass::DismantleBytecode
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function report() in line 197
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function sawOpcode(int) in line 79
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 72
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(JavaClass) in line 93
      protection public
      36 lines of code
      1 parameters
      8 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable cloneDescriptor defined in edu::umd::cs::findbugs::detect::CloneIdiom
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::CloneIdiom
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(ConstantNameAndType) in line 171
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Method) in line 180
      protection public
      13 lines of code
      1 parameters
      5 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isDeprecated() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function visitAfter(JavaClass) in line 131
      protection public
      38 lines of code
      1 parameters
      12 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::CloneIdiom
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDirectSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable SUBCLASS_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitClassContext(ClassContext) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function CloneIdiom(BugReporter) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::CloneIdiom
   variable bugReporter in line 61
   variable cloneDescriptor in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/ComparatorIdiom.java
module edu::umd::cs::findbugs::detect::ComparatorIdiom
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function report() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(JavaClass) in line 47
      protection public
      31 lines of code
      1 parameters
      8 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitClassContext(ClassContext) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function ComparatorIdiom(BugReporter) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/ConfusedInheritance.java
module edu::umd::cs::findbugs::detect::ConfusedInheritance
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function report() in line 61
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 43
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable cls defined in edu::umd::cs::findbugs::detect::ConfusedInheritance
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function visitField(Field) in line 51
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::ConfusedInheritance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable cls defined in edu::umd::cs::findbugs::detect::ConfusedInheritance
   function ConfusedInheritance(BugReporter) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::ConfusedInheritance
   variable bugReporter in line 34
   variable cls in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/ConfusionBetweenInheritedAndOuterMethod.java
module edu::umd::cs::findbugs::detect::ConfusionBetweenInheritedAndOuterMethod
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 70
      protection public
      48 lines of code
      1 parameters
      11 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPackageName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function visit(Field) in line 56
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function visit(Code) in line 63
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function visitJavaClass(JavaClass) in line 43
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function ConfusionBetweenInheritedAndOuterMethod(BugReporter) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/CrossSiteScripting.java
module edu::umd::cs::findbugs::detect::CrossSiteScripting
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function annotateAndReport(BugInstance,OpcodeStack.Item) in line 60
      16 lines of code
      2 parameters
      4 conditional paths
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable PARAMETER_NAME_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable ROLE_GENERATED_AT defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function addOptionalLocalVariable(DismantleBytecode,OpcodeStack.Item) defined in edu::umd::cs::findbugs::BugInstance
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function isServletWriter(OpcodeStack.Item) in line 185
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
   function isTainted(OpcodeStack.Item) in line 170
      4 lines of code
      1 parameters
      2 conditional paths
   function sawOpcode(int) in line 78
      protection public
      91 lines of code
      1 parameters
      21 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function replaceTop(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function taintPriority(OpcodeStack.Item) defined in edu::umd::cs::findbugs::detect::CrossSiteScripting
      uses function annotateAndReport(BugInstance,OpcodeStack.Item) defined in edu::umd::cs::findbugs::detect::CrossSiteScripting
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isTainted(OpcodeStack.Item) defined in edu::umd::cs::findbugs::detect::CrossSiteScripting
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isServletWriter(OpcodeStack.Item) defined in edu::umd::cs::findbugs::detect::CrossSiteScripting
   function taintPriority(OpcodeStack.Item) in line 175
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 54
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function CrossSiteScripting(BugReporter) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/DeadLocalStoreProperty.java
module edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function DeadLocalStoreProperty(String,PriorityAdjustment) in line 12
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable BASE_VALUE in line 99
      protection public
   variable CACHING_VALUE in line 91
      protection public
   variable CLONED_STORE in line 24
      protection public
   variable COPY_VALUE in line 95
      protection public
   variable DEAD_INCREMENT in line 43
      protection public
   variable DEAD_INCREMENT_IN_MAIN in line 45
      protection public
   variable DEAD_OBJECT_STORE in line 56
      protection public
   variable DEFENSIVE_CONSTANT_OPCODE in line 35
      protection public
   variable DUP_THEN_STORE in line 68
      protection public
   variable EXCEPTION_HANDLER in line 39
      protection public
   variable IN_JSP_PAGE in line 17
      protection public
   variable IS_PARAMETER in line 112
      protection public
   variable KILLED_BY_SUBSEQUENT_STORE in line 28
      protection public
   variable LOCAL_NAME in line 87
      protection public
   variable MANY_STORES in line 103
      protection public
   variable METHOD_RESULT in line 48
      protection public
   variable NO_LOADS in line 72
      protection public
   variable NOT_JAVA in line 20
      protection public
   variable PARAM_DEAD_ON_ENTRY in line 83
      protection public
   variable SHADOWS_FIELD in line 76
      protection public
   variable SINGLE_DEAD_INCREMENT in line 52
      protection public
   variable SINGLE_STORE in line 64
      protection public
   variable STORE_OF_CONSTANT in line 109
      protection public
   variable STORE_OF_DATABASE_VALUE in line 31
      protection public
   variable STORE_OF_NULL in line 106
      protection public
   variable SYNTHETIC_NAME in line 79
      protection public
   variable TWO_STORES_MULTIPLE_LOADS in line 60
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/DoInsideDoPrivileged.java
module edu::umd::cs::findbugs::detect::DoInsideDoPrivileged
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 58
      protection public
      22 lines of code
      1 parameters
      5 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(JavaClass) in line 42
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Code) in line 50
      protection public
      7 lines of code
      1 parameters
      4 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function DoInsideDoPrivileged(BugReporter) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/DontCatchIllegalMonitorStateException.java
module edu::umd::cs::findbugs::detect::DontCatchIllegalMonitorStateException
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function report() in line 85
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visit(ExceptionTable) in line 53
      protection public
      9 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::DontCatchIllegalMonitorStateException
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(CodeException) in line 64
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::DontCatchIllegalMonitorStateException
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visitClassContext(ClassContext) in line 80
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function DontCatchIllegalMonitorStateException(BugReporter) in line 44
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::DontCatchIllegalMonitorStateException
   variable DEBUG in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/DontIgnoreResultOfPutIfAbsent.java
module edu::umd::cs::findbugs::detect::DontIgnoreResultOfPutIfAbsent
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 187
      99 lines of code
      2 parameters
      16 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function extendsConcurrentMap(@DottedClassName String) defined in edu::umd::cs::findbugs::detect::DontIgnoreResultOfPutIfAbsent
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumLocals() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getPriorityForBeingMutable(Type) defined in edu::umd::cs::findbugs::detect::DontIgnoreResultOfPutIfAbsent
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function extendsConcurrentMap(@DottedClassName String) in line 288
      17 lines of code
      1 parameters
      4 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function getPriorityForBeingMutable(Type) in line 139
      48 lines of code
      1 parameters
      13 conditional paths
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable IGNORE_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isWrittenOutsideOfInitialization(XField) defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function report() in line 89
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 94
      protection public
      34 lines of code
      1 parameters
      8 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::DontIgnoreResultOfPutIfAbsent
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function DontIgnoreResultOfPutIfAbsent(BugReporter) in line 81
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/DontUseEnum.java
module edu::umd::cs::findbugs::detect::DontUseEnum
   inherits from edu::umd::cs::findbugs::bcel::PreorderDetector
   function isReservedName(String) in line 57
      3 lines of code
      1 parameters
      1 conditional paths
   function isVisible(FieldOrMethod) in line 52
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 43
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function isReservedName(String) defined in edu::umd::cs::findbugs::detect::DontUseEnum
      uses function isVisible(FieldOrMethod) defined in edu::umd::cs::findbugs::detect::DontUseEnum
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visit(Field) in line 62
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function isReservedName(String) defined in edu::umd::cs::findbugs::detect::DontUseEnum
      uses function isVisible(FieldOrMethod) defined in edu::umd::cs::findbugs::detect::DontUseEnum
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visit(LocalVariable) in line 71
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function isReservedName(String) defined in edu::umd::cs::findbugs::detect::DontUseEnum
      uses function getClassContext() defined in edu::umd::cs::findbugs::bcel::PreorderDetector
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function DontUseEnum(BugReporter) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/DoomedCodeWarningProperty.java
module edu::umd::cs::findbugs::detect::DoomedCodeWarningProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function DoomedCodeWarningProperty(String,PriorityAdjustment) in line 32
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable shortName defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable DOOMED_CODE in line 39
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/DroppedException.java
module edu::umd::cs::findbugs::detect::DroppedException
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function catchBlockHasComment(SourceLineAnnotation) in line 347
      120 lines of code
      1 parameters
      31 conditional paths
      uses variable LOOK_IN_SOURCE_TO_FIND_COMMENTED_CATCH_BLOCKS defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable sourceFile defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable NUM_CONTEXT_LINES defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable MAX_LINES defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function next() defined in edu::umd::cs::findbugs::Tokenizer
      uses function getKind() defined in edu::umd::cs::findbugs::Token
      uses variable EOF defined in edu::umd::cs::findbugs::Token
      uses variable EOL defined in edu::umd::cs::findbugs::Token
      uses variable WORD defined in edu::umd::cs::findbugs::Token
      uses function getLexeme() defined in edu::umd::cs::findbugs::Token
      uses variable START defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable CATCH defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable OPEN_PAREN defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable CLOSE_PAREN defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable OPEN_BRACE defined in edu::umd::cs::findbugs::detect::DroppedException
   function getNextExecutableLineNumber(LineNumberTable,int) in line 296
      21 lines of code
      2 parameters
      6 conditional paths
   function getUnsignedShort(byte[],int) in line 88
      4 lines of code
      2 parameters
      1 conditional paths
      uses function asUnsignedByte(byte) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function report() in line 70
      protection public
      2 lines of code
      0 parameters
      4 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(Code) in line 94
      protection public
      201 lines of code
      1 parameters
      52 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function asUnsignedByte(byte) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getUnsignedShort(byte[],int) defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function getNextExecutableLineNumber(LineNumberTable,int) defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOOK_IN_SOURCE_TO_FIND_COMMENTED_CATCH_BLOCKS defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function catchBlockHasComment(SourceLineAnnotation) defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitClassContext(ClassContext) in line 65
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function DroppedException(BugReporter) in line 60
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::DroppedException
   variable bugReporter in line 57
   variable CATCH in line 320
   variable classContext in line 58
   variable CLOSE_PAREN in line 322
   variable DEBUG in line 50
   variable LOOK_IN_SOURCE_TO_FIND_COMMENTED_CATCH_BLOCKS in line 51
   variable MAX_LINES in line 337
   variable NUM_CONTEXT_LINES in line 331
   variable OPEN_BRACE in line 323
   variable OPEN_PAREN in line 321
   variable START in line 319
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/DumbMethodInvocations.java
module edu::umd::cs::findbugs::detect::DumbMethodInvocations
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 61
      81 lines of code
      2 parameters
      15 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isConstantString() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses function getConstantString() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::DumbMethodInvocations
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isConstantInteger() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses function getConstantInt() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses function isAbsoluteFileName(String) defined in edu::umd::cs::findbugs::detect::DumbMethodInvocations
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function isAbsoluteFileName(String) in line 143
      12 lines of code
      1 parameters
      6 conditional paths
   function report() in line 156
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 38
      protection public
      22 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::DumbMethodInvocations
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::DumbMethodInvocations
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DumbMethodInvocations
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function DumbMethodInvocations(BugReporter) in line 33
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DumbMethodInvocations
   variable bugAccumulator in line 31
   variable bugReporter in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/DumbMethods.java
module edu::umd::cs::findbugs::detect::DumbMethods
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function checkMonitorWait() in line 960
      31 lines of code
      0 parameters
      5 conditional paths
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getLocationAndFactForInstruction(int) defined in edu::umd::cs::findbugs::ba::type::TypeDataflow
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable frame defined in edu::umd::cs::findbugs::ba::type::TypeDataflow::LocationAndFactPair
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable CONDITION_TYPE defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function flush() in line 1013
      40 lines of code
      0 parameters
      9 conditional paths
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable gcInvocationBugReport defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable sawCurrentTimeMillis defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable exceptionTable defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable gcInvocationPC defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable OOM_CATCH_LEN defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function getStackEntryOfListCallThatMustBeNonnegative() in line 948
      12 lines of code
      0 parameters
      3 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function isMonitorWait(String,String) in line 992
      5 lines of code
      2 parameters
      1 conditional paths
   function isTestMethod(Method) in line 117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function reportVacuousBitOperation(int,OpcodeStack.Item) in line 901
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function sawOpcode(int) in line 167
      protection public
      730 lines of code
      1 parameters
      136 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function addInt(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable INT_VALUE defined in edu::umd::cs::findbugs::IntAnnotation
      uses function getSpecialKind() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable SIGNED_BYTE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable sawCheckForNonNegativeSignedByte defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPrevOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses variable prevOpcode defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function isRegisterLoad() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable isEqualsObject defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable reportedBadCastInEquals defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable sawInstanceofCheck defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function getSizeOfSurroundingTryBlock(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getBranchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable RANDOM_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable HASHCODE_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function stackEntryThatMustBeNonnegative(int) defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable HASHCODE_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RANDOM_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable switchLabels defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSwitchLabels() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable switchOffsets defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSwitchOffsets() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NON_NEGATIVE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function reportVacuousBitOperation(int,OpcodeStack.Item) defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable checkForBitIorofSignedByte defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable LOW_8_BITS_CLEAR defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable prevOpcodeWasReadLine defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable sinceBufferedInputStreamReady defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable randomNextIntState defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable isPublicStaticVoidMain defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable ANNOTATION_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable gcInvocationBugReport defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function isTestMethod(Method) defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable gcInvocationPC defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sawCurrentTimeMillis defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable primitiveObjCtorSeen defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable ctorSeen defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable jdk15ChecksEnabled defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function isMonitorWait(String,String) defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function checkMonitorWait() defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function getItemMethodInvokedOn(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
   function stackEntryThatMustBeNonnegative(int) in line 914
      34 lines of code
      1 parameters
      21 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackEntryOfListCallThatMustBeNonnegative() defined in edu::umd::cs::findbugs::detect::DumbMethods
   function visit(JavaClass) in line 100
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable superclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Method) in line 121
      protection public
      28 lines of code
      1 parameters
      5 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable isPublicStaticVoidMain defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable prevOpcodeWasReadLine defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable primitiveObjCtorSeen defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable ctorSeen defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable randomNextIntState defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable checkForBitIorofSignedByte defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable isEqualsObject defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sawInstanceofCheck defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable reportedBadCastInEquals defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable sinceBufferedInputStreamReady defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable sawCheckForNonNegativeSignedByte defined in edu::umd::cs::findbugs::detect::DumbMethods
   function visit(Code) in line 999
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function flush() defined in edu::umd::cs::findbugs::detect::DumbMethods
   function visitAfter(JavaClass) in line 114
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function DumbMethods(BugReporter) in line 90
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable jdk15ChecksEnabled defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function isSameOrNewerThan(JavaVersion) defined in edu::umd::cs::findbugs::JavaVersion
      uses variable JAVA_1_5 defined in edu::umd::cs::findbugs::JavaVersion
   variable accumulator in line 89
   variable bugReporter in line 65
   variable checkForBitIorofSignedByte in line 85
   variable CONDITION_TYPE in line 63
   variable ctorSeen in line 74
   variable exceptionTable in line 69
   variable gcInvocationBugReport in line 67
   variable gcInvocationPC in line 68
   variable isEqualsObject in line 78
   variable isPublicStaticVoidMain in line 77
   variable jdk15ChecksEnabled in line 87
   variable OOM_CATCH_LEN in line 1008
   variable prevOpcode in line 76
   variable prevOpcodeWasReadLine in line 75
   variable primitiveObjCtorSeen in line 73
   variable randomNextIntState in line 84
   variable reportedBadCastInEquals in line 80
   variable sawCheckForNonNegativeSignedByte in line 81
   variable sawCurrentTimeMillis in line 66
   variable sawInstanceofCheck in line 79
   variable sinceBufferedInputStreamReady in line 83
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/DuplicateBranches.java
module edu::umd::cs::findbugs::detect::DuplicateBranches
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function findIfElseDuplicates(CFG,Method,BasicBlock) in line 103
      58 lines of code
      3 parameters
      12 conditional paths
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getDeepFirstInstruction(CFG,BasicBlock) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function findThenFinish(CFG,BasicBlock,int) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getCodeBytes(Method,int,int) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable pendingBugs defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable classContext defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function addSourceLineRange(BytecodeScanningDetector,int,int) defined in edu::umd::cs::findbugs::BugInstance
   function findSwitchDuplicates(CFG,Method,BasicBlock) in line 177
      71 lines of code
      3 parameters
      16 conditional paths
      uses function getNumOutgoingEdges(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable SWITCH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable SWITCH_DEFAULT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getDeepFirstInstruction(CFG,BasicBlock) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getFinalTarget(CFG,int,Collection< InstructionHandle >) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getCodeBytesAsBigInt(Method,int[],int,int) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function updateMap(HashMap< BigInteger, Collection< Integer >>,int,BigInteger) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable classContext defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function addSourceLineRange(BytecodeScanningDetector,int,int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable pendingBugs defined in edu::umd::cs::findbugs::detect::DuplicateBranches
   function findThenFinish(CFG,BasicBlock,int) in line 354
      22 lines of code
      3 parameters
      5 conditional paths
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getCodeBytes(Method,int,int) in line 320
      33 lines of code
      3 parameters
      6 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getCodeBytesAsBigInt(Method,int[],int,int) in line 261
      8 lines of code
      4 parameters
      2 conditional paths
      uses function getCodeBytes(Method,int,int) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getDeepFirstInstruction(CFG,BasicBlock) in line 164
      12 lines of code
      2 parameters
      4 conditional paths
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function toString() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getFinalTarget(CFG,int,Collection< InstructionHandle >) in line 272
      47 lines of code
      3 parameters
      10 conditional paths
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses function toString() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable GOTO_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getDeepFirstInstruction(CFG,BasicBlock) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function report() in line 377
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function updateMap(HashMap< BigInteger, Collection< Integer >>,int,BigInteger) in line 250
      9 lines of code
      3 parameters
      2 conditional paths
   function visitClassContext(ClassContext) in line 67
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function visitMethod(Method) in line 73
      protection public
      29 lines of code
      1 parameters
      9 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable classContext defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getNumOutgoingEdges(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function findIfElseDuplicates(CFG,Method,BasicBlock) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function findSwitchDuplicates(CFG,Method,BasicBlock) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable pendingBugs defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function DuplicateBranches(BugReporter) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DuplicateBranches
   variable bugReporter in line 59
   variable classContext in line 58
   variable pendingBugs in line 60
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/EmptyZipFileEntry.java
module edu::umd::cs::findbugs::detect::EmptyZipFileEntry
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 54
      protection public
      30 lines of code
      1 parameters
      4 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable streamType defined in edu::umd::cs::findbugs::detect::EmptyZipFileEntry
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sawPutEntry defined in edu::umd::cs::findbugs::detect::EmptyZipFileEntry
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::EmptyZipFileEntry
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function visit(JavaClass) in line 44
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 48
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable sawPutEntry defined in edu::umd::cs::findbugs::detect::EmptyZipFileEntry
      uses variable streamType defined in edu::umd::cs::findbugs::detect::EmptyZipFileEntry
   function EmptyZipFileEntry(BugReporter) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::EmptyZipFileEntry
   variable bugReporter in line 33
   variable sawPutEntry in line 34
   variable streamType in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/EqStringTest.java
module edu::umd::cs::findbugs::detect::EqStringTest
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 59
      protection public
      31 lines of code
      1 parameters
      10 conditional paths
      uses variable refConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRefConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::EqStringTest
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
   function sawString(String) in line 92
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 46
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::EqStringTest
      uses function clearBugs() defined in edu::umd::cs::findbugs::BugAccumulator
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function EqStringTest(BugReporter) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable bugAccumulator in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/EqualsOperandShouldHaveClassCompatibleWithThis.java
module edu::umd::cs::findbugs::detect::EqualsOperandShouldHaveClassCompatibleWithThis
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::FirstPassDetector
   function check(ClassDescriptor) in line 107
      30 lines of code
      1 parameters
      7 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function checksForEqualTo(ClassDescriptor,ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ClassSummary
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function sawOpcode(int) in line 75
      protection public
      27 lines of code
      1 parameters
      7 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function check(ClassDescriptor) defined in edu::umd::cs::findbugs::detect::EqualsOperandShouldHaveClassCompatibleWithThis
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getClassDescriptorOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 61
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
      uses function clearBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function EqualsOperandShouldHaveClassCompatibleWithThis(BugReporter) in line 52
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function setClassSummary(@NonNull ClassSummary) defined in edu::umd::cs::findbugs::ba::AnalysisContext
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FieldItemSummary.java
module edu::umd::cs::findbugs::detect::FieldItemSummary
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function setComplete(boolean) defined in edu::umd::cs::findbugs::ba::FieldSummary
   function sawOpcode(int) in line 58
      protection public
      54 lines of code
      1 parameters
      16 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getXMethodOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isPrivate() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function setCalledFromSuperConstructor(ProgramPoint,XMethod) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getItemMethodInvokedOn(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function sawSuperCall(XMethod,XMethod) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function addWrittenOutsideOfConstructor(XField) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function mergeSummary(XField,OpcodeStack.Item) defined in edu::umd::cs::findbugs::ba::FieldSummary
   function shouldVisit(JavaClass) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function hasStubs() defined in edu::umd::cs::findbugs::ba::XClass
   function visit(Code) in line 115
      protection public
      23 lines of code
      1 parameters
      7 conditional paths
      uses function setFieldsWritten(XMethod,Collection< XField >) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable thisClass defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function mergeSummary(XField,OpcodeStack.Item) defined in edu::umd::cs::findbugs::ba::FieldSummary
   function FieldItemSummary(BugReporter) in line 44
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function setFieldSummary(@NonNull FieldSummary) defined in edu::umd::cs::findbugs::ba::AnalysisContext
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FinalizerNullsFields.java
module edu::umd::cs::findbugs::detect::FinalizerNullsFields
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 82
      protection public
      18 lines of code
      1 parameters
      5 conditional paths
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 50
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function visit(Field) in line 59
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 66
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function FinalizerNullsFields(BugReporter) in line 41
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindBadCast.java
module edu::umd::cs::findbugs::detect::FindBadCast
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 84
      protection public
      145 lines of code
      1 parameters
      34 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function printOpCode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable castTo defined in edu::umd::cs::findbugs::detect::FindBadCast
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable concreteCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast
      uses variable abstractCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast
      uses variable parameters defined in edu::umd::cs::findbugs::detect::FindBadCast
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Code) in line 72
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable parameters defined in edu::umd::cs::findbugs::detect::FindBadCast
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function resetForMethodEntry(final DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable castTo defined in edu::umd::cs::findbugs::detect::FindBadCast
   function FindBadCast(BugReporter) in line 46
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses variable abstractCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast
      uses variable concreteCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast
   variable abstractCollectionClasses in line 65
   variable castTo in line 40
   variable concreteCollectionClasses in line 64
   variable parameters in line 70
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindBadCast2.java
module edu::umd::cs::findbugs::detect::FindBadCast2
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 137
      341 lines of code
      2 parameters
      67 conditional paths
      uses function isSynthetic(Method) defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses function prescreen(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses function getClassName(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberDataflow
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getLocationsContainingInstructionWithOffset(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isExact(int) defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function getStackLocation(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getParameterValueNumbers(ClassContext,Method,CFG) defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable concreteCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable abstractCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable veryAbstractCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses function getMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable ARRAY_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable RETURN_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addFoundAndExpectedType(Type,Type) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function getParameterValueNumbers(ClassContext,Method,CFG) in line 126
      11 lines of code
      3 parameters
      2 conditional paths
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getNumLocals() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
   function isSynthetic(Method) in line 117
      9 lines of code
      1 parameters
      4 conditional paths
   function prescreen(ClassContext,Method) in line 111
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function report() in line 479
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 87
      protection public
      23 lines of code
      1 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindBadCast2(BugReporter) in line 64
      protection public
      22 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable veryAbstractCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable abstractCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable concreteCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast2
   variable abstractCollectionClasses in line 59
   variable bugReporter in line 55
   variable concreteCollectionClasses in line 57
   variable DEBUG in line 62
   variable veryAbstractCollectionClasses in line 60
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindBadEqualsImplementation.java
module edu::umd::cs::findbugs::detect::FindBadEqualsImplementation
   inherits from edu::umd::cs::findbugs::Detector
   function isEqualsMethod(Method) in line 82
      5 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 99
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function report() in line 91
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 54
      protection public
      27 lines of code
      1 parameters
      7 conditional paths
      uses variable checkedDatabase defined in edu::umd::cs::findbugs::detect::FindBadEqualsImplementation
      uses variable database defined in edu::umd::cs::findbugs::detect::FindBadEqualsImplementation
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function isEqualsMethod(Method) defined in edu::umd::cs::findbugs::detect::FindBadEqualsImplementation
      uses function getProperty(KeyType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindBadEqualsImplementation
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function FindBadEqualsImplementation(BugReporter) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindBadEqualsImplementation
   variable bugReporter in line 43
   variable checkedDatabase in line 45
   variable database in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindBadForLoop.java
module edu::umd::cs::findbugs::detect::FindBadForLoop
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 55
      protection public
      53 lines of code
      1 parameters
      6 conditional paths
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable branchTarget defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getCodeByte(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 46
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function FindBadForLoop(BugReporter) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindBugsSummaryStats.java
module edu::umd::cs::findbugs::detect::FindBugsSummaryStats
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::BugReporterObserver
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 121
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function report(PrintStream) in line 124
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function reportBug(BugInstance) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stats defined in edu::umd::cs::findbugs::detect::FindBugsSummaryStats
      uses function addBug(BugInstance) defined in edu::umd::cs::findbugs::ProjectStats
   function visit(JavaClass) in line 63
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(Field) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(LineNumber) in line 102
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visitAfter(JavaClass) in line 85
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable stats defined in edu::umd::cs::findbugs::detect::FindBugsSummaryStats
      uses function addClass(String,boolean,int) defined in edu::umd::cs::findbugs::ProjectStats
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitClassContext(ClassContext) in line 117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function visitJavaClass(JavaClass) in line 58
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function FindBugsSummaryStats(BugReporter) in line 109
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugReporter
      uses function addObserver(BugReporterObserver) defined in edu::umd::cs::findbugs::BugReporter
   function FindBugsSummaryStats() in line 113
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable stats in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindCircularDependencies.java
module edu::umd::cs::findbugs::detect::FindCircularDependencies
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function removeDependencyLeaves(Map< String, Set< String >>) in line 113
      25 lines of code
      1 parameters
      6 conditional paths
      uses variable dependencyGraph defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
   function removeLoopLinks(Map< String, Set< String >>,Set< String >) in line 139
      23 lines of code
      2 parameters
      12 conditional paths
      uses variable clsName defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
      uses variable dependencyGraph defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
   function report() in line 83
      protection public
      29 lines of code
      0 parameters
      5 conditional paths
      uses function removeDependencyLeaves(Map< String, Set< String >>) defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
      uses variable dependencyGraph defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
      uses variable clsName defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function removeLoopLinks(Map< String, Set< String >>,Set< String >) defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
   function sawOpcode(int) in line 54
      protection public
      27 lines of code
      1 parameters
      7 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable clsName defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
      uses variable dependencyGraph defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
   function visit(JavaClass) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable clsName defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
   function FindCircularDependencies(BugReporter) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
   variable bugReporter in line 40
   variable clsName in line 41
   variable dependencyGraph in line 38
module edu::umd::cs::findbugs::detect::FindCircularDependencies::LoopFinder
   function findLoop(Map< String, Set< String >>,String) in line 170
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   function findLoop(String) in line 180
      20 lines of code
      1 parameters
      1 conditional paths
   variable dGraph in line 165
   variable loop in line 168
   variable startClass in line 166
   variable visited in line 167
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindDeadLocalStores.java
module edu::umd::cs::findbugs::detect::FindDeadLocalStores
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 195
      361 lines of code
      2 parameters
      73 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FOUND_INEXACT_UNCONDITIONAL_THROWERS defined in edu::umd::cs::findbugs::ba::CFG
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function countLocalStoresLoadsAndIncrements(int[],int[],int[],CFG) defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function isStore(Location) defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
      uses function isExceptionHandler() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable EXCEPTION_HANDLER defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getName() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable SYNTHETIC_NAME defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable EXCLUDED_LOCALS defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function setProperty(T,String) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable LOCAL_NAME defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable IS_PARAMETER defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable SHADOWS_FIELD defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable DID_YOU_MEAN_ROLE defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function addType(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable STORE_OF_CONSTANT defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable STORE_OF_NULL defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable BASE_VALUE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses function containsProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable KILLED_BY_SUBSEQUENT_STORE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses function getPredecessorOf(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable defensiveConstantValueOpcodes defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses variable DEFENSIVE_CONSTANT_OPCODE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable CACHING_VALUE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable COPY_VALUE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable METHOD_RESULT defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable DEAD_INCREMENT_IN_MAIN defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable DEAD_INCREMENT defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable SINGLE_DEAD_INCREMENT defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses function removeProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable DUP_THEN_STORE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable DEAD_OBJECT_STORE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable TWO_STORES_MULTIPLE_LOADS defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable SINGLE_STORE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable NO_LOADS defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable STORE_OF_DATABASE_VALUE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable PARAM_DEAD_ON_ENTRY defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable MANY_STORES defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses function getLocationsContainingInstructionWithOffset(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable CLONED_STORE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable IN_JSP_PAGE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable NOT_JAVA defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function suppressWarningsIfOneLiveStoreOnLine(BugAccumulator,BitSet) defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function checkLocalVariableName(LocalVariableTable,int,int,WarningPropertySet< DeadLocalStoreProperty >) in line 635
      10 lines of code
      4 parameters
      3 conditional paths
      uses function setProperty(T,String) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable LOCAL_NAME defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
   function countLocalStoresLoadsAndIncrements(int[],int[],int[],CFG) in line 598
      25 lines of code
      4 parameters
      6 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
      uses function isExceptionHandler() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isStore(Location) defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function isLoad(Location) defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function isLoad(Location) in line 665
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function isStore(Location) in line 653
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function prescreen(ClassContext,Method) in line 167
      3 lines of code
      2 parameters
      1 conditional paths
   function report() in line 670
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function suppressWarningsIfOneLiveStoreOnLine(BugAccumulator,BitSet) in line 564
      20 lines of code
      2 parameters
      5 conditional paths
      uses variable SUPPRESS_IF_AT_LEAST_ONE_LIVE_STORE_ON_LINE defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function uniqueBugs() defined in edu::umd::cs::findbugs::BugAccumulator
      uses function locations(BugInstance) defined in edu::umd::cs::findbugs::BugAccumulator
   function visitClassContext(ClassContext) in line 171
      protection public
      23 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function prescreen(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindDeadLocalStores(BugReporter) in line 161
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
   variable bugReporter in line 159
   variable DEBUG in line 97
   variable defensiveConstantValueOpcodes in line 138
   variable DO_EXCLUDE_LOCALS in line 107
   variable EXCLUDED_LOCALS in line 105
   variable FINDBUGS_EXCLUDED_LOCALS_PROP_NAME in line 102
   variable SUPPRESS_IF_AT_LEAST_ONE_LIVE_STORE_ON_LINE in line 129
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindDoubleCheck.java
module edu::umd::cs::findbugs::detect::FindDoubleCheck
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 69
      protection public
      92 lines of code
      1 parameters
      29 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindDoubleCheck
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Method) in line 55
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function FindDoubleCheck(BugReporter) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindDoubleCheck
   variable bugReporter in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindEmptySynchronizedBlock.java
module edu::umd::cs::findbugs::detect::FindEmptySynchronizedBlock
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 41
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getPrevOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function FindEmptySynchronizedBlock(BugReporter) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindFieldSelfAssignment.java
module edu::umd::cs::findbugs::detect::FindFieldSelfAssignment
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 56
      protection public
      62 lines of code
      1 parameters
      14 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getLVValue(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getNumLocalValues() defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFieldSelfAssignment
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 45
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function FindFieldSelfAssignment(BugReporter) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFieldSelfAssignment
   variable bugReporter in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindFinalizeInvocations.java
module edu::umd::cs::findbugs::detect::FindFinalizeInvocations
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 90
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindFinalizeInvocations
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 50
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindFinalizeInvocations
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFinalizeInvocations
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 60
      protection public
      28 lines of code
      1 parameters
      7 conditional paths
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindFinalizeInvocations
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFinalizeInvocations
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function FindFinalizeInvocations(BugReporter) in line 40
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFinalizeInvocations
   variable bugAccumulator in line 38
   variable bugReporter in line 37
   variable DEBUG in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindFloatEquality.java
module edu::umd::cs::findbugs::detect::FindFloatEquality
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function isZero(Number) in line 82
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function okValueToCompareAgainst(Number) in line 88
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
   function sawOpcode(int) in line 96
      protection public
      65 lines of code
      1 parameters
      21 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable state defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable SAW_NOTHING defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable NASTY_FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isZero(Number) defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function okValueToCompareAgainst(Number) defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable priority defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable SAW_COMP defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 54
      protection public
      27 lines of code
      1 parameters
      4 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable state defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable SAW_NOTHING defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable ROLE_ANOTHER_INSTANCE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function FindFloatEquality(BugReporter) in line 45
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFloatEquality
   variable bugAccumulator in line 42
   variable bugReporter in line 41
   variable priority in line 40
   variable SAW_COMP in line 39
   variable SAW_NOTHING in line 38
   variable state in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindFloatMath.java
module edu::umd::cs::findbugs::detect::FindFloatMath
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 38
      protection public
      31 lines of code
      1 parameters
      10 conditional paths
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFloatMath
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function FindFloatMath(BugReporter) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFloatMath
   variable bugReporter in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindHEmismatch.java
module edu::umd::cs::findbugs::detect::FindHEmismatch
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function check(int) in line 485
      22 lines of code
      1 parameters
      9 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getJavaClass() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addTypeOfNamedClass(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable UNHASHABLE_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function isHashableClassName(String) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dottedClassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function opcode(byte,int) in line 330
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function report() in line 563
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function isHashableClassName(String) defined in edu::umd::cs::findbugs::detect::FindHEmismatch
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindHEmismatch
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function sawOpcode(int) in line 463
      protection public
      22 lines of code
      1 parameters
      7 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function check(int) defined in edu::umd::cs::findbugs::detect::FindHEmismatch
   function visit(JavaClass) in line 308
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
      uses function getDottedSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Field) in line 334
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
   function visit(Method) in line 345
      protection public
      107 lines of code
      1 parameters
      27 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindHEmismatch
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function opcode(byte,int) defined in edu::umd::cs::findbugs::detect::FindHEmismatch
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Signature) in line 526
      protection public
      33 lines of code
      1 parameters
      9 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addVisitedField(PreorderVisitor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addTypeOfNamedClass(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable UNHASHABLE_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
   function visitAfter(JavaClass) in line 104
      protection public
      202 lines of code
      1 parameters
      48 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindHEmismatch
      uses function isAbstract() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isAbstract() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable superclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable ALWAYS_FALSE defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getSimpleName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_DID_YOU_MEAN_TO_OVERRIDE defined in edu::umd::cs::findbugs::MethodAnnotation
   function FindHEmismatch(BugReporter) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindHEmismatch
   variable bugReporter in line 97
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindInconsistentSync2.java
module edu::umd::cs::findbugs::detect::FindInconsistentSync2
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method,Set< Method >) in line 525
      161 lines of code
      3 parameters
      27 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isGetterMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getInnerClassAccess(String,String) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
      uses function getMethodSignature() defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function getField() defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses variable isLoad defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::LockChecker
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function isConstructor(String) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function containsReturnValue(ValueNumberFactory) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable ADJUST_SUBCLASS_ACCESSES defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable LOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable UNLOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable WRITE defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable NULLCHECK defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable READ defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isAnonymousClass() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getStats(XField) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function addAccess(int) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses function addLocalLock() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses function addGetterMethodAccess() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function findLockedMethods(ClassContext,SelfCalls,Set< CallSite >) in line 828
      51 lines of code
      3 parameters
      9 conditional paths
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getCallSite() defined in edu::umd::cs::findbugs::CallGraphEdge
      uses function getMethod() defined in edu::umd::cs::findbugs::CallSite
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getMethod() defined in edu::umd::cs::findbugs::CallGraphNode
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
   function findNotUnlockedMethods(ClassContext,SelfCalls,Set< CallSite >) in line 762
      60 lines of code
      3 parameters
      10 conditional paths
      uses function isConstructor(String) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getCallSite() defined in edu::umd::cs::findbugs::CallGraphEdge
      uses function getMethod() defined in edu::umd::cs::findbugs::CallSite
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getMethod() defined in edu::umd::cs::findbugs::CallGraphNode
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
   function findObviouslyLockedCallSites(ClassContext,SelfCalls) in line 940
      54 lines of code
      2 parameters
      6 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::CallSite
      uses function getLocation() defined in edu::umd::cs::findbugs::CallSite
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::LockChecker
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function getStats(XField) in line 748
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable statMap defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
   function isConstructor(String) in line 506
      18 lines of code
      1 parameters
      1 conditional paths
   function isGetterMethod(ClassContext,Method) in line 696
      protection public
      48 lines of code
      2 parameters
      29 conditional paths
   function isServletField(XField) in line 182
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable servlet defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable singleThreadedServlet defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function report() in line 350
      protection public
      151 lines of code
      0 parameters
      29 conditional paths
      uses variable statMap defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getFieldAnnotation(XField,String) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
      uses function hasClassAnnotation(String,String) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
      uses function getNumAccesses(int) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses variable READ_UNLOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable WRITE_UNLOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable NULLCHECK_UNLOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable READ_LOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable WRITE_LOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable NULLCHECK_LOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable WRITE_BIAS defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable ANNOTATED_AS_GUARDED_BY_THIS defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses variable ANNOTATED_AS_THREAD_SAFE defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses function isServletField() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable EVAL defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable UNSYNC_FACTOR defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable MANY_BIASED_UNLOCKED defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses variable NEVER_WRITTEN defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses variable NEVER_READ defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses function getNumLocalLocks() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses variable NO_LOCAL_LOCKS defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses variable MIN_SYNC_PERCENT defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable BELOW_MIN_SYNC_PERCENT defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses function getNumGetterMethodAccesses() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses variable ONLY_UNSYNC_IN_GETTERS defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses variable MUTABLE_SERVLET_FIELD defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addInt(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable INT_SYNC_PERCENT defined in edu::umd::cs::findbugs::IntAnnotation
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses function unsyncAccessIterator() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable SYNC_ACCESS defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function syncAccessIterator() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitClassContext(ClassContext) in line 288
      protection public
      61 lines of code
      1 parameters
      13 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function execute() defined in edu::umd::cs::findbugs::SelfCalls
      uses function getCallGraph() defined in edu::umd::cs::findbugs::SelfCalls
      uses function getNumVertices() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getNumEdges() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function findObviouslyLockedCallSites(ClassContext,SelfCalls) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function findNotUnlockedMethods(ClassContext,SelfCalls,Set< CallSite >) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function findLockedMethods(ClassContext,SelfCalls,Set< CallSite >) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method,Set< Method >) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable statMap defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function isServletField() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses function hasAnySynchronizedAccesses() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
   function FindInconsistentSync2(BugReporter) in line 284
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
   variable ADJUST_SUBCLASS_ACCESSES in line 101
   variable bugReporter in line 277
   variable DEBUG in line 98
   variable EVAL in line 102
   variable LOCKED in line 148
   variable MIN_SYNC_PERCENT in line 114
   variable NULLCHECK in line 151
   variable NULLCHECK_LOCKED in line 158
   variable NULLCHECK_UNLOCKED in line 155
   variable READ in line 149
   variable READ_LOCKED in line 156
   variable READ_UNLOCKED in line 153
   variable servlet in line 179
   variable singleThreadedServlet in line 181
   variable statMap in line 278
   variable SYNC_ACCESS in line 99
   variable UNLOCKED in line 147
   variable UNSYNC_FACTOR in line 140
   variable WRITE in line 150
   variable WRITE_BIAS in line 122
   variable WRITE_LOCKED in line 157
   variable WRITE_UNLOCKED in line 154
module edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldAccess
   function asSourceLineAnnotation(Collection< FieldAccess >) in line 170
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
module edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
   function addAccess(int) in line 215
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function addAccess(MethodDescriptor,InstructionHandle,boolean) in line 248
      protection public
      13 lines of code
      3 parameters
      4 conditional paths
      uses variable SYNC_ACCESS defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
   function addGetterMethodAccess() in line 231
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function addLocalLock() in line 223
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumAccesses(int) in line 219
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getNumGetterMethodAccesses() in line 235
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumLocalLocks() in line 227
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasAnySynchronizedAccesses() in line 245
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isInteresting() in line 238
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isServletField() in line 242
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function syncAccessIterator() in line 267
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
   function unsyncAccessIterator() in line 262
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
   variable countList in line 203
   variable field in line 202
   variable numGetterMethodAccesses in line 205
   variable numLocalLocks in line 204
   variable syncAccessList in line 207
   variable unsyncAccessList in line 206
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindJSR166LockMonitorenter.java
module edu::umd::cs::findbugs::detect::FindJSR166LockMonitorenter
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function analyzeMethod(ClassContext,Method) in line 100
      73 lines of code
      2 parameters
      11 conditional paths
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable LOCK_TYPE defined in edu::umd::cs::findbugs::detect::FindJSR166LockMonitorenter
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindJSR166LockMonitorenter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable UTIL_CONCURRRENT_SIG_PREFIX defined in edu::umd::cs::findbugs::detect::FindJSR166LockMonitorenter
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function addSourceForTopStackValue(ClassContext,Method,Location) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function clone() in line 72
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function report() in line 174
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 80
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindJSR166LockMonitorenter
   function FindJSR166LockMonitorenter(BugReporter) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindJSR166LockMonitorenter
   variable bugReporter in line 63
   variable LOCK_TYPE in line 65
   variable UTIL_CONCURRRENT_SIG_PREFIX in line 61
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindLocalSelfAssignment2.java
module edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 57
      protection public
      33 lines of code
      1 parameters
      7 conditional paths
      uses variable previousGotoTarget defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable gotoCount defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable previousLoadOf defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses function isRegisterLoad() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable previousStores defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Code) in line 47
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable previousLoadOf defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses variable previousGotoTarget defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses variable gotoCount defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses variable previousStores defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
   function FindLocalSelfAssignment2(BugReporter) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
   variable bugReporter in line 35
   variable gotoCount in line 38
   variable previousGotoTarget in line 37
   variable previousLoadOf in line 36
   variable previousStores in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindMaskedFields.java
module edu::umd::cs::findbugs::detect::FindMaskedFields
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function report() in line 200
      protection public
      31 lines of code
      0 parameters
      12 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable rememberedBugs defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function getReadFields() defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function getWrittenFields() defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function isWrittenOutsideOfInitialization(XField) defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visit(JavaClass) in line 80
      protection public
      68 lines of code
      1 parameters
      17 conditional paths
      uses variable classFields defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getXFields() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable rememberedBugs defined in edu::umd::cs::findbugs::detect::FindMaskedFields
   function visit(Method) in line 150
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable numParms defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses function getNumberMethodArguments() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable staticMethod defined in edu::umd::cs::findbugs::detect::FindMaskedFields
   function visit(LocalVariableTable) in line 167
      protection public
      31 lines of code
      1 parameters
      8 conditional paths
      uses variable ENABLE_LOCALS defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses variable staticMethod defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses variable numParms defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses variable classFields defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visitClassContext(ClassContext) in line 73
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function FindMaskedFields(BugReporter) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindMaskedFields
   variable bugReporter in line 50
   variable classFields in line 52
   variable ENABLE_LOCALS in line 163
   variable numParms in line 51
   variable rememberedBugs in line 56
   variable staticMethod in line 53
module edu::umd::cs::findbugs::detect::FindMaskedFields::RememberedBug
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindMismatchedWaitOrNotify.java
module edu::umd::cs::findbugs::detect::FindMismatchedWaitOrNotify
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function analyzeMethod(ClassContext,Method) in line 98
      67 lines of code
      2 parameters
      12 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getLockedValueNumbers(ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function veryFuzzyMatch(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindMismatchedWaitOrNotify
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function clone() in line 64
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function report() in line 166
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 72
      protection public
      25 lines of code
      1 parameters
      6 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindMismatchedWaitOrNotify
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindMismatchedWaitOrNotify
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindMismatchedWaitOrNotify(BugReporter) in line 58
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindMismatchedWaitOrNotify
   variable bugAccumulator in line 56
   variable bugReporter in line 55
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindNakedNotify.java
module edu::umd::cs::findbugs::detect::FindNakedNotify
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 68
      protection public
      38 lines of code
      1 parameters
      10 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable notifyPC defined in edu::umd::cs::findbugs::detect::FindNakedNotify
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNakedNotify
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 52
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 58
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNakedNotify
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable notifyPC defined in edu::umd::cs::findbugs::detect::FindNakedNotify
   function FindNakedNotify(BugReporter) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNakedNotify
   variable bugReporter in line 41
   variable notifyPC in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindNonSerializableStoreIntoSession.java
module edu::umd::cs::findbugs::detect::FindNonSerializableStoreIntoSession
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 63
      84 lines of code
      2 parameters
      15 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNonSerializableStoreIntoSession
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindNonSerializableStoreIntoSession
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function report() in line 148
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 44
      protection public
      18 lines of code
      1 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindNonSerializableStoreIntoSession
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNonSerializableStoreIntoSession
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindNonSerializableStoreIntoSession
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function FindNonSerializableStoreIntoSession(BugReporter) in line 39
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNonSerializableStoreIntoSession
   variable bugAccumulator in line 35
   variable bugReporter in line 34
   variable DEBUG in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindNonSerializableValuePassedToWriteObject.java
module edu::umd::cs::findbugs::detect::FindNonSerializableValuePassedToWriteObject
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 59
      93 lines of code
      2 parameters
      17 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNonSerializableValuePassedToWriteObject
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNonSerializableValuePassedToWriteObject
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function report() in line 153
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 41
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindNonSerializableValuePassedToWriteObject
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNonSerializableValuePassedToWriteObject
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindNonSerializableValuePassedToWriteObject(BugReporter) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNonSerializableValuePassedToWriteObject
   variable bugReporter in line 33
   variable DEBUG in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindNonShortCircuit.java
module edu::umd::cs::findbugs::detect::FindNonShortCircuit
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function clearAll() in line 61
      10 lines of code
      0 parameters
      1 conditional paths
   function reportBug() in line 171
      15 lines of code
      0 parameters
      4 conditional paths
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function sawBooleanValue() in line 245
      16 lines of code
      0 parameters
      1 conditional paths
   function sawOpcode(int) in line 79
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function scanForBooleanValue(int) defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
      uses function scanForDanger(int) defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
      uses function scanForShortCircuit(int) defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
   function scanForBooleanValue(int) in line 188
      56 lines of code
      1 parameters
      24 conditional paths
      uses function clearAll() defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
      uses function sawBooleanValue() defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function scanForDanger(int) in line 90
      41 lines of code
      1 parameters
      20 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function scanForShortCircuit(int) in line 132
      38 lines of code
      1 parameters
      13 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function clearAll() defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
      uses function reportBug() defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
   function visit(Method) in line 56
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function clearAll() defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
   function visit(Code) in line 74
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function FindNonShortCircuit(BugReporter) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable bugAccumulator in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindNullDeref.java
module edu::umd::cs::findbugs::detect::FindNullDeref
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::UseAnnotationDatabase
   inherits from edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonCollector
   function addParamAnnotations(Location,BitSet,BitSet,WarningPropertySet<?super NullArgumentWarningProperty >,BugInstance) in line 742
      41 lines of code
      5 parameters
      6 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable ARG_DEFINITELY_NULL defined in edu::umd::cs::findbugs::detect::NullArgumentWarningProperty
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addParameterAnnotation(int,String) defined in edu::umd::cs::findbugs::BugInstance
   function addPropertiesForDereferenceLocations(WarningPropertySet< WarningProperty >,Collection< Location >,boolean) in line 1444
      29 lines of code
      3 parameters
      8 conditional paths
      uses function isDoomed(Location) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable DOOMED_CODE defined in edu::umd::cs::findbugs::detect::DoomedCodeWarningProperty
      uses function uniqueLocations(Collection< Location >) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function skipIfInsideCatchNull() defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable FALSE_POSITIVE defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses variable DEREFS_IN_CATCH_BLOCKS defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses variable DEREFS_ARE_CLONED defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses function addPropertiesForMethodContainingWarning(WarningPropertySet< WarningProperty >) defined in edu::umd::cs::findbugs::detect::FindNullDeref
   function addPropertiesForMethodContainingWarning(WarningPropertySet< WarningProperty >) in line 1509
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isPrivate() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable IN_UNCALLABLE_METHOD defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
   function analyzeMethod(ClassContext,Method) in line 219
      64 lines of code
      2 parameters
      9 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable DEBUG_NULLARG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable checkedDatabases defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function checkDatabases() defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getAnnotation(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::XMethod
      uses function getValue(String) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses function getMethodNullnessAnnotation() defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function findPreviouslyDeadBlocks() defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable invDataflow defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute() defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function checkCallSitesAndReturnInstructions() defined in edu::umd::cs::findbugs::detect::FindNullDeref
   function checkCallSitesAndReturnInstructions() in line 352
      34 lines of code
      0 parameters
      8 conditional paths
      uses function getProfiler() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function examineCallSite(Location,ConstantPoolGen,TypeDataflow) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable methodAnnotation defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function examineReturnInstruction(Location) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function examinePutfieldInstruction(Location,PUTFIELD,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
   function checkDatabases() in line 313
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable unconditionalDerefParamDatabase defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getUnconditionalDerefParamDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function checkNonNullParam(Location,ConstantPoolGen,TypeDataflow,InvokeInstruction,BitSet,BitSet) in line 796
      56 lines of code
      6 parameters
      7 conditional paths
      uses function skipIfInsideCatchNull() defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function parameterMustBeNonNull(XMethod,int) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses variable DEBUG_NULLARG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function addParameterAnnotation(int,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function checkUnconditionallyDereferencedParam(Location,ConstantPoolGen,TypeDataflow,InvokeInstruction,BitSet,BitSet) in line 587
      145 lines of code
      6 parameters
      23 conditional paths
      uses function skipIfInsideCatchNull() defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable DEBUG_NULLARG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable unconditionalDerefParamDatabase defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getProperty(KeyType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable ALL_DANGEROUS_TARGETS defined in edu::umd::cs::findbugs::detect::NullArgumentWarningProperty
      uses variable MONOMORPHIC_CALL_SITE defined in edu::umd::cs::findbugs::detect::NullArgumentWarningProperty
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable ACTUAL_PARAMETER_GUARANTEED_NULL defined in edu::umd::cs::findbugs::detect::NullArgumentWarningProperty
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function safeCallToPrimateParseMethod(XMethod,Location) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isPrivate() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable IN_UNCALLABLE_METHOD defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses function addParamAnnotations(Location,BitSet,BitSet,WarningPropertySet<?super NullArgumentWarningProperty >,BugInstance) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_DANGEROUS_TARGET_ACTUAL_GUARANTEED_NULL defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable METHOD_DANGEROUS_TARGET defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable METHOD_SAFE_TARGET defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function decorateWarning(Location,WarningPropertySet< WarningProperty >,BugInstance) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function decorateWarning(Location,WarningPropertySet< WarningProperty >,BugInstance) in line 733
      8 lines of code
      3 parameters
      2 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
   function examineCallSite(Location,ConstantPoolGen,TypeDataflow) in line 387
      72 lines of code
      3 parameters
      9 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getArgumentSet(InvokeInstruction,ConstantPoolGen,DataflowValueChooser< ValueType >) defined in edu::umd::cs::findbugs::ba::Frame
      uses function mightBeNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isReturnValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable DEBUG_NULLARG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getNumArguments(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable unconditionalDerefParamDatabase defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function checkUnconditionallyDereferencedParam(Location,ConstantPoolGen,TypeDataflow,InvokeInstruction,BitSet,BitSet) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function checkNonNullParam(Location,ConstantPoolGen,TypeDataflow,InvokeInstruction,BitSet,BitSet) defined in edu::umd::cs::findbugs::detect::FindNullDeref
   function examinePutfieldInstruction(Location,PUTFIELD,ConstantPoolGen) in line 460
      41 lines of code
      3 parameters
      5 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function examineReturnInstruction(Location) in line 502
      37 lines of code
      1 parameters
      8 conditional paths
      uses variable DEBUG_NULLRETURN defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable invDataflow defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function findPreviouslyDeadBlocks() in line 292
      16 lines of code
      0 parameters
      3 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function foundGuaranteedNullDeref(@NonNull Set< Location >,@NonNull Set< Location >,SortedSet< Location >,ValueNumberDataflow,ValueNumber,@CheckForNull BugAnnotation,NullValueUnconditionalDeref,boolean) in line 1245
      protection public
      193 lines of code
      8 parameters
      43 conditional paths
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isMethodReturnValue() defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
      uses function isAlwaysOnExceptionPath() defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addPropertiesForDereferenceLocations(WarningPropertySet< WarningProperty >,Collection< Location >,boolean) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getUsagesRequiringNonNullValues(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function get(Location,ValueNumber,ValueNumberDataflow) defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getReturnFromNonNullMethod() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
      uses function getNonNullField() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
      uses function getNonNullParameter() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses function getParameterNumber() defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses function isReadlineValue() defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
      uses function safeCallToPrimateParseMethod(XMethod,Location) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function hasManyPreceedingNullTests(int) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function addParameterAnnotation(int,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable LONG_RANGE_NULL_SOURCE defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function foundNullDeref(Location,ValueNumber,IsNullValue,ValueNumberFrame) in line 865
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   function foundNullDeref(Location,ValueNumber,IsNullValue,ValueNumberFrame,boolean) in line 870
      protection public
      80 lines of code
      5 parameters
      20 conditional paths
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable ON_EXCEPTION_PATH defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function addPropertiesForDereferenceLocations(WarningPropertySet< WarningProperty >,Collection< Location >,boolean) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable CLOSING_NULL defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses function containsProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable DEREFS_ARE_CLONED defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getLocationsContainingInstructionWithOffset(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable DEREFS_ARE_INLINED_FINALLY_BLOCKS defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses function skipIfInsideCatchNull() defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportNullDeref(WarningPropertySet< WarningProperty >,Location,String,int,@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function mightBeNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isParamValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNullDeref
   function foundRedundantNullCheck(Location,RedundantBranch) in line 993
      protection public
      193 lines of code
      2 parameters
      41 conditional paths
      uses variable firstValue defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses function isChecked() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function wouldHaveBeenAKaboom() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getLocationOfKaBoom() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable infeasibleEdge defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isGoto(Instruction) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getNumIncomingEdges(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function isThrower(BasicBlock) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable previouslyDeadBlocks defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses variable invDataflow defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalUniqueAnnotationsWithFallback(BugAnnotation,BugAnnotation...) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable CHECKED_VALUE defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses variable WOULD_HAVE_BEEN_A_KABOOM defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses variable CREATED_DEAD_CODE defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses function setDescription(String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function getMethodNullnessAnnotation() in line 331
      18 lines of code
      0 parameters
      3 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable DEBUG_NULLRETURN defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable UNKNOWN_NULLNESS defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   function hasManyPreceedingNullTests(int) in line 539
      28 lines of code
      1 parameters
      6 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function isDoomed(Location) in line 1519
      17 lines of code
      1 parameters
      9 conditional paths
      uses variable MARK_DOOMED defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getReturnPathTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function getUsagesRequiringNonNullValues(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function get(Location,ValueNumber,ValueNumberDataflow) defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getDescription() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function isGoto(Instruction) in line 1220
      4 lines of code
      1 parameters
      5 conditional paths
   function isThrower(BasicBlock) in line 975
      protection public
      17 lines of code
      1 parameters
      5 conditional paths
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function report() in line 853
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function reportNullDeref(WarningPropertySet< WarningProperty >,Location,String,int,@CheckForNull BugAnnotation) in line 951
      23 lines of code
      5 parameters
      3 conditional paths
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addPropertiesForDereferenceLocations(WarningPropertySet< WarningProperty >,Collection< Location >,boolean) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function safeCallToPrimateParseMethod(XMethod,Location) in line 567
      20 lines of code
      2 parameters
      5 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
   function skipIfInsideCatchNull() in line 856
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
   function uniqueLocations(Collection< Location >) in line 1478
      26 lines of code
      1 parameters
      7 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
   function visitClassContext(ClassContext) in line 183
      protection public
      35 lines of code
      1 parameters
      7 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable CLASS defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getMethodsInCallOrder() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable METHOD defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable DEBUG_NULLARG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function FindNullDeref(BugReporter) in line 178
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
   variable bugAccumulator in line 158
   variable bugReporter in line 157
   variable checkedDatabases in line 163
   variable CLASS in line 153
   variable classContext in line 166
   variable DEBUG in line 136
      protection public
   variable DEBUG_NULLARG in line 139
   variable DEBUG_NULLRETURN in line 142
   variable invDataflow in line 170
   variable MARK_DOOMED in line 145
   variable METHOD in line 150
   variable method in line 168
   variable methodAnnotation in line 176
   variable previouslyDeadBlocks in line 174
   variable REPORT_SAFE_METHOD_TARGETS in line 148
   variable unconditionalDerefParamDatabase in line 161
   variable vnaDataflow in line 172
module edu::umd::cs::findbugs::detect::FindNullDeref::CheckCallSitesAndReturnInstructions
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindNullDerefsInvolvingNonShortCircuitEvaluation.java
module edu::umd::cs::findbugs::detect::FindNullDerefsInvolvingNonShortCircuitEvaluation
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function checkForNullForcingABranch(int,int,OpcodeStack.Item) in line 89
      82 lines of code
      3 parameters
      17 conditional paths
      uses function nullGuaranteesBranch(int,OpcodeStack.Item) defined in edu::umd::cs::findbugs::detect::FindNullDerefsInvolvingNonShortCircuitEvaluation
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNullDerefsInvolvingNonShortCircuitEvaluation
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getUnconditionalValueDerefDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isUnconditionallyDereferenced(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getUnconditionalDerefLocationSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function emitWarning() in line 197
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function nullGuaranteesBranch(int,OpcodeStack.Item) in line 192
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable ZERO_MEANS_NULL defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NONZERO_MEANS_NULL defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function sawOpcode(int) in line 75
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function getCodeByte(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function checkForNullForcingABranch(int,int,OpcodeStack.Item) defined in edu::umd::cs::findbugs::detect::FindNullDerefsInvolvingNonShortCircuitEvaluation
   function visit(Code) in line 61
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function FindNullDerefsInvolvingNonShortCircuitEvaluation(BugReporter) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable DEBUG in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindOpenStream.java
module edu::umd::cs::findbugs::detect::FindOpenStream
   inherits from edu::umd::cs::findbugs::ResourceTrackingDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function analyzeMethod(ClassContext,Method,StreamResourceTracker,ResourceCollection< Stream >) in line 347
      protection public
      117 lines of code
      4 parameters
      17 conditional paths
      uses variable potentialOpenStreamList defined in edu::umd::cs::findbugs::detect::FindOpenStream
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function setIsOpenOnCreation(boolean) defined in edu::umd::cs::findbugs::detect::Stream
      uses function setOpenLocation(Location) defined in edu::umd::cs::findbugs::detect::Stream
      uses function setInstanceParam(int) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable bugReporter defined in edu::umd::cs::findbugs::ResourceTrackingDetector
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable stream defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses variable isClosed defined in edu::umd::cs::findbugs::detect::Stream
      uses function setClosed() defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
      uses variable isUninteresting defined in edu::umd::cs::findbugs::detect::Stream
      uses function getOpenLocation() defined in edu::umd::cs::findbugs::detect::Stream
      uses function getStreamBase() defined in edu::umd::cs::findbugs::detect::Stream
      uses function isMainMethod(Method) defined in edu::umd::cs::findbugs::detect::FindOpenStream
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::ResourceTrackingDetector
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addTypeOfNamedClass(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable CLOSEIT_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function getLocation() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function clone() in line 261
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getResourceTracker(ClassContext,Method) in line 336
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::ResourceTrackingDetector
   function inspectResult(ClassContext,MethodGen,CFG,Dataflow< ResourceValueFrame, ResourceValueAnalysis< Stream >>,Stream) in line 466
      protection public
      27 lines of code
      5 parameters
      4 conditional paths
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getStatus() defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable OPEN defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable OPEN_ON_EXCEPTION_PATH defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable bugType defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses variable stream defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses function getBugType() defined in edu::umd::cs::findbugs::detect::Stream
      uses variable priority defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable potentialOpenStreamList defined in edu::umd::cs::findbugs::detect::FindOpenStream
      uses function PotentialOpenStream(String,int,Stream) defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses variable CLOSED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function setClosed() defined in edu::umd::cs::findbugs::detect::Stream
   function isMainMethod(Method) in line 340
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function prescreen(ClassContext,Method,boolean) in line 325
      protection public
      9 lines of code
      3 parameters
      2 conditional paths
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function visitClassContext(ClassContext) in line 280
      protection public
      42 lines of code
      1 parameters
      9 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getConstantString() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable PRESCREEN_CLASS_LIST defined in edu::umd::cs::findbugs::detect::FindOpenStream
   function FindOpenStream(BugReporter) in line 255
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::ResourceTrackingDetector
   variable potentialOpenStreamList in line 249
   variable PRESCREEN_CLASS_LIST in line 273
module edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
   function PotentialOpenStream(String,int,Stream) in line 238
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable bugType defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses variable priority defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses variable stream defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
   variable bugType in line 234
      protection public
   variable priority in line 235
      protection public
   variable stream in line 236
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindPuzzlers.java
module edu::umd::cs::findbugs::detect::FindPuzzlers
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function adjustMultiplier(Object,int) in line 115
      5 lines of code
      2 parameters
      2 conditional paths
   function adjustPriority(int,int) in line 109
      6 lines of code
      2 parameters
      4 conditional paths
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function resetIMulCastLong() in line 105
      4 lines of code
      0 parameters
      1 conditional paths
   function sawOpcode(int) in line 121
      protection public
      430 lines of code
      1 parameters
      90 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isReturn(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPrevOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function resetIMulCastLong() defined in edu::umd::cs::findbugs::detect::FindPuzzlers
      uses function adjustMultiplier(Object,int) defined in edu::umd::cs::findbugs::detect::FindPuzzlers
      uses function adjustPriority(int,int) defined in edu::umd::cs::findbugs::detect::FindPuzzlers
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSpecialKind() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable AVERAGE_COMPUTED_USING_DIVISION defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getPC() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isNonNegative() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable INT_SHIFT defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable INT_VALUE defined in edu::umd::cs::findbugs::IntAnnotation
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable MATH_ABS defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getFieldDescriptor() defined in edu::umd::cs::findbugs::ba::XField
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function setDescription(String) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable LOADED_FROM_ROLE defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function isNamed() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable METHOD_RETURN_VALUE_OF defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedClassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getConstantRefOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 70
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function resetIMulCastLong() defined in edu::umd::cs::findbugs::detect::FindPuzzlers
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function visit(JavaClass) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function FindPuzzlers(BugReporter) in line 62
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindRefComparison.java
module edu::umd::cs::findbugs::detect::FindRefComparison
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function analyzeMethod(ClassContext,final Method) in line 668
      99 lines of code
      2 parameters
      13 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable comparedForEqualityInThisMethod defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable cfg defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses function getDepthFirstSearch(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getExceptionSetFactory(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable typeMerger defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function SpecialTypeAnalysis(Method,MethodGen,CFG,DepthFirstSearch,TypeMerger,TypeFrameModelingVisitor,RepositoryLookupFailureCallback,ExceptionSetFactory) defined in edu::umd::cs::findbugs::detect::FindRefComparison::SpecialTypeAnalysis
      uses function getProfiler() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function inspectLocation(JavaClass,ConstantPoolGen,Method,MethodGen,LinkedList< WarningWithProperties >,LinkedList< WarningWithProperties >,RefComparisonTypeFrameModelingVisitor,TypeDataflow,Location) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function decorateWarnings(LinkedList< WarningWithProperties >,WarningDecorator) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable SAW_CALL_TO_EQUALS defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable COMPARE_IN_TEST_CASE defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable PRIVATE_METHOD defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses function reportBest(ClassContext,Method,LinkedList< WarningWithProperties >,boolean) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function getAnnotations() defined in edu::umd::cs::findbugs::BugInstance
   function checkEqualsComparison(Location,JavaClass,Method,MethodGen,ConstantPoolGen,TypeDataflow) in line 1010
      157 lines of code
      6 parameters
      27 conditional paths
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable T_TOP defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses variable T_BOTTOM defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses variable T_NULL defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getPriority() defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable comparedForEqualityInThisMethod defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable ARRAY_AND_NON_ARRAY defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable ARRAY_AND_OBJECT defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function addFoundAndExpectedType(Type,Type) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSomeSourceForTopTwoStackValues(ClassContext,Method,Location) defined in edu::umd::cs::findbugs::BugInstance
      uses variable INCOMPATIBLE_CLASSES defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function mightBeEqualTo(ClassDescriptor,ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ClassSummary
      uses function addEqualsMethodUsed(ClassDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable UNRELATED_CLASS_AND_INTERFACE defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable UNRELATED_FINAL_CLASS_AND_INTERFACE defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable UNRELATED_INTERFACES defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable UNCHECKED defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
   function checkRefComparison(Location,JavaClass,Method,MethodGen,RefComparisonTypeFrameModelingVisitor,TypeDataflow,List< WarningWithProperties >,List< WarningWithProperties >) in line 863
      49 lines of code
      8 parameters
      8 conditional paths
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable UNCHECKED defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getPriority() defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function addFoundAndExpectedType(Type,Type) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSomeSourceForTopTwoStackValues(ClassContext,Method,Location) defined in edu::umd::cs::findbugs::BugInstance
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function handleStringComparison(JavaClass,MethodGen,RefComparisonTypeFrameModelingVisitor,List< WarningWithProperties >,Location,Type,Type) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable suspiciousSet defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function handleSuspiciousRefComparison(JavaClass,Method,MethodGen,List< WarningWithProperties >,Location,String,ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function decorateWarnings(LinkedList< WarningWithProperties >,WarningDecorator) in line 810
      8 lines of code
      2 parameters
      2 conditional paths
      uses function decorate(WarningWithProperties) defined in edu::umd::cs::findbugs::detect::FindRefComparison::WarningDecorator
   function handleStringComparison(JavaClass,MethodGen,RefComparisonTypeFrameModelingVisitor,List< WarningWithProperties >,Location,Type,Type) in line 913
      60 lines of code
      7 parameters
      9 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable T_STATIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable COMPARE_STATIC_STRINGS defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable T_DYNAMIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable DYNAMIC_AND_UNKNOWN defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable T_PARAMETER_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable STRING_PARAMETER_IN_PUBLIC_METHOD defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable STRING_PARAMETER defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable STATIC_AND_UNKNOWN defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable SAW_INTERN defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable BASE_ES_PRIORITY defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addType(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function handleSuspiciousRefComparison(JavaClass,Method,MethodGen,List< WarningWithProperties >,Location,String,ReferenceType,ReferenceType) in line 974
      34 lines of code
      8 parameters
      8 conditional paths
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addType(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable LOADED_FROM_ROLE defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function addSomeSourceForTopTwoStackValues(ClassContext,Method,Location) defined in edu::umd::cs::findbugs::BugInstance
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function inspectLocation(JavaClass,ConstantPoolGen,Method,MethodGen,LinkedList< WarningWithProperties >,LinkedList< WarningWithProperties >,RefComparisonTypeFrameModelingVisitor,TypeDataflow,Location) in line 777
      32 lines of code
      9 parameters
      4 conditional paths
      uses function checkRefComparison(Location,JavaClass,Method,MethodGen,RefComparisonTypeFrameModelingVisitor,TypeDataflow,List< WarningWithProperties >,List< WarningWithProperties >) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable invokeInstanceSet defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function isEqualsMethod(String,String) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function checkEqualsComparison(Location,JavaClass,Method,MethodGen,ConstantPoolGen,TypeDataflow) defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function isEqualsMethod(String,String) in line 858
      3 lines of code
      2 parameters
      1 conditional paths
   function report() in line 1171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function reportBest(ClassContext,Method,LinkedList< WarningWithProperties >,boolean) in line 819
      38 lines of code
      4 parameters
      8 conditional paths
      uses variable REPORT_ALL_REF_COMPARISONS defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function visitClassContext(ClassContext) in line 611
      protection public
      34 lines of code
      1 parameters
      6 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable prescreenSet defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function analyzeMethod(ClassContext,final Method) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function FindRefComparison(BugReporter) in line 596
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable DEFAULT_SUSPICIOUS_SET defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable suspiciousSet defined in edu::umd::cs::findbugs::detect::FindRefComparison
   variable BASE_ES_PRIORITY in line 122
   variable bugAccumulator in line 588
   variable bugReporter in line 587
   variable classContext in line 589
   variable comparedForEqualityInThisMethod in line 1009
   variable DEBUG in line 120
   variable DEFAULT_SUSPICIOUS_SET in line 127
   variable dynamicStringTypeInstance in line 274
   variable invokeInstanceSet in line 143
   variable parameterStringTypeInstance in line 343
   variable prescreenSet in line 154
   variable REPORT_ALL_REF_COMPARISONS in line 121
   variable staticStringTypeInstance in line 310
   variable STRING_SIGNATURE in line 171
   variable suspiciousSet in line 590
   variable T_DYNAMIC_STRING in line 166
   variable T_PARAMETER_STRING in line 168
   variable T_STATIC_FINAL_PUBLIC_CONSTANT in line 169
   variable T_STATIC_STRING in line 167
module edu::umd::cs::findbugs::detect::FindRefComparison::SpecialTypeAnalysis
   inherits from edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function initEntryFact(TypeFrame) in line 193
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable parameterStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function SpecialTypeAnalysis(Method,MethodGen,CFG,DepthFirstSearch,TypeMerger,TypeFrameModelingVisitor,RepositoryLookupFailureCallback,ExceptionSetFactory) in line 187
      5 lines of code
      8 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses variable typeMerger defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
module edu::umd::cs::findbugs::detect::FindRefComparison::DynamicStringType
   inherits from org::apache::bcel::generic::ObjectType
   function equals(Object) in line 227
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getType() in line 217
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_DYNAMIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function hashCode() in line 222
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 232
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function DynamicStringType() in line 212
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable serialVersionUID in line 210
module edu::umd::cs::findbugs::detect::FindRefComparison::FinalConstant
   inherits from org::apache::bcel::generic::ObjectType
   function equals(Object) in line 252
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::detect::FindRefComparison::FinalConstant
   function getXField() in line 263
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 246
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 268
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FinalConstant(@DottedClassName String,@Nonnull XField) in line 240
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 238
module edu::umd::cs::findbugs::detect::FindRefComparison::StaticStringType
   inherits from org::apache::bcel::generic::ObjectType
   function equals(Object) in line 300
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getType() in line 290
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_STATIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function hashCode() in line 295
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 305
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function StaticStringType() in line 285
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable serialVersionUID in line 283
module edu::umd::cs::findbugs::detect::FindRefComparison::ParameterStringType
   inherits from org::apache::bcel::generic::ObjectType
   function equals(Object) in line 333
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getType() in line 323
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_PARAMETER_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function hashCode() in line 328
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 338
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ParameterStringType() in line 318
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable serialVersionUID in line 316
module edu::umd::cs::findbugs::detect::FindRefComparison::RefComparisonTypeFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function handleInstanceMethod(InvokeInstruction) in line 407
      20 lines of code
      1 parameters
      3 conditional paths
      uses variable staticStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable dynamicStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function handleLoad(FieldInstruction) in line 508
      29 lines of code
      1 parameters
      5 conditional paths
      uses variable STRING_SIGNATURE defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable staticStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function isString(Type) in line 440
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable STRING_SIGNATURE defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function returnsString(InvokeInstruction) in line 402
      4 lines of code
      1 parameters
      1 conditional paths
   function sawStringIntern() in line 357
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitGETFIELD(GETFIELD) in line 477
      protection public
      30 lines of code
      1 parameters
      6 conditional paths
      uses variable STRING_SIGNATURE defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSummary(XField) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function isNull() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable DEFAULT_SUSPICIOUS_SET defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function visitGETSTATIC(GETSTATIC) in line 445
      protection public
      30 lines of code
      1 parameters
      6 conditional paths
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSummary(XField) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function isNull() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable DEFAULT_SUSPICIOUS_SET defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable STRING_SIGNATURE defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function visitINVOKEINTERFACE(INVOKEINTERFACE) in line 388
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function visitINVOKESPECIAL(INVOKESPECIAL) in line 381
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function visitINVOKESTATIC(INVOKESTATIC) in line 365
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable dynamicStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function visitINVOKEVIRTUAL(INVOKEVIRTUAL) in line 396
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function visitLDC(LDC) in line 429
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable staticStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function visitLDC2_W(LDC2_W) in line 435
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable staticStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function RefComparisonTypeFrameModelingVisitor(ConstantPoolGen,RepositoryLookupFailureCallback) in line 349
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   variable lookupFailureCallback in line 346
   variable sawStringIntern in line 347
module edu::umd::cs::findbugs::detect::FindRefComparison::RefComparisonTypeMerger
   inherits from edu::umd::cs::findbugs::ba::type::StandardTypeMerger
   function isExtendedStringType(byte) in line 578
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable T_DYNAMIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable T_STATIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable T_PARAMETER_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function isReferenceType(byte) in line 549
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable T_STATIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable T_DYNAMIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function mergeReferenceTypes(ReferenceType,ReferenceType) in line 554
      23 lines of code
      2 parameters
      5 conditional paths
   function RefComparisonTypeMerger(RepositoryLookupFailureCallback,ExceptionSetFactory) in line 543
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
module edu::umd::cs::findbugs::detect::FindRefComparison::WarningWithProperties
module edu::umd::cs::findbugs::detect::FindRefComparison::WarningDecorator
   function decorate(WarningWithProperties) in line 664
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindReturnRef.java
module edu::umd::cs::findbugs::detect::FindReturnRef
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function isPotentialCapture(OpcodeStack.Item) in line 164
      10 lines of code
      1 parameters
      4 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function sawOpcode(int) in line 89
      protection public
      74 lines of code
      1 parameters
      10 conditional paths
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isPotentialCapture(OpcodeStack.Item) defined in edu::umd::cs::findbugs::detect::FindReturnRef
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindReturnRef
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(JavaClass) in line 56
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 66
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function getNumberMethodArguments() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Code) in line 84
      protection public
      3 lines of code
      1 parameters
      2 conditional paths
   function visitAfter(JavaClass) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindReturnRef
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function FindReturnRef(BugReporter) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable bugAccumulator in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindRunInvocations.java
module edu::umd::cs::findbugs::detect::FindRunInvocations
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function isThread(String) in line 44
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRunInvocations
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function sawOpcode(int) in line 61
      protection public
      15 lines of code
      1 parameters
      6 conditional paths
      uses variable alreadySawStart defined in edu::umd::cs::findbugs::detect::FindRunInvocations
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isThread(String) defined in edu::umd::cs::findbugs::detect::FindRunInvocations
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function amVisitingMainMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindRunInvocations
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 54
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable alreadySawStart defined in edu::umd::cs::findbugs::detect::FindRunInvocations
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindRunInvocations
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function FindRunInvocations(BugReporter) in line 38
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRunInvocations
   variable alreadySawStart in line 36
   variable bugAccumulator in line 35
   variable bugReporter in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindSelfComparison.java
module edu::umd::cs::findbugs::detect::FindSelfComparison
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function checkForSelfOperation(int,String) in line 216
      41 lines of code
      2 parameters
      7 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function resetDoubleAssignmentState() in line 63
      6 lines of code
      0 parameters
      1 conditional paths
   function sawBranchTo(int) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function resetDoubleAssignmentState() defined in edu::umd::cs::findbugs::detect::FindSelfComparison
   function sawOpcode(int) in line 75
      protection public
      136 lines of code
      1 parameters
      50 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function hasIncomingBranches(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function resetDoubleAssignmentState() defined in edu::umd::cs::findbugs::detect::FindSelfComparison
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getXClassOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses function getXFields() defined in edu::umd::cs::findbugs::ba::XClass
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addReferencedField(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable DID_YOU_MEAN_ROLE defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function isReturn(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNextOpcode() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function checkForSelfOperation(int,String) defined in edu::umd::cs::findbugs::detect::FindSelfComparison
      uses function isRegisterLoad() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 53
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function resetDoubleAssignmentState() defined in edu::umd::cs::findbugs::detect::FindSelfComparison
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function FindSelfComparison(BugReporter) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindSelfComparison2.java
module edu::umd::cs::findbugs::detect::FindSelfComparison2
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 87
      70 lines of code
      2 parameters
      31 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function checkForSelfOperation(ClassContext,Location,ValueNumberDataflow,String,Method,MethodGen,String) defined in edu::umd::cs::findbugs::detect::FindSelfComparison2
   function checkForSelfOperation(ClassContext,Location,ValueNumberDataflow,String,Method,MethodGen,String) in line 167
      38 lines of code
      7 parameters
      12 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSelfComparison2
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function report() in line 206
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 65
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindSelfComparison2
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSelfComparison2
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindSelfComparison2(BugReporter) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSelfComparison2
   variable bugReporter in line 59
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindSleepWithLockHeld.java
module edu::umd::cs::findbugs::detect::FindSleepWithLockHeld
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 93
      27 lines of code
      2 parameters
      5 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function isSleep(INVOKESTATIC,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSleepWithLockHeld
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getNumLockedObjects() defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindSleepWithLockHeld
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function isSleep(INVOKESTATIC,ConstantPoolGen) in line 121
      10 lines of code
      2 parameters
      2 conditional paths
   function prescreen(ClassContext,Method) in line 79
      13 lines of code
      2 parameters
      4 conditional paths
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function report() in line 132
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 58
      protection public
      20 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function prescreen(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindSleepWithLockHeld
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindSleepWithLockHeld
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSleepWithLockHeld
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindSleepWithLockHeld(BugReporter) in line 53
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSleepWithLockHeld
   variable bugAccumulator in line 51
   variable bugReporter in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindSpinLoop.java
module edu::umd::cs::findbugs::detect::FindSpinLoop
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 53
      protection public
      49 lines of code
      1 parameters
      20 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindSpinLoop
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable lastFieldSeen defined in edu::umd::cs::findbugs::detect::FindSpinLoop
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSpinLoop
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 47
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindSpinLoop
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function FindSpinLoop(BugReporter) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSpinLoop
   variable bugReporter in line 37
   variable DEBUG in line 33
   variable lastFieldSeen in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindSqlInjection.java
module edu::umd::cs::findbugs::detect::FindSqlInjection
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 428
      42 lines of code
      2 parameters
      7 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getStringAppendState(CFG,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function getConstantDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function isDatabaseSink(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getNumArguments(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isConstantString() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses function getPreviousLocation(CFG,Location,boolean) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function isSafeValue(Location,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function generateBugInstance(JavaClass,MethodGen,InstructionHandle,StringAppendState) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function generateBugInstance(JavaClass,MethodGen,InstructionHandle,StringAppendState) in line 391
      34 lines of code
      4 parameters
      9 conditional paths
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getSawAppend(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function getSawOpenQuote(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function getSawCloseQuote(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getSawComma(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getSawUnsafeAppend(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function getSawSeriousTaint(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function getSawTaint(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function isExecuteDatabaseSink(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function isPreparedStatementDatabaseSink(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
   function getPreviousInstruction(InstructionHandle,boolean) in line 362
      10 lines of code
      2 parameters
      3 conditional paths
   function getPreviousLocation(CFG,Location,boolean) in line 374
      15 lines of code
      3 parameters
      5 conditional paths
      uses function getPreviousInstruction(InstructionHandle,boolean) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
      uses function getPredecessorWithEdgeType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getStringAppendState(CFG,ConstantPoolGen) in line 264
      71 lines of code
      2 parameters
      18 conditional paths
      uses function setSawInitialTaint() defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function isConstantStringLoad(Location,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function updateStringAppendState(Location,ConstantPoolGen,StringAppendState) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function isStringAppend(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function setSawAppend(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function getPreviousLocation(CFG,Location,boolean) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function isSafeValue(Location,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function setSawUnsafeAppend(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function setSawTaint(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function setSawSeriousTaint(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
   function isCloseQuote(String) in line 202
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isConstantStringLoad(Location,ConstantPoolGen) in line 182
      13 lines of code
      2 parameters
      3 conditional paths
   function isDatabaseSink(InvokeInstruction,ConstantPoolGen) in line 260
      3 lines of code
      2 parameters
      1 conditional paths
      uses function isPreparedStatementDatabaseSink(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function isExecuteDatabaseSink(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
   function isExecuteDatabaseSink(InvokeInstruction,ConstantPoolGen) in line 243
      16 lines of code
      2 parameters
      3 conditional paths
   function isOpenQuote(String) in line 197
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isPreparedStatementDatabaseSink(Instruction,ConstantPoolGen) in line 226
      16 lines of code
      2 parameters
      3 conditional paths
   function isSafeValue(Location,ConstantPoolGen) in line 336
      24 lines of code
      2 parameters
      8 conditional paths
      uses function getPreviousLocation(CFG,Location,boolean) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function isStringAppend(Instruction,ConstantPoolGen) in line 168
      13 lines of code
      2 parameters
      3 conditional paths
   function report() in line 471
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function updateStringAppendState(Location,ConstantPoolGen,StringAppendState) in line 205
      20 lines of code
      3 parameters
      5 conditional paths
      uses function isConstantStringLoad(Location,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function isCloseQuote(String) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function isOpenQuote(String) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
   function visitClassContext(ClassContext) in line 147
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getFullyQualifiedMethodName(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function FindSqlInjection(BugReporter) in line 142
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
   function getSawAppend(InstructionHandle) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSawCloseQuote(InstructionHandle) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSawComma(InstructionHandle) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSawOpenQuote(InstructionHandle) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSawSeriousTaint(InstructionHandle) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSawTaint(InstructionHandle) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSawUnsafeAppend(InstructionHandle) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSawAppend(InstructionHandle) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSawCloseQuote(InstructionHandle) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSawComma(InstructionHandle) in line 115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSawInitialTaint() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setSawOpenQuote(InstructionHandle) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSawSeriousTaint(InstructionHandle) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSawTaint(InstructionHandle) in line 130
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSawUnsafeAppend(InstructionHandle) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindTwoLockWait.java
module edu::umd::cs::findbugs::detect::FindTwoLockWait
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function analyzeMethod(ClassContext,Method) in line 98
      12 lines of code
      2 parameters
      2 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function visitLocation(ClassContext,Location,MethodGen,LockDataflow) defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
   function clone() in line 61
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function preScreen(MethodGen) in line 111
      protection public
      23 lines of code
      1 parameters
      5 conditional paths
   function report() in line 158
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 69
      protection public
      28 lines of code
      1 parameters
      8 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable possibleWaitBugs defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses variable possibleNotifyLocations defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function preScreen(MethodGen) defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitLocation(ClassContext,Location,MethodGen,LockDataflow) in line 135
      protection public
      22 lines of code
      4 parameters
      5 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses variable possibleWaitBugs defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable possibleNotifyLocations defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
   function FindTwoLockWait(BugReporter) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
   variable bugReporter in line 51
   variable javaClass in line 52
   variable possibleNotifyLocations in line 55
   variable possibleWaitBugs in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindUncalledPrivateMethods.java
module edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 69
      protection public
      22 lines of code
      1 parameters
      5 conditional paths
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable className defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable calledMethodNames defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
   function visitClassContext(ClassContext) in line 93
      protection public
      31 lines of code
      1 parameters
      4 conditional paths
      uses variable definedPrivateMethods defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
      uses variable calledMethodNames defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
      uses variable className defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitMethod(Method) in line 50
      protection public
      17 lines of code
      1 parameters
      2 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable definedPrivateMethods defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
   function FindUncalledPrivateMethods(BugReporter) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
   variable bugReporter in line 38
   variable calledMethodNames in line 41
   variable className in line 39
   variable definedPrivateMethods in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindUnconditionalWait.java
module edu::umd::cs::findbugs::detect::FindUnconditionalWait
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOffset(int) in line 54
      protection public
      3 lines of code
      1 parameters
      2 conditional paths
   function sawOpcode(int) in line 59
      protection public
      17 lines of code
      1 parameters
      5 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnconditionalWait
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function FindUnconditionalWait(BugReporter) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnconditionalWait
   variable bugReporter in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindUninitializedGet.java
module edu::umd::cs::findbugs::detect::FindUninitializedGet
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawBranchTo(int) in line 112
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getStartBytecode() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function sawOpcode(int) in line 121
      protection public
      75 lines of code
      1 parameters
      14 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isContainerField(XField) defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getReadFields() defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function callsOverriddenMethodsFromSuperConstructor(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function visit(JavaClass) in line 63
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function visit(Field) in line 71
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 89
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Code) in line 101
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUninitializedGet
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitAnnotation(String,Map< String, Object >,boolean) in line 79
      protection public
      8 lines of code
      3 parameters
      3 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function FindUninitializedGet(BugReporter) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUninitializedGet
   variable bugReporter in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindUnrelatedTypesInGenericContainer.java
module edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
   inherits from edu::umd::cs::findbugs::Detector
   function addToCollectionsMap(@DottedClassName String,String,int) in line 117
      5 lines of code
      3 parameters
      1 conditional paths
      uses function getClassDescriptorForDottedClassName(@DottedClassName String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable nameToInterfaceMap defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses variable nameToTypeArgumentIndex defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
   function analyzeMethod(ClassContext,Method) in line 201
      292 lines of code
      2 parameters
      61 conditional paths
      uses function isSynthetic(Method) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function prescreen(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function getClassName(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberDataflow
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable nameToInterfaceMap defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses variable nameToTypeArgumentIndex defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumArguments(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getArgument(InvokeInstruction,ConstantPoolGen,int,int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function hasParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getSourceSignature() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getParameterAt(int) defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function compareTypes(Type,Type,boolean) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValueNumbersThatAreUnconditionallyDereferenced() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getPriority() defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function mightBeEqualTo(ClassDescriptor,ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ClassSummary
      uses variable UNCHECKED defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addFoundAndExpectedType(Type,Type) defined in edu::umd::cs::findbugs::BugInstance
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable NOISY_BUG defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function compareTypeParameters(GenericObjectType,GenericObjectType) in line 621
      13 lines of code
      2 parameters
      5 conditional paths
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses variable ASSERTIONS_ENABLED defined in edu::umd::cs::findbugs::SystemProperties
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function compareTypes(Type,Type,boolean) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function getParameterAt(int) defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function compareTypes(Type,Type,boolean) in line 504
      116 lines of code
      3 parameters
      21 conditional paths
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function compareTypeParameters(GenericObjectType,GenericObjectType) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses variable ARRAY_AND_OBJECT defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable ARRAY_AND_NON_ARRAY defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function getObjectType() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function compareTypesOld(Type,Type) in line 636
      40 lines of code
      2 parameters
      10 conditional paths
      uses function getTypeCategory() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getExtension() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function hasParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function isSynthetic(Method) in line 190
      10 lines of code
      1 parameters
      4 conditional paths
   function prescreen(ClassContext,Method) in line 178
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function report() in line 682
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 151
      protection public
      23 lines of code
      1 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindUnrelatedTypesInGenericContainer(BugReporter) in line 123
      protection public
      22 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function addToCollectionsMap(@DottedClassName String,String,int) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
   variable bugReporter in line 98
   variable DEBUG in line 100
   variable nameToInterfaceMap in line 113
   variable nameToTypeArgumentIndex in line 115
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindUnreleasedLock.java
module edu::umd::cs::findbugs::detect::Lock
   inherits from edu::umd::cs::findbugs::ResourceCreationPoint
   function getLockValue() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Lock(Location,String,ValueNumber) in line 73
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   variable lockValue in line 71
module edu::umd::cs::findbugs::detect::FindUnreleasedLock
   inherits from edu::umd::cs::findbugs::ResourceTrackingDetector
   function getResourceTracker(ClassContext,Method) in line 372
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function inspectResult(ClassContext,MethodGen,CFG,Dataflow< ResourceValueFrame, ResourceValueAnalysis< Lock >>,Lock) in line 382
      protection public
      34 lines of code
      5 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getStatus() defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable OPEN defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable OPEN_ON_EXCEPTION_PATH defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function prescreen(ClassContext,Method,boolean) in line 358
      protection public
      12 lines of code
      3 parameters
      3 conditional paths
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function report() in line 418
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
   function visitClassContext(ClassContext) in line 334
      protection public
      21 lines of code
      1 parameters
      6 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function FindUnreleasedLock(BugReporter) in line 326
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable DEBUG in line 84
   variable numAcquires in line 85
module edu::umd::cs::findbugs::detect::FindUnreleasedLock::LockFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function instanceEscapes(InvokeInstruction,int) in line 168
      3 lines of code
      2 parameters
      23 conditional paths
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function toString() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function isInstance() defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses function getExceptionThrowerLocation(Edge) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function transferInstruction(InstructionHandle,BasicBlock) in line 107
      protection public
      59 lines of code
      2 parameters
      17 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
      uses variable OPEN defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable CLOSED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function toString() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable RETURN_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function fuzzyMatch(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses function setStatus(int) defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function LockFrameModelingVisitor(ConstantPoolGen,LockResourceTracker,Lock,ValueNumberDataflow,IsNullValueDataflow) in line 93
      protection public
      12 lines of code
      5 parameters
      1 conditional paths
   variable lock in line 89
   variable resourceTracker in line 88
   variable vnaDataflow in line 90
module edu::umd::cs::findbugs::detect::FindUnreleasedLock::LockResourceTracker
   inherits from edu::umd::cs::findbugs::ba::ResourceTracker
   function createVisitor(Lock,ConstantPoolGen) in line 253
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function ignoreExceptionEdge(Edge,Lock,ConstantPoolGen) in line 263
      protection public
      44 lines of code
      3 parameters
      1 conditional paths
   function ignoreImplicitExceptions(Lock) in line 257
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function isParamInstance(Lock,int) in line 308
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function isResourceClose(BasicBlock,InstructionHandle,ConstantPoolGen,Lock,ResourceValueFrame) in line 243
      protection public
      9 lines of code
      5 parameters
      1 conditional paths
   function isResourceCreation(BasicBlock,InstructionHandle,ConstantPoolGen) in line 190
      protection public
      28 lines of code
      3 parameters
      1 conditional paths
   function mightCloseResource(BasicBlock,InstructionHandle,ConstantPoolGen) in line 219
      protection public
      23 lines of code
      3 parameters
      1 conditional paths
   function toInvokeInstruction(Instruction) in line 314
      6 lines of code
      1 parameters
      1 conditional paths
   function LockResourceTracker(RepositoryLookupFailureCallback,CFG,ValueNumberDataflow,IsNullValueDataflow) in line 179
      protection public
      10 lines of code
      4 parameters
      1 conditional paths
   variable cfg in line 175
   variable isNullDataflow in line 177
   variable lookupFailureCallback in line 174
   variable vnaDataflow in line 176
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindUnsatisfiedObligation.java
module edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
   inherits from edu::umd::cs::findbugs::bcel::CFGDetector
   function report() in line 704
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitClass(ClassDescriptor) in line 124
      protection public
      25 lines of code
      1 parameters
      7 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function signatureInvolvesObligations(String) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
   function visitMethodCFG(MethodDescriptor,CFG) in line 150
      5 lines of code
      2 parameters
      1 conditional paths
      uses function analyzeMethod() defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation::MethodChecker
   function FindUnsatisfiedObligation(BugReporter) in line 115
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses variable database defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   variable bugReporter in line 112
   variable COMPUTE_TRANSFERS in line 96
   variable database in line 113
   variable DEBUG in line 87
   variable DEBUG_FP in line 89
   variable DEBUG_METHOD in line 88
   variable REPORT_OBLIGATION_SET in line 110
   variable REPORT_PATH in line 103
   variable REPORT_PATH_DEBUG in line 105
module edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation::PossibleObligationTransfer
   function balanced(State) in line 176
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function getCount(int) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function getId() defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function matches(Obligation) in line 182
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PossibleObligationTransfer(@Nonnull Obligation,@Nonnull Obligation) in line 163
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation::MethodChecker
   function analyzeMethod() in line 212
      protection public
      59 lines of code
      0 parameters
      7 conditional paths
      uses variable DEBUG_METHOD defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
   function annotateWarningWithSourceLineInformation(State,Obligation,BugInstance) in line 337
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable REPORT_PATH defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
   function checkStateForLeakedObligations(State,Map< Obligation, State >) in line 272
      36 lines of code
      2 parameters
      7 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getLength() defined in edu::umd::cs::findbugs::ba::Path
      uses function getBlockIdAt(int) defined in edu::umd::cs::findbugs::ba::Path
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses variable database defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getMaxObligationTypes() defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function getObligationById(int) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function getAdjustedLeakCount(State,int) in line 588
      14 lines of code
      2 parameters
      2 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getObligationById(int) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function acceptVisitor(CFG,PathVisitor) defined in edu::umd::cs::findbugs::ba::Path
      uses function getAdjustedLeakCount() defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation::MethodChecker::PostProcessingPathVisitor
   function isPossibleInstanceOfObligationType(Subtypes2,ObjectType,ObjectType) in line 603
      10 lines of code
      3 parameters
      1 conditional paths
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function reportPath(final BugInstance,final Obligation,final State) in line 614
      85 lines of code
      3 parameters
      13 conditional paths
      uses function getPath() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function stateIterator() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function getCount(int) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function getId() defined in edu::umd::cs::findbugs::ba::obl::Obligation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable ROLE_OBLIGATION_CREATED_BY_WILLCLOSE_PARAMETER defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable REPORT_PATH_DEBUG defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function equals(Object) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable ROLE_OBLIGATION_CREATED defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable ROLE_PATH_CONTINUES defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
      uses function getEdgeExceptionSet(Edge) defined in edu::umd::cs::findbugs::ba::type::TypeDataflow
      uses function acceptVisitor(CFG,PathVisitor) defined in edu::umd::cs::findbugs::ba::Path
   function reportWarning(Obligation,State) in line 309
      27 lines of code
      2 parameters
      3 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::obl::Obligation
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addInt(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function getCount(int) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function getId() defined in edu::umd::cs::findbugs::ba::obl::Obligation
      uses variable INT_OBLIGATIONS_REMAINING defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable REPORT_OBLIGATION_SET defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function toString() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable REMAINING_OBLIGATIONS_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
module edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation::MethodChecker::PostProcessingPathVisitor
   inherits from edu::umd::cs::findbugs::ba::PathVisitor
   function applyPossibleObligationTransfers() in line 420
      43 lines of code
      0 parameters
      8 conditional paths
      uses variable DEBUG_FP defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function matches(Obligation) defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation::PossibleObligationTransfer
      uses function balanced(State) defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation::PossibleObligationTransfer
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
   function checkForPossibleObligationTransfer(InvokeInstruction,InstructionHandle) in line 464
      79 lines of code
      2 parameters
      15 conditional paths
      uses variable DEBUG_FP defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses variable database defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getObligationByType(ObjectType) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function getParameterObligationTypes(XMethod) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function getCount(int) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function getId() defined in edu::umd::cs::findbugs::ba::obl::Obligation
      uses function PossibleObligationTransfer(@Nonnull Obligation,@Nonnull Obligation) defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation::PossibleObligationTransfer
   function couldNotAnalyze() in line 370
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAdjustedLeakCount() in line 366
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTransferState(InstructionHandle) in line 550
      21 lines of code
      1 parameters
      4 conditional paths
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getPrefixStates(Path) defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function getPath() defined in edu::umd::cs::findbugs::ba::obl::State
      uses variable DEBUG_FP defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
   function visitBasicBlock(BasicBlock) in line 374
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable COMPUTE_TRANSFERS defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
   function visitEdge(Edge) in line 544
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG_FP defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
   function visitInstructionHandle(InstructionHandle) in line 386
      protection public
      33 lines of code
      1 parameters
      6 conditional paths
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getType() defined in edu::umd::cs::findbugs::ba::obl::Obligation
      uses variable COMPUTE_TRANSFERS defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function PostProcessingPathVisitor(Obligation,State) in line 357
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function getCount(int) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function getId() defined in edu::umd::cs::findbugs::ba::obl::Obligation
      uses variable COMPUTE_TRANSFERS defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindUnsyncGet.java
module edu::umd::cs::findbugs::detect::FindUnsyncGet
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function report() in line 49
      protection public
      19 lines of code
      0 parameters
      2 conditional paths
      uses variable getMethods defined in edu::umd::cs::findbugs::detect::FindUnsyncGet
      uses variable setMethods defined in edu::umd::cs::findbugs::detect::FindUnsyncGet
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnsyncGet
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(JavaClass) in line 70
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function report() defined in edu::umd::cs::findbugs::detect::FindUnsyncGet
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Method) in line 76
      protection public
      31 lines of code
      1 parameters
      4 conditional paths
      uses variable getMethods defined in edu::umd::cs::findbugs::detect::FindUnsyncGet
      uses variable setMethods defined in edu::umd::cs::findbugs::detect::FindUnsyncGet
   function FindUnsyncGet(BugReporter) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnsyncGet
   variable bugReporter in line 37
   variable getMethods in line 41
   variable setMethods in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FindUselessControlFlow.java
module edu::umd::cs::findbugs::detect::FindUselessControlFlow
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function getNextSourceLine(LineNumberTable,int) in line 106
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
   function sawOpcode(int) in line 86
      protection public
      19 lines of code
      1 parameters
      6 conditional paths
      uses variable ifInstructionSet defined in edu::umd::cs::findbugs::detect::FindUselessControlFlow
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchFallThrough() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNextSourceLine(LineNumberTable,int) defined in edu::umd::cs::findbugs::detect::FindUselessControlFlow
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindUselessControlFlow
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function visit(Code) in line 81
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindUselessControlFlow
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function FindUselessControlFlow(BugReporter) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable bugAccumulator in line 73
   variable ifInstructionSet in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/FormatStringChecker.java
module edu::umd::cs::findbugs::detect::FormatStringChecker
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 76
      protection public
      145 lines of code
      1 parameters
      17 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getXMethodOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isVarArgs() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable FORMAT_SPECIFIER_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable FORMAT_STRING_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
      uses function addValueSource(OpcodeStack.Item,DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addInt(int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable INT_EXPECTED_ARGUMENTS defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable INT_ACTUAL_ARGUMENTS defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 64
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function FormatStringChecker(BugReporter) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::detect::FormatStringChecker::FormatState
   variable EXPECTING_ASSIGNMENT in line 53
      protection public
   variable NONE in line 52
      protection public
   variable READY_FOR_FORMAT in line 52
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/HugeSharedStringConstants.java
module edu::umd::cs::findbugs::detect::HugeSharedStringConstants
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function report() in line 94
      protection public
      25 lines of code
      0 parameters
      7 conditional paths
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable SIZE_OF_HUGE_CONSTANT defined in edu::umd::cs::findbugs::detect::HugeSharedStringConstants
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addInt(int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable INT_OCCURRENCES defined in edu::umd::cs::findbugs::IntAnnotation
   function visit(ConstantString) in line 63
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable SIZE_OF_HUGE_CONSTANT defined in edu::umd::cs::findbugs::detect::HugeSharedStringConstants
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(ConstantValue) in line 77
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable SIZE_OF_HUGE_CONSTANT defined in edu::umd::cs::findbugs::detect::HugeSharedStringConstants
   function HugeSharedStringConstants(BugReporter) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable SIZE_OF_HUGE_CONSTANT in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/IDivResultCastToDouble.java
module edu::umd::cs::findbugs::detect::IDivResultCastToDouble
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 39
      protection public
      39 lines of code
      1 parameters
      6 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::IDivResultCastToDouble
      uses variable prevOpCode defined in edu::umd::cs::findbugs::detect::IDivResultCastToDouble
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::IDivResultCastToDouble
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 28
      protection public
      3 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::IDivResultCastToDouble
   function visit(Code) in line 33
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::IDivResultCastToDouble
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function IDivResultCastToDouble(BugReporter) in line 21
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::IDivResultCastToDouble
   variable bugAccumulator in line 18
   variable bugReporter in line 17
   variable DEBUG in line 15
   variable prevOpCode in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/IncompatMask.java
module edu::umd::cs::findbugs::detect::IncompatMask
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function checkState(int) in line 57
      6 lines of code
      1 parameters
      2 conditional paths
   function noteVal(long) in line 64
      9 lines of code
      1 parameters
      3 conditional paths
   function sawInt(int) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function noteVal(long) defined in edu::umd::cs::findbugs::detect::IncompatMask
   function sawLong(long) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function noteVal(long) defined in edu::umd::cs::findbugs::detect::IncompatMask
   function sawOpcode(int) in line 85
      protection public
      135 lines of code
      1 parameters
      38 conditional paths
      uses function noteVal(long) defined in edu::umd::cs::findbugs::detect::IncompatMask
      uses function checkState(int) defined in edu::umd::cs::findbugs::detect::IncompatMask
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::IncompatMask
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function visit(Method) in line 52
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function IncompatMask(BugReporter) in line 44
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::IncompatMask
   variable bugReporter in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/InconsistentAnnotations.java
module edu::umd::cs::findbugs::detect::InconsistentAnnotations
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::UseAnnotationDatabase
   function report() in line 88
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 53
      protection public
      34 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function iterable() defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
      uses variable nonnullTypeQualifierValue defined in edu::umd::cs::findbugs::detect::InconsistentAnnotations
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function InconsistentAnnotations(BugReporter) in line 47
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   variable nonnullTypeQualifierValue in line 44
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/InconsistentSyncWarningProperty.java
module edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function InconsistentSyncWarningProperty(String,PriorityAdjustment) in line 30
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable ANNOTATED_AS_GUARDED_BY_THIS in line 64
      protection public
   variable ANNOTATED_AS_THREAD_SAFE in line 68
      protection public
   variable BELOW_MIN_SYNC_PERCENT in line 59
      protection public
   variable MANY_BIASED_UNLOCKED in line 44
      protection public
   variable MUTABLE_SERVLET_FIELD in line 66
      protection public
   variable NEVER_READ in line 50
      protection public
   variable NEVER_WRITTEN in line 47
      protection public
   variable NO_LOCAL_LOCKS in line 56
      protection public
   variable ONLY_UNSYNC_IN_GETTERS in line 62
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/InefficientMemberAccess.java
module edu::umd::cs::findbugs::detect::InefficientMemberAccess
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 53
      protection public
      24 lines of code
      1 parameters
      7 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable ACCESS_PREFIX defined in edu::umd::cs::findbugs::detect::InefficientMemberAccess
      uses variable methodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InefficientMemberAccess
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visitClassContext(ClassContext) in line 45
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable clsName defined in edu::umd::cs::findbugs::detect::InefficientMemberAccess
   function InefficientMemberAccess(BugReporter) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InefficientMemberAccess
   variable ACCESS_PREFIX in line 34
      protection public
   variable bugReporter in line 35
   variable clsName in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/InefficientToArray.java
module edu::umd::cs::findbugs::detect::InefficientToArray
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 96
      protection public
      39 lines of code
      1 parameters
      10 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses variable state defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable collectionClass defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(Method) in line 82
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses variable state defined in edu::umd::cs::findbugs::detect::InefficientToArray
   function visit(Code) in line 90
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function visitClassContext(ClassContext) in line 76
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable collectionClass defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function InefficientToArray(BugReporter) in line 68
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InefficientToArray
   variable bugAccumulator in line 55
   variable bugReporter in line 54
   variable collectionClass in line 52
   variable DEBUG in line 46
   variable state in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/InfiniteLoop.java
module edu::umd::cs::findbugs::detect::InfiniteLoop
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function addBackwardsReach() in line 363
      13 lines of code
      0 parameters
      6 conditional paths
      uses function getBranchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function clearRegModified() in line 56
      4 lines of code
      0 parameters
      2 conditional paths
   function constantSince(Item,int) in line 392
      8 lines of code
      2 parameters
      3 conditional paths
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getLastUpdate(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getBackwardsReach(int) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses variable branchTarget defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function constantSince(Item) in line 400
      6 lines of code
      1 parameters
      5 conditional paths
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getLastUpdate(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function lowerPriorityALot() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryLocalVariableAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function lowerPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function getBackwardsReach(int) in line 377
      7 lines of code
      1 parameters
      3 conditional paths
   function isConstant(Item,BackwardsBranch) in line 229
      7 lines of code
      2 parameters
      3 conditional paths
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function isRegModified(int,int,int) in line 60
      6 lines of code
      3 parameters
      14 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getNumLastUpdates() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getLastUpdate(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getBackwardsReach(int) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
   function regModifiedAt(int,int) in line 52
      4 lines of code
      2 parameters
      1 conditional paths
   function sawBranchTo(int) in line 237
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function sawOpcode(int) in line 241
      protection public
      118 lines of code
      1 parameters
      47 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function addBackwardsReach() defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getDefaultSwitchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSwitchOffsets() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function constantSince(Item,int) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isRegModified(int,int,int) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
   function visit(Code) in line 165
      protection public
      59 lines of code
      1 parameters
      14 conditional paths
      uses function clearRegModified() defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses function getBackwardsReach(int) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses function isConstant(Item,BackwardsBranch) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable DESCRIPTION_LOOP_BOTTOM defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function isRegModified(int,int,int) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses function constantSince(Item,int) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable DESCRIPTION_LAST_CHANGE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function InfiniteLoop(BugReporter) in line 160
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable active in line 43
module edu::umd::cs::findbugs::detect::InfiniteLoop::Jump
   function equals(Object) in line 81
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::detect::InfiniteLoop::BackwardsBranch
   inherits from edu::umd::cs::findbugs::detect::InfiniteLoop::Jump
   function equals(Object) in line 103
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::detect::InfiniteLoop::ForwardConditionalBranch
   inherits from edu::umd::cs::findbugs::detect::InfiniteLoop::Jump
   function equals(Object) in line 121
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/InfiniteRecursiveLoop.java
module edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawBranchTo(int) in line 72
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable largestBranchTarget defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable seenTransferOfControl defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
   function sawOpcode(int) in line 85
      protection public
      128 lines of code
      1 parameters
      40 conditional paths
      uses variable seenReturn defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable seenTransferOfControl defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable seenStateChange defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable largestBranchTarget defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable seenThrow defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
   function visit(Method) in line 57
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable seenTransferOfControl defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable seenStateChange defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable seenReturn defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable seenThrow defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable largestBranchTarget defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function InfiniteRecursiveLoop(BugReporter) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
   variable bugReporter in line 38
   variable DEBUG in line 50
   variable largestBranchTarget in line 48
   variable seenReturn in line 42
   variable seenStateChange in line 46
   variable seenThrow in line 44
   variable seenTransferOfControl in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/InfiniteRecursiveLoop2.java
module edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
   inherits from edu::umd::cs::findbugs::Detector
   function allParamsPassedAsArgs(ClassContext,ValueNumberDataflow,ValueNumberFrame,int,BasicBlock,InvokeInstruction) in line 247
      32 lines of code
      6 parameters
      5 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getOperand(StackConsumer,ConstantPoolGen,int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function analyzeMethod(ClassContext,Method) in line 105
      29 lines of code
      2 parameters
      7 conditional paths
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isRecursiveCall(InvokeInstruction,ClassContext,Method) defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function checkRecursiveCall(ClassContext,Method,CFG,BasicBlock,InstructionHandle,InvokeInstruction) defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function isCallToAdd(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function checkCallToAdd(ClassContext,Method,BasicBlock,InstructionHandle) defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
   function checkCallToAdd(ClassContext,Method,BasicBlock,InstructionHandle) in line 313
      23 lines of code
      4 parameters
      4 conditional paths
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function checkedStateHasBeenModified(ClassContext,Method,BasicBlock) in line 280
      26 lines of code
      3 parameters
      5 conditional paths
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable isTop defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isIntersectionNonEmpty(FieldSet) defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function checkRecursiveCall(ClassContext,Method,CFG,BasicBlock,InstructionHandle,InvokeInstruction) in line 148
      52 lines of code
      6 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getAllDominatorsOf(BasicBlock) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function report() defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function targetMethodKnownExactly(ClassContext,Method,BasicBlock,InvokeInstruction) defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function allParamsPassedAsArgs(ClassContext,ValueNumberDataflow,ValueNumberFrame,int,BasicBlock,InvokeInstruction) defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function checkedStateHasBeenModified(ClassContext,Method,BasicBlock) defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function isCallToAdd(InvokeInstruction,ConstantPoolGen) in line 307
      5 lines of code
      2 parameters
      1 conditional paths
   function isRecursiveCall(InvokeInstruction,ClassContext,Method) in line 135
      12 lines of code
      3 parameters
      3 conditional paths
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function report() in line 340
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function targetMethodKnownExactly(ClassContext,Method,BasicBlock,InvokeInstruction) in line 201
      45 lines of code
      4 parameters
      7 conditional paths
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getInstanceSlot(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isExact(int) defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
   function visitClassContext(ClassContext) in line 80
      protection public
      24 lines of code
      1 parameters
      6 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable IRL_METHOD defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function InfiniteRecursiveLoop2(BugReporter) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
   variable bugReporter in line 71
   variable DEBUG in line 68
   variable IRL_METHOD in line 69
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/InheritanceUnsafeGetResource.java
module edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function adjustPriority(int) in line 136
      43 lines of code
      1 parameters
      6 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function hasSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function sawOpcode(int) in line 75
      protection public
      52 lines of code
      1 parameters
      11 conditional paths
      uses function getConstantRefOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function adjustPriority(int) defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable methodIsStatic defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
      uses variable classIsFinal defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
      uses variable classIsVisibleToOtherPackages defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(JavaClass) in line 61
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable classIsFinal defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
      uses variable classIsVisibleToOtherPackages defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
   function visit(Method) in line 68
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable methodIsStatic defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
   function InheritanceUnsafeGetResource(BugReporter) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
   variable bugReporter in line 42
   variable classIsFinal in line 43
   variable classIsVisibleToOtherPackages in line 45
   variable methodIsStatic in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/InitializationChain.java
module edu::umd::cs::findbugs::detect::InitializationChain
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function compute() in line 120
      protection public
      18 lines of code
      0 parameters
      5 conditional paths
   function report() in line 140
      protection public
      25 lines of code
      0 parameters
      7 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses function compute() defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function sawOpcode(int) in line 86
      protection public
      33 lines of code
      1 parameters
      9 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable instanceCreated defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses variable instanceCreatedWarningGiven defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable instanceCreatedPC defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 55
      protection public
      18 lines of code
      1 parameters
      4 conditional paths
      uses variable instanceCreated defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses variable instanceCreatedWarningGiven defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitAfter(JavaClass) in line 75
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function InitializationChain(BugReporter) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InitializationChain
   variable bugReporter in line 43
   variable DEBUG in line 48
   variable instanceCreated in line 44
   variable instanceCreatedPC in line 45
   variable instanceCreatedWarningGiven in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/InstanceFieldLoadStreamFactory.java
module edu::umd::cs::findbugs::detect::InstanceFieldLoadStreamFactory
   inherits from edu::umd::cs::findbugs::detect::StreamFactory
   function createStream(Location,ObjectType,ConstantPoolGen,RepositoryLookupFailureCallback) in line 66
      protection public
      27 lines of code
      4 parameters
      6 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable streamBaseClass defined in edu::umd::cs::findbugs::detect::InstanceFieldLoadStreamFactory
      uses function setIsOpenOnCreation(boolean) defined in edu::umd::cs::findbugs::detect::Stream
      uses function setOpenLocation(Location) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable bugPatternType defined in edu::umd::cs::findbugs::detect::InstanceFieldLoadStreamFactory
      uses function setInteresting(String) defined in edu::umd::cs::findbugs::detect::Stream
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function setBugPatternType(String) in line 61
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugPatternType defined in edu::umd::cs::findbugs::detect::InstanceFieldLoadStreamFactory
   function InstanceFieldLoadStreamFactory(String) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable streamBaseClass defined in edu::umd::cs::findbugs::detect::InstanceFieldLoadStreamFactory
   variable bugPatternType in line 38
   variable streamBaseClass in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/InstantiateStaticClass.java
module edu::umd::cs::findbugs::detect::InstantiateStaticClass
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function isStaticOnlyClass(XClass) in line 67
      32 lines of code
      1 parameters
      11 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function sawOpcode(int) in line 41
      protection public
      25 lines of code
      1 parameters
      8 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getXClassOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isStaticOnlyClass(XClass) defined in edu::umd::cs::findbugs::detect::InstantiateStaticClass
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InstantiateStaticClass
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function InstantiateStaticClass(BugReporter) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InstantiateStaticClass
   variable bugReporter in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/InvalidJUnitTest.java
module edu::umd::cs::findbugs::detect::InvalidJUnitTest
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function enabled() in line 148
      3 lines of code
      0 parameters
      1 conditional paths
   function hasSuite(Method[]) in line 125
      12 lines of code
      1 parameters
      3 conditional paths
   function hasTestMethods(JavaClass) in line 104
      20 lines of code
      1 parameters
      7 conditional paths
      uses function hasSuite(Method[]) defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
   function isJunit3TestCase(XClass) in line 85
      19 lines of code
      1 parameters
      6 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function sawOpcode(int) in line 200
      protection public
      18 lines of code
      1 parameters
      5 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses variable SEEN_ALOAD_0 defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sawSuperCall defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
   function visit(Method) in line 153
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 171
      protection public
      27 lines of code
      1 parameters
      6 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sawSuperCall defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable METHOD_OVERRIDDEN defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function visitClassContext(ClassContext) in line 61
      protection public
      23 lines of code
      1 parameters
      6 conditional paths
      uses function enabled() defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getXClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function isJunit3TestCase(XClass) defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses function hasTestMethods(JavaClass) defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function InvalidJUnitTest(BugReporter) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
   variable bugReporter in line 48
   variable sawSuperCall in line 168
   variable SEEN_ALOAD_0 in line 46
   variable SEEN_NOTHING in line 44
   variable state in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/IOStreamFactory.java
module edu::umd::cs::findbugs::detect::IOStreamFactory
   inherits from edu::umd::cs::findbugs::detect::StreamFactory
   function createStream(Location,ObjectType,ConstantPoolGen,RepositoryLookupFailureCallback) in line 50
      protection public
      29 lines of code
      4 parameters
      7 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable baseClassType defined in edu::umd::cs::findbugs::detect::IOStreamFactory
      uses variable uninterestingSubclassTypeList defined in edu::umd::cs::findbugs::detect::IOStreamFactory
      uses function setInteresting(String) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable bugType defined in edu::umd::cs::findbugs::detect::IOStreamFactory
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function IOStreamFactory(String,String[],String) in line 41
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
      uses variable bugType defined in edu::umd::cs::findbugs::detect::IOStreamFactory
   variable baseClassType in line 37
   variable bugType in line 39
   variable uninterestingSubclassTypeList in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/IteratorIdioms.java
module edu::umd::cs::findbugs::detect::IteratorIdioms
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 78
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 64
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::IteratorIdioms
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visitClassContext(ClassContext) in line 48
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable iteratorDescriptor defined in edu::umd::cs::findbugs::detect::IteratorIdioms
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::IteratorIdioms
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function IteratorIdioms(BugReporter) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::IteratorIdioms
   variable bugReporter in line 38
   variable iteratorDescriptor in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/LazyInit.java
module edu::umd::cs::findbugs::detect::LazyInit
   inherits from edu::umd::cs::findbugs::ByteCodePatternDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function clone() in line 104
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getBugReporter() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::LazyInit
   function getPattern() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pattern defined in edu::umd::cs::findbugs::detect::LazyInit
   function potentialInitialization(InstructionHandle) in line 346
      7 lines of code
      1 parameters
      4 conditional paths
   function prescreen(Method,ClassContext) in line 125
      protection public
      17 lines of code
      2 parameters
      4 conditional paths
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function reportMatch(ClassContext,Method,ByteCodePatternMatch) in line 144
      protection public
      197 lines of code
      3 parameters
      40 conditional paths
      uses function lookup(String) defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses function getVariable() defined in edu::umd::cs::findbugs::ba::bcp::Binding
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function getFieldName() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function getFieldSig() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::LazyInit
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getFirstLabeledMatch(String) defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function getMatchedInstructionInstructionHandle() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function getAllDominatedBy(BasicBlock) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function getBlocks(BitSet) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function copyFrom(LockSet) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function intersectWith(LockSet) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::LockSet
      uses function potentialInitialization(InstructionHandle) defined in edu::umd::cs::findbugs::detect::LazyInit
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::LazyInit
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function LazyInit(BugReporter) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::LazyInit
   variable bugReporter in line 83
   variable DEBUG in line 85
   variable pattern in line 90
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/LoadOfKnownNullValue.java
module edu::umd::cs::findbugs::detect::LoadOfKnownNullValue
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 66
      133 lines of code
      2 parameters
      22 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isChecked() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::LoadOfKnownNullValue
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function report() in line 200
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 43
      protection public
      22 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::LoadOfKnownNullValue
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::LoadOfKnownNullValue
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::LoadOfKnownNullValue
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function LoadOfKnownNullValue(BugReporter) in line 38
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::LoadOfKnownNullValue
   variable bugAccumulator in line 36
   variable bugReporter in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/LockedFields.java
module edu::umd::cs::findbugs::detect::LockedFields
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function report() in line 239
      protection public
      84 lines of code
      0 parameters
      17 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::LockedFields
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::LockedFields
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addInt(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable INT_SYNC_PERCENT defined in edu::umd::cs::findbugs::IntAnnotation
   function sawOpcode(int) in line 166
      protection public
      71 lines of code
      1 parameters
      16 conditional paths
      uses function updateStats(Set< FieldAnnotation >,int) defined in edu::umd::cs::findbugs::detect::LockedFields
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function updateStats(Set< FieldAnnotation >,int) in line 77
      28 lines of code
      2 parameters
      7 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::LockedFields
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Field) in line 107
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
   function visit(Method) in line 123
      protection public
      24 lines of code
      1 parameters
      2 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Code) in line 150
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function updateStats(Set< FieldAnnotation >,int) defined in edu::umd::cs::findbugs::detect::LockedFields
   function LockedFields(BugReporter) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::LockedFields
   variable bugReporter in line 60
   variable DEBUG in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/LostLoggerDueToWeakReference.java
module edu::umd::cs::findbugs::detect::LostLoggerDueToWeakReference
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function checkForFieldEscape() in line 153
      9 lines of code
      0 parameters
      3 conditional paths
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
   function checkForImport() in line 133
      4 lines of code
      0 parameters
      2 conditional paths
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function checkForMethodExportImport() in line 139
      13 lines of code
      0 parameters
      4 conditional paths
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
   function emitWarning() in line 163
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function sawOpcode(int) in line 83
      protection public
      49 lines of code
      1 parameters
      15 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function checkForImport() defined in edu::umd::cs::findbugs::detect::LostLoggerDueToWeakReference
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function checkForMethodExportImport() defined in edu::umd::cs::findbugs::detect::LostLoggerDueToWeakReference
      uses function checkForFieldEscape() defined in edu::umd::cs::findbugs::detect::LostLoggerDueToWeakReference
   function visit(Code) in line 59
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
      uses function clearBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function LostLoggerDueToWeakReference(BugReporter) in line 49
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/MethodReturnCheck.java
module edu::umd::cs::findbugs::detect::MethodReturnCheck
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::UseAnnotationDatabase
   function isPop(int) in line 206
      3 lines of code
      1 parameters
      1 conditional paths
   function sawMethodCallWithIgnoredReturnValue() in line 167
      38 lines of code
      0 parameters
      7 conditional paths
      uses variable checkReturnAnnotationDatabase defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function getResolvedAnnotation(Object,boolean) defined in edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
      uses variable callSeen defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable CHECK_RETURN_VALUE_IGNORE defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function getSizeOfSurroundingTryBlock(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPriority() defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses function annotationIsDirect(Object) defined in edu::umd::cs::findbugs::ba::AnnotationDatabase
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getPattern() defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable callPC defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable state defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable SCAN defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
   function sawOpcode(int) in line 110
      protection public
      53 lines of code
      1 parameters
      12 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable state defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable callSeen defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable callPC defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawMethodCallWithIgnoredReturnValue() defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable SAW_INVOKE defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function isPop(int) defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable INVOKE_OPCODE_SET defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable SCAN defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable checkReturnAnnotationDatabase defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function getResolvedAnnotation(Object,boolean) defined in edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
      uses variable CHECK_RETURN_VALUE_IGNORE defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses function getPriority() defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getPattern() defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
   function visit(Method) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
   function visitClassContext(ClassContext) in line 87
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable checkReturnAnnotationDatabase defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
   function visitCode(Code) in line 99
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable method defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function MethodReturnCheck(BugReporter) in line 81
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
   variable bugAccumulator in line 69
   variable bugReporter in line 68
   variable callPC in line 79
   variable callSeen in line 75
   variable checkReturnAnnotationDatabase in line 71
   variable DEBUG in line 52
   variable INVOKE_OPCODE_SET in line 58
   variable method in line 73
   variable SAW_INVOKE in line 56
   variable SCAN in line 54
   variable state in line 77
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/MethodReturnValueStreamFactory.java
module edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
   inherits from edu::umd::cs::findbugs::detect::StreamFactory
   function createStream(Location,ObjectType,ConstantPoolGen,RepositoryLookupFailureCallback) in line 92
      protection public
      37 lines of code
      4 parameters
      6 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable invokeOpcodeSet defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses variable baseClassType defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses variable methodName defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses variable methodSig defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses function setIgnoreImplicitExceptions(boolean) defined in edu::umd::cs::findbugs::detect::Stream
      uses function setIsOpenOnCreation(boolean) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable isUninteresting defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses function setInteresting(String) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable bugType defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function MethodReturnValueStreamFactory(String,String,String) in line 65
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses variable methodSig defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
   function MethodReturnValueStreamFactory(String,String,String,String) in line 83
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses variable methodSig defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses variable bugType defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
   variable baseClassType in line 50
   variable bugType in line 54
   variable invokeOpcodeSet in line 41
   variable isUninteresting in line 53
   variable methodName in line 51
   variable methodSig in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/Methods.java
module edu::umd::cs::findbugs::detect::Methods
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function Methods(BugReporter) in line 32
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/MultithreadedInstanceAccess.java
module edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function getMtClasses() in line 59
      18 lines of code
      0 parameters
      4 conditional paths
      uses variable mtClasses defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable STRUTS_ACTION_NAME defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable SERVLET_NAME defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
   function sawField() in line 128
      protection public
      40 lines of code
      0 parameters
      8 conditional paths
      uses variable monitorCount defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable writingField defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses function getConstantRefOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable alreadyReported defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable STRUTS_ACTION_NAME defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable mtClassName defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function sawOpcode(int) in line 170
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable monitorCount defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable writingField defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
   function visitClassContext(ClassContext) in line 79
      protection public
      34 lines of code
      1 parameters
      7 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable STRUTS_ACTION_NAME defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable mtClassName defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable SERVLET_NAME defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses function getMtClasses() defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
   function visitCode(Code) in line 122
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitMethod(Method) in line 115
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable monitorCount defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable alreadyReported defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable writingField defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
   function MultithreadedInstanceAccess(BugReporter) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
   variable alreadyReported in line 53
   variable bugReporter in line 48
   variable monitorCount in line 51
   variable mtClasses in line 49
   variable mtClassName in line 50
   variable SERVLET_NAME in line 47
   variable STRUTS_ACTION_NAME in line 46
   variable writingField in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/MutableLock.java
module edu::umd::cs::findbugs::detect::MutableLock
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 65
      protection public
      30 lines of code
      1 parameters
      7 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function asUnsignedByte(byte) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::MutableLock
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(JavaClass) in line 47
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(Field) in line 53
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
   function visit(Method) in line 58
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function MutableLock(BugReporter) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::MutableLock
   variable bugReporter in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/MutableStaticFields.java
module edu::umd::cs::findbugs::detect::MutableStaticFields
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function interesting(XField) in line 167
      16 lines of code
      1 parameters
      4 conditional paths
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isProtected() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function report() in line 217
      protection public
      82 lines of code
      0 parameters
      17 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isInterface() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::MutableStaticFields
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function sawOpcode(int) in line 104
      protection public
      62 lines of code
      1 parameters
      14 conditional paths
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function interesting(XField) defined in edu::umd::cs::findbugs::detect::MutableStaticFields
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(JavaClass) in line 86
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable isEclipseNLS defined in edu::umd::cs::findbugs::detect::MutableStaticFields
   function visit(Method) in line 97
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Field) in line 184
      protection public
      31 lines of code
      1 parameters
      6 conditional paths
      uses function getFieldSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable isEclipseNLS defined in edu::umd::cs::findbugs::detect::MutableStaticFields
      uses function getXField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function MutableStaticFields(BugReporter) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::MutableStaticFields
   variable bugReporter in line 71
   variable isEclipseNLS in line 79
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/Naming.java
module edu::umd::cs::findbugs::detect::Naming
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function allAbstract(Set< XMethod >) in line 214
      8 lines of code
      1 parameters
      3 conditional paths
   function badFieldName(Field) in line 409
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function badMethodName(String) in line 554
      4 lines of code
      1 parameters
      1 conditional paths
   function checkNonSuper(XMethod,Set< XMethod >) in line 224
      23 lines of code
      2 parameters
      6 conditional paths
      uses function confusingMethodNamesWrongCapitalization(XMethod,XMethod) defined in edu::umd::cs::findbugs::detect::Naming
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::Naming
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
   function checkSuper(XMethod,Set< XMethod >) in line 128
      81 lines of code
      2 parameters
      20 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function confusingMethodNamesWrongCapitalization(XMethod,XMethod) defined in edu::umd::cs::findbugs::detect::Naming
      uses function confusingMethodNamesWrongPackage(XMethod,XMethod) defined in edu::umd::cs::findbugs::detect::Naming
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function definedIn(JavaClass,XMethod) defined in edu::umd::cs::findbugs::detect::Naming
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isCalled(XMethod) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable METHOD_IS_CALLED defined in edu::umd::cs::findbugs::detect::Naming::NamingProperty
      uses function isDeprecated() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable METHOD_IS_DEPRECATED defined in edu::umd::cs::findbugs::detect::Naming::NamingProperty
      uses function allAbstract(Set< XMethod >) defined in edu::umd::cs::findbugs::detect::Naming
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable SUPERCLASS_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_DID_YOU_MEAN_TO_OVERRIDE defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable METHOD_OVERRIDDEN defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::Naming
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function removePackageNamesFromSignature(String) defined in edu::umd::cs::findbugs::detect::Naming
      uses function addFoundAndExpectedType(Type,Type) defined in edu::umd::cs::findbugs::BugInstance
   function codeDoesSomething(Code) in line 559
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function confusingMethodNamesWrongCapitalization(XMethod,XMethod) in line 87
      protection public
      11 lines of code
      2 parameters
      5 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function removePackageNamesFromSignature(String) defined in edu::umd::cs::findbugs::detect::Naming
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function confusingMethodNamesWrongPackage(XMethod,XMethod) in line 98
      protection public
      14 lines of code
      2 parameters
      6 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function removePackageNamesFromSignature(String) defined in edu::umd::cs::findbugs::detect::Naming
   function definedIn(JavaClass,XMethod) in line 80
      protection public
      6 lines of code
      2 parameters
      3 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function findVoidConstructor(JavaClass) in line 453
      7 lines of code
      1 parameters
      3 conditional paths
      uses function isVoidConstructor(JavaClass,Method) defined in edu::umd::cs::findbugs::detect::Naming
   function getSignatureOfOuterClass(JavaClass) in line 425
      6 lines of code
      1 parameters
      3 conditional paths
   function isInnerClass(JavaClass) in line 418
      6 lines of code
      1 parameters
      3 conditional paths
   function isVoidConstructor(JavaClass,Method) in line 542
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getSignatureOfOuterClass(JavaClass) defined in edu::umd::cs::findbugs::detect::Naming
   function markedAsNotUsable(Method) in line 432
      19 lines of code
      1 parameters
      8 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function mightInheritFromException(ClassDescriptor) in line 318
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
   function removePackageNamesFromSignature(String) in line 564
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable sigType defined in edu::umd::cs::findbugs::detect::Naming
   function report() in line 248
      protection public
      19 lines of code
      0 parameters
      8 conditional paths
      uses function checkSuper(XMethod,Set< XMethod >) defined in edu::umd::cs::findbugs::detect::Naming
      uses function checkNonSuper(XMethod,Set< XMethod >) defined in edu::umd::cs::findbugs::detect::Naming
   function sameSimpleName(String,String) in line 277
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function stripPackageName(String) defined in edu::umd::cs::findbugs::detect::Naming
   function stripPackageName(String) in line 268
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(JavaClass) in line 350
      protection public
      35 lines of code
      1 parameters
      11 conditional paths
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::Naming
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function mightInheritFromException(ClassDescriptor) defined in edu::umd::cs::findbugs::detect::Naming
      uses function badFieldName(Field) defined in edu::umd::cs::findbugs::detect::Naming
      uses function badMethodName(String) defined in edu::umd::cs::findbugs::detect::Naming
      uses variable isEclipseNLS defined in edu::umd::cs::findbugs::detect::Naming
   function visit(Field) in line 387
      protection public
      17 lines of code
      1 parameters
      5 conditional paths
      uses function getFieldName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable isEclipseNLS defined in edu::umd::cs::findbugs::detect::Naming
      uses function getFieldSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function badFieldName(Field) defined in edu::umd::cs::findbugs::detect::Naming
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::Naming
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addVisitedField(PreorderVisitor) defined in edu::umd::cs::findbugs::BugInstance
   function visit(Method) in line 462
      protection public
      79 lines of code
      1 parameters
      23 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function findVoidConstructor(JavaClass) defined in edu::umd::cs::findbugs::detect::Naming
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function markedAsNotUsable(Method) defined in edu::umd::cs::findbugs::detect::Naming
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function codeDoesSomething(Code) defined in edu::umd::cs::findbugs::detect::Naming
      uses function isVoidConstructor(JavaClass,Method) defined in edu::umd::cs::findbugs::detect::Naming
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getAnnotations() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::Naming
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function badMethodName(String) defined in edu::umd::cs::findbugs::detect::Naming
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function removePackageNamesFromSignature(String) defined in edu::umd::cs::findbugs::detect::Naming
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitClassContext(ClassContext) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function visitJavaClass(JavaClass) in line 282
      protection public
      29 lines of code
      1 parameters
      10 conditional paths
      uses function sameSimpleName(String,String) defined in edu::umd::cs::findbugs::detect::Naming
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::Naming
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function Naming(BugReporter) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::Naming
   variable bugReporter in line 118
   variable isEclipseNLS in line 347
   variable sigType in line 416
module edu::umd::cs::findbugs::detect::Naming::NamingProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function NamingProperty(String,PriorityAdjustment) in line 63
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable METHOD_IS_CALLED in line 67
      protection public
   variable METHOD_IS_DEPRECATED in line 70
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/Noise.java
module edu::umd::cs::findbugs::detect::Noise
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawClass() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function sawInt(int) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function sawLong(long) in line 132
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function sawOpcode(int) in line 151
      protection public
      92 lines of code
      1 parameters
      66 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function sawString(String) in line 137
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 119
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function Noise(BugReporter) in line 111
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::detect::Noise::HashQueue
   function getHash() in line 78
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function getPriority() in line 87
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   function push(byte) in line 51
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function push(String) in line 63
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function push(int) in line 71
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function pushHash(Object) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function reset() in line 57
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/NoiseNullDeref.java
module edu::umd::cs::findbugs::detect::NoiseNullDeref
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::UseAnnotationDatabase
   inherits from edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonCollector
   function addPropertiesForDereferenceLocations(WarningPropertySet< WarningProperty >,Collection< Location >) in line 400
      29 lines of code
      2 parameters
      8 conditional paths
      uses function isDoomed(Location) defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable DOOMED_CODE defined in edu::umd::cs::findbugs::detect::DoomedCodeWarningProperty
      uses function uniqueLocations(Collection< Location >) defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function skipIfInsideCatchNull() defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable FALSE_POSITIVE defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses variable DEREFS_IN_CATCH_BLOCKS defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses variable DEREFS_ARE_CLONED defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses function addPropertiesForMethodContainingWarning(WarningPropertySet< WarningProperty >) defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
   function addPropertiesForMethodContainingWarning(WarningPropertySet< WarningProperty >) in line 453
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isPrivate() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable IN_UNCALLABLE_METHOD defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
   function analyzeMethod(ClassContext,Method) in line 203
      34 lines of code
      2 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable DEBUG_NULLARG defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function findPreviouslyDeadBlocks() defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute() defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function findPreviouslyDeadBlocks() in line 246
      16 lines of code
      0 parameters
      3 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function foundGuaranteedNullDeref(@NonNull Set< Location >,@NonNull Set< Location >,SortedSet< Location >,ValueNumberDataflow,ValueNumber,@CheckForNull BugAnnotation,NullValueUnconditionalDeref,boolean) in line 387
      protection public
      8 lines of code
      8 parameters
      1 conditional paths
   function foundNullDeref(Location,ValueNumber,IsNullValue,ValueNumberFrame) in line 279
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   function foundNullDeref(Location,ValueNumber,IsNullValue,ValueNumberFrame,boolean) in line 284
      protection public
      48 lines of code
      5 parameters
      9 conditional paths
      uses function isNullOnComplicatedPath23() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable ON_EXCEPTION_PATH defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses variable method defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function addPropertiesForDereferenceLocations(WarningPropertySet< WarningProperty >,Collection< Location >) defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable classContext defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function setDescription(String) defined in edu::umd::cs::findbugs::BugAnnotation
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable CLOSING_NULL defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses function skipIfInsideCatchNull() defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isNullOnComplicatedPath2() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function reportNullDeref(WarningPropertySet< WarningProperty >,Location,String,int,BugAnnotation,@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
   function foundRedundantNullCheck(Location,RedundantBranch) in line 377
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function isDoomed(Location) in line 463
      17 lines of code
      1 parameters
      9 conditional paths
      uses variable MARK_DOOMED defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getReturnPathTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function getUsagesRequiringNonNullValues(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function get(Location,ValueNumber,ValueNumberDataflow) defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getDescription() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function isThrower(BasicBlock) in line 359
      protection public
      17 lines of code
      1 parameters
      5 conditional paths
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function report() in line 267
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function reportNullDeref(WarningPropertySet< WarningProperty >,Location,String,int,BugAnnotation,@CheckForNull BugAnnotation) in line 333
      25 lines of code
      6 parameters
      3 conditional paths
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable classContext defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addPropertiesForDereferenceLocations(WarningPropertySet< WarningProperty >,Collection< Location >) defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function skipIfInsideCatchNull() in line 270
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
   function uniqueLocations(Collection< Location >) in line 434
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
   function visitClassContext(ClassContext) in line 164
      protection public
      38 lines of code
      1 parameters
      8 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable CLASS defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable method defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable METHOD defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable DEBUG_NULLARG defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function NoiseNullDeref(BugReporter) in line 159
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
   variable bugAccumulator in line 150
   variable bugReporter in line 149
   variable CLASS in line 145
   variable classContext in line 153
   variable DEBUG in line 130
      protection public
   variable DEBUG_NULLARG in line 133
   variable DEBUG_NULLRETURN in line 136
   variable MARK_DOOMED in line 139
   variable METHOD in line 142
   variable method in line 155
   variable vnaDataflow in line 157
module edu::umd::cs::findbugs::detect::NoiseNullDeref::CheckCallSitesAndReturnInstructions
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/NonNullReturnProperty.java
module edu::umd::cs::findbugs::detect::NonNullReturnProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function NonNullReturnProperty(String,PriorityAdjustment) in line 29
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable EXACT_METHOD in line 33
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/NoteAnnotationRetention.java
module edu::umd::cs::findbugs::detect::NoteAnnotationRetention
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   inherits from edu::umd::cs::findbugs::FirstPassDetector
   function report() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(JavaClass) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable runtimeRetention defined in edu::umd::cs::findbugs::detect::NoteAnnotationRetention
   function visitAfter(JavaClass) in line 61
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable runtimeRetention defined in edu::umd::cs::findbugs::detect::NoteAnnotationRetention
   function visitAnnotation(String,Map< String, Object >,boolean) in line 45
      protection public
      9 lines of code
      3 parameters
      3 conditional paths
      uses variable runtimeRetention defined in edu::umd::cs::findbugs::detect::NoteAnnotationRetention
   function visitClassContext(ClassContext) in line 70
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function NoteAnnotationRetention(BugReporter) in line 41
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   variable runtimeRetention in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/NoteCheckReturnValue.java
module edu::umd::cs::findbugs::detect::NoteCheckReturnValue
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function loadTraining() in line 98
      25 lines of code
      0 parameters
      6 conditional paths
      uses variable LOAD_TRAINING defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses variable STATIC defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable ANY defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function report() in line 92
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable SAVE_TRAINING defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses function saveTraining() defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
   function saveTraining() in line 124
      26 lines of code
      0 parameters
      5 conditional paths
      uses variable SAVE_TRAINING defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses variable checkReturnValueDatabase defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitAnnotation(String,Map< String, Object >,boolean) in line 79
      protection public
      12 lines of code
      3 parameters
      4 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable STATIC defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable ANY defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable SAVE_TRAINING defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses variable checkReturnValueDatabase defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
   function visitClassContext(ClassContext) in line 69
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable LOAD_TRAINING defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses variable checkLoad defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses function loadTraining() defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function NoteCheckReturnValue(BugReporter) in line 61
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses variable SAVE_TRAINING defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses variable checkReturnValueDatabase defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
   variable bugReporter in line 57
   variable checkLoad in line 58
   variable checkReturnValueDatabase in line 59
   variable LOAD_TRAINING in line 54
   variable SAVE_TRAINING in line 55
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/NoteCheckReturnValueAnnotations.java
module edu::umd::cs::findbugs::detect::NoteCheckReturnValueAnnotations
   inherits from edu::umd::cs::findbugs::detect::BuildCheckReturnAnnotationDatabase
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 46
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 40
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function NoteCheckReturnValueAnnotations(BugReporter) in line 37
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/NoteDirectlyRelevantTypeQualifiers.java
module edu::umd::cs::findbugs::detect::NoteDirectlyRelevantTypeQualifiers
   inherits from edu::umd::cs::findbugs::visitclass::DismantleBytecode
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 135
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function sawOpcode(int) in line 91
      protection public
      34 lines of code
      1 parameters
      11 conditional paths
      uses function getXMethodOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function updateApplicableAnnotations(XMethod) defined in edu::umd::cs::findbugs::detect::NoteDirectlyRelevantTypeQualifiers
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function updateApplicableAnnotations(XMethod) in line 129
      5 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 75
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function updateApplicableAnnotations(XMethod) defined in edu::umd::cs::findbugs::detect::NoteDirectlyRelevantTypeQualifiers
      uses variable qualifiers defined in edu::umd::cs::findbugs::detect::NoteDirectlyRelevantTypeQualifiers
      uses function setDirectlyRelevantTypeQualifiers(MethodDescriptor,Collection< TypeQualifierValue >) defined in edu::umd::cs::findbugs::ba::jsr305::DirectlyRelevantTypeQualifiersDatabase
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitClassContext(ClassContext) in line 61
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable qualifiers defined in edu::umd::cs::findbugs::detect::NoteDirectlyRelevantTypeQualifiers
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function NoteDirectlyRelevantTypeQualifiers(BugReporter) in line 58
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   variable qualifiers in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/NoteJCIPAnnotation.java
module edu::umd::cs::findbugs::detect::NoteJCIPAnnotation
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitAnnotation(String,Map< String, Object >,boolean) in line 46
      protection public
      23 lines of code
      3 parameters
      4 conditional paths
      uses variable NET_JCIP_ANNOTATIONS defined in edu::umd::cs::findbugs::detect::NoteJCIPAnnotation
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitClassContext(ClassContext) in line 70
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function NoteJCIPAnnotation(BugReporter) in line 41
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   variable NET_JCIP_ANNOTATIONS in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/NoteNonNullAnnotations.java
module edu::umd::cs::findbugs::detect::NoteNonNullAnnotations
   inherits from edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 57
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 51
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function NoteNonNullAnnotations(BugReporter) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/NoteNonnullReturnValues.java
module edu::umd::cs::findbugs::detect::NoteNonnullReturnValues
   inherits from edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   inherits from edu::umd::cs::findbugs::InterproceduralFirstPassDetector
   function report() in line 43
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
      uses variable returnsNonNull defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
      uses variable returnsReference defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
   function NoteNonnullReturnValues(BugReporter) in line 37
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/NoteSuppressedWarnings.java
module edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function suppressWarning(int,String) in line 139
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable suppressionMatcher defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
      uses function addSuppressor(ClassWarningSuppressor) defined in edu::umd::cs::findbugs::SuppressionMatcher
   function suppressWarning(String) in line 147
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable recursiveDetector defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
      uses variable suppressionMatcher defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
      uses function addPackageSuppressor(PackageWarningSuppressor) defined in edu::umd::cs::findbugs::SuppressionMatcher
      uses function getPackageName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addSuppressor(ClassWarningSuppressor) defined in edu::umd::cs::findbugs::SuppressionMatcher
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(JavaClass) in line 80
      protection public
      19 lines of code
      1 parameters
      6 conditional paths
      uses variable recursiveDetector defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable packageName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPackageName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable packages defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
      uses function visitJavaClass(JavaClass) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitAnnotation(String,Map< String, Object >,boolean) in line 101
      protection public
      17 lines of code
      3 parameters
      6 conditional paths
      uses function suppressWarning(int,String) defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
   function visitClassContext(ClassContext) in line 74
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function visitParameterAnnotation(int,String,Map< String, Object >,boolean) in line 120
      protection public
      18 lines of code
      4 parameters
      7 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function suppressWarning(int,String) defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
   function NoteSuppressedWarnings(BugReporter) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function NoteSuppressedWarnings(BugReporter,boolean) in line 61
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function getDelegate() defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses variable suppressionMatcher defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
      uses function setDelegate(BugReporter) defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses variable recursiveDetector defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
      uses function NoteSuppressedWarnings(BugReporter) defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
   variable packages in line 51
   variable recursiveDetector in line 55
   variable suppressionMatcher in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/NoteUnconditionalParamDerefs.java
module edu::umd::cs::findbugs::detect::NoteUnconditionalParamDerefs
   inherits from edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   inherits from edu::umd::cs::findbugs::InterproceduralFirstPassDetector
   function report() in line 46
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
      uses variable nonnullReferenceParameters defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
      uses variable referenceParameters defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
   function reportBug(BugInstance) in line 51
      4 lines of code
      1 parameters
      1 conditional paths
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function NoteUnconditionalParamDerefs(BugReporter) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/NullArgumentWarningProperty.java
module edu::umd::cs::findbugs::detect::NullArgumentWarningProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function NullArgumentWarningProperty(String,PriorityAdjustment) in line 32
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable ACTUAL_PARAMETER_GUARANTEED_NULL in line 42
      protection public
   variable ALL_DANGEROUS_TARGETS in line 40
      protection public
   variable ARG_DEFINITELY_NULL in line 36
      protection public
   variable MONOMORPHIC_CALL_SITE in line 38
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/NullDerefProperty.java
module edu::umd::cs::findbugs::detect::NullDerefProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function NullDerefProperty(String,PriorityAdjustment) in line 32
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable CHECKED_VALUE in line 37
      protection public
   variable CLOSING_NULL in line 52
      protection public
   variable CREATED_DEAD_CODE in line 48
      protection public
   variable DEREFS_ARE_CLONED in line 50
      protection public
   variable DEREFS_ARE_INLINED_FINALLY_BLOCKS in line 54
      protection public
   variable DEREFS_IN_CATCH_BLOCKS in line 56
      protection public
   variable LONG_RANGE_NULL_SOURCE in line 40
      protection public
   variable WOULD_HAVE_BEEN_A_KABOOM in line 45
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/NumberConstructor.java
module edu::umd::cs::findbugs::detect::NumberConstructor
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function handle(@SlashedClassName String,boolean,String) in line 79
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable boxClasses defined in edu::umd::cs::findbugs::detect::NumberConstructor
   function sawOpcode(int) in line 102
      protection public
      45 lines of code
      1 parameters
      8 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable boxClasses defined in edu::umd::cs::findbugs::detect::NumberConstructor
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::NumberConstructor
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function visit(Code) in line 97
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::NumberConstructor
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function visitClassContext(ClassContext) in line 89
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function NumberConstructor(BugReporter) in line 66
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::NumberConstructor
      uses function handle(@SlashedClassName String,boolean,String) defined in edu::umd::cs::findbugs::detect::NumberConstructor
   variable boxClasses in line 58
   variable bugAccumulator in line 59
   variable bugReporter in line 60
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/OverridingEqualsNotSymmetrical.java
module edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function callToInvoke(int) in line 287
      11 lines of code
      1 parameters
      3 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable EQUALS_NAME defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable EQUALS_SIGNATURE defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
   function checkForComparingClasses() in line 303
      55 lines of code
      0 parameters
      11 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getReturnValueOf() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function getDirectSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable SUBCLASS_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function count(EqualsKindSummary.KindOfEquals) in line 178
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable count defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
   function report() in line 360
      protection public
      81 lines of code
      0 parameters
      24 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function get(ClassAnnotation) defined in edu::umd::cs::findbugs::ba::EqualsKindSummary
      uses function getXFields() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable count defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
      uses variable INSTANCE_OF_EQUALS defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable METHOD_OVERRIDDEN defined in edu::umd::cs::findbugs::MethodAnnotation
   function sawOpcode(int) in line 184
      protection public
      97 lines of code
      1 parameters
      26 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPrevOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function checkForComparingClasses() defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
      uses function callToInvoke(int) defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getReturnValueOf() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable EQUALS_NAME defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
      uses variable EQUALS_SIGNATURE defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
      uses function getClassDescriptorOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Code) in line 77
      protection public
      76 lines of code
      1 parameters
      21 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable EQUALS_NAME defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable EQUALS_SIGNATURE defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
      uses variable UNKNOWN defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable ALWAYS_TRUE defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable ALWAYS_FALSE defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable RETURNS_SUPER defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable INVOKES_SUPER defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable ABSTRACT_INSTANCE_OF defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable INSTANCE_OF_EQUALS defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable ABSTRACT_GETCLASS_GOOD_EQUALS defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable GETCLASS_GOOD_EQUALS defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable GETCLASS_BAD_EQUALS defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable DELEGATE_EQUALS defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable TRIVIAL_EQUALS defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable CHECKED_CAST_EQUALS defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable COMPARE_EQUALS defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function put(ClassAnnotation,EqualsKindSummary.KindOfEquals) defined in edu::umd::cs::findbugs::ba::EqualsKindSummary
      uses variable count defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function OverridingEqualsNotSymmetrical(BugReporter) in line 69
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   variable count in line 176
   variable EQUALS_NAME in line 53
   variable EQUALS_SIGNATURE in line 55
   variable STATIC_EQUALS_SIGNATURE in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/PreferZeroLengthArrays.java
module edu::umd::cs::findbugs::detect::PreferZeroLengthArrays
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 70
      protection public
      18 lines of code
      1 parameters
      5 conditional paths
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 46
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::PreferZeroLengthArrays
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function PreferZeroLengthArrays(BugReporter) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::PreferZeroLengthArrays
   variable bugReporter in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/PublicSemaphores.java
module edu::umd::cs::findbugs::detect::PublicSemaphores
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 75
      protection public
      26 lines of code
      1 parameters
      7 conditional paths
      uses variable alreadyReported defined in edu::umd::cs::findbugs::detect::PublicSemaphores
      uses variable state defined in edu::umd::cs::findbugs::detect::PublicSemaphores
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::PublicSemaphores
      uses variable SEEN_ALOAD_0 defined in edu::umd::cs::findbugs::detect::PublicSemaphores
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::PublicSemaphores
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 65
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable alreadyReported defined in edu::umd::cs::findbugs::detect::PublicSemaphores
      uses variable state defined in edu::umd::cs::findbugs::detect::PublicSemaphores
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::PublicSemaphores
   function visitClassContext(ClassContext) in line 55
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable alreadyReported defined in edu::umd::cs::findbugs::detect::PublicSemaphores
   function PublicSemaphores(BugReporter) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::PublicSemaphores
   variable alreadyReported in line 46
   variable bugReporter in line 44
   variable SEEN_ALOAD_0 in line 42
   variable SEEN_NOTHING in line 41
   variable state in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/QuestionableBooleanAssignment.java
module edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 57
      protection public
      51 lines of code
      1 parameters
      14 conditional paths
      uses function getBranchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable state defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable SEEN_GOTO defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable SEEN_ICONST_0_OR_1 defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable SEEN_DUP defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable SEEN_ISTORE defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable bug defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable SEEN_IF defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitCode(Code) in line 50
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable bug defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
   function QuestionableBooleanAssignment(BugReporter) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
   variable bug in line 42
   variable bugReporter in line 39
   variable SEEN_DUP in line 34
      protection public
   variable SEEN_GOTO in line 36
      protection public
   variable SEEN_ICONST_0_OR_1 in line 33
      protection public
   variable SEEN_IF in line 37
      protection public
   variable SEEN_ISTORE in line 35
      protection public
   variable SEEN_NOTHING in line 32
      protection public
   variable state in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/ReadOfInstanceFieldInMethodInvokedByConstructorInSuperclass.java
module edu::umd::cs::findbugs::detect::ReadOfInstanceFieldInMethodInvokedByConstructorInSuperclass
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function getConstructorThatCallsSuperConstructor(XMethod) in line 154
      10 lines of code
      1 parameters
      4 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSuperCall(XMethod) defined in edu::umd::cs::findbugs::ba::FieldSummary
   function sawOpcode(int) in line 68
      protection public
      85 lines of code
      1 parameters
      20 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getCalledFromSuperConstructor(ClassDescriptor,XMethod) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isWrittenInConstructor(XField) defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isWrittenDuringInitialization(XField) defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function isWrittenOutsideOfInitialization(XField) defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getNextOpcode() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getConstructorThatCallsSuperConstructor(XMethod) defined in edu::umd::cs::findbugs::detect::ReadOfInstanceFieldInMethodInvokedByConstructorInSuperclass
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_SUPERCLASS_CONSTRUCTOR defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable ROLE_CALLED_FROM_SUPERCLASS_AT defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable METHOD_CONSTRUCTOR defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable ROLE_FIELD_SET_TOO_LATE_AT defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function visit(Code) in line 58
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function ReadOfInstanceFieldInMethodInvokedByConstructorInSuperclass(BugReporter) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/ReadReturnShouldBeChecked.java
module edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function isBufferedInputStream() in line 77
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable lastCallClass defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
   function isImageIOInputStream() in line 86
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable lastCallClass defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
   function isInputStream() in line 66
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable lastCallClass defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
   function sawOpcode(int) in line 97
      protection public
      77 lines of code
      1 parameters
      9 conditional paths
      uses variable lastCallClass defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isInputStream() defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
      uses variable locationOfCall defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isImageIOInputStream() defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
      uses function isBufferedInputStream() defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 58
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function ReadReturnShouldBeChecked(BugReporter) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable lastCallClass in line 50
   variable locationOfCall in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/RedundantInterfaces.java
module edu::umd::cs::findbugs::detect::RedundantInterfaces
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function report() in line 83
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 46
      protection public
      36 lines of code
      1 parameters
      9 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::RedundantInterfaces
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function RedundantInterfaces(BugReporter) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::RedundantInterfaces
   variable bugReporter in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/RefComparisonWarningProperty.java
module edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function RefComparisonWarningProperty(String,PriorityAdjustment) in line 30
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable COMPARE_IN_TEST_CASE in line 41
      protection public
   variable COMPARE_STATIC_STRINGS in line 44
      protection public
   variable DYNAMIC_AND_UNKNOWN in line 47
      protection public
   variable PRIVATE_METHOD in line 38
      protection public
   variable SAW_CALL_TO_EQUALS in line 35
      protection public
   variable SAW_INTERN in line 58
      protection public
   variable STATIC_AND_UNKNOWN in line 55
      protection public
   variable STRING_PARAMETER in line 51
      protection public
   variable STRING_PARAMETER_IN_PUBLIC_METHOD in line 49
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/ReflectiveClasses.java
module edu::umd::cs::findbugs::detect::ReflectiveClasses
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function process(@SlashedClassName String) in line 63
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function sawClass() in line 47
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getOpcode() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function process(@SlashedClassName String) defined in edu::umd::cs::findbugs::detect::ReflectiveClasses
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function sawOpcode(int) in line 52
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function process(@SlashedClassName String) defined in edu::umd::cs::findbugs::detect::ReflectiveClasses
   function sawString(String) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ReflectiveClasses(BugReporter) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/RepeatedConditionals.java
module edu::umd::cs::findbugs::detect::RepeatedConditionals
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function reset() in line 148
      6 lines of code
      0 parameters
      1 conditional paths
   function sawBranchTo(int) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function sawOpcode(int) in line 70
      protection public
      77 lines of code
      1 parameters
      16 conditional paths
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isReturn(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function reset() defined in edu::umd::cs::findbugs::detect::RepeatedConditionals
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getCodeByte(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function isJumpTarget(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visit(Code) in line 44
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reset() defined in edu::umd::cs::findbugs::detect::RepeatedConditionals
   function RepeatedConditionals(BugReporter) in line 38
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function reset() defined in edu::umd::cs::findbugs::detect::RepeatedConditionals
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/ResolveAllReferences.java
module edu::umd::cs::findbugs::detect::ResolveAllReferences
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function addAllDefinitions(JavaClass) in line 79
      protection public
      17 lines of code
      1 parameters
      5 conditional paths
      uses function getMemberName(JavaClass,String,int,int) defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
   function compute() in line 47
      23 lines of code
      0 parameters
      4 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function addAllDefinitions(JavaClass) defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function find(JavaClass,String,String) in line 121
      10 lines of code
      3 parameters
      6 conditional paths
      uses function getMemberName(JavaClass,String,int,int) defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
   function getClassName(JavaClass,int) in line 97
      5 lines of code
      2 parameters
      1 conditional paths
   function getMemberName(JavaClass,String,int,int) in line 103
      10 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getMemberName(String,String,String) in line 113
      8 lines of code
      3 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function report() in line 76
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visit(JavaClass) in line 132
      protection public
      49 lines of code
      1 parameters
      10 conditional paths
      uses function compute() defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function find(JavaClass,String,String) defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
      uses function getMemberName(JavaClass,String,int,int) defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitClassContext(ClassContext) in line 71
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function ResolveAllReferences(BugReporter) in line 40
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
   variable bugReporter in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/RuntimeExceptionCapture.java
module edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 220
      protection public
      40 lines of code
      1 parameters
      13 conditional paths
      uses variable seen defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionCaught
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable throwList defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getThrownExceptions() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(CodeException) in line 174
      protection public
      44 lines of code
      1 parameters
      7 conditional paths
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function ExceptionCaught(String,int,int,int) defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionCaught
      uses variable catchList defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getLiveLocalStoreDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function getBlocksContainingInstructionWithOffset(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses variable dead defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionCaught
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function reportSkippedAnalysis(MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitCode(Code) in line 128
      protection public
      44 lines of code
      1 parameters
      15 conditional paths
      uses variable catchList defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses variable throwList defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
   function visitJavaClass(JavaClass) in line 113
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function visitMethod(Method) in line 119
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
   function RuntimeExceptionCapture(BugReporter) in line 107
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
   variable accumulator in line 81
   variable bugReporter in line 76
   variable catchList in line 78
   variable DEBUG in line 74
   variable method in line 77
   variable throwList in line 79
module edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionCaught
   function ExceptionCaught(String,int,int,int) in line 88
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable exceptionClass defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionCaught
      uses variable startOffset defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionCaught
   variable dead in line 86
      protection public
   variable exceptionClass in line 83
      protection public
   variable seen in line 85
      protection public
   variable startOffset in line 84
      protection public
module edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionThrown
   function ExceptionThrown(@DottedClassName String,int) in line 100
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable exceptionClass defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionCaught
   variable exceptionClass in line 97
      protection public
   variable offset in line 98
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/SerializableIdiom.java
module edu::umd::cs::findbugs::detect::SerializableIdiom
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function computePriority(double,double) in line 643
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable sawReadObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function flush() in line 109
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable sawReadExternal defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawWriteExternal defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawWriteObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable fieldWarningList defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function sawOpcode(int) in line 463
      protection public
      61 lines of code
      1 parameters
      15 conditional paths
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isNull() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable transientFieldsSetToDefaultValueInConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable transientFieldsUpdates defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable transientFieldsSetInConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable fieldsThatMightBeAProblem defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getJavaClass() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function computePriority(double,double) defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable fieldWarningList defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(JavaClass) in line 124
      protection public
      139 lines of code
      1 parameters
      25 conditional paths
      uses variable isEnum defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable directlyImplementsExternalizable defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable fieldsThatMightBeAProblem defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable transientFieldsUpdates defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable transientFieldsSetInConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable transientFieldsSetToDefaultValueInConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable hasPublicVoidConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable superClassHasVoidConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable superClassHasReadObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable superClassImplementsSerializable defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getXMethods() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable sawReadExternal defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawWriteExternal defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadResolve defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawWriteObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
   function visit(Method) in line 347
      protection public
      100 lines of code
      1 parameters
      29 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable hasPublicVoidConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadExternal defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sawWriteExternal defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadResolve defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable SUBCLASS_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable sawReadObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawWriteObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
   function visit(Code) in line 457
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function visit(Field) in line 526
      protection public
      116 lines of code
      1 parameters
      30 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable transientFieldsUpdates defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getXField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getFieldName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldsThatMightBeAProblem defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function computePriority(double,double) defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldWarningList defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitAfter(JavaClass) in line 265
      protection public
      80 lines of code
      1 parameters
      23 conditional paths
      uses variable isEnum defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable hasPublicVoidConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable superClassHasVoidConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable superClassImplementsSerializable defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadResolve defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable superClassHasReadObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable transientFieldsUpdates defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable transientFieldsSetInConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable transientFieldsSetToDefaultValueInConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable directlyImplementsExternalizable defined in edu::umd::cs::findbugs::detect::SerializableIdiom
   function visitClassContext(ClassContext) in line 104
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function flush() defined in edu::umd::cs::findbugs::detect::SerializableIdiom
   function SerializableIdiom(BugReporter) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SerializableIdiom
   variable bugReporter in line 76
   variable DEBUG in line 62
   variable directlyImplementsExternalizable in line 93
   variable fieldsThatMightBeAProblem in line 79
   variable fieldWarningList in line 78
   variable hasPublicVoidConstructor in line 91
   variable isEnum in line 122
   variable sawReadExternal in line 84
   variable sawReadObject in line 86
   variable sawReadResolve in line 87
   variable sawWriteExternal in line 85
   variable sawWriteObject in line 88
   variable superClassHasReadObject in line 90
   variable superClassHasVoidConstructor in line 92
   variable superClassImplementsSerializable in line 89
   variable transientFieldsSetInConstructor in line 81
   variable transientFieldsSetToDefaultValueInConstructor in line 82
   variable transientFieldsUpdates in line 80
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/StartInConstructor.java
module edu::umd::cs::findbugs::detect::StartInConstructor
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 68
      protection public
      22 lines of code
      1 parameters
      6 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDirectSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable SUBCLASS_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::StartInConstructor
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::StartInConstructor
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(JavaClass) in line 54
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 60
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::StartInConstructor
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function StartInConstructor(BugReporter) in line 44
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::StartInConstructor
   variable bugAccumulator in line 42
   variable bugReporter in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/StaticCalendarDetector.java
module edu::umd::cs::findbugs::detect::StaticCalendarDetector
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function isLocked() in line 302
      17 lines of code
      0 parameters
      5 conditional paths
      uses variable currentMethod defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentLockDataFlow defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentCFG defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function getLocationsContainingInstructionWithOffset(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getNumLockedObjects() defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable reporter defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function sawOpcode(int) in line 209
      protection public
      89 lines of code
      1 parameters
      20 conditional paths
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable pendingBugs defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function isLocked() defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable reporter defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable calendarType defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable dateFormatType defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable PROP_SKIP_SYNCHRONIZED_CHECK defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function amVisitingMainMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function visit(JavaClass) in line 120
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable currentClass defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentMethod defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentCFG defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentLockDataFlow defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable sawDateClass defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
   function visit(ConstantPool) in line 130
      protection public
      10 lines of code
      1 parameters
      4 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sawDateClass defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
   function visit(Field) in line 146
      protection public
      25 lines of code
      1 parameters
      9 conditional paths
      uses variable superclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable calendarType defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable dateFormatType defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getXClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function usesConcurrency() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable pendingBugs defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function getXField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentClass defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
   function visit(Code) in line 191
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable sawDateClass defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function visitMethod(Method) in line 178
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable sawDateClass defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentMethod defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentLockDataFlow defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getLockDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable currentCFG defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable reporter defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function StaticCalendarDetector(BugReporter) in line 110
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   variable bugAccumulator in line 78
   variable calendarType in line 86
   variable currentCFG in line 97
   variable currentClass in line 81
   variable currentLockDataFlow in line 100
   variable currentMethod in line 94
   variable dateFormatType in line 91
   variable DEBUG in line 64
   variable pendingBugs in line 102
   variable PROP_SKIP_SYNCHRONIZED_CHECK in line 74
   variable reporter in line 77
   variable sawDateClass in line 115
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/StaticFieldLoadStreamFactory.java
module edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
   inherits from edu::umd::cs::findbugs::detect::StreamFactory
   function createStream(Location,ObjectType,ConstantPoolGen,RepositoryLookupFailureCallback) in line 60
      protection public
      17 lines of code
      4 parameters
      3 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable className defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
      uses variable fieldName defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
      uses variable fieldSig defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
      uses variable streamBaseClass defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
      uses function setIsOpenOnCreation(boolean) defined in edu::umd::cs::findbugs::detect::Stream
   function StaticFieldLoadStreamFactory(String,String,String,String) in line 52
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses variable streamBaseClass defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
      uses variable className defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
      uses variable fieldName defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
      uses variable fieldSig defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
   variable className in line 38
      protection public
   variable fieldName in line 39
      protection public
   variable fieldSig in line 40
      protection public
   variable streamBaseClass in line 37
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/Stream.java
module edu::umd::cs::findbugs::detect::Stream
   inherits from edu::umd::cs::findbugs::ResourceCreationPoint
   inherits from Comparable
   function compareTo(Stream) in line 274
      protection public
      20 lines of code
      1 parameters
      5 conditional paths
      uses function getLocation() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses function compareTo(Location) defined in edu::umd::cs::findbugs::ba::Location
      uses variable streamBase defined in edu::umd::cs::findbugs::detect::Stream
      uses function getResourceClass() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses variable instanceParam defined in edu::umd::cs::findbugs::detect::Stream
   function equals(Object) in line 265
      protection public
      9 lines of code
      1 parameters
      6 conditional paths
      uses function Stream(Location,String,String) defined in edu::umd::cs::findbugs::detect::Stream
      uses function getLocation() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::Location
      uses variable streamBase defined in edu::umd::cs::findbugs::detect::Stream
      uses function getResourceClass() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses variable instanceParam defined in edu::umd::cs::findbugs::detect::Stream
   function getBugType() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugType defined in edu::umd::cs::findbugs::detect::Stream
   function getInstanceParam() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceParam defined in edu::umd::cs::findbugs::detect::Stream
   function getInstanceValue(ResourceValueFrame,InvokeInstruction,ConstantPoolGen) in line 242
      7 lines of code
      3 parameters
      2 conditional paths
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
   function getOpenLocation() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable openLocation defined in edu::umd::cs::findbugs::detect::Stream
   function getStreamBase() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable streamBase defined in edu::umd::cs::findbugs::detect::Stream
   function hashCode() in line 257
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getLocation() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::Location
      uses variable streamBase defined in edu::umd::cs::findbugs::detect::Stream
      uses function getResourceClass() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses variable instanceParam defined in edu::umd::cs::findbugs::detect::Stream
   function ignoreImplicitExceptions() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isClosed() in line 171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isOpenOnCreation() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isStreamClose(BasicBlock,InstructionHandle,ConstantPoolGen,ResourceValueFrame,RepositoryLookupFailureCallback) in line 212
      protection public
      29 lines of code
      5 parameters
      5 conditional paths
      uses function mightCloseStream(BasicBlock,InstructionHandle,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::Stream
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstanceValue(ResourceValueFrame,InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::Stream
      uses function isInstance() defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses variable streamBase defined in edu::umd::cs::findbugs::detect::Stream
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function isStreamOpen(BasicBlock,InstructionHandle,ConstantPoolGen,ResourceValueFrame) in line 175
      protection public
      16 lines of code
      4 parameters
      3 conditional paths
      uses function isOpenOnCreation() defined in edu::umd::cs::findbugs::detect::Stream
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstanceValue(ResourceValueFrame,InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::Stream
      uses function isInstance() defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses function matchMethod(InvokeInstruction,ConstantPoolGen,String,String) defined in edu::umd::cs::findbugs::detect::Stream
      uses function getResourceClass() defined in edu::umd::cs::findbugs::ResourceCreationPoint
   function isUninteresting() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function matchMethod(InvokeInstruction,ConstantPoolGen,String,String) in line 250
      5 lines of code
      4 parameters
      1 conditional paths
   function mightCloseStream(BasicBlock,InstructionHandle,ConstantPoolGen) in line 192
      protection public
      19 lines of code
      3 parameters
      2 conditional paths
   function setClosed() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isClosed() defined in edu::umd::cs::findbugs::detect::Stream
   function setIgnoreImplicitExceptions(boolean) in line 102
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function ignoreImplicitExceptions() defined in edu::umd::cs::findbugs::detect::Stream
   function setInstanceParam(int) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceParam defined in edu::umd::cs::findbugs::detect::Stream
   function setInteresting(String) in line 91
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable bugType defined in edu::umd::cs::findbugs::detect::Stream
   function setIsOpenOnCreation(boolean) in line 112
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function isOpenOnCreation() defined in edu::umd::cs::findbugs::detect::Stream
   function setOpenLocation(Location) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable openLocation defined in edu::umd::cs::findbugs::detect::Stream
   function toString() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable streamBase defined in edu::umd::cs::findbugs::detect::Stream
      uses variable openLocation defined in edu::umd::cs::findbugs::detect::Stream
   function Stream(Location,String,String) in line 78
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses variable streamBase defined in edu::umd::cs::findbugs::detect::Stream
      uses function isUninteresting() defined in edu::umd::cs::findbugs::detect::Stream
      uses variable instanceParam defined in edu::umd::cs::findbugs::detect::Stream
   variable bugType in line 59
   variable ignoreImplicitExceptions in line 58
   variable instanceParam in line 60
   variable isClosed in line 61
   variable isOpenOnCreation in line 56
   variable isUninteresting in line 55
   variable openLocation in line 57
   variable streamBase in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/StreamEquivalenceClass.java
module edu::umd::cs::findbugs::detect::StreamEquivalenceClass
   function addAll(StreamEquivalenceClass) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable memberSet defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
   function addMember(Stream) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable memberSet defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
   function memberIterator() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable memberSet defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
   function setClosed() in line 71
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable isClosed defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
      uses variable memberSet defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
   function StreamEquivalenceClass() in line 38
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable isClosed in line 32
   variable memberSet in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/StreamEscape.java
module edu::umd::cs::findbugs::detect::StreamEscape
   inherits from Comparable
   function compareTo(StreamEscape) in line 47
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses function compareTo(Stream) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable target defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses function compareTo(Location) defined in edu::umd::cs::findbugs::ba::Location
   function equals(Object) in line 58
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function StreamEscape(Stream,Location) defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses variable source defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses function equals(Object) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable target defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::Location
   function hashCode() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses function hashCode() defined in edu::umd::cs::findbugs::detect::Stream
      uses variable target defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::Location
   function toString() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses variable target defined in edu::umd::cs::findbugs::detect::StreamEscape
   function StreamEscape(Stream,Location) in line 42
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses variable target defined in edu::umd::cs::findbugs::detect::StreamEscape
   variable source in line 32
      protection public
   variable target in line 33
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/StreamFactory.java
module edu::umd::cs::findbugs::detect::StreamFactory
   function createStream(Location,ObjectType,ConstantPoolGen,RepositoryLookupFailureCallback) in line 48
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/StreamFrameModelingVisitor.java
module edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function instanceEscapes(InvokeInstruction,int) in line 99
      33 lines of code
      2 parameters
      6 conditional paths
      uses variable cpg defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getCPG() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable location defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
      uses variable stream defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
      uses function getOpenLocation() defined in edu::umd::cs::findbugs::detect::Stream
      uses variable resourceTracker defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
      uses function addStreamEscape(Stream,Location) defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function transferInstruction(InstructionHandle,BasicBlock) in line 53
      protection public
      44 lines of code
      2 parameters
      7 conditional paths
      uses variable cpg defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getCPG() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable frame defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getFrame() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable stream defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
      uses function getLocation() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
      uses variable isOpenOnCreation defined in edu::umd::cs::findbugs::detect::Stream
      uses variable OPEN defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function setOpenLocation(Location) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable location defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
      uses variable resourceTracker defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
      uses function addStreamOpenLocation(Location,Stream) defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable CREATED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function isResourceOpen(BasicBlock,InstructionHandle,ConstantPoolGen,Stream,ResourceValueFrame) defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses function isResourceClose(BasicBlock,InstructionHandle,ConstantPoolGen,Stream,ResourceValueFrame) defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable CLOSED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function analyzeInstruction(Instruction) defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
   function StreamFrameModelingVisitor(ConstantPoolGen,StreamResourceTracker,Stream) in line 45
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable cpg defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable resourceTracker defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
      uses variable stream defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
   variable location in line 43
   variable resourceTracker in line 41
   variable stream in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/StreamResourceTracker.java
module edu::umd::cs::findbugs::detect::StreamResourceTracker
   inherits from edu::umd::cs::findbugs::ba::ResourceTracker
   function addStreamEscape(Stream,Location) in line 116
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable streamEscapeSet defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function addStreamOpenLocation(Location,Stream) in line 200
      protection public
      7 lines of code
      2 parameters
      3 conditional paths
      uses variable streamOpenLocationMap defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable isUninteresting defined in edu::umd::cs::findbugs::detect::Stream
      uses variable uninterestingStreamEscapeSet defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function createVisitor(Stream,ConstantPoolGen) in line 274
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getStreamEquivalenceClass(Stream) in line 216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable streamEquivalenceMap defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function ignoreExceptionEdge(Edge,Stream,ConstantPoolGen) in line 282
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function ignoreImplicitExceptions(Stream) in line 278
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreImplicitExceptions defined in edu::umd::cs::findbugs::detect::Stream
   function isParamInstance(Stream,int) in line 286
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getInstanceParam() defined in edu::umd::cs::findbugs::detect::Stream
   function isResourceClose(BasicBlock,InstructionHandle,ConstantPoolGen,Stream,ResourceValueFrame) in line 265
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses function isStreamClose(BasicBlock,InstructionHandle,ConstantPoolGen,ResourceValueFrame,RepositoryLookupFailureCallback) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function isResourceCreation(BasicBlock,InstructionHandle,ConstantPoolGen) in line 229
      protection public
      30 lines of code
      3 parameters
      6 conditional paths
      uses variable resourceCollection defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable streamFactoryList defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function isResourceOpen(BasicBlock,InstructionHandle,ConstantPoolGen,Stream,ResourceValueFrame) in line 260
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses function isStreamOpen(BasicBlock,InstructionHandle,ConstantPoolGen,ResourceValueFrame) defined in edu::umd::cs::findbugs::detect::Stream
   function isStreamOpenLocation(Location) in line 225
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable streamOpenLocationMap defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function isUninterestingStreamEscape(Stream) in line 190
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable uninterestingStreamEscapeSet defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function markTransitiveUninterestingStreamEscapes() in line 129
      protection public
      53 lines of code
      0 parameters
      12 conditional paths
      uses variable streamEscapeSet defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses function isStreamOpenLocation(Location) defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable target defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses variable resourceCollection defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses function addMember(Stream) defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
      uses variable streamEquivalenceMap defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable uninterestingStreamEscapeSet defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses function isUninterestingStreamEscape(Stream) defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable streamOpenLocationMap defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses function addAll(StreamEquivalenceClass) defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
      uses function memberIterator() defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
   function mightCloseResource(BasicBlock,InstructionHandle,ConstantPoolGen) in line 270
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function setResourceCollection(ResourceCollection< Stream >) in line 106
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable resourceCollection defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function StreamResourceTracker(StreamFactory[],RepositoryLookupFailureCallback) in line 92
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
      uses variable streamFactoryList defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   variable lookupFailureCallback in line 54
   variable resourceCollection in line 55
   variable streamEquivalenceMap in line 82
   variable streamEscapeSet in line 72
   variable streamFactoryList in line 53
   variable streamOpenLocationMap in line 61
   variable uninterestingStreamEscapeSet in line 67
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/StringConcatenation.java
module edu::umd::cs::findbugs::detect::StringConcatenation
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function reset() in line 83
      11 lines of code
      0 parameters
      2 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable createPC defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable registerOnStack defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable stringSource defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::StringConcatenation
   function sawOpcode(int) in line 113
      protection public
      169 lines of code
      1 parameters
      40 conditional paths
      uses variable reportedThisMethod defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable state defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function printOpCode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable clobberedRegisters defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable createPC defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable registerOnStack defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable stringSource defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function reset() defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function storeIntoRegister(int,int) defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function storeIntoRegister(int,int) in line 95
      16 lines of code
      2 parameters
      6 conditional paths
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Method) in line 74
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function reset() defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable clobberedRegisters defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable reportedThisMethod defined in edu::umd::cs::findbugs::detect::StringConcatenation
   function StringConcatenation(BugReporter) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::StringConcatenation
   variable bugReporter in line 56
   variable clobberedRegisters in line 71
   variable createPC in line 61
   variable DEBUG in line 46
   variable registerOnStack in line 59
   variable reportedThisMethod in line 57
   variable state in line 62
   variable stringSource in line 60
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/SuperfluousInstanceOf.java
module edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 74
      protection public
      41 lines of code
      1 parameters
      11 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable SEEN_ALOAD defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
      uses variable varTable defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(Method) in line 59
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
      uses variable varTable defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
   function visit(Code) in line 67
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable varTable defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
   function SuperfluousInstanceOf(BugReporter) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
   variable bugReporter in line 47
   variable register in line 50
   variable SEEN_ALOAD in line 45
   variable SEEN_NOTHING in line 44
   variable state in line 49
   variable varTable in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/SuspiciousThreadInterrupted.java
module edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 61
      protection public
      67 lines of code
      1 parameters
      18 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses variable SEEN_POSSIBLE_THREAD defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses variable SEEN_UNKNOWNCONTEXT_POP defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable SEEN_CURRENTTHREAD defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses variable localsWithCurrentThreadValue defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable SEEN_POP_AFTER_CURRENTTHREAD defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 54
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable localsWithCurrentThreadValue defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses variable state defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
   function SuspiciousThreadInterrupted(BugReporter) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
   variable bugReporter in line 43
   variable localsWithCurrentThreadValue in line 44
   variable SEEN_CURRENTTHREAD in line 39
      protection public
   variable SEEN_NOTHING in line 38
      protection public
   variable SEEN_POP_AFTER_CURRENTTHREAD in line 40
      protection public
   variable SEEN_POSSIBLE_THREAD in line 42
      protection public
   variable SEEN_UNKNOWNCONTEXT_POP in line 41
      protection public
   variable state in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/SwitchFallthrough.java
module edu::umd::cs::findbugs::detect::SwitchFallthrough
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function clearAll() in line 236
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable potentiallyDeadStores defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable potentiallyDeadStoresFromBeforeFallthrough defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable potentiallyDeadFields defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable potentiallyDeadFieldsFromBeforeFallthrough defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
   function hasFallThruComment(int,int) in line 243
      41 lines of code
      2 parameters
      11 conditional paths
      uses variable LOOK_IN_SOURCE_FOR_FALLTHRU_COMMENT defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable lastPC defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable sourceFile defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function sawOpcode(int) in line 112
      protection public
      118 lines of code
      1 parameters
      31 conditional paths
      uses variable switchHdlr defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function getDefaultOffset() defined in edu::umd::cs::findbugs::SwitchHandler
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isOnSwitchOffset(DismantleBytecode) defined in edu::umd::cs::findbugs::SwitchHandler
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable reachable defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable fallthroughDistance defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable potentiallyDeadStoresFromBeforeFallthrough defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable potentiallyDeadStores defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable potentiallyDeadFieldsFromBeforeFallthrough defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable potentiallyDeadFields defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function hasFallThruComment(int,int) defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable lastPC defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function clearAll() defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable priority defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable deadStore defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function isRegisterLoad() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function atCatchBlock() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function enterSwitch(DismantleBytecode) defined in edu::umd::cs::findbugs::SwitchHandler
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 85
      protection public
      25 lines of code
      1 parameters
      5 conditional paths
      uses variable reachable defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable lastPC defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable switchHdlr defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function clearAll() defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable deadStore defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable priority defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable fallthroughDistance defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function visitClassContext(ClassContext) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function SwitchFallthrough(BugReporter) in line 69
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
   variable bugAccumulator in line 59
   variable bugReporter in line 58
   variable deadStore in line 65
   variable DEBUG in line 52
   variable fallthroughDistance in line 67
   variable lastPC in line 60
   variable LOOK_IN_SOURCE_FOR_FALLTHRU_COMMENT in line 53
   variable potentiallyDeadFields in line 62
   variable potentiallyDeadFieldsFromBeforeFallthrough in line 64
   variable potentiallyDeadStores in line 61
   variable potentiallyDeadStoresFromBeforeFallthrough in line 63
   variable priority in line 66
   variable reachable in line 57
   variable switchHdlr in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/SynchronizationOnSharedBuiltinConstant.java
module edu::umd::cs::findbugs::detect::SynchronizationOnSharedBuiltinConstant
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function newlyConstructedObject(OpcodeStack.Item) in line 54
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function sawOpcode(int) in line 68
      protection public
      31 lines of code
      1 parameters
      8 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable identified defined in edu::umd::cs::findbugs::detect::SynchronizationOnSharedBuiltinConstant
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable STRING_CONSTANT_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSummary(XField) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function newlyConstructedObject(OpcodeStack.Item) defined in edu::umd::cs::findbugs::detect::SynchronizationOnSharedBuiltinConstant
   function visit(Code) in line 63
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function SynchronizationOnSharedBuiltinConstant(BugReporter) in line 44
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   variable identified in line 60
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/SynchronizeAndNullCheckField.java
module edu::umd::cs::findbugs::detect::SynchronizeAndNullCheckField
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 57
      protection public
      42 lines of code
      1 parameters
      13 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visit(Method) in line 47
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function SynchronizeAndNullCheckField(BugReporter) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/SynchronizeOnClassLiteralNotGetClass.java
module edu::umd::cs::findbugs::detect::SynchronizeOnClassLiteralNotGetClass
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 71
      protection public
      65 lines of code
      1 parameters
      21 conditional paths
      uses variable classConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDirectSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable SUBCLASS_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function visit(Code) in line 43
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function SynchronizeOnClassLiteralNotGetClass(BugReporter) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/SynchronizingOnContentsOfFieldToProtectField.java
module edu::umd::cs::findbugs::detect::SynchronizingOnContentsOfFieldToProtectField
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 54
      protection public
      53 lines of code
      1 parameters
      15 conditional paths
      uses function getPrevOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 39
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function SynchronizingOnContentsOfFieldToProtectField(BugReporter) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/TestASM.java
module edu::umd::cs::findbugs::detect::TestASM
   inherits from edu::umd::cs::findbugs::asm::ClassNodeDetector
   function visitField(int,String,String,String,Object) in line 81
      protection public
      7 lines of code
      5 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::asm::ClassNodeDetector
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function visitMethod(final int,final String,final String,final String,final String[]) in line 48
      protection public
      31 lines of code
      5 parameters
      3 conditional paths
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::asm::ClassNodeDetector
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function TestASM(BugReporter) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::asm::ClassNodeDetector
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/TestDataflowAnalysis.java
module edu::umd::cs::findbugs::detect::TestDataflowAnalysis
   inherits from edu::umd::cs::findbugs::Detector2
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function finishPass() in line 64
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function getDetectorClassName() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initialize() in line 119
      47 lines of code
      0 parameters
      7 conditional paths
      uses variable initialized defined in edu::umd::cs::findbugs::detect::TestDataflowAnalysis
      uses variable dataflowClassName defined in edu::umd::cs::findbugs::detect::TestDataflowAnalysis
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function pluginIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getPluginLoader() defined in edu::umd::cs::findbugs::Plugin
      uses function getClassLoader() defined in edu::umd::cs::findbugs::PluginLoader
      uses function getErrorLogger() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable dataflowClass defined in edu::umd::cs::findbugs::detect::TestDataflowAnalysis
   function visitClass(ClassDescriptor) in line 78
      protection public
      40 lines of code
      1 parameters
      7 conditional paths
      uses variable dataflowClassName defined in edu::umd::cs::findbugs::detect::TestDataflowAnalysis
      uses variable initialized defined in edu::umd::cs::findbugs::detect::TestDataflowAnalysis
      uses function initialize() defined in edu::umd::cs::findbugs::detect::TestDataflowAnalysis
      uses variable dataflowClass defined in edu::umd::cs::findbugs::detect::TestDataflowAnalysis
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getXMethods() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable methodName defined in edu::umd::cs::findbugs::detect::TestDataflowAnalysis
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getNumIterations() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function print(PrintStream) defined in edu::umd::cs::findbugs::ba::CFGPrinter
   function TestDataflowAnalysis(BugReporter) in line 56
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable dataflowClassName defined in edu::umd::cs::findbugs::detect::TestDataflowAnalysis
      uses variable methodName defined in edu::umd::cs::findbugs::detect::TestDataflowAnalysis
   variable dataflowClass in line 53
   variable dataflowClassName in line 51
   variable initialized in line 54
   variable methodName in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/TestingGround.java
module edu::umd::cs::findbugs::detect::TestingGround
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function resetStateMachine() in line 221
      4 lines of code
      0 parameters
      1 conditional paths
   function sawBranchTo(int) in line 99
      protection public
      6 lines of code
      1 parameters
      3 conditional paths
      uses function resetStateMachine() defined in edu::umd::cs::findbugs::detect::TestingGround
   function sawOpcode(int) in line 117
      protection public
      100 lines of code
      1 parameters
      32 conditional paths
      uses function isReturn(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function resetStateMachine() defined in edu::umd::cs::findbugs::detect::TestingGround
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function usesConcurrency() defined in edu::umd::cs::findbugs::ba::XClass
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 48
      protection public
      9 lines of code
      1 parameters
      11 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function resetStateMachine() defined in edu::umd::cs::findbugs::detect::TestingGround
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
   function TestingGround(BugReporter) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/workflow/TestingGround.java
module edu::umd::cs::findbugs::workflow::TestingGround
   function execute() in line 44
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses function countBug(BugInstance) defined in edu::umd::cs::findbugs::ProjectPackagePrefixes
      uses function report() defined in edu::umd::cs::findbugs::ProjectPackagePrefixes
   function main(String[]) in line 67
      protection public
      20 lines of code
      1 parameters
      2 conditional paths
      uses function TestingGround() defined in edu::umd::cs::findbugs::workflow::TestingGround
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setBugCollection(BugCollection) defined in edu::umd::cs::findbugs::workflow::TestingGround
      uses function execute() defined in edu::umd::cs::findbugs::workflow::TestingGround
   function setBugCollection(BugCollection) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function TestingGround() in line 32
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function TestingGround(BugCollection) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::TestingGround::CommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 57
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 62
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/TrainFieldStoreTypes.java
module edu::umd::cs::findbugs::detect::TrainFieldStoreTypes
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::TrainingDetector
   function analyzeMethod(ClassContext,Method) in line 82
      51 lines of code
      2 parameters
      9 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isProtected() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable database defined in edu::umd::cs::findbugs::detect::TrainFieldStoreTypes
      uses function getProperty(KeyType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses function getFieldDescriptor() defined in edu::umd::cs::findbugs::ba::XField
      uses function setProperty(KeyType,ValueType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
   function report() in line 134
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::TrainFieldStoreTypes
      uses function purgeBoringEntries() defined in edu::umd::cs::findbugs::ba::type::FieldStoreTypeDatabase
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable DEFAULT_FILENAME defined in edu::umd::cs::findbugs::ba::type::FieldStoreTypeDatabase
   function visitClassContext(ClassContext) in line 64
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::TrainFieldStoreTypes
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::TrainFieldStoreTypes
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function TrainFieldStoreTypes(BugReporter) in line 59
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::TrainFieldStoreTypes
   variable bugReporter in line 56
   variable database in line 57
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/TrainNonNullAnnotations.java
module edu::umd::cs::findbugs::detect::TrainNonNullAnnotations
   inherits from edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::TrainingDetector
   function report() in line 60
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function TrainNonNullAnnotations(BugReporter) in line 45
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/TrainUnconditionalDerefParams.java
module edu::umd::cs::findbugs::detect::TrainUnconditionalDerefParams
   inherits from edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::TrainingDetector
   function report() in line 48
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable UNCONDITIONAL_DEREF_DB_FILENAME defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NONNULL_RETURN_DB_FILENAME defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function reportBug(BugInstance) in line 61
      4 lines of code
      1 parameters
      1 conditional paths
   function TrainUnconditionalDerefParams(BugReporter) in line 42
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   variable VERBOSE_DEBUG in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/UncallableMethodOfAnonymousClass.java
module edu::umd::cs::findbugs::detect::UncallableMethodOfAnonymousClass
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function doVisitMethod(Method) in line 152
      protection public
      32 lines of code
      1 parameters
      6 conditional paths
      uses variable SUPERCLASS_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable superclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable IMPLEMENTED_INTERFACE_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_DID_YOU_MEAN_TO_OVERRIDE defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function sawOpcode(int) in line 86
      protection public
      12 lines of code
      1 parameters
      10 conditional paths
      uses function getXMethodOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function findMatchingMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::ba::XClass
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function skip(Method) defined in edu::umd::cs::findbugs::detect::UncallableMethodOfAnonymousClass
   function skip(Method) in line 120
      28 lines of code
      1 parameters
      11 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getAnnotationDescriptors() defined in edu::umd::cs::findbugs::ba::XMethod
   function visit(Code) in line 185
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
   function visit(Method) in line 191
      protection public
      41 lines of code
      1 parameters
      9 conditional paths
      uses function skip(Method) defined in edu::umd::cs::findbugs::detect::UncallableMethodOfAnonymousClass
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isCalled(XMethod) defined in edu::umd::cs::findbugs::ba::XFactory
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitJavaClass(JavaClass) in line 55
      protection public
      15 lines of code
      1 parameters
      6 conditional paths
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function UncallableMethodOfAnonymousClass(BugReporter) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/UnnecessaryMath.java
module edu::umd::cs::findbugs::detect::UnnecessaryMath
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 112
      protection public
      36 lines of code
      1 parameters
      11 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
      uses variable constValue defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
      uses function getConstantRefOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable zeroMethods defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
      uses variable oneMethods defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
      uses variable anyMethods defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 101
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable state defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
   function UnnecessaryMath(BugReporter) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
   variable anyMethods in line 86
   variable bugReporter in line 49
   variable constValue in line 51
   variable oneMethods in line 74
   variable state in line 50
   variable zeroMethods in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/UnreadFields.java
module edu::umd::cs::findbugs::detect::UnreadFields
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function addClassFieldAndAccess(BugInstance,XField) in line 1006
      9 lines of code
      2 parameters
      3 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function classHasParameter(JavaClass) in line 210
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function getReadFields() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getWrittenFields() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isContainerField(XField) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isInjectionAttribute(String) in line 276
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
   function isReflexive(XField) in line 661
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isSeleniumWebElement(String) in line 257
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isWrittenDuringInitialization(XField) in line 135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isWrittenInConstructor(XField) in line 138
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isWrittenOutsideOfInitialization(XField) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function report() in line 667
      protection public
      335 lines of code
      0 parameters
      83 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isReflectiveClass(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function add(E) defined in edu::umd::cs::findbugs::util::Bag
      uses function getCount(E) defined in edu::umd::cs::findbugs::util::Bag
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassFieldAndAccess(BugInstance,XField) defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function classHasParameter(JavaClass) defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable thisClass defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getXFields() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses variable method defined in edu::umd::cs::findbugs::ProgramPoint
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getSourceLineAnnotation() defined in edu::umd::cs::findbugs::ProgramPoint
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function sawOpcode(int) in line 344
      protection public
      316 lines of code
      1 parameters
      87 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isReferenceType() defined in edu::umd::cs::findbugs::ba::XField
      uses function getFieldDescriptor() defined in edu::umd::cs::findbugs::ba::XField
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function equals(Object) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable previousOpcode defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses variable previousPreviousOpcode defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function visit(JavaClass) in line 157
      protection public
      52 lines of code
      1 parameters
      10 conditional paths
      uses function add(K,V) defined in edu::umd::cs::findbugs::util::MultiMap
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(Field) in line 237
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getFieldName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isSeleniumWebElement(String) defined in edu::umd::cs::findbugs::detect::UnreadFields
   function visit(ConstantValue) in line 292
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 305
      protection public
      18 lines of code
      1 parameters
      2 conditional paths
      uses variable previousOpcode defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses variable previousPreviousOpcode defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function visit(Method) in line 325
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitAfter(JavaClass) in line 219
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
   function visitAnnotation(String,Map< String, Object >,boolean) in line 262
      protection public
      10 lines of code
      3 parameters
      4 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isInjectionAttribute(String) defined in edu::umd::cs::findbugs::detect::UnreadFields
   function UnreadFields(BugReporter) in line 148
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function setUnreadFields(@NonNull UnreadFields) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   variable bugAccumulator in line 121
   variable bugReporter in line 120
   variable DEBUG in line 73
   variable previousOpcode in line 302
   variable previousPreviousOpcode in line 303
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/URLProblems.java
module edu::umd::cs::findbugs::detect::URLProblems
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 85
      protection public
      23 lines of code
      1 parameters
      4 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::URLProblems
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Signature) in line 55
      protection public
      16 lines of code
      1 parameters
      9 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::URLProblems
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::URLProblems
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function visitAfter(JavaClass) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::URLProblems
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function URLProblems(BugReporter) in line 45
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::URLProblems
   variable accumulator in line 43
   variable bugReporter in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/UselessSubclassMethod.java
module edu::umd::cs::findbugs::detect::UselessSubclassMethod
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function accessModifiersAreDifferent(Method,Method) in line 272
      6 lines of code
      2 parameters
      1 conditional paths
   function checkParm(int,int,int,int) in line 222
      14 lines of code
      4 parameters
      5 conditional paths
      uses variable curParmOffset defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable state defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function findSuperclassMethod(String,Method) in line 237
      34 lines of code
      2 parameters
      9 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable superclassName defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
   function sawOpcode(int) in line 144
      protection public
      77 lines of code
      1 parameters
      22 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable argTypes defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable curParmOffset defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable curParm defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function checkParm(int,int,int,int) defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable invokePC defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitAfter(JavaClass) in line 84
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable interfaceMethods defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
   function visitClassContext(ClassContext) in line 62
      protection public
      20 lines of code
      1 parameters
      5 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable superclassName defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable interfaceMethods defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitCode(Code) in line 103
      protection public
      39 lines of code
      1 parameters
      8 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable state defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable invokePC defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function findSuperclassMethod(String,Method) defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable superclassName defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function accessModifiersAreDifferent(Method,Method) defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitMethod(Method) in line 90
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses variable interfaceMethods defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
   function UselessSubclassMethod(BugReporter) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
   variable argTypes in line 52
   variable bugReporter in line 46
   variable curParm in line 49
   variable curParmOffset in line 50
   variable interfaceMethods in line 53
   variable invokePC in line 51
   variable state in line 48
   variable superclassName in line 47
module edu::umd::cs::findbugs::detect::UselessSubclassMethod::State
   variable SEEN_INVALID in line 43
      protection public
   variable SEEN_INVOKE in line 43
      protection public
   variable SEEN_LAST_PARM in line 43
      protection public
   variable SEEN_NOTHING in line 43
      protection public
   variable SEEN_PARM in line 43
      protection public
   variable SEEN_RETURN in line 43
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/UseObjectEquals.java
module edu::umd::cs::findbugs::detect::UseObjectEquals
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 45
      protection public
      33 lines of code
      1 parameters
      8 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getJavaClass() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UseObjectEquals
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function UseObjectEquals(BugReporter) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UseObjectEquals
   variable bugReporter in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/VarArgsProblems.java
module edu::umd::cs::findbugs::detect::VarArgsProblems
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 81
      protection public
      76 lines of code
      1 parameters
      19 conditional paths
      uses function getBranchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable state defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_GOTO defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_ICONST_1 defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable SEEN_ANEWARRAY defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_DUP defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_ICONST_0 defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_ALOAD defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_AASTORE defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function visitCode(Code) in line 57
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::VarArgsProblems
   function VarArgsProblems(BugReporter) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::VarArgsProblems
   variable bugReporter in line 46
   variable SEEN_AASTORE in line 74
      protection public
   variable SEEN_ALOAD in line 72
      protection public
   variable SEEN_ANEWARRAY in line 66
      protection public
   variable SEEN_DUP in line 68
      protection public
   variable SEEN_GOTO in line 76
      protection public
   variable SEEN_ICONST_0 in line 70
      protection public
   variable SEEN_ICONST_1 in line 64
      protection public
   variable SEEN_NOTHING in line 62
      protection public
   variable state in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/VolatileUsage.java
module edu::umd::cs::findbugs::detect::VolatileUsage
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function interesting(XField) in line 92
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function report() in line 76
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function interesting(XField) defined in edu::umd::cs::findbugs::detect::VolatileUsage
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::VolatileUsage
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function sawOpcode(int) in line 49
      protection public
      25 lines of code
      1 parameters
      7 conditional paths
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function interesting(XField) defined in edu::umd::cs::findbugs::detect::VolatileUsage
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitClassContext(ClassContext) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function VolatileUsage(BugReporter) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::VolatileUsage
   variable bugReporter in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/WaitInLoop.java
module edu::umd::cs::findbugs::detect::WaitInLoop
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function isConditionAwait() in line 95
      22 lines of code
      0 parameters
      7 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function isMonitorWait() in line 118
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function sawOpcode(int) in line 68
      protection public
      26 lines of code
      1 parameters
      5 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isMonitorWait() defined in edu::umd::cs::findbugs::detect::WaitInLoop
      uses function isConditionAwait() defined in edu::umd::cs::findbugs::detect::WaitInLoop
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 48
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::WaitInLoop
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function WaitInLoop(BugReporter) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::WaitInLoop
   variable bugReporter in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/WrongMapIterator.java
module edu::umd::cs::findbugs::detect::WrongMapIterator
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function getLoadStoreRegister(int,boolean) in line 237
      33 lines of code
      2 parameters
      15 conditional paths
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function implementsMap(ClassDescriptor) in line 90
      24 lines of code
      1 parameters
      6 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
   function sawOpcode(int) in line 116
      protection public
      120 lines of code
      1 parameters
      29 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_NOTHING defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable loadedRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses function getLoadStoreRegister(int,boolean) defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_MAP_LOAD1 defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function implementsMap(ClassDescriptor) defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses function getClassDescriptorOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable mapRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_KEYSET defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable keySetRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_KEYSET_STORE defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_ITERATOR defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable NEED_KEYSET_LOAD defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable iteratorRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_ITERATOR_STORE defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_ITERATOR_LOAD defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_NEXT defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_CHECKCAST_ON_NEXT defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable keyRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_KEY_STORE defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_MAP_LOAD2 defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_KEY_LOAD defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 69
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_NOTHING defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable loadedRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable mapRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable keySetRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable iteratorRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable keyRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
   function visit(Code) in line 79
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function WrongMapIterator(BugReporter) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable bugAccumulator in line 39
   variable iteratorRegister in line 58
   variable keyRegister in line 59
   variable keySetRegister in line 57
   variable loadedRegister in line 55
   variable mapRegister in line 56
   variable NEED_KEYSET_LOAD in line 50
   variable SAW_CHECKCAST_ON_NEXT in line 48
   variable SAW_ITERATOR in line 44
   variable SAW_ITERATOR_LOAD in line 46
   variable SAW_ITERATOR_STORE in line 45
   variable SAW_KEY_LOAD in line 52
   variable SAW_KEY_STORE in line 49
   variable SAW_KEYSET in line 42
   variable SAW_KEYSET_STORE in line 43
   variable SAW_MAP_LOAD1 in line 41
   variable SAW_MAP_LOAD2 in line 51
   variable SAW_NEXT in line 47
   variable SAW_NOTHING in line 40
   variable state in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/detect/XMLFactoryBypass.java
module edu::umd::cs::findbugs::detect::XMLFactoryBypass
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function samePackageBase(String,String) in line 109
      protection public
      15 lines of code
      2 parameters
      4 conditional paths
   function sawOpcode(int) in line 67
      protection public
      41 lines of code
      1 parameters
      11 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable rejectedXMLClasses defined in edu::umd::cs::findbugs::detect::XMLFactoryBypass
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function samePackageBase(String,String) defined in edu::umd::cs::findbugs::detect::XMLFactoryBypass
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable curClass defined in edu::umd::cs::findbugs::detect::XMLFactoryBypass
      uses variable xmlInterfaces defined in edu::umd::cs::findbugs::detect::XMLFactoryBypass
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::XMLFactoryBypass
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitClassContext(ClassContext) in line 61
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable curClass defined in edu::umd::cs::findbugs::detect::XMLFactoryBypass
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function XMLFactoryBypass(BugReporter) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::XMLFactoryBypass
   variable bugReporter in line 35
   variable curClass in line 54
   variable rejectedXMLClasses in line 53
   variable xmlInterfaces in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/Detector.java
module edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::Priorities
   function report() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/Detector2.java
module edu::umd::cs::findbugs::Detector2
   inherits from edu::umd::cs::findbugs::Priorities
   function finishPass() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDetectorClassName() in line 50
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function visitClass(ClassDescriptor) in line 38
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/DetectorFactory.java
module edu::umd::cs::findbugs::DetectorFactory
   function create(BugReporter) in line 334
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detectorCreator defined in edu::umd::cs::findbugs::DetectorFactory
   function createDetector2(BugReporter) in line 344
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detectorCreator defined in edu::umd::cs::findbugs::DetectorFactory
   function getDetailHTML() in line 313
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detailHTML defined in edu::umd::cs::findbugs::DetectorFactory
   function getFullName() in line 364
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detectorCreator defined in edu::umd::cs::findbugs::DetectorFactory
   function getPlugin() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::DetectorFactory
   function getPositionSpecifiedInPluginDescriptor() in line 161
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable positionSpecifiedInPluginDescriptor defined in edu::umd::cs::findbugs::DetectorFactory
   function getPriorityAdjustment() in line 274
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable enabledButNonReporting defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::DetectorFactory
   function getReportedBugPatternCodes() in line 289
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reports defined in edu::umd::cs::findbugs::DetectorFactory
   function getReportedBugPatterns() in line 298
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable reports defined in edu::umd::cs::findbugs::DetectorFactory
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::I18N
   function getShortName() in line 352
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable detectorCreator defined in edu::umd::cs::findbugs::DetectorFactory
   function getSpeed() in line 282
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable speed defined in edu::umd::cs::findbugs::DetectorFactory
   function isDefaultEnabled() in line 253
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable defEnabled defined in edu::umd::cs::findbugs::DetectorFactory
   function isDetectorClassSubtypeOf(Class<?>) in line 180
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detectorCreator defined in edu::umd::cs::findbugs::DetectorFactory
   function isEnabledForCurrentJRE() in line 203
      protection public
      28 lines of code
      0 parameters
      6 conditional paths
      uses variable requireJRE defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable DEBUG_JAVA_VERSION defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function isSameOrNewerThan(JavaVersion) defined in edu::umd::cs::findbugs::JavaVersion
   function isHidden() in line 246
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable hidden defined in edu::umd::cs::findbugs::DetectorFactory
   function isReportingDetector() in line 190
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function isDetectorClassSubtypeOf(Class<?>) defined in edu::umd::cs::findbugs::DetectorFactory
   function setDetailHTML(String) in line 320
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detailHTML defined in edu::umd::cs::findbugs::DetectorFactory
   function setEnabledButNonReporting(boolean) in line 265
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHidden(boolean) in line 239
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable hidden defined in edu::umd::cs::findbugs::DetectorFactory
   function setPositionSpecifiedInPluginDescriptor(int) in line 150
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable positionSpecifiedInPluginDescriptor defined in edu::umd::cs::findbugs::DetectorFactory
   function setPriorityAdjustment(int) in line 262
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::DetectorFactory
   function DetectorFactory(Plugin,Class<?>,boolean,String,String,String) in line 131
      protection public
      12 lines of code
      6 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable speed defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable reports defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable requireJRE defined in edu::umd::cs::findbugs::DetectorFactory
   variable constructorArgTypes in line 44
   variable DEBUG_JAVA_VERSION in line 42
   variable defEnabled in line 109
   variable detailHTML in line 113
   variable detectorCreator in line 107
   variable enabledButNonReporting in line 115
   variable hidden in line 116
   variable plugin in line 106
   variable positionSpecifiedInPluginDescriptor in line 108
   variable priorityAdjustment in line 114
   variable reports in line 111
   variable requireJRE in line 112
   variable speed in line 110
module edu::umd::cs::findbugs::DetectorFactory::ReflectionDetectorCreator
   function createDetector(BugReporter) in line 61
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
   function createDetector2(BugReporter) in line 78
      protection public
      22 lines of code
      1 parameters
      1 conditional paths
   function getDetectorClass() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable detectorClass in line 47
   variable setAnalysisContext in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/DetectorFactoryChooser.java
module edu::umd::cs::findbugs::DetectorFactoryChooser
   function choose(DetectorFactory) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function enable(DetectorFactory) in line 41
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/DetectorFactoryCollection.java
module edu::umd::cs::findbugs::DetectorFactoryCollection
   function determinePlugins() in line 210
      42 lines of code
      0 parameters
      8 conditional paths
      uses variable pluginList defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getFindBugsHome() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
   function ensureLoaded() in line 294
      protection public
      4 lines of code
      0 parameters
      19 conditional paths
      uses variable loaded defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function plugins() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable pluginByIdMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function loadPlugin(PluginLoader) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable corePlugin defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getPlugin() defined in edu::umd::cs::findbugs::PluginLoader
      uses variable ADJUST_FILENAME defined in edu::umd::cs::findbugs::BugRanker
      uses variable adjustmentBugRanker defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable pluginList defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function jawsDebugMessage(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function setPluginList(URL[]) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function determinePlugins() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function jawsErrorMessage(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
   function factoryIterator() in line 171
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function ensureLoaded() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable factoryList defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getFactory(String) in line 182
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function ensureLoaded() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable factoriesByName defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getFactoryByClassName(String) in line 194
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function ensureLoaded() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable factoriesByDetectorClassName defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable factoryList defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable factoriesByName defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getFindBugsHome() in line 282
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses function inferFindBugsHome() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getPluginById(String) in line 162
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function ensureLoaded() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable pluginByIdMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function inferFindBugsHome() in line 264
      17 lines of code
      0 parameters
      4 conditional paths
      uses variable findbugsJarNames defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function instance() in line 111
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable lock defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable theInstance defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function ensureLoaded() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function jawsDebugMessage(String) in line 432
      6 lines of code
      1 parameters
      3 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
   function jawsErrorMessage(String) in line 438
      6 lines of code
      1 parameters
      2 conditional paths
   function loadPlugin(PluginLoader) in line 445
      31 lines of code
      1 parameters
      5 conditional paths
      uses variable pluginByIdMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses function detectorFactoryIterator() defined in edu::umd::cs::findbugs::Plugin
      uses function jawsDebugMessage(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function bugPatternIterator() defined in edu::umd::cs::findbugs::Plugin
      uses function registerBugPattern(BugPattern) defined in edu::umd::cs::findbugs::I18N
      uses function bugCodeIterator() defined in edu::umd::cs::findbugs::Plugin
      uses function registerBugCode(BugCode) defined in edu::umd::cs::findbugs::I18N
   function pluginIterator() in line 134
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function ensureLoaded() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable pluginByIdMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function plugins() in line 141
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function ensureLoaded() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable pluginByIdMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable corePlugin defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable adjustmentBugRanker defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function rawInstance() in line 123
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable lock defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable theInstance defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function setPluginList(URL[]) in line 82
      protection public
      5 lines of code
      1 parameters
      3 conditional paths
      uses variable loaded defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable pluginList defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function instance() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable lock defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable theInstance defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   variable adjustmentBugRanker in line 55
   variable corePlugin in line 54
   variable factoriesByDetectorClassName in line 58
   variable factoriesByName in line 57
   variable factoryList in line 56
   variable findbugsJarNames in line 253
   variable loaded in line 63
   variable lock in line 62
   variable pluginByIdMap in line 53
   variable pluginList in line 65
   variable theInstance in line 61
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/DetectorToDetector2Adapter.java
module edu::umd::cs::findbugs::DetectorToDetector2Adapter
   inherits from edu::umd::cs::findbugs::Detector2
   function finishPass() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detector defined in edu::umd::cs::findbugs::DetectorToDetector2Adapter
      uses function report() defined in edu::umd::cs::findbugs::Detector
   function getDetectorClassName() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detector defined in edu::umd::cs::findbugs::DetectorToDetector2Adapter
   function visitClass(ClassDescriptor) in line 57
      protection public
      16 lines of code
      1 parameters
      2 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getProfiler() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses variable detector defined in edu::umd::cs::findbugs::DetectorToDetector2Adapter
      uses function visitClassContext(ClassContext) defined in edu::umd::cs::findbugs::Detector
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
   function DetectorToDetector2Adapter(Detector) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detector defined in edu::umd::cs::findbugs::DetectorToDetector2Adapter
   variable detector in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/DiscoverSourceDirectories.java
module edu::umd::cs::findbugs::DiscoverSourceDirectories
   function buildClassPath(IClassPathBuilder,IClassFactory) in line 248
      20 lines of code
      2 parameters
      3 conditional paths
      uses variable progress defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function startScanningArchives(int) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses variable project defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function getFileCount() defined in edu::umd::cs::findbugs::Project
      uses function getFileList() defined in edu::umd::cs::findbugs::Project
      uses function getAuxClasspathEntryList() defined in edu::umd::cs::findbugs::Project
      uses function doneScanningArchives() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
   function execute() in line 206
      protection public
      41 lines of code
      0 parameters
      5 conditional paths
      uses variable rootSourceDirectory defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses variable progress defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function startRecursiveDirectorySearch() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses function search() defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses function doneRecursiveDirectorySearch() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses function getDirectoriesScanned() defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses function createClassPathBuilder(IErrorLogger) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses variable errorLogger defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function buildClassPath(IClassPathBuilder,IClassFactory) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function findFullyQualifiedSourceFileNames(IClassPathBuilder,IClassPath) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses variable DEBUG defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function findSourceDirectoriesForAllSourceFiles(List< String >,List< String >) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function close() defined in edu::umd::cs::findbugs::classfile::IClassPath
   function findFullyQualifiedSourceFileName(IClassPath,ClassDescriptor) in line 269
      32 lines of code
      2 parameters
      3 conditional paths
      uses function openResource() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses function parse(final ClassNameAndSuperclassInfo.Builder) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM
      uses function getPackageName() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses function getSource() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses variable errorLogger defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable progress defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function finishClass() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
   function findFullyQualifiedSourceFileNames(IClassPathBuilder,IClassPath) in line 302
      23 lines of code
      2 parameters
      3 conditional paths
      uses function getAppClassList() defined in edu::umd::cs::findbugs::classfile::IClassPathBuilder
      uses variable progress defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function startScanningClasses(int) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses function findFullyQualifiedSourceFileName(IClassPath,ClassDescriptor) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses variable errorLogger defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function doneScanningClasses() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
   function findSourceDirectoriesForAllSourceFiles(List< String >,List< String >) in line 326
      34 lines of code
      2 parameters
      7 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses variable discoveredSourceDirectoryList defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
   function getDiscoveredSourceDirectoryList() in line 195
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable discoveredSourceDirectoryList defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
   function main(String[]) in line 364
      protection public
      94 lines of code
      1 parameters
      4 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses variable errorLogger defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function toString() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable progress defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function startRecursiveDirectorySearch() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses function doneRecursiveDirectorySearch() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses function startScanningArchives(int) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses function doneScanningArchives() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses function startScanningClasses(int) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses function finishClass() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses function doneScanningClasses() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses function finishArchive() defined in edu::umd::cs::findbugs::classfile::IClassPathBuilderProgress
      uses function startArchive(String) defined in edu::umd::cs::findbugs::classfile::IClassPathBuilderProgress
      uses function DiscoverSourceDirectories() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function setProject(Project) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function setRootSourceDirectory(String) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function setErrorLogger(IErrorLogger) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function setProgress(Progress) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function execute() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function getDiscoveredSourceDirectoryList() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
   function setErrorLogger(IErrorLogger) in line 176
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable errorLogger defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
   function setProgress(Progress) in line 185
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable progress defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
   function setProject(Project) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
   function setRootSourceDirectory(String) in line 154
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rootSourceDirectory defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
   function setScanForNestedArchives(boolean) in line 166
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable scanForNestedArchives defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
   function DiscoverSourceDirectories() in line 133
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG in line 57
   variable discoveredSourceDirectoryList in line 128
   variable errorLogger in line 126
   variable progress in line 127
   variable project in line 123
   variable rootSourceDirectory in line 124
   variable scanForNestedArchives in line 125
module edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
   inherits from edu::umd::cs::findbugs::classfile::IClassPathBuilderProgress
   function doneRecursiveDirectorySearch() in line 65
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function doneScanningArchives() in line 68
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function doneScanningClasses() in line 72
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function finishClass() in line 71
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function startRecursiveDirectorySearch() in line 64
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function startScanningArchives(int) in line 67
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function startScanningClasses(int) in line 70
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::DiscoverSourceDirectories::NoOpErrorLogger
   inherits from edu::umd::cs::findbugs::classfile::IErrorLogger
   function logError(String) in line 83
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function logError(String,Throwable) in line 86
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function reportMissingClass(ClassNotFoundException) in line 77
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function reportMissingClass(ClassDescriptor) in line 80
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function reportSkippedAnalysis(MethodDescriptor) in line 89
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::DiscoverSourceDirectories::NoOpProgress
   inherits from edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
   function doneRecursiveDirectorySearch() in line 115
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function doneScanningArchives() in line 97
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function doneScanningClasses() in line 106
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function finishArchive() in line 109
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function finishClass() in line 103
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function startArchive(String) in line 118
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function startRecursiveDirectorySearch() in line 112
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function startScanningArchives(int) in line 94
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function startScanningClasses(int) in line 100
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/EmacsBugReporter.java
module edu::umd::cs::findbugs::EmacsBugReporter
   inherits from edu::umd::cs::findbugs::TextUIBugReporter
   function doReportBug(BugInstance) in line 116
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable seenAlready defined in edu::umd::cs::findbugs::EmacsBugReporter
      uses function printBug(BugInstance) defined in edu::umd::cs::findbugs::EmacsBugReporter
      uses function notifyObservers(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function fileNameFor(final String,final String) in line 55
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getFullFileName() defined in edu::umd::cs::findbugs::ba::SourceFile
   function finish() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
   function getRealBugReporter() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function observeClass(ClassDescriptor) in line 44
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function fileNameFor(final String,final String) defined in edu::umd::cs::findbugs::EmacsBugReporter
      uses variable sourceFileNameCache defined in edu::umd::cs::findbugs::EmacsBugReporter
   function printBug(BugInstance) in line 67
      47 lines of code
      1 parameters
      9 conditional paths
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses variable sourceFileNameCache defined in edu::umd::cs::findbugs::EmacsBugReporter
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   variable seenAlready in line 40
   variable sourceFileNameCache in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ErrorCountingBugReporter.java
module edu::umd::cs::findbugs::ErrorCountingBugReporter
   inherits from edu::umd::cs::findbugs::DelegatingBugReporter
   function getBugCount() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCount defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function getErrorCount() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable errorCount defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function getMissingClassCount() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable missingClassCount defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function logError(String) in line 63
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable errorCount defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function reportMissingClass(ClassNotFoundException) in line 69
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable missingClassSet defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
      uses variable missingClassCount defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function ErrorCountingBugReporter(BugReporter) in line 34
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
      uses function addObserver(BugReporterObserver) defined in edu::umd::cs::findbugs::BugReporter
      uses function reportBug(BugInstance) defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses variable bugCount defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   variable bugCount in line 29
   variable errorCount in line 31
   variable missingClassCount in line 30
   variable missingClassSet in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ExcludingHashesBugReporter.java
module edu::umd::cs::findbugs::ExcludingHashesBugReporter
   inherits from edu::umd::cs::findbugs::DelegatingBugReporter
   function addToExcludedInstanceHashes(Set< String >,String) in line 48
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
   function reportBug(BugInstance) in line 57
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getInstanceHash() defined in edu::umd::cs::findbugs::BugInstance
      uses function getDelegate() defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function ExcludingHashesBugReporter(BugReporter,String) in line 39
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function addToExcludedInstanceHashes(Set< String >,String) defined in edu::umd::cs::findbugs::ExcludingHashesBugReporter
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ExitCodes.java
module edu::umd::cs::findbugs::ExitCodes
   variable BUGS_FOUND_FLAG in line 41
      protection public
   variable ERROR_FLAG in line 31
      protection public
   variable MISSING_CLASS_FLAG in line 36
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/FatalException.java
module edu::umd::cs::findbugs::FatalException
   inherits from RuntimeException
   function FatalException(String) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function FatalException(String,Throwable) in line 45
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/FieldAnnotation.java
module edu::umd::cs::findbugs::FieldAnnotation
   inherits from edu::umd::cs::findbugs::PackageMemberAnnotation
   function accept(BugAnnotationVisitor) in line 226
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitFieldAnnotation(FieldAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function compareTo(BugAnnotation) in line 288
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function FieldAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
   function equals(Object) in line 278
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function FieldAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::FieldAnnotation
   function formatPackageMember(String,ClassAnnotation) in line 231
      25 lines of code
      2 parameters
      7 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getNameInClass(ClassAnnotation) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function parseNext() defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function fromBCELField(@DottedClassName String,Field) in line 137
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function FieldAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function fromBCELField(JavaClass,Field) in line 147
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function FieldAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
   function fromFieldDescriptor(FieldDescriptor) in line 157
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function FieldAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function fromReferencedField(DismantleBytecode) in line 123
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function FieldAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRefFieldIsStatic() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function fromVisitedField(PreorderVisitor) in line 109
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function FieldAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldIsStatic() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function fromXField(XField) in line 165
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function FieldAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSourceSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function getFieldName() in line 176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
   function getFieldSignature() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
   function getNameInClass(ClassAnnotation) in line 261
      10 lines of code
      1 parameters
      4 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function getSourceLines() in line 306
      protection public
      18 lines of code
      0 parameters
      4 conditional paths
      uses variable sourceLines defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable sourceFileName defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function getSourceInfoMap() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getFieldLine(String,String) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
   function hashCode() in line 273
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
   function isRead(Instruction,ConstantPoolGen) in line 201
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function FieldAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
   function isStatic() in line 190
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isWrite(Instruction,ConstantPoolGen) in line 217
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function FieldAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
   function writeXML(XMLOutput) in line 331
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean,boolean) in line 335
      protection public
      24 lines of code
      3 parameters
      5 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getFieldName() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getFieldSignature() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSourceSig defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getSourceLines() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable MESSAGE_TAG defined in edu::umd::cs::findbugs::BugAnnotation
      uses function toString() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function FieldAnnotation(@DottedClassName String,String,String,boolean) in line 76
      protection public
      10 lines of code
      4 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::FieldAnnotation
   function FieldAnnotation(@DottedClassName String,String,String,String,boolean) in line 87
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSourceSig defined in edu::umd::cs::findbugs::FieldAnnotation
   function FieldAnnotation(@DottedClassName String,String,String,int) in line 99
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
   variable ARGUMENT_ROLE in line 62
      protection public
   variable DEFAULT_ROLE in line 55
      protection public
   variable DID_YOU_MEAN_ROLE in line 57
      protection public
   variable ELEMENT_NAME in line 329
   variable fieldName in line 64
   variable fieldSig in line 65
   variable fieldSourceSig in line 66
   variable INVOKED_ON_ROLE in line 61
      protection public
   variable isStatic in line 67
   variable LOADED_FROM_ROLE in line 59
      protection public
   variable serialVersionUID in line 53
   variable STORED_ROLE in line 60
      protection public
   variable VALUE_OF_ROLE in line 58
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/FieldWarningSuppressor.java
module edu::umd::cs::findbugs::FieldWarningSuppressor
   inherits from edu::umd::cs::findbugs::ClassWarningSuppressor
   function match(BugInstance) in line 14
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
      uses function equals(Object) defined in edu::umd::cs::findbugs::FieldAnnotation
   function FieldWarningSuppressor(String,ClassAnnotation,FieldAnnotation) in line 9
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/filter/AndMatcher.java
module edu::umd::cs::findbugs::filter::AndMatcher
   inherits from edu::umd::cs::findbugs::filter::CompoundMatcher
   function anyMatches() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function match(BugInstance) in line 34
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
      uses function anyMatches() defined in edu::umd::cs::findbugs::filter::AndMatcher
   function toString() in line 58
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses function numberChildren() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function writeXML(XMLOutput,boolean) in line 45
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses function numberChildren() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/filter/BugMatcher.java
module edu::umd::cs::findbugs::filter::BugMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function addAttribute(XMLOutput,String,StringSetMatch) in line 87
      protection public
      5 lines of code
      3 parameters
      2 conditional paths
   function equals(Object) in line 72
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function BugMatcher(String,String,String) defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable codes defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses function equals(Object) defined in edu::umd::cs::findbugs::filter::StringSetMatch
      uses variable patterns defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable categories defined in edu::umd::cs::findbugs::filter::BugMatcher
   function hashCode() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codes defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses function hashCode() defined in edu::umd::cs::findbugs::filter::StringSetMatch
      uses variable patterns defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable categories defined in edu::umd::cs::findbugs::filter::BugMatcher
   function match(BugInstance) in line 58
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable codes defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses function match(String) defined in edu::umd::cs::findbugs::filter::StringSetMatch
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugInstance
      uses variable patterns defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses variable categories defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses variable DEBUG defined in edu::umd::cs::findbugs::filter::BugMatcher
   function toString() in line 92
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses variable codes defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses function isEmpty() defined in edu::umd::cs::findbugs::filter::StringSetMatch
      uses variable patterns defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable categories defined in edu::umd::cs::findbugs::filter::BugMatcher
   function writeXML(XMLOutput,boolean) in line 77
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(XMLOutput,String,StringSetMatch) defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable codes defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable patterns defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable categories defined in edu::umd::cs::findbugs::filter::BugMatcher
   function BugMatcher(String,String,String) in line 52
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable codes defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable patterns defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable categories defined in edu::umd::cs::findbugs::filter::BugMatcher
   variable categories in line 40
   variable codes in line 36
   variable DEBUG in line 34
   variable patterns in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/filter/ClassMatcher.java
module edu::umd::cs::findbugs::filter::ClassMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 44
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable className defined in edu::umd::cs::findbugs::filter::ClassMatcher
      uses function match(String) defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable DEBUG defined in edu::umd::cs::findbugs::filter::ClassMatcher
   function toString() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::filter::ClassMatcher
      uses function getValue() defined in edu::umd::cs::findbugs::filter::NameMatch
   function writeXML(XMLOutput,boolean) in line 51
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable className defined in edu::umd::cs::findbugs::filter::ClassMatcher
      uses function getSpec() defined in edu::umd::cs::findbugs::filter::NameMatch
   function ClassMatcher(String) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::filter::ClassMatcher
   variable className in line 33
   variable DEBUG in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/filter/CompoundMatcher.java
module edu::umd::cs::findbugs::filter::CompoundMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   abstract class
   function addChild(Matcher) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function childIterator() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function clear() in line 56
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function equals(Object) in line 41
      protection public
      6 lines of code
      1 parameters
      3 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function getChildren() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function hashCode() in line 34
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function numberChildren() in line 47
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function removeChild(Matcher) in line 53
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function toString() in line 72
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function writeChildrenXML(XMLOutput) in line 66
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   variable children in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/CompoundMatcher.java
module edu::umd::cs::findbugs::gui2::CompoundMatcher
   inherits from java::util::HashSet
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 39
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
   function writeXML(XMLOutput,boolean) in line 47
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/filter/DesignationMatcher.java
module edu::umd::cs::findbugs::filter::DesignationMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function addAttribute(XMLOutput,String,StringSetMatch) in line 72
      protection public
      5 lines of code
      3 parameters
      2 conditional paths
   function equals(Object) in line 60
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function DesignationMatcher(String) defined in edu::umd::cs::findbugs::filter::DesignationMatcher
      uses variable designations defined in edu::umd::cs::findbugs::filter::DesignationMatcher
      uses function equals(Object) defined in edu::umd::cs::findbugs::filter::StringSetMatch
   function hashCode() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable designations defined in edu::umd::cs::findbugs::filter::DesignationMatcher
      uses function hashCode() defined in edu::umd::cs::findbugs::filter::StringSetMatch
   function match(BugInstance) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable designations defined in edu::umd::cs::findbugs::filter::DesignationMatcher
      uses function match(String) defined in edu::umd::cs::findbugs::filter::StringSetMatch
      uses function getUserDesignationKey() defined in edu::umd::cs::findbugs::BugInstance
   function toString() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable designations defined in edu::umd::cs::findbugs::filter::DesignationMatcher
   function writeXML(XMLOutput,boolean) in line 65
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(XMLOutput,String,StringSetMatch) defined in edu::umd::cs::findbugs::filter::DesignationMatcher
      uses variable designations defined in edu::umd::cs::findbugs::filter::DesignationMatcher
   function DesignationMatcher(String) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable designations defined in edu::umd::cs::findbugs::filter::DesignationMatcher
   variable designations in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/filter/FieldMatcher.java
module edu::umd::cs::findbugs::filter::FieldMatcher
   inherits from edu::umd::cs::findbugs::filter::MemberMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 45
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function match(String) defined in edu::umd::cs::findbugs::filter::NameMatch
      uses function getFieldName() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function getFieldSignature() defined in edu::umd::cs::findbugs::FieldAnnotation
   function toString() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 58
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function getSpec() defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function FieldMatcher(String) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function FieldMatcher(String,String) in line 38
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/filter/Filter.java
module edu::umd::cs::findbugs::filter::Filter
   inherits from edu::umd::cs::findbugs::filter::OrMatcher
   function addChild(Matcher) in line 145
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function enable(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
   function clear() in line 155
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable disabled defined in edu::umd::cs::findbugs::filter::Filter
   function contains(Matcher) in line 133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function disable(Matcher) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable disabled defined in edu::umd::cs::findbugs::filter::Filter
   function enable(Matcher) in line 109
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable disabled defined in edu::umd::cs::findbugs::filter::Filter
   function equals(Object) in line 79
      protection public
      15 lines of code
      1 parameters
      7 conditional paths
      uses function Filter() defined in edu::umd::cs::findbugs::filter::Filter
      uses variable disabled defined in edu::umd::cs::findbugs::filter::Filter
   function getMatcher(Element) in line 255
      78 lines of code
      1 parameters
      21 conditional paths
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function hashCode() in line 71
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable disabled defined in edu::umd::cs::findbugs::filter::Filter
   function isEmpty() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isEnabled(Matcher) in line 106
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable disabled defined in edu::umd::cs::findbugs::filter::Filter
   function main(String[]) in line 334
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function Filter() defined in edu::umd::cs::findbugs::filter::Filter
      uses function writeAsXML(@WillClose OutputStream) defined in edu::umd::cs::findbugs::filter::Filter
   function match(BugInstance) in line 160
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function isEnabled(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
   function parse(String) in line 179
      68 lines of code
      1 parameters
      12 conditional paths
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses variable DEBUG defined in edu::umd::cs::findbugs::filter::Filter
      uses function getMatcher(Element) defined in edu::umd::cs::findbugs::filter::Filter
      uses function numberChildren() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
   function parseFilter(String) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function Filter() defined in edu::umd::cs::findbugs::filter::Filter
   function removeChild(Matcher) in line 150
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function enable(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
   function setEnabled(Matcher,boolean) in line 99
      protection public
      4 lines of code
      2 parameters
      2 conditional paths
      uses function enable(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses function disable(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
   function softAdd(Matcher) in line 141
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeAsXML(@WillClose OutputStream) in line 349
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function beginDocument() defined in edu::umd::cs::findbugs::xml::XMLOutput
      uses function openTag(String) defined in edu::umd::cs::findbugs::xml::XMLOutput
      uses function writeBodyAsXML(XMLOutput) defined in edu::umd::cs::findbugs::filter::Filter
      uses function closeTag(String) defined in edu::umd::cs::findbugs::xml::XMLOutput
      uses function finish() defined in edu::umd::cs::findbugs::xml::XMLOutput
   function writeBodyAsXML(XMLOutput) in line 383
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function writeXML(XMLOutput,boolean) defined in edu::umd::cs::findbugs::filter::Matcher
      uses variable disabled defined in edu::umd::cs::findbugs::filter::Filter
   function writeEnabledMatchersAsXML(@WillClose OutputStream) in line 362
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses function beginDocument() defined in edu::umd::cs::findbugs::xml::XMLOutput
      uses function openTag(String) defined in edu::umd::cs::findbugs::xml::XMLOutput
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses variable disabled defined in edu::umd::cs::findbugs::filter::Filter
      uses function writeXML(XMLOutput,boolean) defined in edu::umd::cs::findbugs::filter::Matcher
      uses function closeTag(String) defined in edu::umd::cs::findbugs::xml::XMLOutput
      uses function finish() defined in edu::umd::cs::findbugs::xml::XMLOutput
   function Filter() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Filter(String) in line 123
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function parse(String) defined in edu::umd::cs::findbugs::filter::Filter
   variable DEBUG in line 58
   variable disabled in line 60
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/workflow/Filter.java
module edu::umd::cs::findbugs::workflow::Filter
   function main(String[]) in line 458
      protection public
      64 lines of code
      1 parameters
      13 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function createEmptyCollectionWithMetadata() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProject() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setWithMessages(boolean) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function computeBugHashes() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function clearBugCounts() defined in edu::umd::cs::findbugs::ProjectStats
      uses function purgeClassesThatDontMatch(Pattern) defined in edu::umd::cs::findbugs::ProjectStats
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function addBug(BugInstance) defined in edu::umd::cs::findbugs::ProjectStats
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function findSource(SourceLineAnnotation) defined in edu::umd::cs::findbugs::workflow::SourceSearcher
      uses function recomputeFromClassStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function writeXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function parsePriority(String) in line 447
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
module edu::umd::cs::findbugs::workflow::Filter::FilterCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function addCategoryKey(String) in line 346
      12 lines of code
      1 parameters
      1 conditional paths
   function addDesignationKey(String) in line 332
      14 lines of code
      1 parameters
      1 conditional paths
   function bugLiveAt(BugInstance,long) in line 358
      7 lines of code
      2 parameters
      1 conditional paths
   function getAppropriateSeq(SortedMap< Long, AppVersion >,long,boolean) in line 209
      11 lines of code
      3 parameters
      1 conditional paths
   function handleOption(String,String) in line 367
      8 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 388
      55 lines of code
      2 parameters
      1 conditional paths
   function setField(String,boolean) in line 376
      11 lines of code
      2 parameters
      1 conditional paths
   variable active in line 88
      protection public
   variable activeSpecified in line 87
      protection public
   variable applySuppression in line 96
      protection public
   variable applySuppressionSpecified in line 97
      protection public
   variable dontUpdateStats in line 118
      protection public
   variable dontUpdateStatsSpecified in line 119
      protection public
   variable excludeFilter in line 126
   variable hasField in line 90
      protection public
   variable hasFieldSpecified in line 91
      protection public
   variable hashChanged in line 112
      protection public
   variable hashChangedSpecified in line 113
      protection public
   variable hasLocal in line 93
      protection public
   variable hasLocalSpecified in line 94
      protection public
   variable includeFilter in line 125
   variable introducedByChange in line 103
      protection public
   variable introducedByChangeSpecified in line 104
      protection public
   variable knownSource in line 101
      protection public
   variable knownSourceSpecified in line 102
      protection public
   variable MILLISECONDS_PER_DAY in line 67
      protection public
   variable newCode in line 109
      protection public
   variable newCodeSpecified in line 110
      protection public
   variable not in line 70
      protection public
   variable notSpecified in line 69
      protection public
   variable removedByChange in line 106
      protection public
   variable removedByChangeSpecified in line 107
      protection public
   variable removedCode in line 115
      protection public
   variable removedCodeSpecified in line 116
      protection public
   variable withMessages in line 123
      protection public
   variable withMessagesSpecified in line 122
      protection public
   variable withSource in line 99
      protection public
   variable withSourceSpecified in line 100
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/filter/FilterException.java
module edu::umd::cs::findbugs::filter::FilterException
   inherits from RuntimeException
   function FilterException(String) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function FilterException(String,Throwable) in line 29
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/filter/FirstVersionMatcher.java
module edu::umd::cs::findbugs::filter::FirstVersionMatcher
   inherits from edu::umd::cs::findbugs::filter::VersionMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses function check(T,T) defined in edu::umd::cs::findbugs::filter::RelationalOp
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
   function toString() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
   function writeXML(XMLOutput,boolean) in line 48
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses function getName() defined in edu::umd::cs::findbugs::filter::RelationalOp
   function FirstVersionMatcher(String,String) in line 31
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function FirstVersionMatcher(String,RelationalOp) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
   function FirstVersionMatcher(long,RelationalOp) in line 38
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/filter/LastVersionMatcher.java
module edu::umd::cs::findbugs::filter::LastVersionMatcher
   inherits from edu::umd::cs::findbugs::filter::VersionMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses function check(T,T) defined in edu::umd::cs::findbugs::filter::RelationalOp
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
   function toString() in line 55
      protection public
      5 lines of code
      0 parameters
      3 conditional paths
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable EQ defined in edu::umd::cs::findbugs::filter::RelationalOp
      uses variable NEQ defined in edu::umd::cs::findbugs::filter::RelationalOp
   function writeXML(XMLOutput,boolean) in line 48
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses function getName() defined in edu::umd::cs::findbugs::filter::RelationalOp
   function LastVersionMatcher(String,String) in line 35
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function LastVersionMatcher(String,RelationalOp) in line 38
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
   function LastVersionMatcher(long,RelationalOp) in line 41
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
   variable DEAD_BUG_MATCHER in line 32
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/filter/LocalMatcher.java
module edu::umd::cs::findbugs::filter::LocalMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 45
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function getPrimaryLocalVariableAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses variable name defined in edu::umd::cs::findbugs::filter::LocalMatcher
      uses function match(String) defined in edu::umd::cs::findbugs::filter::NameMatch
      uses function getName() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function toString() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::LocalMatcher
   function writeXML(XMLOutput,boolean) in line 55
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable name defined in edu::umd::cs::findbugs::filter::LocalMatcher
      uses function getSpec() defined in edu::umd::cs::findbugs::filter::NameMatch
   function LocalMatcher(String) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::LocalMatcher
   function LocalMatcher(String,String) in line 37
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::LocalMatcher
   variable name in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/filter/Matcher.java
module edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 40
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 42
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/filter/MemberMatcher.java
module edu::umd::cs::findbugs::filter::MemberMatcher
   function equals(Object) in line 77
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function MemberMatcher(String) defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function equals(Object) defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function hashCode() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function hashCode() defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function toString() in line 55
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function isUniversal() defined in edu::umd::cs::findbugs::filter::NameMatch
      uses function getSpec() defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function MemberMatcher(String) in line 35
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function MemberMatcher(String,String) in line 40
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
   variable name in line 30
   variable signature in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/filter/MethodMatcher.java
module edu::umd::cs::findbugs::filter::MethodMatcher
   inherits from edu::umd::cs::findbugs::filter::MemberMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 39
      protection public
      10 lines of code
      1 parameters
      4 conditional paths
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function match(String) defined in edu::umd::cs::findbugs::filter::NameMatch
      uses function getMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function getMethodSignature() defined in edu::umd::cs::findbugs::MethodAnnotation
   function toString() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 54
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function getSpec() defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function MethodMatcher(String) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function MethodMatcher(String,String,String) in line 35
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/filter/NameMatch.java
module edu::umd::cs::findbugs::filter::NameMatch
   function equals(Object) in line 59
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable spec defined in edu::umd::cs::findbugs::filter::NameMatch
   function getSpec() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable spec defined in edu::umd::cs::findbugs::filter::NameMatch
   function getValue() in line 63
      protection public
      5 lines of code
      0 parameters
      3 conditional paths
      uses variable exact defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable pattern defined in edu::umd::cs::findbugs::filter::NameMatch
   function hashCode() in line 50
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable spec defined in edu::umd::cs::findbugs::filter::NameMatch
   function isUniversal() in line 54
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable spec defined in edu::umd::cs::findbugs::filter::NameMatch
   function match(String) in line 79
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable exact defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable pattern defined in edu::umd::cs::findbugs::filter::NameMatch
   function toString() in line 88
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
      uses variable exact defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable pattern defined in edu::umd::cs::findbugs::filter::NameMatch
   function NameMatch(String) in line 68
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable spec defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable pattern defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable exact defined in edu::umd::cs::findbugs::filter::NameMatch
   variable exact in line 45
   variable pattern in line 47
   variable spec in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/filter/OrMatcher.java
module edu::umd::cs::findbugs::filter::OrMatcher
   inherits from edu::umd::cs::findbugs::filter::CompoundMatcher
   function match(BugInstance) in line 31
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
   function toString() in line 53
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses function numberChildren() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function writeXML(XMLOutput,boolean) in line 41
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function numberChildren() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function writeChildrenXML(XMLOutput) defined in edu::umd::cs::findbugs::filter::CompoundMatcher
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/filter/PriorityMatcher.java
module edu::umd::cs::findbugs::filter::PriorityMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function equals(Object) in line 54
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function PriorityMatcher(String) defined in edu::umd::cs::findbugs::filter::PriorityMatcher
      uses variable priority defined in edu::umd::cs::findbugs::filter::PriorityMatcher
   function hashCode() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::filter::PriorityMatcher
   function match(BugInstance) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable priority defined in edu::umd::cs::findbugs::filter::PriorityMatcher
   function toString() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::filter::PriorityMatcher
   function writeXML(XMLOutput,boolean) in line 62
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable priority defined in edu::umd::cs::findbugs::filter::PriorityMatcher
   function PriorityMatcher(String) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable priority in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/filter/RelationalOp.java
module edu::umd::cs::findbugs::filter::RelationalOp
   abstract class
   function byName(String) in line 37
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::filter::RelationalOp
   function check(T,T) in line 31
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getName() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function values() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::filter::RelationalOp
   function RelationalOp(String) in line 50
      3 lines of code
      1 parameters
      1 conditional paths
   function RelationalOp(String,String) in line 53
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::filter::RelationalOp
   variable EQ in line 67
      protection public
   variable GEQ in line 91
      protection public
   variable GT in line 107
      protection public
   variable LEQ in line 75
      protection public
   variable LT in line 99
      protection public
   variable map in line 36
   variable NEQ in line 83
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/filter/SignatureUtil.java
module edu::umd::cs::findbugs::filter::SignatureUtil
   function createFieldSignature(String) in line 51
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function typeToSignature(String) defined in edu::umd::cs::findbugs::filter::SignatureUtil
   function createMethodSignature(String,String) in line 29
      protection public
      21 lines of code
      2 parameters
      5 conditional paths
      uses function typeToSignature(String) defined in edu::umd::cs::findbugs::filter::SignatureUtil
   function scalarTypeToSiganture(String) in line 64
      22 lines of code
      1 parameters
      10 conditional paths
   function typeToSignature(String) in line 56
      7 lines of code
      1 parameters
      2 conditional paths
      uses function scalarTypeToSiganture(String) defined in edu::umd::cs::findbugs::filter::SignatureUtil
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/filter/StringSetMatch.java
module edu::umd::cs::findbugs::filter::StringSetMatch
   function equals(Object) in line 42
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable strings defined in edu::umd::cs::findbugs::filter::StringSetMatch
   function hashCode() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable strings defined in edu::umd::cs::findbugs::filter::StringSetMatch
   function isEmpty() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable strings defined in edu::umd::cs::findbugs::filter::StringSetMatch
   function match(String) in line 69
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable strings defined in edu::umd::cs::findbugs::filter::StringSetMatch
   function toString() in line 74
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
      uses variable strings defined in edu::umd::cs::findbugs::filter::StringSetMatch
   function StringSetMatch(String) in line 51
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable strings defined in edu::umd::cs::findbugs::filter::StringSetMatch
   variable strings in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/filter/VersionMatcher.java
module edu::umd::cs::findbugs::filter::VersionMatcher
   function equals(Object) in line 37
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function VersionMatcher(long,@NonNull RelationalOp) defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
   function hashCode() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
   function VersionMatcher(long,@NonNull RelationalOp) in line 43
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
   variable relOp in line 30
   variable version in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/FilterBugReporter.java
module edu::umd::cs::findbugs::FilterBugReporter
   inherits from edu::umd::cs::findbugs::DelegatingBugReporter
   function reportBug(BugInstance) in line 37
      protection public
      7 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FilterBugReporter
      uses variable filter defined in edu::umd::cs::findbugs::FilterBugReporter
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
      uses variable include defined in edu::umd::cs::findbugs::FilterBugReporter
      uses function getDelegate() defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function FilterBugReporter(BugReporter,Matcher,boolean) in line 30
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable filter defined in edu::umd::cs::findbugs::FilterBugReporter
      uses variable include defined in edu::umd::cs::findbugs::FilterBugReporter
   variable DEBUG in line 25
   variable filter in line 27
   variable include in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/FindBugs.java
module edu::umd::cs::findbugs::FindBugs
   abstract class
   function configureBaselineFilter(DelegatingBugReporter,String) in line 442
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function configureBugCollection(IFindBugsEngine) in line 455
      protection public
      23 lines of code
      1 parameters
      4 conditional paths
      uses function getBugReporter() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function getRealBugReporter() defined in edu::umd::cs::findbugs::BugReporter
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function getReleaseName() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function getProject() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function getProjectName() defined in edu::umd::cs::findbugs::Project
      uses function setProjectName(String) defined in edu::umd::cs::findbugs::Project
      uses function getProjectName() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function getTimestamp() defined in edu::umd::cs::findbugs::Project
      uses function validTimestamp(long) defined in edu::umd::cs::findbugs::FindBugs
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function setTimestamp(String) defined in edu::umd::cs::findbugs::ProjectStats
   function configureFilter(DelegatingBugReporter,String,boolean) in line 426
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
   function configureTrainingDatabases(IFindBugsEngine) in line 180
      protection public
      24 lines of code
      1 parameters
      5 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getHome() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable home defined in edu::umd::cs::findbugs::FindBugs
   function handleBugCategories(UserPreferences,String) in line 267
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
   function isDetectorEnabled(IFindBugsEngine,DetectorFactory,int) in line 213
      protection public
      44 lines of code
      3 parameters
      12 conditional paths
      uses function getPlugin() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function isEnabled() defined in edu::umd::cs::findbugs::Plugin
      uses function getUserPreferences() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function isDetectorEnabled(DetectorFactory) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function isEnabledForCurrentJRE() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable INTERPROCEDURAL_ANALYSIS defined in edu::umd::cs::findbugs::FindBugsAnalysisFeatures
      uses function isDetectorClassSubtypeOf(Class<?>) defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getReportedBugPatterns() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function emitTrainingOutput() defined in edu::umd::cs::findbugs::IFindBugsEngine
   function processCommandLine(TextUICommandLine,String[],IFindBugsEngine) in line 287
      protection public
      34 lines of code
      3 parameters
      5 conditional paths
      uses function showHelp(TextUICommandLine) defined in edu::umd::cs::findbugs::FindBugs
      uses function addFile(String) defined in edu::umd::cs::findbugs::Project
      uses function getFileCount() defined in edu::umd::cs::findbugs::Project
   function runMain(IFindBugsEngine,TextUICommandLine) in line 345
      protection public
      47 lines of code
      2 parameters
      10 conditional paths
      uses variable ERROR_FLAG defined in edu::umd::cs::findbugs::ExitCodes
      uses variable MISSING_CLASS_FLAG defined in edu::umd::cs::findbugs::ExitCodes
      uses variable BUGS_FOUND_FLAG defined in edu::umd::cs::findbugs::ExitCodes
   function setHome(String) in line 163
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable home defined in edu::umd::cs::findbugs::FindBugs
   function showCommandLineOptions() in line 396
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function showCommandLineOptions(TextUICommandLine) in line 405
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function printUsage(OutputStream) defined in edu::umd::cs::findbugs::config::CommandLine
   function showHelp(TextUICommandLine) in line 328
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function showSynopsis() defined in edu::umd::cs::findbugs::FindBugs
      uses function showCommandLineOptions() defined in edu::umd::cs::findbugs::FindBugs
   function showSynopsis() in line 413
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function validTimestamp(long) in line 485
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable MINIMUM_TIMESTAMP defined in edu::umd::cs::findbugs::FindBugs
   variable DEBUG in line 134
      protection public
   variable DEFAULT_EFFORT in line 86
      protection public
   variable home in line 143
   variable knownURLProtocolSet in line 152
      protection public
   variable LESS_EFFORT in line 70
      protection public
   variable MAX_EFFORT in line 118
      protection public
   variable MIN_EFFORT in line 54
      protection public
   variable MINIMUM_TIMESTAMP in line 479
      protection public
   variable MORE_EFFORT in line 102
      protection public
   variable noAnalysis in line 145
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/FindBugs2.java
module edu::umd::cs::findbugs::FindBugs2
   inherits from edu::umd::cs::findbugs::IFindBugsEngine2
   function addClassObserver(IClassObserver) in line 303
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classObserverList defined in edu::umd::cs::findbugs::FindBugs2
   function addFilter(String,boolean) in line 310
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
   function analyzeApplication() in line 855
      162 lines of code
      0 parameters
      24 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function getProjectStats() defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function getProfiler() defined in edu::umd::cs::findbugs::ProjectStats
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable executionPlan defined in edu::umd::cs::findbugs::FindBugs2
      uses function getNumPasses() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable referencedClassSet defined in edu::umd::cs::findbugs::FindBugs2
      uses variable appClassList defined in edu::umd::cs::findbugs::FindBugs2
      uses variable progress defined in edu::umd::cs::findbugs::FindBugs2
      uses function predictPassCount(int   []) defined in edu::umd::cs::findbugs::FindBugsProgress
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function intern(XClass) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function setReferencedClasses(int) defined in edu::umd::cs::findbugs::ProjectStats
      uses function passIterator() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function instantiateDetector2sInPass(BugReporter) defined in edu::umd::cs::findbugs::plan::AnalysisPass
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs2
      uses variable LIST_ORDER defined in edu::umd::cs::findbugs::FindBugs2
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function sortByCallGraph(Collection< ClassDescriptor >,OutEdges< ClassDescriptor >) defined in edu::umd::cs::findbugs::FindBugs2
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function startAnalysis(int) defined in edu::umd::cs::findbugs::FindBugsProgress
      uses function purgeAllMethodAnalysis() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable SCREEN_FIRST_PASS_CLASSES defined in edu::umd::cs::findbugs::FindBugs2
      uses variable classScreener defined in edu::umd::cs::findbugs::FindBugs2
      uses function matches(String) defined in edu::umd::cs::findbugs::IClassScreener
      uses function reportBug(BugInstance) defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable currentClassName defined in edu::umd::cs::findbugs::FindBugs2
      uses function notifyClassObservers(ClassDescriptor) defined in edu::umd::cs::findbugs::FindBugs2
      uses function logRecoverableException(ClassDescriptor,Detector2,Throwable) defined in edu::umd::cs::findbugs::FindBugs2
      uses function getErrorLogger() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function finishClass() defined in edu::umd::cs::findbugs::FindBugsProgress
      uses function finishPerClassAnalysis() defined in edu::umd::cs::findbugs::FindBugsProgress
      uses function finish() defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportQueuedErrors() defined in edu::umd::cs::findbugs::DelegatingBugReporter
   function buildClassPath() in line 572
      40 lines of code
      0 parameters
      7 conditional paths
      uses variable classFactory defined in edu::umd::cs::findbugs::FindBugs2
      uses function createClassPathBuilder(IErrorLogger) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses variable project defined in edu::umd::cs::findbugs::FindBugs2
      uses function getFileArray() defined in edu::umd::cs::findbugs::Project
      uses function addCodeBase(ICodeBaseLocator,boolean) defined in edu::umd::cs::findbugs::classfile::IClassPathBuilder
      uses function createFilesystemCodeBaseLocator(String) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses function getAuxClasspathEntryList() defined in edu::umd::cs::findbugs::Project
      uses function scanNestedArchives(boolean) defined in edu::umd::cs::findbugs::classfile::IClassPathBuilder
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
      uses variable scanNestedArchives defined in edu::umd::cs::findbugs::AnalysisOptions
      uses function build(IClassPath,IClassPathBuilderProgress) defined in edu::umd::cs::findbugs::classfile::IClassPathBuilder
      uses variable classPath defined in edu::umd::cs::findbugs::FindBugs2
      uses variable progress defined in edu::umd::cs::findbugs::FindBugs2
      uses variable appClassList defined in edu::umd::cs::findbugs::FindBugs2
      uses function getAppClassList() defined in edu::umd::cs::findbugs::classfile::IClassPathBuilder
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs2
      uses function appCodeBaseIterator() defined in edu::umd::cs::findbugs::classfile::IClassPath
      uses function containsSourceFiles() defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses function getPathName() defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
      uses function addTimestamp(long) defined in edu::umd::cs::findbugs::Project
      uses function getLastModifiedTime() defined in edu::umd::cs::findbugs::classfile::ICodeBase
   function buildReferencedClassSet() in line 613
      137 lines of code
      0 parameters
      28 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs2
      uses variable appClassList defined in edu::umd::cs::findbugs::FindBugs2
      uses function getAllClassDescriptors() defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getXFields() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function logError(String) defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
      uses function getPackageName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
      uses function purge(Collection< ClassDescriptor >) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassDescriptorForDottedClassName(@DottedClassName String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable analysisCache defined in edu::umd::cs::findbugs::FindBugs2
      uses variable referencedClassSet defined in edu::umd::cs::findbugs::FindBugs2
   function clearAnalysisContext() in line 759
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function configureAnalysisFeatures() in line 798
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
      uses variable analysisFeatureSettingList defined in edu::umd::cs::findbugs::AnalysisOptions
      uses function configure(AnalysisContext) defined in edu::umd::cs::findbugs::config::AnalysisFeatureSetting
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable MERGE_SIMILAR_WARNINGS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses variable mergeSimilarWarnings defined in edu::umd::cs::findbugs::AnalysisOptions
   function createAnalysisCache() in line 505
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisCache defined in edu::umd::cs::findbugs::FindBugs2
      uses function createAnalysisCache(IClassPath,BugReporter) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses variable classPath defined in edu::umd::cs::findbugs::FindBugs2
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function registerBuiltInAnalysisEngines(IAnalysisCache) defined in edu::umd::cs::findbugs::FindBugs2
      uses function registerPluginAnalysisEngines(DetectorFactoryCollection,IAnalysisCache) defined in edu::umd::cs::findbugs::FindBugs2
      uses variable detectorFactoryCollection defined in edu::umd::cs::findbugs::FindBugs2
      uses function eagerlyPutDatabase(Class< E >,E) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function createAnalysisContext(Project,List< ClassDescriptor >,String) in line 770
      protection public
      24 lines of code
      3 parameters
      2 conditional paths
      uses function clearRepository() defined in edu::umd::cs::findbugs::ba::AnalysisCacheToAnalysisContextAdapter
      uses function setAppClassList(List< ClassDescriptor >) defined in edu::umd::cs::findbugs::ba::AnalysisCacheToAnalysisContextAdapter
      uses variable appClassList defined in edu::umd::cs::findbugs::FindBugs2
      uses function getSourceInfoMap() defined in edu::umd::cs::findbugs::ba::AnalysisCacheToAnalysisContextAdapter
      uses function read(@WillClose InputStream) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses function setProject(Project) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable project defined in edu::umd::cs::findbugs::FindBugs2
   function createClassPath() in line 459
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classPath defined in edu::umd::cs::findbugs::FindBugs2
      uses variable classFactory defined in edu::umd::cs::findbugs::FindBugs2
      uses function createClassPath() defined in edu::umd::cs::findbugs::classfile::IClassFactory
   function createExecutionPlan() in line 810
      39 lines of code
      0 parameters
      4 conditional paths
      uses variable executionPlan defined in edu::umd::cs::findbugs::FindBugs2
      uses variable rankThreshold defined in edu::umd::cs::findbugs::FindBugs2
      uses function setEnabledButNonReporting(boolean) defined in edu::umd::cs::findbugs::DetectorFactory
      uses function setDetectorFactoryChooser(DetectorFactoryChooser) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable detectorFactoryCollection defined in edu::umd::cs::findbugs::FindBugs2
      uses function pluginIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs2
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses function addPlugin(Plugin) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function build() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function eagerlyPutDatabase(Class< E >,E) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getNumPasses() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function dispose() in line 268
      protection public
      17 lines of code
      0 parameters
      5 conditional paths
      uses variable executionPlan defined in edu::umd::cs::findbugs::FindBugs2
      uses function dispose() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable appClassList defined in edu::umd::cs::findbugs::FindBugs2
      uses variable classObserverList defined in edu::umd::cs::findbugs::FindBugs2
      uses variable referencedClassSet defined in edu::umd::cs::findbugs::FindBugs2
      uses variable analysisCache defined in edu::umd::cs::findbugs::FindBugs2
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
      uses variable analysisFeatureSettingList defined in edu::umd::cs::findbugs::AnalysisOptions
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses variable classFactory defined in edu::umd::cs::findbugs::FindBugs2
      uses variable classPath defined in edu::umd::cs::findbugs::FindBugs2
      uses variable classScreener defined in edu::umd::cs::findbugs::FindBugs2
      uses variable detectorFactoryCollection defined in edu::umd::cs::findbugs::FindBugs2
      uses variable progress defined in edu::umd::cs::findbugs::FindBugs2
      uses variable project defined in edu::umd::cs::findbugs::FindBugs2
   function emitTrainingOutput() in line 445
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
      uses variable trainingOutputDir defined in edu::umd::cs::findbugs::AnalysisOptions
   function enableTrainingInput(String) in line 322
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable trainingInputDir defined in edu::umd::cs::findbugs::AnalysisOptions
   function enableTrainingOutput(String) in line 329
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable trainingOutputDir defined in edu::umd::cs::findbugs::AnalysisOptions
   function excludeBaselineBugs(String) in line 316
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
   function execute() in line 159
      protection public
      104 lines of code
      0 parameters
      10 conditional paths
      uses variable noAnalysis defined in edu::umd::cs::findbugs::FindBugs
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function getProjectStats() defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function getProfiler() defined in edu::umd::cs::findbugs::ProjectStats
      uses variable classFactory defined in edu::umd::cs::findbugs::FindBugs2
      uses function createClassPath() defined in edu::umd::cs::findbugs::FindBugs2
      uses function createAnalysisCache() defined in edu::umd::cs::findbugs::FindBugs2
      uses variable progress defined in edu::umd::cs::findbugs::FindBugs2
      uses function reportNumberOfArchives(int) defined in edu::umd::cs::findbugs::FindBugsProgress
      uses variable project defined in edu::umd::cs::findbugs::FindBugs2
      uses function getFileCount() defined in edu::umd::cs::findbugs::Project
      uses function getNumAuxClasspathEntries() defined in edu::umd::cs::findbugs::Project
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function buildClassPath() defined in edu::umd::cs::findbugs::FindBugs2
      uses function buildReferencedClassSet() defined in edu::umd::cs::findbugs::FindBugs2
      uses function createAnalysisContext(Project,List< ClassDescriptor >,String) defined in edu::umd::cs::findbugs::FindBugs2
      uses variable appClassList defined in edu::umd::cs::findbugs::FindBugs2
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
      uses variable sourceInfoFileName defined in edu::umd::cs::findbugs::AnalysisOptions
      uses variable relaxedReportingMode defined in edu::umd::cs::findbugs::AnalysisOptions
      uses variable abridgedMessages defined in edu::umd::cs::findbugs::AnalysisOptions
      uses function configureAnalysisFeatures() defined in edu::umd::cs::findbugs::FindBugs2
      uses function createExecutionPlan() defined in edu::umd::cs::findbugs::FindBugs2
      uses variable classScreener defined in edu::umd::cs::findbugs::FindBugs2
      uses function vacuous() defined in edu::umd::cs::findbugs::IClassScreener
      uses function getDelegate() defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function matches(String) defined in edu::umd::cs::findbugs::IClassScreener
      uses function setDelegate(BugReporter) defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses variable noClassOk defined in edu::umd::cs::findbugs::AnalysisOptions
      uses variable classPath defined in edu::umd::cs::findbugs::FindBugs2
      uses function analyzeApplication() defined in edu::umd::cs::findbugs::FindBugs2
      uses function getFileList() defined in edu::umd::cs::findbugs::Project
      uses function getAuxClasspathEntryList() defined in edu::umd::cs::findbugs::Project
      uses function close() defined in edu::umd::cs::findbugs::classfile::IClassPath
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function report() defined in edu::umd::cs::findbugs::log::Profiler
   function finishSettings() in line 1085
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
      uses variable applySuppression defined in edu::umd::cs::findbugs::AnalysisOptions
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function getDelegate() defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function getProject() defined in edu::umd::cs::findbugs::FindBugs2
      uses function setDelegate(BugReporter) defined in edu::umd::cs::findbugs::DelegatingBugReporter
   function getBugCount() in line 336
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function getBugCount() defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function getBugReporter() in line 289
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
   function getCurrentClass() in line 343
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentClassName defined in edu::umd::cs::findbugs::FindBugs2
   function getErrorCount() in line 350
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function getErrorCount() defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function getMissingClassCount() in line 357
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function getMissingClassCount() defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function getProject() in line 296
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugs2
   function getProjectName() in line 369
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
   function getReleaseName() in line 365
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
   function getTrainingInputDir() in line 466
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
      uses variable trainingInputDir defined in edu::umd::cs::findbugs::AnalysisOptions
   function getTrainingOutputDir() in line 473
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
      uses variable trainingOutputDir defined in edu::umd::cs::findbugs::AnalysisOptions
   function getUserPreferences() in line 452
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
   function logRecoverableException(ClassDescriptor,Detector2,Throwable) in line 1037
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function logError(String) defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getDetectorClassName() defined in edu::umd::cs::findbugs::Detector2
   function main(String[]) in line 1043
      protection public
      16 lines of code
      1 parameters
      2 conditional paths
      uses function FindBugs2() defined in edu::umd::cs::findbugs::FindBugs2
   function notifyClassObservers(ClassDescriptor) in line 1023
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable classObserverList defined in edu::umd::cs::findbugs::FindBugs2
   function registerBuiltInAnalysisEngines(IAnalysisCache) in line 525
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function registerAnalysisEngines(IAnalysisCache) defined in edu::umd::cs::findbugs::classfile::engine::EngineRegistrar
      uses variable analysisCache defined in edu::umd::cs::findbugs::FindBugs2
      uses function registerAnalysisEngines(IAnalysisCache) defined in edu::umd::cs::findbugs::classfile::engine::asm::EngineRegistrar
      uses function registerAnalysisEngines(IAnalysisCache) defined in edu::umd::cs::findbugs::classfile::engine::bcel::EngineRegistrar
   function registerPluginAnalysisEngines(DetectorFactoryCollection,IAnalysisCache) in line 539
      protection public
      25 lines of code
      2 parameters
      4 conditional paths
      uses variable detectorFactoryCollection defined in edu::umd::cs::findbugs::FindBugs2
      uses function pluginIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getEngineRegistrarClass() defined in edu::umd::cs::findbugs::Plugin
      uses function registerAnalysisEngines(IAnalysisCache) defined in edu::umd::cs::findbugs::classfile::IAnalysisEngineRegistrar
      uses variable analysisCache defined in edu::umd::cs::findbugs::FindBugs2
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
   function setAbridgedMessages(boolean) in line 1063
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
      uses variable abridgedMessages defined in edu::umd::cs::findbugs::AnalysisOptions
   function setAnalysisFeatureSettings(AnalysisFeatureSetting[]) in line 379
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable analysisFeatureSettingList defined in edu::umd::cs::findbugs::AnalysisOptions
   function setApplySuppression(boolean) in line 1077
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable applySuppression defined in edu::umd::cs::findbugs::AnalysisOptions
   function setBugReporter(BugReporter) in line 386
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function addClassObserver(IClassObserver) defined in edu::umd::cs::findbugs::FindBugs2
   function setClassScreener(IClassScreener) in line 394
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classScreener defined in edu::umd::cs::findbugs::FindBugs2
   function setDetectorFactoryCollection(DetectorFactoryCollection) in line 145
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable detectorFactoryCollection defined in edu::umd::cs::findbugs::FindBugs2
   function setMergeSimilarWarnings(boolean) in line 1070
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mergeSimilarWarnings defined in edu::umd::cs::findbugs::AnalysisOptions
   function setNoClassOk(boolean) in line 494
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable noClassOk defined in edu::umd::cs::findbugs::AnalysisOptions
   function setProgressCallback(FindBugsProgress) in line 401
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setProject(Project) in line 408
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugs2
   function setProjectName(String) in line 372
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
   function setRankThreshold(int) in line 1081
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rankThreshold defined in edu::umd::cs::findbugs::FindBugs2
   function setRelaxedReportingMode(boolean) in line 415
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable relaxedReportingMode defined in edu::umd::cs::findbugs::AnalysisOptions
   function setReleaseName(String) in line 422
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setScanNestedArchives(boolean) in line 487
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable scanNestedArchives defined in edu::umd::cs::findbugs::AnalysisOptions
   function setSourceInfoFile(String) in line 431
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceInfoFileName defined in edu::umd::cs::findbugs::AnalysisOptions
   function setUserPreferences(UserPreferences) in line 438
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function sortByCallGraph(Collection< ClassDescriptor >,OutEdges< ClassDescriptor >) in line 751
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function useTrainingInput() in line 480
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
      uses variable trainingInputDir defined in edu::umd::cs::findbugs::AnalysisOptions
   function FindBugs2() in line 112
      protection public
      25 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisFeatureSettingList defined in edu::umd::cs::findbugs::AnalysisOptions
      uses variable DEFAULT_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable scanNestedArchives defined in edu::umd::cs::findbugs::AnalysisOptions
      uses variable rankThreshold defined in edu::umd::cs::findbugs::FindBugs2
   variable analysisCache in line 94
   variable analysisOptions in line 106
   variable appClassList in line 95
   variable bugReporter in line 90
   variable classFactory in line 92
   variable classObserverList in line 89
   variable classPath in line 93
   variable classScreener in line 104
   variable currentClassName in line 100
   variable DEBUG in line 82
      protection public
   variable DEBUG_UA in line 86
   variable detectorFactoryCollection in line 97
   variable executionPlan in line 98
   variable LIST_ORDER in line 79
   variable PROGRESS in line 83
      protection public
   variable progress in line 103
   variable project in line 91
   variable rankThreshold in line 88
   variable referencedClassSet in line 96
   variable SCREEN_FIRST_PASS_CLASSES in line 84
   variable USE_REFERENCES in line 850
   variable VERBOSE in line 81
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/FindBugsAnalysisFeatures.java
module edu::umd::cs::findbugs::FindBugsAnalysisFeatures
   abstract class
   function isRelaxedMode() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable RELAXED_REPORTING_MODE defined in edu::umd::cs::findbugs::FindBugsAnalysisFeatures
   function setRelaxedMode(boolean) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable RELAXED_REPORTING_MODE defined in edu::umd::cs::findbugs::FindBugsAnalysisFeatures
   variable INTERPROCEDURAL_ANALYSIS in line 51
      protection public
   variable INTERPROCEDURAL_ANALYSIS_OF_REFERENCED_CLASSES in line 52
      protection public
   variable RELAXED_REPORTING_MODE in line 46
      protection public
   variable START in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/FindBugsCommandLine.java
module edu::umd::cs::findbugs::FindBugsCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   abstract class
   function getProject() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
   function getSettingList() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable settingList defined in edu::umd::cs::findbugs::FindBugsCommandLine
   function handleOption(String,String) in line 101
      27 lines of code
      2 parameters
      11 conditional paths
      uses variable settingList defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses variable MIN_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable LESS_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable DEFAULT_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable MORE_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable MAX_EFFORT defined in edu::umd::cs::findbugs::FindBugs
   function handleOptionWithArgument(String,String) in line 130
      18 lines of code
      2 parameters
      5 conditional paths
      uses function setPluginList(URL[]) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function loadProject(String) defined in edu::umd::cs::findbugs::FindBugsCommandLine
   function isProjectLoadedFromFile() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable projectLoadedFromFile defined in edu::umd::cs::findbugs::FindBugsCommandLine
   function loadProject(String) in line 155
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses variable projectLoadedFromFile defined in edu::umd::cs::findbugs::FindBugsCommandLine
   function FindBugsCommandLine() in line 58
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function startOptionGroup(String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function addOption(String,String,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function addSwitchWithOptionalExtraPart(String,String,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function addSwitch(String,String) defined in edu::umd::cs::findbugs::config::CommandLine
   function FindBugsCommandLine(boolean) in line 74
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses function addOption(String,String,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function addSwitch(String,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function makeOptionUnlisted(String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function addSwitchWithOptionalExtraPart(String,String,String) defined in edu::umd::cs::findbugs::config::CommandLine
   variable project in line 47
   variable projectLoadedFromFile in line 52
   variable settingList in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/FindBugsDisplayFeatures.java
module edu::umd::cs::findbugs::FindBugsDisplayFeatures
   function isAbridgedMessages() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable abridgedMessages defined in edu::umd::cs::findbugs::FindBugsDisplayFeatures
   function setAbridgedMessages(boolean) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable abridgedMessages defined in edu::umd::cs::findbugs::FindBugsDisplayFeatures
   variable abridgedMessages in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/FindBugsMessageFormat.java
module edu::umd::cs::findbugs::FindBugsMessageFormat
   function format(BugAnnotation[],ClassAnnotation) in line 60
      protection public
      57 lines of code
      2 parameters
      9 conditional paths
      uses variable pattern defined in edu::umd::cs::findbugs::FindBugsMessageFormat
      uses function format(String,ClassAnnotation) defined in edu::umd::cs::findbugs::BugAnnotation
   function FindBugsMessageFormat(String) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pattern defined in edu::umd::cs::findbugs::FindBugsMessageFormat
   variable pattern in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/FindBugsProgress.java
module edu::umd::cs::findbugs::FindBugsProgress
   inherits from edu::umd::cs::findbugs::classfile::IClassPathBuilderProgress
   function finishArchive() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function finishClass() in line 67
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function finishPerClassAnalysis() in line 73
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function predictPassCount(int   []) in line 55
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reportNumberOfArchives(int) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function startAnalysis(int) in line 62
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function startArchive(String) in line 43
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/FirstPassDetector.java
module edu::umd::cs::findbugs::FirstPassDetector
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/Footprint.java
module edu::umd::cs::findbugs::Footprint
   function getClockTime() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable clockTime defined in edu::umd::cs::findbugs::Footprint
   function getCollectionTime() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable collectionTime defined in edu::umd::cs::findbugs::Footprint
   function getCpuTime() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cpuTime defined in edu::umd::cs::findbugs::Footprint
   function getPeakMemory() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable peakMem defined in edu::umd::cs::findbugs::Footprint
   function main(String[]) in line 114
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function Footprint() defined in edu::umd::cs::findbugs::Footprint
   function pullData() in line 71
      24 lines of code
      0 parameters
      4 conditional paths
      uses variable cpuTime defined in edu::umd::cs::findbugs::Footprint
      uses function getProcessCpuTime() defined in edu::umd::cs::findbugs::Footprint::OperatingSystemBeanWrapper
      uses variable NOCLASSDEF_ERROR defined in edu::umd::cs::findbugs::Footprint
      uses variable CLASSCAST_ERROR defined in edu::umd::cs::findbugs::Footprint
      uses variable ERROR_ERROR defined in edu::umd::cs::findbugs::Footprint
      uses variable RUNTIME_EXCEPTION defined in edu::umd::cs::findbugs::Footprint
      uses variable clockTime defined in edu::umd::cs::findbugs::Footprint
      uses variable peakMem defined in edu::umd::cs::findbugs::Footprint
      uses function getPeakUsage() defined in edu::umd::cs::findbugs::Footprint::MemoryBeanWrapper
      uses variable collectionTime defined in edu::umd::cs::findbugs::Footprint
      uses function getCollectionTime() defined in edu::umd::cs::findbugs::Footprint::CollectionBeanWrapper
   function toString() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cpuTime defined in edu::umd::cs::findbugs::Footprint
      uses variable clockTime defined in edu::umd::cs::findbugs::Footprint
      uses variable peakMem defined in edu::umd::cs::findbugs::Footprint
   function Footprint() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function pullData() defined in edu::umd::cs::findbugs::Footprint
   function Footprint(Footprint) in line 57
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function pullData() defined in edu::umd::cs::findbugs::Footprint
      uses variable cpuTime defined in edu::umd::cs::findbugs::Footprint
      uses variable clockTime defined in edu::umd::cs::findbugs::Footprint
      uses variable collectionTime defined in edu::umd::cs::findbugs::Footprint
   variable CLASSCAST_ERROR in line 44
   variable clockTime in line 48
   variable collectionTime in line 50
   variable cpuTime in line 47
   variable ERROR_ERROR in line 45
   variable NOCLASSDEF_ERROR in line 43
   variable peakMem in line 49
   variable RUNTIME_EXCEPTION in line 46
module edu::umd::cs::findbugs::Footprint::MemoryBeanWrapper
   function getPeakUsage() in line 127
      protection public
      19 lines of code
      0 parameters
      4 conditional paths
module edu::umd::cs::findbugs::Footprint::OperatingSystemBeanWrapper
   function getProcessCpuTime() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::Footprint::CollectionBeanWrapper
   function getCollectionTime() in line 169
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/FuzzyBugComparator.java
module edu::umd::cs::findbugs::FuzzyBugComparator
   inherits from edu::umd::cs::findbugs::WarningComparator
   function compare(BugInstance,BugInstance) in line 137
      protection public
      68 lines of code
      2 parameters
      18 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCode(String) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses variable bugCollectionMap defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function FilteringBugAnnotationIterator(Iterator< BugAnnotation >) defined in edu::umd::cs::findbugs::FuzzyBugComparator::FilteringBugAnnotationIterator
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function compareClasses(BugCollection,BugCollection,ClassAnnotation,ClassAnnotation) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function compareMethods(BugCollection,BugCollection,MethodAnnotation,MethodAnnotation) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function compareSourceLines(BugCollection,BugCollection,SourceLineAnnotation,SourceLineAnnotation) defined in edu::umd::cs::findbugs::FuzzyBugComparator
   function compareClasses(BugCollection,BugCollection,ClassAnnotation,ClassAnnotation) in line 227
      protection public
      7 lines of code
      4 parameters
      2 conditional paths
      uses function compareNullElements(Object,Object) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function compareClassesByName(BugCollection,BugCollection,String,String) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function compareClassesByName(BugCollection,BugCollection,String,String) in line 236
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses function rewriteClassName(String) defined in edu::umd::cs::findbugs::FuzzyBugComparator
   function compareMethods(BugCollection,BugCollection,MethodAnnotation,MethodAnnotation) in line 256
      protection public
      10 lines of code
      4 parameters
      2 conditional paths
      uses function compareNullElements(Object,Object) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function compareTo(BugAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
   function compareNullElements(Object,Object) in line 218
      8 lines of code
      2 parameters
      3 conditional paths
   function compareSourceLines(BugCollection,BugCollection,SourceLineAnnotation,SourceLineAnnotation) in line 282
      protection public
      12 lines of code
      4 parameters
      3 conditional paths
      uses function compareNullElements(Object,Object) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function compareClassesByName(BugCollection,BugCollection,String,String) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getCode(String) in line 210
      7 lines of code
      1 parameters
      2 conditional paths
   function ignore(BugAnnotation) in line 331
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable significantDescriptionSet defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function getDescription() defined in edu::umd::cs::findbugs::BugAnnotation
   function registerBugCollection(BugCollection) in line 126
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function rewriteClassName(String) in line 248
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function rewriteClassName(String) defined in edu::umd::cs::findbugs::model::ClassNameRewriter
   function setClassNameRewriter(ClassNameRewriter) in line 133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::FuzzyBugComparator
   function FuzzyBugComparator() in line 114
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FuzzyBugComparator
   variable bugCollectionMap in line 105
   variable classNameRewriter in line 107
   variable DEBUG in line 45
   variable NUM_CONTEXT_OPCODES in line 271
   variable serialVersionUID in line 50
   variable significantDescriptionSet in line 296
   variable USE_HASHES in line 48
module edu::umd::cs::findbugs::FuzzyBugComparator::FilteringBugAnnotationIterator
   inherits from java::util::Iterator
   function findNext() in line 64
      11 lines of code
      0 parameters
      4 conditional paths
      uses function next() defined in edu::umd::cs::findbugs::FuzzyBugComparator::FilteringBugAnnotationIterator
      uses function ignore(BugAnnotation) defined in edu::umd::cs::findbugs::FuzzyBugComparator
   function hasNext() in line 79
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::FuzzyBugComparator::FilteringBugAnnotationIterator
      uses function next() defined in edu::umd::cs::findbugs::FuzzyBugComparator::FilteringBugAnnotationIterator
   function next() in line 87
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::FuzzyBugComparator::FilteringBugAnnotationIterator
   function remove() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FilteringBugAnnotationIterator(Iterator< BugAnnotation >) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/graph/AbstractDepthFirstSearch.java
module edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch
   inherits from edu::umd::cs::findbugs::graph::DFSEdgeTypes
   abstract class
   function classifyUnknownEdges() in line 347
      23 lines of code
      0 parameters
      1 conditional paths
   function containsCycle() in line 195
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function getColor(VertexType) in line 381
      3 lines of code
      1 parameters
      1 conditional paths
   function getDFSEdgeType(EdgeType) in line 211
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDiscoveryTime(VertexType) in line 221
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFinishTime(VertexType) in line 231
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFinishTimeList() in line 241
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNextSearchTreeRoot() in line 134
      9 lines of code
      0 parameters
      1 conditional paths
   function getSource(EdgeType) in line 124
      1 lines of code
      1 parameters
      1 conditional paths
   function getTarget(EdgeType) in line 119
      1 lines of code
      1 parameters
      1 conditional paths
   function outgoingEdgeIterator(GraphType,VertexType) in line 114
      1 lines of code
      2 parameters
      1 conditional paths
   function search() in line 180
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function setColor(VertexType,int) in line 371
      3 lines of code
      2 parameters
      1 conditional paths
   function setDFSEdgeType(EdgeType,int) in line 406
      3 lines of code
      2 parameters
      1 conditional paths
   function setDiscoveryTime(VertexType,int) in line 398
      3 lines of code
      2 parameters
      1 conditional paths
   function setFinishTime(VertexType,int) in line 402
      3 lines of code
      2 parameters
      1 conditional paths
   function setSearchTreeCallback(SearchTreeCallback< VertexType >) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setVertexChooser(VertexChooser< VertexType >) in line 162
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function topologicalSortIterator() in line 249
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function unvisitedVertices() in line 144
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function visitAll() in line 280
      32 lines of code
      0 parameters
      1 conditional paths
   function visitMe(VertexType) in line 393
      4 lines of code
      1 parameters
      1 conditional paths
   function visitSuccessor(ArrayList< Visit >,EdgeType) in line 313
      32 lines of code
      2 parameters
      1 conditional paths
   function AbstractDepthFirstSearch(GraphType) in line 91
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
   variable BLACK in line 83
   variable colorList in line 59
   variable DEBUG in line 56
      protection public
   variable dfsEdgeTypeList in line 62
   variable discoveryTimeList in line 60
   variable finishTimeList in line 61
   variable graph in line 58
   variable GRAY in line 77
   variable searchTreeCallback in line 66
   variable timestamp in line 63
   variable topologicalSortList in line 64
   variable vertexChooser in line 65
   variable WHITE in line 71
module edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch::Visit
   function getNextEdge() in line 275
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable outgoingEdgeIterator defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch::Visit
   function getVertex() in line 267
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vertex defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch::Visit
   function hasNextEdge() in line 271
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable outgoingEdgeIterator defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch::Visit
   function Visit(VertexType) in line 257
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable vertex defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch::Visit
      uses variable outgoingEdgeIterator defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch::Visit
      uses variable graph defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch
      uses function setColor(VertexType,int) defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch
      uses variable GRAY defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch
      uses function setDiscoveryTime(VertexType,int) defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch
      uses variable timestamp defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch
   variable outgoingEdgeIterator in line 255
   variable vertex in line 254
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/graph/AbstractEdge.java
module edu::umd::cs::findbugs::graph::AbstractEdge
   inherits from GraphEdge< ActualEdgeType, VertexType >
   function compareTo(ActualEdgeType) in line 80
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 74
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getLabel() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSource() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTarget() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setLabel(int) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractEdge(VertexType,VertexType) in line 47
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable label in line 38
   variable nextIncomingEdge in line 40
   variable nextOutgoingEdge in line 39
   variable source in line 36
   variable target in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/graph/AbstractGraph.java
module edu::umd::cs::findbugs::graph::AbstractGraph
   inherits from Graph< EdgeType, VertexType >
   abstract class
   function addVertex(VertexType) in line 150
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function allocateEdge(VertexType,VertexType) in line 284
      1 lines of code
      2 parameters
      1 conditional paths
   function containsVertex(VertexType) in line 155
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function createEdge(VertexType,VertexType) in line 163
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function edgeIterator() in line 142
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumEdgeLabels() in line 190
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumEdges() in line 134
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumIncomingEdges(VertexType) in line 224
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function getNumOutgoingEdges(VertexType) in line 234
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function getNumVertexLabels() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumVertices() in line 138
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function incomingEdgeIterator(VertexType) in line 220
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function lookupEdge(VertexType,VertexType) in line 172
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   function outgoingEdgeIterator(VertexType) in line 216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function predecessorIterator(final VertexType) in line 262
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(EdgeType) in line 198
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function removeVertex(VertexType) in line 205
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function setNumEdgeLabels(int) in line 194
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNumVertexLabels(int) in line 186
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function successorIterator(final VertexType) in line 244
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
   function vertexIterator() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AbstractGraph() in line 127
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   variable edgeList in line 118
   variable maxEdgeLabel in line 121
   variable maxVertexLabel in line 119
   variable vertexList in line 117
module edu::umd::cs::findbugs::graph::AbstractGraph::OutgoingEdgeIterator
   inherits from java::util::Iterator
   function hasNext() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable edge defined in edu::umd::cs::findbugs::graph::AbstractGraph::OutgoingEdgeIterator
   function next() in line 68
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function hasNext() defined in edu::umd::cs::findbugs::graph::AbstractGraph::OutgoingEdgeIterator
      uses variable edge defined in edu::umd::cs::findbugs::graph::AbstractGraph::OutgoingEdgeIterator
   function remove() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function OutgoingEdgeIterator(VertexType) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable edge in line 58
module edu::umd::cs::findbugs::graph::AbstractGraph::IncomingEdgeIterator
   inherits from java::util::Iterator
   function hasNext() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable edge defined in edu::umd::cs::findbugs::graph::AbstractGraph::OutgoingEdgeIterator
   function next() in line 100
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function hasNext() defined in edu::umd::cs::findbugs::graph::AbstractGraph::OutgoingEdgeIterator
      uses variable edge defined in edu::umd::cs::findbugs::graph::AbstractGraph::OutgoingEdgeIterator
   function remove() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function IncomingEdgeIterator(VertexType) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable edge in line 90
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/graph/AbstractVertex.java
module edu::umd::cs::findbugs::graph::AbstractVertex
   inherits from edu::umd::cs::findbugs::graph::GraphVertex
   function compareTo(ActualVertexType) in line 61
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 53
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getLabel() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setLabel(int) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable label in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/graph/Graph.java
module edu::umd::cs::findbugs::graph::Graph
   function addVertex(VertexType) in line 62
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function containsVertex(VertexType) in line 70
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function createEdge(VertexType,VertexType) in line 80
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function edgeIterator() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumEdgeLabels() in line 109
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumEdges() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumIncomingEdges(VertexType) in line 150
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getNumOutgoingEdges(VertexType) in line 158
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getNumVertexLabels() in line 98
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumVertices() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function incomingEdgeIterator(VertexType) in line 142
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function lookupEdge(VertexType,VertexType) in line 91
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function outgoingEdgeIterator(VertexType) in line 134
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function predecessorIterator(VertexType) in line 176
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(EdgeType) in line 119
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function removeVertex(VertexType) in line 126
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setNumEdgeLabels(int) in line 114
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setNumVertexLabels(int) in line 104
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function successorIterator(VertexType) in line 167
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function vertexIterator() in line 54
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/graph/GraphEdge.java
module edu::umd::cs::findbugs::graph::GraphEdge
   inherits from Comparable
   function getLabel() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSource() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTarget() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setLabel(int) in line 52
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/graph/GraphToolkit.java
module edu::umd::cs::findbugs::graph::GraphToolkit
   function copyEdge(EdgeType,EdgeType) in line 54
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function createGraph() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function duplicateVertex(VertexType) in line 46
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/graph/GraphVertex.java
module edu::umd::cs::findbugs::graph::GraphVertex
   inherits from Comparable
   function getLabel() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setLabel(int) in line 38
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/graph/MergeVertices.java
module edu::umd::cs::findbugs::graph::MergeVertices
   function mergeVertices(Set< VertexType >,GraphType,VertexCombinator< VertexType >,GraphToolkit< GraphType, EdgeType, VertexType >) in line 53
      protection public
      55 lines of code
      4 parameters
      8 conditional paths
      uses function combineVertices(Set< VertexType >) defined in edu::umd::cs::findbugs::graph::VertexCombinator
      uses function copyEdge(EdgeType,EdgeType) defined in edu::umd::cs::findbugs::graph::GraphToolkit
   function MergeVertices() in line 42
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/graph/SearchTree.java
module edu::umd::cs::findbugs::graph::SearchTree
   function addChild(SearchTree< VertexType >) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable m_childList defined in edu::umd::cs::findbugs::graph::SearchTree
   function addVerticesToSet(Set< VertexType >) in line 71
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function childIterator() defined in edu::umd::cs::findbugs::graph::SearchTree
      uses function addVerticesToSet(Set< VertexType >) defined in edu::umd::cs::findbugs::graph::SearchTree
   function childIterator() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable m_childList defined in edu::umd::cs::findbugs::graph::SearchTree
   function getVertex() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable m_vertex defined in edu::umd::cs::findbugs::graph::SearchTree
   function SearchTree(VertexType) in line 40
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable m_vertex defined in edu::umd::cs::findbugs::graph::SearchTree
      uses variable m_childList defined in edu::umd::cs::findbugs::graph::SearchTree
   variable m_childList in line 35
   variable m_vertex in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/graph/SearchTreeBuilder.java
module edu::umd::cs::findbugs::graph::SearchTreeBuilder
   inherits from SearchTreeCallback< VertexType >
   function addToSearchTree(VertexType,VertexType) in line 46
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable searchTreeMap defined in edu::umd::cs::findbugs::graph::SearchTreeBuilder
      uses function createSearchTree(VertexType) defined in edu::umd::cs::findbugs::graph::SearchTreeBuilder
      uses function addChild(SearchTree< VertexType >) defined in edu::umd::cs::findbugs::graph::SearchTree
   function createSearchTree(VertexType) in line 61
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable searchTreeMap defined in edu::umd::cs::findbugs::graph::SearchTreeBuilder
   function searchTreeIterator() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable searchTreeList defined in edu::umd::cs::findbugs::graph::SearchTreeBuilder
   function startSearchTree(VertexType) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable searchTreeList defined in edu::umd::cs::findbugs::graph::SearchTreeBuilder
      uses function createSearchTree(VertexType) defined in edu::umd::cs::findbugs::graph::SearchTreeBuilder
   variable searchTreeList in line 39
   variable searchTreeMap in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/graph/SearchTreeCallback.java
module edu::umd::cs::findbugs::graph::SearchTreeCallback
   function addToSearchTree(VertexType,VertexType) in line 40
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function startSearchTree(VertexType) in line 32
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/graph/StronglyConnectedComponents.java
module edu::umd::cs::findbugs::graph::StronglyConnectedComponents
   function copySearchTree(SearchTree< VertexType >,Transpose< GraphType, EdgeType, VertexType >) in line 136
      14 lines of code
      2 parameters
      2 conditional paths
      uses function getOriginalGraphVertex(VertexType) defined in edu::umd::cs::findbugs::graph::Transpose
      uses function getVertex() defined in edu::umd::cs::findbugs::graph::SearchTree
      uses function childIterator() defined in edu::umd::cs::findbugs::graph::SearchTree
      uses function addChild(SearchTree< VertexType >) defined in edu::umd::cs::findbugs::graph::SearchTree
   function findStronglyConnectedComponents(GraphType,GraphToolkit< GraphType, EdgeType, VertexType >) in line 68
      protection public
      59 lines of code
      2 parameters
      7 conditional paths
      uses variable m_vertexChooser defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
      uses function setVertexChooser(VertexChooser< VertexType >) defined in AbstractDepthFirstSearch< GraphType, EdgeType, VertexType >
      uses function search() defined in AbstractDepthFirstSearch< GraphType, EdgeType, VertexType >
      uses function transpose(GraphType,GraphToolkit< GraphType, EdgeType, VertexType >) defined in edu::umd::cs::findbugs::graph::Transpose
      uses function getFinishTimeList() defined in AbstractDepthFirstSearch< GraphType, EdgeType, VertexType >
      uses variable DESCENDING defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
      uses function setSearchTreeCallback(SearchTreeCallback< VertexType >) defined in AbstractDepthFirstSearch< GraphType, EdgeType, VertexType >
      uses function searchTreeIterator() defined in edu::umd::cs::findbugs::graph::SearchTreeBuilder
      uses variable m_stronglyConnectedSearchTreeList defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
      uses function copySearchTree(SearchTree< VertexType >,Transpose< GraphType, EdgeType, VertexType >) defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
   function searchTreeIterator() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable m_stronglyConnectedSearchTreeList defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
   function setIterator() in line 194
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function SCCSetIterator() defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents::SCCSetIterator
   function setVertexChooser(VertexChooser< VertexType >) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable m_vertexChooser defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
   function StronglyConnectedComponents() in line 47
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable m_stronglyConnectedSearchTreeList defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
      uses variable m_vertexChooser defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
   variable m_stronglyConnectedSearchTreeList in line 41
   variable m_vertexChooser in line 42
module edu::umd::cs::findbugs::graph::StronglyConnectedComponents::SCCSetIterator
   inherits from java::util::Iterator
   function hasNext() in line 172
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable m_searchTreeIterator defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents::SCCSetIterator
   function next() in line 176
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable m_searchTreeIterator defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents::SCCSetIterator
      uses function addVerticesToSet(Set< VertexType >) defined in edu::umd::cs::findbugs::graph::SearchTree
   function remove() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SCCSetIterator() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable m_searchTreeIterator defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents::SCCSetIterator
      uses function searchTreeIterator() defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
   variable m_searchTreeIterator in line 166
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/graph/Transpose.java
module edu::umd::cs::findbugs::graph::Transpose
   function getOriginalGraphVertex(VertexType) in line 117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable m_transposeToOrigMap defined in edu::umd::cs::findbugs::graph::Transpose
   function getTransposedGraphVertex(VertexType) in line 106
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable m_origToTransposeMap defined in edu::umd::cs::findbugs::graph::Transpose
   function transpose(GraphType,GraphToolkit< GraphType, EdgeType, VertexType >) in line 56
      protection public
      42 lines of code
      2 parameters
      3 conditional paths
      uses function createGraph() defined in edu::umd::cs::findbugs::graph::GraphToolkit
      uses function duplicateVertex(VertexType) defined in edu::umd::cs::findbugs::graph::GraphToolkit
      uses variable m_origToTransposeMap defined in edu::umd::cs::findbugs::graph::Transpose
      uses variable m_transposeToOrigMap defined in edu::umd::cs::findbugs::graph::Transpose
      uses function copyEdge(EdgeType,EdgeType) defined in edu::umd::cs::findbugs::graph::GraphToolkit
   function Transpose() in line 43
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable m_origToTransposeMap defined in edu::umd::cs::findbugs::graph::Transpose
      uses variable m_transposeToOrigMap defined in edu::umd::cs::findbugs::graph::Transpose
   variable m_origToTransposeMap in line 37
   variable m_transposeToOrigMap in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/graph/VertexChooser.java
module edu::umd::cs::findbugs::graph::VertexChooser
   function isChosen(VertexType) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/graph/VertexCombinator.java
module edu::umd::cs::findbugs::graph::VertexCombinator
   function combineVertices(Set< VertexType >) in line 38
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/graph/VisitationTimeComparator.java
module edu::umd::cs::findbugs::graph::VisitationTimeComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(VertexType,VertexType) in line 65
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable m_visitationTimeList defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
      uses variable m_direction defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
      uses variable ASCENDING defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
   function VisitationTimeComparator(int[],int) in line 57
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable m_visitationTimeList defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
      uses variable m_direction defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
      uses variable ASCENDING defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
      uses variable DESCENDING defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
   variable ASCENDING in line 40
      protection public
   variable DESCENDING in line 45
      protection public
   variable m_direction in line 48
   variable m_visitationTimeList in line 47
   variable serialVersionUID in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/gui/AboutDialog.java
module edu::umd::cs::findbugs::gui::AboutDialog
   inherits from javax::swing::JDialog
   function closeDialog(java.awt.event.WindowEvent) in line 230
      3 lines of code
      1 parameters
      1 conditional paths
      uses function closeDialog() defined in edu::umd::cs::findbugs::gui::AboutDialog
   function closeDialog() in line 234
      4 lines of code
      0 parameters
      1 conditional paths
   function editorPaneHyperlinkUpdate(javax.swing.event.HyperlinkEvent) in line 211
      10 lines of code
      1 parameters
      3 conditional paths
   function initComponents() in line 121
      89 lines of code
      0 parameters
      1 conditional paths
      uses variable aboutTabPane defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable aboutScrollPane defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable aboutEditorPane defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable licenseScrollPane defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable licenseEditorPane defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable acknowledgmentsScrollPane defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable acknowldgementsEditorPane defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable jSeparator1 defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable okButton defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses function closeDialog() defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses function editorPaneHyperlinkUpdate(javax.swing.event.HyperlinkEvent) defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses function okButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::AboutDialog
   function okButtonActionPerformed(java.awt.event.ActionEvent) in line 223
      3 lines of code
      1 parameters
      1 conditional paths
      uses function closeDialog() defined in edu::umd::cs::findbugs::gui::AboutDialog
   function processPage(javax.swing.JEditorPane,String) in line 79
      35 lines of code
      2 parameters
      7 conditional paths
      uses variable RELEASE defined in edu::umd::cs::findbugs::Version
   function AboutDialog(JFrame,Logger,boolean) in line 56
      protection public
      16 lines of code
      3 parameters
      2 conditional paths
      uses function initComponents() defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable aboutEditorPane defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable licenseEditorPane defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable acknowldgementsEditorPane defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
      uses variable RELEASE defined in edu::umd::cs::findbugs::Version
   variable aboutEditorPane in line 240
   variable aboutScrollPane in line 241
   variable aboutTabPane in line 242
   variable acknowldgementsEditorPane in line 243
   variable acknowledgmentsScrollPane in line 244
   variable jSeparator1 in line 245
   variable licenseEditorPane in line 246
   variable licenseScrollPane in line 247
   variable okButton in line 248
   variable serialVersionUID in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/AboutDialog.java
module edu::umd::cs::findbugs::gui2::AboutDialog
   inherits from javax::swing::JDialog
   function closeDialog(java.awt.event.WindowEvent) in line 231
      3 lines of code
      1 parameters
      1 conditional paths
      uses function closeDialog() defined in edu::umd::cs::findbugs::gui2::AboutDialog
   function closeDialog() in line 235
      4 lines of code
      0 parameters
      1 conditional paths
   function initComponents() in line 123
      88 lines of code
      0 parameters
      3 conditional paths
      uses variable aboutTabPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable aboutScrollPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable aboutEditorPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable licenseScrollPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable licenseEditorPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable acknowledgmentsScrollPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable acknowldgementsEditorPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable jSeparator1 defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable okButton defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses function closeDialog() defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses function okButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui2::AboutDialog
   function okButtonActionPerformed(java.awt.event.ActionEvent) in line 224
      3 lines of code
      1 parameters
      1 conditional paths
      uses function closeDialog() defined in edu::umd::cs::findbugs::gui2::AboutDialog
   function processPage(javax.swing.JEditorPane,String) in line 81
      35 lines of code
      2 parameters
      7 conditional paths
      uses variable RELEASE defined in edu::umd::cs::findbugs::Version
   function AboutDialog(JFrame,Logger,boolean) in line 57
      protection public
      16 lines of code
      3 parameters
      2 conditional paths
      uses function initComponents() defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable aboutEditorPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable licenseEditorPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable acknowldgementsEditorPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
      uses variable RELEASE defined in edu::umd::cs::findbugs::Version
   variable aboutEditorPane in line 241
   variable aboutScrollPane in line 242
   variable aboutTabPane in line 243
   variable acknowldgementsEditorPane in line 244
   variable acknowledgmentsScrollPane in line 245
   variable jSeparator1 in line 246
   variable licenseEditorPane in line 247
   variable licenseScrollPane in line 248
   variable okButton in line 249
   variable serialVersionUID in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/gui/AnalysisErrorDialog.java
module edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   inherits from javax::swing::JDialog
   function addLine(String) in line 211
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable buf defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   function clear() in line 217
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable errorMessageTextArea defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   function closeDialog(java.awt.event.WindowEvent) in line 204
      4 lines of code
      1 parameters
      1 conditional paths
   function copyMenuItemActionPerformed(java.awt.event.ActionEvent) in line 185
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable errorMessageTextArea defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   function editMenuActionPerformed(java.awt.event.ActionEvent) in line 193
      3 lines of code
      1 parameters
      1 conditional paths
   function finish() in line 221
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable errorMessageTextArea defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable buf defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   function generateContents() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses function reportQueuedErrors() defined in edu::umd::cs::findbugs::BugReporter
   function initComponents() in line 59
      125 lines of code
      0 parameters
      1 conditional paths
      uses variable errorLabel defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable errorMessageScrollPane defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable errorMessageTextArea defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable jSeparator1 defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable leftSpacer defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable rightSpacer defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable okButton defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable analysisMenuBar defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable editMenu defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable selectAllMenuItem defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable copyMenuItem defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses function closeDialog(java.awt.event.WindowEvent) defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses function okButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses function editMenuActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses function selectAllItemActionListener(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses function copyMenuItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   function okButtonActionPerformed(java.awt.event.ActionEvent) in line 197
      3 lines of code
      1 parameters
      1 conditional paths
      uses function closeDialog(java.awt.event.WindowEvent) defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   function selectAllItemActionListener(java.awt.event.ActionEvent) in line 189
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable errorMessageTextArea defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   function AnalysisErrorDialog(java.awt.Frame,boolean,BugReporter) in line 43
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses function initComponents() defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   variable analysisMenuBar in line 226
   variable buf in line 209
   variable copyMenuItem in line 227
   variable editMenu in line 228
   variable errorLabel in line 229
   variable errorMessageScrollPane in line 230
   variable errorMessageTextArea in line 231
   variable jSeparator1 in line 232
   variable leftSpacer in line 233
   variable okButton in line 234
   variable reporter in line 38
   variable rightSpacer in line 235
   variable selectAllMenuItem in line 236
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/gui/AnalysisRun.java
module edu::umd::cs::findbugs::gui::AnalysisRun
   function createSummary(ProjectStats) in line 133
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable summary defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses variable logger defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable WARNING defined in edu::umd::cs::findbugs::gui::Logger
      uses variable MISSING_SUMMARY_MESSAGE defined in edu::umd::cs::findbugs::gui::AnalysisRun
   function execute(FindBugsProgress) in line 108
      protection public
      18 lines of code
      1 parameters
      2 conditional paths
      uses variable findBugs defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function setProgressCallback(FindBugsProgress) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function setUserPreferences(UserPreferences) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function setAnalysisFeatureSettings(AnalysisFeatureSetting[]) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses variable frame defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getSettingList() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function execute() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function createSummary(ProjectStats) defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses variable reporter defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getProjectStats() defined in edu::umd::cs::findbugs::AbstractBugReporter
   function getBugInstances() in line 191
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getBugCollection() defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
   function getFrame() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::gui::AnalysisRun
   function getSummary() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable summary defined in edu::umd::cs::findbugs::gui::AnalysisRun
   function getTreeModel(String) in line 211
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable treeModelMap defined in edu::umd::cs::findbugs::gui::AnalysisRun
   function loadBugsFromFile(File) in line 149
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getBugCollection() defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable summary defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getSummaryHTML() defined in edu::umd::cs::findbugs::SortedBugCollection
   function loadBugsFromInputStream(InputStream) in line 163
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getBugCollection() defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable summary defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getSummaryHTML() defined in edu::umd::cs::findbugs::SortedBugCollection
   function reportAnalysisErrors() in line 180
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function errorsOccurred() defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function getErrorDialog() defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
   function saveBugsToFile(File) in line 173
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getBugCollection() defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function writeXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function setTreeModel(String,DefaultTreeModel) in line 201
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable treeModelMap defined in edu::umd::cs::findbugs::gui::AnalysisRun
   function AnalysisRun(Project,FindBugsFrame) in line 71
      protection public
      15 lines of code
      2 parameters
      1 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getLogger() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setPriorityThreshold(int) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function setBugReporter(BugReporter) defined in edu::umd::cs::findbugs::FindBugs2
      uses variable reporter defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function setProject(Project) defined in edu::umd::cs::findbugs::FindBugs2
      uses function setDetectorFactoryCollection(DetectorFactoryCollection) defined in edu::umd::cs::findbugs::FindBugs2
   variable CREATE_SUMMARY in line 144
   variable findBugs in line 64
   variable frame in line 61
   variable logger in line 63
   variable MISSING_SUMMARY_MESSAGE in line 127
   variable reporter in line 65
   variable summary in line 62
   variable treeModelMap in line 66
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/gui/AnnotatedString.java
module edu::umd::cs::findbugs::gui::AnnotatedString
   function addButton(JFrame,String) in line 116
      10 lines of code
      2 parameters
      1 conditional paths
      uses function AnnotatedString(String) defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses function toString() defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses function getMnemonic() defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses function getMnemonicIndex() defined in edu::umd::cs::findbugs::gui::AnnotatedString
   function getMnemonic() in line 86
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable MAC_OS_X defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses function getMnemonicIndex() defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses variable myAnnotatedString defined in edu::umd::cs::findbugs::gui::AnnotatedString
   function getMnemonicIndex() in line 101
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable MAC_OS_X defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses variable myAnnotatedString defined in edu::umd::cs::findbugs::gui::AnnotatedString
   function main(String[]) in line 127
      protection public
      22 lines of code
      1 parameters
      1 conditional paths
      uses function addButton(JFrame,String) defined in edu::umd::cs::findbugs::gui::AnnotatedString
   function toString() in line 59
      protection public
      19 lines of code
      0 parameters
      4 conditional paths
      uses variable MAC_OS_X defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses variable myAnnotatedString defined in edu::umd::cs::findbugs::gui::AnnotatedString
   function AnnotatedString(String) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable myAnnotatedString defined in edu::umd::cs::findbugs::gui::AnnotatedString
   variable MAC_OS_X in line 46
   variable myAnnotatedString in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/gui/BugCellRenderer.java
module edu::umd::cs::findbugs::gui::BugCellRenderer
   inherits from javax::swing::tree::DefaultTreeCellRenderer
   function getCellTextColor() in line 122
      22 lines of code
      0 parameters
      6 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function getTextNonSelectionColor() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getCellTextColor() defined in edu::umd::cs::findbugs::gui::BugCellRenderer
   function getTreeCellRendererComponent(JTree,Object,boolean,boolean,boolean,int,boolean) in line 77
      protection public
      39 lines of code
      7 parameters
      11 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable bugIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable classIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable methodIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable fieldIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable sourceFileIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses function getGroupType() defined in edu::umd::cs::findbugs::gui::BugInstanceGroup
      uses variable packageIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable bugGroupIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
   function instance() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::gui::BugCellRenderer
   function BugCellRenderer() in line 65
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable bugGroupIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable packageIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable bugIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable classIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable methodIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable fieldIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable sourceFileIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
   variable bugGroupIcon in line 56
   variable bugIcon in line 58
   variable classIcon in line 59
   variable fieldIcon in line 61
   variable methodIcon in line 60
   variable packageIcon in line 57
   variable serialVersionUID in line 55
   variable sourceFileIcon in line 62
   variable theInstance in line 44
   variable value in line 63
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/gui/BugInstanceGroup.java
module edu::umd::cs::findbugs::gui::BugInstanceGroup
   function getGroupType() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable groupType defined in edu::umd::cs::findbugs::gui::BugInstanceGroup
   function getMemberCount() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable memberCount defined in edu::umd::cs::findbugs::gui::BugInstanceGroup
   function incrementMemberCount() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable memberCount defined in edu::umd::cs::findbugs::gui::BugInstanceGroup
   function toString() in line 80
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable groupName defined in edu::umd::cs::findbugs::gui::BugInstanceGroup
      uses variable memberCount defined in edu::umd::cs::findbugs::gui::BugInstanceGroup
   function BugInstanceGroup(String,String) in line 49
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable groupType defined in edu::umd::cs::findbugs::gui::BugInstanceGroup
      uses variable groupName defined in edu::umd::cs::findbugs::gui::BugInstanceGroup
   variable groupName in line 38
   variable groupType in line 37
   variable memberCount in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/gui/ConfigureDetectorsDialog.java
module edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
   inherits from javax::swing::JDialog
   function cancelButtonActionPerformed(java.awt.event.ActionEvent) in line 251
      3 lines of code
      1 parameters
      1 conditional paths
      uses function closeDialog() defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
   function closeDialog(java.awt.event.WindowEvent) in line 272
      4 lines of code
      1 parameters
      1 conditional paths
   function closeDialog() in line 355
      4 lines of code
      0 parameters
      1 conditional paths
   function formWindowOpened(java.awt.event.WindowEvent) in line 229
      3 lines of code
      1 parameters
      1 conditional paths
   function initComponents() in line 71
      157 lines of code
      0 parameters
      1 conditional paths
      uses variable detectorTableScrollPane defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable detectorTable defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable detectorDescriptionScrollPane defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable detectorDescription defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable jSeparator1 defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable okButton defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable cancelButton defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable spacer defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable restoreDefaultsButton defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function closeDialog() defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function formWindowOpened(java.awt.event.WindowEvent) defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable serialVersionUID defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function populateTable() defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable ENABLED_COLUMN defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable SPEED_COLUMN defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function okButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function cancelButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function restoreDefaultsButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
   function main(String) in line 363
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function ConfigureDetectorsDialog(java.awt.Frame,boolean) defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
   function okButtonActionPerformed(java.awt.event.ActionEvent) in line 255
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable factoryList defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable detectorTable defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function getBaseTableModel() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable ENABLED_COLUMN defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function enableDetector(DetectorFactory,boolean) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function closeDialog() defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
   function populateTable() in line 338
      16 lines of code
      0 parameters
      3 conditional paths
      uses function factoryIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function isHidden() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable detectorTable defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getSpeed() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function isDetectorEnabled(DetectorFactory) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable factoryList defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
   function postInitComponents() in line 281
      18 lines of code
      0 parameters
      3 conditional paths
      uses variable detectorTable defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function viewDetectorDetails(DetectorFactory) defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable factoryList defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function getBaseModelIndex(int) defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function restoreDefaultsButtonActionPerformed(java.awt.event.ActionEvent) in line 238
      12 lines of code
      1 parameters
      3 conditional paths
      uses function factoryIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable detectorTable defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function getBaseTableModel() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function isHidden() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function isDefaultEnabled() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable ENABLED_COLUMN defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
   function viewDetectorDetails(DetectorFactory) in line 305
      27 lines of code
      1 parameters
      3 conditional paths
      uses function getDetailHTML() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable detectorDescription defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getReportedBugPatterns() defined in edu::umd::cs::findbugs::DetectorFactory
   function ConfigureDetectorsDialog(java.awt.Frame,boolean) in line 59
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function initComponents() defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function postInitComponents() defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
   variable cancelButton in line 369
   variable detectorDescription in line 370
   variable detectorDescriptionScrollPane in line 371
   variable detectorTable in line 372
   variable detectorTableScrollPane in line 373
   variable ENABLED_COLUMN in line 54
   variable factoryList in line 381
   variable jSeparator1 in line 374
   variable okButton in line 375
   variable restoreDefaultsButton in line 376
   variable serialVersionUID in line 51
   variable spacer in line 377
   variable SPEED_COLUMN in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/gui/ConsoleLogger.java
module edu::umd::cs::findbugs::gui::ConsoleLogger
   inherits from edu::umd::cs::findbugs::gui::Logger
   function logMessage(int,String) in line 47
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
      uses variable logSync defined in edu::umd::cs::findbugs::gui::ConsoleLogger
      uses function error(String) defined in edu::umd::cs::findbugs::gui::LogSync
      uses variable WARNING defined in edu::umd::cs::findbugs::gui::Logger
      uses function writeToLog(String) defined in edu::umd::cs::findbugs::gui::LogSync
   function ConsoleLogger(LogSync) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable logSync defined in edu::umd::cs::findbugs::gui::ConsoleLogger
   variable logSync in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/gui/DefaultSortedTableModel.java
module edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   inherits from javax::swing::table::AbstractTableModel
   function findColumn(String) in line 161
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function fireTableCellUpdated(int,int) in line 110
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function setupMapping() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function fireTableChanged(TableModelEvent) in line 117
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function setupMapping() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function fireTableDataChanged() in line 124
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function setupMapping() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function fireTableRowsDeleted(int,int) in line 131
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function setupMapping() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function fireTableRowsInserted(int,int) in line 138
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function setupMapping() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function fireTableRowsUpdated(int,int) in line 145
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function setupMapping() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function fireTableStructureChanged() in line 152
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function setupMapping() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function getBaseModelIndex(int) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable viewToModelMapping defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function getBaseTableModel() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function getColumnClass(int) in line 183
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function getColumnCount() in line 168
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function getColumnName(int) in line 191
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function getRowCount() in line 175
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function getValueAt(int,int) in line 206
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable viewToModelMapping defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function isCellEditable(int,int) in line 199
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function setupMapping() in line 222
      23 lines of code
      0 parameters
      4 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable viewToModelMapping defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable sortDirection defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable SORT_NO_ORDER defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable sortColumn defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable SORT_ASCENDING_ORDER defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function setValueAt(Object,int,int) in line 214
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable viewToModelMapping defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function fireTableDataChanged() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function DefaultSortedTableModel(AbstractTableModel,JTableHeader) in line 66
      protection public
      30 lines of code
      2 parameters
      3 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable sortColumn defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable sortDirection defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable SORT_NO_ORDER defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable SORT_ASCENDING_ORDER defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable upIcon defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function setupMapping() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   variable baseModel in line 59
   variable NUM_SORT_DIREECTIONS in line 57
      protection public
   variable serialVersionUID in line 53
   variable SORT_ASCENDING_ORDER in line 55
      protection public
   variable SORT_DESCENDING_ORDER in line 56
      protection public
   variable SORT_NO_ORDER in line 54
      protection public
   variable sortColumn in line 62
   variable sortDirection in line 61
   variable upIcon in line 63
   variable viewToModelMapping in line 60
module edu::umd::cs::findbugs::gui::DefaultSortedTableModel::BaseTableModelListener
   inherits from javax::swing::event::TableModelListener
   function tableChanged(TableModelEvent) in line 248
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function fireTableChanged(TableModelEvent) defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
module edu::umd::cs::findbugs::gui::DefaultSortedTableModel::HeaderListener
   inherits from java::awt::event::MouseAdapter
   function mouseClicked(MouseEvent) in line 256
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable sortColumn defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable sortDirection defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable SORT_ASCENDING_ORDER defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable NUM_SORT_DIREECTIONS defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function fireTableDataChanged() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/gui/FindBugsFrame.java
module edu::umd::cs::findbugs::gui::FindBugsFrame
   inherits from javax::swing::JFrame
   inherits from edu::umd::cs::findbugs::gui::LogSync
   function ableEditMenu() in line 2729
      28 lines of code
      0 parameters
      5 conditional paths
      uses function getView() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable cutItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable copyItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable selectAllItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable pasteItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function aboutItemActionPerformed(java.awt.event.ActionEvent) in line 2143
      3 lines of code
      1 parameters
      1 conditional paths
   function addClasspathEntryButtonActionPerformed(java.awt.event.ActionEvent) in line 2051
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addClasspathEntryToList() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function addClasspathEntryToList() in line 3201
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable classpathEntryTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function parsePaths(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addClasspathEntryToProject(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function addClasspathEntryToProject(String) in line 3217
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addAuxClasspathEntry(String) defined in edu::umd::cs::findbugs::Project
      uses variable classpathEntryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function addJarButtonActionPerformed(java.awt.event.ActionEvent) in line 2279
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addJarToList() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function addJarToList() in line 3131
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable jarNameTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function parsePaths(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addJarToProject(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function addJarToProject(String) in line 3160
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addFile(String) defined in edu::umd::cs::findbugs::Project
      uses variable jarFileList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function addSourceDirButtonActionPerformed(java.awt.event.ActionEvent) in line 2275
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addSourceDirToList() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function addSourceDirToList() in line 3182
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable srcDirTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function parsePaths(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function addSrcToProject(String) in line 3147
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function browseClasspathEntryButtonActionPerformed(java.awt.event.ActionEvent) in line 2055
      17 lines of code
      1 parameters
      3 conditional paths
      uses function createFileChooser() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable auxClasspathEntryFileFilter defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function chooseFile(JFileChooser,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function verifyFileSelection(File) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addClasspathEntryToProject(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function browseJarButtonActionPerformed(java.awt.event.ActionEvent) in line 2221
      16 lines of code
      1 parameters
      3 conditional paths
      uses function createFileChooser() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable archiveAndDirectoryFilter defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function chooseFile(JFileChooser,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function verifyFileSelection(File) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addJarToProject(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function browseSrcDirButtonActionPerformed(java.awt.event.ActionEvent) in line 2196
      16 lines of code
      1 parameters
      3 conditional paths
      uses function createFileChooser() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable archiveAndDirectoryFilter defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function chooseFile(JFileChooser,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function verifyFileSelection(File) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addSrcToProject(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function bugTreeBugDetailsSplitterPropertyChange(java.beans.PropertyChangeEvent) in line 2099
      15 lines of code
      1 parameters
      3 conditional paths
      uses function isSplitterMaximized(JSplitPane,java.beans.PropertyChangeEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugTreeBugDetailsSplitter defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewBugDetailsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function synchBugInstance() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function bugTreeSelectionChanged(TreeSelectionEvent) in line 2322
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getCurrentBugInstance() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function synchBugInstance() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function buildSelectPath(JList) in line 1765
      13 lines of code
      1 parameters
      2 conditional paths
   function checkBugDetailsVisibility() in line 2694
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable viewBugDetailsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugTreeBugDetailsSplitter defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function chooseFile(JFileChooser,String) in line 3569
      4 lines of code
      2 parameters
      1 conditional paths
      uses function updateCurrentDirectoryFromDialog(JFileChooser,int) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function chooseFileToOpen(JFileChooser) in line 3581
      4 lines of code
      1 parameters
      1 conditional paths
      uses function updateCurrentDirectoryFromDialog(JFileChooser,int) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function classpathDownButtonActionPerformed(java.awt.event.ActionEvent) in line 1871
      4 lines of code
      1 parameters
      2 conditional paths
      uses function moveEntriesDown(JList) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function resyncAuxClasspathEntries() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function classpathUpButtonActionPerformed(java.awt.event.ActionEvent) in line 1856
      4 lines of code
      1 parameters
      2 conditional paths
      uses function moveEntriesUp(JList) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function resyncAuxClasspathEntries() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function closeProjectHook(Project,String) in line 2863
      18 lines of code
      2 parameters
      5 conditional paths
      uses variable isModified defined in edu::umd::cs::findbugs::Project
      uses function saveProject(Project,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function closeProjectItemActionPerformed(java.awt.event.ActionEvent) in line 2033
      5 lines of code
      1 parameters
      2 conditional paths
      uses function closeProjectHook(Project,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function configureDetectorsItemActionPerformed(java.awt.event.ActionEvent) in line 1981
      6 lines of code
      1 parameters
      1 conditional paths
   function copyActionPerformed(java.awt.event.ActionEvent) in line 1810
      18 lines of code
      1 parameters
      5 conditional paths
      uses function buildSelectPath(JList) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function createFileChooser() in line 3535
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentDirectory defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function createFileChooser(final JComponent) in line 3546
      14 lines of code
      1 parameters
      1 conditional paths
      uses variable currentDirectory defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable serialVersionUID defined in edu::umd::cs::findbugs::gui::FindBugsFrame::BugTreeNode
   function cutActionPerformed(java.awt.event.ActionEvent) in line 1829
      18 lines of code
      1 parameters
      7 conditional paths
      uses function buildSelectPath(JList) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jarFileList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function removeJarButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function removeSrcDirButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function removeClasspathEntryButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function disableEditKeyBindings(JList) in line 1759
      5 lines of code
      1 parameters
      1 conditional paths
   function equalizeControls(JComponent[]) in line 2294
      22 lines of code
      1 parameters
      5 conditional paths
   function error(String) in line 3604
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function exitForm(java.awt.event.WindowEvent) in line 2286
      3 lines of code
      1 parameters
      1 conditional paths
   function exitItemActionPerformed(java.awt.event.ActionEvent) in line 2247
      3 lines of code
      1 parameters
      1 conditional paths
   function expPriorityButtonActionPerformed(java.awt.event.ActionEvent) in line 1896
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setPriorityThreshold(int) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function fileMenuMenuSelected(javax.swing.event.MenuEvent) in line 2019
      13 lines of code
      1 parameters
      1 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable saveProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable saveProjectAsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable reloadProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable UNNAMED_PROJECT defined in edu::umd::cs::findbugs::Project
      uses variable closeProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable currentAnalysisRun defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable saveBugsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function findBugsButtonActionPerformed(java.awt.event.ActionEvent) in line 2147
      48 lines of code
      1 parameters
      5 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getFileCount() defined in edu::umd::cs::findbugs::Project
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
      uses variable bugDescriptionEditorPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable currentBugDetailsKey defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceTextArea defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable INFO defined in edu::umd::cs::findbugs::gui::Logger
      uses variable analysisPriority defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function isCompleted() defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses function reportAnalysisErrors() defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function synchAnalysisRun(AnalysisRun) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function exceptionOccurred() defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses function getException() defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses function addLine(String) defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses function finish() defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   function focusGainedHandler(java.awt.event.FocusEvent) in line 1848
      7 lines of code
      1 parameters
      2 conditional paths
      uses function ableEditMenu() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function formWindowOpened(java.awt.event.WindowEvent) in line 1741
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable groupByTabbedPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bySummary defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function fullDescriptionsItemActionPerformed(java.awt.event.ActionEvent) in line 2073
      17 lines of code
      1 parameters
      5 conditional paths
      uses variable bugTreeList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function getBugInstanceComparator(String) in line 3072
      12 lines of code
      1 parameters
      5 conditional paths
      uses variable bugInstanceByClassComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugInstanceByPackageComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugInstanceByTypeComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugInstanceByCategoryComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function getCurrentAnalysisRun() in line 2658
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentAnalysisRun defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function getCurrentBugInstance() in line 2665
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getCurrentBugTree() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getTreeSelectionOf(JTree,Class< E >) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function getCurrentBugTree() in line 2703
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable groupByTabbedPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function getCurrentProject() in line 2651
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentProject defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function getFilterSettings() in line 3638
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getFilterSettings() defined in edu::umd::cs::findbugs::config::UserPreferences
   function getGroupComparator(String) in line 3088
      12 lines of code
      1 parameters
      5 conditional paths
      uses variable bugInstanceClassComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugInstancePackageComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugInstanceTypeComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugInstanceCategoryComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function getLogger() in line 3597
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function getMenuMask() in line 3970
      3 lines of code
      0 parameters
      1 conditional paths
   function getPriorityThreshold() in line 3645
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getFilterSettings() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getMinPriorityAsInt() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function getSettingList() in line 3654
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable settingList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function getTreeSelectionOf(JTree,Class< E >) in line 2629
      18 lines of code
      2 parameters
      4 conditional paths
   function getView() in line 3123
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentView defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function highPriorityButtonActionPerformed(java.awt.event.ActionEvent) in line 1884
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setPriorityThreshold(int) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function initComponents() in line 526
      1198 lines of code
      0 parameters
      1 conditional paths
      uses variable priorityButtonGroup defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable effortButtonGroup defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewPanel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable emptyPanel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable reportPanel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable editProjectPanel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jarFileLabel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jarNameTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable addJarButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jarFileListLabel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDirLabel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable srcDirTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable addSourceDirButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDirListLabel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable removeJarButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable removeSrcDirButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator1 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable browseJarButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable browseSrcDirButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable editProjectLabel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator2 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable findBugsButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator4 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jarFileListScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jarFileList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDirListScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryLabel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryListLabel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable browseClasspathEntryButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable addClasspathEntryButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable removeClasspathEntryButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryListScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator5 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceUpButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDownButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathUpButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathDownButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugTreePanel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugTreeBugDetailsSplitter defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable groupByTabbedPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byClassScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byClassBugTree defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable JTREE_FONT defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byPackageScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byPackageBugTree defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byBugTypeScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byBugTypeBugTree defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byBugCategoryScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byBugCategoryBugTree defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bySummary defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugSummaryEditorPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugDetailsTabbedPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugDescriptionScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugDescriptionEditorPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceTextAreaScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceTextArea defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable annotationTextAreaScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable annotationTextArea defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable urlLabel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jPanel1 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable logoLabel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable growBoxSpacer defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable theMenuBar defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable fileMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable newProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable openProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable recentProjectsMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator9 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable closeProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable saveProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable saveProjectAsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable reloadProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator3 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable loadBugsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable saveBugsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator6 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable exitItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable editMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable cutItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable copyItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable pasteItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator10 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable selectAllItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewBugDetailsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable fullDescriptionsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator7 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable filterWarningsMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable expPriorityButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable lowPriorityButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable mediumPriorityButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable highPriorityButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator11 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator8 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewBugsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable settingsMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable configureDetectorsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable effortMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable minEffortItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable normalEffortItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable maxEffortItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable helpMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable aboutItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function exitForm(java.awt.event.WindowEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function formWindowOpened(java.awt.event.WindowEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable BUTTON_FONT defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function jarNameTextFieldActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function focusGainedHandler(java.awt.event.FocusEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addJarButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function srcDirTextFieldActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addSourceDirButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function removeJarButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function removeSrcDirButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function browseJarButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function browseSrcDirButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable LABEL_FONT defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function findBugsButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function disableEditKeyBindings(JList) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function browseClasspathEntryButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addClasspathEntryButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function removeClasspathEntryButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function sourceUpButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function sourceDownButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function classpathUpButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function classpathDownButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function bugTreeBugDetailsSplitterPropertyChange(java.beans.PropertyChangeEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable SOURCE_FONT defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceLineNumberer defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function equalizeControls(JComponent[]) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function localiseButton(AbstractButton,String,String,boolean) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function fileMenuMenuSelected(javax.swing.event.MenuEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function newProjectItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function openProjectItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function rebuildRecentProjectsMenu() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function closeProjectItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function saveProjectItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function saveProjectAsItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function reloadProjectItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function loadBugsItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function saveBugsItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function exitItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function cutActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function copyActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function pasteActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function selectAllActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function viewMenuMenuSelected(javax.swing.event.MenuEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function viewBugDetailsItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function fullDescriptionsItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getPriorityThreshold() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function expPriorityButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function lowPriorityButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function mediumPriorityButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function highPriorityButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function viewProjectItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function viewBugsItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function settingsMenuActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function configureDetectorsItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function minEffortItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function normalEffortItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function maxEffortItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function aboutItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function isSplitterMaximized(JSplitPane,java.beans.PropertyChangeEvent) in line 2682
      11 lines of code
      2 parameters
      1 conditional paths
      uses variable DIVIDER_FUDGE defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function jarNameTextFieldActionPerformed(java.awt.event.ActionEvent) in line 2217
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addJarToList() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function loadBugsFromFile(File) in line 1932
      12 lines of code
      1 parameters
      1 conditional paths
      uses function loadBugsFromFile(File) defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function setProjectFileName(String) defined in edu::umd::cs::findbugs::Project
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function synchAnalysisRun(AnalysisRun) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function loadBugsFromURL(String) in line 1945
      12 lines of code
      1 parameters
      1 conditional paths
      uses function loadBugsFromInputStream(InputStream) defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function synchAnalysisRun(AnalysisRun) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function loadBugsItemActionPerformed(java.awt.event.ActionEvent) in line 1958
      22 lines of code
      1 parameters
      4 conditional paths
      uses function createFileChooser() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable xmlFileFilter defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function chooseFile(JFileChooser,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function loadBugsFromFile(File) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
   function localiseButton(AbstractButton,String,String,boolean) in line 2426
      4 lines of code
      4 parameters
      1 conditional paths
   function lowPriorityButtonActionPerformed(java.awt.event.ActionEvent) in line 1892
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setPriorityThreshold(int) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function main(String) in line 3752
      protection public
      70 lines of code
      1 parameters
      11 conditional paths
      uses function parse(String,int,int,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function showSynopsis() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function showCommandLineOptions() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getProject() defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function getFileCount() defined in edu::umd::cs::findbugs::Project
      uses function FindBugsFrame() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getBugsFilename() defined in edu::umd::cs::findbugs::gui::FindBugsFrame::SwingCommandLine
      uses function loadBugsFromFile(File) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function loadBugsFromURL(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setPriority(int) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getPriority() defined in edu::umd::cs::findbugs::gui::FindBugsFrame::SwingCommandLine
      uses function getSettingList() defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses variable settingList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable MIN_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable minEffortItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable MAX_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable maxEffortItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function maxEffortItemActionPerformed(java.awt.event.ActionEvent) in line 1725
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable settingList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable MAX_EFFORT defined in edu::umd::cs::findbugs::FindBugs
   function mediumPriorityButtonActionPerformed(java.awt.event.ActionEvent) in line 1888
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setPriorityThreshold(int) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function minEffortItemActionPerformed(java.awt.event.ActionEvent) in line 1733
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable settingList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable MIN_EFFORT defined in edu::umd::cs::findbugs::FindBugs
   function moveEntriesDown(JList) in line 2372
      21 lines of code
      1 parameters
      4 conditional paths
   function moveEntriesUp(JList) in line 2350
      21 lines of code
      1 parameters
      4 conditional paths
   function newProjectItemActionPerformed(java.awt.event.ActionEvent) in line 2238
      8 lines of code
      1 parameters
      2 conditional paths
      uses function closeProjectHook(Project,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function normalEffortItemActionPerformed(java.awt.event.ActionEvent) in line 1729
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable settingList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable DEFAULT_EFFORT defined in edu::umd::cs::findbugs::FindBugs
   function openProjectItemActionPerformed(java.awt.event.ActionEvent) in line 2115
      23 lines of code
      1 parameters
      4 conditional paths
      uses function closeProjectHook(Project,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function createFileChooser() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable projectFileFilter defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function chooseFileToOpen(JFileChooser) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function read(String) defined in edu::umd::cs::findbugs::Project
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function useProject(String) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function rebuildRecentProjectsMenu() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
   function openRecentProjectItemActionPerformed(java.awt.event.ActionEvent) in line 2330
      19 lines of code
      1 parameters
      3 conditional paths
      uses function closeProjectHook(Project,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function read(String) defined in edu::umd::cs::findbugs::Project
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function useProject(String) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function removeProject(String) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
      uses function rebuildRecentProjectsMenu() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function parsePaths(String) in line 3174
      3 lines of code
      1 parameters
      1 conditional paths
   function pasteActionPerformed(java.awt.event.ActionEvent) in line 1779
      30 lines of code
      1 parameters
      9 conditional paths
      uses variable jarFileList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jarNameTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addJarButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable srcDirTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addSourceDirButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addClasspathEntryButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function populateAnalysisRunTreeModel(AnalysisRun,final String) in line 2976
      92 lines of code
      2 parameters
      12 conditional paths
      uses function getTreeModel(String) defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getBugInstanceComparator(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getBugInstances() defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getFilterSettings() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function displayWarning(BugInstance) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function toString() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugTypeDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugCategoryDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses variable count defined in edu::umd::cs::findbugs::gui::FindBugsFrame::BugTreeNode
      uses function getMemberCount() defined in edu::umd::cs::findbugs::gui::BugInstanceGroup
      uses function incrementMemberCount() defined in edu::umd::cs::findbugs::gui::BugInstanceGroup
      uses function BugTreeNode(BugInstance) defined in edu::umd::cs::findbugs::gui::FindBugsFrame::BugTreeNode
      uses variable BUG_COUNT defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setCount(int) defined in edu::umd::cs::findbugs::gui::FindBugsFrame::BugTreeNode
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function getGroupComparator(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function group(Collection< ElementType >,Comparator< ElementType >) defined in edu::umd::cs::findbugs::gui::Grouper
   function postInitComponents() in line 2439
      148 lines of code
      0 parameters
      8 conditional paths
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getBugCategories() defined in edu::umd::cs::findbugs::I18N
      uses variable bugCategoryCheckBoxList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugCategoryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable count defined in edu::umd::cs::findbugs::gui::FindBugsFrame::BugTreeNode
      uses function getBugCategoryDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses variable BUTTON_FONT defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getFilterSettings() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function toggleBugCategory(JCheckBoxMenuItem) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable filterWarningsMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewPanelLayout defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewPanel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugTreeList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byClassBugTree defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byPackageBugTree defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byBugTypeBugTree defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byBugCategoryBugTree defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function bugTreeSelectionChanged(TreeSelectionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jarFileList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceTextArea defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function updateTitle(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable logoLabel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getMenuMask() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable newProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable openProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable saveProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable closeProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable reloadProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable cutItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable copyItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable pasteItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable selectAllItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable MAC_OS_X defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable saveProjectAsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable loadBugsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable saveBugsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable growBoxSpacer defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable fileMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable exitItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator6 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable theMenuBar defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable helpMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
   function rebuildRecentProjectsMenu() in line 2588
      27 lines of code
      0 parameters
      3 conditional paths
      uses function getRecentProjects() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable recentProjectsMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable BUTTON_FONT defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function openRecentProjectItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function reloadProjectItemActionPerformed(java.awt.event.ActionEvent) in line 1988
      18 lines of code
      1 parameters
      3 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getProjectFileName() defined in edu::umd::cs::findbugs::Project
      uses function read(String) defined in edu::umd::cs::findbugs::Project
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function findBugsButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
   function removeClasspathEntryButtonActionPerformed(java.awt.event.ActionEvent) in line 2039
      11 lines of code
      1 parameters
      2 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function removeAuxClasspathEntry(int) defined in edu::umd::cs::findbugs::Project
   function removeJarButtonActionPerformed(java.awt.event.ActionEvent) in line 2263
      11 lines of code
      1 parameters
      2 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jarFileList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function removeFile(int) defined in edu::umd::cs::findbugs::Project
   function removeSrcDirButtonActionPerformed(java.awt.event.ActionEvent) in line 2251
      11 lines of code
      1 parameters
      2 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function removeSourceDir(int) defined in edu::umd::cs::findbugs::Project
   function resyncAuxClasspathEntries() in line 2394
      10 lines of code
      0 parameters
      3 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getNumAuxClasspathEntries() defined in edu::umd::cs::findbugs::Project
      uses function removeAuxClasspathEntry(int) defined in edu::umd::cs::findbugs::Project
      uses variable classpathEntryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addAuxClasspathEntry(String) defined in edu::umd::cs::findbugs::Project
   function resyncSourceEntries() in line 2405
      10 lines of code
      0 parameters
      3 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getNumSourceDirs() defined in edu::umd::cs::findbugs::Project
      uses function removeSourceDir(int) defined in edu::umd::cs::findbugs::Project
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
   function saveBugsItemActionPerformed(java.awt.event.ActionEvent) in line 1900
      31 lines of code
      1 parameters
      6 conditional paths
      uses variable currentAnalysisRun defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
      uses function createFileChooser() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable xmlFileFilter defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function chooseFile(JFileChooser,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable currentBugInstance defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function synchBugAnnotation(BugInstance) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function saveBugsToFile(File) defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
   function saveProject(Project,String) in line 2795
      3 lines of code
      2 parameters
      1 conditional paths
   function saveProject(Project,String,boolean) in line 2809
      45 lines of code
      3 parameters
      5 conditional paths
      uses function getProjectFileName() defined in edu::umd::cs::findbugs::Project
      uses function getOption(String) defined in edu::umd::cs::findbugs::Project
      uses variable RELATIVE_PATHS defined in edu::umd::cs::findbugs::Project
      uses function createFileChooser() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable projectFileFilter defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function chooseFile(JFileChooser,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function write(String,boolean,String) defined in edu::umd::cs::findbugs::Project
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable INFO defined in edu::umd::cs::findbugs::gui::Logger
      uses function setProjectFileName(String) defined in edu::umd::cs::findbugs::Project
      uses function useProject(String) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function read() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function rebuildRecentProjectsMenu() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function updateTitle(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
   function saveProjectAsItemActionPerformed(java.awt.event.ActionEvent) in line 2007
      3 lines of code
      1 parameters
      1 conditional paths
      uses function saveProject(Project,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function saveProjectItemActionPerformed(java.awt.event.ActionEvent) in line 2139
      3 lines of code
      1 parameters
      1 conditional paths
      uses function saveProject(Project,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function selectAllActionPerformed(java.awt.event.ActionEvent) in line 1747
      11 lines of code
      1 parameters
      4 conditional paths
   function setPriority(int) in line 3825
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPriorityThreshold(int) in line 2721
      7 lines of code
      1 parameters
      3 conditional paths
      uses function getFilterSettings() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable currentAnalysisRun defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function synchAnalysisRun(AnalysisRun) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function setProject(Project) in line 2758
      21 lines of code
      1 parameters
      2 conditional paths
      uses variable currentProject defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function synchProject(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setView(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable editMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewBugsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function updateTitle(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function ableEditMenu() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function setSummary(String) in line 2939
      33 lines of code
      1 parameters
      4 conditional paths
      uses variable bugSummaryEditorPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable WARNING defined in edu::umd::cs::findbugs::gui::Logger
   function settingsMenuActionPerformed(java.awt.event.ActionEvent) in line 1737
      3 lines of code
      1 parameters
      1 conditional paths
   function setView(String) in line 3104
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable viewPanelLayout defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewPanel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function checkBugDetailsVisibility() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewBugsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable currentView defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function ableEditMenu() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function showBugInfo(BugInstance) in line 3403
      35 lines of code
      1 parameters
      3 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses variable currentBugDetailsKey defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getDetailHTML(String) defined in edu::umd::cs::findbugs::I18N
      uses variable bugDescriptionEditorPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable WARNING defined in edu::umd::cs::findbugs::gui::Logger
   function showCommandLineOptions() in line 3829
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function printUsage(OutputStream) defined in edu::umd::cs::findbugs::config::CommandLine
   function showSynopsis() in line 3834
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function sourceDownButtonActionPerformed(java.awt.event.ActionEvent) in line 1861
      4 lines of code
      1 parameters
      2 conditional paths
      uses function moveEntriesDown(JList) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function resyncSourceEntries() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function sourceUpButtonActionPerformed(java.awt.event.ActionEvent) in line 1866
      4 lines of code
      1 parameters
      2 conditional paths
      uses function moveEntriesUp(JList) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function resyncSourceEntries() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function srcDirTextFieldActionPerformed(java.awt.event.ActionEvent) in line 2213
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addSourceDirToList() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function synchAnalysisRun(AnalysisRun) in line 2919
      19 lines of code
      1 parameters
      3 conditional paths
      uses variable GROUP_BY_ORDER_LIST defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setTreeModel(String,DefaultTreeModel) defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function populateAnalysisRunTreeModel(AnalysisRun,final String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugTreeList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable currentAnalysisRun defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setSummary(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getSummary() defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function setView(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function synchBugAnnotation(BugInstance) in line 3445
      23 lines of code
      1 parameters
      4 conditional paths
      uses variable currentBugInstance defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable annotationTextArea defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setAnnotationText(String,@CheckForNull BugCollection) defined in edu::umd::cs::findbugs::BugInstance
      uses function getAnnotationText() defined in edu::umd::cs::findbugs::BugInstance
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable WARNING defined in edu::umd::cs::findbugs::gui::Logger
   function synchBugInstance() in line 3229
      63 lines of code
      0 parameters
      13 conditional paths
      uses function getCurrentBugInstance() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewBugDetailsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentBugTree() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses variable currentSourceLineAnnotation defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentAnalysisRun() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function viewSource(Project,AnalysisRun,final SourceLineAnnotation) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceTextArea defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable WARNING defined in edu::umd::cs::findbugs::gui::Logger
      uses function showBugInfo(BugInstance) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function synchBugAnnotation(BugInstance) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable currentBugInstance defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function synchProject(Project) in line 2887
      26 lines of code
      1 parameters
      4 conditional paths
      uses variable jarNameTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable srcDirTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jarFileList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getFileCount() defined in edu::umd::cs::findbugs::Project
      uses function getFile(int) defined in edu::umd::cs::findbugs::Project
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getNumSourceDirs() defined in edu::umd::cs::findbugs::Project
      uses function getSourceDir(int) defined in edu::umd::cs::findbugs::Project
      uses variable classpathEntryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getNumAuxClasspathEntries() defined in edu::umd::cs::findbugs::Project
      uses function getAuxClasspathEntry(int) defined in edu::umd::cs::findbugs::Project
   function toggleBugCategory(JCheckBoxMenuItem) in line 3476
      27 lines of code
      1 parameters
      6 conditional paths
      uses variable bugCategoryCheckBoxList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function error(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugCategoryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getFilterSettings() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function removeCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable currentAnalysisRun defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function synchAnalysisRun(AnalysisRun) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function write() defined in edu::umd::cs::findbugs::config::UserPreferences
   function updateCurrentDirectoryFromDialog(JFileChooser,int) in line 3586
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable currentDirectory defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function updateTitle(Project) in line 2780
      6 lines of code
      1 parameters
      2 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::Project
   function verifyFileSelection(File) in line 3623
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function viewBugDetailsItemActionPerformed(java.awt.event.ActionEvent) in line 2091
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getView() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function checkBugDetailsVisibility() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function viewBugsItemActionPerformed(java.awt.event.ActionEvent) in line 1876
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setView(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function viewMenuMenuSelected(javax.swing.event.MenuEvent) in line 2011
      7 lines of code
      1 parameters
      1 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewBugDetailsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable fullDescriptionsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function viewProjectItemActionPerformed(java.awt.event.ActionEvent) in line 1880
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setView(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function viewSource(Project,AnalysisRun,final SourceLineAnnotation) in line 3304
      93 lines of code
      3 parameters
      7 conditional paths
      uses variable sourceTextArea defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getFullFileName() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function getInputStream() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable WARNING defined in edu::umd::cs::findbugs::gui::Logger
      uses variable sourceTextAreaScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
   function writeToLog(String) in line 3613
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function FindBugsFrame() in line 501
      protection public
      14 lines of code
      0 parameters
      2 conditional paths
      uses function read() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable currentDirectory defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function initComponents() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function postInitComponents() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   variable aboutItem in line 3843
   variable addClasspathEntryButton in line 3844
   variable addJarButton in line 3845
   variable addSourceDirButton in line 3846
   variable analysisPriority in line 3823
   variable annotationTextArea in line 3847
   variable annotationTextAreaScrollPane in line 3848
   variable archiveAndDirectoryFilter in line 465
   variable archiveExtensionSet in line 429
   variable auxClasspathEntryFileFilter in line 404
   variable browseClasspathEntryButton in line 3849
   variable browseJarButton in line 3850
   variable browseSrcDirButton in line 3851
   variable BUG_COUNT in line 487
   variable bugCategoryCheckBoxList in line 3963
   variable bugCategoryList in line 3964
   variable bugDescriptionEditorPane in line 3852
   variable bugDescriptionScrollPane in line 3853
   variable bugDetailsTabbedPane in line 3854
   variable bugInstanceByCategoryComparator in line 363
   variable bugInstanceByClassComparator in line 307
   variable bugInstanceByPackageComparator in line 325
   variable bugInstanceByTypeComparator in line 344
   variable bugInstanceCategoryComparator in line 288
   variable bugInstanceClassComparator in line 220
   variable bugInstancePackageComparator in line 238
   variable bugInstanceTypeComparator in line 258
   variable bugSummaryEditorPane in line 3855
   variable bugTreeBugDetailsSplitter in line 3856
   variable bugTreeList in line 3958
   variable bugTreePanel in line 3857
   variable BUTTON_FONT in line 152
   variable byBugCategoryBugTree in line 3858
   variable byBugCategoryScrollPane in line 3859
   variable byBugTypeBugTree in line 3860
   variable byBugTypeScrollPane in line 3861
   variable byClassBugTree in line 3862
   variable byClassScrollPane in line 3863
   variable byPackageBugTree in line 3864
   variable byPackageScrollPane in line 3865
   variable bySummary in line 3866
   variable classpathDownButton in line 3867
   variable classpathEntryLabel in line 3868
   variable classpathEntryList in line 3869
   variable classpathEntryListLabel in line 3870
   variable classpathEntryListScrollPane in line 3871
   variable classpathEntryTextField in line 3872
   variable classpathUpButton in line 3873
   variable closeProjectItem in line 3874
   variable configureDetectorsItem in line 3875
   variable copyItem in line 3876
   variable currentAnalysisRun in line 3959
   variable currentBugDetailsKey in line 3962
   variable currentBugInstance in line 3960
   variable currentDirectory in line 3956
   variable currentProject in line 3957
   variable currentSourceLineAnnotation in line 3961
   variable currentView in line 3955
   variable cutItem in line 3877
   variable DIVIDER_FUDGE in line 485
   variable editMenu in line 3878
   variable editProjectLabel in line 3879
   variable editProjectPanel in line 3880
   variable effortButtonGroup in line 3881
   variable effortMenu in line 3882
   variable emptyPanel in line 3883
   variable exitItem in line 3884
   variable expPriorityButton in line 3885
   variable fileMenu in line 3886
   variable filterWarningsMenu in line 3887
   variable findBugsButton in line 3888
   variable fontSize in line 137
   variable fullDescriptionsItem in line 3889
   variable GROUP_BY_ORDER_LIST in line 475
   variable groupByTabbedPane in line 3890
   variable growBoxSpacer in line 3891
   variable helpMenu in line 3892
   variable highPriorityButton in line 3893
   variable jarFileLabel in line 3906
   variable jarFileList in line 3907
   variable jarFileListLabel in line 3908
   variable jarFileListScrollPane in line 3909
   variable jarNameTextField in line 3910
   variable jPanel1 in line 3894
   variable jSeparator1 in line 3895
   variable jSeparator10 in line 3896
   variable jSeparator11 in line 3897
   variable jSeparator2 in line 3898
   variable jSeparator3 in line 3899
   variable jSeparator4 in line 3900
   variable jSeparator5 in line 3901
   variable jSeparator6 in line 3902
   variable jSeparator7 in line 3903
   variable jSeparator8 in line 3904
   variable jSeparator9 in line 3905
   variable JTREE_FONT in line 142
   variable LABEL_FONT in line 147
   variable loadBugsItem in line 3911
   variable logger in line 3953
   variable logoLabel in line 3912
   variable lowPriorityButton in line 3913
   variable MAC_OS_X in line 3968
   variable maxEffortItem in line 3914
   variable mediumPriorityButton in line 3915
   variable minEffortItem in line 3916
   variable newProjectItem in line 3917
   variable normalEffortItem in line 3918
   variable openProjectItem in line 3919
   variable pasteItem in line 3920
   variable priorityButtonGroup in line 3921
   variable projectFileFilter in line 383
   variable recentProjectsMenu in line 3922
   variable reloadProjectItem in line 3923
   variable removeClasspathEntryButton in line 3924
   variable removeJarButton in line 3925
   variable removeSrcDirButton in line 3926
   variable reportPanel in line 3927
   variable saveBugsItem in line 3928
   variable saveProjectAsItem in line 3929
   variable saveProjectItem in line 3930
   variable selectAllItem in line 3931
   variable SELECTION_VOFFSET in line 3293
   variable serialVersionUID in line 154
   variable settingList in line 3965
   variable settingsMenu in line 3932
   variable SOURCE_FONT in line 141
   variable sourceDirLabel in line 3933
   variable sourceDirList in line 3934
   variable sourceDirListLabel in line 3935
   variable sourceDirListScrollPane in line 3936
   variable sourceDownButton in line 3937
   variable sourceLineNumberer in line 3939
   variable sourceTextArea in line 3938
   variable sourceTextAreaScrollPane in line 3940
   variable sourceUpButton in line 3941
   variable srcDirTextField in line 3942
   variable theMenuBar in line 3943
   variable urlLabel in line 3944
   variable viewBugDetailsItem in line 3945
   variable viewBugsItem in line 3946
   variable viewMenu in line 3947
   variable viewPanel in line 3948
   variable viewPanelLayout in line 3954
   variable viewProjectItem in line 3949
   variable xmlFileFilter in line 424
module edu::umd::cs::findbugs::gui::FindBugsFrame::BugTreeNode
   inherits from javax::swing::tree::DefaultMutableTreeNode
   function setCount(int) in line 178
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable count defined in edu::umd::cs::findbugs::gui::FindBugsFrame::BugTreeNode
   function toString() in line 183
      protection public
      20 lines of code
      0 parameters
      4 conditional paths
      uses variable count defined in edu::umd::cs::findbugs::gui::FindBugsFrame::BugTreeNode
      uses function isExperimental() defined in edu::umd::cs::findbugs::BugInstance
      uses variable fullDescriptionsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
      uses function toString() defined in edu::umd::cs::findbugs::BugInstance
   function BugTreeNode(BugInstance) in line 173
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable count defined in edu::umd::cs::findbugs::gui::FindBugsFrame::BugTreeNode
   variable count in line 171
   variable serialVersionUID in line 170
module edu::umd::cs::findbugs::gui::FindBugsFrame::BugInstanceClassComparator
   inherits from java::util::Comparator
   function compare(BugInstance,BugInstance) in line 212
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function compareTo(BugAnnotation) defined in edu::umd::cs::findbugs::ClassAnnotation
module edu::umd::cs::findbugs::gui::FindBugsFrame::BugInstancePackageComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(BugInstance,BugInstance) in line 230
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   variable serialVersionUID in line 229
module edu::umd::cs::findbugs::gui::FindBugsFrame::BugInstanceTypeComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(BugInstance,BugInstance) in line 248
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::BugInstance
   variable serialVersionUID in line 247
module edu::umd::cs::findbugs::gui::FindBugsFrame::BugInstanceCategoryComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(BugInstance,BugInstance) in line 269
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getCategory(BugInstance) in line 273
      10 lines of code
      1 parameters
      3 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
   variable serialVersionUID in line 267
module edu::umd::cs::findbugs::gui::FindBugsFrame::BugInstanceByClassComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(BugInstance,BugInstance) in line 296
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable bugInstanceClassComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function compareTo(BugInstance) defined in edu::umd::cs::findbugs::BugInstance
   variable serialVersionUID in line 295
module edu::umd::cs::findbugs::gui::FindBugsFrame::BugInstanceByPackageComparator
   inherits from java::util::Comparator
   function compare(BugInstance,BugInstance) in line 314
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable bugInstancePackageComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function compareTo(BugInstance) defined in edu::umd::cs::findbugs::BugInstance
module edu::umd::cs::findbugs::gui::FindBugsFrame::BugInstanceByTypeComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(BugInstance,BugInstance) in line 333
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable bugInstanceTypeComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function compareTo(BugInstance) defined in edu::umd::cs::findbugs::BugInstance
   variable serialVersionUID in line 332
module edu::umd::cs::findbugs::gui::FindBugsFrame::BugInstanceByCategoryComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(BugInstance,BugInstance) in line 352
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable bugInstanceCategoryComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function compareTo(BugInstance) defined in edu::umd::cs::findbugs::BugInstance
   variable serialVersionUID in line 351
module edu::umd::cs::findbugs::gui::FindBugsFrame::ProjectFileFilter
   inherits from javax::swing::filechooser::FileFilter
   function accept(File) in line 370
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDescription() in line 375
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui::FindBugsFrame::AuxClasspathEntryFileFilter
   inherits from javax::swing::filechooser::FileFilter
   function accept(File) in line 391
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDescription() in line 396
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui::FindBugsFrame::XMLFileFilter
   inherits from javax::swing::filechooser::FileFilter
   function accept(File) in line 411
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDescription() in line 416
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui::FindBugsFrame::ArchiveAndDirectoryFilter
   inherits from javax::swing::filechooser::FileFilter
   function accept(File) in line 444
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable archiveExtensionSet defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function getDescription() in line 457
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui::FindBugsFrame::SwingCommandLine
   inherits from edu::umd::cs::findbugs::FindBugsCommandLine
   function getBugsFilename() in line 3675
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPriority() in line 3687
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function handleOption(String,String) in line 3692
      34 lines of code
      2 parameters
      8 conditional paths
   function handleOptionWithArgument(String,String) in line 3729
      15 lines of code
      2 parameters
      4 conditional paths
   function SwingCommandLine() in line 3663
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   variable priority in line 3681
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/gui/Grouper.java
module edu::umd::cs::findbugs::gui::Grouper
   function group(Collection< ElementType >,Comparator< ElementType >) in line 66
      protection public
      16 lines of code
      2 parameters
      3 conditional paths
      uses variable callback defined in edu::umd::cs::findbugs::gui::Grouper
      uses function addToGroup(ElementType2) defined in edu::umd::cs::findbugs::gui::Grouper::Callback
      uses function startGroup(ElementType2) defined in edu::umd::cs::findbugs::gui::Grouper::Callback
   function Grouper(Callback< ElementType >) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable callback defined in edu::umd::cs::findbugs::gui::Grouper
   variable callback in line 47
module edu::umd::cs::findbugs::gui::Grouper::Callback
   function addToGroup(ElementType2) in line 44
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function startGroup(ElementType2) in line 42
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/gui/LineNumberer.java
module edu::umd::cs::findbugs::gui::LineNumberer
   inherits from javax::swing::JComponent
   function paintComponent(Graphics) in line 65
      protection public
      25 lines of code
      1 parameters
      2 conditional paths
      uses variable fm defined in edu::umd::cs::findbugs::gui::LineNumberer
      uses variable textArea defined in edu::umd::cs::findbugs::gui::LineNumberer
      uses variable PAD defined in edu::umd::cs::findbugs::gui::LineNumberer
   function setFont(Font) in line 50
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setWidths() in line 55
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable fm defined in edu::umd::cs::findbugs::gui::LineNumberer
      uses variable PROTOTYPE defined in edu::umd::cs::findbugs::gui::LineNumberer
      uses variable PAD defined in edu::umd::cs::findbugs::gui::LineNumberer
   function LineNumberer(JTextArea) in line 40
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function setFont(Font) defined in edu::umd::cs::findbugs::gui::LineNumberer
      uses variable textArea defined in edu::umd::cs::findbugs::gui::LineNumberer
      uses variable fm defined in edu::umd::cs::findbugs::gui::LineNumberer
      uses function setWidths() defined in edu::umd::cs::findbugs::gui::LineNumberer
   variable fm in line 38
   variable PAD in line 34
      protection public
   variable PROTOTYPE in line 35
      protection public
   variable textArea in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/gui/Logger.java
module edu::umd::cs::findbugs::gui::Logger
   function logMessage(int,String) in line 29
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   variable ERROR in line 27
      protection public
   variable INFO in line 25
      protection public
   variable WARNING in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/gui/LogSync.java
module edu::umd::cs::findbugs::gui::LogSync
   function error(String) in line 26
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writeToLog(String) in line 25
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/gui/OSXAdapter.java
module edu::umd::cs::findbugs::gui::OSXAdapter
   inherits from com::apple::eawt::ApplicationAdapter
   function enablePrefs(boolean) in line 102
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable theApplication defined in edu::umd::cs::findbugs::gui::OSXAdapter
   function handleAbout(ApplicationEvent) in line 32
      protection public
      18 lines of code
      1 parameters
      2 conditional paths
      uses variable mainApp defined in edu::umd::cs::findbugs::gui::OSXAdapter
   function handlePreferences(ApplicationEvent) in line 52
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable mainApp defined in edu::umd::cs::findbugs::gui::OSXAdapter
   function handleQuit(ApplicationEvent) in line 63
      protection public
      21 lines of code
      1 parameters
      2 conditional paths
      uses variable mainApp defined in edu::umd::cs::findbugs::gui::OSXAdapter
   function registerMacOSXApplication(FindBugsFrame) in line 89
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable theApplication defined in edu::umd::cs::findbugs::gui::OSXAdapter
      uses variable theAdapter defined in edu::umd::cs::findbugs::gui::OSXAdapter
      uses function OSXAdapter(FindBugsFrame) defined in edu::umd::cs::findbugs::gui::OSXAdapter
   function OSXAdapter(FindBugsFrame) in line 23
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mainApp defined in edu::umd::cs::findbugs::gui::OSXAdapter
   variable mainApp in line 21
   variable theAdapter in line 17
   variable theApplication in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/OSXAdapter.java
module edu::umd::cs::findbugs::gui2::OSXAdapter
   inherits from com::apple::eawt::ApplicationAdapter
   function enablePrefs(boolean) in line 120
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable theApplication defined in edu::umd::cs::findbugs::gui2::OSXAdapter
   function handleAbout(ApplicationEvent) in line 50
      protection public
      18 lines of code
      1 parameters
      2 conditional paths
      uses variable mainApp defined in edu::umd::cs::findbugs::gui2::OSXAdapter
   function handlePreferences(ApplicationEvent) in line 70
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable mainApp defined in edu::umd::cs::findbugs::gui2::OSXAdapter
   function handleQuit(ApplicationEvent) in line 81
      protection public
      21 lines of code
      1 parameters
      2 conditional paths
      uses variable mainApp defined in edu::umd::cs::findbugs::gui2::OSXAdapter
   function registerMacOSXApplication(MainFrame) in line 107
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable mainApp defined in edu::umd::cs::findbugs::gui2::OSXAdapter
      uses variable theApplication defined in edu::umd::cs::findbugs::gui2::OSXAdapter
      uses variable theAdapter defined in edu::umd::cs::findbugs::gui2::OSXAdapter
   function OSXAdapter() in line 42
      2 lines of code
      0 parameters
      1 conditional paths
   variable mainApp in line 40
   variable theAdapter in line 36
   variable theApplication in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/gui/RunAnalysisDialog.java
module edu::umd::cs::findbugs::gui::RunAnalysisDialog
   inherits from javax::swing::JDialog
   function cancelButtonActionPerformed(java.awt.event.ActionEvent) in line 343
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable analysisThread defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   function closeDialog(java.awt.event.WindowEvent) in line 367
      4 lines of code
      1 parameters
      1 conditional paths
   function exceptionOccurred() in line 192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fatalException defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   function formWindowOpened(java.awt.event.WindowEvent) in line 354
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable analysisThread defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable analysisPriority defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   function getException() in line 199
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fatalException defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   function initComponents() in line 209
      133 lines of code
      0 parameters
      1 conditional paths
      uses variable findBugsLabel defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable countLabel defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable progressLabel defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable progressBar defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable cancelButton defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable jSeparator1 defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable stageLabel defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable stageNameLabel defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable topVerticalFiller defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable bottomVerticalFiller defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable countValueLabel defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses function closeDialog(java.awt.event.WindowEvent) defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses function formWindowOpened(java.awt.event.WindowEvent) defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses function cancelButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   function isCompleted() in line 180
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable completed defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   function setCompleted(boolean) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable completed defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   function setException(Exception) in line 184
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fatalException defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   function RunAnalysisDialog(java.awt.Frame,AnalysisRun,int) in line 133
      protection public
      38 lines of code
      3 parameters
      2 conditional paths
      uses function initComponents() defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable analysisPriority defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable analysisRun defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses function execute(FindBugsProgress) defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function setCompleted(boolean) defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses function setException(Exception) defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses function closeDialog(java.awt.event.WindowEvent) defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   variable analysisPriority in line 128
   variable analysisRun in line 124
   variable analysisThread in line 125
   variable bottomVerticalFiller in line 373
   variable cancelButton in line 374
   variable completed in line 126
   variable countLabel in line 375
   variable countValueLabel in line 376
   variable fatalException in line 127
   variable findBugsLabel in line 377
   variable jSeparator1 in line 378
   variable progressBar in line 379
   variable progressLabel in line 380
   variable serialVersionUID in line 46
   variable stageLabel in line 381
   variable stageNameLabel in line 382
   variable topVerticalFiller in line 383
module edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
   inherits from edu::umd::cs::findbugs::FindBugsProgress
   function beginStage(final String,final int) in line 83
      16 lines of code
      2 parameters
      1 conditional paths
      uses variable goal defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
      uses function getGoal() defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
      uses variable stageNameLabel defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable countValueLabel defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable progressBar defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   function finishArchive() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function step() defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
   function finishClass() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function step() defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
   function finishPerClassAnalysis() in line 75
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable stageNameLabel defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   function getCount() in line 55
      3 lines of code
      0 parameters
      1 conditional paths
   function getGoal() in line 51
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable goal defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
   function predictPassCount(int[]) in line 115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function reportNumberOfArchives(final int) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function beginStage(final String,final int) defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
   function startAnalysis(int) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function beginStage(final String,final int) defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
   function startArchive(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function step() in line 100
      14 lines of code
      0 parameters
      1 conditional paths
      uses function getCount() defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
      uses variable goal defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
      uses function getGoal() defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
      uses variable countValueLabel defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable progressBar defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   variable goal in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/gui/SwingGUIBugReporter.java
module edu::umd::cs::findbugs::gui::SwingGUIBugReporter
   inherits from edu::umd::cs::findbugs::TextUIBugReporter
   function createDialog() in line 85
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable errorDialog defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses variable analysisRun defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function getFrame() defined in edu::umd::cs::findbugs::gui::AnalysisRun
   function doReportBug(edu.umd.cs.findbugs.BugInstance) in line 79
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function checkBugInstance(BugInstance) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable bugCollection defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function notifyObservers(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function emitLine(String) in line 102
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable errorDialog defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function addLine(String) defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   function errorsOccurred() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable errorCount defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
   function finish() in line 75
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function getBugCollection() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
   function getErrorDialog() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable errorDialog defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
   function logError(String) in line 68
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable errorCount defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses variable analysisRun defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function getFrame() defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getLogger() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable WARNING defined in edu::umd::cs::findbugs::gui::Logger
      uses variable bugCollection defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function addError(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function observeClass(ClassDescriptor) in line 56
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function reportMissingClass(ClassNotFoundException) in line 60
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable errorCount defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses variable bugCollection defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function addMissingClass(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function reportQueuedErrors() in line 93
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function createDialog() defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses variable errorDialog defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function clear() defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses function finish() defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   function SwingGUIBugReporter(AnalysisRun) in line 39
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable analysisRun defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function getProjectStats() defined in edu::umd::cs::findbugs::AbstractBugReporter
   variable analysisRun in line 29
   variable bugCollection in line 30
   variable errorCount in line 32
   variable errorDialog in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/HTMLBugReporter.java
module edu::umd::cs::findbugs::HTMLBugReporter
   inherits from edu::umd::cs::findbugs::BugCollectionBugReporter
   function finish() in line 46
      protection public
      33 lines of code
      0 parameters
      3 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function setWithMessages(boolean) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function toDocument() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getStylesheetStream(String) defined in edu::umd::cs::findbugs::HTMLBugReporter
      uses variable stylesheet defined in edu::umd::cs::findbugs::HTMLBugReporter
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function logError(String) defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses variable fatalException defined in edu::umd::cs::findbugs::HTMLBugReporter
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
   function getFatalException() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fatalException defined in edu::umd::cs::findbugs::HTMLBugReporter
   function getStylesheetStream(String) in line 83
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses variable stylesheet defined in edu::umd::cs::findbugs::HTMLBugReporter
   function HTMLBugReporter(Project,String) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses variable stylesheet defined in edu::umd::cs::findbugs::HTMLBugReporter
   variable fatalException in line 38
   variable stylesheet in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/I18N.java
module edu::umd::cs::findbugs::I18N
   function bugCodeIterator() in line 108
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCodeMap defined in edu::umd::cs::findbugs::I18N
   function bugPatternIterator() in line 99
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable bugPatternMap defined in edu::umd::cs::findbugs::I18N
   function getAnnotationDescription(String) in line 179
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable annotationDescriptionBundle defined in edu::umd::cs::findbugs::I18N
      uses variable DEBUG defined in edu::umd::cs::findbugs::I18N
      uses variable englishAnnotationDescriptionBundle defined in edu::umd::cs::findbugs::I18N
   function getBugCategories() in line 271
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable categoryDescriptionMap defined in edu::umd::cs::findbugs::I18N
   function getBugCategory(String) in line 249
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable categoryDescriptionMap defined in edu::umd::cs::findbugs::I18N
   function getBugCategoryDescription(String) in line 260
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable categoryDescriptionMap defined in edu::umd::cs::findbugs::I18N
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugCategory
   function getBugCategoryObjects() in line 276
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable categoryDescriptionMap defined in edu::umd::cs::findbugs::I18N
   function getBugCode(String) in line 205
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCodeMap defined in edu::umd::cs::findbugs::I18N
   function getBugTypeDescription(String) in line 221
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCodeMap defined in edu::umd::cs::findbugs::I18N
      uses function getDescription() defined in edu::umd::cs::findbugs::BugCode
   function getDetailHTML(String) in line 164
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bugPatternMap defined in edu::umd::cs::findbugs::I18N
      uses function getDetailHTML() defined in edu::umd::cs::findbugs::BugPattern
   function getMessage(String) in line 132
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bugPatternMap defined in edu::umd::cs::findbugs::I18N
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getLongDescription() defined in edu::umd::cs::findbugs::BugPattern
   function getShortMessage(String) in line 146
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bugPatternMap defined in edu::umd::cs::findbugs::I18N
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
   function getShortMessageWithoutCode(String) in line 152
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bugPatternMap defined in edu::umd::cs::findbugs::I18N
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
   function getUserDesignation(String) in line 288
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable userDesignationBundle defined in edu::umd::cs::findbugs::I18N
   function getUserDesignationKey(int) in line 323
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getUserDesignationKeys() defined in edu::umd::cs::findbugs::I18N
   function getUserDesignationKeys() in line 298
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable userDesignationBundle defined in edu::umd::cs::findbugs::I18N
   function getUserDesignationKeys(boolean) in line 316
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getUserDesignationKeys() defined in edu::umd::cs::findbugs::I18N
      uses variable designationKeyComparator defined in edu::umd::cs::findbugs::I18N
   function instance() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::I18N
   function lookupBugPattern(String) in line 91
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugPatternMap defined in edu::umd::cs::findbugs::I18N
   function registerBugCategory(String,BugCategory) in line 236
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable categoryDescriptionMap defined in edu::umd::cs::findbugs::I18N
   function registerBugCode(BugCode) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugCodeMap defined in edu::umd::cs::findbugs::I18N
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugCode
   function registerBugPattern(BugPattern) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugPatternMap defined in edu::umd::cs::findbugs::I18N
      uses function getType() defined in edu::umd::cs::findbugs::BugPattern
   function I18N() in line 57
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable annotationDescriptionBundle defined in edu::umd::cs::findbugs::I18N
      uses variable defaultLocale defined in edu::umd::cs::findbugs::I18N
      uses variable englishAnnotationDescriptionBundle defined in edu::umd::cs::findbugs::I18N
      uses variable categoryDescriptionMap defined in edu::umd::cs::findbugs::I18N
      uses variable userDesignationBundle defined in edu::umd::cs::findbugs::I18N
      uses variable bugPatternMap defined in edu::umd::cs::findbugs::I18N
      uses variable bugCodeMap defined in edu::umd::cs::findbugs::I18N
   variable annotationDescriptionBundle in line 49
   variable bugCodeMap in line 55
   variable bugPatternMap in line 54
   variable categoryDescriptionMap in line 52
   variable DEBUG in line 45
   variable defaultLocale in line 48
      protection public
   variable designationKeyComparator in line 47
      protection public
   variable englishAnnotationDescriptionBundle in line 50
   variable theInstance in line 67
   variable userDesignationBundle in line 53
module edu::umd::cs::findbugs::I18N::DesignationKeyComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function categoryOf(String) in line 340
      23 lines of code
      1 parameters
      19 conditional paths
   function compare(String,String) in line 333
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function categoryOf(String) defined in edu::umd::cs::findbugs::I18N::DesignationKeyComparator
   variable serialVersionUID in line 330
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/IClassScreener.java
module edu::umd::cs::findbugs::IClassScreener
   function matches(String) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function vacuous() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/IFindBugsEngine.java
module edu::umd::cs::findbugs::IFindBugsEngine
   function addClassObserver(IClassObserver) in line 113
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addFilter(String,boolean) in line 86
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function emitTrainingOutput() in line 230
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function enableTrainingInput(String) in line 145
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function enableTrainingOutput(String) in line 137
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function excludeBaselineBugs(String) in line 96
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function execute() in line 193
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function finishSettings() in line 287
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBugCount() in line 205
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBugReporter() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCurrentClass() in line 200
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getErrorCount() in line 210
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMissingClassCount() in line 215
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getProject() in line 69
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getProjectName() in line 168
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getReleaseName() in line 157
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTrainingInputDir() in line 252
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTrainingOutputDir() in line 237
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getUserPreferences() in line 222
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setAbridgedMessages(boolean) in line 280
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setAnalysisFeatureSettings(AnalysisFeatureSetting[]) in line 152
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setApplySuppression(boolean) in line 285
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setBugReporter(BugReporter) in line 55
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setClassScreener(IClassScreener) in line 122
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setDetectorFactoryCollection(DetectorFactoryCollection) in line 275
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setMergeSimilarWarnings(boolean) in line 283
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setNoClassOk(boolean) in line 267
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setProgressCallback(FindBugsProgress) in line 77
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setProject(Project) in line 62
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setProjectName(String) in line 173
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setRelaxedReportingMode(boolean) in line 130
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setReleaseName(String) in line 162
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setScanNestedArchives(boolean) in line 259
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setSourceInfoFile(String) in line 182
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setUserPreferences(UserPreferences) in line 106
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function useTrainingInput() in line 245
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/IFindBugsEngine2.java
module edu::umd::cs::findbugs::IFindBugsEngine2
   inherits from edu::umd::cs::findbugs::IFindBugsEngine
   function setRankThreshold(int) in line 32
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/IGuiCallback.java
module edu::umd::cs::findbugs::IGuiCallback
   function displayNonmodelMessage(String,String) in line 35
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getProgressMonitorInputStream(InputStream,int,String) in line 33
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function setErrorMessage(String) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function showConfirmDialog(String,String,int) in line 31
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function showDocument(URL) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function showMessageDialog(String) in line 30
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function showQuestionDialog(String,String,String) in line 32
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/InstructionScanner.java
module edu::umd::cs::findbugs::InstructionScanner
   function isDone() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function scanInstruction(InstructionHandle) in line 39
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function traverseEdge(Edge) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/InstructionScannerDriver.java
module edu::umd::cs::findbugs::InstructionScannerDriver
   function execute(InstructionScannerGenerator) in line 58
      protection public
      34 lines of code
      1 parameters
      8 conditional paths
      uses variable edgeIter defined in edu::umd::cs::findbugs::InstructionScannerDriver
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable DEBUG defined in edu::umd::cs::findbugs::InstructionScannerDriver
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable next defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function start(org.apache.bcel.generic.InstructionHandle) defined in edu::umd::cs::findbugs::InstructionScannerGenerator
      uses variable scannerList defined in edu::umd::cs::findbugs::InstructionScannerDriver
      uses function createScanner() defined in edu::umd::cs::findbugs::InstructionScannerGenerator
   function InstructionScannerDriver(Iterator< Edge >) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable edgeIter defined in edu::umd::cs::findbugs::InstructionScannerDriver
      uses variable scannerList defined in edu::umd::cs::findbugs::InstructionScannerDriver
   variable DEBUG in line 39
   variable edgeIter in line 36
   variable scannerList in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/InstructionScannerGenerator.java
module edu::umd::cs::findbugs::InstructionScannerGenerator
   function createScanner() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function start(org.apache.bcel.generic.InstructionHandle) in line 33
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/IntAnnotation.java
module edu::umd::cs::findbugs::IntAnnotation
   inherits from edu::umd::cs::findbugs::BugAnnotation
   function accept(BugAnnotationVisitor) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitIntAnnotation(IntAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function clone() in line 64
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function compareTo(BugAnnotation) in line 110
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
      uses function IntAnnotation(int) defined in edu::umd::cs::findbugs::IntAnnotation
   function equals(Object) in line 104
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
      uses function IntAnnotation(int) defined in edu::umd::cs::findbugs::IntAnnotation
   function format(String,ClassAnnotation) in line 85
      protection public
      4 lines of code
      2 parameters
      2 conditional paths
      uses function isSignificant() defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
   function getDescription() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::IntAnnotation
   function getValue() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
   function hashCode() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
   function isSignificant() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable INT_SYNC_PERCENT defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable INT_OCCURRENCES defined in edu::umd::cs::findbugs::IntAnnotation
   function setDescription(String) in line 90
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::IntAnnotation
   function toString() in line 117
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getAnnotationDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses variable description defined in edu::umd::cs::findbugs::IntAnnotation
      uses function format(String,ClassAnnotation) defined in edu::umd::cs::findbugs::IntAnnotation
   function toString(ClassAnnotation) in line 150
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::IntAnnotation
   function writeXML(XMLOutput) in line 129
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean,boolean) in line 133
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::IntAnnotation
   function IntAnnotation(int) in line 57
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::IntAnnotation
   variable DEFAULT_ROLE in line 36
   variable description in line 39
   variable ELEMENT_NAME in line 127
   variable INT_ACTUAL_ARGUMENTS in line 49
      protection public
   variable INT_EXPECTED_ARGUMENTS in line 48
      protection public
   variable INT_OBLIGATIONS_REMAINING in line 50
      protection public
   variable INT_OCCURRENCES in line 45
      protection public
   variable INT_SHIFT in line 47
      protection public
   variable INT_SYNC_PERCENT in line 44
      protection public
   variable INT_VALUE in line 46
      protection public
   variable serialVersionUID in line 34
   variable value in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/InterproceduralFirstPassDetector.java
module edu::umd::cs::findbugs::InterproceduralFirstPassDetector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/io/IO.java
module edu::umd::cs::findbugs::io::IO
   function close(InputStream) in line 137
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function close(OutputStream) in line 155
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function copy(@WillNotClose InputStream,@WillNotClose OutputStream) in line 76
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function copy(Reader,Writer) in line 82
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function copy(@WillNotClose InputStream,@WillNotClose OutputStream) defined in edu::umd::cs::findbugs::io::IO
   function copy(@WillNotClose InputStream,@WillNotClose OutputStream,long) in line 87
      protection public
      22 lines of code
      3 parameters
      2 conditional paths
   function copy(Reader,Writer,long) in line 110
      protection public
      20 lines of code
      3 parameters
      2 conditional paths
   function readAll(InputStream) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function readAll(Reader) in line 69
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function copy(@WillNotClose InputStream,@WillNotClose OutputStream) defined in edu::umd::cs::findbugs::io::IO
   function skipFully(InputStream,long) in line 174
      protection public
      10 lines of code
      2 parameters
      4 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/io/SlowInputStream.java
module edu::umd::cs::findbugs::io::SlowInputStream
   inherits from java::io::FilterInputStream
   function close() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function delay() in line 38
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable started defined in edu::umd::cs::findbugs::io::SlowInputStream
      uses variable length defined in edu::umd::cs::findbugs::io::SlowInputStream
      uses variable bytesPerSecond defined in edu::umd::cs::findbugs::io::SlowInputStream
   function read() in line 49
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable length defined in edu::umd::cs::findbugs::io::SlowInputStream
      uses function delay() defined in edu::umd::cs::findbugs::io::SlowInputStream
   function read(byte[]) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function read() defined in edu::umd::cs::findbugs::io::SlowInputStream
   function read(byte[],int,int) in line 61
      protection public
      10 lines of code
      3 parameters
      3 conditional paths
      uses variable bytesPerSecond defined in edu::umd::cs::findbugs::io::SlowInputStream
      uses variable length defined in edu::umd::cs::findbugs::io::SlowInputStream
      uses function delay() defined in edu::umd::cs::findbugs::io::SlowInputStream
   function skip(long) in line 72
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable length defined in edu::umd::cs::findbugs::io::SlowInputStream
      uses function delay() defined in edu::umd::cs::findbugs::io::SlowInputStream
   function SlowInputStream(InputStream,int) in line 33
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable bytesPerSecond in line 31
   variable length in line 29
   variable started in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/jaif/JAIFEnumConstant.java
module edu::umd::cs::findbugs::jaif::JAIFEnumConstant
   function getName() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::jaif::JAIFEnumConstant
   function toString() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::jaif::JAIFEnumConstant
   function JAIFEnumConstant(String) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::jaif::JAIFEnumConstant
   variable name in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/jaif/JAIFEvents.java
module edu::umd::cs::findbugs::jaif::JAIFEvents
   function annotationField(String,Object) in line 65
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function annotationFieldDefinition(String,String) in line 88
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function endAnnotation(String) in line 56
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function endAnnotationDefinition(String) in line 80
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function endPackageDefinition(String) in line 42
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function startAnnotation(String) in line 49
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function startAnnotationDefinition(String,String) in line 73
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function startPackageDefinition(String) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/jaif/JAIFParser.java
module edu::umd::cs::findbugs::jaif::JAIFParser
   function expect(String) in line 50
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function nextToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function expect(JAIFTokenKind) in line 58
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function nextToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function expectEndOfLine() in line 66
      27 lines of code
      0 parameters
      5 conditional paths
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function atEOF() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function peekToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses function nextToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function main(String[]) in line 348
      protection public
      40 lines of code
      1 parameters
      2 conditional paths
      uses variable callback defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function JAIFParser(Reader,JAIFEvents) defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function parse() defined in edu::umd::cs::findbugs::jaif::JAIFParser
   function parse() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseAnnotationFile() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function getLineNumber() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function parseAnnotation() in line 181
      21 lines of code
      0 parameters
      3 conditional paths
      uses function readCompoundName() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable callback defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function startAnnotation(String) defined in edu::umd::cs::findbugs::jaif::JAIFEvents
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function peekToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable LPAREN defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses function parseAnnotationField() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable RPAREN defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses function expect(String) defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function nextToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function endAnnotation(String) defined in edu::umd::cs::findbugs::jaif::JAIFEvents
   function parseAnnotationDefinition() in line 313
      23 lines of code
      0 parameters
      3 conditional paths
      uses function expect(String) defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function peekToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function nextToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable IDENTIFIER_OR_KEYWORD defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable COLON defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses function expectEndOfLine() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable callback defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function startAnnotationDefinition(String,String) defined in edu::umd::cs::findbugs::jaif::JAIFEvents
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses function parseAnnotationFieldDefinition() defined in edu::umd::cs::findbugs::jaif::JAIFParser
   function parseAnnotationDefinitionOrClassDefinition() in line 301
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function peekToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function parseAnnotationDefinition() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function parseClassDefinition() defined in edu::umd::cs::findbugs::jaif::JAIFParser
   function parseAnnotationField() in line 203
      7 lines of code
      0 parameters
      1 conditional paths
      uses function expect(String) defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable IDENTIFIER_OR_KEYWORD defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses function parseConstant() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable callback defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function annotationField(String,Object) defined in edu::umd::cs::findbugs::jaif::JAIFEvents
   function parseAnnotationFieldDefinition() in line 337
      6 lines of code
      0 parameters
      1 conditional paths
      uses function readType() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function expect(String) defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable IDENTIFIER_OR_KEYWORD defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable callback defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function annotationFieldDefinition(String,String) defined in edu::umd::cs::findbugs::jaif::JAIFEvents
   function parseAnnotationFile() in line 135
      6 lines of code
      0 parameters
      2 conditional paths
      uses function parsePackageDefinition() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function atEOF() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function parseClassDefinition() in line 344
      3 lines of code
      0 parameters
      1 conditional paths
   function parseConstant() in line 211
      33 lines of code
      0 parameters
      8 conditional paths
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function peekToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function readCompoundName() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function nextToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function unparseStringLiteral(String) defined in edu::umd::cs::findbugs::jaif::JAIFParser
   function parsePackageDefinition() in line 142
      38 lines of code
      0 parameters
      5 conditional paths
      uses function expect(String) defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function peekToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses function readCompoundName() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function parseAnnotation() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function expectEndOfLine() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable callback defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function startPackageDefinition(String) defined in edu::umd::cs::findbugs::jaif::JAIFEvents
      uses function atEOF() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function parseAnnotationDefinitionOrClassDefinition() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function endPackageDefinition(String) defined in edu::umd::cs::findbugs::jaif::JAIFEvents
   function readCompoundName() in line 94
      28 lines of code
      0 parameters
      5 conditional paths
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function nextToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable IDENTIFIER_OR_KEYWORD defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses function peekToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable DOT defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function readType() in line 123
      11 lines of code
      0 parameters
      2 conditional paths
      uses function expect(String) defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable IDENTIFIER_OR_KEYWORD defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function unparseStringLiteral(String) in line 245
      55 lines of code
      1 parameters
      13 conditional paths
   function JAIFParser(Reader,JAIFEvents) in line 37
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable callback defined in edu::umd::cs::findbugs::jaif::JAIFParser
   variable callback in line 35
   variable scanner in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/jaif/JAIFScanner.java
module edu::umd::cs::findbugs::jaif::JAIFScanner
   function atEOF() in line 140
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function fillLineBuf() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable lineBuf defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function fetchToken() in line 158
      39 lines of code
      0 parameters
      7 conditional paths
      uses variable next defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function fillLineBuf() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable lineBuf defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function isHorizWhitespace(char) defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable lineNum defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable TOKEN_PATTERNS defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function fillLineBuf() in line 145
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable lineBuf defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable reader defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable lineNum defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function getLineNumber() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lineNum defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function isHorizWhitespace(char) in line 154
      3 lines of code
      1 parameters
      1 conditional paths
   function nextToken() in line 124
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable next defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function fetchToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function peekToken() in line 133
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable next defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function fetchToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function JAIFScanner(Reader) in line 115
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable reader defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   variable DIGIT in line 60
   variable DIGITS in line 61
   variable DIGITS_OPT in line 62
   variable DOT in line 64
   variable ESCAPE_SEQ in line 75
   variable EXP_PART in line 65
   variable EXP_PART_OPT in line 66
   variable FLOAT_TYPE_SUFFIX in line 67
   variable FLOAT_TYPE_SUFFIX_OPT in line 68
   variable HEX_DIGITS in line 71
   variable HEX_SIGNIFIER in line 70
   variable ID_REST in line 59
   variable ID_START in line 58
   variable INPUT_CHAR in line 73
   variable INT_TYPE_SUFFIX_OPT in line 72
   variable lineBuf in line 109
   variable lineNum in line 110
   variable next in line 108
   variable OCT_ESCAPE in line 74
   variable OCTAL_DIGITS in line 69
   variable reader in line 107
   variable SIGN_OPT in line 63
   variable STRING_CHARS_OPT in line 76
   variable TOKEN_PATTERNS in line 78
module edu::umd::cs::findbugs::jaif::JAIFScanner::TokenPattern
   function getKind(String) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getPattern() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function TokenPattern(String,JAIFTokenKind) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable kind in line 38
   variable pattern in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/jaif/JAIFSyntaxException.java
module edu::umd::cs::findbugs::jaif::JAIFSyntaxException
   inherits from Exception
   function JAIFSyntaxException(JAIFParser,String) in line 26
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function JAIFSyntaxException(JAIFScanner,String) in line 30
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getLineNumber() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/jaif/JAIFToken.java
module edu::umd::cs::findbugs::jaif::JAIFToken
   function isStartOfAnnotationName() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 48
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function JAIFToken(JAIFTokenKind,String,int) in line 33
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/jaif/JAIFTokenKind.java
module edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function toString() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function JAIFTokenKind(String) in line 39
      3 lines of code
      1 parameters
      1 conditional paths
   variable COLON in line 24
      protection public
   variable COMMA in line 29
      protection public
   variable DECIMAL_LITERAL in line 32
      protection public
   variable DOT in line 25
      protection public
   variable EQUALS in line 30
      protection public
   variable FLOATING_POINT_LITERAL in line 34
      protection public
   variable HEX_LITERAL in line 33
      protection public
   variable IDENTIFIER_OR_KEYWORD in line 26
      protection public
   variable LPAREN in line 27
      protection public
   variable NEWLINE in line 23
      protection public
   variable OCTAL_LITERAL in line 31
      protection public
   variable RPAREN in line 28
      protection public
   variable STRING_LITERAL in line 35
      protection public
   variable stringRep in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/JavaVersion.java
module edu::umd::cs::findbugs::JavaVersion
   function getMajor() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable major defined in edu::umd::cs::findbugs::JavaVersion
   function getMinor() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable minor defined in edu::umd::cs::findbugs::JavaVersion
   function getRest() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rest defined in edu::umd::cs::findbugs::JavaVersion
   function getRuntimeVersion() in line 129
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable runtimeVersion defined in edu::umd::cs::findbugs::JavaVersion
   function isSameOrNewerThan(JavaVersion) in line 141
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable major defined in edu::umd::cs::findbugs::JavaVersion
      uses variable minor defined in edu::umd::cs::findbugs::JavaVersion
   function toString() in line 113
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses variable major defined in edu::umd::cs::findbugs::JavaVersion
      uses variable minor defined in edu::umd::cs::findbugs::JavaVersion
      uses variable rest defined in edu::umd::cs::findbugs::JavaVersion
   function JavaVersion(String) in line 63
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable PATTERN defined in edu::umd::cs::findbugs::JavaVersion
      uses variable major defined in edu::umd::cs::findbugs::JavaVersion
      uses variable minor defined in edu::umd::cs::findbugs::JavaVersion
      uses variable rest defined in edu::umd::cs::findbugs::JavaVersion
   function JavaVersion(int,int) in line 85
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable major defined in edu::umd::cs::findbugs::JavaVersion
      uses variable minor defined in edu::umd::cs::findbugs::JavaVersion
   variable JAVA_1_5 in line 54
      protection public
   variable major in line 31
   variable minor in line 32
   variable PATTERN in line 29
   variable rest in line 33
   variable runtimeVersion in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/JavaVersionException.java
module edu::umd::cs::findbugs::JavaVersionException
   inherits from Exception
   function JavaVersionException(String) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function JavaVersionException(String,Throwable) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/L10N.java
module edu::umd::cs::findbugs::L10N
   function getLocalString(String,String) in line 74
      protection public
      21 lines of code
      2 parameters
      7 conditional paths
      uses function lookup(ResourceBundle,String) defined in edu::umd::cs::findbugs::L10N
      uses variable bundle defined in edu::umd::cs::findbugs::L10N
      uses variable bundle_en defined in edu::umd::cs::findbugs::L10N
      uses variable DEBUG defined in edu::umd::cs::findbugs::L10N
      uses variable extraProperties defined in edu::umd::cs::findbugs::L10N
   function localiseButton(AbstractButton,String,String,boolean) in line 106
      protection public
      11 lines of code
      4 parameters
      2 conditional paths
      uses function getLocalString(String,String) defined in edu::umd::cs::findbugs::L10N
      uses function toString() defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses function getMnemonic() defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses function getMnemonicIndex() defined in edu::umd::cs::findbugs::gui::AnnotatedString
   function lookup(ResourceBundle,String) in line 69
      5 lines of code
      2 parameters
      2 conditional paths
   function L10N() in line 66
      2 lines of code
      0 parameters
      1 conditional paths
   variable bundle in line 45
   variable bundle_en in line 46
   variable DEBUG in line 42
   variable extraProperties in line 48
   variable GENERATE_MISSING_KEYS in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/LaunchAppropriateUI.java
module edu::umd::cs::findbugs::LaunchAppropriateUI
   function getLaunchProperty() in line 146
      41 lines of code
      0 parameters
      9 conditional paths
      uses variable args defined in edu::umd::cs::findbugs::LaunchAppropriateUI
      uses variable uiNameToCodeMap defined in edu::umd::cs::findbugs::LaunchAppropriateUI
      uses variable TEXTUI defined in edu::umd::cs::findbugs::LaunchAppropriateUI
      uses variable GUI2 defined in edu::umd::cs::findbugs::LaunchAppropriateUI
   function launch() in line 97
      protection public
      21 lines of code
      0 parameters
      5 conditional paths
      uses function getLaunchProperty() defined in edu::umd::cs::findbugs::LaunchAppropriateUI
      uses variable TEXTUI defined in edu::umd::cs::findbugs::LaunchAppropriateUI
      uses variable args defined in edu::umd::cs::findbugs::LaunchAppropriateUI
      uses variable SHOW_HELP defined in edu::umd::cs::findbugs::LaunchAppropriateUI
      uses variable SHOW_VERSION defined in edu::umd::cs::findbugs::LaunchAppropriateUI
   function main(String) in line 195
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function LaunchAppropriateUI(String[]) defined in edu::umd::cs::findbugs::LaunchAppropriateUI
      uses variable args defined in edu::umd::cs::findbugs::LaunchAppropriateUI
      uses function launch() defined in edu::umd::cs::findbugs::LaunchAppropriateUI
   function LaunchAppropriateUI(String[]) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable args defined in edu::umd::cs::findbugs::LaunchAppropriateUI
   variable args in line 81
   variable GUI1 in line 48
      protection public
   variable GUI2 in line 53
      protection public
   variable SHOW_HELP in line 58
      protection public
   variable SHOW_VERSION in line 63
      protection public
   variable TEXTUI in line 42
      protection public
   variable uiNameToCodeMap in line 68
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/LocalVariableAnnotation.java
module edu::umd::cs::findbugs::LocalVariableAnnotation
   inherits from edu::umd::cs::findbugs::BugAnnotation
   function accept(BugAnnotationVisitor) in line 177
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitLocalVariableAnnotation(LocalVariableAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function clone() in line 168
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function compareTo(BugAnnotation) in line 215
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function equals(Object) in line 209
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function findMatchingIgnoredParameter(ClassContext,Method,String,String) in line 292
      protection public
      44 lines of code
      4 parameters
      8 conditional paths
      uses function getLiveLocalStoreDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getLocalVariableAnnotation(Method,Location,IndexedInstruction) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable DID_YOU_MEAN_ROLE defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function isNamed() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function getName() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function findUniqueBestMatchingParameter(ClassContext,Method,String,String) in line 337
      protection public
      31 lines of code
      4 parameters
      8 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getLocalVariableAnnotation(Method,Location,IndexedInstruction) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function isNamed() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function getName() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable DID_YOU_MEAN_ROLE defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function format(String,ClassAnnotation) in line 181
      protection public
      13 lines of code
      2 parameters
      8 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function getDescription() in line 199
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function getLocalVariableAnnotation(Method,Location,IndexedInstruction) in line 114
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function getLocalVariableAnnotation(Method,int,int,int) in line 123
      protection public
      31 lines of code
      4 parameters
      8 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function LocalVariableAnnotation(String,int,int) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function getLocalVariableAnnotation(Method,Item,int) in line 278
      protection public
      6 lines of code
      3 parameters
      2 conditional paths
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getLocalVariableAnnotation(Method,Location,IndexedInstruction) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function getPC() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getLocalVariableAnnotation(DismantleBytecode,Item) in line 284
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getLocalVariableAnnotation(Method,Location,IndexedInstruction) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getName() in line 257
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function getParameterLocalVariableAnnotation(Method,int) in line 162
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getLocalVariableAnnotation(Method,Location,IndexedInstruction) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function getPC() in line 261
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRegister() in line 264
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function isNamed() in line 251
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function isSignificant() in line 268
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function setDescription(String) in line 195
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function toString() in line 222
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getAnnotationDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses variable description defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function format(String,ClassAnnotation) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function toString(ClassAnnotation) in line 368
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function writeXML(XMLOutput) in line 234
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean,boolean) in line 238
      protection public
      12 lines of code
      3 parameters
      2 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable value defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function LocalVariableAnnotation(String,int,int) in line 89
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function LocalVariableAnnotation(String,int,int,int) in line 105
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   variable ARGUMENT_ROLE in line 71
      protection public
   variable DEFAULT_ROLE in line 60
      protection public
   variable description in line 79
   variable DID_YOU_MEAN_ROLE in line 69
      protection public
   variable ELEMENT_NAME in line 232
   variable INVOKED_ON_ROLE in line 70
      protection public
   variable NAMED_ROLE in line 61
      protection public
   variable PARAMETER_NAMED_ROLE in line 64
      protection public
   variable PARAMETER_ROLE in line 63
      protection public
   variable PARAMETER_VALUE_SOURCE_NAMED_ROLE in line 66
      protection public
   variable PARAMETER_VALUE_SOURCE_ROLE in line 65
      protection public
   variable serialVersionUID in line 58
   variable UNKNOWN_ROLE in line 62
      protection public
   variable value in line 76
   variable VALUE_DOOMED_NAMED_ROLE in line 68
      protection public
   variable VALUE_DOOMED_ROLE in line 67
      protection public
   variable VALUE_OF_ROLE in line 72
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/log/Profiler.java
module edu::umd::cs::findbugs::log::Profiler
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   function clear() in line 362
      protection public
      4 lines of code
      0 parameters
      3 conditional paths
   function end(Class<?>) in line 207
      protection public
      30 lines of code
      1 parameters
      6 conditional paths
      uses function handleCall(long) defined in edu::umd::cs::findbugs::log::Profiler::Profile
   function report() in line 316
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function report(Comparator< Class<?>>,Filter,PrintStream) in line 327
      protection public
      27 lines of code
      3 parameters
      4 conditional paths
      uses function accepts(Profile) defined in edu::umd::cs::findbugs::log::Profiler::Filter
   function start(Class<?>) in line 195
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
   function writeXML(XMLOutput) in line 386
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::log::Profiler::Profile
   function Profiler() in line 49
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
module edu::umd::cs::findbugs::log::Profiler::Filter
   function accepts(Profile) in line 57
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::log::Profiler::FilterByTime
   inherits from edu::umd::cs::findbugs::log::Profiler::Filter
   function accepts(Profile) in line 67
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function FilterByTime(long) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable minNanoSeconds in line 61
module edu::umd::cs::findbugs::log::Profiler::FilterByTimePerCall
   inherits from edu::umd::cs::findbugs::log::Profiler::Filter
   function accepts(Profile) in line 83
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function FilterByTimePerCall(long) in line 79
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable minNanoSeconds in line 77
module edu::umd::cs::findbugs::log::Profiler::FilterByCalls
   inherits from edu::umd::cs::findbugs::log::Profiler::Filter
   function accepts(Profile) in line 100
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function FilterByCalls(int) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable minCalls in line 94
module edu::umd::cs::findbugs::log::Profiler::Profile
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   function handleCall(long) in line 129
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
   function writeXML(XMLOutput) in line 143
      protection public
      24 lines of code
      1 parameters
      2 conditional paths
   function Profile(String) in line 125
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable className in line 120
module edu::umd::cs::findbugs::log::Profiler::Clock
module edu::umd::cs::findbugs::log::Profiler::ClassNameComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(Class<?>,Class<?>) in line 245
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function ClassNameComparator(Profiler) in line 241
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable profiler in line 239
module edu::umd::cs::findbugs::log::Profiler::TotalTimeComparator
   inherits from edu::umd::cs::findbugs::log::Profiler::ClassNameComparator
   function compare(Class<?>,Class<?>) in line 257
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
   function TotalTimeComparator(Profiler) in line 252
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::log::Profiler::TimePerCallComparator
   inherits from edu::umd::cs::findbugs::log::Profiler::ClassNameComparator
   function compare(Class<?>,Class<?>) in line 276
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
   function TimePerCallComparator(Profiler) in line 271
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::log::Profiler::TotalCallsComparator
   inherits from edu::umd::cs::findbugs::log::Profiler::ClassNameComparator
   function compare(Class<?>,Class<?>) in line 297
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
   function TotalCallsComparator(Profiler) in line 292
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/Lookup.java
module edu::umd::cs::findbugs::Lookup
   inherits from edu::umd::cs::findbugs::visitclass::Constants2
   function findImplementation(JavaClass,String,String) in line 181
      protection public
      11 lines of code
      3 parameters
      3 conditional paths
   function findImplementor(XClass,String,String,boolean,BugReporter) in line 67
      protection public
      14 lines of code
      5 parameters
      2 conditional paths
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function findImplementor(XClass,String,String,boolean) in line 90
      protection public
      7 lines of code
      4 parameters
      2 conditional paths
      uses function findSuperImplementor(XClass,String,String,boolean,BugReporter) defined in edu::umd::cs::findbugs::Lookup
   function findImplementor(JavaClass[],String,String) in line 169
      protection public
      10 lines of code
      3 parameters
      3 conditional paths
      uses function findImplementation(JavaClass,String,String) defined in edu::umd::cs::findbugs::Lookup
   function findSuperDefiner(JavaClass,String,String,BugReporter) in line 99
      protection public
      17 lines of code
      4 parameters
      5 conditional paths
      uses function findImplementation(JavaClass,String,String) defined in edu::umd::cs::findbugs::Lookup
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function findSuperImplementor(XClass,String,String,boolean,BugReporter) in line 52
      protection public
      14 lines of code
      5 parameters
      2 conditional paths
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function findSuperImplementor(XClass,String,String,boolean) in line 82
      protection public
      7 lines of code
      4 parameters
      2 conditional paths
      uses function findImplementor(XClass,String,String,boolean,BugReporter) defined in edu::umd::cs::findbugs::Lookup
      uses function getXClass(ClassDescriptor) defined in edu::umd::cs::findbugs::Lookup
   function findSuperImplementor(JavaClass,String,String,BugReporter) in line 117
      protection public
      17 lines of code
      4 parameters
      5 conditional paths
      uses function findImplementation(JavaClass,String,String) defined in edu::umd::cs::findbugs::Lookup
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function findSuperImplementor(@DottedClassName String,String,String,BugReporter) in line 156
      protection public
      11 lines of code
      4 parameters
      2 conditional paths
      uses function findImplementor(XClass,String,String,boolean,BugReporter) defined in edu::umd::cs::findbugs::Lookup
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function findSuperImplementorAsXMethod(JavaClass,String,String,BugReporter) in line 136
      protection public
      17 lines of code
      4 parameters
      5 conditional paths
      uses function findImplementation(JavaClass,String,String) defined in edu::umd::cs::findbugs::Lookup
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function getXClass(ClassDescriptor) in line 48
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function subtypes2() in line 44
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/MethodAnnotation.java
module edu::umd::cs::findbugs::MethodAnnotation
   inherits from edu::umd::cs::findbugs::PackageMemberAnnotation
   function accept(BugAnnotationVisitor) in line 287
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitMethodAnnotation(MethodAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function compareTo(BugAnnotation) in line 429
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function MethodAnnotation(String,String,String,boolean) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
   function equals(Object) in line 420
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function MethodAnnotation(String,String,String,boolean) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
   function formatPackageMember(String,ClassAnnotation) in line 292
      31 lines of code
      2 parameters
      10 conditional paths
      uses variable UGLY_METHODS defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getUglyMethod() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getFullMethod(ClassAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getSignatureInClass(ClassAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getNameInClass(ClassAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function parseNext() defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function fromCalledMethod(DismantleBytecode) in line 123
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getOpcode() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function fromCalledMethod(String,String,String,boolean) in line 207
      protection public
      9 lines of code
      4 parameters
      1 conditional paths
      uses function fromForeignMethod(String,String,String,int) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function fromForeignMethod(String,String,String,int) in line 144
      protection public
      19 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function MethodAnnotation(String,String,String,boolean) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable sourceLines defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function setSourceLines(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function fromForeignMethod(String,String,String,boolean) in line 175
      protection public
      19 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function MethodAnnotation(String,String,String,boolean) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable sourceLines defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function setSourceLines(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function fromMethodDescriptor(MethodDescriptor) in line 237
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function fromForeignMethod(String,String,String,int) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getSlashedClassName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function fromVisitedMethod(PreorderVisitor) in line 101
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function MethodAnnotation(String,String,String,boolean) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function setSourceLines(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function fromXMethod(XMethod) in line 223
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function fromForeignMethod(String,String,String,int) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function getFullMethod(ClassAnnotation) in line 395
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable fullMethod defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function stripJavaLang(@DottedClassName String) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getSignatureInClass(ClassAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getNameInClass(ClassAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
   function getJavaSourceMethodName() in line 252
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function getMethodName() in line 248
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
   function getMethodSignature() in line 264
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
   function getNameInClass(ClassAnnotation) in line 330
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getNameInClass(boolean,boolean,boolean) in line 337
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function getNameInClass(ClassAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
   function getNameInClass(boolean,boolean,boolean,boolean) in line 354
      protection public
      33 lines of code
      4 parameters
      8 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getJavaSourceMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getFirst() defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function skip() defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function parseNext() defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function getSignatureInClass(ClassAnnotation) in line 333
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getNameInClass(ClassAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
   function getUglyMethod() in line 410
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
   function hashCode() in line 415
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
   function isSignificant() in line 483
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function getDescription() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable METHOD_DANGEROUS_TARGET defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable METHOD_DANGEROUS_TARGET_ACTUAL_GUARANTEED_NULL defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable METHOD_SAFE_TARGET defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable METHOD_EQUALS_USED defined in edu::umd::cs::findbugs::MethodAnnotation
   function isStatic() in line 273
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function stripJavaLang(@DottedClassName String) in line 405
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function toXMethod() in line 282
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::MethodAnnotation
   function writeXML(XMLOutput) in line 451
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean,boolean) in line 454
      protection public
      27 lines of code
      3 parameters
      6 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getMethodSignature() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable sourceLines defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable MESSAGE_TAG defined in edu::umd::cs::findbugs::BugAnnotation
      uses function toString() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function MethodAnnotation(String,String,String,boolean) in line 82
      protection public
      12 lines of code
      4 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable fullMethod defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable sourceLines defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   variable DEFAULT_ROLE in line 51
   variable ELEMENT_NAME in line 447
   variable fullMethod in line 55
   variable isStatic in line 56
   variable METHOD_CALLED in line 67
      protection public
   variable METHOD_CONSTRUCTOR in line 69
      protection public
   variable METHOD_DANGEROUS_TARGET in line 60
      protection public
   variable METHOD_DANGEROUS_TARGET_ACTUAL_GUARANTEED_NULL in line 58
      protection public
   variable METHOD_DID_YOU_MEAN_TO_OVERRIDE in line 71
      protection public
   variable METHOD_EQUALS_USED in line 66
      protection public
   variable METHOD_OVERRIDDEN in line 70
      protection public
   variable METHOD_RETURN_VALUE_OF in line 62
      protection public
   variable METHOD_SAFE_TARGET in line 64
      protection public
   variable METHOD_SUPERCLASS_CONSTRUCTOR in line 68
      protection public
   variable methodName in line 53
   variable methodSig in line 54
   variable serialVersionUID in line 47
   variable UGLY_METHODS in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/MethodWarningSuppressor.java
module edu::umd::cs::findbugs::MethodWarningSuppressor
   inherits from edu::umd::cs::findbugs::ClassWarningSuppressor
   function match(BugInstance) in line 14
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses function equals(Object) defined in edu::umd::cs::findbugs::MethodAnnotation
   function MethodWarningSuppressor(String,ClassAnnotation,MethodAnnotation) in line 9
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ml/ConvertToARFF.java
module edu::umd::cs::findbugs::ml::ConvertToARFF
   function addAppNameAttribute() in line 558
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addAttribute(Attribute) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function addAttribute(Attribute) in line 530
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable attributeList defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function addBooleanAttribute(String,String) in line 538
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addAttribute(Attribute) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function addClassificationAttribute() in line 542
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addAttribute(Attribute) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function addIdAttribute() in line 554
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addAttribute(Attribute) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function addNominalAttribute(String,String) in line 534
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addAttribute(Attribute) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function addNumericAttribute(String,String) in line 546
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addAttribute(Attribute) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function addPriorityAttribute() in line 550
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addAttribute(Attribute) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function collectionToRange(Collection< String >) in line 467
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
   function convert(String,Document,String,final Writer) in line 570
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses function scan(Document,final String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable document defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
      uses function generateHeader(String,final Writer) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function generateInstances(Document,final String,final Writer) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function dropUnclassifiedWarnings() in line 526
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function generateHeader(String,final Writer) in line 604
      protection public
      19 lines of code
      2 parameters
      1 conditional paths
      uses function scanAttributeList(AttributeCallback) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function getName() defined in edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
      uses function getRange() defined in edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
   function generateInstances(Document,final String,final Writer) in line 632
      protection public
      24 lines of code
      3 parameters
      4 conditional paths
      uses function getBugInstanceList(Document) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable document defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
      uses function scanAttributeList(AttributeCallback) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function getInstanceValue(Element,String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function getBugClassification(String) in line 673
      22 lines of code
      1 parameters
      7 conditional paths
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable BUG defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable NOT_BUG defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable HARMLESS defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable HARMLESS_BUG defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function getBugInstanceList(Document) in line 697
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
      uses variable nodeSelectionXpath defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function dropUnclassifiedWarnings() defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function getBugClassification(String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function getNumAttributes() in line 522
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable attributeList defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function main(String[]) in line 818
      protection public
      50 lines of code
      1 parameters
      5 conditional paths
      uses function expandOptionFiles(String[],boolean,boolean) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function parse(String,int,int,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function printUsage(PrintStream) defined in edu::umd::cs::findbugs::ml::ConvertToARFF::C2ACommandLine
      uses function getConverter() defined in edu::umd::cs::findbugs::ml::ConvertToARFF::C2ACommandLine
      uses function getNumAttributes() defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable document defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
      uses function DataFile(Document,String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
      uses function toAppName(String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function scan(Document,final String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function getDocument() defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
      uses function getAppName() defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
      uses function generateHeader(String,final Writer) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function generateInstances(Document,final String,final Writer) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function scan(Document,final String) in line 585
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function getBugInstanceList(Document) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable document defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
      uses function scanAttributeList(AttributeCallback) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function scan(Element,String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function scanAttributeList(AttributeCallback) in line 662
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable attributeList defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function setAppName(String) in line 509
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function setNodeSelectionXpath(String) in line 518
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nodeSelectionXpath defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function toAppName(String) in line 807
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function ConvertToARFF() in line 503
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable DEFAULT_NODE_SELECTION_XPATH defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   variable appName in line 497
   variable attributeList in line 494
   variable BUG in line 183
   variable DEFAULT_NODE_SELECTION_XPATH in line 488
   variable dropUnclassifiedWarnings in line 496
   variable HARMLESS in line 185
   variable HARMLESS_BUG in line 186
   variable nodeSelectionXpath in line 495
   variable NOT_BUG in line 184
   variable RANDOM_CHARS in line 389
   variable UNCLASSIFIED in line 182
module edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function getAppName() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function getDocument() in line 68
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function DataFile(Document,String) in line 63
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   variable appName in line 61
   variable document in line 60
module edu::umd::cs::findbugs::ml::ConvertToARFF::MissingNodeException
   inherits from Exception
   function MissingNodeException(String) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable serialVersionUID in line 74
module edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
   function getInstanceValue(Element,String) in line 86
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getName() in line 82
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getRange() in line 85
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function scan(Element,String) in line 83
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ml::ConvertToARFF::XPathAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
   abstract class
   function getInstanceValue(Element,String) in line 103
      protection public
      26 lines of code
      2 parameters
      8 conditional paths
   function getName() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function XPathAttribute(String,String) in line 94
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable name in line 91
   variable xpath in line 92
module edu::umd::cs::findbugs::ml::ConvertToARFF::NominalAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::XPathAttribute
   function getInstanceValue(Element,String) in line 152
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function getRange() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function collectionToRange(Collection< String >) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function scan(Element,String) in line 139
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function NominalAttribute(String,String) in line 134
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable possibleValueSet in line 132
module edu::umd::cs::findbugs::ml::ConvertToARFF::BooleanAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::XPathAttribute
   function getInstanceValue(Element,String) in line 172
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function getRange() in line 166
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function scan(Element,String) in line 162
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function BooleanAttribute(String,String) in line 158
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ml::ConvertToARFF::AbstractClassificationAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
   abstract class
   function bugToString(int) in line 214
      1 lines of code
      1 parameters
      1 conditional paths
   function getInstanceValue(Element,String) in line 206
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function getBugClassification(String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function getName() in line 193
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function scan(Element,String) in line 200
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ml::ConvertToARFF::ClassificationAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::AbstractClassificationAttribute
   function bugToString(int) in line 224
      11 lines of code
      1 parameters
      4 conditional paths
      uses variable NOT_BUG defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable BUG defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable HARMLESS_BUG defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function getRange() in line 219
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ml::ConvertToARFF::BinaryClassificationAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::AbstractClassificationAttribute
   function bugToString(int) in line 249
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable BUG defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable NOT_BUG defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable HARMLESS_BUG defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function getRange() in line 241
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ml::ConvertToARFF::NumericAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::XPathAttribute
   function getRange() in line 267
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function scan(Element,String) in line 264
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function NumericAttribute(String,String) in line 260
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ml::ConvertToARFF::PriorityAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
   function getInstanceValue(Element,String) in line 284
      protection public
      17 lines of code
      2 parameters
      6 conditional paths
   function getName() in line 273
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRange() in line 280
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function scan(Element,String) in line 277
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ml::ConvertToARFF::IdAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
   function getInstanceValue(Element,String) in line 326
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function getName() in line 318
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getRange() in line 324
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses function collectionToRange(Collection< String >) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function instanceValue(Element,String) in line 334
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function scan(Element,String) in line 320
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   variable count in line 316
   variable possibleValueSet in line 313
   variable scanning in line 315
module edu::umd::cs::findbugs::ml::ConvertToARFF::IdStringAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
   function getInstanceValue(Element,String) in line 375
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function getName() in line 353
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRange() in line 366
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function scan(Element,String) in line 360
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ml::ConvertToARFF::RandomIdAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
   function generateId() in line 411
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable RANDOM_CHARS defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function getInstanceValue(Element,String) in line 436
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
   function getName() in line 400
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRange() in line 425
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function collectionToRange(Collection< String >) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function scan(Element,String) in line 407
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable idMap in line 395
   variable rng in line 394
module edu::umd::cs::findbugs::ml::ConvertToARFF::AppNameAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
   function getInstanceValue(Element,String) in line 461
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function getName() in line 448
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRange() in line 457
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function collectionToRange(Collection< String >) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function scan(Element,String) in line 452
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   variable appNameSet in line 446
module edu::umd::cs::findbugs::ml::ConvertToARFF::AttributeCallback
   function apply(Attribute) in line 481
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ml::ConvertToARFF::C2ACommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function addXPathAttribute(String,String,XPathAttributeCreator) in line 789
      10 lines of code
      3 parameters
      2 conditional paths
      uses function addAttribute(Attribute) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function create(String,String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF::C2ACommandLine::XPathAttributeCreator
   function getConverter() in line 730
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function handleOption(String,String) in line 735
      20 lines of code
      2 parameters
      9 conditional paths
      uses variable dropUnclassifiedWarnings defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function addIdAttribute() defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function addAttribute(Attribute) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function addAppNameAttribute() defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function addClassificationAttribute() defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function addPriorityAttribute() defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function handleOptionWithArgument(String,String) in line 761
      27 lines of code
      2 parameters
      6 conditional paths
      uses function setNodeSelectionXpath(String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function setAppName(String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function printUsage(PrintStream) in line 800
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function C2ACommandLine() in line 714
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   variable converter in line 712
module edu::umd::cs::findbugs::ml::ConvertToARFF::C2ACommandLine::XPathAttributeCreator
   function create(String,String) in line 757
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ml/GenerateUIDs.java
module edu::umd::cs::findbugs::ml::GenerateUIDs
   function execute() in line 67
      protection public
      45 lines of code
      0 parameters
      9 conditional paths
      uses variable inputFilename defined in edu::umd::cs::findbugs::ml::GenerateUIDs
      uses variable bugCollection defined in edu::umd::cs::findbugs::ml::GenerateUIDs
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function writeXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses variable outputFilename defined in edu::umd::cs::findbugs::ml::GenerateUIDs
   function main(String[]) in line 113
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable inputFilename defined in edu::umd::cs::findbugs::ml::GenerateUIDs
      uses variable outputFilename defined in edu::umd::cs::findbugs::ml::GenerateUIDs
      uses function GenerateUIDs(String,String) defined in edu::umd::cs::findbugs::ml::GenerateUIDs
      uses function execute() defined in edu::umd::cs::findbugs::ml::GenerateUIDs
   function GenerateUIDs(String,String) in line 60
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable inputFilename defined in edu::umd::cs::findbugs::ml::GenerateUIDs
      uses variable outputFilename defined in edu::umd::cs::findbugs::ml::GenerateUIDs
   variable bugCollection in line 55
   variable inputFilename in line 57
   variable outputFilename in line 58
   variable project in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ml/SplitCamelCaseIdentifier.java
module edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifier
   function split() in line 48
      protection public
      45 lines of code
      0 parameters
      9 conditional paths
      uses variable ident defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifier
   function SplitCamelCaseIdentifier(String) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ident defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifier
   variable ident in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/model/ClassFeatureSet.java
module edu::umd::cs::findbugs::model::ClassFeatureSet
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   function addFeature(String) in line 197
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable featureSet defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function featureIterator() in line 201
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable featureSet defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function getClassName() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function getNumFeatures() in line 193
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable featureSet defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function hasFeature(String) in line 205
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable featureSet defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function initialize(JavaClass) in line 76
      protection public
      32 lines of code
      1 parameters
      7 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function addFeature(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable CLASS_NAME_KEY defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function transformClassName(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function isSynthetic(FieldOrMethod) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function transformMethodSignature(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function overridesSuperclassMethod(JavaClass,Method) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable METHOD_NAME_KEY defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable MIN_CODE_LENGTH defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable CODE_LENGTH_KEY defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable FIELD_NAME_KEY defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function transformSignature(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function isInterface() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSynthetic(FieldOrMethod) in line 150
      14 lines of code
      1 parameters
      4 conditional paths
   function isUnlikelyToBeRenamed(String) in line 233
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 330
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses function ClassFeatureSet() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function similarity(ClassFeatureSet,ClassFeatureSet) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function similarTo(ClassFeatureSet) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function overridesSuperclassMethod(JavaClass,Method) in line 117
      26 lines of code
      2 parameters
      7 conditional paths
      uses variable INSTANCE_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
   function setClassName(String) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function setInterface(boolean) in line 189
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isInterface() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function similarity(ClassFeatureSet,ClassFeatureSet) in line 304
      protection public
      21 lines of code
      2 parameters
      5 conditional paths
      uses variable isInterface defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function getNumFeatures() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable MIN_FEATURES defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function getClassName() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable EXACT_CLASS_NAME_MATCH defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function featureIterator() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function hasFeature(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function similarTo(ClassFeatureSet) in line 326
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function similarity(ClassFeatureSet,ClassFeatureSet) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable MIN_MATCH defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function transformClassName(String) in line 215
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function isUnlikelyToBeRenamed(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function transformMethodSignature(String) in line 244
      protection public
      16 lines of code
      1 parameters
      2 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function transformSignature(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function transformSignature(String) in line 268
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses function transformClassName(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function writeXML(XMLOutput) in line 352
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable className defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function featureIterator() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable FEATURE_ELEMENT_NAME defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function ClassFeatureSet() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable CLASS_NAME_KEY in line 48
      protection public
   variable className in line 53
   variable CODE_LENGTH_KEY in line 50
      protection public
   variable ELEMENT_NAME in line 346
      protection public
   variable EXACT_CLASS_NAME_MATCH in line 302
      protection public
   variable FEATURE_ELEMENT_NAME in line 347
      protection public
   variable featureSet in line 55
   variable FIELD_NAME_KEY in line 51
      protection public
   variable isInterface in line 54
   variable METHOD_NAME_KEY in line 49
      protection public
   variable MIN_CODE_LENGTH in line 68
      protection public
   variable MIN_FEATURES in line 291
      protection public
   variable MIN_MATCH in line 296
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/model/ClassNameRewriter.java
module edu::umd::cs::findbugs::model::ClassNameRewriter
   function rewriteClassName(String) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/model/ClassNameRewriterUtil.java
module edu::umd::cs::findbugs::model::ClassNameRewriterUtil
   abstract class
   function convertFieldAnnotation(ClassNameRewriter,FieldAnnotation) in line 110
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function rewriteClassName(String) defined in edu::umd::cs::findbugs::model::ClassNameRewriter
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getFieldName() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function rewriteSignature(ClassNameRewriter,String) defined in edu::umd::cs::findbugs::model::ClassNameRewriterUtil
      uses function getFieldSignature() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable isStatic defined in edu::umd::cs::findbugs::FieldAnnotation
   function convertMethodAnnotation(ClassNameRewriter,MethodAnnotation) in line 90
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function rewriteClassName(String) defined in edu::umd::cs::findbugs::model::ClassNameRewriter
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function rewriteMethodSignature(ClassNameRewriter,String) defined in edu::umd::cs::findbugs::model::ClassNameRewriterUtil
      uses function getMethodSignature() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable isStatic defined in edu::umd::cs::findbugs::MethodAnnotation
   function rewriteMethodSignature(ClassNameRewriter,String) in line 42
      protection public
      19 lines of code
      2 parameters
      3 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function rewriteSignature(ClassNameRewriter,String) defined in edu::umd::cs::findbugs::model::ClassNameRewriterUtil
      uses function getReturnTypeSignature() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function rewriteSignature(ClassNameRewriter,String) in line 69
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function rewriteClassName(String) defined in edu::umd::cs::findbugs::model::ClassNameRewriter
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/model/IdentityClassNameRewriter.java
module edu::umd::cs::findbugs::model::IdentityClassNameRewriter
   inherits from edu::umd::cs::findbugs::model::ClassNameRewriter
   inherits from java::io::Serializable
   function instance() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::model::IdentityClassNameRewriter
   function rewriteClassName(String) in line 45
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
   variable serialVersionUID in line 33
   variable theInstance in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/model/MovedClassMap.java
module edu::umd::cs::findbugs::model::MovedClassMap
   inherits from edu::umd::cs::findbugs::model::ClassNameRewriter
   function buildClassSet(BugCollection) in line 104
      15 lines of code
      1 parameters
      4 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::BugCollection
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
   function buildShortNameToFullNameMap(Set< String >) in line 127
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getShortClassName(String) defined in edu::umd::cs::findbugs::model::MovedClassMap
   function execute() in line 56
      protection public
      30 lines of code
      0 parameters
      4 conditional paths
      uses function buildClassSet(BugCollection) defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses variable before defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses variable after defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses function buildShortNameToFullNameMap(Set< String >) defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses function getShortClassName(String) defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses variable DEBUG defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses variable rewriteMap defined in edu::umd::cs::findbugs::model::MovedClassMap
   function getShortClassName(String) in line 142
      7 lines of code
      1 parameters
      2 conditional paths
   function isEmpty() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rewriteMap defined in edu::umd::cs::findbugs::model::MovedClassMap
   function rewriteClassName(String) in line 90
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable rewriteMap defined in edu::umd::cs::findbugs::model::MovedClassMap
   function MovedClassMap(BugCollection,BugCollection) in line 50
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable before defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses variable after defined in edu::umd::cs::findbugs::model::MovedClassMap
   variable after in line 47
   variable before in line 46
   variable DEBUG in line 44
   variable rewriteMap in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/model/RegenerateClassFeatures.java
module edu::umd::cs::findbugs::model::RegenerateClassFeatures
   function execute() in line 51
      protection public
      29 lines of code
      0 parameters
      4 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::model::RegenerateClassFeatures
      uses function clearClassFeatures() defined in edu::umd::cs::findbugs::BugCollection
      uses variable jarFile defined in edu::umd::cs::findbugs::model::RegenerateClassFeatures
      uses function initialize(JavaClass) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function setClassFeatureSet(ClassFeatureSet) defined in edu::umd::cs::findbugs::BugCollection
   function getBugCollection() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::model::RegenerateClassFeatures
   function main(String[]) in line 88
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::model::RegenerateClassFeatures
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function RegenerateClassFeatures(BugCollection,String) defined in edu::umd::cs::findbugs::model::RegenerateClassFeatures
      uses function writeXML(String) defined in edu::umd::cs::findbugs::BugCollection
   function RegenerateClassFeatures(BugCollection,String) in line 46
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::model::RegenerateClassFeatures
      uses variable jarFile defined in edu::umd::cs::findbugs::model::RegenerateClassFeatures
   variable bugCollection in line 43
   variable jarFile in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/model/SimilarClassFinder.java
module edu::umd::cs::findbugs::model::SimilarClassFinder
   function add(ClassFeatureSet) in line 36
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable similarClassSetList defined in edu::umd::cs::findbugs::model::SimilarClassFinder
      uses function addMember(ClassFeatureSet) defined in edu::umd::cs::findbugs::model::SimilarClassSet
   function similarClassSetIterator() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable similarClassSetList defined in edu::umd::cs::findbugs::model::SimilarClassFinder
   function size() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable similarClassSetList defined in edu::umd::cs::findbugs::model::SimilarClassFinder
   function SimilarClassFinder() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable similarClassSetList in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/model/SimilarClassSet.java
module edu::umd::cs::findbugs::model::SimilarClassSet
   function addMember(ClassFeatureSet) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable memberList defined in edu::umd::cs::findbugs::model::SimilarClassSet
   function getRepresentativeClassName() in line 49
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable memberList defined in edu::umd::cs::findbugs::model::SimilarClassSet
   function shouldContain(ClassFeatureSet) in line 37
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable memberList defined in edu::umd::cs::findbugs::model::SimilarClassSet
      uses function similarTo(ClassFeatureSet) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function size() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable memberList defined in edu::umd::cs::findbugs::model::SimilarClassSet
   function SimilarClassSet() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable memberList in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/NewResults.java
module edu::umd::cs::findbugs::NewResults
   function execute() in line 43
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable newCollection defined in edu::umd::cs::findbugs::NewResults
      uses function iterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable origCollection defined in edu::umd::cs::findbugs::NewResults
      uses function contains(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
   function main(String[]) in line 57
      protection public
      17 lines of code
      1 parameters
      2 conditional paths
      uses function NewResults(String,String) defined in edu::umd::cs::findbugs::NewResults
      uses function execute() defined in edu::umd::cs::findbugs::NewResults
      uses function writeXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function NewResults(String,String) in line 31
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable origCollection defined in edu::umd::cs::findbugs::NewResults
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable newCollection defined in edu::umd::cs::findbugs::NewResults
   function NewResults(SortedBugCollection,SortedBugCollection) in line 38
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable origCollection defined in edu::umd::cs::findbugs::NewResults
      uses variable newCollection defined in edu::umd::cs::findbugs::NewResults
   variable newCollection in line 29
   variable origCollection in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/NoClassesFoundToAnalyzeException.java
module edu::umd::cs::findbugs::NoClassesFoundToAnalyzeException
   inherits from java::io::IOException
   function getClassPath() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable f_classPath defined in edu::umd::cs::findbugs::NoClassesFoundToAnalyzeException
   function NoClassesFoundToAnalyzeException(final IClassPath) in line 55
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable f_classPath defined in edu::umd::cs::findbugs::NoClassesFoundToAnalyzeException
   variable f_classPath in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/NonReportingDetector.java
module edu::umd::cs::findbugs::NonReportingDetector
   inherits from edu::umd::cs::findbugs::FirstPassDetector
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/NonReportingDetectorToDetector2Adapter.java
module edu::umd::cs::findbugs::NonReportingDetectorToDetector2Adapter
   inherits from edu::umd::cs::findbugs::DetectorToDetector2Adapter
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function NonReportingDetectorToDetector2Adapter(Detector) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detector defined in edu::umd::cs::findbugs::DetectorToDetector2Adapter
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/NoOpFindBugsProgress.java
module edu::umd::cs::findbugs::NoOpFindBugsProgress
   inherits from edu::umd::cs::findbugs::FindBugsProgress
   function finishArchive() in line 10
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function finishClass() in line 16
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function finishPerClassAnalysis() in line 19
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function predictPassCount(int[]) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function reportNumberOfArchives(int) in line 7
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function startAnalysis(int) in line 13
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function startArchive(String) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/OpcodeStack.java
module edu::umd::cs::findbugs::OpcodeStack
   inherits from edu::umd::cs::findbugs::visitclass::Constants2
   function addJumpValue(int,int) in line 2151
      25 lines of code
      2 parameters
      8 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable methodName defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpEntryLocations defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpStackEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses function mergeLists(List< Item >,List< Item >,boolean) defined in edu::umd::cs::findbugs::OpcodeStack
   function clear() in line 2091
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
   function constantToDouble(Item) in line 1638
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function constantToFloat(Item) in line 1630
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function constantToInt(Item) in line 1622
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function constantToLong(Item) in line 1646
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getExceptionSig(DismantleBytecode,CodeException) in line 711
      protection public
      7 lines of code
      2 parameters
      3 conditional paths
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getItemMethodInvokedOn(DismantleBytecode) in line 2568
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function getOpcode() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
   function getLastUpdate(int) in line 814
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable lastUpdate defined in edu::umd::cs::findbugs::OpcodeStack
   function getLVValue(int) in line 2642
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
   function getNumLastUpdates() in line 819
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastUpdate defined in edu::umd::cs::findbugs::OpcodeStack
   function getNumLocalValues() in line 2648
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
   function getStackDepth() in line 2270
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
   function getStackItem(int) in line 2274
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getStringFromIndex(DismantleBytecode,int) in line 2581
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function handleDcmp(int) in line 1654
      23 lines of code
      1 parameters
      6 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function constantToDouble(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleDup() in line 1740
      6 lines of code
      0 parameters
      1 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleDup2() in line 1763
      15 lines of code
      0 parameters
      2 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSize() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleDup2X1() in line 1782
      23 lines of code
      0 parameters
      2 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleDup2X2() in line 1806
      36 lines of code
      0 parameters
      4 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isWide() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleDupX1() in line 1750
      9 lines of code
      0 parameters
      1 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleDupX2() in line 1846
      20 lines of code
      0 parameters
      2 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleFcmp(int) in line 1682
      22 lines of code
      1 parameters
      6 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function constantToFloat(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleLcmp() in line 1708
      18 lines of code
      0 parameters
      4 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function constantToLong(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleSwap() in line 1730
      6 lines of code
      0 parameters
      1 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function hasIncomingBranches(int) in line 704
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable jumpEntryLocations defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpEntries defined in edu::umd::cs::findbugs::OpcodeStack
   function initialize() in line 2184
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function setTop(boolean) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpStackEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpEntryLocations defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lastUpdate defined in edu::umd::cs::findbugs::OpcodeStack
   function isJumpTarget(int) in line 2147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable jumpEntryLocations defined in edu::umd::cs::findbugs::OpcodeStack
   function isTop() in line 2666
      protection public
      5 lines of code
      0 parameters
      3 conditional paths
      uses variable top defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable reachOnlyByBranch defined in edu::umd::cs::findbugs::OpcodeStack
      uses function setTop(boolean) defined in edu::umd::cs::findbugs::OpcodeStack
   function learnFrom(JumpInfo) in line 2179
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable jumpEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpStackEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpEntryLocations defined in edu::umd::cs::findbugs::OpcodeStack
   function mergeJumps(DismantleBytecode) in line 718
      protection public
      86 lines of code
      1 parameters
      19 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable top defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable NONZERO_MEANS_NULL defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable ZERO_MEANS_NULL defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isTop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function setCouldBeZero(boolean) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable jumpEntryLocations defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpStackEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable DEBUG2 defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses function setTop(boolean) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function mergeLists(List< Item >,List< Item >,boolean) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getExceptionSig(DismantleBytecode,CodeException) defined in edu::umd::cs::findbugs::OpcodeStack
   function mergeLists(List< Item >,List< Item >,boolean) in line 2063
      27 lines of code
      3 parameters
      7 conditional paths
      uses variable DEBUG2 defined in edu::umd::cs::findbugs::OpcodeStack
      uses function merge(Item,Item) defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function pop() in line 2293
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
   function pop(int) in line 2301
      5 lines of code
      1 parameters
      2 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
   function precomputation(DismantleBytecode) in line 1601
      protection public
      16 lines of code
      1 parameters
      6 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function cloneAndSetSpecialKind(@SpecialKind int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NON_NEGATIVE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
   function processMethodCall(DismantleBytecode,int) in line 1867
      195 lines of code
      2 parameters
      41 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable methodName defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isServletParameterTainted() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable injection defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getLVValue(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setSpecialKind(@SpecialKind int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable FILE_OPENED_IN_APPEND_MODE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable source defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setPC(int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSpecialKind() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setServletParameterTainted() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable JAVA_UTIL_ARRAYS_ARRAY_LIST defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function pushByInvoke(DismantleBytecode,boolean) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setLVValue(int,Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable RANDOM_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable MATH_ABS defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable SERVLET_REQUEST_TAINTED defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function push(Item) in line 2307
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByConstant(DismantleBytecode,Constant) in line 2311
      19 lines of code
      2 parameters
      7 conditional paths
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStringFromIndex(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByDoubleMath(int,Item,Item) in line 2526
      24 lines of code
      3 parameters
      8 conditional paths
      uses variable FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function constantToDouble(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable NASTY_FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setSpecialKind(@SpecialKind int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByFloatMath(int,Item,Item) in line 2502
      23 lines of code
      3 parameters
      8 conditional paths
      uses variable FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function constantToFloat(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable NASTY_FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setSpecialKind(@SpecialKind int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByIntMath(DismantleBytecode,int,Item,Item) in line 2345
      104 lines of code
      4 parameters
      42 conditional paths
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function constantToInt(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function setSpecialKind(@SpecialKind int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable LOW_8_BITS_CLEAR defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NON_NEGATIVE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSpecialKind() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable ZERO_MEANS_NULL defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setPC(int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getPC() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NONZERO_MEANS_NULL defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable INTEGER_SUM defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable AVERAGE_COMPUTED_USING_DIVISION defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NOT_SPECIAL defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RANDOM_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RANDOM_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function pushByInvoke(DismantleBytecode,boolean) in line 2551
      16 lines of code
      2 parameters
      4 conditional paths
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable source defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function pushBySignature(String,DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByLocalLoad(String,int) in line 2609
      23 lines of code
      2 parameters
      5 conditional paths
      uses function getLVValue(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByLocalObjectLoad(DismantleBytecode,int) in line 2331
      13 lines of code
      2 parameters
      3 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function pushByLocalLoad(String,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByLocalStore(int) in line 2594
      14 lines of code
      1 parameters
      10 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses function setLVValue(int,Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByLongMath(int,Item,Item) in line 2450
      51 lines of code
      3 parameters
      19 conditional paths
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function constantToLong(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function constantToInt(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function setSpecialKind(@SpecialKind int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable LOW_8_BITS_CLEAR defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushBySignature(String,DismantleBytecode) in line 2586
      7 lines of code
      2 parameters
      3 conditional paths
      uses function setPC(int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function replaceTop(Item) in line 2296
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function resetForMethodEntry(final DismantleBytecode) in line 2197
      protection public
      25 lines of code
      1 parameters
      5 conditional paths
      uses function initialize() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function resetForMethodEntry0(PreorderVisitor) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable useIterativeAnalysis defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function learnFrom(JumpInfo) defined in edu::umd::cs::findbugs::OpcodeStack
   function resetForMethodEntry0(PreorderVisitor) in line 2223
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function resetForMethodEntry0(@SlashedClassName String,Method) in line 2227
      42 lines of code
      2 parameters
      8 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable top defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable seenTransferOfControl defined in edu::umd::cs::findbugs::OpcodeStack
      uses function setInitialParameter(boolean) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setLVValue(int,Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSize() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function sawOpcode(DismantleBytecode,int) in line 827
      protection public
      773 lines of code
      2 parameters
      255 conditional paths
      uses variable isRegisterStore defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function setLastUpdate(int,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function precomputation(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isTop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getMaxPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPrevOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getCodeByte(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function pushByLocalObjectLoad(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pushByLocalLoad(String,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isComplete() defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getSummary(XField) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function setLoadedFromField(XField,int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getFieldName() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function setSpecialKind(@SpecialKind int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable FILE_SEPARATOR_STRING defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstantRefOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function pushByConstant(DismantleBytecode,Constant) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable seenTransferOfControl defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function valueCouldBeNegative() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSpecialKind() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses function addJumpValue(int,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSwitchOffsets() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function hasConstantValue(int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function checkForIntegerMinValue() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NOT_SPECIAL defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSize() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function handleDup() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleDup2() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleDupX1() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleDupX2() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleDup2X1() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleDup2X2() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getLVValue(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getIntConstant() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function pushByIntMath(DismantleBytecode,int,Item,Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pushByLocalStore(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function setTop(boolean) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function handleSwap() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NON_NEGATIVE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable SIGNED_BYTE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function constantToInt(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function constantToLong(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function constantToFloat(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function constantToDouble(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pushByLongMath(int,Item,Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleLcmp() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleFcmp(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleDcmp(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pushByFloatMath(int,Item,Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pushByDoubleMath(int,Item,Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable NEWLY_ALLOCATED defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function pushBySignature(String,DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function processMethodCall(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
      uses function clear() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getNextPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
   function setLastUpdate(int,int) in line 809
      4 lines of code
      2 parameters
      2 conditional paths
      uses variable lastUpdate defined in edu::umd::cs::findbugs::OpcodeStack
   function setLVValue(int,Item) in line 2633
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable useIterativeAnalysis defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable seenTransferOfControl defined in edu::umd::cs::findbugs::OpcodeStack
      uses function merge(Item,Item) defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function setTop(boolean) in line 2655
      7 lines of code
      1 parameters
      4 conditional paths
      uses variable top defined in edu::umd::cs::findbugs::OpcodeStack
   function toString() in line 691
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
   function OpcodeStack() in line 697
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lastUpdate defined in edu::umd::cs::findbugs::OpcodeStack
   variable DEBUG in line 95
   variable DEBUG2 in line 97
   variable JAVA_UTIL_ARRAYS_ARRAY_LIST in line 94
   variable jumpEntries in line 2098
   variable jumpEntryLocations in line 2100
   variable jumpStackEntries in line 2099
   variable lastUpdate in line 100
   variable lvValues in line 99
   variable methodName in line 2176
   variable reachOnlyByBranch in line 710
   variable seenTransferOfControl in line 114
   variable stack in line 98
   variable top in line 101
   variable useIterativeAnalysis in line 116
module edu::umd::cs::findbugs::OpcodeStack::HttpParameterInjection
module edu::umd::cs::findbugs::OpcodeStack::Item
   function checkForIntegerMinValue() in line 607
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable RANDOM_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function clearNewlyAllocated() in line 663
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
   function cloneAndSetSpecialKind(@SpecialKind int) in line 541
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function couldBeZero() in line 577
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function equals(Object) in line 206
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable source defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable userValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable injection defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable flags defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable fieldLoadedFromRegister defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getConstant() in line 521
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getElementSignature() in line 483
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
   function getFieldAnnotation() in line 527
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFieldLoadedFromRegister() in line 411
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHttpParameterName() in line 420
      protection public
      5 lines of code
      0 parameters
      3 conditional paths
   function getInjectionPC() in line 425
      protection public
      5 lines of code
      0 parameters
      3 conditional paths
   function getJavaClass() in line 463
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
   function getPC() in line 177
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRegisterNumber() in line 510
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getReturnValueOf() in line 573
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
   function getSignature() in line 513
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSize() in line 172
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
   function getSpecialKind() in line 549
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUserValue() in line 589
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getXField() in line 530
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
   function hasConstantValue(int) in line 678
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function hasConstantValue(long) in line 683
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function hashCode() in line 188
      protection public
      17 lines of code
      0 parameters
      4 conditional paths
   function isArray() in line 478
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isBooleanNullnessValue() in line 555
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isCouldBeZero() in line 636
      3 lines of code
      0 parameters
      1 conditional paths
   function isInitialParameter() in line 622
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isNewlyAllocated() in line 670
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isNonNegative() in line 498
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
   function isNull() in line 656
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPrimitive() in line 506
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isServletParameterTainted() in line 593
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable SERVLET_REQUEST_TAINTED defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function isWide() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeCrossMethod() in line 166
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function merge(Item,Item) in line 327
      protection public
      49 lines of code
      2 parameters
      14 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable flags defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setCouldBeZero(boolean) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isCouldBeZero() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable pc defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isNull() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable source defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable userValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable fieldLoadedFromRegister defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable injection defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
   function mustBeZero() in line 580
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function nullItem(String) in line 456
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setNull(boolean) defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function setCouldBeZero(boolean) in line 629
      3 lines of code
      1 parameters
      1 conditional paths
   function setFlag(boolean,int) in line 647
      6 lines of code
      2 parameters
      2 conditional paths
   function setInitialParameter(boolean) in line 615
      3 lines of code
      1 parameters
      1 conditional paths
   function setLoadedFromField(XField,int) in line 415
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function setNull(boolean) in line 643
      3 lines of code
      1 parameters
      1 conditional paths
   function setPC(int) in line 180
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setServletParameterTainted() in line 596
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable SERVLET_REQUEST_TAINTED defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function setSpecialKind(@SpecialKind int) in line 537
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setUserValue(Object) in line 564
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 223
      protection public
      102 lines of code
      0 parameters
      29 conditional paths
   function valueCouldBeNegative() in line 599
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable RANDOM_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable SIGNED_BYTE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RANDOM_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function Item(String,int) in line 376
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function Item(String) in line 380
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function Item(Item) in line 383
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable source defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable userValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable injection defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable flags defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable pc defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function Item(Item,int) in line 394
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function Item(String,FieldAnnotation) in line 398
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
   function Item(String,FieldAnnotation,int) in line 404
      protection public
      6 lines of code
      3 parameters
      2 conditional paths
   function Item(String,Object) in line 431
      protection public
      18 lines of code
      2 parameters
      7 conditional paths
   function Item() in line 450
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   variable AVERAGE_COMPUTED_USING_DIVISION in line 136
      protection public
   variable constValue in line 157
   variable COULD_BE_ZERO_FLAG in line 151
   variable fieldLoadedFromRegister in line 164
   variable FILE_OPENED_IN_APPEND_MODE in line 144
      protection public
   variable FILE_SEPARATOR_STRING in line 140
      protection public
   variable flags in line 160
   variable FLOAT_MATH in line 137
      protection public
   variable HASHCODE_INT in line 134
      protection public
   variable HASHCODE_INT_REMAINDER in line 139
      protection public
   variable injection in line 163
   variable INTEGER_SUM in line 135
      protection public
   variable IS_INITIAL_PARAMETER_FLAG in line 150
   variable IS_NULL_FLAG in line 152
   variable LOW_8_BITS_CLEAR in line 133
      protection public
   variable MATH_ABS in line 141
      protection public
   variable NASTY_FLOAT_MATH in line 143
      protection public
   variable NEWLY_ALLOCATED in line 146
      protection public
   variable NON_NEGATIVE in line 142
      protection public
   variable NONZERO_MEANS_NULL in line 148
      protection public
   variable NOT_SPECIAL in line 130
      protection public
   variable pc in line 159
   variable RANDOM_INT in line 132
      protection public
   variable RANDOM_INT_REMAINDER in line 138
      protection public
   variable registerNumber in line 161
   variable SERVLET_REQUEST_TAINTED in line 145
      protection public
   variable signature in line 156
   variable SIGNED_BYTE in line 131
      protection public
   variable source in line 158
   variable specialKind in line 155
   variable UNKNOWN in line 154
      protection public
   variable userValue in line 162
   variable ZERO_MEANS_NULL in line 147
      protection public
module edu::umd::cs::findbugs::OpcodeStack::Item::SpecialKind
module edu::umd::cs::findbugs::OpcodeStack::JumpInfo
module edu::umd::cs::findbugs::OpcodeStack::JumpInfoFactory
   inherits from edu::umd::cs::findbugs::classfile::engine::bcel::AnalysisFactory
   function analyze(IAnalysisCache,MethodDescriptor) in line 2118
      protection public
      27 lines of code
      2 parameters
      4 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses function OpcodeStack() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function setupVisitorForClass(JavaClass) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function doVisitMethod(Method) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function JumpInfoFactory() in line 2114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/PackageMemberAnnotation.java
module edu::umd::cs::findbugs::PackageMemberAnnotation
   inherits from edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   abstract class
   function format(String,ClassAnnotation) in line 95
      protection public
      11 lines of code
      2 parameters
      5 conditional paths
      uses function shorten(String,String) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function formatPackageMember(String,ClassAnnotation) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function formatPackageMember(String,ClassAnnotation) in line 154
      1 lines of code
      2 parameters
      1 conditional paths
   function getClassDescriptor() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassDescriptorForDottedClassName(@DottedClassName String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function getClassName() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function getDescription() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function getPackageName() in line 78
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function isSignificant() in line 172
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function removePackage(String) in line 131
      7 lines of code
      1 parameters
      2 conditional paths
   function removePackageName(String) in line 141
      7 lines of code
      1 parameters
      2 conditional paths
      uses function formatPackageMember(String,ClassAnnotation) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function setDescription(String) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function shorten(String,String) in line 120
      9 lines of code
      2 parameters
      3 conditional paths
   function toString() in line 162
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(ClassAnnotation) in line 167
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getAnnotationDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses variable description defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function format(String,ClassAnnotation) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function PackageMemberAnnotation(@DottedClassName String,String) in line 45
      15 lines of code
      2 parameters
      5 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable sourceFileName defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function lookupSourceFile(@NonNull @DottedClassName String) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable UNKNOWN_SOURCE_FILE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable description defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   variable className in line 38
   variable description in line 39
   variable serialVersionUID in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/PackageStats.java
module edu::umd::cs::findbugs::PackageStats
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   function addClass(String,boolean,int) in line 187
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable isInterface defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function size() defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function addClass(String,String,boolean,int) in line 191
      protection public
      10 lines of code
      4 parameters
      2 conditional paths
      uses variable packageMembers defined in edu::umd::cs::findbugs::PackageStats
      uses function getClassStats() defined in edu::umd::cs::findbugs::PackageStats
      uses variable name defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable sourceFile defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function setInterface(boolean) defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable isInterface defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function setSize(int) defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function size() defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function addClass(ClassStats) in line 202
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable packageMembers defined in edu::umd::cs::findbugs::PackageStats
      uses function getName() defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function size() defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function addError(BugInstance) in line 174
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassStats() defined in edu::umd::cs::findbugs::PackageStats
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getSourceFileName() defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function addError(BugInstance) defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function clearBugCounts() in line 287
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable packageMembers defined in edu::umd::cs::findbugs::PackageStats
   function getBugsAtPriority(int) in line 154
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function getClassStats() in line 145
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable packageMembers defined in edu::umd::cs::findbugs::PackageStats
   function getClassStats(String,String) in line 159
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable packageMembers defined in edu::umd::cs::findbugs::PackageStats
      uses variable name defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function ClassStats(String,String) defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable sourceFile defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable numClasses defined in edu::umd::cs::findbugs::PackageStats
   function getClassStatsOrNull(String) in line 170
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable packageMembers defined in edu::umd::cs::findbugs::PackageStats
      uses variable name defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function getNumClasses() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable numClasses defined in edu::umd::cs::findbugs::PackageStats
   function getPackageName() in line 211
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable packageName defined in edu::umd::cs::findbugs::PackageStats
   function getSortedClassStats() in line 246
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable packageMembers defined in edu::umd::cs::findbugs::PackageStats
   function getTotalBugs() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function purgeClassesThatDontMatch(Pattern) in line 300
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable packageMembers defined in edu::umd::cs::findbugs::PackageStats
   function recomputeFromClassStats() in line 273
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function size() defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable numClasses defined in edu::umd::cs::findbugs::PackageStats
      uses variable packageMembers defined in edu::umd::cs::findbugs::PackageStats
   function setNumClasses(int) in line 219
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable numClasses defined in edu::umd::cs::findbugs::PackageStats
   function size() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function size() defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function toString() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable packageName defined in edu::umd::cs::findbugs::PackageStats
      uses variable numClasses defined in edu::umd::cs::findbugs::PackageStats
      uses function size() defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function writeBugPriorities(XMLOutput,int[]) in line 263
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
   function writeXML(XMLOutput) in line 223
      protection public
      22 lines of code
      1 parameters
      3 conditional paths
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::PackageStats
      uses variable packageName defined in edu::umd::cs::findbugs::PackageStats
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable numClasses defined in edu::umd::cs::findbugs::PackageStats
      uses variable packageMembers defined in edu::umd::cs::findbugs::PackageStats
      uses function size() defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function writeBugPriorities(XMLOutput,int[]) defined in edu::umd::cs::findbugs::PackageStats
      uses function getSortedClassStats() defined in edu::umd::cs::findbugs::PackageStats
   function PackageStats(String) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable packageName defined in edu::umd::cs::findbugs::PackageStats
   function PackageStats(String,int,int) in line 139
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable packageName defined in edu::umd::cs::findbugs::PackageStats
      uses variable numClasses defined in edu::umd::cs::findbugs::PackageStats
      uses function size() defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   variable ALL_ERRORS in line 118
      protection public
   variable ELEMENT_NAME in line 117
      protection public
   variable nBugs in line 121
   variable numClasses in line 123
   variable packageMembers in line 133
   variable packageName in line 119
   variable size in line 122
module edu::umd::cs::findbugs::PackageStats::ClassStats
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   inherits from Cloneable
   function addError(BugInstance) in line 75
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
   function clearBugCounts() in line 111
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function clone() in line 58
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function getBugsAtPriority(int) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function getName() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function getSourceFile() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function getTotalBugs() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function setInterface(boolean) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isInterface defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function setSize(int) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function size() defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function size() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function writeXML(XMLOutput) in line 94
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable sourceFile defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable isInterface defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function size() defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function writeBugPriorities(XMLOutput,int[]) defined in edu::umd::cs::findbugs::PackageStats
   function ClassStats(String,String) in line 52
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable sourceFile defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   variable isInterface in line 46
   variable name in line 44
   variable nBugs in line 48
   variable size in line 49
   variable sourceFile in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/PackageWarningSuppressor.java
module edu::umd::cs::findbugs::PackageWarningSuppressor
   inherits from edu::umd::cs::findbugs::WarningSuppressor
   function getPackageName() in line 14
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function match(BugInstance) in line 19
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function PackageWarningSuppressor(String,String) in line 8
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ParameterWarningSuppressor.java
module edu::umd::cs::findbugs::ParameterWarningSuppressor
   inherits from edu::umd::cs::findbugs::ClassWarningSuppressor
   function match(BugInstance) in line 16
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryLocalVariableAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function equals(Object) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getRegister() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function ParameterWarningSuppressor(String,ClassAnnotation,MethodAnnotation,int) in line 9
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/plan/AnalysisPass.java
module edu::umd::cs::findbugs::plan::AnalysisPass
   function addToPass(DetectorFactory) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function append(DetectorFactory) in line 71
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable memberSet defined in edu::umd::cs::findbugs::plan::AnalysisPass
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
   function contains(DetectorFactory) in line 109
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable memberSet defined in edu::umd::cs::findbugs::plan::AnalysisPass
   function getMembers() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable memberSet defined in edu::umd::cs::findbugs::plan::AnalysisPass
   function getUnpositionedMembers() in line 89
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable memberSet defined in edu::umd::cs::findbugs::plan::AnalysisPass
      uses variable orderedFactoryList defined in edu::umd::cs::findbugs::plan::AnalysisPass
   function instantiateDetector2sInPass(BugReporter) in line 120
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable orderedFactoryList defined in edu::umd::cs::findbugs::plan::AnalysisPass
      uses function iterator() defined in edu::umd::cs::findbugs::plan::AnalysisPass
   function instantiateDetectorsInPass(BugReporter) in line 140
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses variable orderedFactoryList defined in edu::umd::cs::findbugs::plan::AnalysisPass
   function iterator() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable orderedFactoryList defined in edu::umd::cs::findbugs::plan::AnalysisPass
   function AnalysisPass() in line 50
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable memberSet in line 42
   variable orderedFactoryList in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/plan/ByInterfaceDetectorFactorySelector.java
module edu::umd::cs::findbugs::plan::ByInterfaceDetectorFactorySelector
   inherits from edu::umd::cs::findbugs::plan::DetectorFactorySelector
   function selectFactory(DetectorFactory) in line 40
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::plan::ByInterfaceDetectorFactorySelector
      uses function getPlugin() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function isDetectorClassSubtypeOf(Class<?>) defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable detectorInterface defined in edu::umd::cs::findbugs::plan::ByInterfaceDetectorFactorySelector
   function ByInterfaceDetectorFactorySelector(Plugin,Class) in line 35
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::plan::ByInterfaceDetectorFactorySelector
      uses variable detectorInterface defined in edu::umd::cs::findbugs::plan::ByInterfaceDetectorFactorySelector
   variable detectorInterface in line 33
   variable plugin in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/plan/ConstraintEdge.java
module edu::umd::cs::findbugs::plan::ConstraintEdge
   inherits from edu::umd::cs::findbugs::graph::AbstractEdge
   function isSingleSource() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable constraint defined in edu::umd::cs::findbugs::plan::ConstraintEdge
      uses function isSingleSource() defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
   function setConstraint(DetectorOrderingConstraint) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable constraint defined in edu::umd::cs::findbugs::plan::ConstraintEdge
   function ConstraintEdge(DetectorNode,DetectorNode) in line 44
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable target defined in edu::umd::cs::findbugs::graph::AbstractEdge
   variable constraint in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/plan/ConstraintGraph.java
module edu::umd::cs::findbugs::plan::ConstraintGraph
   inherits from edu::umd::cs::findbugs::graph::AbstractGraph
   function allocateEdge(DetectorNode,DetectorNode) in line 39
      3 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNumVertices() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getNumEdges() defined in edu::umd::cs::findbugs::graph::AbstractGraph
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/plan/DetectorFactorySelector.java
module edu::umd::cs::findbugs::plan::DetectorFactorySelector
   function selectFactory(DetectorFactory) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/plan/DetectorNode.java
module edu::umd::cs::findbugs::plan::DetectorNode
   inherits from edu::umd::cs::findbugs::graph::AbstractVertex
   function getFactory() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::plan::DetectorNode
   function toString() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::plan::DetectorNode
      uses function getReportedBugPatternCodes() defined in edu::umd::cs::findbugs::DetectorFactory
   function DetectorNode(DetectorFactory) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::plan::DetectorNode
   variable factory in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/plan/DetectorOrderingConstraint.java
module edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
   function getEarlier() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable earlier defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
   function getLater() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable later defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
   function isSingleSource() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable singleSource defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
   function setSingleSource(boolean) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable singleSource defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
   function toString() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable earlier defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
      uses variable later defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
   function DetectorOrderingConstraint(DetectorFactorySelector,DetectorFactorySelector) in line 35
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable earlier defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
      uses variable later defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
   variable earlier in line 31
   variable later in line 32
   variable singleSource in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/plan/ExecutionPlan.java
module edu::umd::cs::findbugs::plan::ExecutionPlan
   function addOrCreateDetectorNode(DetectorFactory,Map< String, DetectorNode >,ConstraintGraph) in line 314
      13 lines of code
      3 parameters
      2 conditional paths
   function addOrCreateDetectorNodes(DetectorFactorySelector,Map< String, DetectorNode >,Set< DetectorFactory >,ConstraintGraph) in line 297
      16 lines of code
      4 parameters
      2 conditional paths
      uses function selectDetectors(DetectorFactorySelector,Set< DetectorFactory >) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function addOrCreateDetectorNode(DetectorFactory,Map< String, DetectorNode >,ConstraintGraph) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function addPass(AnalysisPass) in line 384
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable passList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function addPlugin(Plugin) in line 106
      protection public
      23 lines of code
      1 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable pluginList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function copyTo(Iterator< T >,Collection< T >) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable interPassConstraintList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable intraPassConstraintList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable factoryMap defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
   function appendDetectorsToPass(Collection< DetectorFactory >,AnalysisPass) in line 484
      18 lines of code
      2 parameters
      3 conditional paths
      uses function getPlugin() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses function getPositionSpecifiedInPluginDescriptor() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function appendToPass(DetectorFactory,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function appendToPass(DetectorFactory,AnalysisPass) in line 479
      4 lines of code
      2 parameters
      1 conditional paths
   function assignToPass(DetectorFactory,AnalysisPass) in line 470
      4 lines of code
      2 parameters
      1 conditional paths
      uses function addToPass(DetectorFactory) defined in edu::umd::cs::findbugs::plan::AnalysisPass
      uses variable assignedToPassSet defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function build() in line 136
      protection public
      93 lines of code
      0 parameters
      16 conditional paths
      uses variable factoryMap defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable interPassConstraintList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable intraPassConstraintList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function buildConstraintGraph(Map< String, DetectorNode >,Set< DetectorFactory >,List< DetectorOrderingConstraint >) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable factoryChooser defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function choose(DetectorFactory) defined in edu::umd::cs::findbugs::DetectorFactoryChooser
      uses function getFactory() defined in edu::umd::cs::findbugs::plan::DetectorNode
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function isSingleSource() defined in edu::umd::cs::findbugs::plan::ConstraintEdge
      uses function enable(DetectorFactory) defined in edu::umd::cs::findbugs::DetectorFactoryChooser
      uses variable DEBUG defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs2
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function buildPassList(ConstraintGraph) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable passList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function sortPass(List< DetectorOrderingConstraint >,Map< String, DetectorFactory >,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable assignedToPassSet defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function addPass(AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getUnassignedSet() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function assignToPass(DetectorFactory,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function appendDetectorsToPass(Collection< DetectorFactory >,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function print() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function buildConstraintGraph(Map< String, DetectorNode >,Set< DetectorFactory >,List< DetectorOrderingConstraint >) in line 267
      18 lines of code
      3 parameters
      2 conditional paths
      uses function addOrCreateDetectorNodes(DetectorFactorySelector,Map< String, DetectorNode >,Set< DetectorFactory >,ConstraintGraph) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function createConstraintEdges(ConstraintGraph,Set< DetectorNode >,Set< DetectorNode >,DetectorOrderingConstraint) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function buildPassList(ConstraintGraph) in line 347
      36 lines of code
      1 parameters
      7 conditional paths
      uses function addPass(AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function assignToPass(DetectorFactory,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function copyTo(Iterator< T >,Collection< T >) in line 246
      5 lines of code
      2 parameters
      2 conditional paths
   function createConstraintEdges(ConstraintGraph,Set< DetectorNode >,Set< DetectorNode >,DetectorOrderingConstraint) in line 328
      18 lines of code
      4 parameters
      4 conditional paths
      uses function setConstraint(DetectorOrderingConstraint) defined in edu::umd::cs::findbugs::plan::ConstraintEdge
   function dispose() in line 84
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable pluginList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable factoryChooser defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable passList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable factoryMap defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable interPassConstraintList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable intraPassConstraintList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable assignedToPassSet defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function dumpGraph(ConstraintGraph) in line 517
      8 lines of code
      1 parameters
      2 conditional paths
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getNumPasses() in line 242
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable passList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function getUnassignedSet() in line 460
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable factoryMap defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable assignedToPassSet defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function main(String[]) in line 526
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses function ExecutionPlan() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getPluginById(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function addPlugin(Plugin) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function build() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getNumPasses() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function print() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function passIterator() in line 233
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable passList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function print() in line 503
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable passList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function iterator() defined in edu::umd::cs::findbugs::plan::AnalysisPass
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
   function selectDetectors(DetectorFactorySelector,Set< DetectorFactory >) in line 286
      10 lines of code
      2 parameters
      3 conditional paths
      uses function selectFactory(DetectorFactory) defined in edu::umd::cs::findbugs::plan::DetectorFactorySelector
   function setDetectorFactoryChooser(DetectorFactoryChooser) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable factoryChooser defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function sortPass(List< DetectorOrderingConstraint >,Map< String, DetectorFactory >,AnalysisPass) in line 391
      68 lines of code
      3 parameters
      10 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function selectDetectors(DetectorFactorySelector,Set< DetectorFactory >) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getUnassignedSet() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function buildConstraintGraph(Map< String, DetectorNode >,Set< DetectorFactory >,List< DetectorOrderingConstraint >) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function dumpGraph(ConstraintGraph) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function assignToPass(DetectorFactory,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function search() defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch
      uses function appendToPass(DetectorFactory,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getFactory() defined in edu::umd::cs::findbugs::plan::DetectorNode
      uses function appendDetectorsToPass(Collection< DetectorFactory >,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function ExecutionPlan() in line 66
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
   variable assignedToPassSet in line 60
   variable DEBUG in line 52
      protection public
   variable factoryChooser in line 55
   variable factoryMap in line 57
   variable interPassConstraintList in line 58
   variable intraPassConstraintList in line 59
   variable passList in line 56
   variable pluginList in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/plan/OrderingConstraintException.java
module edu::umd::cs::findbugs::plan::OrderingConstraintException
   inherits from edu::umd::cs::findbugs::classfile::CheckedAnalysisException
   function OrderingConstraintException(String) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable serialVersionUID in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/plan/ReportingDetectorFactorySelector.java
module edu::umd::cs::findbugs::plan::ReportingDetectorFactorySelector
   inherits from edu::umd::cs::findbugs::plan::DetectorFactorySelector
   function selectFactory(DetectorFactory) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::plan::ReportingDetectorFactorySelector
      uses function getPlugin() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function isReportingDetector() defined in edu::umd::cs::findbugs::DetectorFactory
   function toString() in line 52
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::plan::ReportingDetectorFactorySelector
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
   function ReportingDetectorFactorySelector(Plugin) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::plan::ReportingDetectorFactorySelector
   variable plugin in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/plan/SingleDetectorFactorySelector.java
module edu::umd::cs::findbugs::plan::SingleDetectorFactorySelector
   inherits from edu::umd::cs::findbugs::plan::DetectorFactorySelector
   function selectFactory(DetectorFactory) in line 39
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::plan::SingleDetectorFactorySelector
      uses function getPlugin() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable className defined in edu::umd::cs::findbugs::plan::SingleDetectorFactorySelector
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
   function toString() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::plan::SingleDetectorFactorySelector
   function SingleDetectorFactorySelector(Plugin,String) in line 34
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::plan::SingleDetectorFactorySelector
      uses variable className defined in edu::umd::cs::findbugs::plan::SingleDetectorFactorySelector
   variable className in line 32
   variable plugin in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/Plugin.java
module edu::umd::cs::findbugs::Plugin
   function addBugCode(BugCode) in line 170
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugCodeList defined in edu::umd::cs::findbugs::Plugin
   function addBugPattern(BugPattern) in line 161
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugPatternList defined in edu::umd::cs::findbugs::Plugin
   function addDetectorFactory(DetectorFactory) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detectorFactoryList defined in edu::umd::cs::findbugs::Plugin
   function addInterPassOrderingConstraint(DetectorOrderingConstraint) in line 179
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable interPassConstraintList defined in edu::umd::cs::findbugs::Plugin
   function addIntraPassOrderingConstraint(DetectorOrderingConstraint) in line 188
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable intraPassConstraintList defined in edu::umd::cs::findbugs::Plugin
   function bugCodeIterator() in line 243
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCodeList defined in edu::umd::cs::findbugs::Plugin
   function bugPatternIterator() in line 234
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugPatternList defined in edu::umd::cs::findbugs::Plugin
   function chooseFactory(FactoryChooser) in line 301
      8 lines of code
      1 parameters
      3 conditional paths
      uses function detectorFactoryIterator() defined in edu::umd::cs::findbugs::Plugin
      uses function choose(DetectorFactory) defined in edu::umd::cs::findbugs::Plugin::FactoryChooser
   function detectorFactoryIterator() in line 225
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detectorFactoryList defined in edu::umd::cs::findbugs::Plugin
   function getBugRanker() in line 317
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugRanker defined in edu::umd::cs::findbugs::Plugin
   function getEngineRegistrarClass() in line 286
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable engineRegistrarClass defined in edu::umd::cs::findbugs::Plugin
   function getFactoryByFullName(final String) in line 212
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function chooseFactory(FactoryChooser) defined in edu::umd::cs::findbugs::Plugin
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
   function getFactoryByShortName(final String) in line 198
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function chooseFactory(FactoryChooser) defined in edu::umd::cs::findbugs::Plugin
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
   function getPluginId() in line 264
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pluginId defined in edu::umd::cs::findbugs::Plugin
   function getPluginLoader() in line 293
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pluginLoader defined in edu::umd::cs::findbugs::Plugin
   function getProvider() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable provider defined in edu::umd::cs::findbugs::Plugin
   function getShortDescription() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable shortDescription defined in edu::umd::cs::findbugs::Plugin
   function getWebsite() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable website defined in edu::umd::cs::findbugs::Plugin
   function interPassConstraintIterator() in line 250
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable interPassConstraintList defined in edu::umd::cs::findbugs::Plugin
   function intraPassConstraintIterator() in line 257
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable intraPassConstraintList defined in edu::umd::cs::findbugs::Plugin
   function isEnabled() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable enabled defined in edu::umd::cs::findbugs::Plugin
   function rankBug(BugInstance) in line 321
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bugRanker defined in edu::umd::cs::findbugs::Plugin
   function setBugRanker(BugRanker) in line 313
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setEnabled(boolean) in line 79
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable enabled defined in edu::umd::cs::findbugs::Plugin
   function setEngineRegistrarClass(Class<?extends IAnalysisEngineRegistrar >) in line 275
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable engineRegistrarClass defined in edu::umd::cs::findbugs::Plugin
   function setProvider(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable provider defined in edu::umd::cs::findbugs::Plugin
   function setShortDescription(String) in line 133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable shortDescription defined in edu::umd::cs::findbugs::Plugin
   function setWebsite(String) in line 115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable website defined in edu::umd::cs::findbugs::Plugin
   function Plugin(String,PluginLoader) in line 64
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses variable pluginId defined in edu::umd::cs::findbugs::Plugin
      uses variable pluginLoader defined in edu::umd::cs::findbugs::Plugin
   variable bugCodeList in line 44
   variable bugPatternList in line 43
   variable bugRanker in line 46
   variable detectorFactoryList in line 42
   variable enabled in line 45
   variable engineRegistrarClass in line 53
   variable interPassConstraintList in line 49
   variable intraPassConstraintList in line 50
   variable pluginId in line 38
   variable pluginLoader in line 56
   variable provider in line 39
   variable shortDescription in line 41
   variable website in line 40
module edu::umd::cs::findbugs::Plugin::FactoryChooser
   function choose(DetectorFactory) in line 298
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/PluginException.java
module edu::umd::cs::findbugs::PluginException
   inherits from Exception
   function PluginException(String) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function PluginException(String,Throwable) in line 49
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/PluginLoader.java
module edu::umd::cs::findbugs::PluginLoader
   function addCollection(List< Document >,String) in line 605
      15 lines of code
      2 parameters
      3 conditional paths
      uses function getResource(String) defined in edu::umd::cs::findbugs::PluginLoader
   function findMessageNode(List< Document >,String,String) in line 621
      10 lines of code
      3 parameters
      3 conditional paths
   function findOptionalMessageNode(List< Document >,String) in line 632
      8 lines of code
      2 parameters
      3 conditional paths
   function getChildText(Node,String) in line 640
      6 lines of code
      2 parameters
      2 conditional paths
   function getClassLoader() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classLoader defined in edu::umd::cs::findbugs::PluginLoader
   function getConstraintSelector(Element,Plugin,String) in line 545
      45 lines of code
      3 parameters
      10 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::PluginLoader
   function getCoreResource(String) in line 172
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses function loadFromFindBugsPluginDir(String) defined in edu::umd::cs::findbugs::PluginLoader
      uses function getResource(String) defined in edu::umd::cs::findbugs::PluginLoader
      uses function loadFromFindBugsEtcDir(String) defined in edu::umd::cs::findbugs::PluginLoader
   function getPlugin() in line 133
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::PluginLoader
      uses function init() defined in edu::umd::cs::findbugs::PluginLoader
   function getResource(String) in line 150
      20 lines of code
      1 parameters
      6 conditional paths
      uses variable classLoader defined in edu::umd::cs::findbugs::PluginLoader
   function init() in line 220
      324 lines of code
      0 parameters
      54 conditional paths
      uses function getResource(String) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable DEBUG defined in edu::umd::cs::findbugs::PluginLoader
      uses variable nextUnknownId defined in edu::umd::cs::findbugs::PluginLoader
      uses variable defaultLocale defined in edu::umd::cs::findbugs::I18N
      uses function addCollection(List< Document >,String) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable plugin defined in edu::umd::cs::findbugs::PluginLoader
      uses function setEnabled(boolean) defined in edu::umd::cs::findbugs::Plugin
      uses function setProvider(String) defined in edu::umd::cs::findbugs::Plugin
      uses function setWebsite(String) defined in edu::umd::cs::findbugs::Plugin
      uses function findMessageNode(List< Document >,String,String) defined in edu::umd::cs::findbugs::PluginLoader
      uses function setShortDescription(String) defined in edu::umd::cs::findbugs::Plugin
      uses variable noAnalysis defined in edu::umd::cs::findbugs::FindBugs
      uses variable classLoader defined in edu::umd::cs::findbugs::PluginLoader
      uses function setHidden(boolean) defined in edu::umd::cs::findbugs::DetectorFactory
      uses function setPositionSpecifiedInPluginDescriptor(int) defined in edu::umd::cs::findbugs::DetectorFactory
      uses function addDetectorFactory(DetectorFactory) defined in edu::umd::cs::findbugs::Plugin
      uses function setDetailHTML(String) defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getConstraintSelector(Element,Plugin,String) defined in edu::umd::cs::findbugs::PluginLoader
      uses function setSingleSource(boolean) defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
      uses function addInterPassOrderingConstraint(DetectorOrderingConstraint) defined in edu::umd::cs::findbugs::Plugin
      uses function addIntraPassOrderingConstraint(DetectorOrderingConstraint) defined in edu::umd::cs::findbugs::Plugin
      uses function getChildText(Node,String) defined in edu::umd::cs::findbugs::PluginLoader
      uses function registerBugCategory(String,BugCategory) defined in edu::umd::cs::findbugs::I18N
      uses function getBugCategoryDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses function getBugCategory(String) defined in edu::umd::cs::findbugs::I18N
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugCategory
      uses function setAbbrev(String) defined in edu::umd::cs::findbugs::BugCategory
      uses function getDetailText() defined in edu::umd::cs::findbugs::BugCategory
      uses function setDetailText(String) defined in edu::umd::cs::findbugs::BugCategory
      uses function addBugPattern(BugPattern) defined in edu::umd::cs::findbugs::Plugin
      uses function addBugCode(BugCode) defined in edu::umd::cs::findbugs::Plugin
      uses function setEngineRegistrarClass(Class<?extends IAnalysisEngineRegistrar >) defined in edu::umd::cs::findbugs::Plugin
      uses variable FILENAME defined in edu::umd::cs::findbugs::BugRanker
      uses function setBugRanker(BugRanker) defined in edu::umd::cs::findbugs::Plugin
   function isCorePlugin() in line 647
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable corePlugin defined in edu::umd::cs::findbugs::PluginLoader
   function loadFromFindBugsEtcDir(String) in line 186
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
   function loadFromFindBugsPluginDir(String) in line 203
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
   function lookupDetectorClass(Plugin,String) in line 591
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::PluginLoader
      uses function getFactoryByShortName(final String) defined in edu::umd::cs::findbugs::Plugin
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
   function PluginLoader(URL) in line 92
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable corePlugin defined in edu::umd::cs::findbugs::PluginLoader
      uses function init() defined in edu::umd::cs::findbugs::PluginLoader
   function PluginLoader(URL,ClassLoader) in line 104
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable corePlugin defined in edu::umd::cs::findbugs::PluginLoader
      uses function init() defined in edu::umd::cs::findbugs::PluginLoader
   function PluginLoader() in line 117
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable corePlugin defined in edu::umd::cs::findbugs::PluginLoader
   variable classLoader in line 75
   variable corePlugin in line 84
   variable DEBUG in line 72
   variable nextUnknownId in line 79
   variable plugin in line 82
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/PrintingBugReporter.java
module edu::umd::cs::findbugs::PrintingBugReporter
   inherits from edu::umd::cs::findbugs::TextUIBugReporter
   function doReportBug(BugInstance) in line 51
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable seenAlready defined in edu::umd::cs::findbugs::PrintingBugReporter
      uses function printBug(BugInstance) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function notifyObservers(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function finish() in line 58
      protection public
      3 lines of code
      0 parameters
      11 conditional paths
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function setUseLongBugCodes(boolean) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function setShowRank(boolean) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function setReportUserDesignations(boolean) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function setApplySuppressions(boolean) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function setReportHistory(boolean) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable annotationUploadFormat defined in edu::umd::cs::findbugs::PrintingBugReporter
      uses variable stylesheet defined in edu::umd::cs::findbugs::PrintingBugReporter
      uses function setPluginList(URL[]) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function main(String[]) in line 121
      protection public
      67 lines of code
      1 parameters
      16 conditional paths
      uses variable stylesheet defined in edu::umd::cs::findbugs::PrintingBugReporter
      uses function xslt(String,boolean,String[],int) defined in edu::umd::cs::findbugs::PrintingBugReporter
      uses function isApplySuppressions() defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setOutputStream(@WillClose PrintStream) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable annotationUploadFormat defined in edu::umd::cs::findbugs::PrintingBugReporter
      uses function computeBugHashes() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function iterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getInstanceHash() defined in edu::umd::cs::findbugs::BugInstance
      uses function getInstanceOccurrenceNum() defined in edu::umd::cs::findbugs::BugInstance
      uses function getInstanceOccurrenceMax() defined in edu::umd::cs::findbugs::BugInstance
      uses function getUserDesignationKey() defined in edu::umd::cs::findbugs::BugInstance
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::BugDesignation
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getAnnotationText() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProject() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Filter
      uses function printBug(BugInstance) defined in edu::umd::cs::findbugs::TextUIBugReporter
   function observeClass(ClassDescriptor) in line 45
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function xslt(String,boolean,String[],int) in line 190
      protection public
      19 lines of code
      4 parameters
      4 conditional paths
      uses variable stylesheet defined in edu::umd::cs::findbugs::PrintingBugReporter
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function setApplySuppressions(boolean) defined in edu::umd::cs::findbugs::BugCollection
      uses function setProjectFileName(String) defined in edu::umd::cs::findbugs::Project
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function setOutputStream(@WillClose PrintStream) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function finish() defined in edu::umd::cs::findbugs::HTMLBugReporter
      uses function getFatalException() defined in edu::umd::cs::findbugs::HTMLBugReporter
   variable annotationUploadFormat in line 42
   variable seenAlready in line 43
   variable stylesheet in line 41
module edu::umd::cs::findbugs::PrintingBugReporter::PrintingCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 80
      21 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 106
      14 lines of code
      2 parameters
      1 conditional paths
   function PrintingCommandLine() in line 64
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/Priorities.java
module edu::umd::cs::findbugs::Priorities
   variable EXP_PRIORITY in line 33
      protection public
   variable HIGH_PRIORITY in line 48
      protection public
   variable IGNORE_PRIORITY in line 29
      protection public
   variable LOW_PRIORITY in line 38
      protection public
   variable NORMAL_PRIORITY in line 43
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ProgramPoint.java
module edu::umd::cs::findbugs::ProgramPoint
   function getMethodAnnotation() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ProgramPoint
   function getSourceLineAnnotation() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ProgramPoint
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable pc defined in edu::umd::cs::findbugs::ProgramPoint
   function ProgramPoint(BytecodeScanningDetector) in line 25
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ProgramPoint
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable pc defined in edu::umd::cs::findbugs::ProgramPoint
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   variable method in line 30
      protection public
   variable pc in line 32
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/Project.java
module edu::umd::cs::findbugs::Project
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   function add(Project) in line 182
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable optionsMap defined in edu::umd::cs::findbugs::Project
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
      uses function appendWithoutDuplicates(List< T >,List< T >) defined in edu::umd::cs::findbugs::Project
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
   function addAuxClasspathEntry(String) in line 374
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
      uses function makeAbsoluteCWD(String) defined in edu::umd::cs::findbugs::Project
   function addFile(String) in line 238
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
      uses function makeAbsoluteCWD(String) defined in edu::umd::cs::findbugs::Project
   function addSourceDir(String) in line 248
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function makeAbsoluteCwdCandidates(String) defined in edu::umd::cs::findbugs::Project
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
   function addTimestamp(long) in line 1166
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function addWorkingDir(String) in line 262
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable currentWorkingDirectoryList defined in edu::umd::cs::findbugs::Project
   function appendWithoutDuplicates(List< T >,List< T >) in line 189
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function convertToAbsolute(String) in line 1054
      21 lines of code
      1 parameters
      3 conditional paths
      uses variable projectFileName defined in edu::umd::cs::findbugs::Project
   function convertToRelative(String,String) in line 984
      63 lines of code
      2 parameters
      12 conditional paths
      uses variable FILE_IGNORE_CASE defined in edu::umd::cs::findbugs::Project
   function duplicate() in line 154
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function Project() defined in edu::umd::cs::findbugs::Project
      uses variable projectFileName defined in edu::umd::cs::findbugs::Project
      uses variable currentWorkingDirectoryList defined in edu::umd::cs::findbugs::Project
      uses variable projectName defined in edu::umd::cs::findbugs::Project
      uses variable optionsMap defined in edu::umd::cs::findbugs::Project
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
      uses variable timestampForAnalyzedClasses defined in edu::umd::cs::findbugs::Project
      uses variable guiCallback defined in edu::umd::cs::findbugs::Project
   function getAuxClasspathEntry(int) in line 388
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
   function getAuxClasspathEntryList() in line 403
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
   function getFile(int) in line 296
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
   function getFileArray() in line 349
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
   function getFileCount() in line 286
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
   function getFileList() in line 313
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
   function getGuiCallback() in line 1213
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable guiCallback defined in edu::umd::cs::findbugs::Project
   function getImplicitClasspathEntryList() in line 513
      protection public
      24 lines of code
      0 parameters
      4 conditional paths
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
      uses variable url defined in edu::umd::cs::findbugs::Project::WorkListItem
      uses function WorkListItem(URL) defined in edu::umd::cs::findbugs::Project::WorkListItem
      uses function processComponentJar(URL,WorkList,List< String >) defined in edu::umd::cs::findbugs::Project
      uses function getURL() defined in edu::umd::cs::findbugs::Project::WorkListItem
   function getLine(BufferedReader) in line 837
      10 lines of code
      1 parameters
      3 conditional paths
   function getNumAuxClasspathEntries() in line 381
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
   function getNumSourceDirs() in line 322
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
   function getOption(String) in line 276
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable optionsMap defined in edu::umd::cs::findbugs::Project
   function getProjectFileName() in line 217
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable projectFileName defined in edu::umd::cs::findbugs::Project
   function getProjectName() in line 1188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable projectName defined in edu::umd::cs::findbugs::Project
   function getResolvedSourcePaths() in line 1220
      protection public
      25 lines of code
      0 parameters
      8 conditional paths
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses variable currentWorkingDirectoryList defined in edu::umd::cs::findbugs::Project
   function getSourceDir(int) in line 332
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
   function getSourceDirArray() in line 356
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
   function getSourceDirList() in line 363
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
   function getSourceFinder() in line 169
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable sourceFinder defined in edu::umd::cs::findbugs::Project
   function getSuppressionFilter() in line 1202
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable suppressionFilter defined in edu::umd::cs::findbugs::Project
   function getTimestamp() in line 1174
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable timestampForAnalyzedClasses defined in edu::umd::cs::findbugs::Project
   function isGuiAvaliable() in line 175
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable guiCallback defined in edu::umd::cs::findbugs::Project
   function isModified() in line 202
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeAbsoluteCWD(String) in line 1081
      4 lines of code
      1 parameters
      1 conditional paths
      uses function makeAbsoluteCwdCandidates(String) defined in edu::umd::cs::findbugs::Project
   function makeAbsoluteCwdCandidates(String) in line 1097
      27 lines of code
      1 parameters
      7 conditional paths
      uses variable currentWorkingDirectoryList defined in edu::umd::cs::findbugs::Project
      uses function isModified() defined in edu::umd::cs::findbugs::Project
   function makeListAbsoluteProject(List< String >) in line 1148
      10 lines of code
      1 parameters
      2 conditional paths
      uses function convertToAbsolute(String) defined in edu::umd::cs::findbugs::Project
   function parseOption(String) in line 959
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable optionsMap defined in edu::umd::cs::findbugs::Project
   function processComponentJar(URL,WorkList,List< String >) in line 546
      43 lines of code
      3 parameters
      10 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::Project
      uses function createRelativeURL(URL,String) defined in edu::umd::cs::findbugs::Project::WorkList
      uses function add(WorkListItem) defined in edu::umd::cs::findbugs::Project::WorkList
   function projectNameFromProjectFileName() in line 849
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable projectFileName defined in edu::umd::cs::findbugs::Project
   function read(String) in line 701
      protection public
      70 lines of code
      1 parameters
      15 conditional paths
      uses function isModified() defined in edu::umd::cs::findbugs::Project
      uses function setProjectFileName(String) defined in edu::umd::cs::findbugs::Project
      uses function getLine(BufferedReader) defined in edu::umd::cs::findbugs::Project
      uses variable JAR_FILES_KEY defined in edu::umd::cs::findbugs::Project
      uses variable SRC_DIRS_KEY defined in edu::umd::cs::findbugs::Project
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
      uses variable AUX_CLASSPATH_ENTRIES_KEY defined in edu::umd::cs::findbugs::Project
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses variable OPTIONS_KEY defined in edu::umd::cs::findbugs::Project
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
      uses function parseOption(String) defined in edu::umd::cs::findbugs::Project
      uses function getOption(String) defined in edu::umd::cs::findbugs::Project
      uses variable RELATIVE_PATHS defined in edu::umd::cs::findbugs::Project
      uses function makeListAbsoluteProject(List< String >) defined in edu::umd::cs::findbugs::Project
   function readProject(String) in line 779
      protection public
      53 lines of code
      1 parameters
      6 conditional paths
      uses variable projectFileName defined in edu::umd::cs::findbugs::Project
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProject() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function readXML(File) defined in edu::umd::cs::findbugs::Project
      uses function Project() defined in edu::umd::cs::findbugs::Project
      uses function read(String) defined in edu::umd::cs::findbugs::Project
   function readXML(File) in line 650
      protection public
      32 lines of code
      1 parameters
      4 conditional paths
      uses function Project() defined in edu::umd::cs::findbugs::Project
      uses function setModified(boolean) defined in edu::umd::cs::findbugs::Project
   function removeAuxClasspathEntry(int) in line 395
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
      uses function isModified() defined in edu::umd::cs::findbugs::Project
   function removeFile(int) in line 305
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
      uses function isModified() defined in edu::umd::cs::findbugs::Project
   function removeSourceDir(int) in line 341
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses function isModified() defined in edu::umd::cs::findbugs::Project
   function setCurrentWorkingDirectory(File) in line 195
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function addWorkingDir(String) defined in edu::umd::cs::findbugs::Project
   function setGuiCallback(IGuiCallback) in line 1209
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable guiCallback defined in edu::umd::cs::findbugs::Project
   function setModified(boolean) in line 209
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isModified() defined in edu::umd::cs::findbugs::Project
   function setProjectFileName(String) in line 227
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable projectFileName defined in edu::umd::cs::findbugs::Project
   function setProjectName(String) in line 1181
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable projectName defined in edu::umd::cs::findbugs::Project
   function setSuppressionFilter(Filter) in line 1195
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable suppressionFilter defined in edu::umd::cs::findbugs::Project
   function setTimestamp(long) in line 1162
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 866
      protection public
      18 lines of code
      0 parameters
      4 conditional paths
      uses variable projectName defined in edu::umd::cs::findbugs::Project
      uses variable projectFileName defined in edu::umd::cs::findbugs::Project
   function transformFilename(String) in line 889
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function write(String,boolean,String) in line 610
      protection public
      39 lines of code
      3 parameters
      9 conditional paths
      uses variable JAR_FILES_KEY defined in edu::umd::cs::findbugs::Project
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
      uses function convertToRelative(String,String) defined in edu::umd::cs::findbugs::Project
      uses variable SRC_DIRS_KEY defined in edu::umd::cs::findbugs::Project
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses variable AUX_CLASSPATH_ENTRIES_KEY defined in edu::umd::cs::findbugs::Project
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
      uses variable OPTIONS_KEY defined in edu::umd::cs::findbugs::Project
      uses variable RELATIVE_PATHS defined in edu::umd::cs::findbugs::Project
      uses function isModified() defined in edu::umd::cs::findbugs::Project
   function writeXML(File) in line 682
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function finish() defined in edu::umd::cs::findbugs::xml::XMLOutput
   function writeXML(XMLOutput) in line 903
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function writeXML(File) defined in edu::umd::cs::findbugs::Project
   function writeXML(XMLOutput,@CheckForNull Object) in line 906
      protection public
      23 lines of code
      2 parameters
      10 conditional paths
      uses function getProjectFileName() defined in edu::umd::cs::findbugs::Project
      uses variable UNNAMED_PROJECT defined in edu::umd::cs::findbugs::Project
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getProjectName() defined in edu::umd::cs::findbugs::Project
      uses variable PROJECT_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses variable currentWorkingDirectoryList defined in edu::umd::cs::findbugs::Project
      uses variable suppressionFilter defined in edu::umd::cs::findbugs::Project
      uses function isEmpty() defined in edu::umd::cs::findbugs::filter::Filter
      uses function writeBodyAsXML(XMLOutput) defined in edu::umd::cs::findbugs::filter::Filter
   function Project() in line 140
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable UNNAMED_PROJECT defined in edu::umd::cs::findbugs::Project
      uses variable optionsMap defined in edu::umd::cs::findbugs::Project
      uses variable RELATIVE_PATHS defined in edu::umd::cs::findbugs::Project
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
      uses function isModified() defined in edu::umd::cs::findbugs::Project
      uses variable currentWorkingDirectoryList defined in edu::umd::cs::findbugs::Project
   variable analysisTargets in line 108
   variable AUX_CLASSPATH_ENTRIES_KEY in line 593
   variable auxClasspathEntryList in line 118
   variable currentWorkingDirectoryList in line 88
   variable DEBUG in line 86
   variable FILE_IGNORE_CASE in line 975
   variable guiCallback in line 132
   variable isModified in line 123
   variable JAR_FILES_KEY in line 591
   variable OPTIONS_KEY in line 590
   variable optionsMap in line 103
   variable projectFileName in line 93
   variable projectName in line 95
   variable RELATIVE_PATHS in line 596
      protection public
   variable sourceFinder in line 136
   variable SRC_DIRS_KEY in line 592
   variable srcDirList in line 113
   variable suppressionFilter in line 134
   variable timestampForAnalyzedClasses in line 130
   variable UNNAMED_PROJECT in line 128
      protection public
module edu::umd::cs::findbugs::Project::WorkListItem
   function getURL() in line 425
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable url defined in edu::umd::cs::findbugs::Project::WorkListItem
   function WorkListItem(URL) in line 418
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable url defined in edu::umd::cs::findbugs::Project::WorkListItem
   variable url in line 411
module edu::umd::cs::findbugs::Project::WorkList
   function add(WorkListItem) in line 471
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::Project
      uses function getURL() defined in edu::umd::cs::findbugs::Project::WorkListItem
   function createRelativeURL(URL,String) in line 460
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function createURL(String) in line 449
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getNextItem() in line 496
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isEmpty() in line 489
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function WorkList() in line 441
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable addedSet in line 435
   variable itemList in line 434
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ProjectPackagePrefixes.java
module edu::umd::cs::findbugs::ProjectPackagePrefixes
   function countBug(BugInstance) in line 83
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function countPackageMember(String) defined in edu::umd::cs::findbugs::ProjectPackagePrefixes
   function countPackageMember(String) in line 92
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getProjects(@DottedClassName String) defined in edu::umd::cs::findbugs::ProjectPackagePrefixes
   function getFilter(String) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getProjects(@DottedClassName String) in line 107
      protection public
      8 lines of code
      1 parameters
      4 conditional paths
   function report() in line 128
      protection public
      59 lines of code
      0 parameters
      15 conditional paths
      uses function size() defined in edu::umd::cs::findbugs::ProjectPackagePrefixes
   function size() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ProjectPackagePrefixes() in line 188
      protection public
      23 lines of code
      0 parameters
      6 conditional paths
module edu::umd::cs::findbugs::ProjectPackagePrefixes::PrefixFilter
   function toString() in line 65
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ProjectStats.java
module edu::umd::cs::findbugs::ProjectStats
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   inherits from Cloneable
   function addBug(BugInstance) in line 207
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function addError(BugInstance) defined in edu::umd::cs::findbugs::PackageStats
      uses variable totalErrors defined in edu::umd::cs::findbugs::ProjectStats
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
   function addClass(String,boolean,int) in line 162
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function addClass(String,@CheckForNull String,boolean,int) in line 175
      protection public
      12 lines of code
      4 parameters
      2 conditional paths
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function addClass(String,boolean,int) defined in edu::umd::cs::findbugs::PackageStats
      uses variable totalClasses defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalSize defined in edu::umd::cs::findbugs::ProjectStats
   function addStats(ProjectStats) in line 394
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses variable totalSize defined in edu::umd::cs::findbugs::ProjectStats
      uses function getCodeSize() defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalSizeFromPackageStats defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalClasses defined in edu::umd::cs::findbugs::ProjectStats
      uses function getNumClasses() defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalClassesFromPackageStats defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalErrors defined in edu::umd::cs::findbugs::ProjectStats
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
      uses function getClassStats() defined in edu::umd::cs::findbugs::PackageStats
      uses function addClass(String,boolean,int) defined in edu::umd::cs::findbugs::PackageStats
   function clearBugCounts() in line 220
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
      uses variable totalErrors defined in edu::umd::cs::findbugs::ProjectStats
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
   function clone() in line 98
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function computeFileStats(BugCollection) in line 250
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBaseFootprint() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable baseFootprint defined in edu::umd::cs::findbugs::ProjectStats
   function getBugsOfPriority(int) in line 115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable totalErrors defined in edu::umd::cs::findbugs::ProjectStats
   function getClassStats(String) in line 193
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function getClassStatsOrNull(String) defined in edu::umd::cs::findbugs::PackageStats
   function getCodeSize() in line 107
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable totalSize defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalSizeFromPackageStats defined in edu::umd::cs::findbugs::ProjectStats
   function getNumClasses() in line 139
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable totalClasses defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalClassesFromPackageStats defined in edu::umd::cs::findbugs::ProjectStats
   function getPackageStats() in line 370
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
   function getPackageStats(String) in line 373
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
   function getProfiler() in line 430
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable profiler defined in edu::umd::cs::findbugs::ProjectStats
   function getReferencedClasses() in line 423
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable referencedClasses defined in edu::umd::cs::findbugs::ProjectStats
   function getTotalBugs() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable totalErrors defined in edu::umd::cs::findbugs::ProjectStats
   function purgeClassesThatDontMatch(Pattern) in line 228
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
      uses function purgeClassesThatDontMatch(Pattern) defined in edu::umd::cs::findbugs::PackageStats
      uses function getClassStats() defined in edu::umd::cs::findbugs::PackageStats
   function putIfAbsentPackageStats(String,int,int) in line 381
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalSizeFromPackageStats defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalClassesFromPackageStats defined in edu::umd::cs::findbugs::ProjectStats
   function recomputeFromClassStats() in line 237
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses variable totalErrors defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalSize defined in edu::umd::cs::findbugs::ProjectStats
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
   function reportSummary(@WillClose OutputStream) in line 330
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::ProjectStats
      uses function finish() defined in edu::umd::cs::findbugs::xml::XMLOutput
   function setReferencedClasses(int) in line 419
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setTimestamp(String) in line 125
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable TIMESTAMP_FORMAT defined in edu::umd::cs::findbugs::ProjectStats
   function setTimestamp(long) in line 129
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setVMVersion(String) in line 133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 78
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable totalClasses defined in edu::umd::cs::findbugs::ProjectStats
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
   function transformSummaryToHTML(Writer) in line 344
      protection public
      25 lines of code
      1 parameters
      4 conditional paths
      uses function reportSummary(@WillClose OutputStream) defined in edu::umd::cs::findbugs::ProjectStats
   function writeXML(XMLOutput) in line 256
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 262
      protection public
      64 lines of code
      2 parameters
      11 conditional paths
      uses variable TIMESTAMP_FORMAT defined in edu::umd::cs::findbugs::ProjectStats
      uses variable analysisTimestamp defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalClasses defined in edu::umd::cs::findbugs::ProjectStats
      uses variable referencedClasses defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalErrors defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalSize defined in edu::umd::cs::findbugs::ProjectStats
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
      uses variable java_vm_version defined in edu::umd::cs::findbugs::ProjectStats
      uses variable baseFootprint defined in edu::umd::cs::findbugs::ProjectStats
      uses function getCpuTime() defined in edu::umd::cs::findbugs::Footprint
      uses function getClockTime() defined in edu::umd::cs::findbugs::Footprint
      uses function getPeakMemory() defined in edu::umd::cs::findbugs::Footprint
      uses function getCollectionTime() defined in edu::umd::cs::findbugs::Footprint
      uses function getSourceFiles() defined in edu::umd::cs::findbugs::workflow::FileBugHash
      uses function getBugCount(String) defined in edu::umd::cs::findbugs::workflow::FileBugHash
      uses function getSize(String) defined in edu::umd::cs::findbugs::workflow::FileBugHash
      uses function getHash(String) defined in edu::umd::cs::findbugs::workflow::FileBugHash
      uses variable OMIT_PACKAGE_STATS defined in edu::umd::cs::findbugs::ProjectStats
      uses function getProfiler() defined in edu::umd::cs::findbugs::ProjectStats
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::log::Profiler
   function ProjectStats() in line 89
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   variable analysisTimestamp in line 72
   variable baseFootprint in line 73
   variable java_vm_version in line 74
   variable OMIT_PACKAGE_STATS in line 64
   variable packageStatsMap in line 65
   variable profiler in line 75
   variable referencedClasses in line 68
   variable TIMESTAMP_FORMAT in line 63
   variable totalClasses in line 67
   variable totalClassesFromPackageStats in line 71
   variable totalErrors in line 66
   variable totalSize in line 69
   variable totalSizeFromPackageStats in line 70
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/props/AbstractWarningProperty.java
module edu::umd::cs::findbugs::props::AbstractWarningProperty
   inherits from edu::umd::cs::findbugs::props::WarningProperty
   abstract class
   function getName() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable shortName defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   function getPriorityAdjustment() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   function AbstractWarningProperty(String,PriorityAdjustment) in line 38
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable shortName defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable priorityAdjustment in line 29
   variable shortName in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/props/GeneralWarningProperty.java
module edu::umd::cs::findbugs::props::GeneralWarningProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function GeneralWarningProperty(String,PriorityAdjustment) in line 31
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable CALLED_METHOD_1 in line 40
      protection public
   variable CALLED_METHOD_2 in line 43
      protection public
   variable CALLED_METHOD_3 in line 46
      protection public
   variable CALLED_METHOD_4 in line 49
      protection public
   variable FALSE_POSITIVE in line 60
      protection public
   variable IN_UNCALLABLE_METHOD in line 57
      protection public
   variable NOISY_BUG in line 62
      protection public
   variable ON_EXCEPTION_PATH in line 53
      protection public
   variable RECEIVER_OBJECT_TYPE in line 36
      protection public
   variable SILENT_BUG in line 64
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/props/PriorityAdjustment.java
module edu::umd::cs::findbugs::props::PriorityAdjustment
   function toString() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::props::PriorityAdjustment
   function PriorityAdjustment(String) in line 30
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::props::PriorityAdjustment
   variable A_LITTLE_BIT_HIGHER_PRIORITY in line 67
      protection public
   variable A_LITTLE_BIT_LOWER_PRIORITY in line 64
      protection public
   variable AT_MOST_LOW in line 53
      protection public
   variable AT_MOST_MEDIUM in line 56
      protection public
   variable FALSE_POSITIVE in line 70
      protection public
   variable LOWER_PRIORITY in line 62
      protection public
   variable NO_ADJUSTMENT in line 40
      protection public
   variable PEGGED_HIGH in line 59
      protection public
   variable RAISE_PRIORITY in line 43
      protection public
   variable RAISE_PRIORITY_TO_AT_LEAST_NORMAL in line 46
      protection public
   variable RAISE_PRIORITY_TO_HIGH in line 50
      protection public
   variable value in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/props/WarningProperty.java
module edu::umd::cs::findbugs::props::WarningProperty
   function getName() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPriorityAdjustment() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/props/WarningPropertySet.java
module edu::umd::cs::findbugs::props::WarningPropertySet
   inherits from Cloneable
   function addProperty(T) in line 84
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function checkProperty(T,Object) in line 149
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function clone() in line 68
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function computePriority(int) in line 175
      protection public
      66 lines of code
      1 parameters
      1 conditional paths
   function containsProperty(T) in line 134
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function decorateBugInstance(BugInstance) in line 261
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function getProperty(T) in line 163
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isFalsePositive(int) in line 251
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeProperty(T) in line 96
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setProperty(T,String) in line 110
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function setProperty(T,Boolean) in line 123
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 43
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
   function WarningPropertySet() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable map in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/props/WarningPropertyUtil.java
module edu::umd::cs::findbugs::props::WarningPropertyUtil
   abstract class
   function addPropertiesForDataMining(WarningPropertySet< WarningProperty >,ClassContext,Method,Location) in line 173
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
      uses function addReceiverObjectType(WarningPropertySet< WarningProperty >,ClassContext,Method,Location) defined in edu::umd::cs::findbugs::props::WarningPropertyUtil
      uses function addRecentlyCalledMethods(WarningPropertySet< WarningProperty >,ClassContext,Method,Location) defined in edu::umd::cs::findbugs::props::WarningPropertyUtil
   function addPropertiesForLocation(WarningPropertySet< WarningProperty >,ClassContext,Method,int) in line 191
      protection public
      14 lines of code
      4 parameters
      3 conditional paths
      uses function pcToLocation(ClassContext,Method,int) defined in edu::umd::cs::findbugs::props::WarningPropertyUtil
      uses function addPropertiesForDataMining(WarningPropertySet< WarningProperty >,ClassContext,Method,Location) defined in edu::umd::cs::findbugs::props::WarningPropertyUtil
   function addReceiverObjectType(WarningPropertySet< WarningProperty >,ClassContext,Method,Location) in line 95
      25 lines of code
      4 parameters
      5 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable receiverObjectInstructionSet defined in edu::umd::cs::findbugs::props::WarningPropertyUtil
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function setProperty(T,String) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable RECEIVER_OBJECT_TYPE defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
   function addRecentlyCalledMethods(WarningPropertySet< WarningProperty >,ClassContext,Method,Location) in line 130
      33 lines of code
      4 parameters
      8 conditional paths
      uses function getCallListDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses function callIterator() defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses variable CALLED_METHOD_1 defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses variable CALLED_METHOD_2 defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses variable CALLED_METHOD_3 defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses variable CALLED_METHOD_4 defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses function setProperty(T,String) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses function getMethodName() defined in edu::umd::cs::findbugs::ba::ca::Call
   function pcToLocation(ClassContext,Method,int) in line 73
      12 lines of code
      3 parameters
      3 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   variable receiverObjectInstructionSet in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/QueryBugAnnotations.java
module edu::umd::cs::findbugs::QueryBugAnnotations
   abstract class
   function addKeyword(String) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable keywordSet defined in edu::umd::cs::findbugs::QueryBugAnnotations
   function match(BugInstance,String) in line 88
      1 lines of code
      2 parameters
      1 conditional paths
   function scan(String) in line 53
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
   function scan(BugCollection,String) in line 67
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
      uses function getTextAnnotationWords() defined in edu::umd::cs::findbugs::BugInstance
      uses variable keywordSet defined in edu::umd::cs::findbugs::QueryBugAnnotations
      uses function match(BugInstance,String) defined in edu::umd::cs::findbugs::QueryBugAnnotations
   variable keywordSet in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/RecursiveFileSearch.java
module edu::umd::cs::findbugs::RecursiveFileSearch
   function fileNameIterator() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable resultList defined in edu::umd::cs::findbugs::RecursiveFileSearch
   function getDirectoriesScanned() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable directoriesScannedList defined in edu::umd::cs::findbugs::RecursiveFileSearch
   function search() in line 75
      protection public
      38 lines of code
      0 parameters
      9 conditional paths
      uses variable baseDir defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses variable directoryWorkList defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses variable directoriesScanned defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses variable directoriesScannedList defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses variable fileFilter defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses variable resultList defined in edu::umd::cs::findbugs::RecursiveFileSearch
   function RecursiveFileSearch(String,FileFilter) in line 54
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable baseDir defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses variable fileFilter defined in edu::umd::cs::findbugs::RecursiveFileSearch
   variable baseDir in line 40
   variable directoriesScanned in line 43
   variable directoriesScannedList in line 44
   variable directoryWorkList in line 42
   variable fileFilter in line 41
   variable resultList in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ResourceCollection.java
module edu::umd::cs::findbugs::ResourceCollection
   function addCreatedResource(Location,Resource) in line 75
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function addPreexistingResource(Resource) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getCreatedResource(Location) in line 102
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isEmpty() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function resourceIterator() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ResourceCollection() in line 52
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable locationToResourceMap in line 46
   variable resourceList in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ResourceCreationPoint.java
module edu::umd::cs::findbugs::ResourceCreationPoint
   function getLocation() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ResourceCreationPoint
   function getResourceClass() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable resourceClass defined in edu::umd::cs::findbugs::ResourceCreationPoint
   function ResourceCreationPoint(Location,String) in line 49
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses variable resourceClass defined in edu::umd::cs::findbugs::ResourceCreationPoint
   variable location in line 36
   variable resourceClass in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ResourceTrackingDetector.java
module edu::umd::cs::findbugs::ResourceTrackingDetector
   inherits from edu::umd::cs::findbugs::Detector
   abstract class
   function analyzeMethod(ClassContext,Method,ResourceTrackerType,ResourceCollection< Resource >) in line 156
      protection public
      33 lines of code
      4 parameters
      1 conditional paths
   function buildResourceCollection(ClassContext,Method,ResourceTrackerType) in line 121
      19 lines of code
      3 parameters
      1 conditional paths
   function getResourceTracker(ClassContext,Method) in line 70
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function inspectResult(ClassContext,MethodGen,CFG,Dataflow< ResourceValueFrame, ResourceValueAnalysis< Resource >>,Resource) in line 73
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   function mightCloseResource(ClassContext,Method,ResourceTrackerType) in line 141
      15 lines of code
      3 parameters
      1 conditional paths
   function prescreen(ClassContext,Method,boolean) in line 68
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function report() in line 190
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 76
      protection public
      44 lines of code
      1 parameters
      1 conditional paths
   function ResourceTrackingDetector(BugReporter) in line 63
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable bugAccumulator in line 60
   variable bugReporter in line 61
   variable DEBUG in line 56
   variable DEBUG_METHOD_NAME in line 58
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/SAXBugCollectionHandler.java
module edu::umd::cs::findbugs::SAXBugCollectionHandler
   inherits from org::xml::sax::helpers::DefaultHandler
   function addMatcher(Matcher) in line 329
      14 lines of code
      1 parameters
      5 conditional paths
      uses variable matcherStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function characters(char[],int,int) in line 627
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable textBuffer defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function createSourceLineAnnotation(String,Attributes) in line 533
      25 lines of code
      2 parameters
      3 conditional paths
      uses function getRequiredAttribute(Attributes,String,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function getOptionalAttribute(Attributes,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable UNKNOWN_SOURCE_FILE defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function discardedElement(String) in line 113
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function endElement(String,String,String) in line 561
      protection public
      64 lines of code
      3 parameters
      26 conditional paths
      uses function discardedElement(String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable nestingOfIgnoredElements defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable elementStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function isTopLevelFilter(String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable DEBUG defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable matcherStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable BUG_COLLECTION defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable bugCollection defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::BugCollection
      uses variable bugInstance defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function isDead() defined in edu::umd::cs::findbugs::BugInstance
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function addBug(BugInstance) defined in edu::umd::cs::findbugs::ProjectStats
      uses variable PROJECT defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable project defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function addFile(String) defined in edu::umd::cs::findbugs::Project
      uses function getTextContents() defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
      uses function addAuxClasspathEntry(String) defined in edu::umd::cs::findbugs::Project
      uses function setAnnotationText(String,@CheckForNull BugCollection) defined in edu::umd::cs::findbugs::BugInstance
      uses variable ERRORS_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ANALYSIS_ERROR_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable analysisError defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setMessage(String) defined in edu::umd::cs::findbugs::AnalysisError
      uses function addError(String) defined in edu::umd::cs::findbugs::BugCollection
      uses variable ERROR_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable stackTrace defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setStackTrace(String[]) defined in edu::umd::cs::findbugs::AnalysisError
      uses variable MISSING_CLASS_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function addMissingClass(String) defined in edu::umd::cs::findbugs::BugCollection
      uses variable ERROR_MESSAGE_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ERROR_EXCEPTION_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function setExceptionMessage(String) defined in edu::umd::cs::findbugs::AnalysisError
      uses variable ERROR_STACK_TRACE_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function setClassFeatureSet(ClassFeatureSet) defined in edu::umd::cs::findbugs::BugCollection
      uses variable classFeatureSet defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function extractHash(String,Attributes) in line 515
      11 lines of code
      2 parameters
      2 conditional paths
      uses function getRequiredAttribute(Attributes,String,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function getOptionalAttribute(Attributes,String) in line 67
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function memoized(String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function getRequiredAttribute(Attributes,String,String) in line 631
      7 lines of code
      3 parameters
      2 conditional paths
      uses function memoized(String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function getTextContents() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function memoized(String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable textBuffer defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function isTopLevelFilter(String) in line 325
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable FIND_BUGS_FILTER defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function memoized(String) in line 122
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable cache defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function parseBugInstanceContents(String,Attributes) in line 410
      86 lines of code
      2 parameters
      22 conditional paths
      uses function getRequiredAttribute(Attributes,String,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable bugAnnotationWithSourceLines defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function getOptionalAttribute(Attributes,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setTypeParameters(String) defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function createSourceLineAnnotation(String,Attributes) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function isSynthetic() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable bugInstance defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setProperty(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function setUserDesignationKey(String,@CheckForNull BugCollection) defined in edu::umd::cs::findbugs::BugInstance
      uses function setUser(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function setUserAnnotationTimestamp(long) defined in edu::umd::cs::findbugs::BugInstance
      uses function setDescription(String) defined in edu::umd::cs::findbugs::BugAnnotation
      uses function setAnnotationRole(Attributes,BugAnnotation) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function parseLong(String,long) in line 497
      9 lines of code
      2 parameters
      2 conditional paths
   function parseMatcher(String,Attributes) in line 353
      55 lines of code
      2 parameters
      19 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable elementStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable matcherStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function getOptionalAttribute(Attributes,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function addMatcher(Matcher) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function getRequiredAttribute(Attributes,String,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function pushCompoundMatcherAsChild(CompoundMatcher) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function pushCompoundMatcher(CompoundMatcher) in line 347
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable matcherStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function pushCompoundMatcherAsChild(CompoundMatcher) in line 343
      4 lines of code
      1 parameters
      1 conditional paths
      uses function addMatcher(Matcher) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function pushCompoundMatcher(CompoundMatcher) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function setAnnotationRole(Attributes,BugAnnotation) in line 527
      5 lines of code
      2 parameters
      2 conditional paths
      uses function getOptionalAttribute(Attributes,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setDescription(String) defined in edu::umd::cs::findbugs::BugAnnotation
   function startElement(String,String,String,Attributes) in line 133
      protection public
      191 lines of code
      4 parameters
      45 conditional paths
      uses function discardedElement(String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable nestingOfIgnoredElements defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable elementStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable topLevelName defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable BUG_COLLECTION defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function getOptionalAttribute(Attributes,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable bugCollection defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function parseLong(String,long) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setSequenceNumber(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function setAnalysisTimestamp(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function setAnalysisVersion(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function isTopLevelFilter(String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable project defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable filter defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setSuppressionFilter(Filter) defined in edu::umd::cs::findbugs::Project
      uses variable matcherStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function pushCompoundMatcher(CompoundMatcher) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable PROJECT defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setProjectFileName(String) defined in edu::umd::cs::findbugs::Project
      uses function setProjectName(String) defined in edu::umd::cs::findbugs::Project
      uses function getRequiredAttribute(Attributes,String,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable bugInstance defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setFirstVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses function setLastVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses function isDead() defined in edu::umd::cs::findbugs::BugInstance
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function setIntroducedByChangeOfExistingClass(boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function setRemovedByChangeOfPersistingClass(boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function setOldInstanceHash(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function setReferencedClasses(int) defined in edu::umd::cs::findbugs::ProjectStats
      uses function setVMVersion(String) defined in edu::umd::cs::findbugs::ProjectStats
      uses function setTimestamp(String) defined in edu::umd::cs::findbugs::ProjectStats
      uses function parseBugInstanceContents(String,Attributes) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable bugAnnotationWithSourceLines defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setSourceLines(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function createSourceLineAnnotation(String,Attributes) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable ERRORS_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ANALYSIS_ERROR_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ERROR_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable analysisError defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable stackTrace defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function putIfAbsentPackageStats(String,int,int) defined in edu::umd::cs::findbugs::ProjectStats
      uses function addClass(String,boolean,int) defined in edu::umd::cs::findbugs::ProjectStats
      uses function parseMatcher(String,Attributes) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable classFeatureSet defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setClassName(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable FEATURE_ELEMENT_NAME defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function addFeature(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable HISTORY_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::AppVersion
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::AppVersion
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::AppVersion
      uses function setCodeSize(int) defined in edu::umd::cs::findbugs::AppVersion
      uses function setNumClasses(int) defined in edu::umd::cs::findbugs::AppVersion
      uses function addAppVersion(AppVersion) defined in edu::umd::cs::findbugs::BugCollection
      uses variable textBuffer defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function SAXBugCollectionHandler(String,BugCollection,Project,File) in line 88
      11 lines of code
      4 parameters
      1 conditional paths
      uses variable topLevelName defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable bugCollection defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable project defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable base defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function SAXBugCollectionHandler(BugCollection,File) in line 99
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable BUG_COLLECTION defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable bugCollection defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses variable base defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function SAXBugCollectionHandler(Project,File) in line 102
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable PROJECT defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable project defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable base defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function SAXBugCollectionHandler(Filter,File) in line 105
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable FIND_BUGS_FILTER defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable base defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable filter defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function pushCompoundMatcher(CompoundMatcher) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   variable analysisError in line 80
   variable base in line 85
   variable BUG_COLLECTION in line 60
   variable bugAnnotationWithSourceLines in line 79
   variable bugCollection in line 71
   variable bugInstance in line 78
   variable cache in line 75
   variable classFeatureSet in line 82
   variable DEBUG in line 131
   variable elementStack in line 76
   variable filter in line 74
   variable FIND_BUGS_FILTER in line 58
   variable matcherStack in line 73
   variable nestingOfIgnoredElements in line 84
   variable PROJECT in line 59
   variable project in line 72
   variable stackTrace in line 83
   variable textBuffer in line 77
   variable topLevelName in line 86
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/SelfCalls.java
module edu::umd::cs::findbugs::SelfCalls
   function calledMethodIterator() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable calledMethodSet defined in edu::umd::cs::findbugs::SelfCalls
   function callSiteIterator() in line 120
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses variable callGraph defined in edu::umd::cs::findbugs::SelfCalls
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function execute() in line 67
      protection public
      23 lines of code
      0 parameters
      7 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::SelfCalls
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable DEBUG defined in edu::umd::cs::findbugs::SelfCalls
      uses variable callGraph defined in edu::umd::cs::findbugs::SelfCalls
      uses function addNode(Method) defined in edu::umd::cs::findbugs::CallGraph
      uses function getNumVertices() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function scan(CallGraphNode) defined in edu::umd::cs::findbugs::SelfCalls
      uses function getNodeForMethod(Method) defined in edu::umd::cs::findbugs::CallGraph
      uses function getNumEdges() defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function getCallGraph() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable callGraph defined in edu::umd::cs::findbugs::SelfCalls
   function hasSynchronization() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSelfCall(InvokeInstruction) in line 186
      38 lines of code
      1 parameters
      5 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::SelfCalls
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function wantCallsFor(Method) defined in edu::umd::cs::findbugs::SelfCalls
      uses variable DEBUG defined in edu::umd::cs::findbugs::SelfCalls
   function scan(CallGraphNode) in line 150
      32 lines of code
      1 parameters
      7 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::SelfCalls
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function hasSynchronization() defined in edu::umd::cs::findbugs::SelfCalls
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable next defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function isSelfCall(InvokeInstruction) defined in edu::umd::cs::findbugs::SelfCalls
      uses variable callGraph defined in edu::umd::cs::findbugs::SelfCalls
      uses function createEdge(CallGraphNode,CallGraphNode,CallSite) defined in edu::umd::cs::findbugs::CallGraph
      uses function getNodeForMethod(Method) defined in edu::umd::cs::findbugs::CallGraph
      uses variable calledMethodSet defined in edu::umd::cs::findbugs::SelfCalls
   function wantCallsFor(Method) in line 113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function SelfCalls(ClassContext) in line 57
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::SelfCalls
   variable calledMethodSet in line 49
   variable callGraph in line 48
   variable classContext in line 47
   variable DEBUG in line 45
   variable hasSynchronization in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/ShowHelp.java
module edu::umd::cs::findbugs::ShowHelp
   function main(String[]) in line 30
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses variable RELEASE defined in edu::umd::cs::findbugs::Version
      uses variable WEBSITE defined in edu::umd::cs::findbugs::Version
      uses function showGeneralOptions() defined in edu::umd::cs::findbugs::ShowHelp
      uses function printUsage(OutputStream) defined in edu::umd::cs::findbugs::config::CommandLine
   function showGeneralOptions() in line 43
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/SloppyBugComparator.java
module edu::umd::cs::findbugs::SloppyBugComparator
   inherits from edu::umd::cs::findbugs::WarningComparator
   function compare(BugInstance,BugInstance) in line 114
      protection public
      43 lines of code
      2 parameters
      9 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAbbrevFromBugType(String) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses variable DEBUG defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function compareClassesAllowingNull(ClassAnnotation,ClassAnnotation) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function compareMethodsAllowingNull(MethodAnnotation,MethodAnnotation) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses function compareFieldsAllowingNull(FieldAnnotation,FieldAnnotation) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
   function compareClassesAllowingNull(ClassAnnotation,ClassAnnotation) in line 64
      14 lines of code
      2 parameters
      4 conditional paths
      uses function compareNullElements(Object,Object) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function rewriteClassName(String) defined in edu::umd::cs::findbugs::model::ClassNameRewriter
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEBUG defined in edu::umd::cs::findbugs::SloppyBugComparator
   function compareFieldsAllowingNull(FieldAnnotation,FieldAnnotation) in line 90
      12 lines of code
      2 parameters
      3 conditional paths
      uses function compareNullElements(Object,Object) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function convertField(FieldAnnotation) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses variable DEBUG defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function compareTo(BugAnnotation) defined in edu::umd::cs::findbugs::FieldAnnotation
   function compareMethodsAllowingNull(MethodAnnotation,MethodAnnotation) in line 79
      10 lines of code
      2 parameters
      2 conditional paths
      uses function compareNullElements(Object,Object) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function convertMethod(MethodAnnotation) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function compareTo(BugAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
   function compareNullElements(Object,Object) in line 50
      6 lines of code
      2 parameters
      2 conditional paths
   function convertField(FieldAnnotation) in line 107
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::SloppyBugComparator
   function convertMethod(MethodAnnotation) in line 103
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::SloppyBugComparator
   function getAbbrevFromBugType(String) in line 162
      4 lines of code
      1 parameters
      1 conditional paths
   function setClassNameRewriter(ClassNameRewriter) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::SloppyBugComparator
   function SloppyBugComparator() in line 43
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable classNameRewriter in line 38
   variable DEBUG in line 34
   variable serialVersionUID in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/SortedBugCollection.java
module edu::umd::cs::findbugs::SortedBugCollection
   inherits from edu::umd::cs::findbugs::BugCollection
   function add(BugInstance) in line 189
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function add(BugInstance,boolean) in line 877
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable preciseHashOccurrenceNumbersAvailable defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setFirstVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses variable sequence defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function addAll(Collection< BugInstance >) in line 162
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
   function addAll(Collection< BugInstance >,boolean) in line 175
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
   function addAppVersion(AppVersion) in line 1060
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable appVersionList defined in edu::umd::cs::findbugs::SortedBugCollection
   function addError(String) in line 198
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function addError(String,Throwable) in line 905
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses function addMissingClass(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses variable errorList defined in edu::umd::cs::findbugs::SortedBugCollection
   function addError(AnalysisError) in line 925
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable errorList defined in edu::umd::cs::findbugs::SortedBugCollection
   function addMissingClass(String) in line 929
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable missingClassSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function appVersionIterator() in line 1052
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable appVersionList defined in edu::umd::cs::findbugs::SortedBugCollection
   function checkInputStream(InputStream) in line 704
      34 lines of code
      1 parameters
      7 conditional paths
   function classFeatureSetIterator() in line 1130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classFeatureSetMap defined in edu::umd::cs::findbugs::SortedBugCollection
   function clearAppVersions() in line 1068
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable appVersionList defined in edu::umd::cs::findbugs::SortedBugCollection
   function clearBugInstances() in line 1022
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function invalidateHashes() defined in edu::umd::cs::findbugs::SortedBugCollection
   function clearClassFeatures() in line 1137
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classFeatureSetMap defined in edu::umd::cs::findbugs::SortedBugCollection
   function clearMissingClasses() in line 1028
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable missingClassSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function cloneAll(Collection< BugInstance >,Collection< BugInstance >) in line 746
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
   function computeBugHashes() in line 402
      protection public
      37 lines of code
      0 parameters
      9 conditional paths
      uses variable preciseHashOccurrenceNumbersAvailable defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function invalidateHashes() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
   function contains(BugInstance) in line 946
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function createEmptyCollectionWithMetadata() in line 1076
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
      uses function SortedBugCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable projectStats defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function clone() defined in edu::umd::cs::findbugs::ProjectStats
      uses variable comparator defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function duplicate() defined in edu::umd::cs::findbugs::Project
      uses variable errorList defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable missingClassSet defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable summaryHTML defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable classFeatureSetMap defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable sequence defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable timestamp defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable releaseName defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable appVersionList defined in edu::umd::cs::findbugs::SortedBugCollection
   function doReadXML(@WillClose InputStream,File) in line 266
      38 lines of code
      2 parameters
      4 conditional paths
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProfiler() defined in edu::umd::cs::findbugs::ProjectStats
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function checkInputStream(InputStream) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function getCloud() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function bugsPopulated() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function setModified(boolean) defined in edu::umd::cs::findbugs::Project
   function duplicate() in line 999
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
      uses function SortedBugCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable projectStats defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function clone() defined in edu::umd::cs::findbugs::ProjectStats
      uses variable comparator defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function duplicate() defined in edu::umd::cs::findbugs::Project
      uses function cloneAll(Collection< BugInstance >,Collection< BugInstance >) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable errorList defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable missingClassSet defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable summaryHTML defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable classFeatureSetMap defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable sequence defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable timestamp defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable releaseName defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable appVersionList defined in edu::umd::cs::findbugs::SortedBugCollection
   function emitErrors(XMLOutput) in line 646
      55 lines of code
      1 parameters
      8 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable errorList defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable missingClassSet defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable ERRORS_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function errorIterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable ERROR_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ERROR_MESSAGE_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function getMessage() defined in edu::umd::cs::findbugs::AnalysisError
      uses function getExceptionMessage() defined in edu::umd::cs::findbugs::AnalysisError
      uses variable ERROR_EXCEPTION_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function getStackTrace() defined in edu::umd::cs::findbugs::AnalysisError
      uses variable ERROR_STACK_TRACE_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function getNestedExceptionMessage() defined in edu::umd::cs::findbugs::AnalysisError
      uses function getNestedStackTrace() defined in edu::umd::cs::findbugs::AnalysisError
      uses variable MISSING_CLASS_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function missingClassIterator() defined in edu::umd::cs::findbugs::SortedBugCollection
   function errorIterator() in line 938
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable errorList defined in edu::umd::cs::findbugs::SortedBugCollection
   function findBug(String,String,int) in line 1169
      protection public
      7 lines of code
      3 parameters
      3 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function getAnalysisTimestamp() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAnalysisVersion() in line 1184
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAppVersionFromSequenceNumber(long) in line 1158
      protection public
      7 lines of code
      1 parameters
      4 conditional paths
      uses variable appVersionList defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCurrentAppVersion() defined in edu::umd::cs::findbugs::SortedBugCollection
   function getClassFeatureSet(String) in line 1114
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classFeatureSetMap defined in edu::umd::cs::findbugs::SortedBugCollection
   function getCloud() in line 126
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable userAnnotationPlugin defined in edu::umd::cs::findbugs::SortedBugCollection
   function getCollection() in line 900
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function getCurrentAppVersion() in line 205
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::AppVersion
      uses function getReleaseName() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::AppVersion
      uses function getTimestamp() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setNumClasses(int) defined in edu::umd::cs::findbugs::AppVersion
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setCodeSize(int) defined in edu::umd::cs::findbugs::AppVersion
   function getDataSource() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMatching(BugInstance) in line 950
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function equals(Object) defined in edu::umd::cs::findbugs::BugInstance
   function getProject() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getProjectStats() in line 975
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable projectStats defined in edu::umd::cs::findbugs::SortedBugCollection
   function getReleaseName() in line 1035
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable releaseName defined in edu::umd::cs::findbugs::SortedBugCollection
   function getSequenceNumber() in line 989
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::SortedBugCollection
   function getSummaryHTML() in line 958
      protection public
      16 lines of code
      0 parameters
      3 conditional paths
      uses variable summaryHTML defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function transformSummaryToHTML(Writer) defined in edu::umd::cs::findbugs::ProjectStats
   function getTimeFinishedLoading() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTimestamp() in line 1106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::SortedBugCollection
   function getTimeStartedLoading() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getWithMessages() in line 1151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable withMessages defined in edu::umd::cs::findbugs::SortedBugCollection
   function invalidateHashes() in line 888
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable preciseHashOccurrenceNumbersAvailable defined in edu::umd::cs::findbugs::SortedBugCollection
   function isApplySuppressions() in line 138
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable applySuppressions defined in edu::umd::cs::findbugs::SortedBugCollection
   function iterator() in line 896
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function lookupFromUniqueId(String) in line 983
      protection public
      5 lines of code
      1 parameters
      3 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function missingClassIterator() in line 942
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable missingClassSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function progessMonitoredInputStream(File,String) in line 1189
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function wrapGzip(InputStream,Object) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function progressMonitoredInputStream(InputStream,int,String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function progessMonitoredInputStream(URLConnection,String) in line 1197
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function wrapGzip(InputStream,Object) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function progressMonitoredInputStream(InputStream,int,String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function progressMonitoredInputStream(InputStream,int,String) in line 1204
      protection public
      8 lines of code
      3 parameters
      3 conditional paths
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::Project
      uses function getProgressMonitorInputStream(InputStream,int,String) defined in edu::umd::cs::findbugs::IGuiCallback
   function readXML(String) in line 219
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function readXML(File) in line 230
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function setCurrentWorkingDirectory(File) defined in edu::umd::cs::findbugs::Project
      uses function progessMonitoredInputStream(File,String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function readXML(URL) in line 237
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function progessMonitoredInputStream(File,String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function readXML(@WillClose InputStream,File) in line 251
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function doReadXML(@WillClose InputStream,File) defined in edu::umd::cs::findbugs::SortedBugCollection
   function readXML(@WillClose InputStream) in line 259
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function doReadXML(@WillClose InputStream,File) defined in edu::umd::cs::findbugs::SortedBugCollection
   function reinitializeCloud() in line 1235
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable userAnnotationPlugin defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCloud() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function bugsPopulated() defined in edu::umd::cs::findbugs::cloud::Cloud
   function remove(BugInstance) in line 891
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function invalidateHashes() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function setAnalysisTimestamp(long) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::SortedBugCollection
   function setAnalysisVersion(String) in line 1180
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setApplySuppressions(boolean) in line 142
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable applySuppressions defined in edu::umd::cs::findbugs::SortedBugCollection
   function setClassFeatureSet(ClassFeatureSet) in line 1122
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classFeatureSetMap defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getClassName() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function setMinimalXML(boolean) in line 1245
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable minimalXML defined in edu::umd::cs::findbugs::SortedBugCollection
   function setReleaseName(String) in line 1044
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable releaseName defined in edu::umd::cs::findbugs::SortedBugCollection
   function setRequestDatabaseCloud(boolean) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSequenceNumber(long) in line 993
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::SortedBugCollection
   function setTimestamp(long) in line 1098
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::SortedBugCollection
   function setWithMessages(boolean) in line 1144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable withMessages defined in edu::umd::cs::findbugs::SortedBugCollection
   function toDocument() in line 330
      protection public
      16 lines of code
      0 parameters
      2 conditional paths
      uses function writeXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function wrapGzip(InputStream,Object) in line 1213
      protection public
      19 lines of code
      2 parameters
      6 conditional paths
   function writeBugCategories(XMLOutput) in line 617
      28 lines of code
      1 parameters
      5 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getBugCategoryDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
   function writeBugCodes(XMLOutput) in line 585
      31 lines of code
      1 parameters
      6 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugCode(String) defined in edu::umd::cs::findbugs::I18N
      uses function getDescription() defined in edu::umd::cs::findbugs::BugCode
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getCWEid() defined in edu::umd::cs::findbugs::BugCode
   function writeBugPatterns(XMLOutput) in line 548
      36 lines of code
      1 parameters
      6 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getType() defined in edu::umd::cs::findbugs::BugPattern
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::I18N
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getCWEid() defined in edu::umd::cs::findbugs::BugPattern
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses function getDetailText() defined in edu::umd::cs::findbugs::BugPattern
   function writeEpilogue(XMLOutput) in line 495
      protection public
      52 lines of code
      1 parameters
      8 conditional paths
      uses variable withMessages defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeBugCategories(XMLOutput) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeBugPatterns(XMLOutput) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeBugCodes(XMLOutput) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable minimalXML defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function emitErrors(XMLOutput) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::ProjectStats
      uses function classFeatureSetIterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable HISTORY_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function appVersionIterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::AppVersion
      uses variable REPORT_SUMMARY_HTML defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getSummaryHTML() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable SUMMARY_HTML_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ROOT_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
   function writePrologue(XMLOutput) in line 368
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses variable ROOT_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getTimestamp() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getAnalysisTimestamp() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getReleaseName() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(File) defined in edu::umd::cs::findbugs::Project
   function writeXML(String) in line 310
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function writeXML(File) in line 320
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function writeXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function writeXML(@WillClose OutputStream) in line 353
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses variable withMessages defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function writeXML(@WillClose XMLOutput) in line 451
      protection public
      36 lines of code
      1 parameters
      12 conditional paths
      uses function writePrologue(XMLOutput) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable withMessages defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function computeBugHashes() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function computeFileStats(BugCollection) defined in edu::umd::cs::findbugs::ProjectStats
      uses function getSourceDirList() defined in edu::umd::cs::findbugs::Project
      uses variable minimalXML defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::ProjectStats
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable applySuppressions defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Filter
      uses function writeEpilogue(XMLOutput) defined in edu::umd::cs::findbugs::SortedBugCollection
   function SortedBugCollection(Project) in line 807
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::SortedBugCollection::MultiversionBugInstanceComparator
   function SortedBugCollection(File) in line 811
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function SortedBugCollection() in line 821
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SortedBugCollection(Comparator< BugInstance >) in line 829
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable comparator defined in edu::umd::cs::findbugs::SortedBugCollection
   function SortedBugCollection(ProjectStats) in line 839
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable projectStats defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable instance defined in edu::umd::cs::findbugs::SortedBugCollection::MultiversionBugInstanceComparator
   function SortedBugCollection(ProjectStats,Project) in line 843
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable projectStats defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable instance defined in edu::umd::cs::findbugs::SortedBugCollection::MultiversionBugInstanceComparator
   function SortedBugCollection(ProjectStats,Comparator< BugInstance >) in line 854
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable projectStats defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable comparator defined in edu::umd::cs::findbugs::SortedBugCollection
   function SortedBugCollection(ProjectStats,Comparator< BugInstance >,Project) in line 857
      protection public
      19 lines of code
      3 parameters
      2 conditional paths
      uses variable projectStats defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable comparator defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable errorList defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable missingClassSet defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable summaryHTML defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable classFeatureSetMap defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable sequence defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable appVersionList defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable releaseName defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable timestamp defined in edu::umd::cs::findbugs::SortedBugCollection
   variable applySuppressions in line 92
   variable appVersionList in line 789
   variable bugSet in line 782
   variable classFeatureSetMap in line 788
   variable comparator in line 781
   variable errorList in line 783
   variable minimalXML in line 91
   variable missingClassSet in line 784
   variable preciseHashOccurrenceNumbersAvailable in line 792
   variable projectStats in line 786
   variable releaseName in line 801
   variable REPORT_SUMMARY_HTML in line 145
   variable sequence in line 797
   variable summaryHTML in line 785
   variable timestamp in line 805
   variable userAnnotationPlugin in line 93
   variable withMessages in line 90
module edu::umd::cs::findbugs::SortedBugCollection::BugInstanceComparator
   inherits from java::util::Comparator
   function compare(BugInstance,BugInstance) in line 754
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function compareTo(BugInstance) defined in edu::umd::cs::findbugs::BugInstance
   function BugInstanceComparator() in line 753
      1 lines of code
      0 parameters
      1 conditional paths
   variable instance in line 764
      protection public
module edu::umd::cs::findbugs::SortedBugCollection::MultiversionBugInstanceComparator
   inherits from edu::umd::cs::findbugs::SortedBugCollection::BugInstanceComparator
   function compare(BugInstance,BugInstance) in line 769
      protection public
      10 lines of code
      2 parameters
      5 conditional paths
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
   variable instance in line 779
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/SortingBugReporter.java
module edu::umd::cs::findbugs::SortingBugReporter
   inherits from edu::umd::cs::findbugs::TextUIBugReporter
   function doReportBug(BugInstance) in line 39
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::SortingBugReporter
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function notifyObservers(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function finish() in line 44
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::SortingBugReporter
      uses function iterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function printBug(BugInstance) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
   function observeClass(ClassDescriptor) in line 33
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable bugCollection in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/SourceLineAnnotation.java
module edu::umd::cs::findbugs::SourceLineAnnotation
   inherits from edu::umd::cs::findbugs::BugAnnotation
   function accept(BugAnnotationVisitor) in line 632
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitSourceLineAnnotation(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function appendLines(StringBuilder) in line 661
      6 lines of code
      1 parameters
      2 conditional paths
      uses function isUnknown() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function appendLinesRaw(StringBuilder) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function appendLinesRaw(StringBuilder) in line 668
      13 lines of code
      1 parameters
      3 conditional paths
      uses function isUnknown() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function clearGenerateRelativeSource() in line 766
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function clone() in line 118
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function compareTo(BugAnnotation) in line 700
      protection public
      22 lines of code
      1 parameters
      7 conditional paths
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function createReallyUnknown(String) in line 159
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable UNKNOWN_SOURCE_FILE defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function createUnknown(String,String) in line 133
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function createUnknown(String) in line 145
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function createUnknown(String,String,int,int) in line 176
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function equals(Object) in line 731
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function forEntireMethod(String,String,LineNumberTable,int) in line 223
      protection public
      12 lines of code
      4 parameters
      2 conditional paths
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function forEntireMethod(JavaClass,@CheckForNull Method) in line 243
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function forEntireMethod(String,String,LineNumberTable,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function forEntireMethod(JavaClass,XMethod) in line 263
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function forEntireMethod(String,String,LineNumberTable,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function forFirstLineOfMethod(MethodDescriptor) in line 280
      protection public
      38 lines of code
      1 parameters
      7 conditional paths
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSource() defined in edu::umd::cs::findbugs::ba::XClass
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function format(String,ClassAnnotation) in line 636
      protection public
      24 lines of code
      2 parameters
      6 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function appendLines(StringBuilder) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function appendLinesRaw(StringBuilder) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable CANONICAL_PACKAGE_SEPARATOR defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromRawData(String,String,int,int,int,int) in line 475
      protection public
      6 lines of code
      6 parameters
      2 conditional paths
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromVisitedInstruction(BytecodeScanningDetector,int) in line 328
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function fromVisitedInstructionRange(BytecodeScanningDetector,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
   function fromVisitedInstruction(ClassContext,PreorderVisitor,int) in line 342
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function fromVisitedInstructionRange(BytecodeScanningDetector,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromVisitedInstruction(ClassContext,Method,Location) in line 354
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function fromVisitedInstruction(BytecodeScanningDetector,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function fromVisitedInstruction(ClassContext,Method,InstructionHandle) in line 366
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function fromVisitedInstruction(BytecodeScanningDetector,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromVisitedInstruction(MethodDescriptor,Location) in line 377
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function fromVisitedInstruction(BytecodeScanningDetector,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function fromVisitedInstruction(MethodDescriptor,int) in line 380
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function fromVisitedInstruction(BytecodeScanningDetector,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createReallyUnknown(String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function fromVisitedInstruction(ClassContext,Method,int) in line 399
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function fromVisitedInstruction(BytecodeScanningDetector,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function fromVisitedInstruction(JavaClass,Method,int) in line 411
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromVisitedInstruction(BytecodeScanningDetector) in line 489
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function fromVisitedInstruction(BytecodeScanningDetector,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function fromVisitedInstruction(ClassContext,MethodGen,String,@NonNull InstructionHandle) in line 503
      protection public
      13 lines of code
      4 parameters
      2 conditional paths
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromVisitedInstructionRange(BytecodeScanningDetector,int,int) in line 433
      protection public
      13 lines of code
      3 parameters
      2 conditional paths
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromVisitedInstructionRange(ClassContext,PreorderVisitor,int,int) in line 459
      protection public
      15 lines of code
      4 parameters
      3 conditional paths
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromVisitedInstructionRange(ClassContext,MethodGen,String,InstructionHandle,InstructionHandle) in line 526
      protection public
      13 lines of code
      5 parameters
      2 conditional paths
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromVisitedMethod(PreorderVisitor) in line 189
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function fromVisitedMethod(MethodGen,String) in line 205
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function forEntireMethod(String,String,LineNumberTable,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function generateRelativeSource(File,Project) in line 758
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
   function getClassName() in line 550
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getDescription() in line 682
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getEndBytecode() in line 621
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable endBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getEndLine() in line 607
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getLineNumberTable(PreorderVisitor) in line 540
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getPackageName() in line 589
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getSimpleClassName() in line 581
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getSourceFile() in line 557
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getSourcePath() in line 823
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable CANONICAL_PACKAGE_SEPARATOR defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getStartBytecode() in line 614
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable startBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getStartLine() in line 600
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function hashCode() in line 724
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function isSignificant() in line 847
      protection public
      3 lines of code
      0 parameters
      12 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getMethodLine(String,String,String) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function fallBackToClassfile() defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses function forEntireMethod(String,String,LineNumberTable,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function isSourceFileKnown() in line 564
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable UNKNOWN_SOURCE_FILE defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function isSynthetic() in line 842
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable synthetic defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function isUnknown() in line 628
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function setDescription(String) in line 686
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function setSourceFile(String) in line 573
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function setSynthetic(boolean) in line 835
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable synthetic defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function toString() in line 691
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function isUnknown() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable DEFAULT_ROLE_UNKNOWN_LINE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getAnnotationDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses function format(String,ClassAnnotation) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function toString(ClassAnnotation) in line 930
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function writeXML(XMLOutput) in line 752
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean,boolean) in line 771
      protection public
      50 lines of code
      3 parameters
      13 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourcePath() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getStartBytecode() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndBytecode() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function isSourceFileKnown() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFinder() defined in edu::umd::cs::findbugs::Project
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getFullFileName() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function getDescription() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable synthetic defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function toString() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) in line 103
      protection public
      12 lines of code
      6 parameters
      3 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
   variable CANONICAL_PACKAGE_SEPARATOR in line 79
      protection public
   variable className in line 82
   variable DEFAULT_ROLE in line 62
      protection public
   variable DEFAULT_ROLE_UNKNOWN_LINE in line 63
      protection public
   variable description in line 81
   variable DESCRIPTION_LAST_CHANGE in line 90
      protection public
   variable DESCRIPTION_LOOP_BOTTOM in line 91
      protection public
   variable ELEMENT_NAME in line 749
   variable endBytecode in line 87
   variable endLine in line 85
   variable ROLE_ANOTHER_INSTANCE in line 64
      protection public
   variable ROLE_CALLED_FROM_SUPERCLASS_AT in line 65
      protection public
   variable ROLE_FIELD_SET_TOO_LATE_AT in line 66
      protection public
   variable ROLE_GENERATED_AT in line 67
      protection public
   variable ROLE_OBLIGATION_CREATED in line 68
      protection public
   variable ROLE_OBLIGATION_CREATED_BY_WILLCLOSE_PARAMETER in line 69
      protection public
   variable ROLE_PATH_CONTINUES in line 70
      protection public
   variable serialVersionUID in line 60
   variable sourceFile in line 83
   variable startBytecode in line 86
   variable startLine in line 84
   variable synthetic in line 88
   variable UNKNOWN_SOURCE_FILE in line 77
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/StartTime.java
module edu::umd::cs::findbugs::StartTime
   variable START_TIME in line 32
      protection public
   variable VM_START_TIME in line 34
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/StatelessDetector.java
module edu::umd::cs::findbugs::StatelessDetector
   inherits from Cloneable
   function clone() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/StringAnnotation.java
module edu::umd::cs::findbugs::StringAnnotation
   inherits from edu::umd::cs::findbugs::BugAnnotation
   function accept(BugAnnotationVisitor) in line 83
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitStringAnnotation(StringAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function clone() in line 65
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function compareTo(BugAnnotation) in line 111
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
   function equals(Object) in line 105
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
   function format(String,ClassAnnotation) in line 87
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
   function fromXMLEscapedString(String) in line 60
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function StringAnnotation(String) defined in edu::umd::cs::findbugs::StringAnnotation
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
   function getDescription() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::StringAnnotation
   function getValue() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
   function hashCode() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
   function isSignificant() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setDescription(String) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::StringAnnotation
   function toString() in line 118
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getAnnotationDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses variable description defined in edu::umd::cs::findbugs::StringAnnotation
      uses function format(String,ClassAnnotation) defined in edu::umd::cs::findbugs::StringAnnotation
   function toString(ClassAnnotation) in line 149
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::StringAnnotation
   function writeXML(XMLOutput) in line 130
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean,boolean) in line 134
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::StringAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::StringAnnotation
   function StringAnnotation(String) in line 55
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
   variable DEFAULT_ROLE in line 37
      protection public
   variable description in line 46
   variable ELEMENT_NAME in line 128
   variable FORMAT_SPECIFIER_ROLE in line 43
      protection public
   variable FORMAT_STRING_ROLE in line 42
      protection public
   variable PARAMETER_NAME_ROLE in line 39
      protection public
   variable REMAINING_OBLIGATIONS_ROLE in line 41
      protection public
   variable serialVersionUID in line 35
   variable STRING_CONSTANT_ROLE in line 38
      protection public
   variable TYPE_QUALIFIER_ROLE in line 40
      protection public
   variable value in line 45
module edu::umd::cs::findbugs::StringAnnotation::QuotedStringMarker
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/SuppressionMatcher.java
module edu::umd::cs::findbugs::SuppressionMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function addPackageSuppressor(PackageWarningSuppressor) in line 38
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageWarningSuppressor
      uses variable suppressedPackageWarnings defined in edu::umd::cs::findbugs::SuppressionMatcher
   function addSuppressor(ClassWarningSuppressor) in line 49
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getClassAnnotation() defined in edu::umd::cs::findbugs::ClassWarningSuppressor
      uses function getTopLevelClass() defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable suppressedWarnings defined in edu::umd::cs::findbugs::SuppressionMatcher
   function count() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function match(BugInstance) in line 61
      protection public
      18 lines of code
      1 parameters
      7 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getTopLevelClass() defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable suppressedWarnings defined in edu::umd::cs::findbugs::SuppressionMatcher
      uses function count() defined in edu::umd::cs::findbugs::SuppressionMatcher
      uses variable suppressedPackageWarnings defined in edu::umd::cs::findbugs::SuppressionMatcher
   function writeXML(XMLOutput,boolean) in line 79
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable suppressedPackageWarnings in line 34
   variable suppressedWarnings in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/SuppressionMatcher.java
module edu::umd::cs::findbugs::gui2::SuppressionMatcher
   inherits from java::util::ArrayList
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function add(BugInstance) in line 43
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function match(BugInstance) in line 37
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 49
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/SwitchHandler.java
module edu::umd::cs::findbugs::SwitchHandler
   function enterSwitch(DismantleBytecode) in line 36
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSwitchOffsets() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDefaultSwitchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable switchOffsetStack defined in edu::umd::cs::findbugs::SwitchHandler
   function getDefaultOffset() in line 75
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable switchOffsetStack defined in edu::umd::cs::findbugs::SwitchHandler
      uses function getDefaultOffset() defined in edu::umd::cs::findbugs::SwitchHandler::SwitchDetails
   function getNextSwitchOffset(DismantleBytecode) in line 57
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable switchOffsetStack defined in edu::umd::cs::findbugs::SwitchHandler
      uses function getNextSwitchOffset(int) defined in edu::umd::cs::findbugs::SwitchHandler::SwitchDetails
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDefaultOffset() defined in edu::umd::cs::findbugs::SwitchHandler::SwitchDetails
   function isOnSwitchOffset(DismantleBytecode) in line 49
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDefaultOffset() defined in edu::umd::cs::findbugs::SwitchHandler
      uses function getNextSwitchOffset(DismantleBytecode) defined in edu::umd::cs::findbugs::SwitchHandler
   function SwitchHandler() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable switchOffsetStack defined in edu::umd::cs::findbugs::SwitchHandler
   variable switchOffsetStack in line 30
module edu::umd::cs::findbugs::SwitchHandler::SwitchDetails
   function getDefaultOffset() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNextSwitchOffset(int) in line 115
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function SwitchDetails(int,int[],int) in line 91
      protection public
      23 lines of code
      3 parameters
      5 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/SystemProperties.java
module edu::umd::cs::findbugs::SystemProperties
   function getBoolean(String) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBoolean(String,boolean) in line 112
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function getProperty(String) defined in edu::umd::cs::findbugs::SystemProperties
      uses function toBoolean(String) defined in edu::umd::cs::findbugs::SystemProperties
   function getInt(String,int) in line 142
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses function getProperty(String) defined in edu::umd::cs::findbugs::SystemProperties
   function getInteger(String,int) in line 134
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getInt(String,int) defined in edu::umd::cs::findbugs::SystemProperties
   function getOSDependentProperty(String) in line 157
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable OS_NAME defined in edu::umd::cs::findbugs::SystemProperties
      uses function getProperty(String) defined in edu::umd::cs::findbugs::SystemProperties
   function getProperty(String) in line 169
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable properties defined in edu::umd::cs::findbugs::SystemProperties
   function getProperty(String,String) in line 186
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable properties defined in edu::umd::cs::findbugs::SystemProperties
   function loadPropertiesFromConfigFile() in line 68
      14 lines of code
      0 parameters
      3 conditional paths
      uses function loadPropertiesFromURL(URL) defined in edu::umd::cs::findbugs::SystemProperties
   function loadPropertiesFromURL(URL) in line 88
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable properties defined in edu::umd::cs::findbugs::SystemProperties
   function rewriteURLAccordingToProperties(String) in line 212
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable URL_REWRITE_PATTERN defined in edu::umd::cs::findbugs::SystemProperties
      uses variable URL_REWRITE_FORMAT defined in edu::umd::cs::findbugs::SystemProperties
   function toBoolean(String) in line 123
      3 lines of code
      1 parameters
      1 conditional paths
   variable ASSERTIONS_ENABLED in line 40
      protection public
   variable OS_NAME in line 41
   variable properties in line 39
   variable URL_REWRITE_FORMAT in line 198
   variable URL_REWRITE_PATTERN in line 200
   variable URL_REWRITE_PATTERN_STRING in line 197
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/TestDesktopIntegration.java
module edu::umd::cs::findbugs::TestDesktopIntegration
   inherits from javax::swing::JPanel
   function createAndShowGUI() in line 92
      13 lines of code
      0 parameters
      1 conditional paths
      uses function TestDesktopIntegration() defined in edu::umd::cs::findbugs::TestDesktopIntegration
   function main(String) in line 81
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function createAndShowGUI() defined in edu::umd::cs::findbugs::TestDesktopIntegration
   function TestDesktopIntegration() in line 146
      protection public
      153 lines of code
      0 parameters
      20 conditional paths
      uses variable launchFirefox defined in edu::umd::cs::findbugs::util::LaunchBrowser
      uses variable propertyNames defined in edu::umd::cs::findbugs::TestDesktopIntegration
   variable propertyNames in line 52
module edu::umd::cs::findbugs::TestDesktopIntegration::ConsoleWriter
   inherits from java::io::Writer
   function close() in line 113
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function flush() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function write(char[],int,int) in line 133
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/TextUIBugReporter.java
module edu::umd::cs::findbugs::TextUIBugReporter
   inherits from edu::umd::cs::findbugs::AbstractBugReporter
   abstract class
   function checkBugInstance(BugInstance) in line 222
      12 lines of code
      1 parameters
      4 conditional paths
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function getSourceLines() defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function emitLine(String) in line 179
      4 lines of code
      1 parameters
      1 conditional paths
   function getRealBugReporter() in line 212
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUseLongBugCodes() in line 185
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable useLongBugCodes defined in edu::umd::cs::findbugs::TextUIBugReporter
   function isApplySuppressions() in line 236
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable applySuppressions defined in edu::umd::cs::findbugs::TextUIBugReporter
   function printBug(BugInstance) in line 77
      55 lines of code
      1 parameters
      13 conditional paths
      uses variable showRank defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugCategory(String) defined in edu::umd::cs::findbugs::I18N
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugCategory
      uses variable useLongBugCodes defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses variable reportUserDesignations defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getUserDesignationKey() defined in edu::umd::cs::findbugs::BugInstance
      uses variable reportHistory defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
      uses function toString() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function reportAnalysisError(AnalysisError) in line 144
      protection public
      18 lines of code
      1 parameters
      6 conditional paths
      uses variable analysisErrors defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function emitLine(String) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getMessage() defined in edu::umd::cs::findbugs::AnalysisError
      uses function getExceptionMessage() defined in edu::umd::cs::findbugs::AnalysisError
      uses variable reportStackTrace defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getStackTrace() defined in edu::umd::cs::findbugs::AnalysisError
   function reportMissingClass(String) in line 164
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable missingClasses defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function emitLine(String) defined in edu::umd::cs::findbugs::TextUIBugReporter
   function reportQueuedErrors() in line 138
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisErrors defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable missingClasses defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setApplySuppressions(boolean) in line 200
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable applySuppressions defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setOutputStream(@WillClose PrintStream) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setReportHistory(boolean) in line 189
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reportHistory defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setReportStackTrace(boolean) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reportStackTrace defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setReportUserDesignations(boolean) in line 204
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reportUserDesignations defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setShowRank(boolean) in line 196
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable showRank defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setUseLongBugCodes(boolean) in line 193
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable useLongBugCodes defined in edu::umd::cs::findbugs::TextUIBugReporter
   function TextUIBugReporter() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reportStackTrace defined in edu::umd::cs::findbugs::TextUIBugReporter
   variable analysisErrors in line 133
   variable applySuppressions in line 44
   variable missingClasses in line 134
   variable outputStream in line 48
   variable reportHistory in line 42
   variable reportStackTrace in line 39
   variable reportUserDesignations in line 43
   variable showRank in line 41
   variable useLongBugCodes in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/TextUICommandLine.java
module edu::umd::cs::findbugs::TextUICommandLine
   inherits from edu::umd::cs::findbugs::FindBugsCommandLine
   function applySuppression() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function choose(String,String,Chooser) in line 431
      11 lines of code
      3 parameters
      3 conditional paths
      uses function choose(boolean,String) defined in edu::umd::cs::findbugs::TextUICommandLine::Chooser
   function configureEngine(IFindBugsEngine) in line 443
      protection public
      106 lines of code
      1 parameters
      20 conditional paths
      uses function ensureLoaded() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable bugReporterType defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable PRINTING_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable SORTING_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable XML_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function setAddMessages(boolean) defined in edu::umd::cs::findbugs::XMLBugReporter
      uses variable xmlWithMessages defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function setMinimalXML(boolean) defined in edu::umd::cs::findbugs::XMLBugReporter
      uses variable xmlMinimal defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable EMACS_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable HTML_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable stylesheet defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable XDOCS_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function quiet() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function setErrorVerbosity(int) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable SILENT defined in edu::umd::cs::findbugs::BugReporter
      uses function setPriorityThreshold(int) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable priorityThreshold defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function setRankThreshold(int) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable rankThreshold defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function setUseLongBugCodes(boolean) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable useLongBugCodes defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function setOutputStream(@WillClose PrintStream) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable bugCategorySet defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable showProgress defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function getUserPreferences() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable excludeBugFile defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable includeFilterFile defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable excludeFilterFile defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable classScreener defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable relaxedReportingMode defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable xmlWithAbridgedMessages defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable trainingOutputDir defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable trainingInputDir defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable sourceInfoFile defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable settingList defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses variable releaseName defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable projectName defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable scanNestedArchives defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function noClassOk() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function applySuppression() defined in edu::umd::cs::findbugs::TextUICommandLine
   function getProject() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
   function getUserPreferences() in line 571
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable userPreferences defined in edu::umd::cs::findbugs::TextUICommandLine
   function getXargs() in line 173
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable xargs defined in edu::umd::cs::findbugs::TextUICommandLine
   function handleOption(String,String) in line 193
      85 lines of code
      2 parameters
      29 conditional paths
      uses function pluginIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses function isEnabled() defined in edu::umd::cs::findbugs::Plugin
      uses function getShortDescription() defined in edu::umd::cs::findbugs::Plugin
      uses function getProvider() defined in edu::umd::cs::findbugs::Plugin
      uses function getWebsite() defined in edu::umd::cs::findbugs::Plugin
      uses variable priorityThreshold defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable useLongBugCodes defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable showProgress defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::Project
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporterType defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable SORTING_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable XML_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable xmlWithMessages defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable xmlWithAbridgedMessages defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable xmlMinimal defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable EMACS_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable relaxedReportingMode defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable trainingOutputDir defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable trainingInputDir defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable HTML_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable stylesheet defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable XDOCS_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function applySuppression() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function quiet() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable scanNestedArchives defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function setExitCode() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function noClassOk() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable xargs defined in edu::umd::cs::findbugs::TextUICommandLine
   function handleOptionWithArgument(String,String) in line 281
      142 lines of code
      2 parameters
      37 conditional paths
      uses variable bugReporterType defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable PRINTING_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable XML_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable sourceInfoFile defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function getUserPreferences() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function enableAllDetectors(boolean) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function getFactory(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function enableDetector(DetectorFactory,boolean) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function choose(boolean,String) defined in edu::umd::cs::findbugs::TextUICommandLine::Chooser
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getPluginById(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function setEnabled(boolean) defined in edu::umd::cs::findbugs::Plugin
      uses function setPriorityAdjustment(int) defined in edu::umd::cs::findbugs::DetectorFactory
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::I18N
      uses function adjustPriority(int) defined in edu::umd::cs::findbugs::BugPattern
      uses variable classScreener defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function addAllowedPrefix(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses function addAllowedPackage(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses function addAllowedClass(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses variable excludeFilterFile defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable excludeBugFile defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable includeFilterFile defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function addAuxClasspathEntry(String) defined in edu::umd::cs::findbugs::Project
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
   function handleXArgs() in line 557
      protection public
      10 lines of code
      0 parameters
      4 conditional paths
      uses function getXargs() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function addFile(String) defined in edu::umd::cs::findbugs::Project
   function noClassOk() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function quiet() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setExitCode() in line 176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function TextUICommandLine() in line 107
      protection public
      61 lines of code
      0 parameters
      1 conditional paths
      uses function addSwitch(String,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function startOptionGroup(String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function addOption(String,String,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function addSwitchWithOptionalExtraPart(String,String,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function makeOptionUnlisted(String) defined in edu::umd::cs::findbugs::config::CommandLine
   variable applySuppression in line 102
   variable bugCategorySet in line 93
   variable bugReporterType in line 74
   variable classScreener in line 84
   variable EMACS_REPORTER in line 70
   variable excludeBugFile in line 87
   variable excludeFilterFile in line 86
   variable HTML_REPORTER in line 71
   variable includeFilterFile in line 85
   variable noClassOk in line 89
   variable outputStream in line 92
   variable PRINTING_REPORTER in line 67
   variable priorityThreshold in line 90
   variable projectName in line 98
   variable quiet in line 83
   variable rankThreshold in line 91
   variable relaxedReportingMode in line 75
   variable releaseName in line 97
   variable scanNestedArchives in line 101
   variable setExitCode in line 88
   variable showProgress in line 77
   variable SORTING_REPORTER in line 68
   variable sourceInfoFile in line 99
   variable stylesheet in line 82
   variable trainingInputDir in line 96
   variable trainingOutputDir in line 95
   variable useLongBugCodes in line 76
   variable userPreferences in line 94
   variable xargs in line 100
   variable XDOCS_REPORTER in line 72
   variable XML_REPORTER in line 69
   variable xmlMinimal in line 78
   variable xmlWithAbridgedMessages in line 81
   variable xmlWithMessages in line 80
module edu::umd::cs::findbugs::TextUICommandLine::Chooser
   function choose(boolean,String) in line 64
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/TextUIProgressCallback.java
module edu::umd::cs::findbugs::TextUIProgressCallback
   inherits from edu::umd::cs::findbugs::FindBugsProgress
   function analyzingClasses(int) in line 85
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable pass defined in edu::umd::cs::findbugs::TextUIProgressCallback
      uses variable goal defined in edu::umd::cs::findbugs::TextUIProgressCallback
      uses function printMessage(String) defined in edu::umd::cs::findbugs::TextUIProgressCallback
   function finishArchive() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function scanningArchives(int) defined in edu::umd::cs::findbugs::TextUIProgressCallback
      uses variable count defined in edu::umd::cs::findbugs::TextUIProgressCallback
   function finishClass() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function analyzingClasses(int) defined in edu::umd::cs::findbugs::TextUIProgressCallback
      uses variable count defined in edu::umd::cs::findbugs::TextUIProgressCallback
   function finishPerClassAnalysis() in line 72
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::TextUIProgressCallback
      uses variable pass defined in edu::umd::cs::findbugs::TextUIProgressCallback
      uses variable numPasses defined in edu::umd::cs::findbugs::TextUIProgressCallback
   function predictPassCount(int[]) in line 52
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::TextUIProgressCallback
      uses function printMessage(String) defined in edu::umd::cs::findbugs::TextUIProgressCallback
   function printMessage(String) in line 90
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::TextUIProgressCallback
   function reportNumberOfArchives(int) in line 42
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function scanningArchives(int) defined in edu::umd::cs::findbugs::TextUIProgressCallback
   function scanningArchives(int) in line 80
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable goal defined in edu::umd::cs::findbugs::TextUIProgressCallback
      uses function printMessage(String) defined in edu::umd::cs::findbugs::TextUIProgressCallback
   function startAnalysis(int) in line 59
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable pass defined in edu::umd::cs::findbugs::TextUIProgressCallback
      uses variable out defined in edu::umd::cs::findbugs::TextUIProgressCallback
      uses function analyzingClasses(int) defined in edu::umd::cs::findbugs::TextUIProgressCallback
   function startArchive(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function TextUIProgressCallback(PrintStream) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::TextUIProgressCallback
   variable count in line 34
   variable goal in line 33
   variable numPasses in line 35
   variable out in line 32
   variable pass in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/Token.java
module edu::umd::cs::findbugs::Token
   function getKind() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::Token
   function getLexeme() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lexeme defined in edu::umd::cs::findbugs::Token
   function Token(int,String) in line 68
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::Token
      uses variable lexeme defined in edu::umd::cs::findbugs::Token
   function Token(int) in line 79
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::Token
   variable COMMENT in line 57
      protection public
   variable EOF in line 32
      protection public
   variable EOL in line 37
      protection public
   variable kind in line 59
   variable lexeme in line 60
   variable SINGLE in line 52
      protection public
   variable STRING in line 47
      protection public
   variable WORD in line 42
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/Tokenizer.java
module edu::umd::cs::findbugs::Tokenizer
   function maybeComment() in line 148
      53 lines of code
      0 parameters
      15 conditional paths
      uses variable reader defined in edu::umd::cs::findbugs::Tokenizer
      uses variable COMMENT defined in edu::umd::cs::findbugs::Token
      uses variable SINGLE defined in edu::umd::cs::findbugs::Token
   function munchString(int) in line 119
      28 lines of code
      1 parameters
      7 conditional paths
      uses variable reader defined in edu::umd::cs::findbugs::Tokenizer
      uses variable STRING defined in edu::umd::cs::findbugs::Token
   function next() in line 89
      protection public
      18 lines of code
      0 parameters
      6 conditional paths
      uses function skipWhitespace() defined in edu::umd::cs::findbugs::Tokenizer
      uses variable reader defined in edu::umd::cs::findbugs::Tokenizer
      uses variable EOF defined in edu::umd::cs::findbugs::Token
      uses variable EOL defined in edu::umd::cs::findbugs::Token
      uses function munchString(int) defined in edu::umd::cs::findbugs::Tokenizer
      uses function maybeComment() defined in edu::umd::cs::findbugs::Tokenizer
      uses variable single defined in edu::umd::cs::findbugs::Tokenizer
      uses variable SINGLE defined in edu::umd::cs::findbugs::Token
      uses function parseWord() defined in edu::umd::cs::findbugs::Tokenizer
   function parseWord() in line 202
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable reader defined in edu::umd::cs::findbugs::Tokenizer
      uses variable whiteSpace defined in edu::umd::cs::findbugs::Tokenizer
      uses variable single defined in edu::umd::cs::findbugs::Tokenizer
      uses variable WORD defined in edu::umd::cs::findbugs::Token
   function skipWhitespace() in line 108
      10 lines of code
      0 parameters
      4 conditional paths
      uses variable reader defined in edu::umd::cs::findbugs::Tokenizer
      uses variable whiteSpace defined in edu::umd::cs::findbugs::Tokenizer
   function Tokenizer(Reader) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reader defined in edu::umd::cs::findbugs::Tokenizer
   variable reader in line 73
   variable single in line 45
   variable whiteSpace in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/TrainingDetector.java
module edu::umd::cs::findbugs::TrainingDetector
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/TypeAnnotation.java
module edu::umd::cs::findbugs::TypeAnnotation
   inherits from edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function accept(BugAnnotationVisitor) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitTypeAnnotation(TypeAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function compareTo(BugAnnotation) in line 144
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::TypeAnnotation
   function equals(Object) in line 138
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::TypeAnnotation
   function format(String,ClassAnnotation) in line 109
      protection public
      11 lines of code
      2 parameters
      4 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function parseNext() defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable typeParameters defined in edu::umd::cs::findbugs::TypeAnnotation
   function getDescription() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable roleDescription defined in edu::umd::cs::findbugs::TypeAnnotation
   function getTypeDescriptor() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::TypeAnnotation
   function hashCode() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::TypeAnnotation
   function isSignificant() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setDescription(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable roleDescription defined in edu::umd::cs::findbugs::TypeAnnotation
   function setTypeParameters(String) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable typeParameters defined in edu::umd::cs::findbugs::TypeAnnotation
   function toString() in line 152
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getAnnotationDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses variable roleDescription defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function format(String,ClassAnnotation) defined in edu::umd::cs::findbugs::TypeAnnotation
   function writeXML(XMLOutput) in line 164
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean,boolean) in line 168
      protection public
      13 lines of code
      3 parameters
      3 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable descriptor defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::TypeAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses variable typeParameters defined in edu::umd::cs::findbugs::TypeAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::TypeAnnotation
   function TypeAnnotation(String) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
   function TypeAnnotation(Type) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
   function TypeAnnotation(Type,String) in line 73
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable roleDescription defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function getTypeCategory() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses variable typeParameters defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function getGenericParametersAsString() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function TypeAnnotation(String,String) in line 82
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::TypeAnnotation
      uses variable roleDescription defined in edu::umd::cs::findbugs::TypeAnnotation
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable sourceFileName defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function lookupSourceFile(@NonNull @DottedClassName String) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable sourceLines defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses variable UNKNOWN_SOURCE_FILE defined in edu::umd::cs::findbugs::SourceLineAnnotation
   variable CLOSEIT_ROLE in line 47
      protection public
   variable DEFAULT_ROLE in line 44
      protection public
   variable descriptor in line 51
   variable ELEMENT_NAME in line 162
   variable EXPECTED_ROLE in line 45
      protection public
   variable FOUND_ROLE in line 46
      protection public
   variable roleDescription in line 52
   variable serialVersionUID in line 42
   variable typeParameters in line 53
   variable UNHASHABLE_ROLE in line 48
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/UseAnnotationDatabase.java
module edu::umd::cs::findbugs::UseAnnotationDatabase
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/AnyTypeMatcher.java
module edu::umd::cs::findbugs::util::AnyTypeMatcher
   inherits from edu::umd::cs::findbugs::util::TypeMatcher
   function matches(Type) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/Archive.java
module edu::umd::cs::findbugs::util::Archive
   function isArchiveFileName(String) in line 53
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable ARCHIVE_EXTENSION_SET defined in edu::umd::cs::findbugs::util::Archive
   variable ARCHIVE_EXTENSION_SET in line 36
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/Bag.java
module edu::umd::cs::findbugs::util::Bag
   function add(E) in line 41
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function add(E,int) in line 48
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function entrySet() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCount(E) in line 63
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function keySet() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Bag() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Bag(Map< E, Integer >) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/ClassName.java
module edu::umd::cs::findbugs::util::ClassName
   abstract class
   function extractClassName(String) in line 159
      protection public
      11 lines of code
      1 parameters
      5 conditional paths
   function extractPackageName(@DottedClassName String) in line 113
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function extractPackagePrefix(String,int) in line 172
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
   function extractSimpleName(@DottedClassName String) in line 118
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function fromFieldSignature(String) in line 46
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
   function fromSignature(String) in line 57
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
   function isAnonymous(String) in line 145
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function isValidClassName(String) in line 129
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function matchedPrefixes(String[],@DottedClassName String) in line 188
      protection public
      12 lines of code
      2 parameters
      4 conditional paths
   function toDottedClassName(@SlashedClassName(when=When.UNKNOWN) String) in line 98
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function toSignature(@SlashedClassName String) in line 38
      protection public
      6 lines of code
      1 parameters
      3 conditional paths
   function toSlashedClassName(@SlashedClassName(when=When.UNKNOWN) String) in line 82
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/ClassPathUtil.java
module edu::umd::cs::findbugs::util::ClassPathUtil
   function findCodeBaseInClassPath(@Nonnull String,String) in line 42
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
   function findCodeBaseInClassPath(Pattern,String) in line 68
      protection public
      17 lines of code
      2 parameters
      4 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/ContainsCamelCaseWordStringMatcher.java
module edu::umd::cs::findbugs::util::ContainsCamelCaseWordStringMatcher
   inherits from edu::umd::cs::findbugs::util::StringMatcher
   function matches(String) in line 49
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function split() defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifier
      uses variable expected defined in edu::umd::cs::findbugs::util::ContainsCamelCaseWordStringMatcher
   function toString() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable expected defined in edu::umd::cs::findbugs::util::ContainsCamelCaseWordStringMatcher
   function ContainsCamelCaseWordStringMatcher(String) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable expected defined in edu::umd::cs::findbugs::util::ContainsCamelCaseWordStringMatcher
   variable expected in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/DualKeyHashMap.java
module edu::umd::cs::findbugs::util::DualKeyHashMap
   function containsKey(K1,K2) in line 39
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function get(K1,K2) in line 34
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function get(K1) in line 44
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function keySet() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function put(K1,K2,V) in line 53
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/EditDistance.java
module edu::umd::cs::findbugs::util::EditDistance
   function distance(char,char) in line 31
      6 lines of code
      2 parameters
      3 conditional paths
   function editDistance(String,String) in line 45
      protection public
      25 lines of code
      2 parameters
      6 conditional paths
      uses function distance(char,char) defined in edu::umd::cs::findbugs::util::EditDistance
      uses function minimum(int,int,int) defined in edu::umd::cs::findbugs::util::EditDistance
   function editDistanceRatio(String,String) in line 38
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function distance(char,char) defined in edu::umd::cs::findbugs::util::EditDistance
      uses function editDistance(String,String) defined in edu::umd::cs::findbugs::util::EditDistance
   function minimum(int,int,int) in line 26
      4 lines of code
      3 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/ExactStringMatcher.java
module edu::umd::cs::findbugs::util::ExactStringMatcher
   inherits from edu::umd::cs::findbugs::util::StringMatcher
   function matches(String) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable expected defined in edu::umd::cs::findbugs::util::ExactStringMatcher
   function ExactStringMatcher(String) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable expected defined in edu::umd::cs::findbugs::util::ExactStringMatcher
   variable expected in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/FractionalMultiset.java
module edu::umd::cs::findbugs::util::FractionalMultiset
   function add(K,double) in line 52
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
   function clear() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function compareValues(Entry< E, Double >,Entry< E, Double >) in line 92
      9 lines of code
      2 parameters
      3 conditional paths
   function entriesInDecreasingOrder() in line 81
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function entriesInIncreasingOrder() in line 86
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function entrySet() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getValue(K) in line 59
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function numKeys() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function turnTotalIntoAverage(Multiset< K >) in line 66
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function getCount(K) defined in edu::umd::cs::findbugs::util::Multiset
   function FractionalMultiset() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FractionalMultiset(Map< K, Double >) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::util::FractionalMultiset::DecreasingOrderEntryComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(Entry< E, Double >,Entry< E, Double >) in line 103
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::util::FractionalMultiset::IncreasingOrderEntryComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(Entry< E, Double >,Entry< E, Double >) in line 109
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/HTML.java
module edu::umd::cs::findbugs::util::HTML
   function convertHtmlSnippetToText(String) in line 151
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function convertHtmlToText(Reader,Writer) defined in edu::umd::cs::findbugs::util::HTML
   function convertHtmlToText(Reader,Writer) in line 139
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses function HTMLtoPlainTextWriter2(Writer,HTMLDocument) defined in edu::umd::cs::findbugs::util::HTML::HTMLtoPlainTextWriter2
   function HTML() in line 136
      2 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::util::HTML::HTMLtoPlainTextWriter2
   inherits from javax::swing::text::html::HTMLWriter
   function decrIndent() in line 106
      2 lines of code
      0 parameters
      1 conditional paths
   function emptyTag(Element) in line 110
      4 lines of code
      1 parameters
      2 conditional paths
   function endTag(Element) in line 83
      17 lines of code
      1 parameters
      5 conditional paths
   function incrIndent() in line 102
      2 lines of code
      0 parameters
      1 conditional paths
   function startTag(Element) in line 61
      15 lines of code
      1 parameters
      5 conditional paths
   function text(Element) in line 116
      18 lines of code
      1 parameters
      5 conditional paths
   function writeEmbeddedTags(AttributeSet) in line 78
      3 lines of code
      1 parameters
      1 conditional paths
   function HTMLtoPlainTextWriter2(Writer,HTMLDocument) in line 54
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/LaunchBrowser.java
module edu::umd::cs::findbugs::util::LaunchBrowser
   function desktopFeasible() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable desktopObject defined in edu::umd::cs::findbugs::util::LaunchBrowser
      uses variable desktopBrowseMethod defined in edu::umd::cs::findbugs::util::LaunchBrowser
   function launchFirefox(URL) in line 146
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function showDocument(URL) in line 157
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses function showDocumentViaExec(URL) defined in edu::umd::cs::findbugs::util::LaunchBrowser
      uses function showDocumentViaDesktop(URL) defined in edu::umd::cs::findbugs::util::LaunchBrowser
      uses function showViaWebStart(URL) defined in edu::umd::cs::findbugs::util::LaunchBrowser
   function showDocumentViaDesktop(URL) in line 84
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses variable desktopObject defined in edu::umd::cs::findbugs::util::LaunchBrowser
      uses variable desktopBrowseMethod defined in edu::umd::cs::findbugs::util::LaunchBrowser
      uses function viaDesktop(URI) defined in edu::umd::cs::findbugs::util::LaunchBrowser
   function showDocumentViaExec(URL) in line 125
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses variable launchFirefox defined in edu::umd::cs::findbugs::util::LaunchBrowser
      uses variable launchViaExecFailed defined in edu::umd::cs::findbugs::util::LaunchBrowser
   function showViaWebStart(URL) in line 113
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable jnlpShowMethod defined in edu::umd::cs::findbugs::util::LaunchBrowser
      uses function viaWebStart(URL) defined in edu::umd::cs::findbugs::util::LaunchBrowser
   function viaDesktop(URI) in line 102
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable desktopBrowseMethod defined in edu::umd::cs::findbugs::util::LaunchBrowser
      uses variable desktopObject defined in edu::umd::cs::findbugs::util::LaunchBrowser
   function viaWebStart(URL) in line 108
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable jnlpShowMethod defined in edu::umd::cs::findbugs::util::LaunchBrowser
      uses variable jnlpShowObject defined in edu::umd::cs::findbugs::util::LaunchBrowser
   function webstartFeasible() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable jnlpShowMethod defined in edu::umd::cs::findbugs::util::LaunchBrowser
      uses variable jnlpShowObject defined in edu::umd::cs::findbugs::util::LaunchBrowser
   variable desktopBrowseMethod in line 44
   variable desktopObject in line 43
   variable jnlpShowMethod in line 38
   variable jnlpShowObject in line 39
   variable launchFirefox in line 41
      protection public
   variable launchViaExecFailed in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/MapCache.java
module edu::umd::cs::findbugs::util::MapCache
   inherits from java::util::LinkedHashMap
   function removeEldestEntry(Map.Entry< K, V >) in line 49
      6 lines of code
      1 parameters
      1 conditional paths
   function MapCache(int) in line 41
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   variable serialVersionUID in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/MergeMap.java
module edu::umd::cs::findbugs::util::MergeMap
   abstract class
   function containsKey(K) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function entrySet() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function get(K) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function main(String) in line 88
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses function put(K,V) defined in edu::umd::cs::findbugs::util::MergeMap
      uses function entrySet() defined in edu::umd::cs::findbugs::util::MergeMap
   function mergeValues(V,V) in line 54
      1 lines of code
      2 parameters
      1 conditional paths
   function put(K,V) in line 64
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses function mergeValues(V,V) defined in edu::umd::cs::findbugs::util::MergeMap::MaxMap
   function MergeMap() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function MergeMap(Map< K, V >) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::util::MergeMap::MinMap
   inherits from edu::umd::cs::findbugs::util::MergeMap
   function mergeValues(V,V) in line 33
      6 lines of code
      2 parameters
      2 conditional paths
module edu::umd::cs::findbugs::util::MergeMap::MaxMap
   inherits from edu::umd::cs::findbugs::util::MergeMap
   function mergeValues(V,V) in line 44
      6 lines of code
      2 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/MultiMap.java
module edu::umd::cs::findbugs::util::MultiMap
   function add(K,V) in line 51
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function clear() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function get(K) in line 69
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function keySet() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeCollection() in line 35
      9 lines of code
      0 parameters
      1 conditional paths
   function remove(K,V) in line 59
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function removeAll(K) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function MultiMap(Class<?extends Collection >) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/Multiset.java
module edu::umd::cs::findbugs::util::Multiset
   function add(K) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function add(K,int) in line 55
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
   function addAll(Iterable< K >) in line 62
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function add(K) defined in edu::umd::cs::findbugs::util::Multiset
   function clear() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function entriesInDecreasingFrequency() in line 77
      protection public
      5 lines of code
      0 parameters
      3 conditional paths
   function entrySet() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCount(K) in line 66
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function numKeys() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Multiset() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Multiset(Map< K, Integer >) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::util::Multiset::EntryComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(Entry< E, Integer >,Entry< E, Integer >) in line 85
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/NullIterator.java
module edu::umd::cs::findbugs::util::NullIterator
   inherits from java::util::Iterator
   function hasNext() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function remove() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/ProfilingMapCache.java
module edu::umd::cs::findbugs::util::ProfilingMapCache
   inherits from edu::umd::cs::findbugs::util::MapCache
   function get(Object) in line 46
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
   function getStatistics() in line 61
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function ProfilingMapCache(int,String) in line 31
      protection public
      13 lines of code
      2 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/RegexStringMatcher.java
module edu::umd::cs::findbugs::util::RegexStringMatcher
   inherits from edu::umd::cs::findbugs::util::StringMatcher
   function matches(String) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable pattern defined in edu::umd::cs::findbugs::util::RegexStringMatcher
   function toString() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pattern defined in edu::umd::cs::findbugs::util::RegexStringMatcher
   function RegexStringMatcher(String) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pattern defined in edu::umd::cs::findbugs::util::RegexStringMatcher
   variable pattern in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/StringMatcher.java
module edu::umd::cs::findbugs::util::StringMatcher
   function matches(String) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/Strings.java
module edu::umd::cs::findbugs::util::Strings
   function escapeXml(String) in line 137
      protection public
      24 lines of code
      1 parameters
      5 conditional paths
      uses function initializeEscapeMap() defined in edu::umd::cs::findbugs::util::Strings
      uses function isInvalidXMLCharacter(int) defined in edu::umd::cs::findbugs::util::Strings
      uses variable xmlLowValueEscapeStrings defined in edu::umd::cs::findbugs::util::Strings
   function initializeEscapeMap() in line 102
      protection public
      22 lines of code
      0 parameters
      5 conditional paths
      uses variable xmlLowValueEscapeStringsInitialized defined in edu::umd::cs::findbugs::util::Strings
      uses variable escapeInitLockObject defined in edu::umd::cs::findbugs::util::Strings
      uses variable xmlAllowedLowCharacterBound defined in edu::umd::cs::findbugs::util::Strings
      uses function isInvalidXMLCharacter(int) defined in edu::umd::cs::findbugs::util::Strings
      uses variable xmlLowValueEscapeStrings defined in edu::umd::cs::findbugs::util::Strings
   function initializeUnescapePattern() in line 172
      protection public
      23 lines of code
      0 parameters
      4 conditional paths
      uses variable paternIsInitialized defined in edu::umd::cs::findbugs::util::Strings
      uses variable unescapeInitLockObject defined in edu::umd::cs::findbugs::util::Strings
      uses variable unescapePattern defined in edu::umd::cs::findbugs::util::Strings
      uses variable unicodeUnescapeMatchExpression defined in edu::umd::cs::findbugs::util::Strings
   function isInvalidXMLCharacter(int) in line 82
      7 lines of code
      1 parameters
      2 conditional paths
   function replace(String,String,String) in line 45
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function toString(final Object[]) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function trimComma(String) in line 67
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function unescapeXml(String) in line 208
      protection public
      46 lines of code
      1 parameters
      7 conditional paths
      uses function initializeEscapeMap() defined in edu::umd::cs::findbugs::util::Strings
      uses function initializeUnescapePattern() defined in edu::umd::cs::findbugs::util::Strings
      uses variable unescapePattern defined in edu::umd::cs::findbugs::util::Strings
      uses function isInvalidXMLCharacter(int) defined in edu::umd::cs::findbugs::util::Strings
   variable escapeInitLockObject in line 93
   variable paternIsInitialized in line 165
   variable unescapeInitLockObject in line 166
   variable unescapePattern in line 164
   variable unicodeUnescapeMatchExpression in line 163
   variable xmlAllowedLowCharacterBound in line 80
   variable xmlLowValueEscapeStrings in line 91
   variable xmlLowValueEscapeStringsInitialized in line 90
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/SubtypeTypeMatcher.java
module edu::umd::cs::findbugs::util::SubtypeTypeMatcher
   inherits from edu::umd::cs::findbugs::util::TypeMatcher
   function matches(Type) in line 59
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable supertype defined in edu::umd::cs::findbugs::util::SubtypeTypeMatcher
      uses function getErrorLogger() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function toString() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable supertype defined in edu::umd::cs::findbugs::util::SubtypeTypeMatcher
   function SubtypeTypeMatcher(ReferenceType) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable supertype defined in edu::umd::cs::findbugs::util::SubtypeTypeMatcher
   function SubtypeTypeMatcher(ClassDescriptor) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   variable supertype in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/TopologicalSort.java
module edu::umd::cs::findbugs::util::TopologicalSort
   function countBadEdges(List< E >,OutEdges< E >) in line 77
      protection public
      15 lines of code
      2 parameters
      33 conditional paths
      uses function getOutEdges(E) defined in edu::umd::cs::findbugs::util::TopologicalSort::OutEdges
      uses function add(K,V) defined in edu::umd::cs::findbugs::util::MultiMap
      uses function get(K) defined in edu::umd::cs::findbugs::util::MultiMap
      uses function remove(K,V) defined in edu::umd::cs::findbugs::util::MultiMap
   function sortByCallGraph(Collection< E >,OutEdges< E >) in line 66
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function getProfiler() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
module edu::umd::cs::findbugs::util::TopologicalSort::OutEdges
   function getOutEdges(E) in line 45
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::util::TopologicalSort::OutEdgesCache
   inherits from edu::umd::cs::findbugs::util::TopologicalSort::OutEdges
   function getOutEdges(E) in line 56
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function OutEdgesCache(OutEdges< E >) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::util::TopologicalSort::SortAlgorithm
   function compute() in line 94
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::util::TopologicalSort::Worker
   inherits from edu::umd::cs::findbugs::util::TopologicalSort::SortAlgorithm
   function compute() in line 110
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::util::TopologicalSort::Worker2
   inherits from edu::umd::cs::findbugs::util::TopologicalSort::SortAlgorithm
   function compute() in line 151
      protection public
      79 lines of code
      0 parameters
      1 conditional paths
   function removeVertex(E) in line 138
      13 lines of code
      1 parameters
      1 conditional paths
   function score(E) in line 234
      12 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/TripleKeyHashMap.java
module edu::umd::cs::findbugs::util::TripleKeyHashMap
   function get(K1,K2,K3) in line 32
      protection public
      5 lines of code
      3 parameters
      2 conditional paths
      uses function get(K1,K2) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
   function put(K1,K2,K3,V) in line 38
      protection public
      8 lines of code
      4 parameters
      2 conditional paths
      uses function get(K1,K2) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
      uses function put(K1,K2,V) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/TypeMatcher.java
module edu::umd::cs::findbugs::util::TypeMatcher
   function matches(Type) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/Util.java
module edu::umd::cs::findbugs::util::Util
   function closeSilently(@WillClose Connection) in line 182
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function closeSilently(@WillClose InputStream) in line 191
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function closeSilently(@WillClose Reader) in line 199
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function closeSilently(@WillClose OutputStream) in line 207
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
   function commonPrefix(String,String) in line 270
      protection public
      14 lines of code
      2 parameters
      6 conditional paths
   function compare(int,int) in line 66
      protection public
      5 lines of code
      2 parameters
      3 conditional paths
   function compare(long,long) in line 78
      protection public
      5 lines of code
      2 parameters
      3 conditional paths
   function emptyOrNonnullSingleton(T) in line 139
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
   function first(Iterable< E >) in line 263
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function getFileExtension(File) in line 246
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function getFileReader(String) in line 168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getReader(@WillCloseWhenClosed InputStream) defined in edu::umd::cs::findbugs::util::Util
   function getFileReader(File) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getReader(@WillCloseWhenClosed InputStream) defined in edu::umd::cs::findbugs::util::Util
   function getFileWriter(String) in line 178
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getWriter(@WillCloseWhenClosed OutputStream) defined in edu::umd::cs::findbugs::util::Util
   function getReader(@WillCloseWhenClosed InputStream) in line 165
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getWriter(@WillCloseWhenClosed OutputStream) in line 174
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getXMLType(@WillNotClose InputStream) in line 215
      protection public
      25 lines of code
      1 parameters
      6 conditional paths
      uses function getReader(@WillCloseWhenClosed InputStream) defined in edu::umd::cs::findbugs::util::Util
   function immutableMap(Map< K, V >) in line 143
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function makeIOException(String,Throwable) in line 240
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function nullSafeCompareTo(@CheckForNull T,@CheckForNull T) in line 159
      protection public
      6 lines of code
      2 parameters
      4 conditional paths
   function nullSafeEquals(@CheckForNull T,@CheckForNull T) in line 152
      protection public
      5 lines of code
      2 parameters
      3 conditional paths
   function nullSafeHashcode(@CheckForNull Object) in line 148
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
   function repeat(String,int) in line 109
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
   function runLogAtShutdown(Runnable) in line 117
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses variable LOGGING defined in edu::umd::cs::findbugs::util::Util
   function setBitIteratable(final BitSet) in line 84
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function setBitIterator(final BitSet) defined in edu::umd::cs::findbugs::util::Util
   function setBitIterator(final BitSet) in line 91
      protection public
      18 lines of code
      1 parameters
      1 conditional paths
   function throwIOException(String,Throwable) in line 253
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   variable LOGGING in line 58
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/visitclass/Util.java
module edu::umd::cs::findbugs::visitclass::Util
   function getOuterClass(JavaClass) in line 49
      protection public
      14 lines of code
      1 parameters
      5 conditional paths
   function getSizeOfSurroundingTryBlock(@CheckForNull Method,String,int) in line 63
      protection public
      5 lines of code
      3 parameters
      2 conditional paths
   function getSizeOfSurroundingTryBlock(ConstantPool,Code,@CheckForNull String,int) in line 70
      protection public
      37 lines of code
      4 parameters
      12 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/Util.java
module edu::umd::cs::findbugs::gui2::Util
   function addOkAndCancelButtons(JPanel,JButton,JButton) in line 41
      protection public
      16 lines of code
      3 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/util/WriteOnceProperties.java
module edu::umd::cs::findbugs::util::WriteOnceProperties
   inherits from java::util::Properties
   function dumpProperties() in line 76
      8 lines of code
      0 parameters
      2 conditional paths
   function equals(Object) in line 20
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getProperty(String) in line 29
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable propertReadAt defined in edu::umd::cs::findbugs::util::WriteOnceProperties
   function getProperty(String,String) in line 36
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable propertReadAt defined in edu::umd::cs::findbugs::util::WriteOnceProperties
   function hashCode() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function main(String) in line 59
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses function dumpProperties() defined in edu::umd::cs::findbugs::util::WriteOnceProperties
      uses function makeSystemPropertiesWriteOnce() defined in edu::umd::cs::findbugs::util::WriteOnceProperties
   function makeSystemPropertiesWriteOnce() in line 54
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function WriteOnceProperties(Properties) defined in edu::umd::cs::findbugs::util::WriteOnceProperties
   function setProperty(String,String) in line 43
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable propertReadAt defined in edu::umd::cs::findbugs::util::WriteOnceProperties
   function WriteOnceProperties(Properties) in line 15
      3 lines of code
      1 parameters
      1 conditional paths
   variable propertReadAt in line 13
   variable serialVersionUID in line 10
module edu::umd::cs::findbugs::util::WriteOnceProperties::PropertyReadAt
   inherits from Exception
   variable serialVersionUID in line 12
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/Version.java
module edu::umd::cs::findbugs::Version
   function main(String[]) in line 148
      protection public
      24 lines of code
      1 parameters
      6 conditional paths
      uses function usage() defined in edu::umd::cs::findbugs::Version
      uses variable IS_DEVELOPMENT defined in edu::umd::cs::findbugs::Version
      uses variable RELEASE_CANDIDATE defined in edu::umd::cs::findbugs::Version
      uses variable RELEASE defined in edu::umd::cs::findbugs::Version
      uses variable DATE defined in edu::umd::cs::findbugs::Version
      uses variable RELEASE_BASE defined in edu::umd::cs::findbugs::Version
      uses variable COMPUTED_RELEASE defined in edu::umd::cs::findbugs::Version
      uses variable COMPUTED_DATE defined in edu::umd::cs::findbugs::Version
      uses variable COMPUTED_ECLIPSE_UI_VERSION defined in edu::umd::cs::findbugs::Version
      uses variable WEBSITE defined in edu::umd::cs::findbugs::Version
      uses variable DOWNLOADS_WEBSITE defined in edu::umd::cs::findbugs::Version
   function usage() in line 173
      4 lines of code
      0 parameters
      1 conditional paths
   variable COMPUTED_DATE in line 61
      protection public
   variable COMPUTED_ECLIPSE_DATE in line 63
   variable COMPUTED_ECLIPSE_UI_VERSION in line 99
      protection public
   variable COMPUTED_RELEASE in line 88
      protection public
   variable DATE in line 62
      protection public
   variable DOWNLOADS_WEBSITE in line 141
      protection public
   variable IS_DEVELOPMENT in line 50
      protection public
   variable MAJOR in line 35
      protection public
   variable MINOR in line 40
      protection public
   variable PATCHLEVEL in line 45
      protection public
   variable PREVIEW in line 77
      protection public
   variable RELEASE in line 94
      protection public
   variable RELEASE_BASE in line 84
      protection public
   variable RELEASE_CANDIDATE in line 56
      protection public
   variable RELEASE_SUFFIX_WORD in line 79
   variable SUPPORT_EMAIL in line 146
      protection public
   variable WEBSITE in line 136
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/VersionInsensitiveBugComparator.java
module edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   inherits from edu::umd::cs::findbugs::WarningComparator
   function compare(BugInstance,BugInstance) in line 115
      protection public
      135 lines of code
      2 parameters
      27 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCode(String) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function isExactBugPatternMatch() defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
      uses function getType() defined in edu::umd::cs::findbugs::BugPattern
      uses variable comparePriorities defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function FilteringAnnotationIterator(Iterator< BugAnnotation >) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
      uses function rewriteClassName(String) defined in edu::umd::cs::findbugs::model::ClassNameRewriter
      uses function compareTo(BugAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function compareTo(BugAnnotation) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function isBoring(BugAnnotation) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   function compareNullElements(Object,Object) in line 99
      8 lines of code
      2 parameters
      3 conditional paths
   function getCode(String) in line 108
      6 lines of code
      1 parameters
      2 conditional paths
   function isBoring(BugAnnotation) in line 95
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isSignificant() defined in edu::umd::cs::findbugs::BugAnnotation
   function isExactBugPatternMatch() in line 261
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exactBugPatternMatch defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   function setClassNameRewriter(ClassNameRewriter) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   function setComparePriorities(boolean) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable comparePriorities defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   function setExactBugPatternMatch(boolean) in line 254
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable exactBugPatternMatch defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   function VersionInsensitiveBugComparator() in line 40
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable classNameRewriter in line 35
   variable comparePriorities in line 39
   variable exactBugPatternMatch in line 37
module edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
   inherits from java::util::Iterator
   function findNext() in line 81
      11 lines of code
      0 parameters
      4 conditional paths
      uses function next() defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
      uses variable iter defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
      uses function isBoring(BugAnnotation) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   function hasNext() in line 63
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
      uses function next() defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
   function next() in line 68
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
   function remove() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FilteringAnnotationIterator(Iterator< BugAnnotation >) in line 58
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable iter defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
   variable iter in line 55
   variable next in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/visitclass/AnnotationVisitor.java
module edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getAnnotationName(DataInputStream) in line 200
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function readAnnotationValue(DataInputStream) in line 211
      85 lines of code
      1 parameters
      34 conditional paths
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function readAnnotationValues(DataInputStream,int) in line 183
      16 lines of code
      2 parameters
      4 conditional paths
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function readAnnotationValue(DataInputStream) defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   function visit(Unknown) in line 101
      protection public
      81 lines of code
      1 parameters
      16 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
      uses variable RUNTIME_VISIBLE_ANNOTATIONS defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
      uses variable RUNTIME_INVISIBLE_ANNOTATIONS defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
      uses function getAnnotationName(DataInputStream) defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
      uses function readAnnotationValues(DataInputStream,int) defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
      uses function visitAnnotation(String,Map< String, Object >,boolean) defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
      uses variable RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
      uses function getNumberMethodArguments() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function visitSyntheticParameterAnnotation(int,boolean) defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
      uses function visitParameterAnnotation(int,String,Map< String, Object >,boolean) defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   function visitAnnotation(String,Map< String, Object >,boolean) in line 69
      protection public
      10 lines of code
      3 parameters
      3 conditional paths
   function visitParameterAnnotation(int,String,Map< String, Object >,boolean) in line 87
      protection public
      9 lines of code
      4 parameters
      1 conditional paths
   function visitSyntheticParameterAnnotation(int,boolean) in line 97
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   variable RUNTIME_INVISIBLE_ANNOTATIONS in line 52
   variable RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS in line 48
   variable RUNTIME_VISIBLE_ANNOTATIONS in line 56
   variable RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS in line 60
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/visitclass/BetterVisitor.java
module edu::umd::cs::findbugs::visitclass::BetterVisitor
   inherits from org::apache::bcel::classfile::Visitor
   abstract class
   function clone() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function report(PrintStream) in line 351
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(JavaClass) in line 83
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(ConstantPool) in line 86
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Field) in line 89
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 92
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Constant) in line 97
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(ConstantCP) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantMethodref) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantFieldref) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantInterfaceMethodref) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantClass) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantDouble) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantFloat) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantInteger) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantLong) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantNameAndType) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantString) in line 140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantUtf8) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(Attribute) in line 149
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantValue) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ExceptionTable) in line 160
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(InnerClasses) in line 164
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(LineNumberTable) in line 168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(LocalVariableTable) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(LocalVariableTypeTable) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(SourceFile) in line 179
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(Synthetic) in line 183
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(org.apache.bcel.classfile.Deprecated) in line 187
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(Unknown) in line 191
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(Signature) in line 195
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(InnerClass) in line 200
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(LocalVariable) in line 203
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(LineNumber) in line 206
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(CodeException) in line 209
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(StackMapEntry) in line 212
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitCode(Code) in line 216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitCodeException(CodeException) in line 220
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantClass(ConstantClass) in line 225
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantDouble(ConstantDouble) in line 229
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantFieldref(ConstantFieldref) in line 233
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantFloat(ConstantFloat) in line 237
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantInteger(ConstantInteger) in line 241
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantInterfaceMethodref(ConstantInterfaceMethodref) in line 245
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantLong(ConstantLong) in line 249
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantMethodref(ConstantMethodref) in line 253
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantNameAndType(ConstantNameAndType) in line 257
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantPool(ConstantPool) in line 261
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantString(ConstantString) in line 265
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantUtf8(ConstantUtf8) in line 269
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantValue(ConstantValue) in line 273
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitDeprecated(org.apache.bcel.classfile.Deprecated) in line 277
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitExceptionTable(ExceptionTable) in line 281
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitField(Field) in line 285
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitInnerClass(InnerClass) in line 290
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitInnerClasses(InnerClasses) in line 294
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitJavaClass(JavaClass) in line 299
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitLineNumber(LineNumber) in line 303
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitLineNumberTable(LineNumberTable) in line 307
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitLocalVariable(LocalVariable) in line 311
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitLocalVariableTable(LocalVariableTable) in line 315
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitLocalVariableTypeTable(LocalVariableTypeTable) in line 318
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitMethod(Method) in line 323
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitSignature(Signature) in line 327
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitSourceFile(SourceFile) in line 331
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitStackMap(StackMap) in line 347
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitStackMapEntry(StackMapEntry) in line 343
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitSynthetic(Synthetic) in line 335
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitUnknown(Unknown) in line 339
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/visitclass/Constants2.java
module edu::umd::cs::findbugs::visitclass::Constants2
   inherits from org::apache::bcel::Constants
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/visitclass/DismantleBytecode.java
module edu::umd::cs::findbugs::visitclass::DismantleBytecode
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   abstract class
   function afterOpcode(int) in line 856
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function areOppositeBranches(int,int) in line 943
      protection public
      29 lines of code
      2 parameters
      19 conditional paths
      uses function isBranch(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function atCatchBlock() in line 420
      protection public
      5 lines of code
      0 parameters
      3 conditional paths
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function beforeOpcode(int) in line 855
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getBranchFallThrough() in line 302
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable branchFallThrough defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable INVALID_OFFSET defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getBranchOffset() in line 290
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable branchOffset defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable INVALID_OFFSET defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getBranchTarget() in line 296
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable branchTarget defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable INVALID_OFFSET defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getClassConstantOperand() in line 254
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable classConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getClassDescriptorOperand() in line 153
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable referencedClass defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getCodeByte(int) in line 413
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getConstantRefOperand() in line 267
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable constantRefOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getDefaultSwitchOffset() in line 308
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable defaultSwitchOffset defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable INVALID_OFFSET defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getDottedClassConstantOperand() in line 201
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable dottedClassConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable classConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getDottedSigConstantOperand() in line 238
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable dottedSigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getFieldDescriptorOperand() in line 182
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable nameConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedField defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable classConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getIntConstant() in line 286
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable intConstant defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getMaxPC() in line 410
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getMethodDescriptorOperand() in line 164
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable nameConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedMethod defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable classConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getNameConstantOperand() in line 230
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable nameConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getNextOpcode() in line 926
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getNextPC() in line 923
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getOpcode() in line 416
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getPC() in line 318
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable PC defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getPrevOpcode(int) in line 326
      protection public
      8 lines of code
      1 parameters
      4 conditional paths
      uses variable prevOpcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sizePrevOpcodeBuffer defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable currentPosInPrevOpcodeBuffer defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getRefConstantOperand() in line 213
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses variable refConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable dottedClassConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable nameConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable dottedSigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getRefFieldIsStatic() in line 314
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable refFieldIsStatic defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getRegisterOperand() in line 280
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable registerOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getSigConstantOperand() in line 245
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable sigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getStringConstantOperand() in line 261
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable stringConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getSwitchLabels() in line 367
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable switchLabels defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getSwitchOffsets() in line 360
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable switchOffsets defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getXClassOperand() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable referencedXClass defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getXFieldOperand() in line 193
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable referencedXClass defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedXField defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function findField(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses variable nameConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getXMethodOperand() in line 175
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable referencedXClass defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedXMethod defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses variable nameConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function isBranch(int) in line 344
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable M_BR defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function isRegisterLoad() in line 273
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isRegisterStore() in line 276
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isRegisterStore(int) in line 972
      protection public
      41 lines of code
      1 parameters
      26 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function isReturn(int) in line 929
      protection public
      13 lines of code
      1 parameters
      7 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function isSwitch(int) in line 355
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function isWideOpcode() in line 335
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable opcodeIsWide defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function printOpCode(int) in line 880
      protection public
      38 lines of code
      1 parameters
      10 conditional paths
      uses variable formatter defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getConstantRefOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStringConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSwitchOffsets() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDefaultSwitchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function resetState() in line 373
      17 lines of code
      0 parameters
      1 conditional paths
      uses variable classConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable nameConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable dottedSigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stringConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable refConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable refFieldIsStatic defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable constantRefOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable registerOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterLoad() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable branchOffset defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable branchTarget defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable branchFallThrough defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable defaultSwitchOffset defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable INVALID_OFFSET defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable switchOffsets defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable switchLabels defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable dottedClassConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedClass defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedXClass defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedMethod defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedXMethod defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedField defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedXField defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function sawBranchTo(int) in line 849
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawClass() in line 872
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function sawDouble(double) in line 834
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawField() in line 863
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function sawFloat(float) in line 837
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawIMethod() in line 869
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function sawInt(int) in line 843
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawLong(long) in line 846
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawMethod() in line 866
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function sawOffset(int) in line 851
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawOpcode(int) in line 857
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawRegister(int) in line 840
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawString(String) in line 860
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sortByOffset(int[],int[]) in line 391
      18 lines of code
      2 parameters
      5 conditional paths
      uses variable switchOffsets defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable switchLabels defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 426
      protection public
      407 lines of code
      1 parameters
      134 conditional paths
      uses variable sizePrevOpcodeBuffer defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable currentPosInPrevOpcodeBuffer defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable prevOpcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable lineNumberTable defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function resetState() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable PC defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable opcodeIsWide defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable defaultSwitchOffset defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable branchOffset defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable branchTarget defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable switchOffsets defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable switchLabels defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sortByOffset(int[],int[]) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable registerOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable intConstant defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable M_CP defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable M_R defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable M_UINT defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable M_BR defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable branchFallThrough defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable constantRefOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable classConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStringFromIndex(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable referencedClass defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedXClass defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable longConstant defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable floatConstant defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable doubleConstant defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stringConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable nameConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable dottedSigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable refConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable M_INT defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterLoad() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable refFieldIsStatic defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function beforeOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function afterOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawInt(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawBranchTo(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawOffset(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawLong(long) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawFloat(float) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawDouble(double) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawString(String) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawField() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawMethod() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawIMethod() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawClass() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawRegister(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   variable branchFallThrough in line 65
   variable branchOffset in line 63
   variable branchTarget in line 64
   variable classConstantOperand in line 72
   variable codeBytes in line 147
   variable constantRefOperand in line 86
   variable currentPosInPrevOpcodeBuffer in line 69
   variable defaultSwitchOffset in line 71
   variable dottedClassConstantOperand in line 79
   variable dottedSigConstantOperand in line 82
   variable doubleConstant in line 90
   variable floatConstant in line 89
   variable formatter in line 875
   variable intConstant in line 87
   variable INVALID_OFFSET in line 95
   variable isRegisterLoad in line 92
   variable isRegisterStore in line 93
   variable lineNumberTable in line 148
   variable longConstant in line 88
   variable M_BR in line 109
      protection public
   variable M_CP in line 107
      protection public
   variable M_INT in line 105
      protection public
   variable M_PAD in line 110
      protection public
   variable M_R in line 108
      protection public
   variable M_UINT in line 106
      protection public
   variable nameConstantOperand in line 80
   variable NOT_AVAILABLE in line 96
   variable opcode in line 60
   variable opcodeIsWide in line 61
   variable PC in line 62
   variable prevOpcode in line 68
   variable refConstantOperand in line 84
   variable referencedClass in line 73
   variable referencedField in line 77
   variable referencedMethod in line 75
   variable referencedXClass in line 74
   variable referencedXField in line 78
   variable referencedXMethod in line 76
   variable refFieldIsStatic in line 85
   variable registerOperand in line 91
   variable sigConstantOperand in line 81
   variable sizePrevOpcodeBuffer in line 70
   variable stringConstantOperand in line 83
   variable switchLabels in line 67
   variable switchOffsets in line 66
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/visitclass/LVTHelper.java
module edu::umd::cs::findbugs::visitclass::LVTHelper
   function getLocalVariableAtPC(@NonNull LocalVariableTable,int,int) in line 40
      protection public
      14 lines of code
      3 parameters
      4 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/visitclass/PreorderVisitor.java
module edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::visitclass::BetterVisitor
   inherits from edu::umd::cs::findbugs::visitclass::Constants2
   abstract class
   function amVisitingMainMethod() in line 234
      protection public
      9 lines of code
      0 parameters
      5 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function asUnsignedByte(byte) in line 112
      3 lines of code
      1 parameters
      1 conditional paths
   function doVisitField(Field) in line 189
      23 lines of code
      1 parameters
      5 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedFieldSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fullyQualifiedFieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable thisFieldInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable thisClassInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function findField(String,String,boolean) defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses function getFieldName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFullyQualifiedFieldName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldIsStatic defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function doVisitMethod(Method) in line 213
      protection public
      20 lines of code
      1 parameters
      5 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedMethodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fullyQualifiedMethodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable thisMethodInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable thisClassInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getClassDescriptor() in line 321
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable thisClassInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getClassName() in line 342
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getCode() in line 120
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getConstantPool() in line 337
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable constantPool defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getDottedClassName() in line 347
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dottedClassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getDottedFieldSig() in line 523
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedFieldSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getDottedMethodSig() in line 476
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedMethodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getDottedSuperclassName() in line 367
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dottedSuperclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getField() in line 411
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getFieldDescriptor() in line 333
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable thisFieldInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getFieldIsStatic() in line 505
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldIsStatic defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getFieldName() in line 485
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStringFromIndex(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getFieldSig() in line 497
      protection public
      6 lines of code
      0 parameters
      3 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStringFromIndex(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getFullyQualifiedFieldName() in line 512
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fullyQualifiedFieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getFullyQualifiedMethodName() in line 377
      protection public
      20 lines of code
      0 parameters
      3 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fullyQualifiedMethodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedClassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedMethodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getMethod() in line 417
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getMethodDescriptor() in line 327
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable thisMethodInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getMethodName() in line 424
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStringFromIndex(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getMethodSig() in line 467
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStringFromIndex(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getNumberArguments(String) in line 435
      protection public
      26 lines of code
      1 parameters
      9 conditional paths
   function getNumberMethodArguments() in line 463
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNumberArguments(String) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getPackageName() in line 352
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable packageName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getSizeOfSurroundingTryBlock(int) in line 150
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSizeOfSurroundingTryBlock(String,int) in line 158
      protection public
      4 lines of code
      2 parameters
      2 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable constantPool defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getSourceFile() in line 357
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getStringFromIndex(int) in line 107
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable constantPool defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getSuperclassName() in line 362
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable superclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getSurroundingCaughtExceptions(int) in line 125
      protection public
      20 lines of code
      1 parameters
      7 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getThisClass() in line 372
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable thisClass defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getXClass() in line 317
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable thisClassInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getXField() in line 330
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable thisFieldInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getXMethod() in line 324
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable thisMethodInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function setupVisitorForClass(JavaClass) in line 278
      protection public
      20 lines of code
      1 parameters
      2 conditional paths
      uses variable constantPool defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable thisClass defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStringFromIndex(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedClassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable packageName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sourceFile defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedSuperclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable superclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable thisClassInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function shouldVisit(JavaClass) in line 256
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitAfter(JavaClass) in line 252
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitCode(Code) in line 164
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitConstantPool(ConstantPool) in line 178
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
   function visitingField() in line 407
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitingMethod() in line 401
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitInnerClasses(InnerClasses) in line 245
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function visitJavaClass(JavaClass) in line 261
      protection public
      16 lines of code
      1 parameters
      5 conditional paths
      uses function setupVisitorForClass(JavaClass) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function shouldVisit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable constantPool defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function doVisitField(Field) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function doVisitMethod(Method) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function visitAfter(JavaClass) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitLineNumberTable(LineNumberTable) in line 300
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function visitLocalVariableTable(LocalVariableTable) in line 308
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   variable className in line 80
   variable code in line 105
   variable constantPool in line 74
   variable dottedClassName in line 81
   variable dottedFieldSig in line 101
   variable dottedMethodSig in line 90
   variable dottedSuperclassName in line 85
   variable field in line 96
   variable fieldIsStatic in line 102
   variable fieldName in line 99
   variable fieldSig in line 100
   variable fullyQualifiedFieldName in line 98
   variable fullyQualifiedMethodName in line 93
   variable method in line 91
   variable methodName in line 92
   variable methodSig in line 89
   variable packageName in line 82
   variable sourceFile in line 83
   variable superclassName in line 84
   variable thisClass in line 75
   variable thisClassInfo in line 76
   variable thisFieldInfo in line 78
   variable thisMethodInfo in line 77
   variable visitingField in line 97
   variable visitingMethod in line 88
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/visitclass/PrintClass.java
module edu::umd::cs::findbugs::visitclass::PrintClass
   function main(String) in line 68
      protection public
      59 lines of code
      1 parameters
      17 conditional paths
      uses function printClass(ClassParser) defined in edu::umd::cs::findbugs::visitclass::PrintClass
   function printClass(ClassParser) in line 128
      24 lines of code
      1 parameters
      7 conditional paths
      uses function printCode(Method[]) defined in edu::umd::cs::findbugs::visitclass::PrintClass
   function printCode(Method[]) in line 156
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
module edu::umd::cs::findbugs::visitclass::PrintClass::ZipEntryComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(ZipEntry,ZipEntry) in line 46
      protection public
      17 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/WarningComparator.java
module edu::umd::cs::findbugs::WarningComparator
   inherits from java::util::Comparator
   function compare(BugInstance,BugInstance) in line 39
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function setClassNameRewriter(ClassNameRewriter) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/WarningSuppressor.java
module edu::umd::cs::findbugs::WarningSuppressor
   inherits from edu::umd::cs::findbugs::filter::Matcher
   abstract class
   function match(BugInstance) in line 21
      protection public
      18 lines of code
      1 parameters
      4 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
   function writeXML(XMLOutput,boolean) in line 40
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function WarningSuppressor(String) in line 15
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/workflow/BugHistory.java
module edu::umd::cs::findbugs::workflow::BugHistory
   function getComparator() in line 226
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable comparator defined in edu::umd::cs::findbugs::workflow::BugHistory
   function getNewCollection() in line 288
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getOrigCollection() in line 281
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable origCollection defined in edu::umd::cs::findbugs::workflow::BugHistory
   function getOriginator() in line 274
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable originator defined in edu::umd::cs::findbugs::workflow::BugHistory
   function getResultCollection() in line 295
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable resultCollection defined in edu::umd::cs::findbugs::workflow::BugHistory
   function getSharedInstances(Set< BugInstance >,SortedBugCollection) in line 313
      10 lines of code
      2 parameters
      3 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function main(String[]) in line 541
      protection public
      27 lines of code
      1 parameters
      5 conditional paths
      uses function parse(String,int,int,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function getSetOp() defined in edu::umd::cs::findbugs::workflow::BugHistory::BugHistoryCommandLine
      uses function printUsage() defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function getListFile() defined in edu::umd::cs::findbugs::workflow::BugHistory::BugHistoryCommandLine
      uses function runBulk(BugHistoryCommandLine) defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function runSinglePair(BugHistoryCommandLine,String,String) defined in edu::umd::cs::findbugs::workflow::BugHistory
   function performSetOperation(SetOperation) in line 243
      protection public
      27 lines of code
      1 parameters
      1 conditional paths
      uses function getComparator() defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses variable originator defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function perform(Set< BugInstance >,SortedBugCollection,SortedBugCollection) defined in edu::umd::cs::findbugs::workflow::BugHistory::SetOperation
      uses variable origCollection defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses variable resultCollection defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function duplicate() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function clearBugInstances() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function addAll(Collection< BugInstance >) defined in edu::umd::cs::findbugs::SortedBugCollection
   function printUsage() in line 650
      6 lines of code
      0 parameters
      1 conditional paths
      uses function printUsage(OutputStream) defined in edu::umd::cs::findbugs::config::CommandLine
   function readCollection(String) in line 534
      6 lines of code
      1 parameters
      1 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function removeBugInstances(Set< BugInstance >,Collection< BugInstance >) in line 341
      5 lines of code
      2 parameters
      2 conditional paths
   function replaceBugInstances(Set< BugInstance >,Collection< BugInstance >) in line 330
      4 lines of code
      2 parameters
      1 conditional paths
   function runBulk(BugHistoryCommandLine) in line 569
      64 lines of code
      1 parameters
      10 conditional paths
      uses function fetch(String) defined in edu::umd::cs::findbugs::workflow::BugHistory::BugCollectionAndProjectCache
      uses function getBugCollection() defined in edu::umd::cs::findbugs::workflow::BugHistory::BugCollectionAndProject
      uses function getProject() defined in edu::umd::cs::findbugs::workflow::BugHistory::BugCollectionAndProject
      uses function writeResultCollection(Project,Project,OutputStream) defined in edu::umd::cs::findbugs::workflow::BugHistory
   function runSinglePair(BugHistoryCommandLine,String,String) in line 634
      12 lines of code
      3 parameters
      2 conditional paths
      uses function getResultCollection() defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeResultCollection(Project,Project,OutputStream) defined in edu::umd::cs::findbugs::workflow::BugHistory
   function setComparator(WarningComparator) in line 233
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable comparator defined in edu::umd::cs::findbugs::workflow::BugHistory
   function writeResultCollection(Project,Project,OutputStream) in line 299
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function getResultCollection() defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function writeXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function BugHistory(SortedBugCollection,SortedBugCollection) in line 218
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable origCollection defined in edu::umd::cs::findbugs::workflow::BugHistory
   variable ADDED_WARNINGS in line 149
      protection public
   variable comparator in line 210
   variable DEBUG in line 65
   variable FUZZY_COMPARATOR in line 348
   variable origCollection in line 207
   variable originator in line 209
   variable REMOVED_WARNINGS in line 192
      protection public
   variable resultCollection in line 208
   variable RETAINED_WARNINGS in line 169
      protection public
   variable SLOPPY_COMPARATOR in line 349
   variable VERSION_INSENSITIVE_COMPARATOR in line 347
module edu::umd::cs::findbugs::workflow::BugHistory::BugCollectionAndProject
   function getBugCollection() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getProject() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getProject() defined in edu::umd::cs::findbugs::SortedBugCollection
   function BugCollectionAndProject(SortedBugCollection) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::BugHistory::BugCollectionAndProjectCache
   inherits from java::util::LinkedHashMap
   function fetch(String) in line 117
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function readCollection(String) defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function BugCollectionAndProject(SortedBugCollection) defined in edu::umd::cs::findbugs::workflow::BugHistory::BugCollectionAndProject
   function removeEldestEntry(Entry< String, BugCollectionAndProject >) in line 105
      3 lines of code
      1 parameters
      1 conditional paths
   variable CACHE_SIZE in line 98
   variable serialVersionUID in line 95
module edu::umd::cs::findbugs::workflow::BugHistory::SetOperation
   function perform(Set< BugInstance >,SortedBugCollection,SortedBugCollection) in line 140
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::BugHistory::BugHistoryCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function configure(BugHistory,SortedBugCollection,SortedBugCollection) in line 466
      protection public
      26 lines of code
      3 parameters
      4 conditional paths
      uses variable comparator defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses variable VERSION_INSENSITIVE_COMPARATOR defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses variable FUZZY_COMPARATOR defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function registerBugCollection(BugCollection) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses variable origCollection defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses variable SLOPPY_COMPARATOR defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function execute() defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses function setClassNameRewriter(ClassNameRewriter) defined in edu::umd::cs::findbugs::WarningComparator
      uses function setComparator(WarningComparator) defined in edu::umd::cs::findbugs::workflow::BugHistory
   function createAndExecute(String,String,Project,Project) in line 493
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses variable origCollection defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function readCollection(String) defined in edu::umd::cs::findbugs::workflow::BugHistory
   function createAndExecute(SortedBugCollection,SortedBugCollection,Project,Project) in line 501
      protection public
      14 lines of code
      4 parameters
      1 conditional paths
      uses function BugHistory(SortedBugCollection,SortedBugCollection) defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses variable origCollection defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function performSetOperation(SetOperation) defined in edu::umd::cs::findbugs::workflow::BugHistory
   function getBulkOutputFileName(String) in line 516
      protection public
      16 lines of code
      1 parameters
      2 conditional paths
   function getComparatorType() in line 420
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getListFile() in line 448
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getOpName() in line 434
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getOutputDir() in line 455
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSetOp() in line 441
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function handleOption(String,String) in line 379
      22 lines of code
      2 parameters
      8 conditional paths
      uses variable FUZZY_COMPARATOR defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses variable SLOPPY_COMPARATOR defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses variable ADDED_WARNINGS defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses variable REMOVED_WARNINGS defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses variable RETAINED_WARNINGS defined in edu::umd::cs::findbugs::workflow::BugHistory
   function handleOptionWithArgument(String,String) in line 407
      9 lines of code
      2 parameters
      3 conditional paths
   function isCount() in line 427
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isVerbose() in line 462
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BugHistoryCommandLine() in line 360
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   variable comparatorType in line 352
   variable count in line 353
   variable listFile in line 356
   variable opName in line 354
   variable outputDir in line 357
   variable setOp in line 355
   variable verbose in line 358
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/workflow/Churn.java
module edu::umd::cs::findbugs::workflow::Churn
   function dump(PrintStream) in line 133
      protection public
      27 lines of code
      1 parameters
      8 conditional paths
   function execute() in line 93
      protection public
      39 lines of code
      0 parameters
      8 conditional paths
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::BugCollection
      uses function iterator() defined in edu::umd::cs::findbugs::BugCollection
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
   function main(String[]) in line 181
      protection public
      26 lines of code
      1 parameters
      4 conditional paths
      uses function Churn() defined in edu::umd::cs::findbugs::workflow::Churn
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setBugCollection(BugCollection) defined in edu::umd::cs::findbugs::workflow::Churn
      uses function execute() defined in edu::umd::cs::findbugs::workflow::Churn
      uses function dump(PrintStream) defined in edu::umd::cs::findbugs::workflow::Churn
   function setBugCollection(BugCollection) in line 54
      protection public
      3 lines of code
      1 parameters
      6 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function isDead() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
   function Churn() in line 47
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function Churn(BugCollection) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::Churn::Data
module edu::umd::cs::findbugs::workflow::Churn::ChurnCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 168
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 173
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/workflow/CopyBuggySource.java
module edu::umd::cs::findbugs::workflow::CopyBuggySource
   function close(InputStream) in line 144
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function close(OutputStream) in line 153
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function main(String[]) in line 56
      protection public
      87 lines of code
      1 parameters
      17 conditional paths
      uses variable USAGE defined in edu::umd::cs::findbugs::workflow::CopyBuggySource
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses function isUnknown() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function openSource(String,String) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function close(InputStream) defined in edu::umd::cs::findbugs::workflow::CopyBuggySource
   variable USAGE in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/workflow/CountByPackagePrefix.java
module edu::umd::cs::findbugs::workflow::CountByPackagePrefix
   function main(String[]) in line 50
      protection public
      53 lines of code
      1 parameters
      11 conditional paths
      uses variable USAGE defined in edu::umd::cs::findbugs::workflow::CountByPackagePrefix
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
   variable USAGE in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/workflow/CountClassVersions.java
module edu::umd::cs::findbugs::workflow::CountClassVersions
   function main(String) in line 106
      protection public
      69 lines of code
      1 parameters
      15 conditional paths
      uses function readFrom(Reader) defined in edu::umd::cs::findbugs::workflow::CountClassVersions
      uses function readFromStandardInput() defined in edu::umd::cs::findbugs::workflow::CountClassVersions
      uses function put(K1,K2,V) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
      uses function keySet() defined in edu::umd::cs::findbugs::util::DualKeyHashMap
      uses function get(K1,K2) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
   function readFrom(Reader) in line 52
      protection public
      10 lines of code
      1 parameters
      6 conditional paths
   function readFromStandardInput() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function readFrom(Reader) defined in edu::umd::cs::findbugs::workflow::CountClassVersions
module edu::umd::cs::findbugs::workflow::CountClassVersions::CountClassVersionsCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 82
      3 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 93
      10 lines of code
      2 parameters
      1 conditional paths
   variable inputFileList in line 64
      protection public
   variable prefix in line 63
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/workflow/DefectDensity.java
module edu::umd::cs::findbugs::workflow::DefectDensity
   function density(int,int) in line 44
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
   function main(String) in line 49
      protection public
      35 lines of code
      1 parameters
      9 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function printRow(Object...) defined in edu::umd::cs::findbugs::workflow::DefectDensity
      uses function density(int,int) defined in edu::umd::cs::findbugs::workflow::DefectDensity
      uses function getTotalBugs() defined in edu::umd::cs::findbugs::ProjectStats
      uses function getCodeSize() defined in edu::umd::cs::findbugs::ProjectStats
      uses function getCurrentAppVersion() defined in edu::umd::cs::findbugs::BugCollection
      uses function getReleaseName() defined in edu::umd::cs::findbugs::AppVersion
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
   function printRow(Object...) in line 35
      8 lines of code
      1 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/workflow/FileBugHash.java
module edu::umd::cs::findbugs::workflow::FileBugHash
   function compute(BugCollection) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBugCount(String) in line 113
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function getHash(String) in line 104
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function getSize(String) in line 118
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function getSourceFiles() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function main(String) in line 125
      protection public
      18 lines of code
      1 parameters
      4 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function compute(BugCollection) defined in edu::umd::cs::findbugs::workflow::FileBugHash
      uses function getSourceFiles() defined in edu::umd::cs::findbugs::workflow::FileBugHash
      uses function getHash(String) defined in edu::umd::cs::findbugs::workflow::FileBugHash
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/workflow/ListBugDatabaseInfo.java
module edu::umd::cs::findbugs::workflow::ListBugDatabaseInfo
   function listVersion(PrintWriter,@CheckForNull String,boolean) in line 91
      36 lines of code
      3 parameters
      4 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function getCurrentAppVersion() defined in edu::umd::cs::findbugs::BugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function getReleaseName() defined in edu::umd::cs::findbugs::AppVersion
      uses function getTimestamp() defined in edu::umd::cs::findbugs::AppVersion
      uses function getNumClasses() defined in edu::umd::cs::findbugs::AppVersion
      uses function getCodeSize() defined in edu::umd::cs::findbugs::AppVersion
      uses function getTotalBugs() defined in edu::umd::cs::findbugs::ProjectStats
      uses function getBugsOfPriority(int) defined in edu::umd::cs::findbugs::ProjectStats
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function main(String[]) in line 71
      protection public
      19 lines of code
      1 parameters
      3 conditional paths
      uses variable USAGE defined in edu::umd::cs::findbugs::workflow::ListBugDatabaseInfo
      uses function listVersion(PrintWriter,@CheckForNull String,boolean) defined in edu::umd::cs::findbugs::workflow::ListBugDatabaseInfo
   variable USAGE in line 45
module edu::umd::cs::findbugs::workflow::ListBugDatabaseInfo::ListBugDatabaseInfoCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 57
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 65
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/workflow/MergeSummarizeAndView.java
module edu::umd::cs::findbugs::workflow::MergeSummarizeAndView
   function execute() in line 212
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function load() defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView
      uses function shutdown() defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView
   function getAllBugs() in line 241
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHarmless() in line 247
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLowConfidence() in line 255
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getScaryBugs() in line 234
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTooOld() in line 263
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isConnectedToCloud() in line 221
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function load() in line 274
      68 lines of code
      0 parameters
      15 conditional paths
      uses variable workingDirList defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses variable analysisFiles defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses variable srcDirList defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable maxConsideredRank defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses function setRequestDatabaseCloud(boolean) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function reinitializeCloud() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function isConnectedToCloud() defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView
      uses function getProject() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getMode() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function setMode(Mode) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable COMMUNAL defined in edu::umd::cs::findbugs::cloud::Cloud::Mode
      uses variable maxAge defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses variable baselineDate defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses function createEmptyCollectionWithMetadata() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Filter
      uses function overallClassificationIsNotAProblem(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getFirstSeen(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable maxRank defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
   function main(String[]) in line 162
      protection public
      19 lines of code
      1 parameters
      3 conditional paths
      uses variable analysisFiles defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses function MergeSummarizeAndView(MSVOptions) defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView
      uses function load() defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView
      uses function report() defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView
      uses function shutdown() defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView
      uses function isConnectedToCloud() defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView
   function numScaryBugs() in line 227
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
   function report() in line 343
      50 lines of code
      0 parameters
      13 conditional paths
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getFirstSeen(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable alwaysShowGui defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses function setMode(Mode) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function waitUntilReady() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function openBugCollection(SortedBugCollection) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable workingDirList defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses variable srcDirList defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses function addWorkingDir(String) defined in edu::umd::cs::findbugs::Project
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
      uses function setGuiCallback(IGuiCallback) defined in edu::umd::cs::findbugs::Project
   function shutdown() in line 267
      6 lines of code
      0 parameters
      2 conditional paths
      uses function shutdown() defined in edu::umd::cs::findbugs::cloud::Cloud
   function union(SortedBugCollection,SortedBugCollection) in line 144
      protection public
      17 lines of code
      2 parameters
      2 conditional paths
      uses function duplicate() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function addStats(ProjectStats) defined in edu::umd::cs::findbugs::ProjectStats
      uses function getProject() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function add(Project) defined in edu::umd::cs::findbugs::Project
   function MergeSummarizeAndView(MSVOptions) in line 208
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
   variable alwaysShowGui in line 74
      protection public
   variable analysisFiles in line 64
      protection public
   variable baselineDate in line 76
      protection public
   variable maxAge in line 72
      protection public
   variable maxConsideredRank in line 70
      protection public
   variable maxRank in line 68
      protection public
   variable srcDirList in line 66
      protection public
   variable workingDirList in line 62
      protection public
module edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 103
      6 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 118
      18 lines of code
      2 parameters
      1 conditional paths
   function MSVCommandLine(MSVOptions) in line 83
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/workflow/MineBugHistory.java
module edu::umd::cs::findbugs::workflow::MineBugHistory
   function dump(PrintStream) in line 162
      protection public
      6 lines of code
      1 parameters
      4 conditional paths
      uses function dumpXml(PrintStream) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function dumpNoTabs(PrintStream) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function dumpSummary(PrintStream) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function dumpOriginal(PrintStream) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
   function dumpNoTabs(PrintStream) in line 245
      protection public
      45 lines of code
      1 parameters
      4 conditional paths
      uses function print(int,boolean,PrintStream,Object) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function getReleaseName() defined in edu::umd::cs::findbugs::AppVersion
      uses function getTimestamp() defined in edu::umd::cs::findbugs::AppVersion
      uses function getNumClasses() defined in edu::umd::cs::findbugs::AppVersion
      uses function getCodeSize() defined in edu::umd::cs::findbugs::AppVersion
   function dumpOriginal(PrintStream) in line 194
      protection public
      27 lines of code
      1 parameters
      5 conditional paths
      uses function getReleaseName() defined in edu::umd::cs::findbugs::AppVersion
      uses function getTimestamp() defined in edu::umd::cs::findbugs::AppVersion
      uses function getNumClasses() defined in edu::umd::cs::findbugs::AppVersion
      uses function getCodeSize() defined in edu::umd::cs::findbugs::AppVersion
   function dumpSummary(PrintStream) in line 169
      protection public
      23 lines of code
      1 parameters
      6 conditional paths
   function dumpXml(PrintStream) in line 292
      protection public
      45 lines of code
      1 parameters
      5 conditional paths
      uses function getReleaseName() defined in edu::umd::cs::findbugs::AppVersion
      uses function getTimestamp() defined in edu::umd::cs::findbugs::AppVersion
   function execute() in line 123
      protection public
      35 lines of code
      0 parameters
      8 conditional paths
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::BugCollection
      uses function appVersionIterator() defined in edu::umd::cs::findbugs::BugCollection
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::AppVersion
      uses function getCurrentAppVersion() defined in edu::umd::cs::findbugs::BugCollection
      uses function iterator() defined in edu::umd::cs::findbugs::BugCollection
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function isDead() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getKey(boolean,boolean) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function isRemovedByChangeOfPersistingClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function isIntroducedByChangeOfExistingClass() defined in edu::umd::cs::findbugs::BugInstance
   function getKey(boolean,boolean) in line 346
      6 lines of code
      2 parameters
      6 conditional paths
      uses function setFormatDates(boolean) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function setNoTabs() defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function setXml() defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function setSummary() defined in edu::umd::cs::findbugs::workflow::MineBugHistory
   function main(String[]) in line 380
      protection public
      27 lines of code
      1 parameters
      4 conditional paths
      uses function MineBugHistory() defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setBugCollection(BugCollection) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function execute() defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function dump(PrintStream) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
   function pad(int,PrintStream) in line 223
      3 lines of code
      2 parameters
      2 conditional paths
   function print(int,boolean,PrintStream,Object) in line 232
      7 lines of code
      4 parameters
      3 conditional paths
      uses function pad(int,PrintStream) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
   function setBugCollection(BugCollection) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFormatDates(boolean) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNoTabs() in line 105
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function setSummary() in line 115
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function setXml() in line 110
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function MineBugHistory() in line 91
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function MineBugHistory(BugCollection) in line 93
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::MineBugHistory::Version
   function getSequence() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::MineBugHistory::MineBugHistoryCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 363
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 374
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/workflow/PrintAppVersion.java
module edu::umd::cs::findbugs::workflow::PrintAppVersion
   function main(String[]) in line 30
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCurrentAppVersion() defined in edu::umd::cs::findbugs::SortedBugCollection
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/workflow/RebornIssues.java
module edu::umd::cs::findbugs::workflow::RebornIssues
   function execute() in line 57
      protection public
      39 lines of code
      0 parameters
      13 conditional paths
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
   function main(String[]) in line 110
      protection public
      18 lines of code
      1 parameters
      2 conditional paths
      uses function RebornIssues() defined in edu::umd::cs::findbugs::workflow::RebornIssues
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setBugCollection(BugCollection) defined in edu::umd::cs::findbugs::workflow::RebornIssues
      uses function execute() defined in edu::umd::cs::findbugs::workflow::RebornIssues
   function setBugCollection(BugCollection) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function RebornIssues() in line 45
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function RebornIssues(BugCollection) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::RebornIssues::CommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 100
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 105
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/workflow/RecursiveSearchForJavaFiles.java
module edu::umd::cs::findbugs::workflow::RecursiveSearchForJavaFiles
   function main(String) in line 29
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function search(File) defined in edu::umd::cs::findbugs::workflow::RecursiveSearchForJavaFiles
   function search(File) in line 33
      protection public
      22 lines of code
      1 parameters
      6 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/workflow/RejarClassesForAnalysis.java
module edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
   function advanceAuxilaryOut() in line 487
      4 lines of code
      0 parameters
      6 conditional paths
      uses function createZipFile(String) defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
   function copyEntry(ZipFile,ZipEntry,boolean,ZipOutputStream,boolean,ZipOutputStream) in line 465
      21 lines of code
      6 parameters
      7 conditional paths
   function createZipFile(String) in line 460
      4 lines of code
      1 parameters
      1 conditional paths
   function exclude(String) in line 257
      8 lines of code
      1 parameters
      2 conditional paths
   function execute() in line 265
      protection public
      189 lines of code
      0 parameters
      35 conditional paths
      uses function readFrom(@WillClose Reader) defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
      uses function readFromStandardInput() defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
      uses function exclude(String) defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
      uses function createZipFile(String) defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
      uses function getZipOutputFile(String) defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
      uses function advanceAuxilaryOut() defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
      uses function copyEntry(ZipFile,ZipEntry,boolean,ZipOutputStream,boolean,ZipOutputStream) defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
   function getZipOutputFile(String) in line 186
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function main(String) in line 244
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function RejarClassesForAnalysis(RejarClassesForAnalysisCommandLine,int,String[]) defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
      uses function execute() defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
   function readFrom(@WillClose Reader) in line 198
      protection public
      13 lines of code
      1 parameters
      5 conditional paths
   function readFromStandardInput() in line 180
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function readFrom(@WillClose Reader) defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
   function RejarClassesForAnalysis(RejarClassesForAnalysisCommandLine,int,String[]) in line 174
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis::RejarClassesForAnalysisCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 133
      3 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 145
      20 lines of code
      2 parameters
      1 conditional paths
   variable auxFileList in line 109
      protection public
   variable inputFileList in line 107
      protection public
module edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis::RejarClassesForAnalysisCommandLine::PatternMatcher
   function matches(String) in line 68
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis::RejarClassesForAnalysisCommandLine::PrefixMatcher
   function matches(String) in line 85
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function matchesEverything() in line 92
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis::ZipElementHandler
   function handle(ZipFile,ZipEntry) in line 521
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/workflow/SetBugDatabaseInfo.java
module edu::umd::cs::findbugs::workflow::SetBugDatabaseInfo
   function main(String[]) in line 132
      protection public
      106 lines of code
      1 parameters
      28 conditional paths
      uses variable USAGE defined in edu::umd::cs::findbugs::workflow::SetBugDatabaseInfo
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function setProjectName(String) defined in edu::umd::cs::findbugs::Project
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function setWithMessages(boolean) defined in edu::umd::cs::findbugs::BugCollection
      uses function setSuppressionFilter(Filter) defined in edu::umd::cs::findbugs::Project
      uses function getSourceDirList() defined in edu::umd::cs::findbugs::Project
      uses function getFileList() defined in edu::umd::cs::findbugs::Project
      uses function getAuxClasspathEntryList() defined in edu::umd::cs::findbugs::Project
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function clearMissingClasses() defined in edu::umd::cs::findbugs::BugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function writeXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   variable USAGE in line 54
module edu::umd::cs::findbugs::workflow::SetBugDatabaseInfo::SetInfoCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 92
      17 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 111
      18 lines of code
      2 parameters
      1 conditional paths
   variable searchSourcePaths in line 74
      protection public
   variable sourcePaths in line 72
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/workflow/SourceSearcher.java
module edu::umd::cs::findbugs::workflow::SourceSearcher
   function findSource(SourceLineAnnotation) in line 43
      protection public
      9 lines of code
      1 parameters
      4 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFinder defined in edu::umd::cs::findbugs::workflow::SourceSearcher
      uses function hasSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
   function findSource0(SourceLineAnnotation) in line 53
      protection public
      16 lines of code
      1 parameters
      5 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFinder defined in edu::umd::cs::findbugs::workflow::SourceSearcher
      uses function openSource(String,String) defined in edu::umd::cs::findbugs::ba::SourceFinder
   function SourceSearcher(Project) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceFinder defined in edu::umd::cs::findbugs::workflow::SourceSearcher
   variable sourceFinder in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/workflow/TreemapVisualization.java
module edu::umd::cs::findbugs::workflow::TreemapVisualization
   function addInteriorPackages(String) in line 41
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function superpackage(String) defined in edu::umd::cs::findbugs::workflow::TreemapVisualization
   function cleanCode(String,int,int) in line 63
      protection public
      11 lines of code
      3 parameters
      3 conditional paths
      uses function superpackage(String) defined in edu::umd::cs::findbugs::workflow::TreemapVisualization
      uses function add(E) defined in edu::umd::cs::findbugs::util::Bag
   function isInteriorPackage(String) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 74
      protection public
      40 lines of code
      1 parameters
      10 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function addInteriorPackages(String) defined in edu::umd::cs::findbugs::workflow::TreemapVisualization
      uses function cleanCode(String,int,int) defined in edu::umd::cs::findbugs::workflow::TreemapVisualization
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isInteriorPackage(String) defined in edu::umd::cs::findbugs::workflow::TreemapVisualization
      uses function getCount(E) defined in edu::umd::cs::findbugs::util::Bag
   function superpackage(String) in line 53
      6 lines of code
      1 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/workflow/UnionResults.java
module edu::umd::cs::findbugs::workflow::UnionResults
   function main(String[]) in line 87
      protection public
      40 lines of code
      1 parameters
      6 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function add(Project) defined in edu::umd::cs::findbugs::Project
      uses function getProject() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setWithMessages(boolean) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
module edu::umd::cs::findbugs::workflow::UnionResults::UnionResultsCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 53
      4 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 62
      4 lines of code
      2 parameters
      1 conditional paths
   variable outputFile in line 41
      protection public
module edu::umd::cs::findbugs::workflow::UnionResults::newCollection
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/workflow/Update.java
module edu::umd::cs::findbugs::workflow::Update
   function doit(String[]) in line 401
      protection public
      122 lines of code
      1 parameters
      26 conditional paths
      uses variable USAGE defined in edu::umd::cs::findbugs::workflow::Update
      uses function getFilePathParts(String) defined in edu::umd::cs::findbugs::workflow::Update
      uses function lengthCommonPrefix(String[],String[]) defined in edu::umd::cs::findbugs::workflow::Update
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function getReleaseName() defined in edu::umd::cs::findbugs::BugCollection
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function getAnalysisTimestamp() defined in edu::umd::cs::findbugs::BugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses function mergeCollections(BugCollection,BugCollection,boolean,boolean) defined in edu::umd::cs::findbugs::workflow::Update
      uses function setWithMessages(boolean) defined in edu::umd::cs::findbugs::BugCollection
      uses function writeXML(String) defined in edu::umd::cs::findbugs::BugCollection
   function getFilePathParts(String) in line 391
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function lengthCommonPrefix(String[],String[]) in line 526
      7 lines of code
      2 parameters
      3 conditional paths
   function main(String[]) in line 396
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function doit(String[]) defined in edu::umd::cs::findbugs::workflow::Update
   function matchBugs(BugCollection,BugCollection) in line 347
      41 lines of code
      2 parameters
      10 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::SortedBugCollection::BugInstanceComparator
      uses variable mapFromNewToOldBug defined in edu::umd::cs::findbugs::workflow::Update
      uses variable matchedOldBugs defined in edu::umd::cs::findbugs::workflow::Update
      uses function size(BugCollection) defined in edu::umd::cs::findbugs::workflow::Update
      uses function execute() defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses function isEmpty() defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses function setClassNameRewriter(ClassNameRewriter) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
      uses function setComparePriorities(boolean) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
      uses function setExactBugPatternMatch(boolean) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   function matchBugs(Comparator< BugInstance >,BugCollection,BugCollection,boolean,boolean) in line 543
      48 lines of code
      5 parameters
      15 conditional paths
      uses function size(BugCollection) defined in edu::umd::cs::findbugs::workflow::Update
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses variable matchedOldBugs defined in edu::umd::cs::findbugs::workflow::Update
      uses function getCurrentAppVersion() defined in edu::umd::cs::findbugs::BugCollection
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::AppVersion
      uses variable mapFromNewToOldBug defined in edu::umd::cs::findbugs::workflow::Update
      uses function isDead() defined in edu::umd::cs::findbugs::BugInstance
      uses function isRemovedByChangeOfPersistingClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
   function mergeBugHistory(BugInstance,BugInstance) in line 534
      7 lines of code
      2 parameters
      1 conditional paths
      uses function setFirstVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function setIntroducedByChangeOfExistingClass(boolean) defined in edu::umd::cs::findbugs::BugInstance
   function mergeCollections(BugCollection,BugCollection,boolean,boolean) in line 191
      protection public
      143 lines of code
      4 parameters
      19 conditional paths
      uses variable mapFromNewToOldBug defined in edu::umd::cs::findbugs::workflow::Update
      uses variable matchedOldBugs defined in edu::umd::cs::findbugs::workflow::Update
      uses function createEmptyCollectionWithMetadata() defined in edu::umd::cs::findbugs::BugCollection
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::BugCollection
      uses function clearAppVersions() defined in edu::umd::cs::findbugs::BugCollection
      uses function appVersionIterator() defined in edu::umd::cs::findbugs::BugCollection
      uses function addAppVersion(AppVersion) defined in edu::umd::cs::findbugs::BugCollection
      uses function clone() defined in edu::umd::cs::findbugs::AppVersion
      uses function getCurrentAppVersion() defined in edu::umd::cs::findbugs::BugCollection
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::AppVersion
      uses function getTimestamp() defined in edu::umd::cs::findbugs::AppVersion
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::AppVersion
      uses function getReleaseName() defined in edu::umd::cs::findbugs::AppVersion
      uses function setNumClasses(int) defined in edu::umd::cs::findbugs::AppVersion
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function getNumClasses() defined in edu::umd::cs::findbugs::ProjectStats
      uses function setCodeSize(int) defined in edu::umd::cs::findbugs::AppVersion
      uses function getCodeSize() defined in edu::umd::cs::findbugs::ProjectStats
      uses function setSequenceNumber(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function matchBugs(BugCollection,BugCollection) defined in edu::umd::cs::findbugs::workflow::Update
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses function clone() defined in edu::umd::cs::findbugs::BugInstance
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::BugCollection
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getSourceFileName() defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function setRemovedByChangeOfPersistingClass(boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function setLastVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses function isDead() defined in edu::umd::cs::findbugs::BugInstance
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function mergeBugHistory(BugInstance,BugInstance) defined in edu::umd::cs::findbugs::workflow::Update
      uses function getUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function merge(@CheckForNull BugDesignation) defined in edu::umd::cs::findbugs::BugDesignation
      uses function setUserDesignation(BugDesignation) defined in edu::umd::cs::findbugs::BugInstance
      uses function setFirstVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassStats(String) defined in edu::umd::cs::findbugs::ProjectStats
      uses function setIntroducedByChangeOfExistingClass(boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
   function removeBaselineBugs(BugCollection,BugCollection) in line 175
      protection public
      15 lines of code
      2 parameters
      3 conditional paths
      uses function matchBugs(BugCollection,BugCollection) defined in edu::umd::cs::findbugs::workflow::Update
      uses variable instance defined in edu::umd::cs::findbugs::SortedBugCollection::BugInstanceComparator
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses variable matchedOldBugs defined in edu::umd::cs::findbugs::workflow::Update
   function size(BugCollection) in line 335
      8 lines of code
      1 parameters
      2 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::BugCollection
   variable mapFromNewToOldBug in line 66
   variable matchedOldBugs in line 68
   variable USAGE in line 63
module edu::umd::cs::findbugs::workflow::Update::UpdateCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 110
      30 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 142
      13 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/XDocsBugReporter.java
module edu::umd::cs::findbugs::XDocsBugReporter
   inherits from edu::umd::cs::findbugs::TextUIBugReporter
   function doReportBug(BugInstance) in line 87
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function printBug(BugInstance) defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function notifyObservers(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function endDocument(Project) in line 120
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable root defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable ERRORS_ELEMENT_NAME defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable bugCollection defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function errorIterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable ANALYSIS_ERROR_ELEMENT_NAME defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function getMessage() defined in edu::umd::cs::findbugs::AnalysisError
      uses function missingClassIterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable MISSING_CLASS_ELEMENT_NAME defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable document defined in edu::umd::cs::findbugs::XDocsBugReporter
   function finish() in line 103
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function writeXML(OutputStream,Project) defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable project defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function logError(String) defined in edu::umd::cs::findbugs::XDocsBugReporter
   function logError(String) in line 71
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function addError(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function observeClass(ClassDescriptor) in line 67
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function printBug(BugInstance) in line 95
      7 lines of code
      1 parameters
      2 conditional paths
      uses function toElement(BugInstance) defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function logError(String) defined in edu::umd::cs::findbugs::XDocsBugReporter
   function reportMissingClass(ClassNotFoundException) in line 77
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function addMissingClass(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function toElement(BugInstance) in line 161
      protection public
      42 lines of code
      1 parameters
      7 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable root defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable FILE_ELEMENT_NAME defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function xmlEscape(String) defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function writeXML(OutputStream,Project) in line 113
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function endDocument(Project) defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable project defined in edu::umd::cs::findbugs::XDocsBugReporter
   function xmlEscape(String) in line 135
      25 lines of code
      1 parameters
      7 conditional paths
   function XDocsBugReporter(Project) in line 57
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable document defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable ROOT_ELEMENT_NAME defined in edu::umd::cs::findbugs::XDocsBugReporter
   variable ANALYSIS_ERROR_ELEMENT_NAME in line 49
   variable bugCollection in line 41
   variable document in line 43
   variable ELEMENT_NAME in line 53
   variable ERRORS_ELEMENT_NAME in line 48
   variable FILE_ELEMENT_NAME in line 54
   variable MISSING_CLASS_ELEMENT_NAME in line 50
   variable project in line 42
   variable PROJECT_ELEMENT_NAME in line 47
   variable root in line 44
   variable ROOT_ELEMENT_NAME in line 46
   variable SUMMARY_HTML_ELEMENT_NAME in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/xml/Dom4JXMLOutput.java
module edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   inherits from edu::umd::cs::findbugs::xml::XMLOutput
   function addAttribute(String,String) in line 88
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function beginDocument() in line 51
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function closeTag(String) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function finish() in line 152
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function openCloseTag(String) in line 72
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function openTag(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
      uses function closeTag(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function openCloseTag(String,XMLAttributeList) in line 77
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function openTag(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
      uses function closeTag(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function openTag(String) in line 54
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function openTag(String,XMLAttributeList) in line 60
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
      uses function iterator() defined in edu::umd::cs::findbugs::xml::XMLAttributeList
   function startTag(String) in line 82
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function stopTag(boolean) in line 93
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function closeTag(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function write(XMLWriteable) in line 133
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::xml::XMLWriteable
   function writeCDATA(String) in line 108
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function writeCollection(Collection<?extends XMLWriteable >) in line 146
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function write(XMLWriteable) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function writeElementList(String,Collection< String >) in line 120
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function openTag(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
      uses function writeText(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
      uses function closeTag(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function writeText(String) in line 103
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function Dom4JXMLOutput(Branch) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   variable stack in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/xml/MetaCharacterMap.java
module edu::umd::cs::findbugs::xml::MetaCharacterMap
   function addMeta(char,String) in line 52
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable metaCharacterSet defined in edu::umd::cs::findbugs::xml::MetaCharacterMap
      uses variable replacementMap defined in edu::umd::cs::findbugs::xml::MetaCharacterMap
   function MetaCharacterMap() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable metaCharacterSet in line 34
   variable replacementMap in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/xml/OutputStreamXMLOutput.java
module edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   inherits from edu::umd::cs::findbugs::xml::XMLOutput
   function addAttribute(String,String) in line 99
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function beginDocument() in line 70
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable OPENING defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses function getStylesheetCode(String) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable stylesheet defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable newLine defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function closeTag(String) in line 134
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable nestingLevel defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable newLine defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses function indent() defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function emitTag(String,boolean) in line 119
      4 lines of code
      2 parameters
      1 conditional paths
      uses function startTag(String) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses function stopTag(boolean) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function emitTag(String,String,boolean) in line 124
      9 lines of code
      3 parameters
      2 conditional paths
      uses function startTag(String) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses function stopTag(boolean) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function finish() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function getStylesheetCode(String) in line 38
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable stylesheet defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function indent() in line 161
      7 lines of code
      0 parameters
      3 conditional paths
      uses variable newLine defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable nestingLevel defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function openCloseTag(String) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function emitTag(String,boolean) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function openCloseTag(String,XMLAttributeList) in line 89
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function emitTag(String,boolean) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function openTag(String) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function emitTag(String,boolean) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function openTag(String,XMLAttributeList) in line 81
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function emitTag(String,boolean) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function startTag(String) in line 93
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function indent() defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable nestingLevel defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function stopTag(boolean) in line 108
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable nestingLevel defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable newLine defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function writeCDATA(String) in line 146
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable newLine defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function writeText(String) in line 142
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function OutputStreamXMLOutput(@WillCloseWhenClosed OutputStream) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function OutputStreamXMLOutput(@WillCloseWhenClosed OutputStream,String) in line 63
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable stylesheet defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   variable nestingLevel in line 46
   variable newLine in line 47
   variable OPENING in line 37
   variable out in line 45
   variable stylesheet in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/xml/QuoteMetaCharacters.java
module edu::umd::cs::findbugs::xml::QuoteMetaCharacters
   abstract class
   function emitLiteral(String) in line 74
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function findNextMeta(String,int) in line 76
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
   function process() in line 52
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses function findNextMeta(String,int) defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
      uses variable text defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
      uses function emitLiteral(String) defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
      uses variable map defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
   function QuoteMetaCharacters(@NonNull String,@NonNull MetaCharacterMap) in line 42
      protection public
      6 lines of code
      2 parameters
      3 conditional paths
      uses variable text defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
      uses variable map defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
   variable map in line 34
   variable text in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/xml/XMLAttributeList.java
module edu::umd::cs::findbugs::xml::XMLAttributeList
   function addAttribute(@NonNull String,@NonNull String) in line 72
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
      uses variable value defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
      uses variable nameValuePairList defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function NameValuePair(String,String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
   function addOptionalAttribute(@NonNull String,@CheckForNull String) in line 88
      protection public
      4 lines of code
      2 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable name defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
   function getQuotedAttributeValue(@NonNull String) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function iterator() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nameValuePairList defined in edu::umd::cs::findbugs::xml::XMLAttributeList
   function toString() in line 98
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses variable nameValuePairList defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getQuotedAttributeValue(@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
   function XMLAttributeList() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable nameValuePairList in line 55
module edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
   function getName() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
   function getValue() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
   function NameValuePair(String,String) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
      uses variable value defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
   variable name in line 37
   variable value in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/xml/XMLOutput.java
module edu::umd::cs::findbugs::xml::XMLOutput
   function addAttribute(String,String) in line 71
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function beginDocument() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function closeTag(String) in line 101
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function finish() in line 128
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function openCloseTag(String) in line 86
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function openCloseTag(String,XMLAttributeList) in line 94
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function openTag(String) in line 45
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function openTag(String,XMLAttributeList) in line 53
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function startTag(String) in line 62
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function stopTag(boolean) in line 79
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writeCDATA(String) in line 117
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writeText(String) in line 109
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/xml/XMLOutputUtil.java
module edu::umd::cs::findbugs::xml::XMLOutputUtil
   abstract class
   function writeCollection(XMLOutput,Collection<?extends XMLWriteable >) in line 99
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
   function writeElementList(XMLOutput,String,Iterable< String >) in line 42
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function writeElementList(XMLOutput,String,Iterator< String >) in line 55
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
   function writeFileList(XMLOutput,String,Iterable< File >) in line 71
      protection public
      5 lines of code
      3 parameters
      2 conditional paths
   function writeFileList(XMLOutput,String,Iterator< File >) in line 85
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/xml/XMLWriteable.java
module edu::umd::cs::findbugs::xml::XMLWriteable
   function writeXML(XMLOutput) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/xml/XPathFind.java
module edu::umd::cs::findbugs::xml::XPathFind
   abstract class
   function find(String) in line 52
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::xml::XPathFind
      uses function match(Node) defined in edu::umd::cs::findbugs::xml::XPathFind
   function main(String[]) in line 60
      protection public
      35 lines of code
      1 parameters
      5 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::xml::XPathFind
      uses function XPathFind(Document) defined in edu::umd::cs::findbugs::xml::XPathFind
      uses function match(Node) defined in edu::umd::cs::findbugs::xml::XPathFind
      uses function find(String) defined in edu::umd::cs::findbugs::xml::XPathFind
   function match(Node) in line 58
      1 lines of code
      1 parameters
      1 conditional paths
   function XPathFind(Document) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::xml::XPathFind
   variable document in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/XMLBugReporter.java
module edu::umd::cs::findbugs::XMLBugReporter
   inherits from edu::umd::cs::findbugs::BugCollectionBugReporter
   function finish() in line 42
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function writeXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setAddMessages(boolean) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function setWithMessages(boolean) defined in edu::umd::cs::findbugs::BugCollection
   function setMinimalXML(boolean) in line 56
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function setMinimalXML(boolean) defined in edu::umd::cs::findbugs::BugCollection
   function XMLBugReporter(Project) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::BugCollectionBugReporter
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java/edu/umd/cs/findbugs/XMLWriteableWithMessages.java
module edu::umd::cs::findbugs::XMLWriteableWithMessages
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   function writeXML(XMLOutput,boolean,boolean) in line 33
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/CheckForNull.java
module edu::umd::cs::findbugs::annotations::CheckForNull
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/CheckReturnValue.java
module edu::umd::cs::findbugs::annotations::CheckReturnValue
   function explanation() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function priority() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/CleanupObligation.java
module edu::umd::cs::findbugs::annotations::CleanupObligation
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/CreatesObligation.java
module edu::umd::cs::findbugs::annotations::CreatesObligation
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/DefaultAnnotation.java
module edu::umd::cs::findbugs::annotations::DefaultAnnotation
   function priority() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/DefaultAnnotationForFields.java
module edu::umd::cs::findbugs::annotations::DefaultAnnotationForFields
   function priority() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/DefaultAnnotationForMethods.java
module edu::umd::cs::findbugs::annotations::DefaultAnnotationForMethods
   function priority() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/DefaultAnnotationForParameters.java
module edu::umd::cs::findbugs::annotations::DefaultAnnotationForParameters
   function priority() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/DesireNoWarning.java
module edu::umd::cs::findbugs::annotations::DesireNoWarning
   function value() in line 23
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/DesireWarning.java
module edu::umd::cs::findbugs::annotations::DesireWarning
   function value() in line 21
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/DischargesObligation.java
module edu::umd::cs::findbugs::annotations::DischargesObligation
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/ExpectWarning.java
module edu::umd::cs::findbugs::annotations::ExpectWarning
   function value() in line 21
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/NonNull.java
module edu::umd::cs::findbugs::annotations::NonNull
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/NoWarning.java
module edu::umd::cs::findbugs::annotations::NoWarning
   function value() in line 22
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/Nullable.java
module edu::umd::cs::findbugs::annotations::Nullable
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/OverrideMustInvoke.java
module edu::umd::cs::findbugs::annotations::OverrideMustInvoke
   function value() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/PossiblyNull.java
module edu::umd::cs::findbugs::annotations::PossiblyNull
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/Priority.java
module edu::umd::cs::findbugs::annotations::Priority
   function getPriorityValue() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Priority(int) in line 36
      3 lines of code
      1 parameters
      1 conditional paths
   variable HIGH in line 28
      protection public
   variable IGNORE in line 28
      protection public
   variable LOW in line 28
      protection public
   variable MEDIUM in line 28
      protection public
   variable priorityValue in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/ReturnValuesAreNonnullByDefault.java
module edu::umd::cs::findbugs::annotations::ReturnValuesAreNonnullByDefault
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/SuppressWarnings.java
module edu::umd::cs::findbugs::annotations::SuppressWarnings
   function justification() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/UnknownNullness.java
module edu::umd::cs::findbugs::annotations::UnknownNullness
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/annotations/When.java
module edu::umd::cs::findbugs::annotations::When
   variable ANYTIME in line 26
      protection public
   variable FIRST in line 26
      protection public
   variable LAST in line 28
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/AnalysisCallback.java
module edu::umd::cs::findbugs::gui2::AnalysisCallback
   function analysisFinished(BugCollection) in line 30
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function analysisInterrupted() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/AnalyzingDialog.java
module edu::umd::cs::findbugs::gui2::AnalyzingDialog
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
   inherits from edu::umd::cs::findbugs::FindBugsProgress
   function cancel() in line 144
      9 lines of code
      0 parameters
      2 conditional paths
   function finishArchive() in line 187
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function finishClass() in line 192
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function finishPerClassAnalysis() in line 197
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function incrementCount() in line 159
      12 lines of code
      0 parameters
      1 conditional paths
   function initComponents() in line 100
      protection public
      43 lines of code
      0 parameters
      1 conditional paths
   function predictPassCount(int[]) in line 283
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function reportNumberOfArchives(int) in line 202
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function startAnalysis(int) in line 209
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function startArchive(String) in line 288
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function updateCount(final int,final int) in line 172
      14 lines of code
      2 parameters
      1 conditional paths
   function updateStage(String) in line 154
      4 lines of code
      1 parameters
      1 conditional paths
   function AnalyzingDialog(@NonNull final Project,final boolean) in line 59
      protection public
      19 lines of code
      2 parameters
      2 conditional paths
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
   function AnalyzingDialog(@NonNull Project,AnalysisCallback,boolean) in line 86
      protection public
      13 lines of code
      3 parameters
      4 conditional paths
      uses function showWaitCard() defined in edu::umd::cs::findbugs::gui2::MainFrame
   variable analysisFinished in line 47
   variable analysisThread in line 50
   variable callback in line 49
   variable cancelButton in line 57
   variable count in line 52
   variable goal in line 53
   variable progressBar in line 56
   variable project in line 48
   variable statusLabel in line 55
module edu::umd::cs::findbugs::gui2::AnalyzingDialog::AnalysisThread
   inherits from Thread
   function run() in line 226
      protection public
      25 lines of code
      0 parameters
      3 conditional paths
      uses function analysisInterrupted() defined in edu::umd::cs::findbugs::gui2::AnalysisCallback
      uses function analysisFinished(BugCollection) defined in edu::umd::cs::findbugs::gui2::AnalysisCallback
      uses variable newProject defined in edu::umd::cs::findbugs::gui2::MainFrame
   function scheduleDialogCleanup() in line 252
      10 lines of code
      0 parameters
      1 conditional paths
   function scheduleErrorDialog(final String,final String) in line 263
      14 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/BugAspects.java
module edu::umd::cs::findbugs::gui2::BugAspects
   inherits from Iterable
   function add(SortableValue) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function addToNew(SortableValue) in line 102
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function BugAspects() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function get(int) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function getCount() in line 83
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable count defined in edu::umd::cs::findbugs::gui2::BugAspects
   function getMatcher() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function getMatchingBugs(BugSet) in line 119
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function getBugsMatchingFilter(Matcher) defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function getStackedFilterMatcher() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function toString() defined in edu::umd::cs::findbugs::gui2::BugAspects
   function getStackedFilterMatcher() in line 111
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function iterator() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function last() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function setCount(int) in line 78
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable count defined in edu::umd::cs::findbugs::gui2::BugAspects
   function size() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function toString() in line 61
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable count defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function last() defined in edu::umd::cs::findbugs::gui2::BugAspects
   function BugAspects() in line 88
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function BugAspects(BugAspects) in line 93
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable count defined in edu::umd::cs::findbugs::gui2::BugAspects
   variable count in line 48
   variable lst in line 49
   variable serialVersionUID in line 47
module edu::umd::cs::findbugs::gui2::BugAspects::SortableValue
   function equals(Object) in line 141
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 135
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 150
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function SortableValue(Sortables,String) in line 128
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   variable key in line 125
      protection public
   variable value in line 126
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/BugLeafNode.java
module edu::umd::cs::findbugs::gui2::BugLeafNode
   function equals(Object) in line 80
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable bug defined in edu::umd::cs::findbugs::gui2::BugLeafNode
   function getBug() in line 42
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable bug defined in edu::umd::cs::findbugs::gui2::BugLeafNode
   function hashCode() in line 90
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable bug defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function hashCode() defined in edu::umd::cs::findbugs::BugInstance
   function matches(SortableValue) in line 55
      protection public
      23 lines of code
      1 parameters
      1 conditional paths
      uses variable bug defined in edu::umd::cs::findbugs::gui2::BugLeafNode
   function matches(BugAspects) in line 95
      protection public
      10 lines of code
      1 parameters
      4 conditional paths
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function matches(SortableValue) defined in edu::umd::cs::findbugs::gui2::BugLeafNode
   function toString() in line 48
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable bug defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function isDead() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMessageWithoutPrefix() defined in edu::umd::cs::findbugs::BugInstance
   variable bug in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/BugLoader.java
module edu::umd::cs::findbugs::gui2::BugLoader
   function combineBugHistories() in line 202
      protection public
      33 lines of code
      0 parameters
      4 conditional paths
      uses function showOpenDialog(Component) defined in edu::umd::cs::findbugs::gui2::FBFileChooser
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function mergeCollections(BugCollection,BugCollection,boolean,boolean) defined in edu::umd::cs::findbugs::workflow::Update
   function createEngine(@NonNull Project,BugReporter) in line 93
      15 lines of code
      2 parameters
      1 conditional paths
      uses function setBugReporter(BugReporter) defined in edu::umd::cs::findbugs::FindBugs2
      uses function setProject(Project) defined in edu::umd::cs::findbugs::FindBugs2
      uses function setDetectorFactoryCollection(DetectorFactoryCollection) defined in edu::umd::cs::findbugs::FindBugs2
      uses function setAnalysisFeatureSettings(AnalysisFeatureSetting[]) defined in edu::umd::cs::findbugs::FindBugs2
   function doAnalysis(@NonNull Project,FindBugsProgress) in line 71
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
      uses function setPriorityThreshold(int) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function createEngine(@NonNull Project,BugReporter) defined in edu::umd::cs::findbugs::gui2::BugLoader
      uses function setUserPreferences(UserPreferences) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function setProgressCallback(FindBugsProgress) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function setProjectName(String) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function execute() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
   function doAnalysis(@NonNull Project) in line 241
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
   function loadBugs(MainFrame,Project,File) in line 124
      protection public
      16 lines of code
      3 parameters
      3 conditional paths
      uses function setRequestDatabaseCloud(boolean) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function loadBugs(MainFrame,Project,URL) in line 140
      protection public
      19 lines of code
      3 parameters
      5 conditional paths
      uses function setRequestDatabaseCloud(boolean) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function softAdd(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable DEAD_BUG_MATCHER defined in edu::umd::cs::findbugs::filter::LastVersionMatcher
   function loadBugsHelper(BugCollection) in line 109
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::BugCollection
   function loadProject(MainFrame,File) in line 168
      protection public
      21 lines of code
      2 parameters
      3 conditional paths
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function softAdd(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable DEAD_BUG_MATCHER defined in edu::umd::cs::findbugs::filter::LastVersionMatcher
      uses function setGuiCallback(IGuiCallback) defined in edu::umd::cs::findbugs::Project
   function redoAnalysisKeepComments(@NonNull Project) in line 262
      protection public
      27 lines of code
      1 parameters
      6 conditional paths
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::BugCollection
      uses function mergeCollections(BugCollection,BugCollection,boolean,boolean) defined in edu::umd::cs::findbugs::workflow::Update
   function BugLoader() in line 190
      4 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::BugLoader::RedoAnalysisCallback
   inherits from edu::umd::cs::findbugs::gui2::AnalysisCallback
   function analysisFinished(BugCollection) in line 299
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function analysisInterrupted() in line 305
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/BugRenderer.java
module edu::umd::cs::findbugs::gui2::BugRenderer
   inherits from javax::swing::tree::DefaultTreeCellRenderer
   function getTreeCellRendererComponent(JTree,Object,boolean,boolean,boolean,int,boolean) in line 39
      protection public
      38 lines of code
      7 parameters
      10 conditional paths
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isDead() defined in edu::umd::cs::findbugs::BugInstance
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable IGNORE_PRIORITY defined in edu::umd::cs::findbugs::Priorities
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/BugSaver.java
module edu::umd::cs::findbugs::gui2::BugSaver
   function getLastPlaceSaved() in line 62
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable lastPlaceSaved defined in edu::umd::cs::findbugs::gui2::BugSaver
   function saveBugs(@WillClose OutputStream,BugCollection,Project) in line 41
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses function writeXML(String) defined in edu::umd::cs::findbugs::BugCollection
   function saveBugs(File,BugCollection,Project) in line 52
      protection public
      9 lines of code
      3 parameters
      2 conditional paths
      uses function saveBugs(@WillClose OutputStream,BugCollection,Project) defined in edu::umd::cs::findbugs::gui2::BugSaver
      uses variable lastPlaceSaved defined in edu::umd::cs::findbugs::gui2::BugSaver
   variable lastPlaceSaved in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/BugSet.java
module edu::umd::cs::findbugs::gui2::BugSet
   inherits from Iterable
   function clearCache() in line 311
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function contains(SortableValue) in line 236
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses variable doneContainsMap defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function filteredBugsCached() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function matches(SortableValue) defined in edu::umd::cs::findbugs::gui2::BugLeafNode
   function filteredBugsCached() in line 314
      6 lines of code
      0 parameters
      2 conditional paths
      uses function filteredBugsNoCache() defined in edu::umd::cs::findbugs::gui2::BugSet
   function filteredBugsNoCache() in line 299
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
   function get(int) in line 341
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function filteredBugsCached() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function getUnfiltered(int) defined in edu::umd::cs::findbugs::gui2::BugSet
   function getAll(Sortables) in line 74
      protection public
      4 lines of code
      1 parameters
      3 conditional paths
      uses variable doneMap defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable doneContainsMap defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function iterator() defined in edu::umd::cs::findbugs::BugCollection
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable mainBugSet defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses variable sortablesToStrings defined in edu::umd::cs::findbugs::gui2::BugSet
   function getBugsMatchingFilter(Matcher) in line 321
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
   function getMainBugSet() in line 64
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable mainBugSet defined in edu::umd::cs::findbugs::gui2::BugSet
   function getUnfiltered(int) in line 278
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
   function indexOf(BugLeafNode) in line 336
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function filteredBugsCached() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function indexOfUnfiltered(BugLeafNode) defined in edu::umd::cs::findbugs::gui2::BugSet
   function indexOfUnfiltered(BugLeafNode) in line 273
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
   function iterator() in line 283
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable doneMap defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable doneContainsMap defined in edu::umd::cs::findbugs::gui2::BugSet
   function query(BugAspects) in line 257
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
   function size() in line 331
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function filteredBugsCached() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function sizeUnfiltered() defined in edu::umd::cs::findbugs::gui2::BugSet
   function sizeUnfiltered() in line 268
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
   variable doneContainsMap in line 53
   variable doneMap in line 52
   variable EMPTY_STRING_ARRAY in line 131
   variable mainBugSet in line 57
   variable mainList in line 51
   variable sortablesToStrings in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/BugTreeModel.java
module edu::umd::cs::findbugs::gui2::BugTreeModel
   inherits from javax::swing::tree::TreeModel
   inherits from javax::swing::event::TableColumnModelListener
   inherits from javax::swing::event::TreeExpansionListener
   function addTreeModelListener(TreeModelListener) in line 264
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function branchOperations(ArrayList< String >,TreeModification) in line 771
      83 lines of code
      2 parameters
      24 conditional paths
      uses function resetData() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function add(SortableValue) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable root defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getIndexOfChild(Object,Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getChildCount(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function setCount(int) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugSet
   function clearViewCache() in line 153
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function clearCache() defined in edu::umd::cs::findbugs::gui2::BugSet
   function columnAdded(TableColumnModelEvent) in line 287
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable sortsAddedOrRemoved defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function columnMarginChanged(ChangeEvent) in line 676
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function columnMoved(final TableColumnModelEvent) in line 299
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable sortOrderChanged defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function columnRemoved(TableColumnModelEvent) in line 293
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable sortsAddedOrRemoved defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function columnSelectionChanged(ListSelectionEvent) in line 677
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function crawl(final ArrayList< BugAspects >,final int) in line 379
      protection public
      15 lines of code
      2 parameters
      7 conditional paths
      uses function getChildCount(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getChild(Object,int) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getPathToBug(BugInstance) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function crawlToOpen(TreePath,ArrayList< BugLeafNode >,ArrayList< TreePath >) in line 428
      protection public
      27 lines of code
      3 parameters
      7 conditional paths
      uses function getChildCount(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function isLeaf(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getChild(Object,int) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable tree defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function enumsThatExist(BugAspects) in line 214
      17 lines of code
      1 parameters
      3 conditional paths
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function last() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function getAll() defined in edu::umd::cs::findbugs::gui2::Sortables
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function finalize() in line 668
      7 lines of code
      0 parameters
      1 conditional paths
   function getChild(Object,int) in line 161
      protection public
      32 lines of code
      2 parameters
      6 conditional paths
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function get(int) defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable ASSERTIONS_ENABLED defined in edu::umd::cs::findbugs::SystemProperties
      uses function get(int) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function addToNew(SortableValue) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function enumsThatExist(BugAspects) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function setCount(int) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugSet
   function getChildCount(Object) in line 194
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function last() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function enumsThatExist(BugAspects) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function getIndexOfChild(Object,Object) in line 239
      protection public
      24 lines of code
      2 parameters
      4 conditional paths
      uses function isLeaf(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function indexOf(BugLeafNode) defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function enumsThatExist(BugAspects) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function getOffListenerList() in line 146
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function removeColumnModelListener(TableColumnModelListener) defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable tree defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function getPathToBug(BugInstance) in line 621
      protection public
      39 lines of code
      1 parameters
      8 conditional paths
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function add(SortableValue) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function getFrom(BugInstance) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses variable root defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getIndexOfChild(Object,Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getChild(Object,int) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function getPathToNewlyUnsuppressedBug(BugInstance) in line 661
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function resetData() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getPathToBug(BugInstance) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function getRoot() in line 156
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable root defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function getValues(Sortables) in line 275
      11 lines of code
      1 parameters
      2 conditional paths
      uses function getAllSorted() defined in edu::umd::cs::findbugs::gui2::Sortables
   function insertBranch(ArrayList< String >) in line 727
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function branchOperations(ArrayList< String >,TreeModification) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function isLeaf(Object) in line 232
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function needToRebuild() in line 307
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable sortOrderChanged defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable root defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function setCount(int) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function rebuild() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function rebuild() in line 326
      52 lines of code
      0 parameters
      5 conditional paths
      uses variable TRACE defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function freezeOrder() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function setRebuilding(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable rebuildingThread defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function setOldSelectedBugs() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function BugTreeModel(JTree,SorterTableColumnModel,BugSet) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function resetData() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable tree defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function newTree(final JTree,final BugTreeModel) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getOffListenerList() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function thawOrder() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function removeBranch(ArrayList< String >) in line 732
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function branchOperations(ArrayList< String >,TreeModification) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function removeTreeModelListener(TreeModelListener) in line 269
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function resetData() in line 457
      protection public
      5 lines of code
      0 parameters
      28 conditional paths
      uses variable TRACE defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable root defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function setCount(int) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function rebuild() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getIndexOfChild(Object,Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function isLeaf(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getChild(Object,int) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function restructureBranch(ArrayList< String >,boolean) in line 719
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function branchOperations(ArrayList< String >,TreeModification) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function setOldSelectedBugs() in line 685
      8 lines of code
      0 parameters
      5 conditional paths
      uses variable tree defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function isLeaf(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable sortOrderChanged defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable sortsAddedOrRemoved defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function rebuild() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function showWaitCard() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function sortBranch(TreePath) in line 737
      protection public
      24 lines of code
      1 parameters
      4 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getChildCount(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getChild(Object,int) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function treeCollapsed(TreeExpansionEvent) in line 682
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function treeExpanded(TreeExpansionEvent) in line 679
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function valueForPathChanged(TreePath,Object) in line 237
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function BugTreeModel(JTree,SorterTableColumnModel,BugSet) in line 100
      protection public
      36 lines of code
      3 parameters
      2 conditional paths
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function addColumnModelListener(TableColumnModelListener) defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable tree defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable root defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function setCount(int) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function addTreeModelListener(TreeModelListener) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function BugTreeModel(BugTreeModel) in line 137
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable root defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable tree defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   variable bugSet in line 88
   variable DEBUG in line 93
   variable listeners in line 89
   variable rebuildingThread in line 95
   variable root in line 86
   variable sortOrderChanged in line 96
   variable sortsAddedOrRemoved in line 97
   variable st in line 87
   variable TRACE in line 456
      protection public
   variable tree in line 90
module edu::umd::cs::findbugs::gui2::BugTreeModel::MyFilterListener
   inherits from edu::umd::cs::findbugs::gui2::FilterListener
   function clearCache() in line 465
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function suppressBug(TreePath) in line 541
      protection public
      59 lines of code
      1 parameters
      1 conditional paths
   function unsuppressBug(TreePath) in line 475
      protection public
      65 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::BugTreeModel::BranchOperationException
   inherits from Exception
   function BranchOperationException(String) in line 765
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::BugTreeModel::TreeModification
   variable INSERT in line 770
      protection public
   variable INSERTRESTRUCTURE in line 770
      protection public
   variable REMOVE in line 770
      protection public
   variable REMOVERESTRUCTURE in line 770
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/CheckBoxList.java
module edu::umd::cs::findbugs::gui2::CheckBoxList
   inherits from javax::swing::JList
   function setEnabled(boolean) in line 75
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function CheckBoxList() in line 45
      protection public
      22 lines of code
      0 parameters
      2 conditional paths
   function CheckBoxList(Object[]) in line 68
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   variable noFocusBorder in line 43
module edu::umd::cs::findbugs::gui2::CheckBoxList::CellRenderer
   inherits from javax::swing::ListCellRenderer
   function getListCellRendererComponent(JList,Object,int,boolean,boolean) in line 85
      protection public
      13 lines of code
      5 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/ClearGuiSaveState.java
module edu::umd::cs::findbugs::gui2::ClearGuiSaveState
   function main(String) in line 30
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/CommentsArea.java
module edu::umd::cs::findbugs::gui2::CommentsArea
   function addToPrevComments(String) in line 492
      18 lines of code
      1 parameters
      5 conditional paths
      uses variable prevCommentsMaxSize defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function resetPrevCommentsComboBox() defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function changeDesignationOfBug(BugLeafNode,String) in line 631
      9 lines of code
      2 parameters
      2 conditional paths
      uses function saveComments() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function getUserDesignationKey() defined in edu::umd::cs::findbugs::BugInstance
      uses function setUserDesignationKey(String,@CheckForNull BugCollection) defined in edu::umd::cs::findbugs::BugInstance
   function configureForCurrentCloud() in line 855
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getCloud() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable fileBug defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function supportsBugLinks() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function resetCommentsInputPane() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function confirmAnnotation() in line 385
      24 lines of code
      0 parameters
      5 conditional paths
      uses variable dontShowAnnotationConfirmation defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function convertDesignationNameToDesignationKey(String) in line 799
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable designationComboBox defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable designationKeys defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function getCloud() in line 843
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
   function getCurrentPrevCommentsSelection() in line 551
      4 lines of code
      0 parameters
      11 conditional paths
      uses variable prevCommentsComboBox defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function setDesignationNonLeaf(String) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function convertDesignationNameToDesignationKey(String) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function getUserDesignationKey() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function supportsClaims() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function claimedBy(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getUser() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function changeDesignationOfBug(BugLeafNode,String) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function supportsCloudReports() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getCloudReport(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable reportText defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable changed defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function setDesignationComboBox(String) defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function getCurrentUserCommentsText() in line 534
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable userCommentsText defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function getMainFrame() in line 851
      3 lines of code
      0 parameters
      1 conditional paths
   function getNonLeafCommentsText(BugAspects) in line 700
      19 lines of code
      1 parameters
      6 conditional paths
      uses function getMatchingBugs(BugSet) defined in edu::umd::cs::findbugs::gui2::BugAspects
   function hasFocus() in line 836
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable userCommentsText defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function moveNodeAccordingToDesignation(BugLeafNode,String) in line 735
      protection public
      61 lines of code
      2 parameters
      11 conditional paths
      uses variable DESIGNATION defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function setUserDesignationKey(String,@CheckForNull BugCollection) defined in edu::umd::cs::findbugs::BugInstance
      uses function getPathToBug(BugInstance) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function suppressBug(TreePath) defined in edu::umd::cs::findbugs::gui2::FilterListener
      uses function unsuppressBug(TreePath) defined in edu::umd::cs::findbugs::gui2::FilterListener
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function sortBranch(TreePath) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function resetPrevCommentsComboBox() in line 516
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable prevCommentsComboBox defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function resized() in line 827
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function resetPrevCommentsComboBox() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable userCommentsText defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function saveComments() in line 433
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function saveComments(BugLeafNode,BugAspects) in line 438
      protection public
      6 lines of code
      2 parameters
      10 conditional paths
      uses function saveCommentsToBug(BugLeafNode) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function saveCommentsToNonLeaf(BugAspects) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable prevCommentsMaxSize defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function resetPrevCommentsComboBox() defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function saveCommentsToBug(BugLeafNode) in line 370
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getCurrentUserCommentsText() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function getAnnotationText() defined in edu::umd::cs::findbugs::BugInstance
      uses function setAnnotationText(String,@CheckForNull BugCollection) defined in edu::umd::cs::findbugs::BugInstance
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable changed defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function addToPrevComments(String) defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function saveCommentsToNonLeaf(BugAspects) in line 410
      17 lines of code
      1 parameters
      6 conditional paths
      uses variable changed defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getCurrentUserCommentsText() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getNonLeafCommentsText(BugAspects) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function confirmAnnotation() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getMatchingBugs(BugSet) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function saveCommentsToBug(BugLeafNode) defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function setCurrentUserCommentsText(String) in line 543
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable changed defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable userCommentsText defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function setDesignationComboBox(String) in line 720
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable designationComboBox defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable designationKeys defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
   function setDesignationNonLeaf(String) in line 608
      22 lines of code
      1 parameters
      6 conditional paths
      uses function convertDesignationNameToDesignationKey(String) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getMainFrame() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function getMode() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable VOTING defined in edu::umd::cs::findbugs::cloud::Cloud::Mode
      uses function getMatchingBugs(BugSet) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function changeDesignationOfBug(BugLeafNode,String) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable changed defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function setDesignationComboBox(String) defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function setProjectChanged(boolean) in line 814
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
   function updateCommentsFromNonLeafInformationFromSwingThread(BugAspects) in line 664
      35 lines of code
      1 parameters
      8 conditional paths
      uses function getMatchingBugs(BugSet) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable designationKeys defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable designationComboBox defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable userCommentsText defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getNonLeafCommentsText(BugAspects) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getCloud() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getMode() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable VOTING defined in edu::umd::cs::findbugs::cloud::Cloud::Mode
      uses variable fileBug defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable changed defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function updateDesignationComboBox() in line 641
      21 lines of code
      0 parameters
      4 conditional paths
      uses function updateCommentsFromNonLeafInformationFromSwingThread(BugAspects) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getMainFrame() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function canStoreUserAnnotation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable designationComboBox defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function setDesignationComboBox(String) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable designationKeys defined in edu::umd::cs::findbugs::gui2::CommentsArea
   variable changed in line 80
   variable designationComboBox in line 66
   variable designationKeys in line 68
   variable dontShowAnnotationConfirmation in line 78
   variable fileBug in line 70
   variable prevCommentsComboBox in line 76
   variable prevCommentsMaxSize in line 74
   variable reportText in line 62
   variable userCommentsText in line 61
   variable userCommentsTextUnenabledColor in line 64
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/DeadBugFilter.java
module edu::umd::cs::findbugs::gui2::DeadBugFilter
   inherits from edu::umd::cs::findbugs::gui2::FilterMatcher
   function match(BugInstance) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 39
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function DeadBugFilter(Sortables,String,FilterWhere) in line 34
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable mode defined in edu::umd::cs::findbugs::gui2::FilterMatcher
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/DisplayNonmodelMessage.java
module edu::umd::cs::findbugs::gui2::DisplayNonmodelMessage
   function displayNonmodelMessage(String,String,@CheckForNull Component,boolean) in line 50
      protection public
      45 lines of code
      4 parameters
      8 conditional paths
   function main(String) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function displayNonmodelMessage(String,String,@CheckForNull Component,boolean) defined in edu::umd::cs::findbugs::gui2::DisplayNonmodelMessage
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/Driver.java
module edu::umd::cs::findbugs::gui2::Driver
   function getAnalysisSettingList() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable commandLine defined in edu::umd::cs::findbugs::gui2::Driver
      uses function getSettingList() defined in edu::umd::cs::findbugs::FindBugsCommandLine
   function getFontSize() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable commandLine defined in edu::umd::cs::findbugs::gui2::Driver
      uses function getFontSize() defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function getPriority() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable commandLine defined in edu::umd::cs::findbugs::gui2::Driver
      uses function getPriority() defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function isDocking() in line 134
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable commandLine defined in edu::umd::cs::findbugs::gui2::Driver
      uses function getDocking() defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function main(String[]) in line 45
      protection public
      71 lines of code
      1 parameters
      10 conditional paths
      uses variable splash defined in edu::umd::cs::findbugs::gui2::Driver
      uses function setVisible(boolean) defined in edu::umd::cs::findbugs::gui2::SplashFrame
      uses variable commandLine defined in edu::umd::cs::findbugs::gui2::Driver
      uses function parse(String,int,int,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable USAGE defined in edu::umd::cs::findbugs::gui2::Driver
      uses function loadProject(String) defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function setSaveFile(File) defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
      uses function printUsage(OutputStream) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function getDocking() defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
      uses function setDocking(boolean) defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
      uses function isFontSizeSpecified() defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
      uses function setFontSize(float) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getFontSize() defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
      uses function isDocking() defined in edu::umd::cs::findbugs::gui2::Driver
   function removeSplashScreen() in line 117
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
      uses variable splash defined in edu::umd::cs::findbugs::gui2::Driver
      uses function setVisible(boolean) defined in edu::umd::cs::findbugs::gui2::SplashFrame
      uses variable commandLine defined in edu::umd::cs::findbugs::gui2::Driver
      uses function getSaveFile() defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
      uses function openAnalysis(File,SaveType) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function isProjectLoadedFromFile() defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getProject() defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses variable newProject defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable redoAnalysis defined in edu::umd::cs::findbugs::gui2::MainFrame
   variable commandLine in line 42
   variable splash in line 43
   variable START_TIME in line 39
   variable USAGE in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/FBDialog.java
module edu::umd::cs::findbugs::gui2::FBDialog
   inherits from javax::swing::JDialog
   function addNotify() in line 74
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function setFontSize(float) in line 53
      5 lines of code
      1 parameters
      1 conditional paths
   function setFontSizeHelper(Component[],float) in line 62
      10 lines of code
      2 parameters
      4 conditional paths
   function FBDialog() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FBDialog(Frame) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function FBDialog(Dialog) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/FBFileChooser.java
module edu::umd::cs::findbugs::gui2::FBFileChooser
   inherits from javax::swing::JFileChooser
   function addNotify() in line 68
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setFontSize(float) defined in edu::umd::cs::findbugs::gui2::FBFileChooser
   function setFontSize(float) in line 47
      5 lines of code
      1 parameters
      1 conditional paths
      uses function setFontSizeHelper(Component[],float) defined in edu::umd::cs::findbugs::gui2::FBFileChooser
   function setFontSizeHelper(Component[],float) in line 56
      10 lines of code
      2 parameters
      4 conditional paths
   function showDialog(Component,String) in line 114
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function workAroundJFileChooserBug() defined in edu::umd::cs::findbugs::gui2::FBFileChooser
      uses function setStarterDirectoryForLoadBugs(File) defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function showOpenDialog(Component) in line 89
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function workAroundJFileChooserBug() defined in edu::umd::cs::findbugs::gui2::FBFileChooser
      uses function setStarterDirectoryForLoadBugs(File) defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function showSaveDialog(Component) in line 102
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function workAroundJFileChooserBug() defined in edu::umd::cs::findbugs::gui2::FBFileChooser
      uses function setStarterDirectoryForLoadBugs(File) defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function workAroundJFileChooserBug() in line 74
      13 lines of code
      0 parameters
      2 conditional paths
   function FBFileChooser() in line 37
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getStarterDirectoryForLoadBugs() defined in edu::umd::cs::findbugs::gui2::GUISaveState
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/FBFrame.java
module edu::umd::cs::findbugs::gui2::FBFrame
   inherits from javax::swing::JFrame
   function addNotify() in line 63
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
   function setFontSize(float) in line 35
      5 lines of code
      1 parameters
      1 conditional paths
   function setFontSizeHelper(Component[],float) in line 47
      3 lines of code
      2 parameters
      1 conditional paths
   function setFontSizeHelper(float,Component...) in line 54
      7 lines of code
      2 parameters
      3 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/FilterActivity.java
module edu::umd::cs::findbugs::gui2::FilterActivity
   function addFilterListener(FilterListener) in line 37
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function notifyListeners(FilterListener.Action,@CheckForNull TreePath) in line 47
      protection public
      19 lines of code
      2 parameters
      8 conditional paths
   function removeFilterListener(FilterListener) in line 42
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/FilterFactory.java
module edu::umd::cs::findbugs::gui2::FilterFactory
   function makeAndMatcher(Collection< SortableValue >) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function makeMatcher(Collection< SortableValue >,boolean) defined in edu::umd::cs::findbugs::gui2::FilterFactory
   function makeMatcher(Collection< SortableValue >,boolean) in line 50
      15 lines of code
      2 parameters
      5 conditional paths
   function makeMatcher(Collection< Sortables >,BugInstance) in line 66
      protection public
      10 lines of code
      2 parameters
      4 conditional paths
      uses function makeMatcher(Collection< SortableValue >,boolean) defined in edu::umd::cs::findbugs::gui2::FilterFactory
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function makeMatcher(Sortables,BugInstance) in line 82
      34 lines of code
      2 parameters
      12 conditional paths
      uses function getFrom(BugInstance) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses variable EQ defined in edu::umd::cs::findbugs::filter::RelationalOp
      uses variable CLASS defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
   function makeMatcher(SortableValue) in line 117
      32 lines of code
      1 parameters
      11 conditional paths
      uses variable EQ defined in edu::umd::cs::findbugs::filter::RelationalOp
   function makeOrMatcher(Collection< SortableValue >) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function makeMatcher(Collection< SortableValue >,boolean) defined in edu::umd::cs::findbugs::gui2::FilterFactory
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/FilterListener.java
module edu::umd::cs::findbugs::gui2::FilterListener
   function clearCache() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function suppressBug(TreePath) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function unsuppressBug(TreePath) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::FilterListener::Action
   variable FILTERING in line 30
      protection public
   variable SUPPRESSING in line 30
      protection public
   variable UNFILTERING in line 30
      protection public
   variable UNSUPPRESSING in line 30
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/FilterMatcher.java
module edu::umd::cs::findbugs::gui2::FilterMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   inherits from java::io::Serializable
   inherits from Comparable
   function compareTo(FilterMatcher) in line 143
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function equals(Object) in line 127
      protection public
      9 lines of code
      1 parameters
      4 conditional paths
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function hashCode() in line 138
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function isActive() in line 87
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable active defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function match(BugInstance) in line 92
      protection public
      20 lines of code
      1 parameters
      6 conditional paths
      uses variable active defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses function getComparator() defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function compare(String,String) defined in edu::umd::cs::findbugs::gui2::SortableStringComparator
      uses function getFrom(BugInstance) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable mode defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function setActive(boolean) in line 75
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable active defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
      uses variable UNFILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
   function toString() in line 114
      protection public
      11 lines of code
      0 parameters
      5 conditional paths
      uses variable mode defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses function toString() defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function formatValue(String) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function writeXML(XMLOutput,boolean) in line 151
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function FilterMatcher(SortableValue) in line 45
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function FilterMatcher(Sortables,String,FilterWhere) in line 60
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable mode defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function FilterMatcher(Sortables,String) in line 68
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   variable active in line 44
   variable filterBy in line 41
   variable mode in line 43
   variable serialVersionUID in line 39
   variable value in line 42
module edu::umd::cs::findbugs::gui2::FilterMatcher::FilterWhere
   variable FILTER_ALL_BUT in line 38
      protection public
   variable FILTER_AT_OR_AFTER in line 38
      protection public
   variable FILTER_AT_OR_BEFORE in line 38
      protection public
   variable FILTER_EXACTLY in line 38
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/FindBugsAnalysisFileFilter.java
module edu::umd::cs::findbugs::gui2::FindBugsAnalysisFileFilter
   inherits from edu::umd::cs::findbugs::gui2::FindBugsFileFilter
   function accept(File) in line 28
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function getDescription() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/FindBugsFBAFileFilter.java
module edu::umd::cs::findbugs::gui2::FindBugsFBAFileFilter
   inherits from edu::umd::cs::findbugs::gui2::FindBugsFileFilter
   function accept(File) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDescription() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FindBugsFBAFileFilter() in line 28
      1 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/FindBugsFBPFileFilter.java
module edu::umd::cs::findbugs::gui2::FindBugsFBPFileFilter
   inherits from edu::umd::cs::findbugs::gui2::FindBugsFileFilter
   function accept(File) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDescription() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FindBugsFBPFileFilter() in line 28
      1 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/FindBugsFileFilter.java
module edu::umd::cs::findbugs::gui2::FindBugsFileFilter
   inherits from javax::swing::filechooser::FileFilter
   abstract class
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/FindBugsFilterFileFilter.java
module edu::umd::cs::findbugs::gui2::FindBugsFilterFileFilter
   inherits from javax::swing::filechooser::FileFilter
   function accept(File) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDescription() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 28
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/FindBugsLayoutManager.java
module edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
   function createWindowMenu() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSourceViewComponent() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function initialize() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function makeCommentsVisible() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function makeSourceVisible() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function resetCommentsInputPane() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function saveState() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setSourceTitle(String) in line 42
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/FindBugsLayoutManagerFactory.java
module edu::umd::cs::findbugs::gui2::FindBugsLayoutManagerFactory
   function getInstance(MainFrame) in line 32
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
   function FindBugsLayoutManagerFactory(String) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/FindBugsProjectFileFilter.java
module edu::umd::cs::findbugs::gui2::FindBugsProjectFileFilter
   inherits from edu::umd::cs::findbugs::gui2::FindBugsFileFilter
   function accept(File) in line 30
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function getDescription() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/GUI2CommandLine.java
module edu::umd::cs::findbugs::gui2::GUI2CommandLine
   inherits from edu::umd::cs::findbugs::FindBugsCommandLine
   function getDocking() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable docking defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function getFontSize() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fontSize defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function getPriority() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function getSaveFile() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable saveFile defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function handleOption(String,String) in line 46
      36 lines of code
      2 parameters
      9 conditional paths
      uses variable docking defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function handleOptionWithArgument(String,String) in line 84
      24 lines of code
      2 parameters
      7 conditional paths
      uses variable fontSize defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
      uses variable fontSizeSpecified defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
      uses variable priority defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
      uses variable saveFile defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function isFontSizeSpecified() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fontSizeSpecified defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function setDocking(boolean) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable docking defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function setSaveFile(File) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable saveFile defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function GUI2CommandLine() in line 39
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   variable docking in line 35
   variable fontSize in line 33
   variable fontSizeSpecified in line 34
   variable priority in line 36
   variable saveFile in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/GUISaveState.java
module edu::umd::cs::findbugs::gui2::GUISaveState
   function addRecentFile(File) in line 189
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable recentFiles defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function fileNotFound(File) in line 207
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable recentFiles defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function fileReused(File) in line 173
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable recentFiles defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function generateSorterKeys(int) in line 138
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable useDefault defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable starterTable defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable DEFAULT_COLUMN_HEADERS defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getDockingLayout() in line 128
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable dockingLayout defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getFontSize() in line 406
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fontSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getFrameBounds() in line 392
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable frameBounds defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getInstance() in line 163
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function GUISaveState() defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getPackagePrefixSegments() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable packagePrefixSegments defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getPreviousComments() in line 378
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable previousComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getRecentFiles() in line 198
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable recentFiles defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getSplitMain() in line 420
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable splitMain defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getSplitSummary() in line 434
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable splitSummary defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getSplitTop() in line 448
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable splitTop defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getSplitTreeComments() in line 462
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable splitTreeComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getStarterDirectoryForLoadBugs() in line 222
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable starterDirectoryForLoadBugs defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getTabSize() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tabSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function loadInstance() in line 234
      protection public
      74 lines of code
      0 parameters
      17 conditional paths
      uses function GUISaveState() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable recentFiles defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable tabSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable TAB_SIZE defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable fontSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable FONT_SIZE defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable starterDirectoryForLoadBugs defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable STARTERDIRECTORY defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable PREVCOMMENTSSIZE defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable COMMENTKEYS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable previousComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable MAXNUMRECENTPROJECTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable NUMPROJECTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function addRecentFile(File) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable RECENTPROJECTKEYS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SORTERTABLELENGTH defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function generateSorterKeys(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable useDefault defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable starterTable defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable dockingLayout defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable DOCKINGLAYOUT defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable FRAME_BOUNDS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable frameBounds defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitMain defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_MAIN defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitSummary defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_SUMMARY defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitTop defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_TOP defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitTreeComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_TREE_COMMENTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable packagePrefixSegments defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable PACKAGE_PREFIX_SEGEMENTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable instance defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function save() in line 309
      protection public
      54 lines of code
      0 parameters
      7 conditional paths
      uses variable TAB_SIZE defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable tabSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable FONT_SIZE defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable fontSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable STARTERDIRECTORY defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable starterDirectoryForLoadBugs defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getColumnCount() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable SORTERTABLELENGTH defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function generateSorterKeys(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable PREVCOMMENTSSIZE defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable previousComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable COMMENTKEYS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable recentFiles defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable MAXNUMRECENTPROJECTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable NUMPROJECTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable RECENTPROJECTKEYS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable DOCKINGLAYOUT defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable dockingLayout defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable FRAME_BOUNDS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable frameBounds defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_MAIN defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitMain defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_SUMMARY defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitSummary defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_TOP defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitTop defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_TREE_COMMENTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitTreeComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable PACKAGE_PREFIX_SEGEMENTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable packagePrefixSegments defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable instance defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function GUISaveState() defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setDockingLayout(byte[]) in line 133
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable dockingLayout defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setFontSize(float) in line 413
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fontSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setFrameBounds(Rectangle) in line 399
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable frameBounds defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setPackagePrefixSegments(int) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable packagePrefixSegments defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setPreviousComments(LinkedList< String >) in line 385
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable previousComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setSplitMain(int) in line 427
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable splitMain defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setSplitSummary(int) in line 441
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable splitSummary defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setSplitTop(int) in line 455
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable splitTop defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setSplitTreeComments(int) in line 469
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable splitTreeComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setStarterDirectoryForLoadBugs(File) in line 229
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setTabSize(int) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tabSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function GUISaveState() in line 156
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable recentFiles defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable previousComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
   variable COMMENTKEYS in line 69
   variable DEFAULT_COLUMN_HEADERS in line 55
   variable DOCKINGLAYOUT in line 50
   variable dockingLayout in line 101
   variable FONT_SIZE in line 106
   variable fontSize in line 107
   variable FRAME_BOUNDS in line 51
   variable frameBounds in line 102
   variable instance in line 45
   variable MAXNUMPREVCOMMENTS in line 68
   variable MAXNUMRECENTANALYSES in line 54
   variable MAXNUMRECENTPROJECTS in line 53
   variable NUMANALYSES in line 79
   variable NUMPROJECTS in line 78
   variable PACKAGE_PREFIX_SEGEMENTS in line 110
   variable packagePrefixSegments in line 108
   variable PREFERENCESDIRECTORY in line 49
   variable PREVCOMMENTSSIZE in line 48
   variable previousComments in line 96
   variable RECENTANALYSISKEYS in line 59
   variable recentFiles in line 99
   variable RECENTPROJECTKEYS in line 58
   variable SORTERTABLELENGTH in line 47
   variable SPLIT_MAIN in line 82
   variable SPLIT_SUMMARY in line 85
   variable SPLIT_TOP in line 84
   variable SPLIT_TREE_COMMENTS in line 83
   variable splitMain in line 87
   variable splitSummary in line 90
   variable splitTop in line 89
   variable splitTreeComments in line 88
   variable STARTERDIRECTORY in line 80
   variable starterDirectoryForLoadBugs in line 92
   variable starterTable in line 98
   variable TAB_SIZE in line 104
   variable tabSize in line 105
   variable useDefault in line 97
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/HelpDialog.java
module edu::umd::cs::findbugs::gui2::HelpDialog
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/MainFrame.java
module edu::umd::cs::findbugs::gui2::MainFrame
   inherits from edu::umd::cs::findbugs::gui2::FBFrame
   inherits from edu::umd::cs::findbugs::gui::LogSync
   inherits from edu::umd::cs::findbugs::IGuiCallback
   function addFileToRecent(File,SaveType) in line 2996
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getRecentFiles() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function addRecentFile(File) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable recentMenuCache defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function addRecentFile(final File) defined in edu::umd::cs::findbugs::gui2::RecentMenu
   function addNavItem(final ActionMap,JMenu,String,String,String,int) in line 1096
      6 lines of code
      6 parameters
      12 conditional paths
      uses function getFileList() defined in edu::umd::cs::findbugs::Project
   function addNotify() in line 2575
      protection public
      20 lines of code
      0 parameters
      3 conditional paths
   function bugSummaryComponent(String,BugInstance) in line 2142
      9 lines of code
      2 parameters
      1 conditional paths
   function bugSummaryComponent(BugAnnotation,BugInstance) in line 2152
      64 lines of code
      2 parameters
      14 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function toString() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceLines() defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
      uses function toString(ClassAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function toString(ClassAnnotation) defined in edu::umd::cs::findbugs::BugAnnotation
   function changeTitle() in line 569
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable UNNAMED_PROJECT defined in edu::umd::cs::findbugs::Project
   function clearSummaryTab() in line 2087
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getSplitSummary() defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function convertFile(File,SaveType) in line 1550
      11 lines of code
      2 parameters
      3 conditional paths
   function convertFilterToType(FileFilter) in line 1524
      6 lines of code
      1 parameters
      2 conditional paths
   function createBranchPopUpMenu() in line 634
      72 lines of code
      0 parameters
      4 conditional paths
      uses function getInstance() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getMatcher() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function getProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
      uses function getBugTreeModel() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getIndexOfChild(Object,Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getUserDesignationKeys() defined in edu::umd::cs::findbugs::I18N
      uses function getUserDesignation(String) defined in edu::umd::cs::findbugs::I18N
   function createBugPopupMenu() in line 582
      31 lines of code
      0 parameters
      4 conditional paths
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function getInstance() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getUserDesignationKeys() defined in edu::umd::cs::findbugs::I18N
      uses function getUserDesignation(String) defined in edu::umd::cs::findbugs::I18N
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Filter
   function createMainMenuBar() in line 711
      227 lines of code
      0 parameters
      12 conditional paths
      uses function createWindowMenu() defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
      uses variable noAnalysis defined in edu::umd::cs::findbugs::FindBugs
      uses function setVisible(boolean) defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses function makeSourceVisible() defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
      uses function showLine(int) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getUserDesignationKeys() defined in edu::umd::cs::findbugs::I18N
      uses function getUserDesignation(String) defined in edu::umd::cs::findbugs::I18N
   function displayCloudReport() in line 3109
      protection public
      14 lines of code
      0 parameters
      2 conditional paths
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function printCloudSummary(PrintWriter,Iterable< BugInstance >,String[]) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getPackagePrefixes() defined in edu::umd::cs::findbugs::gui2::ViewFilter
   function displayNonmodelMessage(String,String) in line 3104
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function error(String) in line 2764
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function exportFilter() in line 1352
      48 lines of code
      0 parameters
      8 conditional paths
      uses function showSaveDialog(Component) defined in edu::umd::cs::findbugs::gui2::FBFileChooser
      uses function writeEnabledMatchersAsXML(@WillClose OutputStream) defined in edu::umd::cs::findbugs::filter::Filter
   function fileAlreadyExists(File,SaveType) in line 1536
      10 lines of code
      2 parameters
      2 conditional paths
   function getActionWithoutSavingMsg(String) in line 365
      6 lines of code
      1 parameters
      15 conditional paths
      uses function fileNotFound(File) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function fileReused(File) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable recentMenuCache defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function addRecentFile(final File) defined in edu::umd::cs::findbugs::gui2::RecentMenu
      uses function getInstance() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
   function getBugTreeModel() in line 2601
      protection public
      3 lines of code
      0 parameters
      4 conditional paths
   function getDisplayedBugs() in line 3124
      protection public
      7 lines of code
      0 parameters
      5 conditional paths
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
   function getInstance() in line 266
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
   function getProgressMonitorInputStream(InputStream,int,String) in line 3088
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
   function getProject() in line 2656
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function getProjectChanged() in line 2711
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSourceColor() in line 2757
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTree() in line 2596
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function importFilter() in line 1192
      40 lines of code
      0 parameters
      7 conditional paths
      uses function showOpenDialog(Component) defined in edu::umd::cs::findbugs::gui2::FBFileChooser
      uses function getChildren() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
   function initializeGUI() in line 276
      3 lines of code
      0 parameters
      1 conditional paths
   function isAvailable() in line 271
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function join(String,String) in line 1970
      5 lines of code
      2 parameters
      10 conditional paths
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function getStatusMsg() defined in edu::umd::cs::findbugs::cloud::Cloud
   function loadAnalysis(final File) in line 2840
      21 lines of code
      1 parameters
      2 conditional paths
      uses function setGuiCallback(IGuiCallback) defined in edu::umd::cs::findbugs::Project
      uses function setCurrentWorkingDirectory(File) defined in edu::umd::cs::findbugs::Project
   function loadAnalysis(final URL) in line 2862
      19 lines of code
      1 parameters
      2 conditional paths
      uses function setGuiCallback(IGuiCallback) defined in edu::umd::cs::findbugs::Project
   function loadProjectFromFile(final File) in line 2886
      16 lines of code
      1 parameters
      2 conditional paths
   function makeInstance(FindBugsLayoutManagerFactory) in line 259
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function initializeGUI() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function mergeAnalysis() in line 2923
      8 lines of code
      0 parameters
      1 conditional paths
   function newProjectMenu() in line 3005
      6 lines of code
      0 parameters
      2 conditional paths
      uses function saveComments() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function updateDesignationComboBox() defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function newTree(final JTree,final BugTreeModel) in line 1773
      protection public
      30 lines of code
      2 parameters
      1 conditional paths
      uses function addColumnModelListener(TableColumnModelListener) defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function setSorting(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
   function open() in line 1236
      86 lines of code
      0 parameters
      17 conditional paths
      uses function showOpenDialog(Component) defined in edu::umd::cs::findbugs::gui2::FBFileChooser
   function openAnalysis(File,SaveType) in line 2801
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
   function openBugCollection(SortedBugCollection) in line 2812
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function getProject() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setGuiCallback(IGuiCallback) defined in edu::umd::cs::findbugs::Project
   function openFBAFile(File) in line 1329
      3 lines of code
      1 parameters
      1 conditional paths
   function openFBPFile(File) in line 1337
      14 lines of code
      1 parameters
      2 conditional paths
   function openProject(final File) in line 2936
      48 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setRebuilding(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
   function prepareForFileLoad(File,SaveType) in line 2823
      15 lines of code
      2 parameters
      1 conditional paths
   function resetCommentsInputPane() in line 1088
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function resetCommentsInputPane() defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
   function save() in line 1562
      29 lines of code
      0 parameters
      6 conditional paths
   function saveAnalysis(File) in line 2787
      7 lines of code
      1 parameters
      1 conditional paths
   function saveAs() in line 1402
      118 lines of code
      0 parameters
      19 conditional paths
      uses function showSaveDialog(Component) defined in edu::umd::cs::findbugs::gui2::FBFileChooser
   function saveComments(BugLeafNode,BugAspects) in line 2744
      4 lines of code
      2 parameters
      1 conditional paths
      uses function saveComments() defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function saveFBAFile(File) in line 1596
      3 lines of code
      1 parameters
      1 conditional paths
   function saveFBPFile(File) in line 1603
      13 lines of code
      1 parameters
      2 conditional paths
   function saveProject(File) in line 2719
      20 lines of code
      1 parameters
      3 conditional paths
      uses function save(@WillClose OutputStream) defined in edu::umd::cs::findbugs::gui2::ProjectSettings
   function selectPackagePrefixByProject() in line 953
      protection public
      32 lines of code
      0 parameters
      6 conditional paths
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses function getProjects(@DottedClassName String) defined in edu::umd::cs::findbugs::ProjectPackagePrefixes
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getFilter(String) defined in edu::umd::cs::findbugs::ProjectPackagePrefixes
   function setErrorMessage(String) in line 2001
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function setProject(Project) in line 2663
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setProjectAndBugCollection(Project,@CheckForNull BugCollection) in line 474
      66 lines of code
      2 parameters
      10 conditional paths
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function softAdd(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable DEAD_BUG_MATCHER defined in edu::umd::cs::findbugs::filter::LastVersionMatcher
      uses function removeListener(CloudListener) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function shutdown() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function clearCache() defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getOffListenerList() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function sizeUnfiltered() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function configureForCurrentCloud() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function addListener(CloudListener) defined in edu::umd::cs::findbugs::cloud::Cloud
   function setProjectAndBugCollectionInSwingThread(final Project,final BugCollection) in line 3057
      13 lines of code
      2 parameters
      4 conditional paths
      uses function setGuiCallback(IGuiCallback) defined in edu::umd::cs::findbugs::Project
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
   function setProjectChanged(boolean) in line 2695
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
   function setRebuilding(boolean) in line 2668
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
   function setSaveMenu() in line 2687
      4 lines of code
      0 parameters
      1 conditional paths
   function setSorting(boolean) in line 2683
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setStyleSheets() in line 2393
      11 lines of code
      0 parameters
      13 conditional paths
      uses function find(String) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function findNext(String) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function findPrevious(String) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function foundItem(int) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getSourceViewComponent() defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function supportsSourceLinks() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getSourceLink(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function setSourceTitle(String) defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
      uses function getSourceLinkToolTip(@CheckForNull BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
   function setupTreeListeners() in line 1804
      100 lines of code
      0 parameters
      14 conditional paths
      uses function setUserCommentInputEnable(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function displaySource(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
   function setUserCommentInputEnable(boolean) in line 1944
      4 lines of code
      1 parameters
      1 conditional paths
   function setViewMenu() in line 986
      protection public
      101 lines of code
      0 parameters
      15 conditional paths
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function supportsCloudSummaries() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function size() defined in edu::umd::cs::findbugs::ProjectPackagePrefixes
      uses function getMode() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable COMMUNAL defined in edu::umd::cs::findbugs::cloud::Cloud::Mode
   function showCard(final String,final Cursor) in line 1629
      14 lines of code
      2 parameters
      8 conditional paths
      uses function setVisible(boolean) defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function showConfirmDialog(String,String,int) in line 3049
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function showDocument(URL) in line 3183
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function showMessageDialog(final String) in line 3039
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
   function showQuestionDialog(String,String,String) in line 3177
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function showStatus(String) in line 3099
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function setSourceTitle(String) defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
   function showTreeCard() in line 1626
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function showWaitCard() in line 1622
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function sortables() in line 3080
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function sourceCodeExists(@Nonnull SourceLineAnnotation) in line 2382
      10 lines of code
      1 parameters
      2 conditional paths
   function updateSummaryTab(BugLeafNode) in line 2011
      75 lines of code
      1 parameters
      14 conditional paths
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getMessageWithoutPrefix() defined in edu::umd::cs::findbugs::BugInstance
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getDetailHTML() defined in edu::umd::cs::findbugs::BugPattern
   function waitUntilReady() in line 2338
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function writeToLog(String) in line 2773
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function MainFrame(FindBugsLayoutManagerFactory) in line 279
      8 lines of code
      1 parameters
      11 conditional paths
      uses function getInstance(MainFrame) defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManagerFactory
      uses function saveComments() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function setPreviousComments(LinkedList< String >) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function saveState() defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
      uses function setFrameBounds(Rectangle) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function save() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function shutdown() defined in edu::umd::cs::findbugs::cloud::Cloud
   variable branchPopupMenu in line 230
   variable bugPopupMenu in line 229
   variable curProject in line 235
   variable DEBUG in line 199
      protection public
   variable findBugsLayoutManagerFactory in line 217
   variable findButton in line 195
   variable findNextButton in line 196
   variable findPreviousButton in line 197
   variable guiLayout in line 218
   variable htmlEditorKit in line 213
   variable instance in line 231
   variable lock in line 238
   variable logger in line 248
   variable newProject in line 239
   variable osxAdapter in line 245
   variable osxPrefsEnableMethod in line 246
   variable preferencesMenuItem in line 234
   variable recentMenu in line 233
   variable recentMenuCache in line 232
   variable reconfigMenuItem in line 225
   variable redoAnalysis in line 226
   variable saveFile in line 255
   variable saveType in line 251
   variable sorter in line 208
   variable sourceCodeScrollPane in line 205
   variable sourceSearchTextField in line 194
   variable statusBarLabel in line 210
   variable summaryHtmlArea in line 214
   variable summaryHtmlScrollPane in line 215
   variable summaryTopPanel in line 212
   variable tableheader in line 209
   variable treePanel in line 237
   variable treeScrollPane in line 236
   variable treeUI in line 179
module edu::umd::cs::findbugs::gui2::MainFrame::SaveReturn
   variable SAVE_ERROR in line 256
      protection public
   variable SAVE_IO_EXCEPTION in line 256
      protection public
   variable SAVE_SUCCESSFUL in line 256
      protection public
module edu::umd::cs::findbugs::gui2::MainFrame::ProjectSelector
   function toString() in line 949
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ProjectSelector(String,String,int) in line 940
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::MainFrame::InitializeGUI
   inherits from Runnable
   function run() in line 2222
      protection public
      114 lines of code
      0 parameters
      11 conditional paths
      uses function initialize() defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
      uses function getPreviousComments() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getFrameBounds() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable INSTANCE defined in edu::umd::cs::findbugs::gui2::FindBugsProjectFileFilter
      uses variable INSTANCE defined in edu::umd::cs::findbugs::gui2::FindBugsAnalysisFileFilter
      uses variable INSTANCE defined in edu::umd::cs::findbugs::gui2::FindBugsFBPFileFilter
      uses variable INSTANCE defined in edu::umd::cs::findbugs::gui2::FindBugsFBAFileFilter
      uses variable INSTANCE defined in edu::umd::cs::findbugs::gui2::FindBugsFilterFileFilter
      uses function resized() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function hasFocus() defined in edu::umd::cs::findbugs::gui2::CommentsArea
module edu::umd::cs::findbugs::gui2::MainFrame::BugSummaryMouseListener
   inherits from java::awt::event::MouseAdapter
   function mouseClicked(MouseEvent) in line 2362
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function displaySource(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   function mouseEntered(MouseEvent) in line 2366
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function mouseExited(MouseEvent) in line 2371
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable bugInstance in line 2351
   variable label in line 2352
   variable note in line 2353
module edu::umd::cs::findbugs::gui2::MainFrame::CutAction
   inherits from javax::swing::text::TextAction
   function actionPerformed(ActionEvent) in line 2611
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function CutAction() in line 2607
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::MainFrame::CopyAction
   inherits from javax::swing::text::TextAction
   function actionPerformed(ActionEvent) in line 2627
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function CopyAction() in line 2623
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::MainFrame::PasteAction
   inherits from javax::swing::text::TextAction
   function actionPerformed(ActionEvent) in line 2643
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function PasteAction() in line 2639
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::MainFrame::ShownBugsIterator
   inherits from java::util::Iterator
   function hasNext() in line 3139
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   function next() in line 3155
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function remove() in line 3167
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/NewFilterFrame.java
module edu::umd::cs::findbugs::gui2::NewFilterFrame
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
   function close() in line 68
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function main(String[]) in line 223
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function open() in line 60
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function NewFilterFrame() in line 76
      146 lines of code
      0 parameters
      8 conditional paths
      uses variable DIVIDER defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getAllSorted() defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function formatValue(String) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function addFilters(FilterMatcher[]) defined in edu::umd::cs::findbugs::gui2::ProjectSettings
   variable instance in line 58
   variable list in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/NewFilterFromBug.java
module edu::umd::cs::findbugs::gui2::NewFilterFromBug
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
   function NewFilterFromBug(final BugInstance) in line 50
      protection public
      57 lines of code
      1 parameters
      7 conditional paths
      uses variable DIVIDER defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
   variable map in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/NewProjectWizard.java
module edu::umd::cs::findbugs::gui2::NewProjectWizard
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
   function addNotify() in line 458
      protection public
      16 lines of code
      0 parameters
      3 conditional paths
   function createFilePanel(final String,final JList,final DefaultListModel,final int,final FileFilter,final String,boolean) in line 304
      117 lines of code
      7 parameters
      12 conditional paths
      uses function addFile(String) defined in edu::umd::cs::findbugs::Project
      uses function addAuxClasspathEntry(String) defined in edu::umd::cs::findbugs::Project
      uses variable discover defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function showOpenDialog(Component) defined in edu::umd::cs::findbugs::gui2::FBFileChooser
   function createTextFieldPanel(String,JTextField) in line 292
      8 lines of code
      2 parameters
      1 conditional paths
   function loadAllPanels(final JPanel) in line 440
      16 lines of code
      1 parameters
      3 conditional paths
   function setSourceDirecs(DefaultListModel) in line 478
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function NewProjectWizard() in line 102
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function NewProjectWizard(Project) in line 111
      protection public
      180 lines of code
      1 parameters
      31 conditional paths
      uses function getFileCount() defined in edu::umd::cs::findbugs::Project
      uses function removeFile(int) defined in edu::umd::cs::findbugs::Project
      uses function getNumAuxClasspathEntries() defined in edu::umd::cs::findbugs::Project
      uses function removeAuxClasspathEntry(int) defined in edu::umd::cs::findbugs::Project
      uses function getNumSourceDirs() defined in edu::umd::cs::findbugs::Project
      uses function removeSourceDir(int) defined in edu::umd::cs::findbugs::Project
      uses function addFile(String) defined in edu::umd::cs::findbugs::Project
      uses function addAuxClasspathEntry(String) defined in edu::umd::cs::findbugs::Project
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
      uses function setProjectName(String) defined in edu::umd::cs::findbugs::Project
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getProjectName() defined in edu::umd::cs::findbugs::Project
      uses variable UNNAMED_PROJECT defined in edu::umd::cs::findbugs::Project
      uses function getFileList() defined in edu::umd::cs::findbugs::Project
      uses function getAuxClasspathEntryList() defined in edu::umd::cs::findbugs::Project
      uses function getSourceDirList() defined in edu::umd::cs::findbugs::Project
   variable analyzeList in line 86
   variable analyzeModel in line 87
   variable auxList in line 90
   variable auxModel in line 91
   variable border in line 63
   variable cancelButton in line 97
   variable chooser in line 68
   variable currentPanel in line 100
   variable directoryOrArchive in line 69
   variable finishButton in line 96
   variable project in line 65
   variable projectChanged in line 66
   variable projectName in line 89
   variable projectNameChanged in line 67
   variable sourceList in line 93
   variable sourceModel in line 94
   variable wizardComponents in line 99
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/OriginalGUI2ProjectFile.java
module edu::umd::cs::findbugs::gui2::OriginalGUI2ProjectFile
   function OriginalGUI2ProjectFile() in line 28
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/PreferencesFrame.java
module edu::umd::cs::findbugs::gui2::PreferencesFrame
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
   function changeFontSize() in line 258
      24 lines of code
      0 parameters
      4 conditional paths
      uses function getFontSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setFontSize(float) defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function changePackagePrefixLength() in line 282
      27 lines of code
      0 parameters
      4 conditional paths
      uses function getPackagePrefixSegments() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setPackagePrefixSegments(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function needToRebuild() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function changeTabSize() in line 232
      25 lines of code
      0 parameters
      4 conditional paths
      uses function getTabSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setTabSize(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function clearCache() defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   function createFilterPane() in line 320
      84 lines of code
      0 parameters
      6 conditional paths
      uses function getProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function isEnabled(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses function removeChild(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable UNFILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function isEmpty() defined in edu::umd::cs::findbugs::filter::Filter
      uses function clear() defined in edu::umd::cs::findbugs::filter::Filter
   function createPropertiesPane() in line 168
      63 lines of code
      0 parameters
      1 conditional paths
      uses function getTabSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getFontSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getPackagePrefixSegments() defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getInstance() in line 90
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function resetPropertiesPane() in line 310
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getTabSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getFontSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function PreferencesFrame() in line 99
      47 lines of code
      0 parameters
      2 conditional paths
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
   variable addButton in line 75
   variable filterCheckBoxList in line 74
   variable FILTERS_TAB in line 68
   variable FONT_MAX in line 88
   variable FONT_MIN in line 87
   variable fontTextField in line 83
   variable instance in line 73
   variable packagePrefixLengthTextField in line 84
   variable PROPERTIES_TAB in line 67
   variable SUPPRESSIONS_TAB in line 69
   variable TAB_MAX in line 86
   variable TAB_MIN in line 85
   variable tabTextField in line 82
module edu::umd::cs::findbugs::gui2::PreferencesFrame::MatchBox
   inherits from javax::swing::JCheckBox
module edu::umd::cs::findbugs::gui2::PreferencesFrame::UneditableTableModel
   inherits from javax::swing::table::DefaultTableModel
   function isCellEditable(int,int) in line 446
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function UneditableTableModel(Object,String[]) in line 442
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::PreferencesFrame::FilterCheckBoxListener
   inherits from java::awt::event::ItemListener
   function itemStateChanged(ItemEvent) in line 461
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function setActive(boolean) defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setEnabled(boolean) defined in edu::umd::cs::findbugs::gui2::CheckBoxList
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/ProjectSettings.java
module edu::umd::cs::findbugs::gui2::ProjectSettings
   inherits from java::io::Serializable
   function addFilter(FilterMatcher) in line 136
      protection public
      56 lines of code
      1 parameters
      9 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable allMatchers defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
      uses function getFilters() defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
      uses function getBugTreeModel() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function removeBranch(ArrayList< String >) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function addFilters(FilterMatcher[]) in line 193
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable allMatchers defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
   function getInstance() in line 65
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses function ProjectSettings() defined in edu::umd::cs::findbugs::gui2::ProjectSettings
   function getMaxSizeOfPreviousComments() in line 228
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable maxSizeOfPreviousComments defined in edu::umd::cs::findbugs::gui2::ProjectSettings
   function loadInstance(@WillClose InputStream) in line 88
      protection public
      26 lines of code
      1 parameters
      5 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses function ProjectSettings() defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function newInstance() defined in edu::umd::cs::findbugs::gui2::ProjectSettings
   function newInstance() in line 54
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses function ProjectSettings() defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable DEAD_BUG_MATCHER defined in edu::umd::cs::findbugs::filter::LastVersionMatcher
      uses function getProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
   function removeFilter(FilterMatcher) in line 211
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable allMatchers defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable UNFILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
   function save(@WillClose OutputStream) in line 115
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
   function setMaxSizeOfPreviousComments(int) in line 236
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable maxSizeOfPreviousComments defined in edu::umd::cs::findbugs::gui2::ProjectSettings
   function ProjectSettings() in line 48
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable allMatchers defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable filters defined in edu::umd::cs::findbugs::gui2::ProjectSettings
   variable allMatchers in line 81
   variable filters in line 76
   variable instance in line 53
   variable maxSizeOfPreviousComments in line 86
   variable serialVersionUID in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/PropertiesDialog.java
module edu::umd::cs::findbugs::gui2::PropertiesDialog
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
   function getInstance() in line 47
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::gui2::PropertiesDialog
      uses function PropertiesDialog() defined in edu::umd::cs::findbugs::gui2::PropertiesDialog
   function PropertiesDialog() in line 54
      62 lines of code
      0 parameters
      5 conditional paths
      uses variable tabTextField defined in edu::umd::cs::findbugs::gui2::PropertiesDialog
      uses function getTabSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable fontTextField defined in edu::umd::cs::findbugs::gui2::PropertiesDialog
      uses function getFontSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setTabSize(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function clearCache() defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function setFontSize(float) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getInstance() defined in edu::umd::cs::findbugs::gui2::PropertiesDialog
   variable fontTextField in line 45
   variable instance in line 43
   variable tabTextField in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/RecentMenu.java
module edu::umd::cs::findbugs::gui2::RecentMenu
   function addRecentFile(final File) in line 100
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function add(T) defined in edu::umd::cs::findbugs::gui2::RecentMenu::LimitedArrayList
      uses function makeRecentMenu() defined in edu::umd::cs::findbugs::gui2::RecentMenu
   function makeRecentMenu() in line 79
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
   function RecentMenu(JMenu) in line 66
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function getRecentFiles() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function add(T) defined in edu::umd::cs::findbugs::gui2::RecentMenu::LimitedArrayList
      uses function makeRecentMenu() defined in edu::umd::cs::findbugs::gui2::RecentMenu
module edu::umd::cs::findbugs::gui2::RecentMenu::LimitedArrayList
   inherits from java::util::ArrayList
   function add(T) in line 44
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
   function LimitedArrayList() in line 38
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable MAX_ENTRIES in line 36
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/SaveType.java
module edu::umd::cs::findbugs::gui2::SaveType
   function forFile(File) in line 63
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function getFileExtension() in line 49
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function getFilter() in line 27
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function isValid(File) in line 41
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   variable FBP_FILE in line 26
      protection public
   variable NOT_KNOWN in line 26
      protection public
   variable PROJECT in line 26
      protection public
   variable XML_ANALYSIS in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/Sortables.java
module edu::umd::cs::findbugs::gui2::Sortables
   inherits from java::util::Comparator
   function compare(SortableValue,SortableValue) in line 421
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function formatValue(String) in line 416
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getAll() in line 407
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getAll(BugSet) in line 411
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getAllSorted() in line 427
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getAllSorted(BugSet) in line 432
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function getBugLeafNodeComparator() in line 449
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function compare(SortableValue,SortableValue) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getFrom(BugInstance) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
   function getComparator() in line 446
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFrom(BugInstance) in line 406
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getSortableByPrettyName(String) in line 465
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function isAvailable(MainFrame) in line 461
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 401
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function Sortables(String) in line 395
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable BUG_RANK in line 342
      protection public
   variable BUGCODE in line 301
      protection public
   variable CATEGORY in line 253
      protection public
   variable CLASS in line 182
      protection public
   variable comparator in line 444
   variable DESIGNATION in line 279
      protection public
   variable DIVIDER in line 390
      protection public
   variable FIRSTVERSION in line 82
      protection public
   variable LASTVERSION in line 127
      protection public
   variable PACKAGE in line 198
      protection public
   variable PACKAGE_PREFIX in line 216
      protection public
   variable prettyName in line 393
      protection public
   variable PRIORITY in line 158
      protection public
   variable PROJECT in line 363
      protection public
   variable TYPE in line 317
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/SortableStringComparator.java
module edu::umd::cs::findbugs::gui2::SortableStringComparator
   inherits from java::util::Comparator
   function compare(String,String) in line 36
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function compare(SortableValue,SortableValue) defined in edu::umd::cs::findbugs::gui2::Sortables
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/SorterDialog.java
module edu::umd::cs::findbugs::gui2::SorterDialog
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
   function createSorterPane() in line 88
      64 lines of code
      0 parameters
      4 conditional paths
      uses variable preview defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses variable DIVIDER defined in edu::umd::cs::findbugs::gui2::Sortables
      uses variable checkBoxSortList defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses function setSorterCheckBoxes() defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses variable chBList defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses function createFrom(SorterTableColumnModel) defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable instance defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses function setVisible(boolean) defined in edu::umd::cs::findbugs::gui2::SorterDialog
   function getInstance() in line 57
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::gui2::SorterDialog
   function setSorterCheckBoxes() in line 172
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable checkBoxSortList defined in edu::umd::cs::findbugs::gui2::SorterDialog
   function setVisible(boolean) in line 63
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable preview defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses function setSorterCheckBoxes() defined in edu::umd::cs::findbugs::gui2::SorterDialog
   function SorterDialog() in line 73
      9 lines of code
      0 parameters
      1 conditional paths
      uses function createSorterPane() defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses variable preview defined in edu::umd::cs::findbugs::gui2::SorterDialog
   variable chBList in line 53
   variable checkBoxSortList in line 52
   variable instance in line 55
   variable preview in line 51
module edu::umd::cs::findbugs::gui2::SorterDialog::CheckBoxChangedListener
   inherits from javax::swing::event::ChangeListener
   function stateChanged(ChangeEvent) in line 161
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable preview defined in edu::umd::cs::findbugs::gui2::SorterDialog
   function CheckBoxChangedListener(int) in line 157
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/SorterTableColumnModel.java
module edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   inherits from javax::swing::table::TableColumnModel
   function addColumn(TableColumn) in line 167
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function addColumnModelListener(TableColumnModelListener) in line 341
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable watchers defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function columnSelectionChanged(ListSelectionEvent) in line 349
      protection public
      3 lines of code
      1 parameters
      3 conditional paths
      uses variable order defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable DIVIDER defined in edu::umd::cs::findbugs::gui2::Sortables
   function createFrom(SorterTableColumnModel) in line 87
      protection public
      41 lines of code
      1 parameters
      9 conditional paths
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable order defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable watchers defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable showOrder defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable sortables defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable dlsm defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function orderUpdate() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function freezeOrder() in line 387
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable frozen defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getColumn(int) in line 283
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getColumnCount() in line 261
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getColumnIndex(Object) in line 269
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getColumnIndexAtX(int) in line 291
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getColumnMargin() in line 287
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getColumns() in line 265
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getColumnSelectionAllowed() in line 315
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSelectedColumnCount() in line 326
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable dlsm defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getSelectedColumns() in line 319
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable dlsm defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getSelectionModel() in line 337
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dlsm defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getTotalColumnWidth() in line 302
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function moveColumn(int,int) in line 236
      protection public
      20 lines of code
      2 parameters
      2 conditional paths
      uses function saveComments(BugLeafNode,BugAspects) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function orderUpdate() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable watchers defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function orderUpdate() in line 374
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable frozen defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable order defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function removeColumn(TableColumn) in line 172
      protection public
      4 lines of code
      1 parameters
      10 conditional paths
      uses variable showOrder defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function orderUpdate() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable watchers defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function removeColumnModelListener(TableColumnModelListener) in line 345
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable watchers defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function setColumnMargin(int) in line 257
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setColumnSelectionAllowed(boolean) in line 311
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSelectionModel(ListSelectionModel) in line 333
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function thawOrder() in line 392
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable frozen defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function orderUpdate() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function SorterTableColumnModel(Sortables[]) in line 61
      protection public
      25 lines of code
      1 parameters
      4 conditional paths
      uses variable sortables defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable showOrder defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable dlsm defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function orderUpdate() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function SorterTableColumnModel(ArrayList< Sortables >) in line 129
      protection public
      4 lines of code
      1 parameters
      4 conditional paths
      uses variable DIVIDER defined in edu::umd::cs::findbugs::gui2::Sortables
   variable columnList in line 56
   variable dlsm in line 57
   variable frozen in line 59
   variable order in line 53
   variable showOrder in line 55
   variable sortables in line 54
   variable watchers in line 58
module edu::umd::cs::findbugs::gui2::SorterTableColumnModel::FBTableCellRenderer
   inherits from javax::swing::table::TableCellRenderer
   function getTableCellRendererComponent(JTable,Object,boolean,boolean,int,int) in line 139
      protection public
      26 lines of code
      6 parameters
      1 conditional paths
   variable defaultRenderer in line 137
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/SourceCodeDisplay.java
module edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   inherits from Runnable
   function charToLineNum(int) in line 262
      14 lines of code
      1 parameters
      6 conditional paths
      uses function getLineOffset(int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function clearCache() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   function displaySource(BugInstance,SourceLineAnnotation) in line 76
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable bugToDisplay defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable sourceToHighlight defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable pendingUpdate defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   function find(String) in line 277
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function search(JavaSourceDocument,String,int,Boolean) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable myDocument defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable currentChar defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function charToLineNum(int) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   function findNext(String) in line 286
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function search(JavaSourceDocument,String,int,Boolean) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable myDocument defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable currentChar defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function charToLineNum(int) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   function findPrevious(String) in line 295
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function search(JavaSourceDocument,String,int,Boolean) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable myDocument defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable currentChar defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function charToLineNum(int) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   function foundItem(int) in line 216
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable myDocument defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getHighlightInformation() defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
      uses function updateFoundLineNum(Integer) defined in edu::umd::cs::findbugs::sourceViewer::HighlightInformation
      uses function setHighlight(int,int,Color) defined in edu::umd::cs::findbugs::sourceViewer::HighlightInformation
      uses variable FOUND_HIGHLIGHT defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function scrollLineToVisible(int,int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function getDocument(SourceLineAnnotation) in line 89
      26 lines of code
      1 parameters
      5 conditional paths
      uses function getProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSourceFinder() defined in edu::umd::cs::findbugs::Project
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getFullFileName() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable map defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getInputStream() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable UNKNOWNSOURCE defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
   function highlight(JavaSourceDocument,SourceLineAnnotation,Color) in line 203
      12 lines of code
      3 parameters
      4 conditional paths
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourcePath() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
      uses function getFullFileName() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable CANONICAL_PACKAGE_SEPARATOR defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getHighlightInformation() defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
      uses function setHighlight(int,int,Color) defined in edu::umd::cs::findbugs::sourceViewer::HighlightInformation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function run() in line 116
      protection public
      82 lines of code
      0 parameters
      16 conditional paths
      uses variable pendingUpdate defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable bugToDisplay defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable sourceToHighlight defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getDocument(SourceLineAnnotation) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getHighlightInformation() defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
      uses function clear() defined in edu::umd::cs::findbugs::sourceViewer::HighlightInformation
      uses function getDescription() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function highlight(JavaSourceDocument,SourceLineAnnotation,Color) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable MAIN_HIGHLIGHT_MORE defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable ALTERNATIVE_HIGHLIGHT defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable MAIN_HIGHLIGHT defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getEditorKit() defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
      uses function getDocument() defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSimpleClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function scrollLinesToVisible(int,int,Collection< Integer >) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function search(JavaSourceDocument,String,int,Boolean) in line 223
      38 lines of code
      4 parameters
      15 conditional paths
      uses function getDocument() defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
   function show(JTextPane,Document,SourceLineAnnotation) in line 304
      17 lines of code
      3 parameters
      2 conditional paths
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function scrollLineToVisible(int,int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function showLine(int) in line 322
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function scrollLineToVisible(int,int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   variable ALTERNATIVE_HIGHLIGHT in line 53
   variable bugToDisplay in line 72
   variable currentChar in line 59
   variable FOUND_HIGHLIGHT in line 54
   variable MAIN_HIGHLIGHT in line 51
   variable MAIN_HIGHLIGHT_MORE in line 52
   variable map in line 61
   variable myDocument in line 58
      protection public
   variable pendingUpdate in line 70
   variable sourceToHighlight in line 74
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/SourceDirectoryWizard.java
module edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
   inherits from javax::swing::JDialog
   function finshButtonActionPerformed(java.awt.event.ActionEvent) in line 341
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable parentGUI defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function setSourceDirecs(DefaultListModel) defined in edu::umd::cs::findbugs::gui2::NewProjectWizard
      uses variable foundModel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable discover defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
   function initComponents() in line 72
      175 lines of code
      0 parameters
      4 conditional paths
      uses variable foundModel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable progressModel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable contentPanel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable secondPanel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable jScrollPane1 defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable jScrollPane2 defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable jList1 defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable jList2 defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable jLabel1 defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable jLabel2 defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable jLabel3 defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable firstPanel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable sourceRootLabel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable sourceRootBox defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable srcFileIconLabel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable card1TitleLabel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable chooser defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable browseButton defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable card1Explanation1Label defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable card1Explanation2Label defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable card1Explanation3Label defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable previousButton defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable nextButton defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable finshButton defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable errorMessageLabel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function previousButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function nextButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function finshButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
   function main(String) in line 354
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function SourceDirectoryWizard(java.awt.Frame,boolean,Project,NewProjectWizard) defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
   function nextButtonActionPerformed(java.awt.event.ActionEvent) in line 256
      84 lines of code
      1 parameters
      5 conditional paths
      uses variable discover defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function toString() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable progressModel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function setProject(Project) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses variable project defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function setRootSourceDirectory(String) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses variable sourceRootBox defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function setErrorLogger(IErrorLogger) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function setProgress(Progress) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function execute() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses variable jList1 defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable foundModel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function getDiscoveredSourceDirectoryList() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses variable step defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable MAX_STEP defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function setStep(int) defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
   function previousButtonActionPerformed(java.awt.event.ActionEvent) in line 248
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable step defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable MIN_STEP defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function setStep(int) defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable progressModel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable foundModel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
   function setStep(int) in line 395
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable MAX_STEP defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable step defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable previousButton defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable MIN_STEP defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable nextButton defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable sourceRootBox defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable contentPanel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
   function SourceDirectoryWizard(java.awt.Frame,boolean,Project,NewProjectWizard) in line 57
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses variable parentGUI defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable project defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function initComponents() defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function setStep(int) defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
   variable browseButton in line 370
   variable card1Explanation1Label in line 371
   variable card1Explanation2Label in line 372
   variable card1Explanation3Label in line 373
   variable card1TitleLabel in line 374
   variable chooser in line 362
   variable contentPanel in line 375
   variable discover in line 368
      protection public
   variable errorMessageLabel in line 376
   variable finshButton in line 377
   variable firstPanel in line 378
   variable foundModel in line 365
   variable jLabel1 in line 379
   variable jLabel2 in line 380
   variable jLabel3 in line 381
   variable jList1 in line 382
   variable jList2 in line 367
   variable jScrollPane1 in line 383
   variable jScrollPane2 in line 384
   variable MAX_STEP in line 53
   variable MIN_STEP in line 52
   variable nextButton in line 385
   variable parentGUI in line 364
   variable previousButton in line 386
   variable progressModel in line 366
   variable project in line 363
   variable secondPanel in line 387
   variable sourceRootBox in line 388
   variable sourceRootLabel in line 389
   variable srcFileIconLabel in line 390
   variable step in line 393
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/SplashFrame.java
module edu::umd::cs::findbugs::gui2::SplashFrame
   inherits from javax::swing::JWindow
   function main(String[]) in line 87
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function SplashFrame() defined in edu::umd::cs::findbugs::gui2::SplashFrame
      uses function setVisible(boolean) defined in edu::umd::cs::findbugs::gui2::SplashFrame
   function setVisible(boolean) in line 93
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable animator defined in edu::umd::cs::findbugs::gui2::SplashFrame
   function SplashFrame() in line 48
      protection public
      38 lines of code
      0 parameters
      1 conditional paths
      uses function animate() defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
   variable animator in line 46
module edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
   inherits from javax::swing::JPanel
   function animate() in line 175
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable animator defined in edu::umd::cs::findbugs::gui2::SplashFrame
   function imageToDraw() in line 185
      15 lines of code
      0 parameters
      4 conditional paths
      uses variable image defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
      uses variable imageR defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
      uses variable image2 defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
      uses variable image2R defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
   function paint(Graphics) in line 202
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function imageToDraw() defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
   function setPreferredSize(Dimension) in line 181
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function Viewer(Image,Image,Image,Image) in line 111
      protection public
      63 lines of code
      4 parameters
      8 conditional paths
      uses variable image defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
      uses variable image2 defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
      uses variable imageR defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
      uses variable image2R defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
      uses variable animator defined in edu::umd::cs::findbugs::gui2::SplashFrame
   variable image in line 100
   variable image2 in line 101
   variable image2R in line 103
   variable imageR in line 102
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/SplitLayout.java
module edu::umd::cs::findbugs::gui2::SplitLayout
   inherits from edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
   function createWindowMenu() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSourceViewComponent() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initialize() in line 70
      protection public
      42 lines of code
      0 parameters
      1 conditional paths
      uses function getSplitTreeComments() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getSplitTop() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getSplitMain() defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function makeCommentsVisible() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeSourceVisible() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function resetCommentsInputPane() in line 62
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function saveState() in line 130
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function setSplitTreeComments(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setSplitTop(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setSplitSummary(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setSplitMain(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setSourceTitle(String) in line 140
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function SplitLayout(MainFrame) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/SpringUtilities.java
module edu::umd::cs::findbugs::gui2::SpringUtilities
   function getConstraintsForCell(int,int,Container,int) in line 124
      8 lines of code
      4 parameters
      1 conditional paths
   function makeCompactGrid(Container,int,int,int,int,int,int) in line 148
      protection public
      53 lines of code
      7 parameters
      9 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getConstraintsForCell(int,int,Container,int) defined in edu::umd::cs::findbugs::gui2::SpringUtilities
   function makeGrid(Container,int,int,int,int,int,int) in line 45
      protection public
      77 lines of code
      7 parameters
      8 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
   function printSizes(Component) in line 23
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/StackedFilterMatcher.java
module edu::umd::cs::findbugs::gui2::StackedFilterMatcher
   inherits from edu::umd::cs::findbugs::gui2::FilterMatcher
   function equals(Object) in line 174
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
      uses function StackedFilterMatcher(FilterMatcher...) defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
   function getFilters() in line 141
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
   function hashCode() in line 191
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
   function main(String[]) in line 199
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function StackedFilterMatcher(FilterMatcher...) defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
      uses function equals(Object) defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
   function match(BugInstance) in line 147
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function isActive() defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable filters defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
   function setActive(boolean) in line 63
      protection public
      77 lines of code
      1 parameters
      15 conditional paths
      uses variable active defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses function getFilters() defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
      uses variable DIVIDER defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getBugTreeModel() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function toString() in line 160
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
      uses function toString() defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function StackedFilterMatcher(FilterMatcher...) in line 53
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
   variable filters in line 39
   variable serialVersionUID in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/SwingThread.java
module edu::umd::cs::findbugs::gui2::SwingThread
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/gui2/ViewFilter.java
module edu::umd::cs::findbugs::gui2::ViewFilter
   function getEvaluation() in line 334
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFirstSeen() in line 352
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPackagePrefixes() in line 362
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRank() in line 324
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function matchedPrefixes(String[],@DottedClassName String) in line 386
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function setClassification(OverallClassificationFilter) in line 344
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
   function setEvaluation(CloudFilter) in line 337
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
   function setFirstSeen(FirstSeenFilter) in line 356
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
   function setRank(RankFilter) in line 328
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
   function show(BugInstance) in line 389
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function showIgnoringPackagePrefixes(BugInstance) defined in edu::umd::cs::findbugs::gui2::ViewFilter
   function showIgnoringPackagePrefixes(BugInstance) in line 367
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
   function ViewFilter(MainFrame) in line 38
      protection public
      3 lines of code
      1 parameters
      9 conditional paths
      uses function show(BugInstance) defined in edu::umd::cs::findbugs::gui2::ViewFilter
      uses function getClassificationScore(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses variable SHOULD_FIX defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses variable MOSTLY_HARMLESS defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getPortionObsoleteClassifications(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function getNumberReviewers(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function getClassificationDisagreement(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function getReviewers(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function getUser() defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function getMode() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable SECRET defined in edu::umd::cs::findbugs::cloud::Cloud::Mode
      uses function isClaimed(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function getIWillFix(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function getBugLinkStatus(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function bugIsFiled() defined in edu::umd::cs::findbugs::cloud::Cloud::BugFilingStatus
      uses function supportsBugLinks() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getWillNotBeFixed(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function getBugIsUnassigned(BugInstance) defined in edu::umd::cs::findbugs::cloud::db::DBCloud
      uses function getFirstSeen(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
module edu::umd::cs::findbugs::gui2::ViewFilter::ViewFilterEnum
   function show(MainFrame,BugInstance) in line 43
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::ViewFilter::RankFilter
   inherits from edu::umd::cs::findbugs::gui2::ViewFilter::ViewFilterEnum
   function show(MainFrame,BugInstance) in line 57
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 63
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function RankFilter(int,String) in line 52
      4 lines of code
      2 parameters
      1 conditional paths
   variable ALL in line 47
      protection public
   variable displayName in line 50
      protection public
   variable maxRank in line 48
      protection public
   variable SCARIEST in line 47
      protection public
   variable SCARY in line 47
      protection public
   variable TROUBLING in line 47
      protection public
module edu::umd::cs::findbugs::gui2::ViewFilter::OverallClassificationFilter
   inherits from edu::umd::cs::findbugs::gui2::ViewFilter::ViewFilterEnum
   function show(DBCloud,BugInstance) in line 124
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function show(MainFrame,BugInstance) in line 130
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function supported(Cloud) in line 126
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 138
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function OverallClassificationFilter(String) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable ALL in line 117
      protection public
   variable displayName in line 122
      protection public
   variable DONT_FIX in line 85
      protection public
   variable HIGH_VARIANCE in line 110
      protection public
   variable OBSOLETE in line 92
      protection public
   variable SHOULD_FIX in line 78
      protection public
   variable UNCERTAIN in line 102
      protection public
module edu::umd::cs::findbugs::gui2::ViewFilter::CloudFilter
   inherits from edu::umd::cs::findbugs::gui2::ViewFilter::ViewFilterEnum
   function show(DBCloud,BugInstance) in line 253
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function show(MainFrame,BugInstance) in line 258
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function supported(Cloud) in line 254
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 265
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function CloudFilter(String) in line 248
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable ALL in line 246
      protection public
   variable BUG_STATUS_IS_UNASSIGNED in line 240
      protection public
   variable displayName in line 251
      protection public
   variable HAS_FILED_BUGS in line 210
      protection public
   variable HAS_REVIEWS in line 181
      protection public
   variable I_WILL_FIX in line 199
      protection public
   variable MY_REVIEWS in line 151
      protection public
   variable NO_FILED_BUGS in line 220
      protection public
   variable NO_ONE_COMMITTED_TO_FIXING in line 191
      protection public
   variable NO_REVIEWS in line 169
      protection public
   variable NOT_REVIEWED_BY_ME in line 158
      protection public
   variable WILL_NOT_FIX in line 230
      protection public
module edu::umd::cs::findbugs::gui2::ViewFilter::FirstSeenFilter
   inherits from edu::umd::cs::findbugs::gui2::ViewFilter::ViewFilterEnum
   function show(MainFrame,BugInstance) in line 284
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 292
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FirstSeenFilter(int,String) in line 279
      4 lines of code
      2 parameters
      1 conditional paths
   variable ALL in line 273
      protection public
   variable displayName in line 277
      protection public
   variable LAST_3_DAYS in line 271
      protection public
   variable LAST_DAY in line 270
      protection public
   variable LAST_MONTH in line 272
      protection public
   variable LAST_THREE_MONTHS in line 272
      protection public
   variable LAST_WEEK in line 272
      protection public
   variable maxDays in line 275
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/internalAnnotations/DottedClassName.java
module edu::umd::cs::findbugs::internalAnnotations::DottedClassName
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/internalAnnotations/SlashedClassName.java
module edu::umd::cs::findbugs::internalAnnotations::SlashedClassName
   function when() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/sourceViewer/DocumentCharacterIterator.java
module edu::umd::cs::findbugs::sourceViewer::DocumentCharacterIterator
   inherits from java::text::CharacterIterator
   function clone() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function current() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable text defined in edu::umd::cs::findbugs::sourceViewer::DocumentCharacterIterator
   function first() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBeginIndex() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getEndIndex() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIndex() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable docPos defined in edu::umd::cs::findbugs::sourceViewer::DocumentCharacterIterator
   function last() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 89
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable docPos defined in edu::umd::cs::findbugs::sourceViewer::DocumentCharacterIterator
      uses variable doc defined in edu::umd::cs::findbugs::sourceViewer::DocumentCharacterIterator
      uses variable text defined in edu::umd::cs::findbugs::sourceViewer::DocumentCharacterIterator
      uses variable segmentEnd defined in edu::umd::cs::findbugs::sourceViewer::DocumentCharacterIterator
   function previous() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIndex(int) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable doc in line 34
   variable docPos in line 39
   variable segmentEnd in line 42
   variable text in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/sourceViewer/HighlightInformation.java
module edu::umd::cs::findbugs::sourceViewer::HighlightInformation
   function clear() in line 34
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable foundLineNum defined in edu::umd::cs::findbugs::sourceViewer::HighlightInformation
   function getHighlight(Integer) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHighlight(int,int,Color) in line 38
      protection public
      4 lines of code
      3 parameters
      2 conditional paths
   function setHighlight(Integer,Color) in line 43
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function unsetHighlight(Integer) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function updateFoundLineNum(Integer) in line 51
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable foundLineNum defined in edu::umd::cs::findbugs::sourceViewer::HighlightInformation
      uses function unsetHighlight(Integer) defined in edu::umd::cs::findbugs::sourceViewer::HighlightInformation
   variable foundLineNum in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/sourceViewer/JavaScanner.java
module edu::umd::cs::findbugs::sourceViewer::JavaScanner
   function getEndPosition() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable iterator defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
   function getKind() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
   function getLength() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable iterator defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable startPosition defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
   function getStartPosition() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable startPosition defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
   function next() in line 91
      protection public
      79 lines of code
      0 parameters
      26 conditional paths
      uses variable startPosition defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable iterator defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable kind defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable EOF defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable buf defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable MAX_KEYWORD_LENGTH defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable NORMAL_TEXT defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable KEYWORDS defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable KEYWORD defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable COMMENT defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable JAVADOC defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable QUOTE defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
   function JavaScanner(CharacterIterator) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable iterator defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
   variable buf in line 64
   variable COMMENT in line 27
      protection public
   variable EOF in line 32
      protection public
   variable iterator in line 67
   variable JAVADOC in line 28
      protection public
   variable KEYWORD in line 30
      protection public
   variable KEYWORDS in line 37
   variable kind in line 69
   variable MAX_KEYWORD_LENGTH in line 39
   variable NORMAL_TEXT in line 26
      protection public
   variable QUOTE in line 31
      protection public
   variable startPosition in line 71
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/sourceViewer/JavaSourceDocument.java
module edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
   function getDocument() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getEditorKit() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHighlightInformation() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSourceFile() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTitle() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable title defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
   function JavaSourceDocument(String,Reader,SourceFile) in line 104
      protection public
      66 lines of code
      3 parameters
      8 conditional paths
      uses variable title defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
      uses function getTabSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function next() defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable EOF defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses function getKind() defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable COMMENT defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses function getStartPosition() defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses function getLength() defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable KEYWORD defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable JAVADOC defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable QUOTE defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
   variable serialVersionUID in line 170
   variable title in line 95
   variable UNKNOWNSOURCE in line 171
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/sourceViewer/NavigableTextPane.java
module edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   inherits from javax::swing::JTextPane
   function getLineOffset(int) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function lineToOffset(int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function lineToOffset(int) in line 62
      13 lines of code
      1 parameters
      3 conditional paths
   function lineToY(int) in line 81
      3 lines of code
      1 parameters
      1 conditional paths
      uses function offsetToY(int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
      uses function lineToOffset(int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function offsetToY(int) in line 76
      4 lines of code
      1 parameters
      1 conditional paths
   function parentHeight() in line 52
      5 lines of code
      0 parameters
      2 conditional paths
   function scrollLinesToVisible(int,int,Collection< Integer >) in line 120
      protection public
      44 lines of code
      3 parameters
      10 conditional paths
      uses function lineToY(int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function parentHeight() defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
      uses function scrollYToVisibleImpl(int,int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function scrollLineToVisible(int,int) in line 106
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function parentHeight() defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
      uses function scrollLineToVisibleImpl(int,int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function scrollLineToVisible(int) in line 113
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function parentHeight() defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
      uses function scrollLineToVisibleImpl(int,int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function scrollLineToVisibleImpl(int,int) in line 96
      8 lines of code
      2 parameters
      3 conditional paths
      uses function lineToY(int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
      uses function scrollYToVisibleImpl(int,int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
   function scrollYToVisibleImpl(int,int) in line 85
      10 lines of code
      2 parameters
      1 conditional paths
   function NavigableTextPane() in line 43
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function NavigableTextPane(StyledDocument) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::sourceViewer::NavigableTextPane::DistanceComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(Integer,Integer) in line 175
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable origin defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane::DistanceComparator
   function DistanceComparator(int) in line 167
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable origin defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane::DistanceComparator
   variable origin in line 166
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/sourceViewer/NoWrapBoxView.java
module edu::umd::cs::findbugs::sourceViewer::NoWrapBoxView
   inherits from javax::swing::text::BoxView
   function getMinimumSpan(int) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function layout(int,int) in line 32
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function NoWrapBoxView(Element,int) in line 27
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/sourceViewer/NumberedEditorKit.java
module edu::umd::cs::findbugs::sourceViewer::NumberedEditorKit
   inherits from javax::swing::text::StyledEditorKit
   function getViewFactory() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function NumberedEditorKit(HighlightInformation) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/sourceViewer/NumberedParagraphView.java
module edu::umd::cs::findbugs::sourceViewer::NumberedParagraphView
   inherits from javax::swing::text::ParagraphView
   function getLineNumber() in line 99
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   function getPreviousLineCount0() in line 84
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function paint(Graphics,Shape) in line 52
      protection public
      31 lines of code
      2 parameters
      1 conditional paths
   function NumberedParagraphView(Element,HighlightInformation) in line 41
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable NUMBERS_WIDTH in line 39
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/edu/umd/cs/findbugs/sourceViewer/NumberedViewFactory.java
module edu::umd::cs::findbugs::sourceViewer::NumberedViewFactory
   inherits from javax::swing::text::ViewFactory
   function create(Element) in line 38
      protection public
      25 lines of code
      1 parameters
      1 conditional paths
   function NumberedViewFactory(HighlightInformation) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/net/jcip/annotations/GuardedBy.java
module net::jcip::annotations::GuardedBy
   function value() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/net/jcip/annotations/Immutable.java
module net::jcip::annotations::Immutable
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/net/jcip/annotations/NotThreadSafe.java
module net::jcip::annotations::NotThreadSafe
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/java5/net/jcip/annotations/ThreadSafe.java
module net::jcip::annotations::ThreadSafe
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/architecture/PackageDependenciesTest.java
module edu::umd::cs::findbugs::architecture::PackageDependenciesTest
   inherits from junit::framework::TestCase
   function assertPackageConstraint(String,String) in line 95
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable engine defined in edu::umd::cs::findbugs::architecture::PackageDependenciesTest
   function setUp() in line 76
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable engine defined in edu::umd::cs::findbugs::architecture::PackageDependenciesTest
   function tearDown() in line 89
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable engine defined in edu::umd::cs::findbugs::architecture::PackageDependenciesTest
   function testCloudDependencies() in line 56
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function assertPackageConstraint(String,String) defined in edu::umd::cs::findbugs::architecture::PackageDependenciesTest
   function testGui2Dependencies() in line 34
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function assertPackageConstraint(String,String) defined in edu::umd::cs::findbugs::architecture::PackageDependenciesTest
   variable engine in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/ba/ch/Subtypes2Test.java
module edu::umd::cs::findbugs::ba::ch::Subtypes2Test
   inherits from edu::umd::cs::findbugs::FindBugsTestCase
   function getSubtypes2() in line 104
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function setUp() in line 73
      30 lines of code
      0 parameters
      1 conditional paths
   function testArrayFirstCommonSuperclass() in line 278
      protection public
      24 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function getFirstCommonSuperclass(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testArrayFirstCommonSuperclassTricky() in line 303
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function getFirstCommonSuperclass(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testArrayOfPrimitiveIsSubtypeOfObject() in line 214
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testArrays() in line 159
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testArraysWrongDimension() in line 186
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testEasyFirstCommonSuperclass() in line 242
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function getFirstCommonSuperclass(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testIdentitySubtype() in line 134
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testInterfaceFirstCommonSuperclass() in line 261
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function getFirstCommonSuperclass(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testInterfaceIsSubtypeOfObject() in line 149
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testInterfaces() in line 319
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function getFirstCommonSuperclass(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testMultidimensionalArrayIsSubtypeOfObjectArray() in line 199
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testSpecialStringSubclasses() in line 227
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testStringSubtypeOfObject() in line 108
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testStringSubtypeOfSerializable() in line 121
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testUnrelatedTypes() in line 173
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/ba/generic/GenericSignatureParserTest.java
module edu::umd::cs::findbugs::ba::generic::GenericSignatureParserTest
   inherits from junit::framework::TestCase
   function test1() in line 29
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/ba/generic/GenericUtilitiesTest.java
module edu::umd::cs::findbugs::ba::generic::GenericUtilitiesTest
   inherits from junit::framework::TestCase
   function testMapSignature() in line 54
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function testNestedSignature() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable SAMPLE_SIGNATURE defined in edu::umd::cs::findbugs::ba::generic::GenericUtilitiesTest
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function testNestedSignature2() in line 45
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function testNestedSignatureParser() in line 58
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable SAMPLE_SIGNATURE defined in edu::umd::cs::findbugs::ba::generic::GenericUtilitiesTest
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function testOKSignaturesThatHaveCausedProblems() in line 62
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testUnmatchedRightAngleBracket() in line 37
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable SAMPLE_SIGNATURE in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/ba/generic/TestGenericObjectType.java
module edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
   inherits from junit::framework::TestCase
   function compareTypes(Type,Type) in line 96
      10 lines of code
      2 parameters
      2 conditional paths
   function initTest(String,String,String,GenericUtilities.TypeCategory,String,Type,List< ReferenceType >) in line 47
      protection public
      16 lines of code
      7 parameters
      1 conditional paths
   function processTest() in line 64
      protection public
      30 lines of code
      0 parameters
      6 conditional paths
      uses function toString(boolean) defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getTypeCategory() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function hasParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function compareTypes(Type,Type) defined in edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
      uses function getParameterAt(int) defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getVariable() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getExtension() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function testCreateTypes() in line 120
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function initTest(String,String,String,GenericUtilities.TypeCategory,String,Type,List< ReferenceType >) defined in edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
      uses function processTest() defined in edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
   function testParameterizedList() in line 107
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function initTest(String,String,String,GenericUtilities.TypeCategory,String,Type,List< ReferenceType >) defined in edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
      uses function processTest() defined in edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
   function testTypeVariables() in line 136
      protection public
      57 lines of code
      0 parameters
      1 conditional paths
      uses function initTest(String,String,String,GenericUtilities.TypeCategory,String,Type,List< ReferenceType >) defined in edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
      uses function processTest() defined in edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/ba/generic/TestGenericSignatureParser.java
module edu::umd::cs::findbugs::ba::generic::TestGenericSignatureParser
   inherits from junit::framework::TestCase
   function processTest(String,String...) in line 31
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function testSignatures() in line 42
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses function processTest(String,String...) defined in edu::umd::cs::findbugs::ba::generic::TestGenericSignatureParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/ba/MethodHashTest.java
module edu::umd::cs::findbugs::ba::MethodHashTest
   inherits from junit::framework::TestCase
   function setUp() in line 45
      9 lines of code
      0 parameters
      1 conditional paths
   function testGreater() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testHashToString() in line 55
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testLesser() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testLonger() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testSame() in line 65
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testShorter() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testStringToHash() in line 60
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/ba/npe/IsNullValueTest.java
module edu::umd::cs::findbugs::ba::npe::IsNullValueTest
   inherits from junit::framework::TestCase
   function testMerge1() in line 6
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function toExceptionValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function testMerge2() in line 13
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function toExceptionValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function testMerge3() in line 21
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function toExceptionValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function testMerge5() in line 35
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function toExceptionValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function testMerge6() in line 42
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function toExceptionValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/ba/npe/NonNullParamPropertyTest.java
module edu::umd::cs::findbugs::ba::npe::NonNullParamPropertyTest
   inherits from junit::framework::TestCase
   function setUp() in line 14
      11 lines of code
      0 parameters
      1 conditional paths
      uses function setNonNull(int,boolean) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function testEmpty() in line 26
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function isNonNull(int) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function testExtremes() in line 44
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function isNonNull(int) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function testIsEmpty() in line 32
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function testNonEmpty() in line 38
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function isNonNull(int) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function testOutOfBounds() in line 50
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function isNonNull(int) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/ba/npe/ReturnPathTypeTest.java
module edu::umd::cs::findbugs::ba::npe::ReturnPathTypeTest
   inherits from junit::framework::TestCase
   function setUp() in line 40
      7 lines of code
      0 parameters
      1 conditional paths
      uses function setCanReturnNormally(boolean) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testAbnormalMergeWithAbnormal() in line 104
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function setCanReturnNormally(boolean) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function mergeWith(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testAbnormalMergeWithNormal() in line 91
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function mergeWith(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testCannotReturnNormally() in line 64
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testCanReturnNormally() in line 59
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testMergeWithTop() in line 69
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function mergeWith(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testNormalMergeWIthAbnormal() in line 86
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function mergeWith(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testNormalMergeWithNormal() in line 96
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function setCanReturnNormally(boolean) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function mergeWith(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testTop() in line 48
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function isTop() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testTopMergeWithAbnormalReturn() in line 81
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function mergeWith(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testTopMergeWithNormalReturn() in line 76
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function mergeWith(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/ba/npe2/TestDefinitelyNullSet.java
module edu::umd::cs::findbugs::ba::npe2::TestDefinitelyNullSet
   inherits from junit::framework::TestCase
   function setUp() in line 35
      3 lines of code
      0 parameters
      1 conditional paths
   function testEmptyToString() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/ba/npe2/TestNullnessValue.java
module edu::umd::cs::findbugs::ba::npe2::TestNullnessValue
   inherits from junit::framework::TestCase
   function setUp() in line 32
      3 lines of code
      0 parameters
      1 conditional paths
   function testDefinitelyNullToCheckedString() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function toCheckedValue() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses function toString() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function testDefinitelyNullToString() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/ba/SignatureParserTest.java
module edu::umd::cs::findbugs::ba::SignatureParserTest
   inherits from junit::framework::TestCase
   function setUp() in line 13
      4 lines of code
      0 parameters
      1 conditional paths
   function testManyParams() in line 23
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function testNoParams() in line 18
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/BugInstanceTest.java
module edu::umd::cs::findbugs::BugInstanceTest
   inherits from junit::framework::TestCase
   function checkProperty(BugProperty,String,String) in line 121
      4 lines of code
      3 parameters
      1 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::BugProperty
      uses function getValue() defined in edu::umd::cs::findbugs::BugProperty
   function checkPropertyIterator(Iterator< BugProperty >,String[],String[]) in line 109
      11 lines of code
      3 parameters
      3 conditional paths
      uses function checkProperty(BugProperty,String,String) defined in edu::umd::cs::findbugs::BugInstanceTest
   function get(Iterator< BugProperty >) in line 91
      8 lines of code
      1 parameters
      2 conditional paths
   function noMore(Iterator< BugProperty >) in line 100
      8 lines of code
      1 parameters
      2 conditional paths
   function removeThroughIterator(Iterator< BugProperty >,String) in line 126
      7 lines of code
      2 parameters
      3 conditional paths
      uses variable next defined in edu::umd::cs::findbugs::BugProperty
      uses function getName() defined in edu::umd::cs::findbugs::BugProperty
   function setUp() in line 18
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function setProperty(String,String) defined in edu::umd::cs::findbugs::BugInstance
   function testIterateTooFar() in line 44
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function noMore(Iterator< BugProperty >) defined in edu::umd::cs::findbugs::BugInstanceTest
   function testMultipleRemove() in line 52
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
   function testPropertyIterator() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkPropertyIterator(Iterator< BugProperty >,String[],String[]) defined in edu::umd::cs::findbugs::BugInstanceTest
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
   function testRemoveAll1() in line 82
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function removeThroughIterator(Iterator< BugProperty >,String) defined in edu::umd::cs::findbugs::BugInstanceTest
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function checkPropertyIterator(Iterator< BugProperty >,String[],String[]) defined in edu::umd::cs::findbugs::BugInstanceTest
   function testRemoveAndAdd() in line 74
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function removeThroughIterator(Iterator< BugProperty >,String) defined in edu::umd::cs::findbugs::BugInstanceTest
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function setProperty(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function checkPropertyIterator(Iterator< BugProperty >,String[],String[]) defined in edu::umd::cs::findbugs::BugInstanceTest
   function testRemoveBeforeNext() in line 64
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
   function testRemoveThroughIterator1() in line 29
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function removeThroughIterator(Iterator< BugProperty >,String) defined in edu::umd::cs::findbugs::BugInstanceTest
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function checkPropertyIterator(Iterator< BugProperty >,String[],String[]) defined in edu::umd::cs::findbugs::BugInstanceTest
   function testRemoveThroughIterator2() in line 34
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function removeThroughIterator(Iterator< BugProperty >,String) defined in edu::umd::cs::findbugs::BugInstanceTest
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function checkPropertyIterator(Iterator< BugProperty >,String[],String[]) defined in edu::umd::cs::findbugs::BugInstanceTest
   function testRemoveThroughIterator3() in line 39
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function removeThroughIterator(Iterator< BugProperty >,String) defined in edu::umd::cs::findbugs::BugInstanceTest
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function checkPropertyIterator(Iterator< BugProperty >,String[],String[]) defined in edu::umd::cs::findbugs::BugInstanceTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/ClassScreenerTest.java
module edu::umd::cs::findbugs::ClassScreenerTest
   inherits from junit::framework::TestCase
   function makeFileName(String) in line 31
      3 lines of code
      1 parameters
      1 conditional paths
   function makeJarURL(String) in line 35
      3 lines of code
      1 parameters
      1 conditional paths
   function setUp() in line 56
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable emptyScreener defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable particularClassScreener defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses function addAllowedClass(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses variable SOME_CLASS defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable particularPackageScreener defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses function addAllowedPackage(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses variable FOOBAR_PACKAGE defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable particularPackageScreener2 defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable FOOBAR_PACKAGE_WITH_TRAILING_DOT defined in edu::umd::cs::findbugs::ClassScreenerTest
   function testEmptyClassScreener() in line 69
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable emptyScreener defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses function matches(String) defined in edu::umd::cs::findbugs::IClassScreener
      uses variable SOME_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_OTHER_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable UNRELATED_THING_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_OTHER_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable UNRELATED_THING_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
   function testPackageScreener(IClassScreener) in line 94
      8 lines of code
      1 parameters
      1 conditional paths
      uses function matches(String) defined in edu::umd::cs::findbugs::IClassScreener
      uses variable SOME_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_OTHER_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable UNRELATED_THING_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_OTHER_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable UNRELATED_THING_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
   function testParticularClassScreener() in line 79
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable particularClassScreener defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses function matches(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses variable SOME_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_OTHER_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable UNRELATED_THING_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_OTHER_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable UNRELATED_THING_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
   function testParticularPackageScreener() in line 89
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function testPackageScreener(IClassScreener) defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable particularPackageScreener defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable particularPackageScreener2 defined in edu::umd::cs::findbugs::ClassScreenerTest
   variable emptyScreener in line 26
   variable FOOBAR_PACKAGE in line 39
   variable FOOBAR_PACKAGE_WITH_TRAILING_DOT in line 40
   variable FURRYLEMUR_PACKAGE in line 41
   variable particularClassScreener in line 27
   variable particularPackageScreener in line 28
   variable particularPackageScreener2 in line 29
   variable SOME_CLASS in line 43
   variable SOME_CLASS_FILENAME in line 47
   variable SOME_CLASS_JARFILENAME in line 51
   variable SOME_OTHER_CLASS in line 44
   variable SOME_OTHER_CLASS_FILENAME in line 48
   variable SOME_OTHER_CLASS_JARFILENAME in line 52
   variable UNRELATED_THING_CLASS in line 45
   variable UNRELATED_THING_CLASS_FILENAME in line 49
   variable UNRELATED_THING_CLASS_JARFILENAME in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/config/ProjectFilterSettingsTest.java
module edu::umd::cs::findbugs::config::ProjectFilterSettingsTest
   inherits from junit::framework::TestCase
   function setUp() in line 36
      20 lines of code
      0 parameters
      1 conditional paths
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function removeCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function addCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testAddCategory() in line 70
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function containsCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function addCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testDisplayFalseWarnings() in line 125
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable displayFalseWarnings defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function setDisplayFalseWarnings(boolean) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function equals(Object) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function toEncodedString() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testEncodeDecode() in line 113
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function toEncodedString() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function hiddenToEncodedString() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testEquals() in line 94
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testPlainCategories() in line 61
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function getBugCategories() defined in edu::umd::cs::findbugs::I18N
      uses function containsCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getActiveCategorySet() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testPlainPrio() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMinPriority() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable DEFAULT_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testRemoveCategory() in line 76
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function containsCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function removeCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testSetMinPriority() in line 82
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getMinPriority() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getMinPriorityAsInt() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/config/UserPreferencesTest.java
module edu::umd::cs::findbugs::config::UserPreferencesTest
   inherits from junit::framework::TestCase
   function setUp() in line 11
      3 lines of code
      0 parameters
      1 conditional paths
   function testClone() in line 15
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function clone() defined in edu::umd::cs::findbugs::config::UserPreferences
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/detect/FindSqlInjectionTest.java
module edu::umd::cs::findbugs::detect::FindSqlInjectionTest
   inherits from junit::framework::TestCase
   function testCloseQuote() in line 39
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function testOpenQuote() in line 29
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/DetectorsTest.java
module edu::umd::cs::findbugs::DetectorsTest
   function getBugsLocations(List< BugInstance >) in line 101
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable FB_MISSING_EXPECTED_WARNING defined in edu::umd::cs::findbugs::DetectorsTest
      uses function getValue() defined in edu::umd::cs::findbugs::StringAnnotation
      uses function toString() defined in edu::umd::cs::findbugs::StringAnnotation
   function isUnexpectedBug(BugInstance) in line 120
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable FB_MISSING_EXPECTED_WARNING defined in edu::umd::cs::findbugs::DetectorsTest
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses variable FB_UNEXPECTED_WARNING defined in edu::umd::cs::findbugs::DetectorsTest
   function loadFindbugsPlugin() in line 129
      9 lines of code
      0 parameters
      1 conditional paths
      uses function setPluginList(URL[]) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function setUp() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function loadFindbugsPlugin() defined in edu::umd::cs::findbugs::DetectorsTest
   function setUpEngine() in line 144
      28 lines of code
      0 parameters
      1 conditional paths
      uses function setProjectName(String) defined in edu::umd::cs::findbugs::Project
      uses function setProject(Project) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses variable engine defined in edu::umd::cs::findbugs::DetectorsTest
      uses function setDetectorFactoryCollection(DetectorFactoryCollection) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses variable bugReporter defined in edu::umd::cs::findbugs::DetectorsTest
      uses function setPriorityThreshold(int) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function setBugReporter(BugReporter) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function getFactory(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function enableDetector(DetectorFactory,boolean) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function getFilterSettings() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function clearAllCategories() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function setUserPreferences(UserPreferences) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function addFile(String) defined in edu::umd::cs::findbugs::Project
      uses function addAuxClasspathEntry(String) defined in edu::umd::cs::findbugs::Project
   function testAllRegressionFiles() in line 71
      protection public
      24 lines of code
      0 parameters
      4 conditional paths
      uses function setUpEngine() defined in edu::umd::cs::findbugs::DetectorsTest
      uses variable engine defined in edu::umd::cs::findbugs::DetectorsTest
      uses function execute() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses variable bugReporter defined in edu::umd::cs::findbugs::DetectorsTest
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses function isUnexpectedBug(BugInstance) defined in edu::umd::cs::findbugs::DetectorsTest
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getBugsLocations(List< BugInstance >) defined in edu::umd::cs::findbugs::DetectorsTest
   variable bugReporter in line 61
   variable engine in line 63
   variable FB_MISSING_EXPECTED_WARNING in line 59
   variable FB_UNEXPECTED_WARNING in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/FindBugsTestCase.java
module edu::umd::cs::findbugs::FindBugsTestCase
   inherits from junit::framework::TestCase
   abstract class
   function executeFindBugsTest(final RunnableWithExceptions) in line 216
      15 lines of code
      1 parameters
      3 conditional paths
      uses function TestRunnerThread(RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
      uses variable runnable defined in edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
      uses function getDetectorAdapter() defined in edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
      uses function finishTest() defined in edu::umd::cs::findbugs::JUnitDetectorAdapter
   variable EMPTY_CLASS_DATA in line 45
      protection public
module edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
   inherits from Thread
   function createEmptyClassFile(File) in line 195
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable EMPTY_CLASS_DATA defined in edu::umd::cs::findbugs::FindBugsTestCase
   function getDetectorAdapter() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detectorAdapter defined in edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
   function run() in line 113
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function runTest(RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
      uses variable runnable defined in edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
   function runTest(RunnableWithExceptions) in line 123
      63 lines of code
      1 parameters
      6 conditional paths
      uses function createEmptyClassFile(File) defined in edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
      uses function setBugReporter(BugReporter) defined in edu::umd::cs::findbugs::FindBugs2
      uses function addFile(String) defined in edu::umd::cs::findbugs::Project
      uses function setProject(Project) defined in edu::umd::cs::findbugs::FindBugs2
      uses function setEnabled(boolean) defined in edu::umd::cs::findbugs::Plugin
      uses function addDetectorFactory(DetectorFactory) defined in edu::umd::cs::findbugs::Plugin
      uses function factoryIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function detectorFactoryIterator() defined in edu::umd::cs::findbugs::Plugin
      uses function setDetectorFactoryCollection(DetectorFactoryCollection) defined in edu::umd::cs::findbugs::FindBugs2
      uses function setUserPreferences(UserPreferences) defined in edu::umd::cs::findbugs::FindBugs2
      uses variable runnable defined in edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
      uses function execute() defined in edu::umd::cs::findbugs::FindBugs2
      uses variable detectorAdapter defined in edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
      uses variable instance defined in edu::umd::cs::findbugs::JUnitDetectorAdapter
   function TestRunnerThread(RunnableWithExceptions) in line 98
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable runnable defined in edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
   variable detectorAdapter in line 96
   variable runnable in line 95
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/jaif/JAIFScannerTest.java
module edu::umd::cs::findbugs::jaif::JAIFScannerTest
   inherits from junit::framework::TestCase
   function checkToken(JAIFScanner,String,JAIFTokenKind) in line 32
      6 lines of code
      3 parameters
      1 conditional paths
   function getScanner(String) in line 28
      3 lines of code
      1 parameters
      1 conditional paths
   function testScanColon() in line 39
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable COLON defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function testScanComma() in line 53
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable COMMA defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function testScanDecimalLiteral() in line 126
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable DECIMAL_LITERAL defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function testScanEquals() in line 60
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable EQUALS defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function testScanFloatingPointLiteral() in line 83
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable FLOATING_POINT_LITERAL defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function testScanFloatingPointLiteral2() in line 95
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable FLOATING_POINT_LITERAL defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function testScanHexLiteral() in line 117
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable HEX_LITERAL defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function testScanIdentifier() in line 67
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable IDENTIFIER_OR_KEYWORD defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable LPAREN defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable RPAREN defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function testScanOctalLiteral() in line 108
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable OCTAL_LITERAL defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function testScanParens() in line 45
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable LPAREN defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable RPAREN defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function testScanStringLiteral() in line 135
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable STRING_LITERAL defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/JUnitDetectorAdapter.java
module edu::umd::cs::findbugs::JUnitDetectorAdapter
   inherits from edu::umd::cs::findbugs::Detector2
   function finishPass() in line 69
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function finishTest() in line 57
      protection public
      8 lines of code
      0 parameters
      4 conditional paths
      uses variable throwable defined in edu::umd::cs::findbugs::JUnitDetectorAdapter
   function getDetectorClassName() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setRunnable(RunnableWithExceptions) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable runnableInstance defined in edu::umd::cs::findbugs::JUnitDetectorAdapter
   function visitClass(ClassDescriptor) in line 82
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable testExecuted defined in edu::umd::cs::findbugs::JUnitDetectorAdapter
      uses variable runnableInstance defined in edu::umd::cs::findbugs::JUnitDetectorAdapter
      uses variable throwable defined in edu::umd::cs::findbugs::JUnitDetectorAdapter
   function JUnitDetectorAdapter(BugReporter) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function instance() defined in edu::umd::cs::findbugs::JUnitDetectorAdapter
   variable instance in line 37
   variable runnableInstance in line 39
   variable testExecuted in line 35
   variable throwable in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/ml/SplitCamelCaseIdentifierTest.java
module edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifierTest
   inherits from junit::framework::TestCase
   function checkContents(Collection< String >,String[]) in line 57
      6 lines of code
      2 parameters
      2 conditional paths
   function setUp() in line 18
      8 lines of code
      0 parameters
      1 conditional paths
   function testAllLower() in line 42
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function split() defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifier
      uses function checkContents(Collection< String >,String[]) defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifierTest
   function testAllUpper() in line 47
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function split() defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifier
      uses function checkContents(Collection< String >,String[]) defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifierTest
   function testCapitalized() in line 52
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function split() defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifier
      uses function checkContents(Collection< String >,String[]) defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifierTest
   function testSplit() in line 27
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function split() defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifier
      uses function checkContents(Collection< String >,String[]) defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifierTest
   function testSplit2() in line 32
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function split() defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifier
      uses function checkContents(Collection< String >,String[]) defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifierTest
   function testSplitLong() in line 37
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function split() defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifier
      uses function checkContents(Collection< String >,String[]) defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifierTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/OpcodeStackItemTest.java
module edu::umd::cs::findbugs::OpcodeStackItemTest
   inherits from junit::framework::TestCase
   function testMergeIntAndZero() in line 26
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/RunnableWithExceptions.java
module edu::umd::cs::findbugs::RunnableWithExceptions
   function run() in line 23
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/util/ClassNameTest.java
module edu::umd::cs::findbugs::util::ClassNameTest
   inherits from junit::framework::TestCase
   function testExtractClassName() in line 30
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function testExtractClassNameBad() in line 38
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/util/StringsTest.java
module edu::umd::cs::findbugs::util::StringsTest
   inherits from junit::framework::TestCase
   function testEscapeXml() in line 56
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable escapedStrings defined in edu::umd::cs::findbugs::util::StringsTest
      uses variable unescapedStrings defined in edu::umd::cs::findbugs::util::StringsTest
   function testUnescapeXml() in line 67
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable escapedStrings defined in edu::umd::cs::findbugs::util::StringsTest
      uses variable unescapedStrings defined in edu::umd::cs::findbugs::util::StringsTest
   variable escapedStrings in line 27
      protection public
   variable unescapedStrings in line 45
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/visitclass/DismantleBytecodeTest.java
module edu::umd::cs::findbugs::visitclass::DismantleBytecodeTest
   inherits from junit::framework::TestCase
   function testAreOppositeBranches() in line 29
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/visitclass/GetNumberArgumentsTest.java
module edu::umd::cs::findbugs::visitclass::GetNumberArgumentsTest
   inherits from junit::framework::TestCase
   function testArrays() in line 40
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function testSimpleObjectArgument() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testSimpleWithVoidIntegerType() in line 36
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
   function testSimpleWithVoidReturnType() in line 31
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
   function testStringArguments() in line 47
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/junit/edu/umd/cs/findbugs/workflow/FindSeqNumTest.java
module edu::umd::cs::findbugs::workflow::FindSeqNumTest
   inherits from junit::framework::TestCase
   function setUp() in line 20
      16 lines of code
      0 parameters
      2 conditional paths
   function test0() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function test1() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAfterJune15() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAfterJune25() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAfterJune5() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAfterMay5() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testBeforeJune15() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testBeforeJune25() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testBeforeJune5() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testBeforeMay5() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testLast() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testlastVersion() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testminusOne() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testminusTwo() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testV1_0() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testV1_1() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testV2_0() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testV2_1() in line 64
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/tools/edu/umd/cs/findbugs/tools/FilterPropertyDatabase.java
module edu::umd::cs::findbugs::tools::FilterPropertyDatabase
   function main(String[]) in line 42
      protection public
      19 lines of code
      1 parameters
      6 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/tools/edu/umd/cs/findbugs/tools/FixIndentation.java
module edu::umd::cs::findbugs::tools::FixIndentation
   function main(String) in line 43
      protection public
      3 lines of code
      1 parameters
      24 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/tools/edu/umd/cs/findbugs/tools/html/ColorAlternator.java
module edu::umd::cs::findbugs::tools::html::ColorAlternator
   function nextColor() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable colorList defined in edu::umd::cs::findbugs::tools::html::ColorAlternator
   function ColorAlternator(String[]) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable colorList defined in edu::umd::cs::findbugs::tools::html::ColorAlternator
   variable colorList in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/tools/edu/umd/cs/findbugs/tools/html/PlainPrintBugDescriptions.java
module edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   inherits from edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
   function beginBody() in line 68
      2 lines of code
      0 parameters
      1 conditional paths
   function emit(BugPattern) in line 51
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   function endBody() in line 72
      2 lines of code
      0 parameters
      1 conditional paths
   function epilogue() in line 58
      4 lines of code
      0 parameters
      1 conditional paths
      uses function endBody() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   function getDocTitle() in line 37
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable docTitle defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   function getPrintStream() in line 39
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   function header() in line 64
      2 lines of code
      0 parameters
      1 conditional paths
   function main(String[]) in line 75
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable docTitle defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function PlainPrintBugDescriptions(String,OutputStream) defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   function prologue() in line 42
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable docTitle defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function header() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function beginBody() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   function PlainPrintBugDescriptions(String,OutputStream) in line 32
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable docTitle defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   variable docTitle in line 29
   variable out in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/tools/edu/umd/cs/findbugs/tools/html/PrettyPrintBugDescriptions.java
module edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   inherits from edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   function beginBody() in line 103
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function getPrintStream() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable beginBodyText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function emit(BugPattern) in line 84
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugPatternSet defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function emitBugDescriptions() in line 137
      14 lines of code
      0 parameters
      2 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function getPrintStream() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable bugPatternSet defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function emitSummaryTable() in line 115
      21 lines of code
      0 parameters
      2 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function getPrintStream() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable TABLE_COLORS defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses variable bugPatternSet defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses function nextColor() defined in edu::umd::cs::findbugs::tools::html::ColorAlternator
      uses function getBugCategoryDescription(String) defined in edu::umd::cs::findbugs::I18N
   function endBody() in line 110
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function getPrintStream() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable endBodyText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function epilogue() in line 89
      5 lines of code
      0 parameters
      1 conditional paths
      uses function emitSummaryTable() defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses function emitBugDescriptions() defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function header() in line 96
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function getPrintStream() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable headerText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function isEnabled(DetectorFactory) in line 153
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable unabridged defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function main(String[]) in line 157
      protection public
      39 lines of code
      1 parameters
      9 conditional paths
      uses variable unabridged defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses variable docTitle defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function PrettyPrintBugDescriptions(String,OutputStream) defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses function setHeaderText(String) defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses function setBeginBodyText(String) defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses function setPrologueText(String) defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses function setEndBodyText(String) defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses function print() defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
   function prologue() in line 77
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function getPrintStream() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable prologueText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function setBeginBodyText(String) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable beginBodyText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function setEndBodyText(String) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable endBodyText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function setHeaderText(String) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable headerText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function setPrologueText(String) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable prologueText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function PrettyPrintBugDescriptions(String,OutputStream) in line 54
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable docTitle defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   variable beginBodyText in line 37
   variable bugPatternSet in line 35
   variable endBodyText in line 39
   variable headerText in line 36
   variable prologueText in line 38
   variable TABLE_COLORS in line 42
   variable unabridged in line 40
module edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions::BugPatternComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(BugPattern,BugPattern) in line 45
      protection public
      7 lines of code
      2 parameters
      3 conditional paths
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getType() defined in edu::umd::cs::findbugs::BugPattern
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/tools/edu/umd/cs/findbugs/tools/html/PrintBugDescriptions.java
module edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
   abstract class
   function emit(BugPattern) in line 64
      1 lines of code
      1 parameters
      1 conditional paths
   function epilogue() in line 66
      1 lines of code
      0 parameters
      1 conditional paths
   function isEnabled(DetectorFactory) in line 58
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isDefaultEnabled() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function prologue() defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
      uses function emit(BugPattern) defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
      uses function epilogue() defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
   function print() in line 33
      protection public
      24 lines of code
      0 parameters
      5 conditional paths
      uses function factoryIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function isEnabled(DetectorFactory) defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
      uses function getReportedBugPatterns() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function prologue() defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
      uses function bugPatternIterator() defined in edu::umd::cs::findbugs::I18N
      uses function emit(BugPattern) defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
      uses function epilogue() defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
   function prologue() in line 62
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/tools/edu/umd/cs/findbugs/tools/junit/JUnitJarRunner.java
module edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
   function buildTestSuite() in line 71
      protection public
      42 lines of code
      0 parameters
      7 conditional paths
      uses variable jarFileName defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
      uses variable classpath defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
      uses function run(TestSuite,String) defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
   function main(String[]) in line 124
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses variable jarFileName defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
      uses function JUnitJarRunner(String) defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
      uses function setClassPath(String) defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
      uses function buildTestSuite() defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
      uses function run(TestSuite,String) defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
   function run(TestSuite,String) in line 114
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
   function setClassPath(String) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classpath defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
   function JUnitJarRunner(String) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable jarFileName defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
   variable classpath in line 47
   variable jarFileName in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.3.9-source/findbugs-1.3.9/src/tools/edu/umd/cs/findbugs/tools/xml/CheckMessages.java
module edu::umd::cs::findbugs::tools::xml::CheckMessages
   function checkDescribed(String,XMLFile,Set< String >,Set< String >) in line 189
      protection public
      10 lines of code
      4 parameters
      2 conditional paths
      uses function CheckMessagesException(String,XMLFile,Node) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages::CheckMessagesException
   function checkMessages(XMLFile) in line 148
      protection public
      40 lines of code
      1 parameters
      4 conditional paths
      uses function checkDescribed(String,XMLFile,Set< String >,Set< String >) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages
      uses variable declaredDetectorsSet defined in edu::umd::cs::findbugs::tools::xml::CheckMessages
      uses variable declaredAbbrevsSet defined in edu::umd::cs::findbugs::tools::xml::CheckMessages
   function main(String[]) in line 200
      protection public
      23 lines of code
      1 parameters
      4 conditional paths
      uses function checkMessages(XMLFile) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages
      uses function CheckMessages(String) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages
   function CheckMessages(String) in line 132
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses variable declaredDetectorsSet defined in edu::umd::cs::findbugs::tools::xml::CheckMessages
      uses function collectAttributes(String,String) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages::XMLFile
      uses variable declaredAbbrevsSet defined in edu::umd::cs::findbugs::tools::xml::CheckMessages
   variable declaredAbbrevsSet in line 130
   variable declaredDetectorsSet in line 129
module edu::umd::cs::findbugs::tools::xml::CheckMessages::CheckMessagesException
   inherits from org::dom4j::DocumentException
   function CheckMessagesException(String,XMLFile,Node) in line 47
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function getFilename() defined in edu::umd::cs::findbugs::tools::xml::CheckMessages::XMLFile
   function CheckMessagesException(String,XMLFile) in line 51
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getFilename() defined in edu::umd::cs::findbugs::tools::xml::CheckMessages::XMLFile
   variable serialVersionUID in line 45
module edu::umd::cs::findbugs::tools::xml::CheckMessages::XMLFile
   function checkAttribute(Node,String) in line 98
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function CheckMessagesException(String,XMLFile,Node) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages::CheckMessagesException
   function checkElement(Node,String) in line 108
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function CheckMessagesException(String,XMLFile,Node) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages::CheckMessagesException
   function checkNonEmptyText(Node) in line 118
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function CheckMessagesException(String,XMLFile,Node) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages::CheckMessagesException
   function collectAttributes(String,String) in line 85
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
   function getDocument() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getFilename() in line 68
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function xpathIterator(String) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function XMLFile(String) in line 60
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   variable document in line 58
   variable filename in line 57
