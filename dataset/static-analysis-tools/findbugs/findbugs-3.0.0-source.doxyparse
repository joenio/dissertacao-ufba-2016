file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/antTask/edu/umd/cs/findbugs/anttask/AbstractFindBugsTask.java
module edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   inherits from org::apache::tools::ant::Task
   abstract class
   function addArg(String) in line 348
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable findbugsEngine defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function afterExecuteJavaProcess(int) in line 409
      6 lines of code
      1 parameters
      2 conditional paths
   function beforeExecuteJavaProcess() in line 407
      1 lines of code
      0 parameters
      1 conditional paths
   function checkParameters() in line 253
      23 lines of code
      0 parameters
      7 conditional paths
      uses variable homeDir defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable classpath defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable pluginList defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable systemPropertyList defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function configureFindbugsEngine() in line 405
      1 lines of code
      0 parameters
      1 conditional paths
   function createClasspath() in line 189
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable classpath defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function createFindbugsEngine() in line 281
      53 lines of code
      0 parameters
      8 conditional paths
      uses variable findbugsEngine defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable jvm defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable timeout defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable debug defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable jvmargs defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable systemPropertyList defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable homeDir defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable classpath defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable pluginList defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable mainClass defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function createPluginList() in line 220
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable pluginList defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function createSystemProperty() in line 169
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function SystemProperty() defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask::SystemProperty
      uses variable systemPropertyList defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function execFindbugs() in line 365
      39 lines of code
      0 parameters
      3 conditional paths
      uses function createFindbugsEngine() defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses function configureFindbugsEngine() defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses function beforeExecuteJavaProcess() defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses function getDebug() defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses function getFindbugsEngine() defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable execResultProperty defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses function afterExecuteJavaProcess(int) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function execute() in line 235
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses function checkParameters() defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses function execFindbugs() defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable errorProperty defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable failOnError defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function getDebug() in line 123
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable debug defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function getFindbugsEngine() in line 338
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable findbugsEngine defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function setClasspath(Path) in line 178
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable classpath defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function setClasspathRef(Reference) in line 199
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function createClasspath() defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function setDebug(boolean) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setErrorProperty(String) in line 162
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask::SystemProperty
   function setFailOnError(boolean) in line 154
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHome(File) in line 109
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable homeDir defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function setInputString(String) in line 356
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable findbugsEngine defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function setJvm(String) in line 137
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable jvm defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function setJvmargs(String) in line 130
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPluginList(Path) in line 209
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable pluginList defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function setPluginListRef(Reference) in line 230
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createPluginList() defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function setTimeout(long) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable timeout defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function AbstractFindBugsTask(String) in line 101
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable mainClass defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable RESULT_PROPERTY_SUFFIX defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   variable classpath in line 90
   variable debug in line 74
   variable DEFAULT_TIMEOUT in line 42
      protection public
   variable errorProperty in line 86
   variable execResultProperty in line 96
      protection public
   variable failOnError in line 84
   variable FINDBUGS_JAR in line 40
      protection public
   variable findbugsEngine in line 94
   variable homeDir in line 76
   variable jvm in line 78
   variable jvmargs in line 80
   variable mainClass in line 72
   variable pluginList in line 92
   variable RESULT_PROPERTY_SUFFIX in line 44
      protection public
   variable systemPropertyList in line 88
   variable timeout in line 82
module edu::umd::cs::findbugs::anttask::AbstractFindBugsTask::SystemProperty
   function getName() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask::SystemProperty
   function getValue() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask::SystemProperty
   function setName(String) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask::SystemProperty
   function setValue(String) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask::SystemProperty
   function SystemProperty() in line 52
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable name in line 48
   variable value in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/antTask/edu/umd/cs/findbugs/anttask/ComputeBugHistoryTask.java
module edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
   inherits from edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function afterExecuteJavaProcess(int) in line 167
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable outputFile defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
   function beforeExecuteJavaProcess() in line 155
      3 lines of code
      0 parameters
      1 conditional paths
   function checkParameters() in line 104
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable outputFile defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
   function configureFindbugsEngine() in line 120
      26 lines of code
      0 parameters
      8 conditional paths
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable outputFile defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
      uses variable overrideRevisionNames defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
      uses variable noPackageMoves defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
      uses variable preciseMatch defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
      uses variable precisePriorityMatch defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
      uses variable quiet defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
      uses variable withMessages defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
      uses variable dataFileList defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
   function createDataFile() in line 92
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable dataFileList defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
   function setNoPackageMoves(boolean) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setOutput(File) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setOverrideRevisionNames(boolean) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPreciseMatch(boolean) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPrecisePriorityMatch(boolean) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setQuiet(boolean) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setWithMessages(boolean) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ComputeBugHistoryTask() in line 51
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable dataFileList defined in edu::umd::cs::findbugs::anttask::ComputeBugHistoryTask
      uses function setFailOnError(boolean) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   variable dataFileList in line 49
   variable noPackageMoves in line 39
   variable outputFile in line 35
   variable overrideRevisionNames in line 37
   variable preciseMatch in line 41
   variable precisePriorityMatch in line 43
   variable quiet in line 45
   variable withMessages in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/antTask/edu/umd/cs/findbugs/anttask/ConvertXmlToTextTask.java
module edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   inherits from edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function afterExecuteJavaProcess(int) in line 155
      25 lines of code
      1 parameters
      7 conditional paths
      uses variable errorProperty defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable ERROR_FLAG defined in edu::umd::cs::findbugs::ExitCodes
      uses variable failIfBugFound defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
      uses variable BUGS_FOUND_FLAG defined in edu::umd::cs::findbugs::ExitCodes
   function beforeExecuteJavaProcess() in line 146
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable output defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
      uses variable input defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
      uses variable format defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   function checkParameters() in line 117
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable input defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
      uses variable format defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   function configureFindbugsEngine() in line 128
      16 lines of code
      0 parameters
      5 conditional paths
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable format defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
      uses variable longBugCodes defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
      uses variable applySuppression defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
      uses variable input defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
      uses variable output defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   function setApplySuppression(boolean) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable applySuppression defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   function setFailIfBugFound(boolean) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable failIfBugFound defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   function setFormat(String) in line 105
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable format defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   function setInput(String) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable input defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   function setInputFile(String) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable input defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   function setLongBugCodes(boolean) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable longBugCodes defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   function setOutput(String) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable output defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   function setOutputFile(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable output defined in edu::umd::cs::findbugs::anttask::ConvertXmlToTextTask
   function ConvertXmlToTextTask() in line 47
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setFailOnError(boolean) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   variable applySuppression in line 37
   variable failIfBugFound in line 39
   variable format in line 45
   variable input in line 41
   variable longBugCodes in line 35
   variable output in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/antTask/edu/umd/cs/findbugs/anttask/DataFile.java
module edu::umd::cs::findbugs::anttask::DataFile
   function getName() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setName(String) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function DataFile() in line 30
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/antTask/edu/umd/cs/findbugs/anttask/FilterBugsTask.java
module edu::umd::cs::findbugs::anttask::FilterBugsTask
   inherits from edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function addBoolOption(String,String) in line 277
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function addOption(String,String) in line 270
      6 lines of code
      2 parameters
      2 conditional paths
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function afterExecuteJavaProcess(int) in line 350
      5 lines of code
      1 parameters
      2 conditional paths
   function beforeExecuteJavaProcess() in line 338
      3 lines of code
      0 parameters
      1 conditional paths
   function checkBoolean(String,String) in line 232
      9 lines of code
      2 parameters
      3 conditional paths
   function checkParameters() in line 248
      21 lines of code
      0 parameters
      3 conditional paths
      uses variable outputFile defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable inputFile defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses function checkBoolean(String,String) defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable notAProblem defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable withSource defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable applySuppression defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable active defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable introducedByChange defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable removedByChange defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable newCode defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable removedCode defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable withMessages defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
   function configureFindbugsEngine() in line 291
      38 lines of code
      0 parameters
      3 conditional paths
      uses variable not defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses function addBoolOption(String,String) defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable notAProblem defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable withSource defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses function addOption(String,String) defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable exclude defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable include defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable annotation defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable after defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable before defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable first defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable last defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable fixed defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable present defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable absent defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable active defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable introducedByChange defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable removedByChange defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable newCode defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable removedCode defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable priority defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable maxRank defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable clazz defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable bugPattern defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable category defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable designation defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable withMessages defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable applySuppression defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable excludeBugs defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses variable inputFile defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
      uses function getName() defined in edu::umd::cs::findbugs::anttask::DataFile
      uses variable outputFile defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
   function createDataFile() in line 98
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable inputFile defined in edu::umd::cs::findbugs::anttask::FilterBugsTask
   function setAbsent(String) in line 176
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setActive(String) in line 180
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAfter(String) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAnnotation(String) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setApplySuppression(String) in line 140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBefore(String) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBugPattern(String) in line 212
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setCategory(String) in line 216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setClass(String) in line 208
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDesignation(String) in line 220
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setExclude(String) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setExcludeBugs(String) in line 228
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFirst(String) in line 160
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFixed(String) in line 168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setInclude(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setInput(String) in line 114
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setInputFile(String) in line 119
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setIntroducedByChange(String) in line 184
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLast(String) in line 164
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setMaxRank(String) in line 204
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNewCode(String) in line 192
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNot(String) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNotAProblem(String) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setOutput(File) in line 106
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setOutputFile(File) in line 110
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPresent(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPriority(String) in line 200
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRemovedByChange(String) in line 188
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRemovedCode(String) in line 196
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setWithMessages(String) in line 224
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setWithSource(String) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function FilterBugsTask() in line 92
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setFailOnError(boolean) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   variable absent in line 62
   variable active in line 64
   variable after in line 50
   variable annotation in line 48
   variable applySuppression in line 36
   variable before in line 52
   variable bugPattern in line 80
   variable category in line 82
   variable clazz in line 78
   variable designation in line 84
   variable exclude in line 44
   variable excludeBugs in line 88
   variable first in line 54
   variable fixed in line 58
   variable include in line 46
   variable inputFile in line 90
   variable introducedByChange in line 66
   variable last in line 56
   variable maxRank in line 76
   variable newCode in line 70
   variable not in line 40
   variable notAProblem in line 38
   variable outputFile in line 34
   variable present in line 60
   variable priority in line 74
   variable removedByChange in line 68
   variable removedCode in line 72
   variable withMessages in line 86
   variable withSource in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/antTask/edu/umd/cs/findbugs/anttask/FindBugsTask.java
module edu::umd::cs::findbugs::anttask::FindBugsTask
   inherits from edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function addFileset(FileSet) in line 551
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable filesets defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function afterExecuteJavaProcess(int) in line 619
      15 lines of code
      1 parameters
      5 conditional paths
      uses variable ERROR_FLAG defined in edu::umd::cs::findbugs::ExitCodes
      uses variable MISSING_CLASS_FLAG defined in edu::umd::cs::findbugs::ExitCodes
      uses variable warningsProperty defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable BUGS_FOUND_FLAG defined in edu::umd::cs::findbugs::ExitCodes
      uses variable outputFileName defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function beforeExecuteJavaProcess() in line 607
      3 lines of code
      0 parameters
      1 conditional paths
   function checkParameters() in line 559
      39 lines of code
      0 parameters
      6 conditional paths
      uses variable projectFile defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable classLocations defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable filesets defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable auxAnalyzepath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses function getLocation() defined in edu::umd::cs::findbugs::anttask::FindBugsTask::ClassLocation
      uses variable cloudId defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable outputFormat defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable reportLevel defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable effort defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function configureFindbugsEngine() in line 636
      161 lines of code
      0 parameters
      39 conditional paths
      uses variable projectName defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable adjustExperimental defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable cloudId defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable conserveSpace defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable workHard defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable effort defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable maxRank defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable VISIBLE_RANK_MIN defined in edu::umd::cs::findbugs::BugRanker
      uses variable VISIBLE_RANK_MAX defined in edu::umd::cs::findbugs::BugRanker
      uses variable adjustPriority defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable sorted defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable timestampNow defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable outputFormat defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable stylesheet defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable quietErrors defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable reportLevel defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable projectFile defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable userPreferencesFile defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable applySuppression defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable baselineBugs defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable excludeFile defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable includeFile defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable visitors defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable omitVisitors defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable chooseVisitors defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable auxClasspath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses function setInputString(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable sourcePath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable outputFileName defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable relaxed defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable nested defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable noClassOk defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable onlyAnalyze defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable classLocations defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable filesets defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable auxAnalyzepath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function createAuxAnalyzepath() in line 481
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable auxAnalyzepath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function createAuxClasspath() in line 438
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable auxClasspath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function createClass() in line 526
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable classLocations defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function createSourcePath() in line 509
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable sourcePath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setAdjustExperimental(boolean) in line 244
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable adjustExperimental defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setAdjustPriority(String) in line 248
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setApplySuppression(boolean) in line 318
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAuxAnalyzepath(Path) in line 458
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable auxAnalyzepath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setAuxAnalyzepathRef(Reference) in line 491
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createAuxAnalyzepath() defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setAuxClasspath(Path) in line 415
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable auxClasspath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setAuxClasspathRef(Reference) in line 448
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function createAuxClasspath() defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setBaselineBugs(File) in line 390
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable baselineBugs defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setChooseVisitors(String) in line 262
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setCloud(String) in line 340
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cloudId defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setConserveSpace(boolean) in line 361
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setEffort(String) in line 336
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable effort defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setExcludeFilter(File) in line 368
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function setIncludeFilter(File) in line 379
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function setMaxRank(int) in line 344
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable maxRank defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setNested(boolean) in line 212
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nested defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setNoClassOk(boolean) in line 223
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable noClassOk defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setOmitVisitors(String) in line 269
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setOnlyAnalyze(String) in line 544
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setOutput(String) in line 276
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setOutputFile(String) in line 535
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable outputFileName defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setProjectFile(File) in line 401
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable projectFile defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setProjectName(String) in line 354
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable projectName defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setQuietErrors(boolean) in line 311
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRelaxed(boolean) in line 233
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable relaxed defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setReportLevel(String) in line 290
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSort(boolean) in line 297
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSourcePath(Path) in line 498
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable sourcePath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setSourcePathRef(Reference) in line 519
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createSourcePath() defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setStylesheet(String) in line 283
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stylesheet defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setTimestampNow(boolean) in line 304
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setUserPreferencesFile(File) in line 408
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable userPreferencesFile defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setVisitors(String) in line 255
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setWarningsProperty(String) in line 326
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setWorkHard(boolean) in line 199
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable workHard defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function FindBugsTask() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable adjustExperimental in line 124
   variable adjustPriority in line 126
   variable applySuppression in line 134
   variable auxAnalyzepath in line 142
   variable auxClasspath in line 140
   variable baselineBugs in line 132
   variable chooseVisitors in line 152
   variable classLocations in line 160
   variable cloudId in line 114
   variable conserveSpace in line 104
   variable effort in line 102
   variable excludeFile in line 136
   variable filesets in line 168
   variable includeFile in line 138
   variable maxRank in line 116
   variable nested in line 166
   variable noClassOk in line 164
   variable omitVisitors in line 154
   variable onlyAnalyze in line 162
   variable outputFileName in line 156
   variable outputFormat in line 146
   variable projectFile in line 128
   variable projectName in line 118
   variable quietErrors in line 110
   variable relaxed in line 122
   variable reportLevel in line 148
   variable sorted in line 106
   variable sourcePath in line 144
   variable stylesheet in line 158
   variable timestampNow in line 108
   variable userPreferencesFile in line 130
   variable visitors in line 150
   variable warningsProperty in line 112
   variable workHard in line 120
module edu::umd::cs::findbugs::anttask::FindBugsTask::ClassLocation
   function getLocation() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setLocation(File) in line 178
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/antTask/edu/umd/cs/findbugs/anttask/FindBugsViewerTask.java
module edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   inherits from org::apache::tools::ant::Task
   function addArg(String) in line 201
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable findbugsEngine defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function createClasspath() in line 143
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable classpath defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function createPluginList() in line 171
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable pluginList defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function execute() in line 206
      protection public
      74 lines of code
      0 parameters
      11 conditional paths
      uses variable findbugsEngine defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable timeout defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable debug defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable jvmargs defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable homeDir defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable classpath defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable pluginList defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable projectFile defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable loadbugs defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable look defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable ERROR_FLAG defined in edu::umd::cs::findbugs::ExitCodes
      uses variable MISSING_CLASS_FLAG defined in edu::umd::cs::findbugs::ExitCodes
   function setClasspathRef(Reference) in line 153
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createClasspath() defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function setDebug(boolean) in line 115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHome(File) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable homeDir defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function setJvmargs(String) in line 122
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLoadbugs(File) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable loadbugs defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function setLook(String) in line 129
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable look defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function setPluginList(Path) in line 160
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable pluginList defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function setPluginListRef(Reference) in line 181
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createPluginList() defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function setProjectFile(File) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable projectFile defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function setTimeout(long) in line 191
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable timeout defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function FindBugsViewerTask() in line 92
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable classpath in line 85
   variable debug in line 71
   variable DEFAULT_TIMEOUT in line 68
   variable findbugsEngine in line 89
   variable homeDir in line 83
   variable jvmargs in line 79
   variable loadbugs in line 75
   variable look in line 81
   variable pluginList in line 87
   variable projectFile in line 73
   variable timeout in line 77
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/antTask/edu/umd/cs/findbugs/anttask/MineBugHistoryTask.java
module edu::umd::cs::findbugs::anttask::MineBugHistoryTask
   inherits from edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function addBoolOption(String,String) in line 106
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function afterExecuteJavaProcess(int) in line 151
      5 lines of code
      1 parameters
      2 conditional paths
   function beforeExecuteJavaProcess() in line 139
      3 lines of code
      0 parameters
      1 conditional paths
   function checkBoolean(String,String) in line 78
      9 lines of code
      2 parameters
      3 conditional paths
   function checkParameters() in line 94
      11 lines of code
      0 parameters
      2 conditional paths
      uses variable inputFile defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
      uses function checkBoolean(String,String) defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
      uses variable formatDates defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
      uses variable noTabs defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
      uses variable summary defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
   function configureFindbugsEngine() in line 120
      10 lines of code
      0 parameters
      2 conditional paths
      uses function addBoolOption(String,String) defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
      uses variable formatDates defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
      uses variable noTabs defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
      uses variable summary defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable inputFile defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
      uses function getName() defined in edu::umd::cs::findbugs::anttask::DataFile
      uses variable outputFile defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
   function createDataFile() in line 49
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable inputFile defined in edu::umd::cs::findbugs::anttask::MineBugHistoryTask
   function setFormatDates(String) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setInput(String) in line 61
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setNoTabs(String) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setOutput(File) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSummary(String) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function MineBugHistoryTask() in line 44
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function setFailOnError(boolean) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   variable formatDates in line 36
   variable inputFile in line 42
   variable noTabs in line 38
   variable outputFile in line 34
   variable summary in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/antTask/edu/umd/cs/findbugs/anttask/SetBugDatabaseInfoTask.java
module edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
   inherits from edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function addBoolOption(String,String) in line 129
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function addOption(String,String) in line 122
      6 lines of code
      2 parameters
      2 conditional paths
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable name defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
   function afterExecuteJavaProcess(int) in line 179
      5 lines of code
      1 parameters
      2 conditional paths
   function beforeExecuteJavaProcess() in line 167
      3 lines of code
      0 parameters
      1 conditional paths
   function checkBoolean(String,String) in line 91
      9 lines of code
      2 parameters
      3 conditional paths
   function checkParameters() in line 107
      14 lines of code
      0 parameters
      3 conditional paths
      uses variable outputFile defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable inputFile defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses function checkBoolean(String,String) defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable withMessages defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable resetSource defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
   function configureFindbugsEngine() in line 143
      15 lines of code
      0 parameters
      3 conditional paths
      uses function addOption(String,String) defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable name defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable timestamp defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable source defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable findSource defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable suppress defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses function addBoolOption(String,String) defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable withMessages defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable resetSource defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable inputFile defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
      uses variable outputFile defined in edu::umd::cs::findbugs::anttask::SetBugDatabaseInfoTask
   function setFindSource(String) in line 79
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setInput(String) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setName(String) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setOutput(String) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setResetSource(String) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSource(String) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSuppress(String) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setTimestamp(String) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setWithMessages(String) in line 83
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function SetBugDatabaseInfoTask() in line 50
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function setFailOnError(boolean) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   variable findSource in line 40
   variable inputFile in line 48
   variable name in line 34
   variable outputFile in line 32
   variable resetSource in line 46
   variable source in line 38
   variable suppress in line 42
   variable timestamp in line 36
   variable withMessages in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/antTask/edu/umd/cs/findbugs/anttask/UnionBugs.java
module edu::umd::cs::findbugs::anttask::UnionBugs
   inherits from org::apache::tools::ant::Task
   function addFileset(FileSet) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fileSets defined in edu::umd::cs::findbugs::anttask::UnionBugs
   function copyFile(File,File) in line 147
      7 lines of code
      2 parameters
      2 conditional paths
   function createCommandArgumentsArray(List< File >) in line 122
      15 lines of code
      1 parameters
      2 conditional paths
      uses variable into defined in edu::umd::cs::findbugs::anttask::UnionBugs
   function createListOfAllFilesToMerge() in line 111
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable fileSets defined in edu::umd::cs::findbugs::anttask::UnionBugs
   function execute() in line 78
      protection public
      32 lines of code
      0 parameters
      5 conditional paths
      uses function createListOfAllFilesToMerge() defined in edu::umd::cs::findbugs::anttask::UnionBugs
      uses variable into defined in edu::umd::cs::findbugs::anttask::UnionBugs
      uses function copyFile(File,File) defined in edu::umd::cs::findbugs::anttask::UnionBugs
      uses function createCommandArgumentsArray(List< File >) defined in edu::umd::cs::findbugs::anttask::UnionBugs
   function setTo(String) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable into defined in edu::umd::cs::findbugs::anttask::UnionBugs
   variable fileSets in line 55
   variable into in line 57
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/antTask/edu/umd/cs/findbugs/anttask/UnionBugs2.java
module edu::umd::cs::findbugs::anttask::UnionBugs2
   inherits from edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   function addFileset(FileSet) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function beforeExecuteJavaProcess() in line 87
      3 lines of code
      0 parameters
      1 conditional paths
   function checkParameters() in line 73
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable to defined in edu::umd::cs::findbugs::anttask::UnionBugs2
      uses variable fileSets defined in edu::umd::cs::findbugs::anttask::UnionBugs2
   function configureFindbugsEngine() in line 92
      12 lines of code
      0 parameters
      3 conditional paths
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
      uses variable to defined in edu::umd::cs::findbugs::anttask::UnionBugs2
      uses variable fileSets defined in edu::umd::cs::findbugs::anttask::UnionBugs2
   function setTo(String) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function UnionBugs2() in line 49
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function setFailOnError(boolean) defined in edu::umd::cs::findbugs::anttask::AbstractFindBugsTask
   variable fileSets in line 47
   variable to in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui/AnnotatedString.java
module edu::umd::cs::findbugs::gui::AnnotatedString
   function addButton(JFrame,String) in line 117
      9 lines of code
      2 parameters
      1 conditional paths
      uses function AnnotatedString(String) defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses function toString() defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses function getMnemonic() defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses function getMnemonicIndex() defined in edu::umd::cs::findbugs::gui::AnnotatedString
   function getMnemonic() in line 88
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable MAC_OS_X defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses function getMnemonicIndex() defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses variable myAnnotatedString defined in edu::umd::cs::findbugs::gui::AnnotatedString
   function getMnemonicIndex() in line 103
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable MAC_OS_X defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses variable myAnnotatedString defined in edu::umd::cs::findbugs::gui::AnnotatedString
   function localiseButton(AbstractButton,String,String,boolean) in line 171
      protection public
      9 lines of code
      4 parameters
      2 conditional paths
      uses function AnnotatedString(String) defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses function toString() defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses function getMnemonic() defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses function getMnemonicIndex() defined in edu::umd::cs::findbugs::gui::AnnotatedString
   function main(String[]) in line 127
      protection public
      28 lines of code
      1 parameters
      1 conditional paths
      uses function addButton(JFrame,String) defined in edu::umd::cs::findbugs::gui::AnnotatedString
   function toString() in line 61
      protection public
      19 lines of code
      0 parameters
      4 conditional paths
      uses variable MAC_OS_X defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses variable myAnnotatedString defined in edu::umd::cs::findbugs::gui::AnnotatedString
   function AnnotatedString(String) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable myAnnotatedString defined in edu::umd::cs::findbugs::gui::AnnotatedString
   variable MAC_OS_X in line 49
   variable myAnnotatedString in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/AboutDialog.java
module edu::umd::cs::findbugs::gui2::AboutDialog
   inherits from javax::swing::JDialog
   function closeDialog(java.awt.event.WindowEvent) in line 231
      3 lines of code
      1 parameters
      1 conditional paths
      uses function closeDialog() defined in edu::umd::cs::findbugs::gui2::AboutDialog
   function closeDialog() in line 235
      4 lines of code
      0 parameters
      1 conditional paths
   function initComponents() in line 121
      92 lines of code
      0 parameters
      3 conditional paths
      uses variable aboutTabPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable aboutScrollPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable aboutEditorPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable licenseScrollPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable licenseEditorPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable acknowledgmentsScrollPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable acknowldgementsEditorPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable jSeparator1 defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable okButton defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses function closeDialog() defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses function okButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui2::AboutDialog
   function okButtonActionPerformed(java.awt.event.ActionEvent) in line 224
      3 lines of code
      1 parameters
      1 conditional paths
      uses function closeDialog() defined in edu::umd::cs::findbugs::gui2::AboutDialog
   function AboutDialog(JFrame,Logger,boolean) in line 53
      protection public
      17 lines of code
      3 parameters
      2 conditional paths
      uses function initComponents() defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable aboutEditorPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable licenseEditorPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable acknowldgementsEditorPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::log::Logger
      uses variable ERROR defined in edu::umd::cs::findbugs::log::Logger
      uses variable RELEASE defined in edu::umd::cs::findbugs::Version
   variable aboutEditorPane in line 241
   variable aboutScrollPane in line 243
   variable aboutTabPane in line 245
   variable acknowldgementsEditorPane in line 247
   variable acknowledgmentsScrollPane in line 249
   variable jSeparator1 in line 251
   variable licenseEditorPane in line 253
   variable licenseScrollPane in line 255
   variable okButton in line 257
   variable serialVersionUID in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/AbstractSwingGuiCallback.java
module edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
   inherits from edu::umd::cs::findbugs::IGuiCallback
   abstract class
   function boxModelIsSame(JComboBox< String >,List< String >) in line 187
      14 lines of code
      2 parameters
      4 conditional paths
   function createComboBox(final List< FormItem >,FormItem) in line 263
      21 lines of code
      2 parameters
      3 conditional paths
      uses function setField(JComponent) defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
      uses function getPossibleValues() defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
      uses function getDefaultValue() defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
      uses function updateFormItemsFromGui(List< FormItem >) defined in edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
   function createTextField(final List< FormItem >,FormItem) in line 233
      29 lines of code
      2 parameters
      2 conditional paths
      uses function getDefaultValue() defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
      uses function isPassword() defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
      uses function setField(JComponent) defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
      uses function updateFormItemsFromGui(List< FormItem >) defined in edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
   function displayNonmodelMessage(String,String) in line 100
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable parent defined in edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
   function getBugUpdateExecutor() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugUpdateExecutor defined in edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
   function getProgressMonitorInputStream(InputStream,int,String) in line 89
      protection public
      9 lines of code
      3 parameters
      2 conditional paths
      uses variable parent defined in edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
   function invokeInGUIThread(Runnable) in line 135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isHeadless() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function replaceBoxModelValues(MutableComboBoxModel< String >,List< String >) in line 174
      12 lines of code
      2 parameters
      4 conditional paths
   function showConfirmDialog(String,String,String,String) in line 83
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses variable parent defined in edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
   function showDocument(URL) in line 125
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function showForm(String,String,List< FormItem >) in line 111
      protection public
      12 lines of code
      3 parameters
      3 conditional paths
      uses function showFormDialog(String,String,final List< FormItem >) defined in edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
      uses function updateFormItemsFromGui(List< FormItem >) defined in edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
   function showFormDialog(String,String,final List< FormItem >) in line 202
      30 lines of code
      3 parameters
      3 conditional paths
      uses function createComboBox(final List< FormItem >,FormItem) defined in edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
      uses function createTextField(final List< FormItem >,FormItem) defined in edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
      uses variable parent defined in edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
   function showMessageDialog(final String) in line 69
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable parent defined in edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
   function showMessageDialogAndWait(final String) in line 51
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable parent defined in edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
   function showQuestionDialog(String,String,String) in line 105
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable parent defined in edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
   function updateComboBoxes(List< FormItem >) in line 158
      15 lines of code
      1 parameters
      4 conditional paths
      uses function boxModelIsSame(JComboBox< String >,List< String >) defined in edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
      uses function replaceBoxModelValues(MutableComboBoxModel< String >,List< String >) defined in edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
   function updateFormItemsFromGui(List< FormItem >) in line 140
      17 lines of code
      1 parameters
      4 conditional paths
      uses function updateComboBoxes(List< FormItem >) defined in edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
   function AbstractSwingGuiCallback(Component) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parent defined in edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
   variable bugUpdateExecutor in line 37
   variable parent in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/AnalysisCallback.java
module edu::umd::cs::findbugs::gui2::AnalysisCallback
   function analysisFinished(BugCollection) in line 31
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function analysisInterrupted() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/AnalyzingDialog.java
module edu::umd::cs::findbugs::gui2::AnalyzingDialog
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
   inherits from edu::umd::cs::findbugs::FindBugsProgress
   function cancel() in line 191
      8 lines of code
      0 parameters
      2 conditional paths
   function finishArchive() in line 229
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function finishClass() in line 234
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function finishPerClassAnalysis() in line 239
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function incrementCount() in line 204
      10 lines of code
      0 parameters
      1 conditional paths
   function predictPassCount(int[]) in line 338
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function reportNumberOfArchives(int) in line 244
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function show(@Nonnull final Project) in line 69
      protection public
      25 lines of code
      1 parameters
      2 conditional paths
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function releaseDisplayWait() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function reinitializeCloud() defined in edu::umd::cs::findbugs::BugCollection
   function show(@Nonnull Project,AnalysisCallback,boolean) in line 108
      protection public
      18 lines of code
      3 parameters
      5 conditional paths
      uses function acquireDisplayWait() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable analysisThread defined in edu::umd::cs::findbugs::gui2::AnalyzingDialog
      uses function releaseDisplayWait() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function startAnalysis(int) in line 252
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function startArchive(String) in line 344
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function updateCount(final int,final int) in line 215
      12 lines of code
      2 parameters
      1 conditional paths
   function updateStage(String) in line 200
      3 lines of code
      1 parameters
      1 conditional paths
   function AnalyzingDialog(@Nonnull Project,AnalysisCallback,boolean) in line 141
      49 lines of code
      3 parameters
      3 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::gui2::AnalyzingDialog
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::Project
      uses function showMessageDialog(String) defined in edu::umd::cs::findbugs::IGuiCallback
   variable analysisFinished in line 50
   variable analysisThread in line 57
   variable callback in line 55
   variable cancelButton in line 67
   variable count in line 59
   variable goal in line 61
   variable progressBar in line 65
   variable project in line 53
   variable statusLabel in line 63
module edu::umd::cs::findbugs::gui2::AnalyzingDialog::AnalysisThread
   inherits from Thread
   function run() in line 268
      protection public
      32 lines of code
      0 parameters
      3 conditional paths
      uses function analysisInterrupted() defined in edu::umd::cs::findbugs::gui2::AnalysisCallback
      uses function analysisFinished(BugCollection) defined in edu::umd::cs::findbugs::gui2::AnalysisCallback
      uses variable newProject defined in edu::umd::cs::findbugs::gui2::MainFrame
   function scheduleDialogCleanup() in line 301
      13 lines of code
      0 parameters
      1 conditional paths
   function scheduleErrorDialog(final String,final String) in line 315
      13 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/ApplyNewFilter.java
module edu::umd::cs::findbugs::gui2::ApplyNewFilter
   function fromMatcher(Matcher) in line 43
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable suppressionFilter defined in edu::umd::cs::findbugs::gui2::ApplyNewFilter
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable preferencesFrame defined in edu::umd::cs::findbugs::gui2::ApplyNewFilter
      uses variable filterActivityNotifier defined in edu::umd::cs::findbugs::gui2::ApplyNewFilter
      uses function notifyListeners(FilterListener.Action,TreePath) defined in edu::umd::cs::findbugs::gui2::FilterActivity::FilterActivityNotifier
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
   function ApplyNewFilter(Filter,PreferencesFrame,FilterActivityNotifier) in line 37
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable suppressionFilter defined in edu::umd::cs::findbugs::gui2::ApplyNewFilter
      uses variable preferencesFrame defined in edu::umd::cs::findbugs::gui2::ApplyNewFilter
      uses variable filterActivityNotifier defined in edu::umd::cs::findbugs::gui2::ApplyNewFilter
   variable filterActivityNotifier in line 35
   variable preferencesFrame in line 34
   variable suppressionFilter in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/BugAspects.java
module edu::umd::cs::findbugs::gui2::BugAspects
   inherits from Iterable
   function add(SortableValue) in line 102
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function addToNew(SortableValue) in line 106
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function BugAspects() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function get(int) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function getCount() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable count defined in edu::umd::cs::findbugs::gui2::BugAspects
   function getMatcher() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function getMatchingBugs(BugSet) in line 125
      protection public
      3 lines of code
      1 parameters
      2 conditional paths
      uses function getBugsMatchingFilter(Matcher) defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function getStackedFilterMatcher() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function toString() defined in edu::umd::cs::findbugs::gui2::BugAspects
   function getStackedFilterMatcher() in line 116
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function iterator() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function last() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function setCount(int) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable count defined in edu::umd::cs::findbugs::gui2::BugAspects
   function size() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function toString() in line 67
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable count defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function last() defined in edu::umd::cs::findbugs::gui2::BugAspects
   function BugAspects() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BugAspects(BugAspects) in line 97
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable count defined in edu::umd::cs::findbugs::gui2::BugAspects
   variable count in line 50
   variable lst in line 52
   variable serialVersionUID in line 48
module edu::umd::cs::findbugs::gui2::BugAspects::SortableValue
   function equals(Object) in line 145
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 154
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SortableValue(Sortables,String) in line 134
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable key in line 130
      protection public
   variable value in line 132
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/BugLeafNode.java
module edu::umd::cs::findbugs::gui2::BugLeafNode
   function equals(Object) in line 73
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable bug defined in edu::umd::cs::findbugs::gui2::BugLeafNode
   function getBug() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bug defined in edu::umd::cs::findbugs::gui2::BugLeafNode
   function hashCode() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bug defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function hashCode() defined in edu::umd::cs::findbugs::BugInstance
   function matches(SortableValue) in line 53
      protection public
      18 lines of code
      1 parameters
      1 conditional paths
      uses variable bug defined in edu::umd::cs::findbugs::gui2::BugLeafNode
   function matches(BugAspects) in line 86
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function matches(SortableValue) defined in edu::umd::cs::findbugs::gui2::BugLeafNode
   function toString() in line 46
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable bug defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function isDead() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMessageWithoutPrefix() defined in edu::umd::cs::findbugs::BugInstance
   variable bug in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/BugLoader.java
module edu::umd::cs::findbugs::gui2::BugLoader
   function combineBugHistories() in line 243
      protection public
      37 lines of code
      0 parameters
      4 conditional paths
      uses function showOpenDialog(Component) defined in edu::umd::cs::findbugs::gui2::FBFileChooser
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function mergeCollections(BugCollection,BugCollection,boolean,boolean) defined in edu::umd::cs::findbugs::workflow::Update
   function createEngine(@Nonnull Project,BugReporter) in line 125
      14 lines of code
      2 parameters
      1 conditional paths
      uses function setBugReporter(BugReporter) defined in edu::umd::cs::findbugs::FindBugs2
      uses function setProject(Project) defined in edu::umd::cs::findbugs::FindBugs2
      uses function setDetectorFactoryCollection(DetectorFactoryCollection) defined in edu::umd::cs::findbugs::FindBugs2
      uses function setAnalysisFeatureSettings(AnalysisFeatureSetting[]) defined in edu::umd::cs::findbugs::FindBugs2
   function doAnalysis(@Nonnull Project,FindBugsProgress) in line 91
      protection public
      24 lines of code
      2 parameters
      2 conditional paths
      uses function setPriorityThreshold(int) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function createEngine(@Nonnull Project,BugReporter) defined in edu::umd::cs::findbugs::gui2::BugLoader
      uses function setUserPreferences(UserPreferences) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function setProgressCallback(FindBugsProgress) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function setProjectName(String) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function execute() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
   function doAnalysis(@Nonnull Project) in line 289
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
   function initiateCommunication(SortedBugCollection) in line 161
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getCloud() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function initiateCommunication() defined in edu::umd::cs::findbugs::cloud::Cloud
   function loadBugs(MainFrame,Project,File) in line 141
      protection public
      19 lines of code
      3 parameters
      4 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function initiateCommunication(SortedBugCollection) defined in edu::umd::cs::findbugs::gui2::BugLoader
      uses function hasDeadBugs() defined in edu::umd::cs::findbugs::SortedBugCollection
   function loadBugs(MainFrame,Project,URL) in line 167
      protection public
      36 lines of code
      3 parameters
      8 conditional paths
      uses variable GUI2_DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function initiateCommunication(SortedBugCollection) defined in edu::umd::cs::findbugs::gui2::BugLoader
      uses function hasDeadBugs() defined in edu::umd::cs::findbugs::BugCollection
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function softAdd(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable DEAD_BUG_MATCHER defined in edu::umd::cs::findbugs::filter::LastVersionMatcher
   function loadProject(MainFrame,File) in line 214
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function setGuiCallback(IGuiCallback) defined in edu::umd::cs::findbugs::Project
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function redoAnalysisKeepComments(@Nonnull Project) in line 312
      protection public
      26 lines of code
      1 parameters
      4 conditional paths
      uses function getBugCollection() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function mergeCollections(BugCollection,BugCollection,boolean,boolean) defined in edu::umd::cs::findbugs::workflow::Update
      uses function hasDeadBugs() defined in edu::umd::cs::findbugs::BugCollection
   function BugLoader() in line 227
      3 lines of code
      0 parameters
      1 conditional paths
   variable preferencesSingleton in line 66
module edu::umd::cs::findbugs::gui2::BugLoader::RedoAnalysisCallback
   inherits from edu::umd::cs::findbugs::gui2::AnalysisCallback
   function analysisFinished(BugCollection) in line 351
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function analysisInterrupted() in line 357
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/BugRenderer.java
module edu::umd::cs::findbugs::gui2::BugRenderer
   inherits from javax::swing::tree::DefaultTreeCellRenderer
   function getTreeCellRendererComponent(JTree,Object,boolean,boolean,boolean,int,boolean) in line 42
      protection public
      60 lines of code
      7 parameters
      10 conditional paths
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isDead() defined in edu::umd::cs::findbugs::BugInstance
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable IGNORE_PRIORITY defined in edu::umd::cs::findbugs::Priorities
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/BugSaver.java
module edu::umd::cs::findbugs::gui2::BugSaver
   function getLastPlaceSaved() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastPlaceSaved defined in edu::umd::cs::findbugs::gui2::BugSaver
   function saveBugs(@WillClose Writer,BugCollection,Project) in line 43
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
      uses function writeXML(String) defined in edu::umd::cs::findbugs::BugCollection
   function saveBugs(File,BugCollection,Project) in line 52
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
      uses function saveBugs(@WillClose Writer,BugCollection,Project) defined in edu::umd::cs::findbugs::gui2::BugSaver
      uses variable lastPlaceSaved defined in edu::umd::cs::findbugs::gui2::BugSaver
   variable lastPlaceSaved in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/BugSet.java
module edu::umd::cs::findbugs::gui2::BugSet
   inherits from Iterable
   function clearCache() in line 389
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function contains(SortableValue) in line 321
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable doneContainsMap defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function filteredBugsCached() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function matches(SortableValue) defined in edu::umd::cs::findbugs::gui2::BugLeafNode
   function filteredBugsCached() in line 393
      6 lines of code
      0 parameters
      2 conditional paths
      uses function filteredBugsNoCache() defined in edu::umd::cs::findbugs::gui2::BugSet
   function filteredBugsNoCache() in line 376
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
   function get(int) in line 418
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function filteredBugsCached() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function getUnfiltered(int) defined in edu::umd::cs::findbugs::gui2::BugSet
   function getAll(Sortables) in line 91
      protection public
      3 lines of code
      1 parameters
      3 conditional paths
      uses variable doneMap defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable doneContainsMap defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function iterator() defined in edu::umd::cs::findbugs::BugCollection
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable mainBugSet defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses variable sortablesToStrings defined in edu::umd::cs::findbugs::gui2::BugSet
   function getBugsMatchingFilter(Matcher) in line 400
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
   function getMainBugSet() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mainBugSet defined in edu::umd::cs::findbugs::gui2::BugSet
   function getUnfiltered(int) in line 356
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
   function indexOf(BugLeafNode) in line 414
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function filteredBugsCached() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function indexOfUnfiltered(BugLeafNode) defined in edu::umd::cs::findbugs::gui2::BugSet
   function indexOfUnfiltered(BugLeafNode) in line 352
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
   function iterator() in line 361
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable doneMap defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable doneContainsMap defined in edu::umd::cs::findbugs::gui2::BugSet
   function query(BugAspects) in line 339
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function size() in line 410
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function filteredBugsCached() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function sizeUnfiltered() defined in edu::umd::cs::findbugs::gui2::BugSet
   function sizeUnfiltered() in line 348
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
   variable doneContainsMap in line 65
   variable doneMap in line 63
   variable EMPTY_STRING_ARRAY in line 152
   variable mainBugSet in line 69
   variable mainList in line 61
   variable sortablesToStrings in line 67
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/BugTreeModel.java
module edu::umd::cs::findbugs::gui2::BugTreeModel
   inherits from javax::swing::tree::TreeModel
   inherits from javax::swing::event::TableColumnModelListener
   inherits from javax::swing::event::TreeExpansionListener
   function addTreeModelListener(TreeModelListener) in line 303
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function branchOperations(ArrayList< String >,TreeModification) in line 674
      79 lines of code
      2 parameters
      24 conditional paths
      uses function resetData() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function add(SortableValue) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable root defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getIndexOfChild(Object,Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getChildCount(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function setCount(int) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugSet
   function clearViewCache() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function clearCache() defined in edu::umd::cs::findbugs::gui2::BugSet
   function columnAdded(TableColumnModelEvent) in line 313
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable sortsAddedOrRemoved defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function columnMarginChanged(ChangeEvent) in line 587
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function columnMoved(final TableColumnModelEvent) in line 325
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable sortOrderChanged defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function columnRemoved(TableColumnModelEvent) in line 319
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable sortsAddedOrRemoved defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function columnSelectionChanged(ListSelectionEvent) in line 591
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function crawl(final ArrayList< BugAspects >,final int) in line 399
      protection public
      13 lines of code
      2 parameters
      7 conditional paths
      uses function getChildCount(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getChild(Object,int) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getPathToBug(BugInstance) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function crawlToOpen(TreePath,ArrayList< BugLeafNode >,ArrayList< TreePath >) in line 440
      protection public
      20 lines of code
      3 parameters
      7 conditional paths
      uses function getChildCount(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function isLeaf(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getChild(Object,int) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable tree defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function enumsThatExist(BugAspects) in line 248
      29 lines of code
      1 parameters
      5 conditional paths
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function last() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function getAll() defined in edu::umd::cs::findbugs::gui2::Sortables
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function finalize() in line 577
      8 lines of code
      0 parameters
      1 conditional paths
   function getChild(Object,int) in line 173
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses function getChildCount(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable ASSERTIONS_ENABLED defined in edu::umd::cs::findbugs::SystemProperties
   function getChild(BugAspects,int) in line 186
      29 lines of code
      2 parameters
      5 conditional paths
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function get(int) defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable ASSERTIONS_ENABLED defined in edu::umd::cs::findbugs::SystemProperties
      uses function get(int) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function addToNew(SortableValue) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function enumsThatExist(BugAspects) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function setCount(int) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugSet
   function getChildCount(Object) in line 217
      protection public
      24 lines of code
      1 parameters
      4 conditional paths
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function last() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function enumsThatExist(BugAspects) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function getIndexOfChild(Object,Object) in line 288
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses function isLeaf(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function indexOf(BugLeafNode) defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function enumsThatExist(BugAspects) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function getOffListenerList() in line 157
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function removeColumnModelListener(TableColumnModelListener) defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable tree defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function getPathToBug(BugInstance) in line 509
      protection public
      61 lines of code
      1 parameters
      8 conditional paths
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function add(SortableValue) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function getFrom(BugInstance) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses variable root defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getIndexOfChild(Object,Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable GUI2_DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getChild(Object,int) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function getPathToNewlyUnsuppressedBug(BugInstance) in line 571
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function resetData() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getPathToBug(BugInstance) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function getRoot() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable root defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function insertBranch(ArrayList< String >) in line 634
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function branchOperations(ArrayList< String >,TreeModification) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function isLeaf(Object) in line 279
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function needToRebuild() in line 333
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sortOrderChanged defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable root defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function setCount(int) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function rebuild() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function rebuild() in line 348
      protection public
      50 lines of code
      0 parameters
      5 conditional paths
      uses variable TRACE defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable rebuildingThread defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function setOldSelectedBugs() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function acquireDisplayWait() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function BugTreeModel(MainFrame,JTree,SorterTableColumnModel,BugSet) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function resetData() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable tree defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function newTree(final JTree,final BugTreeModel) defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses function releaseDisplayWait() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getOffListenerList() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function removeBranch(ArrayList< String >) in line 638
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function branchOperations(ArrayList< String >,TreeModification) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function removeTreeModelListener(TreeModelListener) in line 308
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function resetData() in line 463
      protection public
      8 lines of code
      0 parameters
      6 conditional paths
      uses variable TRACE defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable root defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function setCount(int) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function rebuild() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getIndexOfChild(Object,Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function restructureBranch(ArrayList< String >,boolean) in line 626
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function branchOperations(ArrayList< String >,TreeModification) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function setOldSelectedBugs() in line 602
      11 lines of code
      0 parameters
      5 conditional paths
      uses variable tree defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function isLeaf(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable sortOrderChanged defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable sortsAddedOrRemoved defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function rebuild() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function sortBranch(TreePath) in line 642
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getChildCount(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getChild(Object,int) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function treeCollapsed(TreeExpansionEvent) in line 599
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function treeExpanded(TreeExpansionEvent) in line 595
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function valueForPathChanged(TreePath,Object) in line 284
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function BugTreeModel(MainFrame,JTree,SorterTableColumnModel,BugSet) in line 109
      protection public
      38 lines of code
      4 parameters
      2 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function addColumnModelListener(TableColumnModelListener) defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable tree defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable root defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function setCount(int) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function addTreeModelListener(TreeModelListener) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function BugTreeModel(BugTreeModel) in line 148
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable root defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable bugSet defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable tree defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   variable bugSet in line 91
   variable DEBUG in line 99
   variable listeners in line 93
   variable mainFrame in line 107
   variable rebuildingThread in line 101
   variable root in line 87
   variable sortOrderChanged in line 103
   variable sortsAddedOrRemoved in line 105
   variable st in line 89
   variable TRACE in line 461
      protection public
   variable tree in line 95
module edu::umd::cs::findbugs::gui2::BugTreeModel::MyFilterListener
   inherits from edu::umd::cs::findbugs::gui2::FilterListener
   function clearCache() in line 476
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::BugTreeModel::BranchOperationException
   inherits from Exception
   function BranchOperationException(String) in line 665
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::BugTreeModel::TreeModification
   variable INSERT in line 671
      protection public
   variable INSERTRESTRUCTURE in line 672
      protection public
   variable REMOVE in line 671
      protection public
   variable REMOVERESTRUCTURE in line 671
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/CheckBoxList.java
module edu::umd::cs::findbugs::gui2::CheckBoxList
   inherits from javax::swing::JList
   function setEnabled(boolean) in line 70
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function CheckBoxList() in line 45
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
   function CheckBoxList(E[]) in line 64
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable noFocusBorder in line 43
module edu::umd::cs::findbugs::gui2::CheckBoxList::CellRenderer
   inherits from javax::swing::ListCellRenderer
   function getListCellRendererComponent(JList<?extends E >,E,int,boolean,boolean) in line 80
      protection public
      12 lines of code
      5 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/ClearGuiSaveState.java
module edu::umd::cs::findbugs::gui2::ClearGuiSaveState
   function main(String) in line 30
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/CloudCommentsPane.java
module edu::umd::cs::findbugs::gui2::CloudCommentsPane
   inherits from javax::swing::JPanel
   abstract class
   function $$getRootComponent() in line 1028
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function $$setupUI() in line 851
      173 lines of code
      0 parameters
      1 conditional paths
   function addNotInCloudCard() in line 124
      4 lines of code
      0 parameters
      1 conditional paths
   function applyToBugs(final BugAction) in line 339
      27 lines of code
      1 parameters
      5 conditional paths
      uses function execute(BugInstance) defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane::BugAction
   function cancelClicked() in line 544
      5 lines of code
      0 parameters
      1 conditional paths
   function canNavigateAway() in line 644
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function canSetDesignations() in line 440
      protection public
      16 lines of code
      0 parameters
      5 conditional paths
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function canStoreUserAnnotation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
   function changeClicked() in line 570
      19 lines of code
      0 parameters
      3 conditional paths
      uses function getRegisteredClouds() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getDescription() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
   function changeCloud(String) in line 594
      20 lines of code
      1 parameters
      3 conditional paths
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function getPlugin() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getId() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function setCloudId(@Nullable String) defined in edu::umd::cs::findbugs::Project
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function reinitializeCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function waitUntilIssueDataDownloaded() defined in edu::umd::cs::findbugs::cloud::Cloud
   function changeDesignationOfBugRightNow(final BugInstance,final String) in line 653
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getUserDesignationKey() defined in edu::umd::cs::findbugs::BugInstance
      uses function setUserDesignationKey(String,@CheckForNull BugCollection) defined in edu::umd::cs::findbugs::BugInstance
   function commentBoxClicked() in line 406
      25 lines of code
      0 parameters
      5 conditional paths
      uses function invoke() defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane::CommentInfo
      uses function isSameText() defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane::CommentInfo
      uses function getTxt() defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane::CommentInfo
   function commentWasChanged() in line 432
      7 lines of code
      0 parameters
      1 conditional paths
   function createUIComponents() in line 332
      3 lines of code
      0 parameters
      1 conditional paths
   function getSelectedBugs() in line 550
      15 lines of code
      0 parameters
      5 conditional paths
      uses function getMatchingBugs(BugSet) defined in edu::umd::cs::findbugs::gui2::BugAspects
   function hasSelectedBugs() in line 566
      3 lines of code
      0 parameters
      1 conditional paths
   function inCloud(Collection< BugInstance >) in line 687
      11 lines of code
      1 parameters
      3 conditional paths
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function isInCloud(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
   function isDefaultComment(String) in line 288
      16 lines of code
      1 parameters
      4 conditional paths
   function isDisabled(CloudPlugin) in line 590
      1 lines of code
      1 parameters
      1 conditional paths
   function refresh() in line 661
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function resetCommentBoxFont() in line 321
      4 lines of code
      0 parameters
      1 conditional paths
   function setBugAspects(BugAspects) in line 627
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBugCollection(BugCollection) in line 615
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function setBugInstance(final BugInstance) in line 623
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBugs(BugInstance,BugAspects) in line 631
      12 lines of code
      2 parameters
      3 conditional paths
   function setCanAddComments(boolean,boolean) in line 836
      5 lines of code
      2 parameters
      1 conditional paths
   function setCommentText(String) in line 314
      6 lines of code
      1 parameters
      2 conditional paths
   function setDefaultComment(String) in line 326
      5 lines of code
      1 parameters
      1 conditional paths
   function setDesignation(final String) in line 457
      protection public
      42 lines of code
      1 parameters
      7 conditional paths
      uses function getUserDesignationKey() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function supportsClaims() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function claimedBy(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getUser() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
   function setLastSaved(long) in line 535
      8 lines of code
      1 parameters
      2 conditional paths
   function setSignInOutText(String) in line 842
      1 lines of code
      1 parameters
      1 conditional paths
   function setupLinksOrButtons() in line 336
      1 lines of code
      0 parameters
      1 conditional paths
   function showCloudChooser(List< CloudPlugin >,List< String >) in line 592
      1 lines of code
      2 parameters
      1 conditional paths
   function signInOrOutClicked() in line 367
      38 lines of code
      0 parameters
      6 conditional paths
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function getPlugin() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getId() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
      uses function getSigninState() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable SIGNED_IN defined in edu::umd::cs::findbugs::cloud::Cloud::SigninState
      uses function signOut() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function couldSignIn() defined in edu::umd::cs::findbugs::cloud::Cloud::SigninState
      uses function signIn() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::Project
      uses function showMessageDialog(String) defined in edu::umd::cs::findbugs::IGuiCallback
   function submitComment(List< BugInstance >) in line 501
      33 lines of code
      1 parameters
      4 conditional paths
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getUserDesignationKeys() defined in edu::umd::cs::findbugs::I18N
      uses function setAnnotationText(String,@CheckForNull BugCollection) defined in edu::umd::cs::findbugs::BugInstance
   function updateBugCommentsView() in line 699
      84 lines of code
      0 parameters
      13 conditional paths
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function getPlugin() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getDetails() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
      uses function getUserTimestamp(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getNumberReviewers(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function hasSomeUserAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getUserTimestamp() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCloudReportWithoutMe(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function invoke() defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane::CommentInfo
      uses function isSameText() defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane::CommentInfo
      uses function getTxt() defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane::CommentInfo
      uses function canStoreUserAnnotation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
   function updateCloud() in line 665
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function updateCloudListeners(BugCollection) in line 670
      15 lines of code
      1 parameters
      5 conditional paths
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function removeStatusListener(CloudStatusListener) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function addStatusListener(CloudStatusListener) defined in edu::umd::cs::findbugs::cloud::Cloud
   function updateHeader() in line 786
      49 lines of code
      0 parameters
      9 conditional paths
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function getPlugin() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function invoke() defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane::CommentInfo
      uses function isSameDesignation() defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane::CommentInfo
      uses function getDesignation() defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane::CommentInfo
      uses function getUserDesignationKeys() defined in edu::umd::cs::findbugs::I18N
      uses function getSigninState() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable NO_SIGNIN_REQUIRED defined in edu::umd::cs::findbugs::cloud::Cloud::SigninState
      uses function getUser() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getId() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
      uses function getCloudName() defined in edu::umd::cs::findbugs::cloud::Cloud
   function updateSaveButton() in line 305
      8 lines of code
      0 parameters
      1 conditional paths
   function CloudCommentsPane() in line 129
      protection public
      158 lines of code
      0 parameters
      12 conditional paths
      uses function getUserDesignationKeys() defined in edu::umd::cs::findbugs::I18N
      uses function getUserDesignation(String) defined in edu::umd::cs::findbugs::I18N
      uses function getSelectedBugs() defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane
   variable _bugAspects in line 112
   variable _bugCollection in line 110
   variable _bugInstance in line 111
   variable _cloudReportScrollPane in line 101
   variable _cloudStatusListener in line 116
   variable backgroundExecutor in line 114
   variable bulkReviewButton in line 107
   variable cancelLink in line 95
   variable cards in line 106
   variable clickedBulkReview in line 121
   variable cloudDetailsLabel in line 103
   variable cloudReportPane in line 94
   variable commentBox in line 97
   variable designationCombo in line 99
   variable dumbPanelSignInOutLink in line 104
   variable lastBugsEdited in line 120
   variable lastCloud in line 117
   variable lastCommentText in line 119
   variable lastSavedLabel in line 105
   variable mainPanel in line 100
   variable MSG_OVERWRITE_REVIEW in line 91
   variable MSG_REVIEW in line 88
   variable MSG_REVIEW_MULTI in line 89
   variable plainCommentFont in line 118
   variable signInOutLink in line 96
   variable submitCommentButton in line 98
   variable titleLabel in line 102
   variable updatingHeader in line 784
   variable warningLabel in line 108
module edu::umd::cs::findbugs::gui2::CloudCommentsPane::MyCloudStatusListener
   inherits from edu::umd::cs::findbugs::cloud::Cloud::CloudStatusListener
   function handleIssueDataDownloadedEvent() in line 1034
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function handleStateChange(final Cloud.SigninState,final Cloud.SigninState) in line 1040
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::CloudCommentsPane::BugAction
   function execute(BugInstance) in line 1049
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::CloudCommentsPane::CommentInfo
   function getDesignation() in line 1066
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTxt() in line 1058
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function invoke() in line 1074
      protection public
      26 lines of code
      0 parameters
      6 conditional paths
   function isSameDesignation() in line 1070
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSameText() in line 1062
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable designation in line 1055
   variable sameDesignation in line 1056
   variable sameText in line 1054
   variable txt in line 1053
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/CommentsArea.java
module edu::umd::cs::findbugs::gui2::CommentsArea
   function canNavigateAway() in line 161
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable commentsPane defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function canNavigateAway() defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane
   function canSetDesignations() in line 192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable commentsPane defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function canSetDesignations() defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane
   function getBugCollection() in line 147
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getBugCollection() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function updateCommentsFromNonLeafInformationFromSwingThread(BugAspects) defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function getCloud() in line 174
      8 lines of code
      0 parameters
      2 conditional paths
      uses function getBugCollection() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
   function hasFocus() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable commentsPane defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function refresh() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable commentsPane defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function refresh() defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane
   function setDesignation(String) in line 195
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable commentsPane defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function setDesignation(final String) defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane
   function updateBugCollection() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable commentsPane defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function setBugCollection(BugCollection) defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane
      uses function getBugCollection() defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function updateCloud() in line 199
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable commentsPane defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function updateCloud() defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane
   function updateCommentsFromNonLeafInformationFromSwingThread(BugAspects) in line 165
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable commentsPane defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function setBugAspects(BugAspects) defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane
      uses variable fileBug defined in edu::umd::cs::findbugs::gui2::CommentsArea
   variable commentsPane in line 56
   variable currentBugStatus in line 55
   variable fileBug in line 51
   variable frame in line 53
   variable LOGGER in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/CompoundMatcher.java
module edu::umd::cs::findbugs::gui2::CompoundMatcher
   inherits from java::util::HashSet
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 38
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
   function writeXML(XMLOutput,boolean) in line 48
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/CompoundMatcher.java
module edu::umd::cs::findbugs::filter::CompoundMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   abstract class
   function addChild(Matcher) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function childIterator() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function clear() in line 66
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function equals(Object) in line 43
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function getChildren() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function hashCode() in line 34
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function maxChildren() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function numberChildren() in line 54
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function removeChild(Matcher) in line 62
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function toString() in line 85
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function writeChildrenXML(XMLOutput) in line 78
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   variable children in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/DeadBugFilter.java
module edu::umd::cs::findbugs::gui2::DeadBugFilter
   inherits from edu::umd::cs::findbugs::gui2::FilterMatcher
   function toString() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function DeadBugFilter(Sortables,String,FilterWhere) in line 27
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable mode defined in edu::umd::cs::findbugs::gui2::FilterMatcher
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/Debug.java
module edu::umd::cs::findbugs::gui2::Debug
   function main(String[]) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function printf(String,Object...) in line 36
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable GUI2_DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
   function println(Object) in line 30
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable GUI2_DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
   function println(Exception) in line 42
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable GUI2_DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/Debug.java
module edu::umd::cs::findbugs::ba::Debug
   variable VERIFY_INTEGRITY in line 30
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/DisplayNonmodelMessage.java
module edu::umd::cs::findbugs::gui2::DisplayNonmodelMessage
   function displayNonmodelMessage(String,String,@CheckForNull Component,boolean) in line 57
      protection public
      45 lines of code
      4 parameters
      7 conditional paths
   function main(String) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function displayNonmodelMessage(String,String,@CheckForNull Component,boolean) defined in edu::umd::cs::findbugs::gui2::DisplayNonmodelMessage
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/Driver.java
module edu::umd::cs::findbugs::gui2::Driver
   function enablePlugins(Iterable< String >,boolean) in line 143
      14 lines of code
      2 parameters
      4 conditional paths
      uses variable cannotDisable defined in edu::umd::cs::findbugs::Plugin
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses function getShortDescription() defined in edu::umd::cs::findbugs::Plugin
      uses function setGloballyEnabled(boolean) defined in edu::umd::cs::findbugs::Plugin
   function getAnalysisSettingList() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable commandLine defined in edu::umd::cs::findbugs::gui2::Driver
      uses function getSettingList() defined in edu::umd::cs::findbugs::FindBugsCommandLine
   function getFontSize() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable commandLine defined in edu::umd::cs::findbugs::gui2::Driver
      uses function getFontSize() defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function getPriority() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable commandLine defined in edu::umd::cs::findbugs::gui2::Driver
      uses function getPriority() defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function isDocking() in line 175
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable commandLine defined in edu::umd::cs::findbugs::gui2::Driver
      uses function getDocking() defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function main(String[]) in line 51
      protection public
      91 lines of code
      1 parameters
      12 conditional paths
      uses variable RELEASE defined in edu::umd::cs::findbugs::Version
      uses variable splash defined in edu::umd::cs::findbugs::gui2::Driver
      uses function setVisible(boolean) defined in edu::umd::cs::findbugs::gui2::SplashFrame
      uses variable commandLine defined in edu::umd::cs::findbugs::gui2::Driver
      uses function parse(String,int,int,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable USAGE defined in edu::umd::cs::findbugs::gui2::Driver
      uses function loadProject(String) defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function setSaveFile(File) defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
      uses function printUsage(OutputStream) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function getDocking() defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
      uses function setDocking(boolean) defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
      uses function isFontSizeSpecified() defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
      uses function setFontSize(float) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getFontSize() defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
      uses function enablePlugins(Iterable< String >,boolean) defined in edu::umd::cs::findbugs::gui2::Driver
      uses function getEnabledPlugins() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getDisabledPlugins() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function isDocking() defined in edu::umd::cs::findbugs::gui2::Driver
   function removeSplashScreen() in line 158
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
      uses variable splash defined in edu::umd::cs::findbugs::gui2::Driver
      uses function setVisible(boolean) defined in edu::umd::cs::findbugs::gui2::SplashFrame
      uses variable commandLine defined in edu::umd::cs::findbugs::gui2::Driver
      uses function getSaveFile() defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
      uses function openAnalysis(File,SaveType) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function isProjectLoadedFromFile() defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getProject() defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses variable newProject defined in edu::umd::cs::findbugs::gui2::MainFrame
   variable commandLine in line 47
   variable splash in line 49
   variable START_TIME in line 43
   variable USAGE in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/FBDialog.java
module edu::umd::cs::findbugs::gui2::FBDialog
   inherits from javax::swing::JDialog
   function addNotify() in line 78
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function setFontSize(float) in line 55
      5 lines of code
      1 parameters
      1 conditional paths
   function setFontSizeHelper(Component[],float) in line 64
      12 lines of code
      2 parameters
      4 conditional paths
   function FBDialog() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FBDialog(Frame) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function FBDialog(Dialog) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/FBFileChooser.java
module edu::umd::cs::findbugs::gui2::FBFileChooser
   inherits from javax::swing::JFileChooser
   function addHiddenFileCheckBox() in line 139
      15 lines of code
      0 parameters
      1 conditional paths
   function addNotify() in line 78
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setFontSize(float) defined in edu::umd::cs::findbugs::gui2::FBFileChooser
   function setFontSize(float) in line 55
      5 lines of code
      1 parameters
      1 conditional paths
      uses function setFontSizeHelper(Component[],float) defined in edu::umd::cs::findbugs::gui2::FBFileChooser
   function setFontSizeHelper(Component[],float) in line 64
      12 lines of code
      2 parameters
      4 conditional paths
   function showDialog(Component,String) in line 127
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function workAroundJFileChooserBug() defined in edu::umd::cs::findbugs::gui2::FBFileChooser
      uses function setStarterDirectoryForLoadBugs(File) defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function showOpenDialog(Component) in line 101
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function workAroundJFileChooserBug() defined in edu::umd::cs::findbugs::gui2::FBFileChooser
      uses function setStarterDirectoryForLoadBugs(File) defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function showSaveDialog(Component) in line 114
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function workAroundJFileChooserBug() defined in edu::umd::cs::findbugs::gui2::FBFileChooser
      uses function setStarterDirectoryForLoadBugs(File) defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function workAroundJFileChooserBug() in line 84
      15 lines of code
      0 parameters
      2 conditional paths
   function FBFileChooser() in line 44
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addHiddenFileCheckBox() defined in edu::umd::cs::findbugs::gui2::FBFileChooser
      uses function getStarterDirectoryForLoadBugs() defined in edu::umd::cs::findbugs::gui2::GUISaveState
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/FBFrame.java
module edu::umd::cs::findbugs::gui2::FBFrame
   inherits from javax::swing::JFrame
   function addNotify() in line 67
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
   function setFontSize(float) in line 37
      5 lines of code
      1 parameters
      1 conditional paths
   function setFontSizeHelper(Component[],float) in line 50
      3 lines of code
      2 parameters
      1 conditional paths
   function setFontSizeHelper(float,Component...) in line 57
      8 lines of code
      2 parameters
      3 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/FilterActivity.java
module edu::umd::cs::findbugs::gui2::FilterActivity
   function addFilterListener(FilterListener) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::FilterActivity
   function notifyListeners(FilterListener.Action,@CheckForNull TreePath) in line 45
      protection public
      13 lines of code
      2 parameters
      4 conditional paths
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::FilterActivity
   function removeFilterListener(FilterListener) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::FilterActivity
   variable listeners in line 35
module edu::umd::cs::findbugs::gui2::FilterActivity::FilterActivityNotifier
   function notifyListeners(FilterListener.Action,TreePath) in line 60
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function notifyListeners(FilterListener.Action,@CheckForNull TreePath) defined in edu::umd::cs::findbugs::gui2::FilterActivity
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/FilterFactory.java
module edu::umd::cs::findbugs::gui2::FilterFactory
   function canFilter(Sortables) in line 95
      protection public
      17 lines of code
      1 parameters
      11 conditional paths
   function invertMatcher(Matcher) in line 53
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function makeAndMatcher(Collection< SortableValue >) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function makeMatcher(Collection< SortableValue >,boolean) defined in edu::umd::cs::findbugs::gui2::FilterFactory
   function makeMatcher(Collection< SortableValue >,boolean) in line 63
      17 lines of code
      2 parameters
      5 conditional paths
   function makeMatcher(Collection< Sortables >,BugInstance) in line 81
      protection public
      12 lines of code
      2 parameters
      4 conditional paths
      uses function makeMatcher(Collection< SortableValue >,boolean) defined in edu::umd::cs::findbugs::gui2::FilterFactory
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function makeMatcher(Sortables,BugInstance) in line 114
      36 lines of code
      2 parameters
      13 conditional paths
      uses function getFrom(BugInstance) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses variable EQ defined in edu::umd::cs::findbugs::filter::RelationalOp
      uses variable CLASS defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
   function makeMatcher(SortableValue) in line 151
      36 lines of code
      1 parameters
      13 conditional paths
      uses variable EQ defined in edu::umd::cs::findbugs::filter::RelationalOp
   function makeOrMatcher(Collection< SortableValue >) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function makeMatcher(Collection< SortableValue >,boolean) defined in edu::umd::cs::findbugs::gui2::FilterFactory
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/FilterFromBugPicker.java
module edu::umd::cs::findbugs::gui2::FilterFromBugPicker
   function addFilterLikeCheckboxes(JPanel) in line 71
      10 lines of code
      1 parameters
      1 conditional paths
   function addNotFilterOption(JPanel) in line 82
      4 lines of code
      1 parameters
      1 conditional paths
   function buildPanel() in line 60
      10 lines of code
      0 parameters
      1 conditional paths
   function makeMatcherFromSelection() in line 91
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
   function pickerPanel() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FilterFromBugPicker(BugInstance,List< Sortables >) in line 54
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   variable availableSortables in line 50
   variable bug in line 49
   variable map in line 48
   variable notFilterCheck in line 52
   variable pickerPanel in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/FilterListener.java
module edu::umd::cs::findbugs::gui2::FilterListener
   function clearCache() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::FilterListener::Action
   variable FILTERING in line 29
      protection public
   variable UNFILTERING in line 30
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/FilterMatcher.java
module edu::umd::cs::findbugs::gui2::FilterMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   inherits from java::io::Serializable
   inherits from Comparable
   function compareTo(FilterMatcher) in line 175
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function equals(Object) in line 155
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function hashCode() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function isActive() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable active defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function match(BugInstance) in line 110
      protection public
      20 lines of code
      1 parameters
      6 conditional paths
      uses variable active defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses function getComparator() defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function compare(String,String) defined in edu::umd::cs::findbugs::gui2::SortableStringComparator
      uses function getFrom(BugInstance) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable mode defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function setActive(boolean) in line 94
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable active defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
      uses variable UNFILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
   function toString() in line 132
      protection public
      21 lines of code
      0 parameters
      5 conditional paths
      uses variable mode defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses function toString() defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function formatValue(String) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function writeXML(XMLOutput,boolean) in line 184
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function FilterMatcher(SortableValue) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function FilterMatcher(Sortables,String,FilterWhere) in line 63
      protection public
      23 lines of code
      3 parameters
      1 conditional paths
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable mode defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function FilterMatcher(Sortables,String) in line 87
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   variable active in line 49
   variable filterBy in line 43
   variable mode in line 47
   variable serialVersionUID in line 41
   variable value in line 45
module edu::umd::cs::findbugs::gui2::FilterMatcher::FilterWhere
   variable FILTER_ALL_BUT in line 39
      protection public
   variable FILTER_AT_OR_AFTER in line 38
      protection public
   variable FILTER_AT_OR_BEFORE in line 38
      protection public
   variable FILTER_EXACTLY in line 38
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/FindBugsAnalysisFileFilter.java
module edu::umd::cs::findbugs::gui2::FindBugsAnalysisFileFilter
   inherits from edu::umd::cs::findbugs::gui2::FindBugsFileFilter
   function accept(File) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDescription() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/FindBugsFBAFileFilter.java
module edu::umd::cs::findbugs::gui2::FindBugsFBAFileFilter
   inherits from edu::umd::cs::findbugs::gui2::FindBugsFileFilter
   function accept(File) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDescription() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FindBugsFBAFileFilter() in line 28
      2 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/FindBugsFBPFileFilter.java
module edu::umd::cs::findbugs::gui2::FindBugsFBPFileFilter
   inherits from edu::umd::cs::findbugs::gui2::FindBugsFileFilter
   function accept(File) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDescription() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FindBugsFBPFileFilter() in line 28
      2 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/FindBugsFileFilter.java
module edu::umd::cs::findbugs::gui2::FindBugsFileFilter
   inherits from javax::swing::filechooser::FileFilter
   abstract class
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/FindBugsFilterFileFilter.java
module edu::umd::cs::findbugs::gui2::FindBugsFilterFileFilter
   inherits from javax::swing::filechooser::FileFilter
   function accept(File) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDescription() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 28
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/FindBugsHtmlFileFilter.java
module edu::umd::cs::findbugs::gui2::FindBugsHtmlFileFilter
   inherits from edu::umd::cs::findbugs::gui2::FindBugsFileFilter
   function accept(File) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDescription() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/FindBugsLayoutManager.java
module edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
   function createWindowMenu() in line 30
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSourceViewComponent() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function initialize() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function makeCommentsVisible() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function makeSourceVisible() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function resetCommentsInputPane() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function saveState() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setSourceTitle(String) in line 40
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/FindBugsLayoutManagerFactory.java
module edu::umd::cs::findbugs::gui2::FindBugsLayoutManagerFactory
   function getInstance(MainFrame) in line 34
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
   function FindBugsLayoutManagerFactory(String) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/GUI2CommandLine.java
module edu::umd::cs::findbugs::gui2::GUI2CommandLine
   inherits from edu::umd::cs::findbugs::FindBugsCommandLine
   function getDocking() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable docking defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function getFontSize() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fontSize defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function getPriority() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function getSaveFile() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable saveFile defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function handleOption(String,String) in line 53
      35 lines of code
      2 parameters
      9 conditional paths
      uses variable docking defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function handleOptionWithArgument(String,String) in line 90
      24 lines of code
      2 parameters
      7 conditional paths
      uses variable fontSize defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
      uses variable fontSizeSpecified defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
      uses variable priority defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
      uses variable saveFile defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function isFontSizeSpecified() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fontSizeSpecified defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function setDocking(boolean) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable docking defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function setSaveFile(File) in line 139
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable saveFile defined in edu::umd::cs::findbugs::gui2::GUI2CommandLine
   function GUI2CommandLine() in line 45
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   variable docking in line 39
   variable fontSize in line 35
   variable fontSizeSpecified in line 37
   variable priority in line 41
   variable saveFile in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/GUISaveState.java
module edu::umd::cs::findbugs::gui2::GUISaveState
   function addCustomPlugin(URL) in line 561
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable customPlugins defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function addRecentFile(File) in line 332
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable recentFiles defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function fileNotFound(File) in line 352
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable recentFiles defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function fileReused(File) in line 318
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable recentFiles defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function generateSorterKeys(int) in line 142
      7 lines of code
      1 parameters
      2 conditional paths
   function getCustomPlugins() in line 558
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable customPlugins defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getDisabledPlugins() in line 568
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable disabledPlugins defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getDockingLayout() in line 306
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dockingLayout defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getEnabledPlugins() in line 555
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable enabledPlugins defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getExtendedWindowState() in line 463
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable extendedWindowState defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getFontSize() in line 474
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fontSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getFrameBounds() in line 451
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable frameBounds defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getInstance() in line 150
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function GUISaveState() defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getPackagePrefixSegments() in line 298
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable packagePrefixSegments defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getPreviousComments() in line 436
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable previousComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getRecentFiles() in line 343
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable recentFiles defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getSplitMain() in line 489
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable splitMain defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getSplitSummary() in line 504
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable splitSummary defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getSplitTop() in line 519
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable splitTop defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getSplitTreeComments() in line 534
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable splitTreeComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getStarterDirectoryForLoadBugs() in line 366
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable starterDirectoryForLoadBugs defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getTabSize() in line 290
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tabSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function loadInstance() in line 157
      protection public
      117 lines of code
      0 parameters
      21 conditional paths
      uses function GUISaveState() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable recentFiles defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable tabSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable TAB_SIZE defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable fontSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable FONT_SIZE defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable starterDirectoryForLoadBugs defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable STARTERDIRECTORY defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable PREVCOMMENTSSIZE defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable COMMENTKEYS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable previousComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable MAXNUMRECENTPROJECTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable NUMPROJECTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function addRecentFile(File) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable RECENTPROJECTKEYS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SORTERTABLELENGTH defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable sortColumns defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function generateSorterKeys(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable GUI2_DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable useDefault defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable DEFAULT_COLUMN_HEADERS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable dockingLayout defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable DOCKINGLAYOUT defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable FRAME_BOUNDS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable frameBounds defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable extendedWindowState defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable EXTENDED_WINDOW_STATE defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitMain defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_MAIN defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitSummary defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_SUMMARY_NEW defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitTop defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_TOP defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitTreeComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_TREE_COMMENTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable packagePrefixSegments defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable PACKAGE_PREFIX_SEGEMENTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable CUSTOM_PLUGINS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable customPlugins defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable ENABLED_PLUGINS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable DISABLED_PLUGINS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable enabledPlugins defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable disabledPlugins defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable instance defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function removeCustomPlugin(URL) in line 572
      protection public
      7 lines of code
      1 parameters
      4 conditional paths
      uses variable customPlugins defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable starterTable defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable useDefault defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable sortColumns defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable DEFAULT_COLUMN_HEADERS defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function save() in line 378
      protection public
      54 lines of code
      0 parameters
      6 conditional paths
      uses variable TAB_SIZE defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable tabSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable FONT_SIZE defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable fontSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable STARTERDIRECTORY defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable starterDirectoryForLoadBugs defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getColumnCount() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable SORTERTABLELENGTH defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function generateSorterKeys(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable PREVCOMMENTSSIZE defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable previousComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable COMMENTKEYS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable recentFiles defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable MAXNUMRECENTPROJECTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable NUMPROJECTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable RECENTPROJECTKEYS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable DOCKINGLAYOUT defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable dockingLayout defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable FRAME_BOUNDS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable frameBounds defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable EXTENDED_WINDOW_STATE defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable extendedWindowState defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_MAIN defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitMain defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_SUMMARY_NEW defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitSummary defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_TOP defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitTop defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_TREE_COMMENTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitTreeComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable PACKAGE_PREFIX_SEGEMENTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable packagePrefixSegments defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable ENABLED_PLUGINS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable enabledPlugins defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable DISABLED_PLUGINS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable disabledPlugins defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable CUSTOM_PLUGINS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable customPlugins defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setDockingLayout(byte[]) in line 310
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dockingLayout defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setExtendedWindowState(int) in line 467
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable extendedWindowState defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setFontSize(float) in line 482
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fontSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setFrameBounds(Rectangle) in line 459
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable frameBounds defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setPackagePrefixSegments(int) in line 302
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable packagePrefixSegments defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setPluginEnabled(String) in line 551
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPluginsEnabled(List< String >,List< String >) in line 546
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable enabledPlugins defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable disabledPlugins defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setPreviousComments(LinkedList< String >) in line 444
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable previousComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setSplitMain(int) in line 497
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable splitMain defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setSplitSummary(int) in line 512
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable splitSummary defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setSplitTop(int) in line 527
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable splitTop defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setSplitTreeComments(int) in line 542
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable splitTreeComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setStarterDirectoryForLoadBugs(File) in line 374
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setTabSize(int) in line 294
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tabSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function GUISaveState() in line 285
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable recentFiles defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable previousComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
   variable COMMENTKEYS in line 79
   variable CUSTOM_PLUGINS in line 92
   variable customPlugins in line 140
   variable DEFAULT_COLUMN_HEADERS in line 72
   variable DISABLED_PLUGINS in line 91
   variable disabledPlugins in line 139
   variable DOCKINGLAYOUT in line 66
   variable dockingLayout in line 125
   variable ENABLED_PLUGINS in line 90
   variable enabledPlugins in line 138
   variable EXTENDED_WINDOW_STATE in line 68
   variable extendedWindowState in line 130
   variable FONT_SIZE in line 88
   variable fontSize in line 134
   variable FRAME_BOUNDS in line 67
   variable frameBounds in line 127
   variable instance in line 62
   variable MAXNUMPREVCOMMENTS in line 77
   variable MAXNUMRECENTPROJECTS in line 70
   variable NUMPROJECTS in line 81
   variable PACKAGE_PREFIX_SEGEMENTS in line 89
   variable packagePrefixSegments in line 136
   variable PREVCOMMENTSSIZE in line 65
   variable previousComments in line 114
   variable recentFiles in line 122
   variable RECENTPROJECTKEYS in line 75
   variable sortColumns in line 120
   variable SORTERTABLELENGTH in line 64
   variable SPLIT_MAIN in line 83
   variable SPLIT_SUMMARY_NEW in line 86
   variable SPLIT_TOP in line 85
   variable SPLIT_TREE_COMMENTS in line 84
   variable splitMain in line 104
   variable splitSummary in line 107
   variable splitTop in line 106
   variable splitTreeComments in line 105
   variable STARTERDIRECTORY in line 82
   variable starterDirectoryForLoadBugs in line 109
   variable starterTable in line 118
   variable TAB_SIZE in line 87
   variable tabSize in line 132
   variable useDefault in line 116
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/GuiUtil.java
module edu::umd::cs::findbugs::gui2::GuiUtil
   function addOkAndCancelButtons(JPanel,JButton,JButton) in line 32
      protection public
      16 lines of code
      3 parameters
      2 conditional paths
      uses variable MAC_OS_X defined in edu::umd::cs::findbugs::gui2::MainFrame
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/MainFrame.java
module edu::umd::cs::findbugs::gui2::MainFrame
   inherits from edu::umd::cs::findbugs::gui2::FBFrame
   inherits from edu::umd::cs::findbugs::log::LogSync
   function acquireDisplayWait() in line 213
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
   function addDesignationItem(JMenu,final String,final String,int) in line 1057
      protection public
      19 lines of code
      4 parameters
      3 conditional paths
      uses function canSetDesignations() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function setDesignation(String) defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function addFileToRecent(File) in line 898
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function addNotify() in line 325
      protection public
      17 lines of code
      0 parameters
      8 conditional paths
      uses function setWaitStatusLabelText(String) defined in edu::umd::cs::findbugs::gui2::MainFrameTree
   function canNavigateAway() in line 883
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function canNavigateAway() defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function clearSummaryTab() in line 856
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function createNewProjectFromMenuItem() in line 573
      protection public
      8 lines of code
      0 parameters
      5 conditional paths
   function createProjectSettings() in line 888
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function displayCloudReport() in line 613
      protection public
      11 lines of code
      0 parameters
      5 conditional paths
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function waitUntilIssueDataDownloaded() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function printCloudSummary(PrintWriter,Iterable< BugInstance >,String[]) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
   function enableRecentMenu(boolean) in line 981
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function error(String) in line 297
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getActionWithoutSavingMsg(String) in line 725
      8 lines of code
      1 parameters
      2 conditional paths
   function getAvailableSortables() in line 315
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getAvailableSortables() defined in edu::umd::cs::findbugs::gui2::MainFrameTree
   function getBackgroundExecutor() in line 961
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBugCollection() in line 937
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBugTreeModel() in line 257
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getBugTreeModel() defined in edu::umd::cs::findbugs::gui2::MainFrameTree
   function getComments() in line 965
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCurProject() in line 993
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCurrentProject() in line 949
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCurrentSelectedBugAspects() in line 929
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCurrentSelectedBugLeaf() in line 925
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDisplayedBugs() in line 913
      8 lines of code
      0 parameters
      1 conditional paths
   function getFindButton() in line 1041
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFindNextButton() in line 1025
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFindPreviousButton() in line 1033
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGuiCallback() in line 209
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGuiLayout() in line 1001
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInstance() in line 187
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function getMainFrameLoadSaveHelper() in line 997
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMainFrameMenu() in line 1013
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMainFrameTree() in line 1005
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getProject() in line 261
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function getProjectPackagePrefixes() in line 977
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getReconfigMenuItem() in line 969
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSaveFile() in line 945
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSaveMenuItem() in line 953
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSaveType() in line 909
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSourceCodeDisplayer() in line 973
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSourceCodeTextPane() in line 933
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSourceSearchTextField() in line 1037
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStatusBarLabel() in line 1021
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSummaryHtmlArea() in line 1017
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSummaryHtmlScrollPane() in line 1029
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSummaryTopPanel() in line 1045
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTree() in line 253
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrameTree
   function getViewFilter() in line 989
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initializeGUI() in line 685
      3 lines of code
      0 parameters
      1 conditional paths
      uses function refresh() defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function isProjectChanged() in line 941
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function join(String,String) in line 809
      9 lines of code
      2 parameters
      3 conditional paths
   function makeInstance(FindBugsLayoutManagerFactory) in line 179
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function initializeGUI() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function openAnalysis(File,SaveType) in line 435
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
   function openBugCollection(SortedBugCollection) in line 446
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses function getProject() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setGuiCallback(IGuiCallback) defined in edu::umd::cs::findbugs::Project
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
   function projectChanged() in line 1009
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function releaseDisplayWait() in line 228
      protection public
      20 lines of code
      0 parameters
      5 conditional paths
   function resetViewCache() in line 739
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function searchSource(int) in line 862
      protection public
      20 lines of code
      1 parameters
      5 conditional paths
   function selectPackagePrefixByProject() in line 773
      protection public
      35 lines of code
      0 parameters
      6 conditional paths
      uses function getProjects(@DottedClassName String) defined in edu::umd::cs::findbugs::ProjectPackagePrefixes
      uses function getFilter(String) defined in edu::umd::cs::findbugs::ProjectPackagePrefixes
   function setCurrentSelectedBugAspects(BugAspects) in line 985
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setProject(Project) in line 268
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setProjectAndBugCollection(@CheckForNull Project,@CheckForNull BugCollection) in line 476
      65 lines of code
      2 parameters
      10 conditional paths
      uses function removeListener(CloudListener) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function removeStatusListener(CloudStatusListener) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function shutdown() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function updateBugCollection() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function clearCache() defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function addListener(CloudListener) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function addStatusListener(CloudStatusListener) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function updateBugTree() defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses function getReconfigMenuItem() defined in edu::umd::cs::findbugs::gui2::MainFrameMenu
      uses function refresh() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses function getOffListenerList() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Filter
      uses function show(BugInstance) defined in edu::umd::cs::findbugs::gui2::ViewFilter
   function setProjectChanged(boolean) in line 277
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
   function setSaveFile(File) in line 957
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSaveType(SaveType) in line 902
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function setSummaryTopPanel(JPanel) in line 1049
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function shouldDisplayIssueIgnoringPackagePrefixes(BugInstance) in line 764
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Filter
   function showConfirmDialog(String,String,String,String) in line 205
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function showConfirmDialog(String,String,String,String) defined in edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
   function showConfirmDialog(String,String,int) in line 311
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function showMessageDialog(String) in line 201
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function showMessageDialog(final String) defined in edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
   function updateBugTree() in line 734
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function refresh() defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function updateCloudSigninStatus(String) in line 365
      10 lines of code
      1 parameters
      10 conditional paths
      uses function getStatusMsg() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function saveState() defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
      uses function setFrameBounds(Rectangle) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setExtendedWindowState(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function save() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function shutdown() defined in edu::umd::cs::findbugs::cloud::Cloud
   function updateSummaryTab(BugLeafNode) in line 819
      36 lines of code
      1 parameters
      2 conditional paths
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function getAbridgedMessage() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAnnotationsForMessage(boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getDetailText() defined in edu::umd::cs::findbugs::BugPattern
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getType() defined in edu::umd::cs::findbugs::BugPattern
      uses function getDetailHTML() defined in edu::umd::cs::findbugs::BugPattern
   function updateTitle() in line 746
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
      uses function getProjectName() defined in edu::umd::cs::findbugs::Project
   function waitUntilReady() in line 249
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function writeToLog(String) in line 305
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function MainFrame(FindBugsLayoutManagerFactory) in line 194
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getInstance(MainFrame) defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManagerFactory
      uses function addPluginUpdateListener(PluginUpdateListener) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function createListener() defined in edu::umd::cs::findbugs::gui2::PluginUpdateDialog
   variable backgroundExecutor in line 123
   variable bugCollection in line 104
   variable cloudStatusListener in line 121
   variable comments in line 144
   variable curProject in line 108
   variable currentSelectedBugAspects in line 106
   variable displayer in line 164
   variable errorMsg in line 133
   variable findButton in line 150
   variable findNextButton in line 152
   variable findPreviousButton in line 154
   variable GUI2_DEBUG in line 88
      protection public
   variable guiCallback in line 102
   variable guiLayout in line 142
   variable instance in line 100
   variable logger in line 114
   variable MAC_OS_X in line 90
      protection public
   variable mainFrameComponentFactory in line 176
   variable mainFrameInitialized in line 125
   variable mainFrameLoadSaveHelper in line 170
   variable newProject in line 110
   variable pluginUpdateDialog in line 177
   variable projectChanged in line 140
   variable projectPackagePrefixes in line 112
   variable saveFile in line 117
   variable saveType in line 168
   variable SEARCH_TEXT_FIELD_SIZE in line 92
   variable sourceCodeTextPane in line 156
   variable sourceSearchTextField in line 148
   variable statusBarLabel in line 146
   variable summaryHtmlScrollPane in line 162
   variable summaryTopPanel in line 158
   variable TITLE_START_TXT in line 94
      protection public
   variable updateStatusBarRunner in line 131
   variable USE_WINDOWS_LAF in line 98
      protection public
   variable userAnnotationListener in line 119
   variable viewFilter in line 166
   variable waitCount in line 127
   variable waitLock in line 129
   variable WINDOW_MODIFIED in line 96
module edu::umd::cs::findbugs::gui2::MainFrame::BugCard
   variable TREECARD in line 1078
      protection public
   variable WAITCARD in line 1079
      protection public
module edu::umd::cs::findbugs::gui2::MainFrame::ProjectSelector
   function toString() in line 1095
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ProjectSelector(String,String,int) in line 1082
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::MainFrame::ShownBugsIterator
   inherits from java::util::Iterator
   function hasNext() in line 1108
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
   function next() in line 1124
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
   function remove() in line 1135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::MainFrame::MyGuiCallback
   inherits from edu::umd::cs::findbugs::gui2::AbstractSwingGuiCallback
   function registerCloud(Project,BugCollection,Cloud) in line 1146
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function addListener(CloudListener) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function addStatusListener(CloudStatusListener) defined in edu::umd::cs::findbugs::cloud::Cloud
   function setErrorMessage(String) in line 1165
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable errorMsg defined in edu::umd::cs::findbugs::gui2::MainFrame
   function unregisterCloud(Project,BugCollection,Cloud) in line 1156
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses variable bugCollection defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function removeListener(CloudListener) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function removeStatusListener(CloudStatusListener) defined in edu::umd::cs::findbugs::cloud::Cloud
   function MyGuiCallback() in line 1141
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::MainFrame::MyCloudListener
   inherits from edu::umd::cs::findbugs::cloud::Cloud::CloudListener
   function issueUpdated(BugInstance) in line 1178
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function statusUpdated() in line 1185
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function taskStarted(Cloud.CloudTask) in line 1190
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::MainFrame::MyCloudStatusListener
   inherits from edu::umd::cs::findbugs::cloud::Cloud::CloudStatusListener
   function handleIssueDataDownloadedEvent() in line 1196
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function handleStateChange(SigninState,SigninState) in line 1201
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getCloudLazily() defined in edu::umd::cs::findbugs::BugCollection
      uses function isInitialized() defined in edu::umd::cs::findbugs::cloud::Cloud
module edu::umd::cs::findbugs::gui2::MainFrame::StatusBarUpdater
   inherits from Runnable
   function run() in line 1211
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/MainFrameComponentFactory.java
module edu::umd::cs::findbugs::gui2::MainFrameComponentFactory
   inherits from java::io::Serializable
   function addLink(JComponent,URL) in line 265
      23 lines of code
      2 parameters
      4 conditional paths
      uses variable listenerAdded defined in edu::umd::cs::findbugs::gui2::MainFrameComponentFactory
      uses variable sourceLink defined in edu::umd::cs::findbugs::gui2::MainFrameComponentFactory
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameComponentFactory
      uses function getBugCollection() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function getSourceLinkToolTip(@CheckForNull BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
   function bugSummaryComponent(String,BugInstance) in line 376
      protection public
      15 lines of code
      2 parameters
      2 conditional paths
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
   function removeLink(JComponent) in line 289
      6 lines of code
      1 parameters
      14 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameComponentFactory
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function sourceCodeExists(@Nonnull SourceLineAnnotation) defined in edu::umd::cs::findbugs::gui2::MainFrameComponentFactory
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function toString() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceLines() defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
      uses function toString(ClassAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function toString(ClassAnnotation) defined in edu::umd::cs::findbugs::BugAnnotation
   function setStyleSheets() in line 149
      12 lines of code
      0 parameters
      6 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameComponentFactory
      uses function getComments() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSourceCodeTextPane() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable GUI2_DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getFindButton() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getFindNextButton() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getFindPreviousButton() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSourceSearchTextField() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function searchSource(int) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getGuiLayout() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSourceViewComponent() defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
      uses function getBugCollection() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function supportsSourceLinks() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getSourceLink(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function addLink(JComponent,URL) defined in edu::umd::cs::findbugs::gui2::MainFrameComponentFactory
      uses function removeLink(JComponent) defined in edu::umd::cs::findbugs::gui2::MainFrameComponentFactory
      uses function setSourceTitle(String) defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
   function sourceCodeExists(@Nonnull SourceLineAnnotation) in line 392
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameComponentFactory
      uses function getProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSourceFinder() defined in edu::umd::cs::findbugs::Project
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
   function MainFrameComponentFactory(MainFrame) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameComponentFactory
      uses function getStatusBarLabel() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setSummaryTopPanel(JPanel) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSummaryTopPanel() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSummaryHtmlArea() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setStyleSheets() defined in edu::umd::cs::findbugs::gui2::MainFrameComponentFactory
      uses function getSummaryHtmlScrollPane() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSplitSummary() defined in edu::umd::cs::findbugs::gui2::GUISaveState
   variable listenerAdded in line 70
   variable LOGGER in line 64
   variable mainFrame in line 66
   variable sourceLink in line 68
module edu::umd::cs::findbugs::gui2::MainFrameComponentFactory::InitializeGUI
   inherits from Runnable
   function run() in line 411
      protection public
      77 lines of code
      0 parameters
      9 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameComponentFactory::InitializeGUI
      uses variable USE_WINDOWS_LAF defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable LOGGER defined in edu::umd::cs::findbugs::gui2::MainFrameComponentFactory
      uses function getGuiLayout() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function initialize() defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
      uses function setBugPopupMenu(JPopupMenu) defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses function setBranchPopupMenu(JPopupMenu) defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses function getFrameBounds() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getExtendedWindowState() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getMainFrameLoadSaveHelper() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function initialize() defined in edu::umd::cs::findbugs::gui2::MainFrameLoadSaveHelper
      uses function getTableheader() defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses function setupOSX() defined in edu::umd::cs::findbugs::gui2::MainFrameComponentFactory::InitializeGUI
   function setupOSX() in line 489
      28 lines of code
      0 parameters
      4 conditional paths
      uses variable MAC_OS_X defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameComponentFactory::InitializeGUI
      uses function initOSX() defined in edu::umd::cs::findbugs::gui2::MainFrameMenu
      uses function enablePreferencesMenuItem(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrameMenu
      uses variable GUI2_DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
   function InitializeGUI(final MainFrame) in line 406
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameComponentFactory::InitializeGUI
   variable mainFrame in line 404
module edu::umd::cs::findbugs::gui2::MainFrameComponentFactory::BugSummaryMouseListener
   inherits from java::awt::event::MouseAdapter
   function mouseClicked(MouseEvent) in line 542
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameComponentFactory::InitializeGUI
      uses function getSourceCodeDisplayer() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function displaySource(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   function mouseEntered(MouseEvent) in line 547
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameComponentFactory::InitializeGUI
   function mouseExited(MouseEvent) in line 553
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameComponentFactory::InitializeGUI
   variable bugInstance in line 529
   variable label in line 531
   variable note in line 533
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/MainFrameHelper.java
module edu::umd::cs::findbugs::gui2::MainFrameHelper
   function attachAcceleratorKey(JMenuItem,int) in line 46
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function attachAcceleratorKey(JMenuItem,int,int) in line 50
      protection public
      11 lines of code
      3 parameters
      2 conditional paths
      uses variable MAC_OS_X defined in edu::umd::cs::findbugs::gui2::MainFrame
   function attachAcceleratorKeyNoCtrl(JMenuItem,int) in line 62
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function isMacLookAndFeel() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function newButton(String,String) in line 14
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function newJMenu(String,String) in line 35
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function newJMenuItem(String,String,int) in line 20
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
   function newJMenuItem(String,String) in line 28
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/MainFrameLoadSaveHelper.java
module edu::umd::cs::findbugs::gui2::MainFrameLoadSaveHelper
   inherits from java::io::Serializable
   function askToSave() in line 166
      20 lines of code
      0 parameters
      45 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameLoadSaveHelper
      uses function isProjectChanged() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSaveFile() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function openAnalysis(File,SaveType) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable filterOpenFileChooser defined in edu::umd::cs::findbugs::gui2::MainFrameLoadSaveHelper
      uses function showSaveDialog(Component) defined in edu::umd::cs::findbugs::gui2::FBFileChooser
      uses function getProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function writeEnabledMatchersAsXML(@WillClose OutputStream) defined in edu::umd::cs::findbugs::filter::Filter
      uses function canNavigateAway() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable saveOpenFileChooser defined in edu::umd::cs::findbugs::gui2::MainFrameLoadSaveHelper
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSaveMenuItem() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setSaveType(SaveType) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setSaveFile(File) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function addFileToRecent(File) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSaveType() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function writeXML(File,@CheckForNull BugCollection) defined in edu::umd::cs::findbugs::Project
      uses function getBugCollection() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getBackgroundExecutor() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setIsRelaxed(boolean) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function setOutputStream(PrintStream) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses function getViewFilter() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function show(BugInstance) defined in edu::umd::cs::findbugs::gui2::ViewFilter
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function finish() defined in edu::umd::cs::findbugs::HTMLBugReporter
      uses function closeProjectInternal() defined in edu::umd::cs::findbugs::gui2::MainFrameLoadSaveHelper
      uses function getReconfigMenuItem() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function closeProjectInternal() in line 530
      10 lines of code
      0 parameters
      8 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameLoadSaveHelper
      uses function createProjectSettings() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function clearSummaryTab() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getComments() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function refresh() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function acquireDisplayWait() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setGuiCallback(IGuiCallback) defined in edu::umd::cs::findbugs::Project
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setCurrentWorkingDirectory(File) defined in edu::umd::cs::findbugs::Project
      uses function getSourceFinder() defined in edu::umd::cs::findbugs::Project
      uses function updateBugTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function releaseDisplayWait() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function canNavigateAway() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function initialize() in line 38
      protection public
      13 lines of code
      0 parameters
      18 conditional paths
      uses variable saveOpenFileChooser defined in edu::umd::cs::findbugs::gui2::MainFrameLoadSaveHelper
      uses variable INSTANCE defined in edu::umd::cs::findbugs::gui2::FindBugsAnalysisFileFilter
      uses variable INSTANCE defined in edu::umd::cs::findbugs::gui2::FindBugsFBPFileFilter
      uses variable INSTANCE defined in edu::umd::cs::findbugs::gui2::FindBugsFBAFileFilter
      uses variable INSTANCE defined in edu::umd::cs::findbugs::gui2::FindBugsHtmlFileFilter
      uses variable filterOpenFileChooser defined in edu::umd::cs::findbugs::gui2::MainFrameLoadSaveHelper
      uses variable INSTANCE defined in edu::umd::cs::findbugs::gui2::FindBugsFilterFileFilter
      uses function showOpenDialog(Component) defined in edu::umd::cs::findbugs::gui2::FBFileChooser
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameLoadSaveHelper
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function getChildren() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses function canNavigateAway() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function askToSave() defined in edu::umd::cs::findbugs::gui2::MainFrameLoadSaveHelper
      uses function openAnalysis(File,SaveType) defined in edu::umd::cs::findbugs::gui2::MainFrame
   function MainFrameLoadSaveHelper(MainFrame) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameLoadSaveHelper
   variable filterOpenFileChooser in line 32
   variable mainFrame in line 28
   variable saveOpenFileChooser in line 30
module edu::umd::cs::findbugs::gui2::MainFrameLoadSaveHelper::SaveReturn
   variable SAVE_ERROR in line 627
      protection public
   variable SAVE_IO_EXCEPTION in line 626
      protection public
   variable SAVE_SUCCESSFUL in line 626
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/MainFrameMenu.java
module edu::umd::cs::findbugs::gui2::MainFrameMenu
   inherits from java::io::Serializable
   function addFileToRecent(File) in line 601
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getRecentFiles() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function addRecentFile(File) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function addRecentFile(final File) defined in edu::umd::cs::findbugs::gui2::RecentMenu
   function addNavItem(final ActionMap,JMenu,String,String,String,int) in line 694
      7 lines of code
      6 parameters
      3 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameMenu
      uses function getMainFrameTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function enableOrDisableItems(Project,BugCollection) in line 661
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function getFileList() defined in edu::umd::cs::findbugs::Project
      uses variable saveAsMenuItem defined in edu::umd::cs::findbugs::gui2::MainFrameMenu
      uses variable groupByMenuItem defined in edu::umd::cs::findbugs::gui2::MainFrameMenu
   function enablePreferencesMenuItem(boolean) in line 634
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function getPreferencesMenuItem() defined in edu::umd::cs::findbugs::gui2::MainFrameMenu
      uses variable MAC_OS_X defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable osxPrefsEnableMethod defined in edu::umd::cs::findbugs::gui2::MainFrameMenu
      uses variable osxAdapter defined in edu::umd::cs::findbugs::gui2::MainFrameMenu
   function enableRecentMenu(boolean) in line 617
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getCloseProjectItem() in line 657
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPreferencesMenuItem() in line 621
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameMenu
      uses function getSaveFile() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSaveMenuItem() defined in edu::umd::cs::findbugs::gui2::MainFrameMenu
      uses variable projectChanged defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSaveType() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function getReconfigMenuItem() in line 613
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSaveMenuItem() in line 609
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initOSX() in line 648
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable osxAdapter defined in edu::umd::cs::findbugs::gui2::MainFrameMenu
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameMenu
      uses variable osxPrefsEnableMethod defined in edu::umd::cs::findbugs::gui2::MainFrameMenu
   function MainFrameMenu(MainFrame) in line 65
      protection public
      3 lines of code
      1 parameters
      42 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameMenu
      uses variable GUI2_DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function showMessageDialog(String) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function fileNotFound(File) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function fileReused(File) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function addRecentFile(final File) defined in edu::umd::cs::findbugs::gui2::RecentMenu
      uses function getCurProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function isProjectChanged() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSaveFile() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getMainFrameLoadSaveHelper() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function openAnalysis(File,SaveType) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function error(String) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setSaveType(SaveType) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable saveAsMenuItem defined in edu::umd::cs::findbugs::gui2::MainFrameMenu
      uses variable MAC_OS_X defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getGuiLayout() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function createWindowMenu() defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
      uses function createNewProjectFromMenuItem() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function canNavigateAway() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable groupByMenuItem defined in edu::umd::cs::findbugs::gui2::MainFrameMenu
      uses function setVisible(boolean) defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses function makeSourceVisible() defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
      uses function getSourceCodeDisplayer() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function showLine(int) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getMainFrameTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses function addNavItem(final ActionMap,JMenu,String,String,String,int) defined in edu::umd::cs::findbugs::gui2::MainFrameMenu
      uses function getUserDesignationKeys() defined in edu::umd::cs::findbugs::I18N
      uses function getUserDesignation(String) defined in edu::umd::cs::findbugs::I18N
      uses function addDesignationItem(JMenu,final String,final String,int) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getUpdateChecker() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function updateChecksGloballyDisabled() defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function getPluginThatDisabledUpdateChecks() defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function checkForUpdates(boolean) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getBugCollection() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function supportsCloudSummaries() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function displayCloudReport() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getProjectPackagePrefixes() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function size() defined in edu::umd::cs::findbugs::ProjectPackagePrefixes
      uses function selectPackagePrefixByProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getViewFilter() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setRank(RankFilter) defined in edu::umd::cs::findbugs::gui2::ViewFilter
      uses function resetViewCache() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getMode() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable COMMUNAL defined in edu::umd::cs::findbugs::cloud::Cloud::Mode
      uses function setClassification(OverallClassificationFilter) defined in edu::umd::cs::findbugs::gui2::ViewFilter
      uses function setEvaluation(CloudFilter) defined in edu::umd::cs::findbugs::gui2::ViewFilter
      uses function setFirstSeen(FirstSeenFilter) defined in edu::umd::cs::findbugs::gui2::ViewFilter
      uses function getProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function getChildren() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function showFilterPane() defined in edu::umd::cs::findbugs::gui2::PreferencesFrame
      uses function isEnabled(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses function setEnabled(Matcher,boolean) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
      uses variable UNFILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
   variable groupByMenuItem in line 63
   variable mainFrame in line 42
   variable osxAdapter in line 59
   variable osxPrefsEnableMethod in line 61
   variable saveAsMenuItem in line 62
module edu::umd::cs::findbugs::gui2::MainFrameMenu::CutAction
   inherits from javax::swing::text::TextAction
   function actionPerformed(ActionEvent) in line 679
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function CutAction() in line 674
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::MainFrameMenu::CopyAction
   inherits from javax::swing::text::TextAction
   function actionPerformed(ActionEvent) in line 709
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function CopyAction() in line 704
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::MainFrameMenu::PasteAction
   inherits from javax::swing::text::TextAction
   function actionPerformed(ActionEvent) in line 727
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function PasteAction() in line 722
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/MainFrameTree.java
module edu::umd::cs::findbugs::gui2::MainFrameTree
   inherits from java::io::Serializable
   function bugListPanel() in line 413
      protection public
      110 lines of code
      0 parameters
      6 conditional paths
      uses function getTableheader() defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses function setVisible(boolean) defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable textFieldForPackagesToDisplay defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses function getViewFilter() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function resetViewCache() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function makeNavigationPanel(String,JComponent,JComponent,JComponent) defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses variable waitStatusLabel defined in edu::umd::cs::findbugs::gui2::MainFrameTree
   function getAvailableSortables() in line 122
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable DESIGNATION defined in edu::umd::cs::findbugs::gui2::Sortables
      uses variable FIRST_SEEN defined in edu::umd::cs::findbugs::gui2::Sortables
      uses variable FIRSTVERSION defined in edu::umd::cs::findbugs::gui2::Sortables
      uses variable LASTVERSION defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function rebuild() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function getBugTreeModel() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrameTree
   function getCurrentSelectedBugLeaf() in line 409
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTableheader() in line 524
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTree() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeNavigationPanel(String,JComponent,JComponent,JComponent) in line 568
      35 lines of code
      4 parameters
      1 conditional paths
   function newTree(final JTree,final BugTreeModel) in line 86
      protection public
      27 lines of code
      2 parameters
      1 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses function setFontSizeHelper(Component[],float) defined in edu::umd::cs::findbugs::gui2::FBFrame
      uses function addColumnModelListener(TableColumnModelListener) defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function setBranchPopupMenu(JPopupMenu) in line 532
      protection public
      3 lines of code
      1 parameters
      3 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses function setFontSizeHelper(Component[],float) defined in edu::umd::cs::findbugs::gui2::FBFrame
      uses function enableRecentMenu(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getTableheader() defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses function getMainFrameMenu() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function enablePreferencesMenuItem(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrameMenu
   function setBugPopupMenu(JPopupMenu) in line 528
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFieldForPackagesToDisplayText(String) in line 608
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable textFieldForPackagesToDisplay defined in edu::umd::cs::findbugs::gui2::MainFrameTree
   function setWaitStatusLabelText(String) in line 604
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable waitStatusLabel defined in edu::umd::cs::findbugs::gui2::MainFrameTree
   function updateBugTree() in line 152
      protection public
      22 lines of code
      0 parameters
      4 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses function acquireDisplayWait() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses function getBugCollection() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getOffListenerList() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function sizeUnfiltered() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function warnUserOfFilters() defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses function updateTitle() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function releaseDisplayWait() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function warnUserOfFilters() in line 175
      9 lines of code
      0 parameters
      17 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses function canNavigateAway() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function getAvailableSortables() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getUserDesignationKeys() defined in edu::umd::cs::findbugs::I18N
      uses function getUserDesignation(String) defined in edu::umd::cs::findbugs::I18N
      uses function addDesignationItem(JMenu,final String,final String,int) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getCurrentSelectedBugAspects() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getMatcher() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
      uses function getBugTreeModel() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getIndexOfChild(Object,Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function showMessageDialog(String) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrameTree
   function MainFrameTree(MainFrame) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameTree
   variable mainFrame in line 58
   variable textFieldForPackagesToDisplay in line 78
   variable waitStatusLabel in line 80
module edu::umd::cs::findbugs::gui2::MainFrameTree::TreeMouseListener
   inherits from java::awt::event::MouseListener
   function mouseClicked(MouseEvent) in line 614
      protection public
      24 lines of code
      1 parameters
      5 conditional paths
   function mouseEntered(MouseEvent) in line 648
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function mouseExited(MouseEvent) in line 652
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function mousePressed(MouseEvent) in line 640
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function mouseReleased(MouseEvent) in line 644
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::MainFrameTree::MyTreeSelectionListener
   inherits from javax::swing::event::TreeSelectionListener
   function valueChanged(TreeSelectionEvent) in line 659
      protection public
      35 lines of code
      1 parameters
      6 conditional paths
      uses variable mainFrame defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses function canNavigateAway() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function isProjectChanged() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setCurrentSelectedBugAspects(BugAspects) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
   variable ignoreSelection in line 657
module edu::umd::cs::findbugs::gui2::MainFrameTree::MyTreeExpansionListener
   inherits from javax::swing::event::TreeExpansionListener
   function treeCollapsed(TreeExpansionEvent) in line 727
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function treeExpanded(TreeExpansionEvent) in line 699
      protection public
      26 lines of code
      1 parameters
      4 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/NewFilterFrame.java
module edu::umd::cs::findbugs::gui2::NewFilterFrame
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
   function close() in line 67
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function main(String[]) in line 219
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function open() in line 59
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function NewFilterFrame() in line 74
      144 lines of code
      0 parameters
      9 conditional paths
      uses function getAvailableSortables() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable DIVIDER defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function toString() defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getAllSorted() defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function formatValue(String) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses function showMessageDialog(String) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function addFilters(FilterMatcher[]) defined in edu::umd::cs::findbugs::gui2::ProjectSettings
   variable instance in line 57
   variable list in line 55
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/NewFilterFromBug.java
module edu::umd::cs::findbugs::gui2::NewFilterFromBug
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
   function closeDialog() in line 79
      3 lines of code
      0 parameters
      2 conditional paths
   function NewFilterFromBug(final FilterFromBugPicker,final ApplyNewFilter) in line 44
      protection public
      34 lines of code
      2 parameters
      1 conditional paths
      uses function fromMatcher(Matcher) defined in edu::umd::cs::findbugs::gui2::ApplyNewFilter
   variable listOfAllFrames in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/NewProjectWizard.java
module edu::umd::cs::findbugs::gui2::NewProjectWizard
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
   function addNotify() in line 629
      protection public
      17 lines of code
      0 parameters
      3 conditional paths
   function clearProjectSettings(Project) in line 421
      18 lines of code
      1 parameters
      4 conditional paths
      uses function getFileCount() defined in edu::umd::cs::findbugs::Project
      uses function removeFile(int) defined in edu::umd::cs::findbugs::Project
      uses function getNumAuxClasspathEntries() defined in edu::umd::cs::findbugs::Project
      uses function removeAuxClasspathEntry(int) defined in edu::umd::cs::findbugs::Project
      uses function getNumSourceDirs() defined in edu::umd::cs::findbugs::Project
      uses function removeSourceDir(int) defined in edu::umd::cs::findbugs::Project
   function createFilePanel(final String,final JList< String >,final DefaultListModel< String >,final int,final FileFilter,final String,boolean,final String) in line 450
      153 lines of code
      8 parameters
      12 conditional paths
      uses function addFile(String) defined in edu::umd::cs::findbugs::Project
      uses function addAuxClasspathEntry(String) defined in edu::umd::cs::findbugs::Project
      uses variable discover defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function showOpenDialog(Component) defined in edu::umd::cs::findbugs::gui2::FBFileChooser
   function createTextFieldPanel(String,JTextField) in line 440
      9 lines of code
      2 parameters
      1 conditional paths
   function loadAllPanels(final JPanel) in line 611
      16 lines of code
      1 parameters
      3 conditional paths
   function setSourceDirecs(DefaultListModel< String >) in line 650
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function NewProjectWizard() in line 151
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function NewProjectWizard(Project) in line 160
      protection public
      260 lines of code
      1 parameters
      36 conditional paths
      uses function getCloudId() defined in edu::umd::cs::findbugs::Project
      uses function getRegisteredClouds() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getPluginStatus(Plugin) defined in edu::umd::cs::findbugs::Project
      uses function setGuiCallback(IGuiCallback) defined in edu::umd::cs::findbugs::Project
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function addFile(String) defined in edu::umd::cs::findbugs::Project
      uses function addAuxClasspathEntry(String) defined in edu::umd::cs::findbugs::Project
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
      uses function setProjectName(String) defined in edu::umd::cs::findbugs::Project
      uses function getId() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
      uses function setCloudId(@Nullable String) defined in edu::umd::cs::findbugs::Project
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getBugCollection() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function reinitializeCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function getComments() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function updateCloud() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getCurrentSelectedBugLeaf() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getProjectName() defined in edu::umd::cs::findbugs::Project
      uses variable UNNAMED_PROJECT defined in edu::umd::cs::findbugs::Project
      uses function updateTitle() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getFileList() defined in edu::umd::cs::findbugs::Project
      uses function getAuxClasspathEntryList() defined in edu::umd::cs::findbugs::Project
      uses function getSourceDirList() defined in edu::umd::cs::findbugs::Project
   variable analyzeList in line 101
   variable analyzeModel in line 103
   variable auxList in line 107
   variable auxModel in line 109
   variable border in line 75
   variable cancelButton in line 117
   variable chooser in line 83
   variable cloudSelector in line 119
   variable currentPanel in line 123
   variable directoryOrArchive in line 85
   variable finishButton in line 115
   variable isNewProject in line 124
   variable project in line 77
   variable projectChanged in line 79
   variable projectName in line 105
   variable projectNameChanged in line 81
   variable sourceList in line 111
   variable sourceModel in line 113
   variable wizardComponents in line 121
module edu::umd::cs::findbugs::gui2::NewProjectWizard::CloudComboBoxRenderer
   inherits from javax::swing::plaf::basic::BasicComboBoxRenderer
   function getListCellRendererComponent(JList,Object,int,boolean,boolean) in line 128
      protection public
      21 lines of code
      5 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/OSXAdapter.java
module edu::umd::cs::findbugs::gui2::OSXAdapter
   inherits from com::apple::eawt::ApplicationAdapter
   function enablePrefs(boolean) in line 117
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable theApplication defined in edu::umd::cs::findbugs::gui2::OSXAdapter
   function handleAbout(ApplicationEvent) in line 51
      protection public
      18 lines of code
      1 parameters
      2 conditional paths
      uses variable mainApp defined in edu::umd::cs::findbugs::gui2::OSXAdapter
   function handlePreferences(ApplicationEvent) in line 71
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable mainApp defined in edu::umd::cs::findbugs::gui2::OSXAdapter
   function handleQuit(ApplicationEvent) in line 81
      protection public
      18 lines of code
      1 parameters
      2 conditional paths
      uses variable mainApp defined in edu::umd::cs::findbugs::gui2::OSXAdapter
   function registerMacOSXApplication(MainFrame) in line 103
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable mainApp defined in edu::umd::cs::findbugs::gui2::OSXAdapter
      uses variable theApplication defined in edu::umd::cs::findbugs::gui2::OSXAdapter
      uses variable theAdapter defined in edu::umd::cs::findbugs::gui2::OSXAdapter
   function OSXAdapter() in line 43
      2 lines of code
      0 parameters
      1 conditional paths
   variable mainApp in line 41
   variable theAdapter in line 36
   variable theApplication in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/PluginUpdateDialog.java
module edu::umd::cs::findbugs::gui2::PluginUpdateDialog
   inherits from java::io::Serializable
   function createListener() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createMessagePane(String) in line 101
      7 lines of code
      1 parameters
      1 conditional paths
   function createPluginLabel(UpdateChecker.PluginUpdate) in line 109
      13 lines of code
      1 parameters
      2 conditional paths
   function createPluginUpdateButton(final JPanel,final UpdateChecker.PluginUpdate) in line 130
      25 lines of code
      2 parameters
      3 conditional paths
   function showUpdateDialog(Collection< UpdateChecker.PluginUpdate >,boolean) in line 39
      protection public
      61 lines of code
      2 parameters
      10 conditional paths
      uses function sortUpdates(Collection< UpdateChecker.PluginUpdate >,List< UpdateChecker.PluginUpdate >) defined in edu::umd::cs::findbugs::gui2::PluginUpdateDialog
      uses function getUpdateChecker() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function updatesHaveBeenSeenBefore(Collection< UpdateChecker.PluginUpdate >) defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function createPluginLabel(UpdateChecker.PluginUpdate) defined in edu::umd::cs::findbugs::gui2::PluginUpdateDialog
      uses function createPluginUpdateButton(final JPanel,final UpdateChecker.PluginUpdate) defined in edu::umd::cs::findbugs::gui2::PluginUpdateDialog
      uses function createMessagePane(String) defined in edu::umd::cs::findbugs::gui2::PluginUpdateDialog
   function sortUpdates(Collection< UpdateChecker.PluginUpdate >,List< UpdateChecker.PluginUpdate >) in line 156
      23 lines of code
      2 parameters
      4 conditional paths
   variable LOGGER in line 35
   variable SOFTWARE_UPDATE_DIALOG_DELAY_MS in line 37
module edu::umd::cs::findbugs::gui2::PluginUpdateDialog::MyPluginUpdateListener
   inherits from edu::umd::cs::findbugs::updates::PluginUpdateListener
   function pluginUpdateCheckComplete(final Collection< UpdateChecker.PluginUpdate >,final boolean) in line 182
      protection public
      22 lines of code
      2 parameters
      4 conditional paths
      uses function showUpdateDialogInSwingThread(final Collection< UpdateChecker.PluginUpdate >,final boolean) defined in edu::umd::cs::findbugs::gui2::PluginUpdateDialog::MyPluginUpdateListener
      uses variable SOFTWARE_UPDATE_DIALOG_DELAY_MS defined in edu::umd::cs::findbugs::gui2::PluginUpdateDialog
      uses variable LOGGER defined in edu::umd::cs::findbugs::gui2::PluginUpdateDialog
   function showUpdateDialogInSwingThread(final Collection< UpdateChecker.PluginUpdate >,final boolean) in line 205
      8 lines of code
      2 parameters
      1 conditional paths
      uses function showUpdateDialog(Collection< UpdateChecker.PluginUpdate >,boolean) defined in edu::umd::cs::findbugs::gui2::PluginUpdateDialog
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/PreferencesFrame.java
module edu::umd::cs::findbugs::gui2::PreferencesFrame
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
   function addField(JPanel,GridBagConstraints,int,String,JComponent) in line 480
      11 lines of code
      5 parameters
      1 conditional paths
   function changeFontSize() in line 576
      24 lines of code
      0 parameters
      4 conditional paths
      uses function getFontSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setFontSize(float) defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function changePackagePrefixLength() in line 601
      25 lines of code
      0 parameters
      4 conditional paths
      uses function getPackagePrefixSegments() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setPackagePrefixSegments(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function needToRebuild() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function changeTabSize() in line 551
      24 lines of code
      0 parameters
      4 conditional paths
      uses function getTabSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setTabSize(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getSourceCodeDisplayer() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function clearCache() defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   function createFilterPane() in line 636
      89 lines of code
      0 parameters
      5 conditional paths
      uses function getProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function removeChild(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable UNFILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function isEmpty() defined in edu::umd::cs::findbugs::filter::Filter
      uses function clear() defined in edu::umd::cs::findbugs::filter::Filter
   function createPluginPane() in line 243
      74 lines of code
      0 parameters
      6 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui2::PreferencesFrame
      uses function addCustomPlugin(URL) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setPluginEnabled(String) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses function setGloballyEnabled(boolean) defined in edu::umd::cs::findbugs::Plugin
      uses function save() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function isGloballyEnabled() defined in edu::umd::cs::findbugs::Plugin
   function createPropertiesPane() in line 491
      44 lines of code
      0 parameters
      1 conditional paths
      uses function getTabSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getFontSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getPackagePrefixSegments() defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getCurrentProject() in line 238
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBugCollection() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
   function getInstance() in line 122
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function handleWindowClose() in line 194
      43 lines of code
      0 parameters
      9 conditional paths
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable project defined in edu::umd::cs::findbugs::gui2::PreferencesFrame::EnabledSettings
      uses function getPluginStatus(Plugin) defined in edu::umd::cs::findbugs::Project
      uses function setPluginStatusTrinary(String,Boolean) defined in edu::umd::cs::findbugs::Project
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses variable global defined in edu::umd::cs::findbugs::gui2::PreferencesFrame::EnabledSettings
      uses function isGloballyEnabled() defined in edu::umd::cs::findbugs::Plugin
      uses function setGloballyEnabled(boolean) defined in edu::umd::cs::findbugs::Plugin
      uses function updateBugTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setPluginsEnabled(List< String >,List< String >) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function save() defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function rebuildPluginCheckboxes() in line 322
      157 lines of code
      0 parameters
      23 conditional paths
      uses function isCorePlugin() defined in edu::umd::cs::findbugs::Plugin
      uses function getShortDescription() defined in edu::umd::cs::findbugs::Plugin
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses function getPluginLoader() defined in edu::umd::cs::findbugs::Plugin
      uses function getURL() defined in edu::umd::cs::findbugs::PluginLoader
      uses variable global defined in edu::umd::cs::findbugs::gui2::PreferencesFrame::EnabledSettings
      uses function isEnabledByDefault() defined in edu::umd::cs::findbugs::Plugin
      uses variable cannotDisable defined in edu::umd::cs::findbugs::Plugin
      uses function getDetailedDescription() defined in edu::umd::cs::findbugs::Plugin
      uses variable project defined in edu::umd::cs::findbugs::gui2::PreferencesFrame::EnabledSettings
   function resetPropertiesPane() in line 627
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getTabSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getFontSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function showFilterPane() in line 134
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function updateFilters(boolean) in line 766
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
      uses variable UNFILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
   function PreferencesFrame() in line 138
      55 lines of code
      0 parameters
      1 conditional paths
   variable filterCheckBoxList in line 101
   variable filterPane in line 131
   variable FONT_MAX in line 97
   variable FONT_MIN in line 96
   variable fontTextField in line 105
   variable instance in line 99
   variable LOGGER in line 91
   variable mainTabPane in line 132
   variable packagePrefixLengthTextField in line 107
   variable pluginEnabledStatus in line 109
   variable pluginPanelCenter in line 110
   variable pluginsAdded in line 130
   variable TAB_MAX in line 94
   variable TAB_MIN in line 93
   variable tabTextField in line 104
module edu::umd::cs::findbugs::gui2::PreferencesFrame::EnabledSettings
   function EnabledSettings(boolean,Boolean) in line 116
      4 lines of code
      2 parameters
      1 conditional paths
   variable global in line 113
      protection public
   variable project in line 114
      protection public
module edu::umd::cs::findbugs::gui2::PreferencesFrame::PluginWithDescription
   function toString() in line 546
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PluginWithDescription(String,CloudPlugin) in line 538
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::PreferencesFrame::MatchBox
   inherits from javax::swing::JCheckBox
module edu::umd::cs::findbugs::gui2::PreferencesFrame::UninstallClickListener
   inherits from java::awt::event::ActionListener
   function actionPerformed(ActionEvent) in line 782
      protection public
      39 lines of code
      1 parameters
      6 conditional paths
      uses function getShortDescription() defined in edu::umd::cs::findbugs::Plugin
      uses function removeCustomPlugin(URL) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getCustomPlugins() defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function UninstallClickListener(Plugin,URL) in line 776
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable plugin in line 773
   variable url in line 774
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/ProjectSettings.java
module edu::umd::cs::findbugs::gui2::ProjectSettings
   inherits from java::io::Serializable
   function addFilter(FilterMatcher) in line 122
      protection public
      47 lines of code
      1 parameters
      9 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable allMatchers defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
      uses function getFilters() defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
      uses function getBugTreeModel() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function removeBranch(ArrayList< String >) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function addFilters(FilterMatcher[]) in line 170
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable allMatchers defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
   function getInstance() in line 57
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses function ProjectSettings() defined in edu::umd::cs::findbugs::gui2::ProjectSettings
   function getMaxSizeOfPreviousComments() in line 202
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable maxSizeOfPreviousComments defined in edu::umd::cs::findbugs::gui2::ProjectSettings
   function loadInstance(@WillClose InputStream) in line 79
      protection public
      24 lines of code
      1 parameters
      5 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses function ProjectSettings() defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable GUI2_DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function newInstance() defined in edu::umd::cs::findbugs::gui2::ProjectSettings
   function newInstance() in line 52
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses function ProjectSettings() defined in edu::umd::cs::findbugs::gui2::ProjectSettings
   function removeFilter(FilterMatcher) in line 187
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable allMatchers defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable UNFILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
   function save(@WillClose OutputStream) in line 104
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable GUI2_DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
   function setMaxSizeOfPreviousComments(int) in line 211
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable maxSizeOfPreviousComments defined in edu::umd::cs::findbugs::gui2::ProjectSettings
   function ProjectSettings() in line 45
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable allMatchers defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable filters defined in edu::umd::cs::findbugs::gui2::ProjectSettings
   variable allMatchers in line 72
   variable filters in line 67
   variable instance in line 50
   variable maxSizeOfPreviousComments in line 77
   variable serialVersionUID in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/PropertiesDialog.java
module edu::umd::cs::findbugs::gui2::PropertiesDialog
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
   function getInstance() in line 50
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::gui2::PropertiesDialog
      uses function PropertiesDialog() defined in edu::umd::cs::findbugs::gui2::PropertiesDialog
   function PropertiesDialog() in line 57
      64 lines of code
      0 parameters
      5 conditional paths
      uses variable tabTextField defined in edu::umd::cs::findbugs::gui2::PropertiesDialog
      uses function getTabSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable fontTextField defined in edu::umd::cs::findbugs::gui2::PropertiesDialog
      uses function getFontSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setTabSize(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getSourceCodeDisplayer() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function clearCache() defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function setFontSize(float) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getInstance() defined in edu::umd::cs::findbugs::gui2::PropertiesDialog
   variable fontTextField in line 48
   variable instance in line 44
   variable tabTextField in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/RecentMenu.java
module edu::umd::cs::findbugs::gui2::RecentMenu
   function addRecentFile(final File) in line 91
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function add(T) defined in edu::umd::cs::findbugs::gui2::RecentMenu::LimitedArrayList
      uses function makeRecentMenu() defined in edu::umd::cs::findbugs::gui2::RecentMenu
   function makeRecentMenu() in line 70
      protection public
      15 lines of code
      0 parameters
      4 conditional paths
      uses variable GUI2_DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
   function RecentMenu(JMenu) in line 59
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getRecentFiles() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function add(T) defined in edu::umd::cs::findbugs::gui2::RecentMenu::LimitedArrayList
      uses function makeRecentMenu() defined in edu::umd::cs::findbugs::gui2::RecentMenu
module edu::umd::cs::findbugs::gui2::RecentMenu::LimitedArrayList
   inherits from java::util::ArrayList
   function add(T) in line 40
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function LimitedArrayList() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable MAX_ENTRIES in line 33
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/SaveType.java
module edu::umd::cs::findbugs::gui2::SaveType
   function forFile(File) in line 68
      protection public
      23 lines of code
      1 parameters
      1 conditional paths
   function getFileExtension() in line 52
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   function getFilter() in line 28
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function isValid(File) in line 43
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   variable FBP_FILE in line 27
      protection public
   variable HTML_OUTPUT in line 27
      protection public
   variable NOT_KNOWN in line 27
      protection public
   variable XML_ANALYSIS in line 27
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/Sortables.java
module edu::umd::cs::findbugs::gui2::Sortables
   inherits from java::util::Comparator
   function compare(String,String) in line 529
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function formatValue(String) in line 524
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getAll() in line 516
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAll(BugSet) in line 520
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getAllSorted() in line 534
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAllSorted(BugSet) in line 538
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getBugLeafNodeComparator() in line 552
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getComparator() in line 546
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFrom(BugInstance) in line 514
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getSortableByPrettyName(String) in line 560
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function isAvailable(MainFrame) in line 556
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 510
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Sortables(String) in line 499
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function compare(String,String) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getFrom(BugInstance) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
   variable BUG_RANK in line 416
      protection public
   variable BUG_STATUS in line 452
      protection public
   variable BUGCODE in line 361
      protection public
   variable bugLeafNodeComparator in line 550
      protection public
   variable CATEGORY in line 318
      protection public
   variable CLASS in line 255
      protection public
   variable comparator in line 544
   variable CONSENSUS in line 395
      protection public
   variable DESIGNATION in line 344
      protection public
   variable DIVIDER in line 495
      protection public
   variable FIRST_SEEN in line 87
      protection public
   variable FIRSTVERSION in line 127
      protection public
   variable LASTVERSION in line 189
      protection public
   variable PACKAGE in line 269
      protection public
   variable PACKAGE_PREFIX in line 286
      protection public
   variable prettyName in line 497
      protection public
   variable PRIORITY in line 231
      protection public
   variable PROJECT in line 473
      protection public
   variable TYPE in line 372
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/SortableStringComparator.java
module edu::umd::cs::findbugs::gui2::SortableStringComparator
   inherits from java::util::Comparator
   function compare(String,String) in line 36
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function compare(String,String) defined in edu::umd::cs::findbugs::gui2::Sortables
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/SorterDialog.java
module edu::umd::cs::findbugs::gui2::SorterDialog
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
   function createAppropriatelySizedScrollPane(JTable) in line 152
      8 lines of code
      1 parameters
      1 conditional paths
   function createSorterPane() in line 105
      46 lines of code
      0 parameters
      3 conditional paths
      uses variable preview defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses function getAvailableSortables() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable DIVIDER defined in edu::umd::cs::findbugs::gui2::Sortables
      uses variable checkBoxSortList defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses function setSorterCheckBoxes() defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses function createAppropriatelySizedScrollPane(JTable) defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses function createFrom(SorterTableColumnModel) defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function getInstance() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function SorterDialog() defined in edu::umd::cs::findbugs::gui2::SorterDialog
   function setSorterCheckBoxes() in line 167
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable checkBoxSortList defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses function isShown(Sortables) defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function setVisible(boolean) in line 67
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable preview defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses function setSorterCheckBoxes() defined in edu::umd::cs::findbugs::gui2::SorterDialog
   function SorterDialog() in line 76
      8 lines of code
      0 parameters
      1 conditional paths
      uses function createSorterPane() defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses variable preview defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses variable DIVIDER defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function toString() defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function setVisible(boolean) defined in edu::umd::cs::findbugs::gui2::SorterDialog
   variable checkBoxSortList in line 58
   variable preview in line 56
module edu::umd::cs::findbugs::gui2::SorterDialog::SortableCheckBox
   inherits from javax::swing::JCheckBox
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/SorterTableColumnModel.java
module edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   inherits from javax::swing::table::TableColumnModel
   function addColumn(TableColumn) in line 198
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function addColumnModelListener(TableColumnModelListener) in line 373
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable watchers defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function check() in line 84
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable order defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable shown defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function error(String) defined in edu::umd::cs::findbugs::gui2::MainFrame
   function columnSelectionChanged(ListSelectionEvent) in line 382
      protection public
      3 lines of code
      1 parameters
      3 conditional paths
      uses variable order defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable DIVIDER defined in edu::umd::cs::findbugs::gui2::Sortables
   function createFrom(SorterTableColumnModel) in line 127
      protection public
      34 lines of code
      1 parameters
      7 conditional paths
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable order defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable watchers defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable shown defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function isAvailable(MainFrame) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function makeTableColumn(int,Sortables) defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable dlsm defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function orderUpdate() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function freezeOrder() in line 417
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable frozen defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getColumn(int) in line 304
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getColumnCount() in line 278
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getColumnIndex(Object) in line 288
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getColumnIndexAtX(int) in line 314
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getColumnMargin() in line 309
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getColumns() in line 283
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getColumnSelectionAllowed() in line 340
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSelectedColumnCount() in line 354
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable dlsm defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getSelectedColumns() in line 345
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable dlsm defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getSelectionModel() in line 368
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dlsm defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getTotalColumnWidth() in line 326
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function isShown(Sortables) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable shown defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function makeTableColumn(int,Sortables) in line 116
      10 lines of code
      2 parameters
      1 conditional paths
   function moveColumn(int,int) in line 250
      protection public
      21 lines of code
      2 parameters
      3 conditional paths
      uses function canNavigateAway() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function orderUpdate() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable watchers defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function orderUpdate() in line 406
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable frozen defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable order defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function check() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function removeColumn(TableColumn) in line 203
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeColumnModelListener(TableColumnModelListener) in line 378
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable watchers defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function setColumnMargin(int) in line 273
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setColumnSelectionAllowed(boolean) in line 335
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSelectionModel(ListSelectionModel) in line 363
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setVisible(Sortables,boolean) in line 207
      protection public
      41 lines of code
      2 parameters
      11 conditional paths
      uses variable shown defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function makeTableColumn(int,Sortables) defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function orderUpdate() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable watchers defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function thawOrder() in line 422
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable frozen defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function orderUpdate() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function toString() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable order defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function SorterTableColumnModel(Sortables[]) in line 96
      protection public
      19 lines of code
      1 parameters
      3 conditional paths
      uses variable shown defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function makeTableColumn(int,Sortables) defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable dlsm defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function orderUpdate() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function check() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function SorterTableColumnModel(Collection< Sortables >) in line 162
      protection public
      3 lines of code
      1 parameters
      4 conditional paths
      uses variable DIVIDER defined in edu::umd::cs::findbugs::gui2::Sortables
   variable columnList in line 64
   variable dlsm in line 66
   variable frozen in line 70
   variable order in line 60
   variable shown in line 62
   variable watchers in line 68
module edu::umd::cs::findbugs::gui2::SorterTableColumnModel::FBTableCellRenderer
   inherits from javax::swing::table::TableCellRenderer
   function getTableCellRendererComponent(JTable,Object,boolean,boolean,int,int) in line 171
      protection public
      24 lines of code
      6 parameters
      1 conditional paths
   variable defaultRenderer in line 168
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/SourceCodeDisplay.java
module edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   inherits from Runnable
   function charToLineNum(int) in line 299
      16 lines of code
      1 parameters
      6 conditional paths
      uses function getSourceCodeTextPane() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getLineOffset(int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function clearCache() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   function displaySource(BugInstance,SourceLineAnnotation) in line 83
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function find(String) in line 316
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable currentChar defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function search(JavaSourceDocument,String,int,Boolean) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable myDocument defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function charToLineNum(int) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   function findNext(String) in line 323
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable currentChar defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function search(JavaSourceDocument,String,int,Boolean) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable myDocument defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function charToLineNum(int) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   function findPrevious(String) in line 330
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable currentChar defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function search(JavaSourceDocument,String,int,Boolean) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable myDocument defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function charToLineNum(int) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   function foundItem(int) in line 241
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable myDocument defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getHighlightInformation() defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
      uses function updateFoundLineNum(Integer) defined in edu::umd::cs::findbugs::sourceViewer::HighlightInformation
      uses function setHighlight(int,int,Color) defined in edu::umd::cs::findbugs::sourceViewer::HighlightInformation
      uses variable FOUND_HIGHLIGHT defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getSourceCodeTextPane() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function scrollLineToVisible(int,int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function getDocument(SourceLineAnnotation) in line 92
      27 lines of code
      1 parameters
      5 conditional paths
      uses function getProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSourceFinder() defined in edu::umd::cs::findbugs::Project
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getFullFileName() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable map defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getInputStream() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable UNKNOWNSOURCE defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
   function highlight(JavaSourceDocument,SourceLineAnnotation,Color) in line 224
      16 lines of code
      3 parameters
      4 conditional paths
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourcePath() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
      uses function getFullFileName() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable CANONICAL_PACKAGE_SEPARATOR defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getHighlightInformation() defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
      uses function setHighlight(int,int,Color) defined in edu::umd::cs::findbugs::sourceViewer::HighlightInformation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function run() in line 121
      protection public
      45 lines of code
      0 parameters
      9 conditional paths
      uses function getDocument(SourceLineAnnotation) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getHighlightInformation() defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
      uses function clear() defined in edu::umd::cs::findbugs::sourceViewer::HighlightInformation
      uses function getDescription() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function highlight(JavaSourceDocument,SourceLineAnnotation,Color) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable MAIN_HIGHLIGHT_MORE defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable ALTERNATIVE_HIGHLIGHT defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable MAIN_HIGHLIGHT defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   function search(JavaSourceDocument,String,int,Boolean) in line 248
      50 lines of code
      4 parameters
      15 conditional paths
      uses function getDocument() defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
   function showLine(int) in line 337
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getSourceCodeTextPane() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function scrollLineToVisible(int,int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   variable ALTERNATIVE_HIGHLIGHT in line 52
   variable currentChar in line 60
   variable FOUND_HIGHLIGHT in line 54
   variable MAIN_HIGHLIGHT in line 48
   variable MAIN_HIGHLIGHT_MORE in line 50
   variable map in line 62
   variable myDocument in line 58
      protection public
module edu::umd::cs::findbugs::gui2::SourceCodeDisplay::DisplayMe
   function DisplayMe(BugInstance,SourceLineAnnotation) in line 73
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::SourceCodeDisplay::DisplayBug
   inherits from Runnable
   function run() in line 182
      protection public
      36 lines of code
      0 parameters
      7 conditional paths
      uses function getSourceCodeTextPane() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getEditorKit() defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
      uses function getDocument() defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSimpleClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function scrollLinesToVisible(int,int,Collection< Integer >) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function DisplayBug(JavaSourceDocument,BugInstance,SourceLineAnnotation) in line 175
      5 lines of code
      3 parameters
      1 conditional paths
   variable myBug in line 172
   variable mySourceLine in line 170
   variable src in line 171
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/SourceDirectoryWizard.java
module edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
   inherits from javax::swing::JDialog
   function finshButtonActionPerformed(java.awt.event.ActionEvent) in line 359
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable parentGUI defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function setSourceDirecs(DefaultListModel< String >) defined in edu::umd::cs::findbugs::gui2::NewProjectWizard
      uses variable foundModel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable discover defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
   function initComponents() in line 74
      165 lines of code
      0 parameters
      3 conditional paths
      uses variable foundModel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable progressModel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable contentPanel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable secondPanel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable jScrollPane1 defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable jScrollPane2 defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable jList1 defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable jList2 defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable jLabel1 defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable jLabel2 defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable jLabel3 defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable firstPanel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable sourceRootLabel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable sourceRootBox defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable srcFileIconLabel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable card1TitleLabel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable chooser defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable browseButton defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable card1Explanation1Label defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable card1Explanation2Label defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable card1Explanation3Label defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable previousButton defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable nextButton defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable finshButton defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable errorMessageLabel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function previousButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function nextButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function finshButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
   function main(String) in line 373
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function SourceDirectoryWizard(java.awt.Frame,boolean,Project,NewProjectWizard) defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
   function nextButtonActionPerformed(java.awt.event.ActionEvent) in line 248
      110 lines of code
      1 parameters
      5 conditional paths
      uses variable discover defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function toString() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable progressModel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function setProject(Project) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses variable project defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function setRootSourceDirectory(String) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses variable sourceRootBox defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function setErrorLogger(IErrorLogger) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function setProgress(Progress) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function execute() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses variable jList1 defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable foundModel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function getDiscoveredSourceDirectoryList() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses variable step defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable MAX_STEP defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function setStep(int) defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
   function previousButtonActionPerformed(java.awt.event.ActionEvent) in line 240
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable step defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable MIN_STEP defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function setStep(int) defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable progressModel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable foundModel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
   function setStep(int) in line 445
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable MAX_STEP defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable step defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable previousButton defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable MIN_STEP defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable nextButton defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable sourceRootBox defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable contentPanel defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
   function SourceDirectoryWizard(java.awt.Frame,boolean,Project,NewProjectWizard) in line 58
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses variable parentGUI defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses variable project defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function initComponents() defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
      uses function setStep(int) defined in edu::umd::cs::findbugs::gui2::SourceDirectoryWizard
   variable browseButton in line 399
   variable card1Explanation1Label in line 401
   variable card1Explanation2Label in line 403
   variable card1Explanation3Label in line 405
   variable card1TitleLabel in line 407
   variable chooser in line 384
   variable contentPanel in line 409
   variable discover in line 396
      protection public
   variable errorMessageLabel in line 411
   variable finshButton in line 413
   variable firstPanel in line 415
   variable foundModel in line 390
   variable jLabel1 in line 417
   variable jLabel2 in line 419
   variable jLabel3 in line 421
   variable jList1 in line 423
   variable jList2 in line 394
   variable jScrollPane1 in line 425
   variable jScrollPane2 in line 427
   variable MAX_STEP in line 51
   variable MIN_STEP in line 49
   variable nextButton in line 429
   variable parentGUI in line 388
   variable previousButton in line 431
   variable progressModel in line 392
   variable project in line 386
   variable secondPanel in line 433
   variable sourceRootBox in line 435
   variable sourceRootLabel in line 437
   variable srcFileIconLabel in line 439
   variable step in line 443
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/SplashFrame.java
module edu::umd::cs::findbugs::gui2::SplashFrame
   inherits from javax::swing::JWindow
   function main(String[]) in line 82
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function SplashFrame() defined in edu::umd::cs::findbugs::gui2::SplashFrame
      uses function setVisible(boolean) defined in edu::umd::cs::findbugs::gui2::SplashFrame
   function setVisible(boolean) in line 88
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable animator defined in edu::umd::cs::findbugs::gui2::SplashFrame
   function SplashFrame() in line 46
      protection public
      35 lines of code
      0 parameters
      1 conditional paths
      uses function animate() defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
   variable animator in line 44
module edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
   inherits from javax::swing::JPanel
   function animate() in line 175
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable animator defined in edu::umd::cs::findbugs::gui2::SplashFrame
   function imageToDraw() in line 179
      13 lines of code
      0 parameters
      4 conditional paths
      uses variable image defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
      uses variable imageR defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
      uses variable image2 defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
      uses variable image2R defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
   function paint(Graphics) in line 194
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function imageToDraw() defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
   function Viewer(Image,Image,Image,Image) in line 116
      protection public
      58 lines of code
      4 parameters
      8 conditional paths
      uses variable image defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
      uses variable image2 defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
      uses variable imageR defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
      uses variable image2R defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
      uses variable animator defined in edu::umd::cs::findbugs::gui2::SplashFrame
   variable image in line 96
   variable image2 in line 98
   variable image2R in line 102
   variable imageR in line 100
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/SplitLayout.java
module edu::umd::cs::findbugs::gui2::SplitLayout
   inherits from edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
   function createWindowMenu() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSourceViewComponent() in line 211
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initialize() in line 92
      protection public
      51 lines of code
      0 parameters
      1 conditional paths
      uses function bugListPanel() defined in edu::umd::cs::findbugs::gui2::MainFrameTree
      uses function getSplitTreeComments() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function removeSplitPaneBorders(JSplitPane) defined in edu::umd::cs::findbugs::gui2::SplitLayout
      uses function getSplitTop() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getSplitMain() defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function makeCommentsVisible() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeSourceVisible() in line 174
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function removeSplitPaneBorders(JSplitPane) in line 144
      13 lines of code
      1 parameters
      1 conditional paths
   function resetCommentsInputPane() in line 78
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function saveState() in line 184
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function setSplitTreeComments(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setSplitTop(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setSplitSummary(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setSplitMain(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setSourceTitle(String) in line 199
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function SplitLayout(MainFrame) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/SpringUtilities.java
module edu::umd::cs::findbugs::gui2::SpringUtilities
   function getConstraintsForCell(int,int,Container,int) in line 117
      5 lines of code
      4 parameters
      1 conditional paths
   function makeCompactGrid(Container,int,int,int,int,int,int) in line 143
      protection public
      46 lines of code
      7 parameters
      9 conditional paths
      uses variable GUI2_DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getConstraintsForCell(int,int,Container,int) defined in edu::umd::cs::findbugs::gui2::SpringUtilities
   function makeGrid(Container,int,int,int,int,int,int) in line 49
      protection public
      66 lines of code
      7 parameters
      8 conditional paths
      uses variable GUI2_DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
   function printSizes(Component) in line 22
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable GUI2_DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/StackedFilterMatcher.java
module edu::umd::cs::findbugs::gui2::StackedFilterMatcher
   inherits from edu::umd::cs::findbugs::gui2::FilterMatcher
   function equals(Object) in line 181
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
      uses function StackedFilterMatcher(FilterMatcher...) defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
   function getFilters() in line 145
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
   function hashCode() in line 198
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
   function main(String[]) in line 206
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function StackedFilterMatcher(FilterMatcher...) defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
      uses function equals(Object) defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
   function match(BugInstance) in line 150
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function isActive() defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable filters defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
   function setActive(boolean) in line 63
      protection public
      81 lines of code
      1 parameters
      15 conditional paths
      uses variable active defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses function getFilters() defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
      uses variable DIVIDER defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getBugTreeModel() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function toString() in line 165
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
   function StackedFilterMatcher(FilterMatcher...) in line 52
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
   variable filters in line 39
   variable serialVersionUID in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/SuppressionMatcher.java
module edu::umd::cs::findbugs::gui2::SuppressionMatcher
   inherits from java::util::ArrayList
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function add(BugInstance) in line 42
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function match(BugInstance) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 50
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/SuppressionMatcher.java
module edu::umd::cs::findbugs::SuppressionMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function addPackageSuppressor(PackageWarningSuppressor) in line 38
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageWarningSuppressor
      uses variable suppressedPackageWarnings defined in edu::umd::cs::findbugs::SuppressionMatcher
   function addSuppressor(ClassWarningSuppressor) in line 49
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getClassAnnotation() defined in edu::umd::cs::findbugs::ClassWarningSuppressor
      uses function getTopLevelClass() defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable suppressedWarnings defined in edu::umd::cs::findbugs::SuppressionMatcher
   function count() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function match(BugInstance) in line 64
      protection public
      21 lines of code
      1 parameters
      7 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getTopLevelClass() defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable suppressedWarnings defined in edu::umd::cs::findbugs::SuppressionMatcher
      uses function count() defined in edu::umd::cs::findbugs::SuppressionMatcher
      uses variable suppressedPackageWarnings defined in edu::umd::cs::findbugs::SuppressionMatcher
   function writeXML(XMLOutput,boolean) in line 87
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable suppressedPackageWarnings in line 34
   variable suppressedWarnings in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/SwingThread.java
module edu::umd::cs::findbugs::gui2::SwingThread
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/ViewFilter.java
module edu::umd::cs::findbugs::gui2::ViewFilter
   function getEvaluation() in line 386
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFirstSeen() in line 408
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPackagePrefixes() in line 418
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRank() in line 376
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function matchedPrefixes(String[],@DottedClassName String) in line 443
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function setClassification(OverallClassificationFilter) in line 399
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
   function setEvaluation(CloudFilter) in line 390
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
   function setFirstSeen(FirstSeenFilter) in line 412
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
   function setRank(RankFilter) in line 380
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
   function show(BugInstance) in line 447
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function showIgnoringPackagePrefixes(BugInstance) defined in edu::umd::cs::findbugs::gui2::ViewFilter
   function showIgnoringPackagePrefixes(BugInstance) in line 422
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
   function ViewFilter(MainFrame) in line 37
      protection public
      3 lines of code
      1 parameters
      10 conditional paths
      uses function show(BugInstance) defined in edu::umd::cs::findbugs::gui2::ViewFilter
      uses function getClassificationScore(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable MOSTLY_HARMLESS defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getPortionObsoleteClassifications(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable SHOULD_FIX defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getNumberReviewers(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getClassificationDisagreement(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getBugCollection() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function isInCloud(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getReviewers(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getUser() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getMode() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable SECRET defined in edu::umd::cs::findbugs::cloud::Cloud::Mode
      uses function claimedBy(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function supportsClaims() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getIWillFix(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getBugLinkStatus(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function bugIsFiled() defined in edu::umd::cs::findbugs::cloud::Cloud::BugFilingStatus
      uses function supportsBugLinks() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getWillNotBeFixed(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getBugIsUnassigned(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getFirstSeen(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
module edu::umd::cs::findbugs::gui2::ViewFilter::ViewFilterEnum
   function show(MainFrame,BugInstance) in line 42
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::ViewFilter::RankFilter
   inherits from edu::umd::cs::findbugs::gui2::ViewFilter::ViewFilterEnum
   function show(MainFrame,BugInstance) in line 57
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 63
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function RankFilter(int,String) in line 51
      4 lines of code
      2 parameters
      1 conditional paths
   variable ALL in line 46
      protection public
   variable displayName in line 49
      protection public
   variable maxRank in line 47
      protection public
   variable SCARIEST in line 46
      protection public
   variable SCARY in line 46
      protection public
   variable TROUBLING in line 46
      protection public
module edu::umd::cs::findbugs::gui2::ViewFilter::OverallClassificationFilter
   inherits from edu::umd::cs::findbugs::gui2::ViewFilter::ViewFilterEnum
   function show(Cloud,BugInstance) in line 149
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function show(MainFrame,BugInstance) in line 156
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function supported(Cloud) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function OverallClassificationFilter(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable ALL in line 142
      protection public
   variable displayName in line 147
      protection public
   variable DONT_FIX in line 102
      protection public
   variable HIGH_VARIANCE in line 129
      protection public
   variable NOT_HARMLESS in line 88
      protection public
   variable OBSOLETE in line 109
      protection public
   variable SHOULD_FIX in line 95
      protection public
   variable UNCERTAIN in line 121
      protection public
module edu::umd::cs::findbugs::gui2::ViewFilter::CloudFilter
   inherits from edu::umd::cs::findbugs::gui2::ViewFilter::ViewFilterEnum
   function show(Cloud,BugInstance) in line 287
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function show(MainFrame,BugInstance) in line 294
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function supported(Cloud) in line 289
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 300
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function CloudFilter(String) in line 281
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable ALL in line 279
      protection public
   variable BUG_STATUS_IS_UNASSIGNED in line 268
      protection public
   variable displayName in line 285
      protection public
   variable HAS_FILED_BUGS in line 235
      protection public
   variable HAS_REVIEWS in line 204
      protection public
   variable I_WILL_FIX in line 223
      protection public
   variable MY_REVIEWS in line 175
      protection public
   variable NO_FILED_BUGS in line 246
      protection public
   variable NO_ONE_COMMITTED_TO_FIXING in line 215
      protection public
   variable NO_REVIEWS in line 193
      protection public
   variable NOT_REVIEWED_BY_ME in line 182
      protection public
   variable WILL_NOT_FIX in line 257
      protection public
module edu::umd::cs::findbugs::gui2::ViewFilter::FirstSeenFilter
   inherits from edu::umd::cs::findbugs::gui2::ViewFilter::ViewFilterEnum
   function show(MainFrame,BugInstance) in line 328
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 340
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FirstSeenFilter(int,String) in line 322
      4 lines of code
      2 parameters
      1 conditional paths
   variable ALL in line 316
      protection public
   variable displayName in line 320
      protection public
   variable LAST_3_DAYS in line 308
      protection public
   variable LAST_DAY in line 308
      protection public
   variable LAST_MONTH in line 308
      protection public
   variable LAST_THREE_MONTHS in line 309
      protection public
   variable LAST_WEEK in line 308
      protection public
   variable LAST_YEAR in line 310
      protection public
   variable maxDays in line 318
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/gui2/WideComboBox.java
module edu::umd::cs::findbugs::gui2::WideComboBox
   inherits from javax::swing::JComboBox
   function doLayout() in line 29
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function getSize() in line 39
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function WideComboBox() in line 11
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function WideComboBox(final E) in line 14
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function WideComboBox(Vector< E >) in line 18
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function WideComboBox(ComboBoxModel< E >) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable layingOut in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/sourceViewer/DocumentCharacterIterator.java
module edu::umd::cs::findbugs::sourceViewer::DocumentCharacterIterator
   inherits from java::text::CharacterIterator
   function clone() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function current() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable text defined in edu::umd::cs::findbugs::sourceViewer::DocumentCharacterIterator
   function first() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBeginIndex() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getEndIndex() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIndex() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable docPos defined in edu::umd::cs::findbugs::sourceViewer::DocumentCharacterIterator
   function last() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 99
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable docPos defined in edu::umd::cs::findbugs::sourceViewer::DocumentCharacterIterator
      uses variable doc defined in edu::umd::cs::findbugs::sourceViewer::DocumentCharacterIterator
      uses variable text defined in edu::umd::cs::findbugs::sourceViewer::DocumentCharacterIterator
      uses variable segmentEnd defined in edu::umd::cs::findbugs::sourceViewer::DocumentCharacterIterator
   function previous() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIndex(int) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable doc in line 33
   variable docPos in line 38
   variable segmentEnd in line 41
   variable text in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/sourceViewer/HighlightInformation.java
module edu::umd::cs::findbugs::sourceViewer::HighlightInformation
   function clear() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable foundLineNum defined in edu::umd::cs::findbugs::sourceViewer::HighlightInformation
   function getHighlight(Integer) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHighlight(int,int,Color) in line 40
      protection public
      5 lines of code
      3 parameters
      2 conditional paths
   function setHighlight(Integer,Color) in line 46
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function unsetHighlight(Integer) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function updateFoundLineNum(Integer) in line 54
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable foundLineNum defined in edu::umd::cs::findbugs::sourceViewer::HighlightInformation
      uses function unsetHighlight(Integer) defined in edu::umd::cs::findbugs::sourceViewer::HighlightInformation
   variable foundLineNum in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/sourceViewer/JavaScanner.java
module edu::umd::cs::findbugs::sourceViewer::JavaScanner
   function getEndPosition() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable iterator defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
   function getKind() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
   function getLength() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable iterator defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable startPosition defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
   function getStartPosition() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable startPosition defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
   function next() in line 89
      protection public
      92 lines of code
      0 parameters
      26 conditional paths
      uses variable startPosition defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable iterator defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable kind defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable EOF defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable buf defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable MAX_KEYWORD_LENGTH defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable NORMAL_TEXT defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable KEYWORDS defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable KEYWORD defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable COMMENT defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable JAVADOC defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable QUOTE defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
   function JavaScanner(CharacterIterator) in line 69
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable iterator defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
   variable buf in line 61
   variable COMMENT in line 30
      protection public
   variable EOF in line 38
      protection public
   variable iterator in line 63
   variable JAVADOC in line 32
      protection public
   variable KEYWORD in line 34
      protection public
   variable KEYWORDS in line 41
   variable kind in line 65
   variable MAX_KEYWORD_LENGTH in line 43
   variable NORMAL_TEXT in line 28
      protection public
   variable QUOTE in line 36
      protection public
   variable startPosition in line 67
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/sourceViewer/JavaSourceDocument.java
module edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
   function getDocument() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getEditorKit() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHighlightInformation() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSourceFile() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTitle() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable title defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
   function JavaSourceDocument(String,Reader,SourceFile) in line 104
      protection public
      65 lines of code
      3 parameters
      8 conditional paths
      uses variable title defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
      uses function getTabSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function next() defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable EOF defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses function getKind() defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable COMMENT defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses function getStartPosition() defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses function getLength() defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable KEYWORD defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable JAVADOC defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable QUOTE defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
   variable title in line 94
   variable UNKNOWNSOURCE in line 172
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/sourceViewer/NavigableTextPane.java
module edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   inherits from javax::swing::JTextPane
   function getLineOffset(int) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function lineToOffset(int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function lineToOffset(int) in line 66
      14 lines of code
      1 parameters
      3 conditional paths
   function lineToY(int) in line 86
      3 lines of code
      1 parameters
      1 conditional paths
      uses function offsetToY(int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
      uses function lineToOffset(int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function offsetToY(int) in line 81
      4 lines of code
      1 parameters
      1 conditional paths
   function parentHeight() in line 54
      7 lines of code
      0 parameters
      2 conditional paths
   function scrollLinesToVisible(int,int,Collection< Integer >) in line 134
      protection public
      50 lines of code
      3 parameters
      11 conditional paths
      uses function lineToY(int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
      uses variable GUI2_DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function parentHeight() defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
      uses function scrollYToVisibleImpl(int,int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function scrollLineToVisible(int,int) in line 116
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function parentHeight() defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
      uses function scrollLineToVisibleImpl(int,int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function scrollLineToVisible(int) in line 125
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function parentHeight() defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
      uses function scrollLineToVisibleImpl(int,int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function scrollLineToVisibleImpl(int,int) in line 101
      10 lines of code
      2 parameters
      3 conditional paths
      uses function lineToY(int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
      uses function scrollYToVisibleImpl(int,int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
      uses variable GUI2_DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
   function scrollYToVisibleImpl(int,int) in line 90
      10 lines of code
      2 parameters
      1 conditional paths
   function NavigableTextPane() in line 43
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function NavigableTextPane(StyledDocument) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::sourceViewer::NavigableTextPane::DistanceComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(Integer,Integer) in line 199
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable origin defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane::DistanceComparator
   function DistanceComparator(int) in line 188
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable origin defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane::DistanceComparator
   variable origin in line 186
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/sourceViewer/NoWrapBoxView.java
module edu::umd::cs::findbugs::sourceViewer::NoWrapBoxView
   inherits from javax::swing::text::BoxView
   function getMinimumSpan(int) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function layout(int,int) in line 32
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function NoWrapBoxView(Element,int) in line 27
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/sourceViewer/NumberedEditorKit.java
module edu::umd::cs::findbugs::sourceViewer::NumberedEditorKit
   inherits from javax::swing::text::StyledEditorKit
   function getViewFactory() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function NumberedEditorKit(HighlightInformation) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/sourceViewer/NumberedParagraphView.java
module edu::umd::cs::findbugs::sourceViewer::NumberedParagraphView
   inherits from javax::swing::text::ParagraphView
   function getLineNumber() in line 100
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
   function getPreviousLineCount0() in line 84
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   function paint(Graphics,Shape) in line 53
      protection public
      30 lines of code
      2 parameters
      1 conditional paths
   function NumberedParagraphView(Element,HighlightInformation) in line 42
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable NUMBERS_WIDTH in line 38
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/gui/edu/umd/cs/findbugs/sourceViewer/NumberedViewFactory.java
module edu::umd::cs::findbugs::sourceViewer::NumberedViewFactory
   inherits from javax::swing::text::ViewFactory
   function create(Element) in line 39
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
   function NumberedViewFactory(HighlightInformation) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/infonodeJava/edu/umd/cs/findbugs/gui2/DockLayout.java
module edu::umd::cs::findbugs::gui2::DockLayout
   inherits from edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
   function createWindowMenu() in line 126
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable viewMenuItems defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable summaryView defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable commentsView defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable sourceView defined in edu::umd::cs::findbugs::gui2::DockLayout
   function initialize() in line 144
      protection public
      55 lines of code
      0 parameters
      2 conditional paths
      uses variable topView defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable summaryView defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable commentsView defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable sourceView defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable rootWindow defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable tabs defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses function getDockingLayout() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable viewMenuItems defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses function windowClosed(DockingWindow) defined in edu::umd::cs::findbugs::gui2::DockLayout::DockParentListener
   function makeCommentsVisible() in line 203
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable commentsView defined in edu::umd::cs::findbugs::gui2::DockLayout
   function makeSourceVisible() in line 211
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceView defined in edu::umd::cs::findbugs::gui2::DockLayout
   function saveState() in line 219
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
      uses variable rootWindow defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses function setDockingLayout(byte[]) defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setSourceTitle(final String) in line 236
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceView defined in edu::umd::cs::findbugs::gui2::DockLayout
   function DockLayout(MainFrame) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable commentsView in line 108
   variable rootWindow in line 110
   variable sourceView in line 111
   variable summaryView in line 112
   variable tabs in line 113
   variable topView in line 115
   variable viewMenuItems in line 116
module edu::umd::cs::findbugs::gui2::DockLayout::DockParentListener
   inherits from net::infonode::docking::DockingWindowAdapter
   function windowClosed(DockingWindow) in line 60
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
module edu::umd::cs::findbugs::gui2::DockLayout::ViewMenuItem
   inherits from javax::swing::JCheckBoxMenuItem
   inherits from java::awt::event::ItemListener
   function itemStateChanged(ItemEvent) in line 83
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable rootWindow defined in edu::umd::cs::findbugs::gui2::DockLayout
   function ViewMenuItem(View,String) in line 74
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   variable view in line 72
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/AbstractBugReporter.java
module edu::umd::cs::findbugs::AbstractBugReporter
   inherits from edu::umd::cs::findbugs::BugReporter
   abstract class
   function addObserver(BugReporterObserver) in line 394
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable observerList defined in edu::umd::cs::findbugs::AbstractBugReporter
   function doReportBug(BugInstance) in line 422
      1 lines of code
      1 parameters
      1 conditional paths
   function getMissingClasses() in line 337
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable missingClassMessageList defined in edu::umd::cs::findbugs::AbstractBugReporter
   function getMissingClassName(ClassNotFoundException) in line 214
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
   function getProjectStats() in line 399
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable projectStats defined in edu::umd::cs::findbugs::AbstractBugReporter
   function getQueuedErrors() in line 330
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable errorSet defined in edu::umd::cs::findbugs::AbstractBugReporter
   function isRelaxed() in line 161
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable relaxedSet defined in edu::umd::cs::findbugs::AbstractBugReporter
   function isValidMissingClassMessage(String) in line 240
      33 lines of code
      1 parameters
      6 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function logError(String) in line 316
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable verbosityLevel defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable SILENT defined in edu::umd::cs::findbugs::BugReporter
      uses function Error(int,String) defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable errorCount defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable errorSet defined in edu::umd::cs::findbugs::AbstractBugReporter
   function logError(String,Throwable) in line 342
      protection public
      31 lines of code
      2 parameters
      6 conditional paths
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses variable verbosityLevel defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable SILENT defined in edu::umd::cs::findbugs::BugReporter
      uses function Error(int,String) defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable errorCount defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable errorSet defined in edu::umd::cs::findbugs::AbstractBugReporter
   function logMissingClass(String) in line 298
      6 lines of code
      1 parameters
      2 conditional paths
      uses function isValidMissingClassMessage(String) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable missingClassMessageList defined in edu::umd::cs::findbugs::AbstractBugReporter
   function notifyObservers(BugInstance) in line 409
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable observerList defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function doReportBug(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function reportAnalysisError(AnalysisError) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function reportAnalysisError(AnalysisError) in line 430
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reportBug(@Nonnull BugInstance) in line 173
      protection public
      31 lines of code
      1 parameters
      8 conditional paths
      uses function isRelaxed() defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function doReportBug(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable priorityThreshold defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEBUG defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable rankThreshold defined in edu::umd::cs::findbugs::AbstractBugReporter
   function reportBugsFromXml(@WillClose InputStream,Project) in line 205
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function doReportBug(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function reportMissingClass(ClassNotFoundException) in line 227
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable DEBUG_MISSING_CLASSES defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable verbosityLevel defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable SILENT defined in edu::umd::cs::findbugs::BugReporter
      uses function logMissingClass(String) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function getMissingClassName(ClassNotFoundException) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function reportMissingClass(ClassDescriptor) in line 282
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable DEBUG_MISSING_CLASSES defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable verbosityLevel defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable SILENT defined in edu::umd::cs::findbugs::BugReporter
      uses function logMissingClass(String) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function reportMissingClass(String) in line 438
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reportQueuedErrors() in line 375
      protection public
      17 lines of code
      0 parameters
      3 conditional paths
      uses variable errorSet defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function getSequence() defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses function reportAnalysisError(AnalysisError) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable missingClassMessageList defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function reportSkippedAnalysis(MethodDescriptor) in line 311
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setErrorVerbosity(int) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsRelaxed(boolean) in line 156
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setPriorityThreshold(int) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRankThreshold(int) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractBugReporter() in line 130
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable verbosityLevel defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable NORMAL defined in edu::umd::cs::findbugs::BugReporter
      uses variable missingClassMessageList defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable errorSet defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable observerList defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable projectStats defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable rankThreshold defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable VISIBLE_RANK_MAX defined in edu::umd::cs::findbugs::BugRanker
   variable DEBUG in line 51
   variable DEBUG_MISSING_CLASSES in line 53
   variable errorCount in line 120
   variable errorSet in line 124
   variable missingClassMessageList in line 122
   variable observerList in line 126
   variable priorityThreshold in line 114
   variable projectStats in line 128
   variable rankThreshold in line 116
   variable relaxedSet in line 118
   variable verbosityLevel in line 112
module edu::umd::cs::findbugs::AbstractBugReporter::Error
   function equals(Object) in line 94
      protection public
      16 lines of code
      1 parameters
      5 conditional paths
      uses function Error(int,String) defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable cause defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses function equals(Object) defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function getCause() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cause defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function getMessage() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function getSequence() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function hashCode() in line 85
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable cause defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function Error(int,String) in line 62
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function Error(int,String,Throwable) in line 66
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable cause defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   variable cause in line 60
   variable message in line 58
   variable sequence in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/AddAnnotation.java
module edu::umd::cs::findbugs::AddAnnotation
   function execute() in line 57
      protection public
      17 lines of code
      0 parameters
      4 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::AddAnnotation
      uses variable annotation defined in edu::umd::cs::findbugs::AddAnnotation
   function getBugCollection() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::AddAnnotation
   function getProject() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::AddAnnotation
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
   function main(String[]) in line 76
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses variable annotation defined in edu::umd::cs::findbugs::AddAnnotation
      uses function AddAnnotation(BugCollection,String) defined in edu::umd::cs::findbugs::AddAnnotation
      uses function execute() defined in edu::umd::cs::findbugs::AddAnnotation
      uses function getBugCollection() defined in edu::umd::cs::findbugs::AddAnnotation
      uses function writeXML(String) defined in edu::umd::cs::findbugs::BugCollection
   function AddAnnotation(BugCollection,String) in line 39
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::AddAnnotation
      uses variable annotation defined in edu::umd::cs::findbugs::AddAnnotation
   function AddAnnotation(String,String) in line 44
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable annotation defined in edu::umd::cs::findbugs::AddAnnotation
      uses variable bugCollection defined in edu::umd::cs::findbugs::AddAnnotation
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
   variable annotation in line 37
   variable bugCollection in line 35
   variable LOGGER in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/AddMessages.java
module edu::umd::cs::findbugs::AddMessages
   function addBugCategories(Set< String >) in line 114
      23 lines of code
      1 parameters
      5 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::AddMessages
      uses function getBugCategoryDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses function getBugCategory(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugCategory
      uses function getDetailText() defined in edu::umd::cs::findbugs::BugCategory
   function addBugCodes(Set< String >) in line 144
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::AddMessages
      uses function getBugTypeDescription(String) defined in edu::umd::cs::findbugs::I18N
   function addBugPatterns(Set< String >) in line 154
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::AddMessages
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses function getDetailText() defined in edu::umd::cs::findbugs::BugPattern
   function execute() in line 65
      protection public
      42 lines of code
      0 parameters
      3 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::AddMessages
      uses variable bugCollection defined in edu::umd::cs::findbugs::AddMessages
      uses function iterator() defined in edu::umd::cs::findbugs::BugCollection
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function toString(ClassAnnotation) defined in edu::umd::cs::findbugs::BugAnnotation
      uses function addBugCategories(Set< String >) defined in edu::umd::cs::findbugs::AddMessages
      uses function addBugPatterns(Set< String >) defined in edu::umd::cs::findbugs::AddMessages
      uses function addBugCodes(Set< String >) defined in edu::umd::cs::findbugs::AddMessages
   function main(String[]) in line 170
      protection public
      26 lines of code
      1 parameters
      2 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable document defined in edu::umd::cs::findbugs::AddMessages
      uses function toDocument() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function AddMessages(BugCollection,Document) defined in edu::umd::cs::findbugs::AddMessages
      uses function execute() defined in edu::umd::cs::findbugs::AddMessages
   function AddMessages(BugCollection,Document) in line 57
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::AddMessages
      uses variable document defined in edu::umd::cs::findbugs::AddMessages
   variable bugCollection in line 45
   variable document in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/AnalysisCacheToRepositoryAdapter.java
module edu::umd::cs::findbugs::AnalysisCacheToRepositoryAdapter
   inherits from org::apache::bcel::util::Repository
   function clear() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function findClass(String) in line 62
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function probeClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function getClassPath() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function loadClass(String) in line 85
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function loadClass(Class<?>) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function loadClass(String) defined in edu::umd::cs::findbugs::AnalysisCacheToRepositoryAdapter
   function removeClass(JavaClass) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function storeClass(JavaClass) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AnalysisCacheToRepositoryAdapter() in line 43
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/AnalysisError.java
module edu::umd::cs::findbugs::AnalysisError
   function equals(Object) in line 38
      protection public
      40 lines of code
      1 parameters
      15 conditional paths
      uses function AnalysisError(String) defined in edu::umd::cs::findbugs::AnalysisError
      uses variable exceptionMessage defined in edu::umd::cs::findbugs::AnalysisError
      uses variable message defined in edu::umd::cs::findbugs::AnalysisError
      uses variable nestedExceptionMessage defined in edu::umd::cs::findbugs::AnalysisError
      uses variable nestedStackTrace defined in edu::umd::cs::findbugs::AnalysisError
      uses variable stackTrace defined in edu::umd::cs::findbugs::AnalysisError
   function getException() in line 196
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exception defined in edu::umd::cs::findbugs::AnalysisError
   function getExceptionMessage() in line 154
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionMessage defined in edu::umd::cs::findbugs::AnalysisError
   function getMessage() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AnalysisError
   function getNestedExceptionMessage() in line 162
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nestedExceptionMessage defined in edu::umd::cs::findbugs::AnalysisError
   function getNestedStackTrace() in line 189
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nestedStackTrace defined in edu::umd::cs::findbugs::AnalysisError
   function getStackTrace() in line 181
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stackTrace defined in edu::umd::cs::findbugs::AnalysisError
   function getStackTraceAsStringArray(Throwable) in line 112
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable exception defined in edu::umd::cs::findbugs::AnalysisError
   function hashCode() in line 26
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionMessage defined in edu::umd::cs::findbugs::AnalysisError
      uses variable message defined in edu::umd::cs::findbugs::AnalysisError
      uses variable nestedExceptionMessage defined in edu::umd::cs::findbugs::AnalysisError
      uses variable nestedStackTrace defined in edu::umd::cs::findbugs::AnalysisError
      uses variable stackTrace defined in edu::umd::cs::findbugs::AnalysisError
   function setExceptionMessage(String) in line 146
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable exceptionMessage defined in edu::umd::cs::findbugs::AnalysisError
   function setMessage(String) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AnalysisError
   function setStackTrace(String[]) in line 173
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stackTrace defined in edu::umd::cs::findbugs::AnalysisError
   function AnalysisError(String) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AnalysisError
   function AnalysisError(String,Throwable) in line 97
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AnalysisError
      uses variable exception defined in edu::umd::cs::findbugs::AnalysisError
      uses variable exceptionMessage defined in edu::umd::cs::findbugs::AnalysisError
      uses variable stackTrace defined in edu::umd::cs::findbugs::AnalysisError
      uses function getStackTraceAsStringArray(Throwable) defined in edu::umd::cs::findbugs::AnalysisError
      uses variable nestedExceptionMessage defined in edu::umd::cs::findbugs::AnalysisError
      uses variable nestedStackTrace defined in edu::umd::cs::findbugs::AnalysisError
   variable exception in line 22
   variable exceptionMessage in line 14
   variable message in line 12
   variable nestedExceptionMessage in line 18
   variable nestedStackTrace in line 20
   variable stackTrace in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/AnalysisLocal.java
module edu::umd::cs::findbugs::AnalysisLocal
   function get() in line 36
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
   function getMap() in line 31
      4 lines of code
      0 parameters
      1 conditional paths
   function initialValue() in line 26
      3 lines of code
      0 parameters
      1 conditional paths
   function remove() in line 58
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function set(T) in line 53
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/AnalysisOptions.java
module edu::umd::cs::findbugs::AnalysisOptions
   function AnalysisOptions(boolean) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mergeSimilarWarnings defined in edu::umd::cs::findbugs::AnalysisOptions
   variable abridgedMessages in line 37
      protection public
   variable analysisFeatureSettingList in line 57
      protection public
   variable applySuppression in line 67
      protection public
   variable mergeSimilarWarnings in line 72
      protection public
   variable noClassOk in line 77
      protection public
   variable relaxedReportingMode in line 32
      protection public
   variable scanNestedArchives in line 62
      protection public
   variable sourceInfoFileName in line 52
      protection public
   variable trainingInputDir in line 42
      protection public
   variable trainingOutputDir in line 47
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/Analyze.java
module edu::umd::cs::findbugs::Analyze
   function deepInstanceOf(@DottedClassName String,@DottedClassName String) in line 159
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function deepInstanceOf(JavaClass,JavaClass) in line 175
      protection public
      63 lines of code
      2 parameters
      15 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getTransitiveCommonSubtypes(ClassDescriptor,ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function isAbstract() defined in edu::umd::cs::findbugs::ba::XClass
      uses function isInterface() defined in edu::umd::cs::findbugs::ba::XClass
   function getComponentClass(String) in line 111
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function isDeepRemote(String) in line 77
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses variable remote defined in edu::umd::cs::findbugs::Analyze
      uses function getComponentClass(String) defined in edu::umd::cs::findbugs::Analyze
      uses function deepInstanceOf(@DottedClassName String,@DottedClassName String) defined in edu::umd::cs::findbugs::Analyze
   function isDeepSerializable(String) in line 59
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable storedException defined in edu::umd::cs::findbugs::Analyze
      uses function isPrimitiveComponentClass(String) defined in edu::umd::cs::findbugs::Analyze
      uses function getComponentClass(String) defined in edu::umd::cs::findbugs::Analyze
   function isDeepSerializable(JavaClass) in line 123
      protection public
      23 lines of code
      1 parameters
      6 conditional paths
      uses variable storedException defined in edu::umd::cs::findbugs::Analyze
      uses function deepInstanceOf(@DottedClassName String,@DottedClassName String) defined in edu::umd::cs::findbugs::Analyze
      uses variable serializable defined in edu::umd::cs::findbugs::Analyze
      uses variable collection defined in edu::umd::cs::findbugs::Analyze
      uses variable map defined in edu::umd::cs::findbugs::Analyze
      uses variable comparator defined in edu::umd::cs::findbugs::Analyze
   function isPrimitiveComponentClass(String) in line 97
      13 lines of code
      1 parameters
      2 conditional paths
   variable collection in line 21
   variable comparator in line 23
   variable map in line 25
   variable remote in line 27
   variable serializable in line 19
   variable storedException in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/CheckForNull.java
module edu::umd::cs::findbugs::annotations::CheckForNull
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/CheckReturnValue.java
module edu::umd::cs::findbugs::annotations::CheckReturnValue
   function confidence() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function explanation() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function priority() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/CleanupObligation.java
module edu::umd::cs::findbugs::annotations::CleanupObligation
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/Confidence.java
module edu::umd::cs::findbugs::annotations::Confidence
   function getConfidence(int) in line 37
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable IGNORE defined in edu::umd::cs::findbugs::annotations::Confidence
   function getConfidenceValue() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Confidence(int) in line 50
      3 lines of code
      1 parameters
      1 conditional paths
   variable confidenceValue in line 33
   variable HIGH in line 30
      protection public
   variable IGNORE in line 31
      protection public
   variable LOW in line 30
      protection public
   variable MEDIUM in line 30
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/CreatesObligation.java
module edu::umd::cs::findbugs::annotations::CreatesObligation
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/DefaultAnnotation.java
module edu::umd::cs::findbugs::annotations::DefaultAnnotation
   function confidence() in line 72
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function priority() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 67
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/DefaultAnnotationForFields.java
module edu::umd::cs::findbugs::annotations::DefaultAnnotationForFields
   function confidence() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function priority() in line 51
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/DefaultAnnotationForMethods.java
module edu::umd::cs::findbugs::annotations::DefaultAnnotationForMethods
   function confidence() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function priority() in line 51
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/DefaultAnnotationForParameters.java
module edu::umd::cs::findbugs::annotations::DefaultAnnotationForParameters
   function confidence() in line 60
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function priority() in line 58
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/DesireNoWarning.java
module edu::umd::cs::findbugs::annotations::DesireNoWarning
   function confidence() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function num() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function priority() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/DesireWarning.java
module edu::umd::cs::findbugs::annotations::DesireWarning
   function confidence() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function num() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function rank() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 26
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/DischargesObligation.java
module edu::umd::cs::findbugs::annotations::DischargesObligation
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/ExpectWarning.java
module edu::umd::cs::findbugs::annotations::ExpectWarning
   function confidence() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function num() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function rank() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 26
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/NonNull.java
module edu::umd::cs::findbugs::annotations::NonNull
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/NoWarning.java
module edu::umd::cs::findbugs::annotations::NoWarning
   function confidence() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function num() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function rank() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 26
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/Nullable.java
module edu::umd::cs::findbugs::annotations::Nullable
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/OverrideMustInvoke.java
module edu::umd::cs::findbugs::annotations::OverrideMustInvoke
   function value() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ca/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ch/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/constant/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/deref/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/generic/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/heap/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/interproc/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/obl/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/type/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/vna/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/bcel/generic/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/bcel/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/analysis/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/asm/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/impl/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/PossiblyNull.java
module edu::umd::cs::findbugs::annotations::PossiblyNull
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/Priority.java
module edu::umd::cs::findbugs::annotations::Priority
   function getPriorityValue() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Priority(int) in line 39
      3 lines of code
      1 parameters
      1 conditional paths
   variable HIGH in line 30
      protection public
   variable IGNORE in line 31
      protection public
   variable LOW in line 30
      protection public
   variable MEDIUM in line 30
      protection public
   variable priorityValue in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/ReturnValuesAreNonnullByDefault.java
module edu::umd::cs::findbugs::annotations::ReturnValuesAreNonnullByDefault
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/SuppressFBWarnings.java
module edu::umd::cs::findbugs::annotations::SuppressFBWarnings
   function justification() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/SuppressWarnings.java
module edu::umd::cs::findbugs::annotations::SuppressWarnings
   function justification() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses function justification() defined in edu::umd::cs::findbugs::annotations::SuppressWarnings
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/UnknownNullness.java
module edu::umd::cs::findbugs::annotations::UnknownNullness
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/annotations/When.java
module edu::umd::cs::findbugs::annotations::When
   variable ANYTIME in line 27
      protection public
   variable FIRST in line 27
      protection public
   variable LAST in line 29
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/AppVersion.java
module edu::umd::cs::findbugs::AppVersion
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   inherits from Cloneable
   function clone() in line 79
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getCodeSize() in line 195
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeSize defined in edu::umd::cs::findbugs::AppVersion
   function getNumClasses() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable numClasses defined in edu::umd::cs::findbugs::AppVersion
   function getReleaseName() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable releaseName defined in edu::umd::cs::findbugs::AppVersion
   function getSequenceNumber() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AppVersion
   function getTimestamp() in line 97
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::AppVersion
   function setCodeSize(int) in line 187
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable codeSize defined in edu::umd::cs::findbugs::AppVersion
   function setNumClasses(int) in line 171
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable numClasses defined in edu::umd::cs::findbugs::AppVersion
   function setReleaseName(String) in line 124
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable releaseName defined in edu::umd::cs::findbugs::AppVersion
   function setTimestamp(long) in line 115
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::AppVersion
   function toString() in line 153
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AppVersion
      uses variable timestamp defined in edu::umd::cs::findbugs::AppVersion
      uses variable releaseName defined in edu::umd::cs::findbugs::AppVersion
      uses variable codeSize defined in edu::umd::cs::findbugs::AppVersion
   function writeXML(XMLOutput) in line 137
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::AppVersion
      uses variable sequence defined in edu::umd::cs::findbugs::AppVersion
      uses variable timestamp defined in edu::umd::cs::findbugs::AppVersion
      uses variable releaseName defined in edu::umd::cs::findbugs::AppVersion
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable codeSize defined in edu::umd::cs::findbugs::AppVersion
      uses variable numClasses defined in edu::umd::cs::findbugs::AppVersion
   function AppVersion(long,long,String) in line 54
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AppVersion
   function AppVersion(long,Date,String) in line 60
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AppVersion
   function AppVersion(long) in line 66
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AppVersion
   variable codeSize in line 52
   variable ELEMENT_NAME in line 42
      protection public
   variable numClasses in line 50
   variable releaseName in line 48
   variable sequence in line 44
   variable timestamp in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/asm/AbstractFBMethodVisitor.java
module edu::umd::cs::findbugs::asm::AbstractFBMethodVisitor
   inherits from edu::umd::cs::findbugs::asm::FBMethodVisitor
   abstract class
   function getPC() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitOffset(int) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractFBMethodVisitor() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/asm/ClassNodeDetector.java
module edu::umd::cs::findbugs::asm::ClassNodeDetector
   inherits from org::objectweb::asm::tree::ClassNode
   inherits from edu::umd::cs::findbugs::Detector2
   abstract class
   function finishPass() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDetectorClassName() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitClass(ClassDescriptor) in line 62
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function accept(ClassVisitor,Attribute[],int) defined in edu::umd::cs::findbugs::asm::FBClassReader
   function ClassNodeDetector(BugReporter) in line 50
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable ASM_VERSION defined in edu::umd::cs::findbugs::classfile::engine::asm::FindBugsASM
      uses variable bugReporter defined in edu::umd::cs::findbugs::asm::ClassNodeDetector
   variable bugReporter in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/asm/FBClassReader.java
module edu::umd::cs::findbugs::asm::FBClassReader
   inherits from org::objectweb::asm::ClassReader
   function accept(ClassVisitor,Attribute[],int) in line 43
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function readLabel(int,Label[]) in line 48
      10 lines of code
      2 parameters
      3 conditional paths
   function FBClassReader(byte[]) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function FBClassReader(byte[],int,int) in line 38
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
module edu::umd::cs::findbugs::asm::FBClassReader::MyClassAdapter
   inherits from org::objectweb::asm::ClassVisitor
   function visitMethod(int,String,String,String,String[]) in line 66
      protection public
      8 lines of code
      5 parameters
      2 conditional paths
   function MyClassAdapter(ClassVisitor) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ASM_VERSION defined in edu::umd::cs::findbugs::classfile::engine::asm::FindBugsASM
module edu::umd::cs::findbugs::asm::FBClassReader::MyMethodAdapter
   inherits from org::objectweb::asm::MethodVisitor
   function visitLabel(Label) in line 83
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function MyMethodAdapter(FBMethodVisitor) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ASM_VERSION defined in edu::umd::cs::findbugs::classfile::engine::asm::FindBugsASM
module edu::umd::cs::findbugs::asm::FBClassReader::MyLabel
   inherits from org::objectweb::asm::Label
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/asm/FBMethodVisitor.java
module edu::umd::cs::findbugs::asm::FBMethodVisitor
   inherits from org::objectweb::asm::MethodVisitor
   abstract class
   function visitOffset(int) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function FBMethodVisitor() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ASM_VERSION defined in edu::umd::cs::findbugs::classfile::engine::asm::FindBugsASM
   function FBMethodVisitor(MethodVisitor) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ASM_VERSION defined in edu::umd::cs::findbugs::classfile::engine::asm::FindBugsASM
      uses function visitOffset(int) defined in edu::umd::cs::findbugs::asm::FBMethodVisitor
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/AWTEventQueueExecutor.java
module edu::umd::cs::findbugs::AWTEventQueueExecutor
   inherits from java::util::concurrent::AbstractExecutorService
   function awaitTermination(long,TimeUnit) in line 32
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function execute(Runnable) in line 37
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
   function isShutdown() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTerminated() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function shutdown() in line 13
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function shutdownNow() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/AbstractBlockOrder.java
module edu::umd::cs::findbugs::ba::AbstractBlockOrder
   inherits from edu::umd::cs::findbugs::ba::BlockOrder
   abstract class
   function blockIterator() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable blockList defined in edu::umd::cs::findbugs::ba::AbstractBlockOrder
   function compare(BasicBlock,BasicBlock) in line 64
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable comparator defined in edu::umd::cs::findbugs::ba::AbstractBlockOrder
   function AbstractBlockOrder(CFG,Comparator< BasicBlock >) in line 38
      protection public
      19 lines of code
      2 parameters
      3 conditional paths
      uses variable comparator defined in edu::umd::cs::findbugs::ba::AbstractBlockOrder
      uses function getNumBasicBlocks() defined in edu::umd::cs::findbugs::ba::CFG
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses variable blockList defined in edu::umd::cs::findbugs::ba::AbstractBlockOrder
   variable blockList in line 35
   variable comparator in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/AbstractClassMember.java
module edu::umd::cs::findbugs::ba::AbstractClassMember
   inherits from edu::umd::cs::findbugs::ba::ClassMember
   abstract class
   function equals(Object) in line 186
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function AbstractClassMember(@DottedClassName String,String,String,int) defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable name defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable signature defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getAccessFlags() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getClassDescriptor() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassDescriptorForDottedClassName(@DottedClassName String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getClassName() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getName() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getPackageName() in line 88
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getSignature() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function hashCode() in line 178
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable name defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable signature defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isFinal() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isPrivate() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isProtected() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isPublic() in line 121
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isReferenceType() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isResolved() in line 169
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable resolved defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isStatic() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function toString() in line 195
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable name defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function AbstractClassMember(@DottedClassName String,String,String,int) in line 46
      23 lines of code
      4 parameters
      4 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable signature defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable name defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   variable accessFlags in line 35
   variable cachedHashCode in line 39
   variable className in line 29
   variable name in line 31
   variable resolved in line 37
   variable signature in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/AbstractDataflow.java
module edu::umd::cs::findbugs::ba::AbstractDataflow
   inherits from Dataflow< Fact, AnalysisType >
   function getFactOnEdge(Edge) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractDataflow(CFG,AnalysisType) in line 43
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/AbstractDataflowAnalysis.java
module edu::umd::cs::findbugs::ba::AbstractDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::BasicAbstractDataflowAnalysis
   abstract class
   function getFactAfterLocation(Location) in line 98
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function getFactAtLocation(Location) in line 80
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function isFactValid(Fact) in line 68
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function transfer(BasicBlock,@CheckForNull InstructionHandle,Fact,Fact) in line 116
      protection public
      27 lines of code
      4 parameters
      1 conditional paths
   function transferInstruction(InstructionHandle,BasicBlock,Fact) in line 60
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   variable DEBUG in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/AbstractDominatorsAnalysis.java
module edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
   inherits from BasicAbstractDataflowAnalysis< BitSet >
   abstract class
   function copy(BitSet,BitSet) in line 95
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function createFact() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAllDominatedBy(BasicBlock) in line 173
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getResultFact(BasicBlock) defined in BasicAbstractDataflowAnalysis< BitSet >
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function getAllDominatorsOf(BasicBlock) in line 160
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getResultFact(BasicBlock) defined in BasicAbstractDataflowAnalysis< BitSet >
   function initEntryFact(BitSet) in line 101
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function isTop(BitSet) in line 107
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function getNumBasicBlocks() defined in edu::umd::cs::findbugs::ba::CFG
   function makeFactTop(BitSet) in line 113
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function getNumBasicBlocks() defined in edu::umd::cs::findbugs::ba::CFG
   function meetInto(BitSet,Edge,BitSet) in line 136
      protection public
      14 lines of code
      3 parameters
      4 conditional paths
      uses variable edgeChooser defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function choose(Edge) defined in edu::umd::cs::findbugs::ba::EdgeChooser
      uses function isTop(BitSet) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function copy(BitSet,BitSet) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
   function same(BitSet,BitSet) in line 119
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function transfer(BasicBlock,@CheckForNull InstructionHandle,BitSet,BitSet) in line 124
      protection public
      10 lines of code
      4 parameters
      2 conditional paths
      uses function copy(BitSet,BitSet) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function isTop(BitSet) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
   function AbstractDominatorsAnalysis(CFG,final boolean) in line 63
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
   function AbstractDominatorsAnalysis(CFG,EdgeChooser) in line 84
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable edgeChooser defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
   variable cfg in line 51
   variable edgeChooser in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/AbstractField.java
module edu::umd::cs::findbugs::ba::AbstractField
   inherits from edu::umd::cs::findbugs::ba::AbstractClassMember
   inherits from edu::umd::cs::findbugs::ba::XField
   abstract class
   function getFieldDescriptor() in line 50
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isSynthetic() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getAccessFlags() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isVolatile() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getAccessFlags() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function AbstractField(@DottedClassName String,String,String,int) in line 30
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/AbstractFrameModelingVisitor.java
module edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   inherits from VisitorSupportsInvokeDynamic
   abstract class
   function analyzeInstruction(Instruction) in line 81
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function getCPG() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefaultValue() in line 135
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getFrame() in line 117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLocation() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumWordsConsumed(Instruction) in line 140
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getNumWordsProduced(Instruction) in line 151
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function handleLoadInstruction(LoadInstruction) in line 336
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
   function handleNormalInstruction(Instruction) in line 358
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function handleStoreInstruction(StoreInstruction) in line 311
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
   function illegalBytecode(Instruction) in line 165
      3 lines of code
      1 parameters
      1 conditional paths
   function modelInstruction(Instruction,int,int,Value) in line 390
      protection public
      22 lines of code
      4 parameters
      1 conditional paths
   function modelNormalInstruction(Instruction,int,int) in line 373
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function setFrameAndLocation(FrameType,Location) in line 107
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visitAALOAD(AALOAD) in line 1131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitAASTORE(AASTORE) in line 1146
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitACONST_NULL(ACONST_NULL) in line 618
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitAllocationInstruction(AllocationInstruction) in line 265
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitALOAD(ALOAD) in line 451
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitANEWARRAY(ANEWARRAY) in line 1266
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitARETURN(ARETURN) in line 1151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitArithmeticInstruction(ArithmeticInstruction) in line 249
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitArrayInstruction(ArrayInstruction) in line 261
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitARRAYLENGTH(ARRAYLENGTH) in line 673
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitASTORE(ASTORE) in line 420
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitATHROW(ATHROW) in line 663
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitBALOAD(BALOAD) in line 1047
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitBASTORE(BASTORE) in line 643
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitBIPUSH(BIPUSH) in line 828
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitBranchInstruction(BranchInstruction) in line 184
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitBREAKPOINT(BREAKPOINT) in line 607
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitCALOAD(CALOAD) in line 698
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitCASTORE(CASTORE) in line 813
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitCHECKCAST(CHECKCAST) in line 648
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitConstantPushInstruction(ConstantPushInstruction) in line 277
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitConversionInstruction(ConversionInstruction) in line 203
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function visitConversionInstruction2(ConversionInstruction) in line 212
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitCPInstruction(CPInstruction) in line 253
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitD2F(D2F) in line 1166
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitD2I(D2I) in line 1136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitD2L(D2L) in line 1072
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDADD(DADD) in line 713
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDALOAD(DALOAD) in line 863
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDASTORE(DASTORE) in line 778
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDCMPG(DCMPG) in line 1067
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDCMPL(DCMPL) in line 668
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDCONST(DCONST) in line 733
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDDIV(DDIV) in line 788
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDLOAD(DLOAD) in line 456
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDMUL(DMUL) in line 977
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDNEG(DNEG) in line 1186
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDREM(DREM) in line 688
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDRETURN(DRETURN) in line 773
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDSTORE(DSTORE) in line 425
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDSUB(DSUB) in line 873
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDUP(DUP) in line 492
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function visitDUP2(DUP2) in line 531
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function visitDUP2_X1(DUP2_X1) in line 545
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function visitDUP2_X2(DUP2_X2) in line 561
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
   function visitDUP_X1(DUP_X1) in line 503
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function visitDUP_X2(DUP_X2) in line 516
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function visitExceptionThrower(ExceptionThrower) in line 281
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitF2D(F2D) in line 888
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitF2I(F2I) in line 1181
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitF2L(F2L) in line 833
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFADD(FADD) in line 1276
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFALOAD(FALOAD) in line 1012
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFASTORE(FASTORE) in line 1106
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFCMPG(FCMPG) in line 653
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFCMPL(FCMPL) in line 1236
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFCONST(FCONST) in line 1037
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFDIV(FDIV) in line 1196
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFieldInstruction(FieldInstruction) in line 192
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitFieldOrMethod(FieldOrMethod) in line 273
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitFLOAD(FLOAD) in line 461
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFMUL(FMUL) in line 838
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFNEG(FNEG) in line 1156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFREM(FREM) in line 818
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFRETURN(FRETURN) in line 1271
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFSTORE(FSTORE) in line 430
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFSUB(FSUB) in line 848
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGETFIELD(GETFIELD) in line 997
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGETSTATIC(GETSTATIC) in line 623
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGOTO(GOTO) in line 1171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGOTO_W(GOTO_W) in line 1161
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGotoInstruction(GotoInstruction) in line 225
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitI2B(I2B) in line 1201
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitI2C(I2C) in line 1241
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitI2D(I2D) in line 708
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitI2F(I2F) in line 658
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitI2L(I2L) in line 893
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitI2S(I2S) in line 912
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIADD(IADD) in line 1221
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIALOAD(IALOAD) in line 783
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIAND(IAND) in line 723
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIASTORE(IASTORE) in line 932
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitICONST(ICONST) in line 1191
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIDIV(IDIV) in line 803
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ACMPEQ(IF_ACMPEQ) in line 1052
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ACMPNE(IF_ACMPNE) in line 898
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ICMPEQ(IF_ICMPEQ) in line 1141
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ICMPGE(IF_ICMPGE) in line 793
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ICMPGT(IF_ICMPGT) in line 883
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ICMPLE(IF_ICMPLE) in line 987
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ICMPLT(IF_ICMPLT) in line 628
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ICMPNE(IF_ICMPNE) in line 1116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIFEQ(IFEQ) in line 917
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIFGE(IFGE) in line 693
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIFGT(IFGT) in line 1087
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIfInstruction(IfInstruction) in line 196
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitIFLE(IFLE) in line 1022
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIFLT(IFLT) in line 638
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIFNE(IFNE) in line 982
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIFNONNULL(IFNONNULL) in line 972
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIFNULL(IFNULL) in line 743
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIINC(IINC) in line 768
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitILOAD(ILOAD) in line 466
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIMPDEP1(IMPDEP1) in line 597
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIMPDEP2(IMPDEP2) in line 602
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIMUL(IMUL) in line 1216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitINEG(INEG) in line 947
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitINSTANCEOF(INSTANCEOF) in line 1017
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitINVOKEDYNAMIC(INVOKEDYNAMIC) in line 1096
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitInvokeInstruction(InvokeInstruction) in line 257
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitINVOKEINTERFACE(INVOKEINTERFACE) in line 942
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitINVOKESPECIAL(INVOKESPECIAL) in line 718
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitINVOKESTATIC(INVOKESTATIC) in line 678
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitINVOKEVIRTUAL(INVOKEVIRTUAL) in line 1101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIOR(IOR) in line 922
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIREM(IREM) in line 927
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIRETURN(IRETURN) in line 1111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitISHL(ISHL) in line 1256
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitISHR(ISHR) in line 758
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitISTORE(ISTORE) in line 435
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitISUB(ISUB) in line 1176
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIUSHR(IUSHR) in line 1042
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIXOR(IXOR) in line 1092
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitJSR(JSR) in line 843
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitJSR_W(JSR_W) in line 957
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitJsrInstruction(JsrInstruction) in line 221
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitL2D(L2D) in line 1077
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitL2F(L2F) in line 878
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitL2I(L2I) in line 753
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLADD(LADD) in line 1002
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLALOAD(LALOAD) in line 1261
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLAND(LAND) in line 798
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLASTORE(LASTORE) in line 703
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLCMP(LCMP) in line 952
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLCONST(LCONST) in line 683
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLDC(LDC) in line 823
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLDC2_W(LDC2_W) in line 992
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLDIV(LDIV) in line 1121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLLOAD(LLOAD) in line 471
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLMUL(LMUL) in line 1246
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLNEG(LNEG) in line 1206
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLoadClass(LoadClass) in line 188
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitLoadInstruction(LoadInstruction) in line 285
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitLocalVariableInstruction(LocalVariableInstruction) in line 180
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitLOOKUPSWITCH(LOOKUPSWITCH) in line 1231
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLOR(LOR) in line 808
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLREM(LREM) in line 1211
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLRETURN(LRETURN) in line 1032
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLSHL(LSHL) in line 1062
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLSHR(LSHR) in line 1226
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLSTORE(LSTORE) in line 440
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLSUB(LSUB) in line 748
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLUSHR(LUSHR) in line 1251
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLXOR(LXOR) in line 1027
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitMONITORENTER(MONITORENTER) in line 1057
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitMONITOREXIT(MONITOREXIT) in line 633
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitMULTIANEWARRAY(MULTIANEWARRAY) in line 962
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitNEW(NEW) in line 738
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitNEWARRAY(NEWARRAY) in line 937
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitNONNULL2Z(NONNULL2Z) in line 907
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitNOP(NOP) in line 1007
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitNULL2Z(NULL2Z) in line 903
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitPOP(POP) in line 482
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitPOP2(POP2) in line 487
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitPopInstruction(PopInstruction) in line 217
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitPushInstruction(PushInstruction) in line 245
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitPUTFIELD(PUTFIELD) in line 728
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitPUTSTATIC(PUTSTATIC) in line 1126
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitRET(RET) in line 1082
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitRETURN(RETURN) in line 858
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitReturnInstruction(ReturnInstruction) in line 269
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitSALOAD(SALOAD) in line 967
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitSASTORE(SASTORE) in line 853
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitSelect(Select) in line 237
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitSIPUSH(SIPUSH) in line 868
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitStackConsumer(StackConsumer) in line 297
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitStackInstruction(StackInstruction) in line 176
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitStackProducer(StackProducer) in line 293
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitStoreInstruction(StoreInstruction) in line 229
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitSWAP(SWAP) in line 579
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function visitTABLESWITCH(TABLESWITCH) in line 763
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitTypedInstruction(TypedInstruction) in line 233
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitUnconditionalBranch(UnconditionalBranch) in line 241
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitVariableLengthInstruction(VariableLengthInstruction) in line 289
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function AbstractFrameModelingVisitor(ConstantPoolGen) in line 66
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable cpg in line 58
   variable frame in line 54
   variable location in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/AbstractMethod.java
module edu::umd::cs::findbugs::ba::AbstractMethod
   inherits from edu::umd::cs::findbugs::ba::AbstractClassMember
   inherits from edu::umd::cs::findbugs::ba::XMethod
   abstract class
   function getMethodDescriptor() in line 61
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getNumParams() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function isNative() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getAccessFlags() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isSynchronized() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getAccessFlags() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function resolveAccessMethodForMethod() in line 67
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function getAccessMethodForMethod() defined in edu::umd::cs::findbugs::ba::XMethod
   function toString() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AbstractMethod(@DottedClassName String,String,String,int) in line 30
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/AccessibleEntity.java
module edu::umd::cs::findbugs::ba::AccessibleEntity
   function getAccessFlags() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getClassDescriptor() in line 76
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isDeprecated() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isFinal() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isPrivate() in line 60
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isProtected() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isPublic() in line 50
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isSynthetic() in line 65
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/AnalysisContext.java
module edu::umd::cs::findbugs::ba::AnalysisContext
   function addClasspathEntry(String) in line 811
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function analysisSkippedDueToInvokeDynamic(XMethod) in line 402
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function usesInvokeDynamic() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable skippedDueToInvokeDynamic defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function logAnError(String) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function analyzingApplicationClass() in line 315
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassBeingAnalyzed() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isApplicationClass(JavaClass) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function clear() in line 189
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable boolPropertySet defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable databaseInputDir defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable databaseOutputDir defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function clearClassBeingAnalyzed() in line 214
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function clearClassContextCache() in line 819
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function clearRepository() in line 826
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function currentAnalysisContext() in line 198
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function currentXFactory() in line 202
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAnnotationRetentionDatabase() in line 832
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBoolProperty(@AnalysisFeature int) in line 617
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable boolPropertySet defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getBridgeFrom(MethodInfo) in line 1034
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bridgeFrom defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getBridgeTo(MethodInfo) in line 1028
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bridgeTo defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getCheckReturnAnnotationDatabase() in line 836
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getClassBeingAnalyzed() in line 206
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classBeingAnalyzed defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getClassContext(JavaClass) in line 847
      protection public
      16 lines of code
      1 parameters
      2 conditional paths
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function getClassContextStats() in line 869
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getClassSize(ClassDescriptor) in line 462
      protection public
      16 lines of code
      1 parameters
      2 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getData() defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses function logError(String,Exception) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getClassSummary() in line 218
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable classSummary defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getCurrentLookupFailureCallback() in line 278
      10 lines of code
      0 parameters
      3 conditional paths
      uses function currentAnalysisContext() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getDatabaseInputDir() in line 639
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable databaseInputDir defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getDatabaseOutputDir() in line 661
      protection public
      3 lines of code
      0 parameters
      9 conditional paths
      uses variable databaseOutputDir defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDatabaseInputDir() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function logError(String,Exception) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getDirectlyRelevantTypeQualifiersDatabase() in line 1022
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function getEqualsKindSummary() in line 232
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable equalsKindSummary defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getFieldStoreTypeDatabase() in line 879
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFieldSummary() in line 236
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable fieldSummary defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function logError(String,Exception) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getInnerClassAccessMap() in line 954
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getJCIPAnnotationDatabase() in line 884
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLookupFailureCallback() in line 891
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getNullnessAnnotationDatabase() in line 1044
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable tqNullnessDatabase defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function logError(String,Exception) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getErrorLogger() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function reportSkippedAnalysis(MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function getReturnValueNullnessPropertyDatabase() in line 1010
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSourceFinder() in line 898
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSourceFinder() defined in edu::umd::cs::findbugs::Project
   function getSourceInfoMap() in line 905
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSubtypes2() in line 1017
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function getSuppressionMatcher() in line 800
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable suppressionMatcher defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getUnconditionalDerefParamDatabase() in line 915
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUnreadFields() in line 255
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function unreadFieldsAvailable() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable unreadFields defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getUnreadFieldsData() in line 251
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable unreadFieldsData defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getXClassCollection() in line 796
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getXClassCollection() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function initDatabases() in line 924
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function isApplicationClass(JavaClass) in line 433
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isApplicationClass(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function isApplicationClass(@DottedClassName String) in line 446
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isApplicationClass(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function isApplicationClass(ClassDescriptor) in line 458
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isApplicationClass(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function isTooBig(ClassDescriptor) in line 479
      protection public
      29 lines of code
      1 parameters
      5 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getData() defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function logError(String,Exception) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getCodeBaseEntry() defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses function getCodeBase() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function loadDefaultInterproceduralDatabases() in line 587
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable IGNORE_BUILTIN_MODELS defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getUnconditionalDerefParamDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable UNCONDITIONAL_DEREF_DB_RESOURCE defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getReturnValueNullnessPropertyDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NONNULL_RETURN_DB_RESOURCE defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function loadInterproceduralDatabases() in line 575
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getFieldStoreTypeDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable DEFAULT_FILENAME defined in edu::umd::cs::findbugs::ba::type::FieldStoreTypeDatabase
      uses function getUnconditionalDerefParamDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable UNCONDITIONAL_DEREF_DB_FILENAME defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getReturnValueNullnessPropertyDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NONNULL_RETURN_DB_FILENAME defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function logAnError(String) in line 395
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function logError(String,Exception) in line 353
      protection public
      30 lines of code
      2 parameters
      6 conditional paths
      uses function currentAnalysisContext() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function logError(String) in line 387
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function currentAnalysisContext() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function logAnError(String) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function lookupClass(@Nonnull ClassDescriptor) in line 519
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function lookupClass(@Nonnull @DottedClassName String) in line 939
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function lookupSourceFile(@Nonnull @DottedClassName String) in line 557
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getSource() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable UNKNOWN_SOURCE_FILE defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function lookupSystemClass(@Nonnull String) in line 536
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable originalRepository defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function removeCurrentAnalysisContext() in line 783
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function currentAnalysisContext() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function clear() defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function reportMissingClass(ClassNotFoundException) in line 294
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses function skipReportingMissingClass(@CheckForNull @DottedClassName String) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function analyzingApplicationClass() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getCurrentLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function reportMissingClass(edu.umd.cs.findbugs.ba.MissingClassException) in line 310
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function reportMissingClass(edu.umd.cs.findbugs.classfile.MissingClassException) in line 327
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function reportMissingClass(ClassDescriptor) in line 332
      protection public
      17 lines of code
      1 parameters
      5 conditional paths
      uses function analyzingApplicationClass() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function skipReportingMissingClass(@CheckForNull @DottedClassName String) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getCurrentLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function setAppClassList(List< ClassDescriptor >) in line 958
      protection public
      30 lines of code
      1 parameters
      7 conditional paths
      uses function getAllClassDescriptors() defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function currentXFactory() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getXClass(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addApplicationClass(XClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function addClass(XClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function logError(String,Exception) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function setBoolProperty(@AnalysisFeature int,boolean) in line 605
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable boolPropertySet defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function setBridgeMethod(MethodInfo,MethodInfo) in line 1039
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable bridgeTo defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable bridgeFrom defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function setClassBeingAnalyzed(@Nonnull ClassDescriptor) in line 210
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classBeingAnalyzed defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function setClassSummary(@Nonnull ClassSummary) in line 225
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable classSummary defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function setCurrentAnalysisContext(AnalysisContext) in line 776
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function currentAnalysisContext() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function currentXFactory() defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function setDatabaseInputDir(String) in line 627
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable databaseInputDir defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function setDatabaseOutputDir(String) in line 649
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable databaseOutputDir defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function setFieldSummary(@Nonnull FieldSummary) in line 244
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function logError(String,Exception) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable fieldSummary defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function setMissingClassWarningsSuppressed(boolean) in line 412
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function setUnreadFields(@Nonnull UnreadFields) in line 266
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable unreadFields defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function skipReportingMissingClass(@CheckForNull @DottedClassName String) in line 273
      3 lines of code
      1 parameters
      1 conditional paths
   function unreadFieldsAvailable() in line 262
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable unreadFields defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function updateDatabases(int) in line 996
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getCheckReturnAnnotationDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function loadAuxiliaryAnnotations() defined in edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
      uses function getNullnessAnnotationDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function loadAuxiliaryAnnotations() defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
   function AnalysisContext(@Nonnull Project) in line 176
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable skippedDueToInvokeDynamic defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable equalsKindSummary defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable unreadFieldsData defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable suppressionMatcher defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable bridgeTo defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable bridgeFrom defined in edu::umd::cs::findbugs::ba::AnalysisContext
   variable boolPropertySet in line 141
   variable bridgeFrom in line 173
   variable bridgeTo in line 171
   variable classBeingAnalyzed in line 151
   variable classSummary in line 149
   variable currentAnalysisContext in line 110
   variable currentXFactory in line 119
   variable databaseInputDir in line 143
   variable databaseOutputDir in line 145
   variable DEBUG in line 90
      protection public
   variable DEFAULT_CHECK_FOR_NULL_PARAM_DATABASE_FILENAME in line 96
      protection public
   variable DEFAULT_NONNULL_PARAM_DATABASE_FILENAME in line 94
      protection public
   variable DEFAULT_NULL_RETURN_VALUE_ANNOTATION_DATABASE in line 98
      protection public
   variable DEFAULT_NULL_RETURN_VALUE_DB_FILENAME in line 108
      protection public
   variable equalsKindSummary in line 163
   variable fieldSummary in line 153
   variable IGNORE_BUILTIN_MODELS in line 92
      protection public
   variable lookupFailureCallback in line 169
   variable NONNULL_RETURN_DB_FILENAME in line 102
      protection public
   variable NONNULL_RETURN_DB_RESOURCE in line 106
      protection public
   variable originalRepository in line 131
   variable project in line 161
   variable skippedDueToInvokeDynamic in line 159
   variable suppressionMatcher in line 167
   variable tqNullnessDatabase in line 157
   variable UNCONDITIONAL_DEREF_DB_FILENAME in line 100
      protection public
   variable UNCONDITIONAL_DEREF_DB_RESOURCE in line 104
      protection public
   variable unreadFields in line 155
   variable unreadFieldsData in line 165
module edu::umd::cs::findbugs::ba::AnalysisContext::DelegatingRepositoryLookupFailureCallback
   inherits from edu::umd::cs::findbugs::ba::RepositoryLookupFailureCallback
   function logError(String) in line 1059
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function logError(String,Throwable) in line 1064
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function reportMissingClass(ClassNotFoundException) in line 1069
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function reportMissingClass(ClassDescriptor) in line 1074
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function reportSkippedAnalysis(MethodDescriptor) in line 1079
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/AnalysisException.java
module edu::umd::cs::findbugs::ba::AnalysisException
   inherits from edu::umd::cs::findbugs::classfile::UncheckedAnalysisException
   function AnalysisException(String) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AnalysisException(String,Throwable) in line 58
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function AnalysisException(String,MethodGen,Throwable) in line 73
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function AnalysisException(String,MethodGen,InstructionHandle) in line 87
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function AnalysisException(String,MethodGen,Instruction) in line 101
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function AnalysisException(String,MethodGen,InstructionHandle,Throwable) in line 117
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function AnalysisException(String,MethodGen,Instruction,Throwable) in line 133
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   variable serialVersionUID in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/AnalysisFeatures.java
module edu::umd::cs::findbugs::ba::AnalysisFeatures
   variable ACCURATE_EXCEPTIONS in line 60
      protection public
   variable CONSERVE_SPACE in line 67
      protection public
   variable INTERATIVE_OPCODE_STACK_ANALYSIS in line 85
      protection public
   variable MERGE_SIMILAR_WARNINGS in line 111
      protection public
   variable MODEL_INSTANCEOF in line 73
      protection public
   variable NUM_BOOLEAN_ANALYSIS_PROPERTIES in line 121
      protection public
   variable SKIP_HUGE_METHODS in line 79
      protection public
   variable TRACK_GUARANTEED_VALUE_DEREFS_IN_NULL_POINTER_ANALYSIS in line 92
      protection public
   variable TRACK_VALUE_NUMBERS_IN_NULL_POINTER_ANALYSIS in line 102
      protection public
module edu::umd::cs::findbugs::ba::AnalysisFeatures::AnalysisFeature
module edu::umd::cs::findbugs::ba::AnalysisFeatures::Builder
   function asFeatureNum(int) in line 46
      1 lines of code
      1 parameters
      1 conditional paths
   function build(String) in line 48
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function asFeatureNum(int) defined in edu::umd::cs::findbugs::ba::AnalysisFeatures::Builder
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/AnnotationDatabase.java
module edu::umd::cs::findbugs::ba::AnnotationDatabase
   function addDefaultAnnotation(Target,String,AnnotationEnum) in line 87
      protection public
      10 lines of code
      3 parameters
      1 conditional paths
   function addDefaultMethodAnnotation(String,AnnotationEnum) in line 360
      9 lines of code
      2 parameters
      1 conditional paths
   function addDirectAnnotation(Object,AnnotationEnum) in line 82
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function addFieldAnnotation(String,String,String,boolean,AnnotationEnum) in line 370
      10 lines of code
      5 parameters
      1 conditional paths
   function addMethodAnnotation(Class<?>,String,String,boolean,AnnotationEnum) in line 381
      3 lines of code
      5 parameters
      1 conditional paths
   function addMethodAnnotation(@DottedClassName String,String,String,boolean,AnnotationEnum) in line 385
      27 lines of code
      5 parameters
      1 conditional paths
   function addMethodParameterAnnotation(String,String,String,boolean,int,AnnotationEnum) in line 418
      23 lines of code
      6 parameters
      1 conditional paths
   function annotationIsDirect(Object) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function anyAnnotations(AnnotationEnum) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function classDefinesMethod(JavaClass,XMethod) in line 311
      9 lines of code
      2 parameters
      1 conditional paths
   function getDirectAnnotation(final Object) in line 307
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getResolvedAnnotation(Object,boolean) in line 108
      protection public
      34 lines of code
      2 parameters
      1 conditional paths
   function getUncachedResolvedAnnotation(final Object,boolean) in line 148
      protection public
      158 lines of code
      2 parameters
      1 conditional paths
   function loadAuxiliaryAnnotations() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function lookInOverriddenMethod(final Object,String,XMethod,boolean) in line 321
      30 lines of code
      4 parameters
      1 conditional paths
   function onlyAppliesToReferenceParameters(AnnotationEnum) in line 413
      4 lines of code
      1 parameters
      1 conditional paths
   function setAddClassOnly(boolean) in line 354
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function AnnotationDatabase() in line 65
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   variable defaultAnnotation in line 62
   variable directAnnotations in line 60
   variable IGNORE_BUILTIN_ANNOTATIONS in line 51
      protection public
   variable seen in line 80
module edu::umd::cs::findbugs::ba::AnnotationDatabase::Target
   variable ANY in line 56
      protection public
   variable CLASS in line 55
      protection public
   variable FIELD in line 54
      protection public
   variable METHOD in line 54
      protection public
   variable PARAMETER in line 54
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/AnnotationEnumeration.java
module edu::umd::cs::findbugs::ba::AnnotationEnumeration
   inherits from Comparable
   function compareTo(E) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 36
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function getIndex() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AnnotationEnumeration(String,int) in line 30
      4 lines of code
      2 parameters
      1 conditional paths
   variable index in line 26
   variable name in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/AnnotationRetentionDatabase.java
module edu::umd::cs::findbugs::ba::AnnotationRetentionDatabase
   function hasRuntimeRetention(String) in line 27
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable annotationRetention defined in edu::umd::cs::findbugs::ba::AnnotationRetentionDatabase
   function lacksRuntimeRetention(String) in line 36
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable annotationRetention defined in edu::umd::cs::findbugs::ba::AnnotationRetentionDatabase
   function setRuntimeRetention(String,boolean) in line 44
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable annotationRetention defined in edu::umd::cs::findbugs::ba::AnnotationRetentionDatabase
   variable annotationRetention in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/AssertionMethods.java
module edu::umd::cs::findbugs::ba::AssertionMethods
   inherits from org::apache::bcel::Constants
   function init(JavaClass) in line 111
      55 lines of code
      1 parameters
      8 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
      uses variable className defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses function isUserAssertionMethod(String,String) defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses variable assertionMethodRefSet defined in edu::umd::cs::findbugs::ba::AssertionMethods
   function isAssertionCall(InvokeInstruction) in line 230
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable assertionMethodRefSet defined in edu::umd::cs::findbugs::ba::AssertionMethods
   function isAssertionHandle(InstructionHandle,ConstantPoolGen) in line 176
      protection public
      23 lines of code
      2 parameters
      6 conditional paths
      uses function isAssertionInstruction(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses variable className defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
   function isAssertionInstruction(Instruction,ConstantPoolGen) in line 209
      protection public
      20 lines of code
      2 parameters
      5 conditional paths
      uses function isAssertionCall(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses variable className defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
   function isUserAssertionMethod(String,String) in line 167
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable userAssertionMethodList defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses variable className defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
      uses variable methodName defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
   function AssertionMethods(JavaClass) in line 106
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function init(JavaClass) defined in edu::umd::cs::findbugs::ba::AssertionMethods
   variable assertionMethodRefSet in line 59
   variable DEBUG in line 53
   variable userAssertionMethodList in line 81
module edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
   function getClassName() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
   function getMethodName() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
   function UserAssertionMethod(String,String) in line 66
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
      uses variable methodName defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
   variable className in line 62
   variable methodName in line 64
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/AssignedFieldMap.java
module edu::umd::cs::findbugs::ba::AssignedFieldMap
   inherits from org::apache::bcel::Constants
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/BackwardDataflowAnalysis.java
module edu::umd::cs::findbugs::ba::BackwardDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflowAnalysis
   abstract class
   function getBlockOrder(CFG) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getReverseDepthFirstSearch() in line 43
      3 lines of code
      0 parameters
      1 conditional paths
   function isForwards() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BackwardDataflowAnalysis(ReverseDepthFirstSearch,DepthFirstSearch) in line 35
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   variable dfs in line 33
   variable rdfs in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/BasicAbstractDataflowAnalysis.java
module edu::umd::cs::findbugs::ba::BasicAbstractDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::DataflowAnalysis
   abstract class
   function edgeTransfer(Edge,Fact) in line 177
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function factToString(Fact) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function finishIteration() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFactAfterLocation(Location) in line 114
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFactAtLocation(Location) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFactOnEdge(Edge) in line 128
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
   function getLastUpdateTimestamp(Fact) in line 192
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getResultFact(BasicBlock) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getStartFact(BasicBlock) in line 69
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function lookupOrCreateFact(Map< BasicBlock, Fact >,BasicBlock) in line 182
      8 lines of code
      2 parameters
      1 conditional paths
   function resultFactIterator() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setLastUpdateTimestamp(Fact,int) in line 197
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function startIteration() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BasicAbstractDataflowAnalysis() in line 48
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable resultFactMap in line 43
   variable startFactMap in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/BasicBlock.java
module edu::umd::cs::findbugs::ba::BasicBlock
   inherits from edu::umd::cs::findbugs::graph::AbstractVertex
   inherits from edu::umd::cs::findbugs::ba::Debug
   function addInstruction(InstructionHandle) in line 243
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable firstInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable lastInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
   function containsInstruction(InstructionHandle) in line 434
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function containsInstructionWithOffset(int) in line 453
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable numNonExceptionSuccessors defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getExceptionGen() in line 408
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionGen defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getExceptionThrower() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionThrower defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getFirstInstruction() in line 191
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable firstInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getId() in line 138
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function getLastInstruction() in line 198
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getPredecessorOf(InstructionHandle) in line 228
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function containsInstruction(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable firstInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getSuccessorOf(InstructionHandle) in line 211
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function containsInstruction(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable lastInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function instructionIterator() in line 335
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function InstructionIterator(InstructionHandle,InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses variable firstInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable lastInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function instructionReverseIterator() in line 376
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable firstInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isEmpty() in line 383
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable firstInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isExceptionHandler() in line 398
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionGen defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isExceptionThrower() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionThrower defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isInJSRSubroutine() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable inJSRSubroutine defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isNullCheck() in line 177
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable exceptionThrower defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable nullCheckInstructionSet defined in edu::umd::cs::findbugs::ba::BasicBlock
   function pos() in line 387
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable firstInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function setExceptionGen(@Nullable TypeMerger,CodeExceptionGen) in line 419
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable exceptionGen defined in edu::umd::cs::findbugs::ba::BasicBlock
   function setExceptionThrower(InstructionHandle) in line 153
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable exceptionThrower defined in edu::umd::cs::findbugs::ba::BasicBlock
   function toString() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function BasicBlock() in line 114
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   variable exceptionGen in line 98
   variable exceptionThrower in line 95
   variable firstInstruction in line 91
   variable inJSRSubroutine in line 101
   variable lastInstruction in line 93
   variable nullCheckInstructionSet in line 53
   variable numNonExceptionSuccessors in line 103
module edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   inherits from java::util::Iterator
   function duplicate() in line 289
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function InstructionIterator(InstructionHandle,InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function next() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses variable last defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function equals(Object) in line 294
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function InstructionIterator(InstructionHandle,InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses variable next defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses variable last defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function getBasicBlock() in line 311
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 303
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function hashCode() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function next() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function hasNext() in line 270
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function next() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function next() in line 275
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses variable last defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function remove() in line 285
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 316
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function next() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function InstructionIterator(InstructionHandle,InstructionHandle) in line 264
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable last defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   variable last in line 262
   variable next in line 261
module edu::umd::cs::findbugs::ba::BasicBlock::InstructionReverseIterator
   inherits from java::util::Iterator
   function hasNext() in line 352
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function next() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function next() in line 357
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function next() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function remove() in line 367
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function InstructionReverseIterator(InstructionHandle,InstructionHandle) in line 346
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable last defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   variable first in line 344
   variable next in line 343
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/Binding.java
module edu::umd::cs::findbugs::ba::bcp::Binding
   function getVariable() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable variable defined in edu::umd::cs::findbugs::ba::bcp::Binding
   function getVarName() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable varName defined in edu::umd::cs::findbugs::ba::bcp::Binding
   function toString() in line 64
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable varName defined in edu::umd::cs::findbugs::ba::bcp::Binding
      uses variable variable defined in edu::umd::cs::findbugs::ba::bcp::Binding
   function Binding(String,Variable) in line 41
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable variable defined in edu::umd::cs::findbugs::ba::bcp::Binding
      uses variable varName defined in edu::umd::cs::findbugs::ba::bcp::Binding
   variable variable in line 31
   variable varName in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/BindingSet.java
module edu::umd::cs::findbugs::ba::bcp::BindingSet
   function lookup(String) in line 55
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable binding defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses function getVarName() defined in edu::umd::cs::findbugs::ba::bcp::Binding
      uses variable parent defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses function lookup(String) defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
   function toString() in line 63
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses variable binding defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses function toString() defined in edu::umd::cs::findbugs::ba::bcp::Binding
      uses variable parent defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses function toString() defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
   function BindingSet(Binding,BindingSet) in line 43
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable binding defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses variable parent defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
   variable binding in line 31
   variable parent in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/ByteCodePattern.java
module edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function add(PatternElement) in line 45
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable first defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
      uses function addInterElementWild() defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
      uses function addElement(PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function addElement(PatternElement) in line 112
      9 lines of code
      1 parameters
      2 conditional paths
      uses function setIndex(int) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses variable numElements defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
      uses variable first defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
      uses function setNext(PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function addInterElementWild() in line 106
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable interElementWild defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
      uses function isLastWild() defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
      uses function addElement(PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function addWild(int) in line 61
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function isLastWild() defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
      uses function setMinAndMax(int,int) defined in edu::umd::cs::findbugs::ba::bcp::Wild
      uses function addElement(PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function dummyVariable() in line 99
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable dummyVariableCount defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function getFirst() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable first defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function isLastWild() in line 122
      7 lines of code
      0 parameters
      2 conditional paths
   function setInterElementWild(int) in line 80
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable dummyVariableCount in line 36
   variable first in line 30
   variable interElementWild in line 32
   variable numElements in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/ByteCodePatternMatch.java
module edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
   function getBindingSet() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
   function getFirstLabeledMatch(String) in line 69
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lastElementMatch defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses function getFirstLabeledMatch(String) defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getLabeledInstruction(String) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lastElementMatch defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses function getLabeledInstruction(String) defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getLastLabeledMatch(String) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lastElementMatch defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses function getLastLabeledMatch(String) defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function patternElementMatchIterator() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElementMatchList defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
   function toString() in line 36
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable patternElementMatchList defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
   function ByteCodePatternMatch(BindingSet,PatternElementMatch) in line 44
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses variable lastElementMatch defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses variable patternElementMatchList defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses function getPrev() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   variable bindingSet in line 29
   variable lastElementMatch in line 31
   variable patternElementMatchList in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/FieldAccess.java
module edu::umd::cs::findbugs::ba::bcp::FieldAccess
   inherits from edu::umd::cs::findbugs::ba::bcp::SingleInstruction
   inherits from org::apache::bcel::Constants
   abstract class
   function checkConsistent(Variable,Variable,BindingSet) in line 70
      13 lines of code
      3 parameters
      3 conditional paths
      uses variable fieldVarName defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
      uses variable valueVarName defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
   function isLongOrDouble(FieldInstruction,ConstantPoolGen) in line 93
      5 lines of code
      2 parameters
      1 conditional paths
   function snarfFieldValue(FieldInstruction,ConstantPoolGen,ValueNumberFrame) in line 111
      13 lines of code
      3 parameters
      2 conditional paths
      uses function isLongOrDouble(FieldInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
   function FieldAccess(String,String) in line 52
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable fieldVarName defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
      uses variable valueVarName defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
   variable fieldVarName in line 39
   variable valueVarName in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/FieldVariable.java
module edu::umd::cs::findbugs::ba::bcp::FieldVariable
   inherits from edu::umd::cs::findbugs::ba::bcp::Variable
   function getClassName() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function getFieldName() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldName defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function getFieldSig() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldSig defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function isStatic() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ref defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function sameAs(Variable) in line 97
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function FieldVariable(String,String,String) defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable ref defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable className defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable fieldName defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable fieldSig defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function toString() in line 110
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable fieldName defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function FieldVariable(String,String,String) in line 45
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable fieldName defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable fieldSig defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function FieldVariable(@Nullable ValueNumber,String,String,String) in line 61
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable ref defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable className defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable fieldName defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable fieldSig defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   variable className in line 29
   variable fieldName in line 31
   variable fieldSig in line 33
   variable ref in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/IfNull.java
module edu::umd::cs::findbugs::ba::bcp::IfNull
   inherits from edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function acceptBranch(Edge,InstructionHandle) in line 56
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 40
      protection public
      14 lines of code
      5 parameters
      2 conditional paths
      uses function addOrCheckDefinition(Variable,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   function IfNull(String) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable varName defined in edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/Invoke.java
module edu::umd::cs::findbugs::ba::bcp::Invoke
   inherits from edu::umd::cs::findbugs::ba::bcp::PatternElement
   function acceptBranch(Edge,InstructionHandle) in line 236
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function createClassMatcher(String) in line 183
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createMatcher(String) defined in edu::umd::cs::findbugs::ba::bcp::Invoke
   function createMatcher(String) in line 187
      4 lines of code
      1 parameters
      1 conditional paths
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 193
      protection public
      41 lines of code
      5 parameters
      7 conditional paths
      uses variable STATIC defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable CONSTRUCTOR defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable INSTANCE defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable mode defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable methodNameMatcher defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses function match(String) defined in edu::umd::cs::findbugs::ba::bcp::Invoke::StringMatcher
      uses variable methodSigMatcher defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable classNameMatcher defined in edu::umd::cs::findbugs::ba::bcp::Invoke
   function maxOccur() in line 246
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function minOccur() in line 241
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Invoke(String,String,String,int,@Nullable RepositoryLookupFailureCallback) in line 175
      protection public
      7 lines of code
      5 parameters
      1 conditional paths
      uses function createClassMatcher(String) defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses function createMatcher(String) defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable mode defined in edu::umd::cs::findbugs::ba::bcp::Invoke
   variable ANY in line 102
      protection public
   variable classNameMatcher in line 152
   variable CONSTRUCTOR in line 92
      protection public
   variable INSTANCE in line 82
      protection public
   variable methodNameMatcher in line 154
   variable methodSigMatcher in line 156
   variable mode in line 158
   variable ORDINARY_METHOD in line 97
      protection public
   variable STATIC in line 87
      protection public
module edu::umd::cs::findbugs::ba::bcp::Invoke::StringMatcher
   function match(String) in line 105
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::bcp::Invoke::ExactStringMatcher
   inherits from edu::umd::cs::findbugs::ba::bcp::Invoke::StringMatcher
   function match(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ExactStringMatcher(String) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable value in line 109
module edu::umd::cs::findbugs::ba::bcp::Invoke::RegexpStringMatcher
   inherits from edu::umd::cs::findbugs::ba::bcp::Invoke::StringMatcher
   function match(String) in line 129
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function RegexpStringMatcher(String) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable pattern in line 122
module edu::umd::cs::findbugs::ba::bcp::Invoke::SubclassMatcher
   inherits from edu::umd::cs::findbugs::ba::bcp::Invoke::StringMatcher
   function match(String) in line 142
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function SubclassMatcher(String) in line 137
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable className in line 135
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/Load.java
module edu::umd::cs::findbugs::ba::bcp::Load
   inherits from edu::umd::cs::findbugs::ba::bcp::FieldAccess
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 55
      protection public
      23 lines of code
      5 parameters
      3 conditional paths
      uses function checkConsistent(Variable,Variable,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
   function Load(String,String) in line 50
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable fieldVarName defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/LocalVariable.java
module edu::umd::cs::findbugs::ba::bcp::LocalVariable
   inherits from edu::umd::cs::findbugs::ba::bcp::Variable
   function sameAs(Variable) in line 32
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function LocalVariable(ValueNumber) defined in edu::umd::cs::findbugs::ba::bcp::LocalVariable
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::bcp::LocalVariable
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function toString() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::bcp::LocalVariable
      uses function toString() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function LocalVariable(ValueNumber) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::bcp::LocalVariable
   variable valueNumber in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/LongOrDoubleLocalVariable.java
module edu::umd::cs::findbugs::ba::bcp::LongOrDoubleLocalVariable
   inherits from edu::umd::cs::findbugs::ba::bcp::Variable
   function sameAs(Variable) in line 33
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function LongOrDoubleLocalVariable(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::bcp::LongOrDoubleLocalVariable
      uses variable topValue defined in edu::umd::cs::findbugs::ba::bcp::LongOrDoubleLocalVariable
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function LongOrDoubleLocalVariable(ValueNumber,ValueNumber) in line 27
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable topValue defined in edu::umd::cs::findbugs::ba::bcp::LongOrDoubleLocalVariable
   variable topValue in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/MatchAny.java
module edu::umd::cs::findbugs::ba::bcp::MatchAny
   inherits from edu::umd::cs::findbugs::ba::bcp::PatternElement
   function acceptBranch(Edge,InstructionHandle) in line 93
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function label(String) in line 58
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable childList defined in edu::umd::cs::findbugs::ba::bcp::MatchAny
      uses variable label defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 78
      protection public
      13 lines of code
      5 parameters
      3 conditional paths
      uses variable childList defined in edu::umd::cs::findbugs::ba::bcp::MatchAny
   function maxOccur() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function minOccur() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAllowTrailingEdges(boolean) in line 66
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable childList defined in edu::umd::cs::findbugs::ba::bcp::MatchAny
      uses function setAllowTrailingEdges(boolean) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function allowTrailingEdges() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function MatchAny(PatternElement[]) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable childList defined in edu::umd::cs::findbugs::ba::bcp::MatchAny
   variable childList in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/MatchResult.java
module edu::umd::cs::findbugs::ba::bcp::MatchResult
   function getBindingSet() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::MatchResult
   function getPatternElement() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::MatchResult
   function MatchResult(PatternElement,BindingSet) in line 46
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::MatchResult
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::MatchResult
   variable bindingSet in line 36
   variable patternElement in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/Monitorenter.java
module edu::umd::cs::findbugs::ba::bcp::Monitorenter
   inherits from edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 48
      protection public
      14 lines of code
      5 parameters
      2 conditional paths
      uses function addOrCheckDefinition(Variable,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   function Monitorenter(String) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable varName defined in edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/New.java
module edu::umd::cs::findbugs::ba::bcp::New
   inherits from edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 49
      protection public
      11 lines of code
      5 parameters
      2 conditional paths
      uses function addOrCheckDefinition(Variable,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   function New(String) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/OneVariableInstruction.java
module edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   inherits from edu::umd::cs::findbugs::ba::bcp::SingleInstruction
   abstract class
   function addOrCheckDefinition(Variable,BindingSet) in line 53
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable varName defined in edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   function OneVariableInstruction(String) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable varName defined in edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   variable varName in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/Opcode.java
module edu::umd::cs::findbugs::ba::bcp::Opcode
   inherits from edu::umd::cs::findbugs::ba::bcp::PatternElement
   function acceptBranch(Edge,InstructionHandle) in line 61
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 49
      protection public
      10 lines of code
      5 parameters
      2 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::ba::bcp::Opcode
   function maxOccur() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function minOccur() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Opcode(int) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::ba::bcp::Opcode
   variable opcode in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/PatternElement.java
module edu::umd::cs::findbugs::ba::bcp::PatternElement
   abstract class
   function acceptBranch(Edge,InstructionHandle) in line 180
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function addOrCheckDefinition(String,Variable,BindingSet) in line 208
      15 lines of code
      3 parameters
      4 conditional paths
      uses function lookup(String,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function sameAs(Variable) defined in edu::umd::cs::findbugs::ba::bcp::Variable
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function allowTrailingEdges() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function dominatedBy(String) in line 88
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable dominatedBy defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function getDominatedBy() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dominatedBy defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function getLabel() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable label defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function getNext() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable next defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function label(String) in line 70
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable label defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function lookup(String,BindingSet) in line 139
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function lookup(String) defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses function getVariable() defined in edu::umd::cs::findbugs::ba::bcp::Binding
      uses function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function acceptBranch(Edge,InstructionHandle) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function minOccur() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function maxOccur() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 168
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   function maxOccur() in line 192
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function minOccur() in line 186
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setAllowTrailingEdges(boolean) in line 118
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function allowTrailingEdges() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function setIndex(int) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable index defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function setNext(PatternElement) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 225
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable index defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   variable allowTrailingEdges in line 47
   variable DEBUG in line 37
   variable dominatedBy in line 43
   variable index in line 45
   variable label in line 41
   variable next in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/PatternElementMatch.java
module edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function allowTrailingEdges() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable allowTrailingEdges defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function equals(Object) in line 171
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses function PatternElementMatch(PatternElement,InstructionHandle,BasicBlock,int,PatternElementMatch) defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable matchedInstruction defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable prev defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getBasicBlock() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getFirstLabeledMatch(String) in line 117
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function getLabel() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses variable prev defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getLabeledInstruction(String) in line 109
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getFirstLabeledMatch(String) defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function getMatchedInstructionInstructionHandle() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getLastLabeledMatch(String) in line 132
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function getLabel() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses variable prev defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getMatchCount() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getMatchedInstructionInstructionHandle() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable matchedInstruction defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getPatternElement() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getPrev() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable prev defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function hashCode() in line 165
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 153
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function toString() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses variable matchedInstruction defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function toString() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function PatternElementMatch(PatternElement,InstructionHandle,BasicBlock,int,PatternElementMatch) in line 59
      protection public
      8 lines of code
      5 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable matchedInstruction defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable prev defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   variable basicBlock in line 37
   variable matchCount in line 39
   variable matchedInstruction in line 35
   variable patternElement in line 33
   variable prev in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/PatternMatcher.java
module edu::umd::cs::findbugs::ba::bcp::PatternMatcher
   inherits from edu::umd::cs::findbugs::ba::DFSEdgeTypes
   function attemptMatch(BasicBlock,BasicBlock.InstructionIterator) in line 157
      4 lines of code
      2 parameters
      1 conditional paths
      uses function work(State) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable pattern defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function getFirst() defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function byteCodePatternMatchIterator() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable resultList defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
   function debug(String) in line 450
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
   function execute() in line 112
      protection public
      27 lines of code
      0 parameters
      5 conditional paths
      uses variable workList defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable cfg defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses variable visitedBlockMap defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function attemptMatch(BasicBlock,BasicBlock.InstructionIterator) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function successorIterator(final VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function work(State) in line 468
      96 lines of code
      1 parameters
      18 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function debug(String) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable resultList defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function advanceToNextElement() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable cfg defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable dfs defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable BACK_EDGE defined in edu::umd::cs::findbugs::graph::DFSEdgeTypes
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function advanceToSuccessor(Edge,MatchResult) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function PatternMatcher(ByteCodePattern,ClassContext,Method) in line 91
      protection public
      12 lines of code
      3 parameters
      1 conditional paths
      uses variable pattern defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
   variable cfg in line 65
   variable cpg in line 67
   variable DEBUG in line 59
   variable dfs in line 69
   variable domAnalysis in line 73
   variable nextPath in line 163
   variable pattern in line 63
   variable resultList in line 79
   variable SHOW_WILD in line 61
   variable visitedBlockMap in line 77
   variable vnaDataflow in line 71
   variable workList in line 75
module edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function advanceToNextElement() in line 276
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
      uses variable canFork defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function minOccur() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function State(BasicBlock,BasicBlock.InstructionIterator,PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable instructionIterator defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function getNext() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function advanceToSuccessor(Edge,MatchResult) in line 352
      protection public
      13 lines of code
      2 parameters
      2 conditional paths
      uses function getPatternElement() defined in edu::umd::cs::findbugs::ba::bcp::MatchResult
      uses function acceptBranch(Edge,InstructionHandle) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function getLastMatchedInstruction() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function State(BasicBlock,BasicBlock.InstructionIterator,PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable canFork defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function canAdvanceToNextBasicBlock() in line 328
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function allowTrailingEdges() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function currentElementCanContinue() in line 299
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function maxOccur() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function dominatedInstructionStateIterable() in line 378
      protection public
      42 lines of code
      0 parameters
      9 conditional paths
      uses function lookForDominatedInstruction() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function duplicate() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function getFirstLabeledMatch(String) defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function getDominatedBy() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function getMatchedInstructionInstructionHandle() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable cfg defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses variable domAnalysis defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::BasicAbstractDataflowAnalysis
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function duplicate() in line 227
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function State(BasicBlock,BasicBlock.InstructionIterator,PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable instructionIterator defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable canFork defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function getBasicBlock() in line 234
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function getCurrentMatch() in line 248
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function getLastMatchedInstruction() in line 335
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function getMatchedInstructionInstructionHandle() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getPatternElement() in line 241
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function getResult() in line 264
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isComplete() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function isComplete() in line 255
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function lookForDominatedInstruction() in line 370
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function getDominatedBy() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function matchLocation(Location) in line 421
      27 lines of code
      1 parameters
      4 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function debug(String) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable SHOW_WILD defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable parentPath defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable path defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function toString() defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses variable cpg defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable canFork defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function getPatternElement() defined in edu::umd::cs::findbugs::ba::bcp::MatchResult
      uses function getBindingSet() defined in edu::umd::cs::findbugs::ba::bcp::MatchResult
   function matchNextInBasicBlock() in line 314
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function moreInstructionsInBasicBlock() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable instructionIterator defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function matchLocation(Location) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function moreInstructionsInBasicBlock() in line 306
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instructionIterator defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function toString() in line 189
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable instructionIterator defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function State(BasicBlock,BasicBlock.InstructionIterator,PatternElement) in line 203
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable instructionIterator defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function State(@Nullable State,BasicBlock,BasicBlock.InstructionIterator,PatternElement,int,@Nullable PatternElementMatch,@Nullable BindingSet,boolean) in line 210
      protection public
      13 lines of code
      8 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable instructionIterator defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable canFork defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable nextPath defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
   variable basicBlock in line 170
   variable bindingSet in line 180
   variable canFork in line 182
   variable currentMatch in line 178
   variable instructionIterator in line 172
   variable matchCount in line 176
   variable parentPath in line 184
   variable path in line 186
   variable patternElement in line 174
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/SingleInstruction.java
module edu::umd::cs::findbugs::ba::bcp::SingleInstruction
   inherits from edu::umd::cs::findbugs::ba::bcp::PatternElement
   abstract class
   function acceptBranch(Edge,InstructionHandle) in line 36
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function maxOccur() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function minOccur() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/Store.java
module edu::umd::cs::findbugs::ba::bcp::Store
   inherits from edu::umd::cs::findbugs::ba::bcp::FieldAccess
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 54
      protection public
      24 lines of code
      5 parameters
      3 conditional paths
      uses function checkConsistent(Variable,Variable,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
   function Store(String,String) in line 49
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable fieldVarName defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
      uses variable valueVarName defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/Variable.java
module edu::umd::cs::findbugs::ba::bcp::Variable
   function sameAs(Variable) in line 31
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/bcp/Wild.java
module edu::umd::cs::findbugs::ba::bcp::Wild
   inherits from edu::umd::cs::findbugs::ba::bcp::PatternElement
   function acceptBranch(Edge,InstructionHandle) in line 97
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 102
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
   function maxOccur() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function minOccur() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable min defined in edu::umd::cs::findbugs::ba::bcp::Wild
   function setMinAndMax(int,int) in line 81
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable min defined in edu::umd::cs::findbugs::ba::bcp::Wild
   function Wild() in line 43
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function Wild(int) in line 55
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function Wild(int,int) in line 68
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable min defined in edu::umd::cs::findbugs::ba::bcp::Wild
   variable min in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/BetterCFGBuilder2.java
module edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   inherits from edu::umd::cs::findbugs::ba::CFGBuilder
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   inherits from edu::umd::cs::findbugs::ba::Debug
   function build() in line 770
      protection public
      34 lines of code
      0 parameters
      5 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function optimize(InstructionList) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable topLevelSubroutine defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable subroutineWorkList defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getStartInstruction() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses variable cfg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function inlineAll() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function addInstruction(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkIntegrity() defined in edu::umd::cs::findbugs::ba::CFG
   function build(Subroutine) in line 825
      113 lines of code
      1 parameters
      19 conditional paths
      uses variable START_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getStartInstruction() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
      uses function isPEI(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function handleExceptions(Subroutine,InstructionHandle,BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function addInstruction(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable jsrSubroutineMap defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable subroutineWorkList defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable JSR_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable RET_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable cpg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function isEndOfBasicBlock() defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses function instructionIsThrow() defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses function instructionIsExit() defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses function instructionIsReturn() defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses function targetIterator() defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses function getTargetInstruction() defined in edu::umd::cs::findbugs::ba::Target
      uses function getEdgeType() defined in edu::umd::cs::findbugs::ba::Target
      uses function isMerge(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   function getCFG() in line 806
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   function getIndex(FieldDescriptor) in line 633
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable addedFields defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable cpg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getSlashedClassName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function handleExceptions(Subroutine,InstructionHandle,BasicBlock) in line 949
      31 lines of code
      3 parameters
      6 conditional paths
      uses function setExceptionThrower(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable exceptionHandlerMap defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getHandlerList(InstructionHandle) defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
      uses function addEdgeAndExplore(BasicBlock,InstructionHandle,@Edge.Type int) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses variable HANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function setUnhandledExceptionBlock(BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
   function inline(Context) in line 1070
      protection public
      148 lines of code
      1 parameters
      14 conditional paths
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable next defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function addInstruction(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function setExceptionThrower(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isExceptionHandler() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function setExceptionGen(@Nullable TypeMerger,CodeExceptionGen) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionGen() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable JSR_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable jsrSubroutineMap defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getBlock(BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
      uses function getStartBlock() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function createEdge(BasicBlock,BasicBlock,@Edge.Type int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable GOTO_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getBlock(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function mapBlock(BasicBlock,BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
      uses function getExit() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function escapeTargetIterator(BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function getTarget() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::EscapeTarget
      uses function getCaller() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
      uses function getSubroutine() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
      uses function containsInstruction(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function getEdgeType() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::EscapeTarget
      uses function isReturnBlock(BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
      uses variable RETURN_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function isExitBlock(BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses variable EXIT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function isUnhandledExceptionBlock(BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses variable UNHANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function inlineAll() in line 1049
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable topLevelSubroutine defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function mapBlock(BasicBlock,BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getExit() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getBlock(BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
      uses function getStartBlock() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function createEdge(BasicBlock,BasicBlock,@Edge.Type int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable START_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function isMerge(InstructionHandle) in line 1028
      13 lines of code
      1 parameters
      4 conditional paths
   function isPEI(InstructionHandle) in line 988
      32 lines of code
      1 parameters
      9 conditional paths
   function main(String[]) in line 1222
      protection public
      36 lines of code
      1 parameters
      5 conditional paths
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function BetterCFGBuilder2(@Nonnull MethodDescriptor,@Nonnull MethodGen) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable cfg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function print(PrintStream) defined in edu::umd::cs::findbugs::ba::CFGPrinter
   function optimize(InstructionList) in line 643
      protection public
      125 lines of code
      1 parameters
      24 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getAccessMethodForField() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function getIndex(FieldDescriptor) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   function BetterCFGBuilder2(@Nonnull MethodDescriptor,@Nonnull MethodGen) in line 612
      protection public
      20 lines of code
      2 parameters
      2 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   variable addedFields in line 595
   variable cfg in line 598
   variable cpg in line 585
   variable DEBUG in line 94
   variable exceptionHandlerMap in line 587
   variable jsrSubroutineMap in line 593
   variable methodGen in line 583
   variable subroutineWorkList in line 591
   variable topLevelSubroutine in line 596
   variable usedInstructionSet in line 589
module edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   function getBasicBlock() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   function getStartInstruction() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable start defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   function WorkListItem(InstructionHandle,BasicBlock) in line 118
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable start defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   variable basicBlock in line 108
   variable start in line 106
module edu::umd::cs::findbugs::ba::BetterCFGBuilder2::EscapeTarget
   function getEdgeType() in line 174
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTarget() in line 166
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function EscapeTarget(InstructionHandle,@Edge.Type int) in line 158
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable edgeType in line 147
   variable target in line 144
module edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
   function addEdge(BasicBlock,BasicBlock,@Edge.Type int) in line 428
      protection public
      10 lines of code
      3 parameters
      3 conditional paths
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function isExceptionHandler() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable HANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function createEdge(BasicBlock,BasicBlock,@Edge.Type int) defined in edu::umd::cs::findbugs::ba::CFG
   function addEdgeAndExplore(BasicBlock,InstructionHandle,@Edge.Type int) in line 402
      protection public
      15 lines of code
      3 parameters
      3 conditional paths
      uses variable usedInstructionSet defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   function addInstruction(InstructionHandle) in line 294
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable usedInstructionSet defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   function addItem(WorkListItem) in line 239
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function allocateBasicBlock() in line 232
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function allocate() defined in edu::umd::cs::findbugs::ba::CFG
   function containsInstruction(InstructionHandle) in line 306
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function escapeTargetIterator(BasicBlock) in line 446
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getBlock(InstructionHandle) in line 320
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable start defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
      uses variable exceptionHandlerMap defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getHandlerForStartInstruction(InstructionHandle) defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
      uses function setExceptionGen(@Nullable TypeMerger,CodeExceptionGen) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function WorkListItem(InstructionHandle,BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   function getCFG() in line 282
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getEntry() in line 260
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
   function getExit() in line 267
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
   function getStartBlock() in line 275
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable start defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   function getStartInstruction() in line 225
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable start defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   function hasMoreWork() in line 246
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isExitBlock(BasicBlock) in line 367
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function isReturnBlock(BasicBlock) in line 350
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function isUnhandledExceptionBlock(BasicBlock) in line 385
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function nextItem() in line 253
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setExitBlock(BasicBlock) in line 360
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function setReturnBlock(BasicBlock) in line 343
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function setUnhandledExceptionBlock(BasicBlock) in line 378
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function Subroutine(InstructionHandle) in line 210
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses variable start defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   variable blockMap in line 192
   variable cfgSub in line 190
   variable escapeTargetListMap in line 194
   variable exitBlockSet in line 198
   variable instructionSet in line 188
   variable returnBlockSet in line 196
   variable start in line 186
   variable unhandledExceptionBlockSet in line 200
   variable workList in line 202
module edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
   function checkForRecursion() in line 565
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable subroutine defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
      uses variable caller defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
   function getBlock(BasicBlock) in line 552
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function allocate() defined in edu::umd::cs::findbugs::ba::CFG
   function getCaller() in line 492
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getResult() in line 506
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSubroutine() in line 499
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasMoreWork() in line 520
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function mapBlock(BasicBlock,BasicBlock) in line 540
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function nextItem() in line 527
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Context(@Nullable Context,Subroutine,CFG) in line 481
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
   variable blockMap in line 467
   variable caller in line 461
   variable result in line 465
   variable subroutine in line 463
   variable workList in line 469
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/BlockOrder.java
module edu::umd::cs::findbugs::ba::BlockOrder
   function blockIterator() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function compare(BasicBlock,BasicBlock) in line 36
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/BlockType.java
module edu::umd::cs::findbugs::ba::BlockType
   inherits from java::util::BitSet
   function copyFrom(BlockType) in line 191
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable isValid defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable isTop defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
   function equals(Object) in line 85
      protection public
      22 lines of code
      1 parameters
      7 conditional paths
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
      uses function isTop() defined in edu::umd::cs::findbugs::ba::BlockType
      uses function isValid() defined in edu::umd::cs::findbugs::ba::BlockType
   function getDepth() in line 119
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
   function getTopValue() in line 129
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
   function hashCode() in line 75
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
      uses function isTop() defined in edu::umd::cs::findbugs::ba::BlockType
      uses function isValid() defined in edu::umd::cs::findbugs::ba::BlockType
   function isBottom() in line 173
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::BlockType
      uses function isTop() defined in edu::umd::cs::findbugs::ba::BlockType
   function isNormal() in line 140
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::BlockType
      uses function getDepth() defined in edu::umd::cs::findbugs::ba::BlockType
   function isTop() in line 158
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::BlockType
   function isValid() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function mergeWith(BlockType) in line 239
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::BlockType
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::BlockType
      uses function copyFrom(BlockType) defined in edu::umd::cs::findbugs::ba::BlockType
      uses function isValid() defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
   function push(boolean) in line 285
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
   function pushCatch() in line 258
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function push(boolean) defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable CATCH defined in edu::umd::cs::findbugs::ba::BlockType
   function pushFinally() in line 265
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function push(boolean) defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable FINALLY defined in edu::umd::cs::findbugs::ba::BlockType
   function sameAs(BlockType) in line 209
      protection public
      23 lines of code
      1 parameters
      6 conditional paths
      uses variable isValid defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable isTop defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
   function setBottom() in line 180
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setNormal() in line 150
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setTop() in line 165
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 270
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::BlockType
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable CATCH defined in edu::umd::cs::findbugs::ba::BlockType
   variable CATCH in line 58
      protection public
   variable depth in line 66
   variable FINALLY in line 60
      protection public
   variable isTop in line 64
   variable isValid in line 62
   variable serialVersionUID in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/BlockTypeAnalysis.java
module edu::umd::cs::findbugs::ba::BlockTypeAnalysis
   inherits from BasicAbstractDataflowAnalysis< BlockType >
   function copy(BlockType,BlockType) in line 56
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(BlockType) defined in edu::umd::cs::findbugs::ba::BlockType
   function createFact() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBlockOrder(CFG) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::BlockTypeAnalysis
   function initEntryFact(BlockType) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isForwards() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTop(BlockType) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::BlockType
   function makeFactTop(BlockType) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::BlockType
   function meetInto(BlockType,Edge,BlockType) in line 113
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function same(BlockType,BlockType) in line 86
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function sameAs(BlockType) defined in edu::umd::cs::findbugs::ba::BlockType
   function transfer(BasicBlock,@CheckForNull InstructionHandle,BlockType,BlockType) in line 91
      protection public
      20 lines of code
      4 parameters
      4 conditional paths
   function BlockTypeAnalysis(DepthFirstSearch) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::BlockTypeAnalysis
   variable dfs in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/BlockTypeDataflow.java
module edu::umd::cs::findbugs::ba::BlockTypeDataflow
   inherits from Dataflow< BlockType, BlockTypeAnalysis >
   function BlockTypeDataflow(CFG,BlockTypeAnalysis) in line 26
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< BlockType, BlockTypeAnalysis >
      uses variable analysis defined in Dataflow< BlockType, BlockTypeAnalysis >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/BytecodeScanner.java
module edu::umd::cs::findbugs::ba::BytecodeScanner
   inherits from org::apache::bcel::Constants
   function extractInt(byte[],int) in line 74
      4 lines of code
      2 parameters
      1 conditional paths
   function scan(byte[],Callback) in line 89
      protection public
      314 lines of code
      2 parameters
      210 conditional paths
      uses function unsignedValueOf(byte) defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses function handleInstruction(int,int) defined in edu::umd::cs::findbugs::ba::BytecodeScanner::Callback
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses variable PAD defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses function extractInt(byte[],int) defined in edu::umd::cs::findbugs::ba::BytecodeScanner
   function unsignedValueOf(byte) in line 55
      10 lines of code
      1 parameters
      2 conditional paths
   variable DEBUG in line 31
   variable PAD in line 79
module edu::umd::cs::findbugs::ba::BytecodeScanner::Callback
   function handleInstruction(int,int) in line 45
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ca/Call.java
module edu::umd::cs::findbugs::ba::ca::Call
   function equals(Object) in line 47
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function Call(String,String,String) defined in edu::umd::cs::findbugs::ba::ca::Call
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::ca::Call
      uses variable className defined in edu::umd::cs::findbugs::ba::ca::Call
      uses variable methodName defined in edu::umd::cs::findbugs::ba::ca::Call
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::ca::Call
   function getClassName() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::ca::Call
   function getMethodName() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::ca::Call
   function getMethodSig() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::ca::Call
   function hashCode() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::ca::Call
      uses variable methodName defined in edu::umd::cs::findbugs::ba::ca::Call
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::ca::Call
   function Call(String,String,String) in line 28
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::ca::Call
      uses variable methodName defined in edu::umd::cs::findbugs::ba::ca::Call
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::ca::Call
   variable className in line 22
   variable methodName in line 24
   variable methodSig in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ca/CallList.java
module edu::umd::cs::findbugs::ba::ca::CallList
   function add(Call) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function callIterator() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function clear() in line 61
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function copyFrom(CallList) in line 78
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function equals(Object) in line 108
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function CallList() defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function get(int) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function hashCode() in line 117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function isBottom() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTop() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isValid() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::ca::CallList
   function merge(CallList,CallList) in line 85
      protection public
      21 lines of code
      2 parameters
      6 conditional paths
      uses function CallList() defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses variable isTop defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses function copyFrom(CallList) defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses function size() defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses function get(int) defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::ca::Call
      uses function add(Call) defined in edu::umd::cs::findbugs::ba::ca::CallList
   function setBottom() in line 55
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function setTop() in line 49
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function size() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function toString() in line 122
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function CallList() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable callList in line 27
   variable isTop in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ca/CallListAnalysis.java
module edu::umd::cs::findbugs::ba::ca::CallListAnalysis
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflowAnalysis
   function buildCallMap(CFG,ConstantPoolGen) in line 52
      16 lines of code
      2 parameters
      3 conditional paths
      uses variable callMap defined in edu::umd::cs::findbugs::ba::ca::CallListAnalysis
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
   function copy(CallList,CallList) in line 115
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(CallList) defined in edu::umd::cs::findbugs::ba::ca::CallList
   function createFact() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBlockOrder(CFG) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ca::CallListAnalysis
   function initEntryFact(CallList) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function clear() defined in edu::umd::cs::findbugs::ba::ca::CallList
   function isFactValid(CallList) in line 129
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::ca::CallList
   function isForwards() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTop(CallList) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::ca::CallList
   function makeFactTop(CallList) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::ca::CallList
   function meetInto(CallList,Edge,CallList) in line 109
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function copyFrom(CallList) defined in edu::umd::cs::findbugs::ba::ca::CallList
   function same(CallList,CallList) in line 104
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::ca::CallList
   function transferInstruction(InstructionHandle,BasicBlock,CallList) in line 120
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable callMap defined in edu::umd::cs::findbugs::ba::ca::CallListAnalysis
   function CallListAnalysis(CFG,DepthFirstSearch,ConstantPoolGen) in line 46
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ca::CallListAnalysis
      uses function buildCallMap(CFG,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::ca::CallListAnalysis
   variable callMap in line 44
   variable dfs in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ca/CallListDataflow.java
module edu::umd::cs::findbugs::ba::ca::CallListDataflow
   inherits from edu::umd::cs::findbugs::ba::Dataflow
   function CallListDataflow(CFG,CallListAnalysis) in line 30
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable analysis defined in edu::umd::cs::findbugs::ba::Dataflow
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/CFG.java
module edu::umd::cs::findbugs::ba::CFG
   inherits from edu::umd::cs::findbugs::graph::AbstractGraph
   inherits from edu::umd::cs::findbugs::ba::Debug
   function allocate() in line 529
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addVertex(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function allocateEdge(BasicBlock,BasicBlock) in line 568
      3 lines of code
      2 parameters
      1 conditional paths
   function blockIterator() in line 303
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function vertexIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function blocks() in line 311
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function vertices() defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function checkIntegrity() in line 551
      protection public
      15 lines of code
      0 parameters
      4 conditional paths
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function clearFlag(int) in line 211
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::ba::CFG
   function createEdge(BasicBlock,BasicBlock,@Edge.Type int) in line 258
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function setType(@Type int) defined in edu::umd::cs::findbugs::ba::Edge
   function getBlocks(BitSet) in line 357
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function getBlocksContainingInstructionWithOffset(int) in line 377
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function containsInstructionWithOffset(int) defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getEdgeWithType(Iterator< Edge >,@Type int) in line 515
      9 lines of code
      2 parameters
      3 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
   function getEntry() in line 226
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable entry defined in edu::umd::cs::findbugs::ba::CFG
      uses function allocate() defined in edu::umd::cs::findbugs::ba::CFG
   function getExceptionThrowerLocation(Edge) in line 445
      protection public
      34 lines of code
      1 parameters
      8 conditional paths
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getSuccessorWithEdgeType(BasicBlock,@Type int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable removedEdgeList defined in edu::umd::cs::findbugs::ba::CFG
   function getExit() in line 236
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function allocate() defined in edu::umd::cs::findbugs::ba::CFG
   function getFlags() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::ba::CFG
   function getIncomingEdgeWithType(BasicBlock,@Type int) in line 498
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getEdgeWithType(Iterator< Edge >,@Type int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function incomingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function getLocationAtEntry() in line 619
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getLocationsContainingInstructionWithOffset(int) in line 396
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function getMaxEdgeId() in line 547
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNumEdgeLabels() defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function getMethodGen() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::CFG
   function getMethodName() in line 195
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::CFG
   function getMethodSig() in line 199
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::CFG
   function getNumBasicBlocks() in line 539
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNumVertices() defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function getNumNonExceptionSucessors(BasicBlock) in line 597
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
   function getOutgoingEdgeWithType(BasicBlock,@Type int) in line 511
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getEdgeWithType(Iterator< Edge >,@Type int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function getPredecessorWithEdgeType(BasicBlock,@Type int) in line 417
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getIncomingEdgeWithType(BasicBlock,@Type int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getPreviousLocation(Location) in line 625
      protection public
      26 lines of code
      1 parameters
      5 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getPredecessorWithEdgeType(BasicBlock,@Type int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getSuccessorWithEdgeType(BasicBlock,@Type int) in line 432
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getOutgoingEdgeWithType(BasicBlock,@Type int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function isFlagSet(int) in line 219
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::ba::CFG
   function locationIterator() in line 318
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function LocationIterator() defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
   function locations() in line 325
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
   function lookupBlockByLabel(int) in line 290
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function lookupEdgeById(int) in line 271
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getId() defined in edu::umd::cs::findbugs::ba::Edge
   function orderedLocations() in line 341
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
   function removedEdgeIterator() in line 485
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable removedEdgeList defined in edu::umd::cs::findbugs::ba::CFG
   function removeEdge(Edge) in line 580
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable removedEdgeList defined in edu::umd::cs::findbugs::ba::CFG
   function setFlag(int) in line 207
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::ba::CFG
   function setFlags(int) in line 203
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::ba::CFG
   function setMethodGen(MethodGen) in line 184
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::CFG
   function setMethodName(String) in line 180
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::CFG
   function CFG() in line 173
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable BUSY in line 73
      protection public
   variable entry in line 153
   variable flags in line 155
   variable FOUND_INEXACT_UNCONDITIONAL_THROWERS in line 75
      protection public
   variable methodGen in line 159
   variable methodName in line 157
   variable PRUNED_FAILED_ASSERTION_EDGES in line 70
      protection public
   variable PRUNED_INFEASIBLE_EXCEPTIONS in line 52
      protection public
   variable PRUNED_UNCONDITIONAL_THROWERS in line 58
      protection public
   variable REFINED in line 64
      protection public
   variable removedEdgeList in line 161
module edu::umd::cs::findbugs::ba::CFG::LocationIterator
   inherits from java::util::Iterator
   function findNext() in line 125
      20 lines of code
      0 parameters
      5 conditional paths
      uses function next() defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
      uses variable instructionIter defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
      uses variable blockIter defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
      uses variable curBlock defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function hasNext() in line 104
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
      uses function next() defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
   function next() in line 110
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
   function remove() in line 121
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function LocationIterator() in line 98
      4 lines of code
      0 parameters
      1 conditional paths
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function findNext() defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
   variable blockIter in line 90
   variable curBlock in line 92
   variable instructionIter in line 94
   variable next in line 96
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/CFGBuilder.java
module edu::umd::cs::findbugs::ba::CFGBuilder
   function build() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCFG() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/CFGBuilderException.java
module edu::umd::cs::findbugs::ba::CFGBuilderException
   inherits from edu::umd::cs::findbugs::classfile::CheckedAnalysisException
   function CFGBuilderException(String) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable serialVersionUID in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/CFGBuilderFactory.java
module edu::umd::cs::findbugs::ba::CFGBuilderFactory
   function create(@Nonnull MethodDescriptor,@Nonnull MethodGen) in line 48
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/CFGPrinter.java
module edu::umd::cs::findbugs::ba::CFGPrinter
   function blockAnnotate(BasicBlock) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function blockStartAnnotate(BasicBlock) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function edgeAnnotate(Edge) in line 83
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function instructionAnnotate(InstructionHandle,BasicBlock) in line 95
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function instructionIterator(BasicBlock) in line 99
      7 lines of code
      1 parameters
      2 conditional paths
      uses function isForwards() defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function instructionReverseIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isForwards() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function print(PrintStream) in line 55
      protection public
      27 lines of code
      1 parameters
      6 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function blockStartAnnotate(BasicBlock) defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionGen() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function instructionIterator(BasicBlock) defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function instructionAnnotate(InstructionHandle,BasicBlock) defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function blockAnnotate(BasicBlock) defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function isForwards() defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function incomingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function formatAsString(boolean) defined in edu::umd::cs::findbugs::ba::Edge
      uses function edgeAnnotate(Edge) defined in edu::umd::cs::findbugs::ba::CFGPrinter
   function setIsForwards(boolean) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isForwards() defined in edu::umd::cs::findbugs::ba::CFGPrinter
   function CFGPrinter(CFG) in line 39
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::CFGPrinter
   variable cfg in line 35
   variable isForwards in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ch/ClassVertex.java
module edu::umd::cs::findbugs::ba::ch::ClassVertex
   inherits from edu::umd::cs::findbugs::graph::AbstractVertex
   function createMissingClassVertex(ClassDescriptor,boolean) in line 109
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function createResolvedClassVertex(ClassDescriptor,XClass) in line 96
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function equals(Object) in line 57
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function getClassDescriptor() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDirectSuperclass() in line 193
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getXClass() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isApplicationClass() in line 162
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isFinished() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isFlagSet(int) in line 205
      3 lines of code
      1 parameters
      1 conditional paths
   function isInterface() in line 176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isResolved() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function markAsApplicationClass() in line 154
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setDirectSuperclass(ClassVertex) in line 186
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFinished(boolean) in line 140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFlag(int,boolean) in line 197
      7 lines of code
      2 parameters
      1 conditional paths
   function setInterface() in line 169
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ClassVertex(ClassDescriptor,XClass) in line 69
      8 lines of code
      2 parameters
      1 conditional paths
   function ClassVertex(ClassDescriptor,boolean) in line 78
      8 lines of code
      2 parameters
      1 conditional paths
   variable APPLICATION_CLASS in line 38
   variable classDescriptor in line 42
   variable directSuperclass in line 49
   variable FINISHED in line 36
   variable flags in line 47
   variable INTERFACE in line 40
   variable xclass in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ch/InheritanceEdge.java
module edu::umd::cs::findbugs::ba::ch::InheritanceEdge
   inherits from edu::umd::cs::findbugs::graph::AbstractEdge
   function InheritanceEdge(ClassVertex,ClassVertex) in line 32
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable target defined in edu::umd::cs::findbugs::graph::AbstractEdge
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ch/InheritanceGraph.java
module edu::umd::cs::findbugs::ba::ch::InheritanceGraph
   inherits from edu::umd::cs::findbugs::graph::AbstractGraph
   function allocateEdge(ClassVertex,ClassVertex) in line 39
      3 lines of code
      2 parameters
      1 conditional paths
   function createEdge(ClassVertex,ClassVertex) in line 51
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ch/InheritanceGraphVisitor.java
module edu::umd::cs::findbugs::ba::ch::InheritanceGraphVisitor
   function visitClass(ClassDescriptor,@CheckForNull XClass) in line 44
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visitEdge(ClassDescriptor,XClass,ClassDescriptor,@CheckForNull XClass) in line 60
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ch/InterproceduralCallGraph.java
module edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraph
   inherits from edu::umd::cs::findbugs::graph::AbstractGraph
   function addVertex(InterproceduralCallGraphVertex) in line 53
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable methodDescToVertexMap defined in edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraph
      uses function getXmethod() defined in edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraphVertex
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
   function allocateEdge(InterproceduralCallGraphVertex,InterproceduralCallGraphVertex) in line 78
      4 lines of code
      2 parameters
      1 conditional paths
   function lookupVertex(MethodDescriptor) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodDescToVertexMap defined in edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraph
   function InterproceduralCallGraph() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable methodDescToVertexMap in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ch/InterproceduralCallGraphEdge.java
module edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraphEdge
   inherits from edu::umd::cs::findbugs::graph::AbstractEdge
   function InterproceduralCallGraphEdge(InterproceduralCallGraphVertex,InterproceduralCallGraphVertex) in line 40
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable target defined in edu::umd::cs::findbugs::graph::AbstractEdge
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ch/InterproceduralCallGraphVertex.java
module edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraphVertex
   inherits from edu::umd::cs::findbugs::graph::AbstractVertex
   function getXmethod() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraphVertex
   function setXmethod(XMethod) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraphVertex
   variable xmethod in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ch/OverriddenMethodsVisitor.java
module edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
   inherits from edu::umd::cs::findbugs::ba::ch::SupertypeTraversalVisitor
   abstract class
   function getXmethod() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
   function visitClass(ClassDescriptor,XClass) in line 64
      protection public
      26 lines of code
      2 parameters
      4 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
      uses function bridgeFrom() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isInterface() defined in edu::umd::cs::findbugs::ba::XClass
      uses function visitOverriddenMethod(XMethod) defined in edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
   function visitOverriddenMethod(XMethod) in line 103
      1 lines of code
      1 parameters
      1 conditional paths
   function OverriddenMethodsVisitor(XMethod) in line 44
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   variable xmethod in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ch/Subtypes2.java
module edu::umd::cs::findbugs::ba::ch::Subtypes2
   function addApplicationClass(XClass) in line 223
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function getXMethods() defined in edu::umd::cs::findbugs::ba::XClass
      uses function addClassAndGetClassVertex(XClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function addClass(XClass) in line 251
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addClassAndGetClassVertex(XClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function addClassAndGetClassVertex(XClass) in line 262
      28 lines of code
      1 parameters
      5 conditional paths
      uses variable classDescriptorToVertexMap defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function addVertexToGraph(ClassDescriptor,ClassVertex) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function addSupertypeEdges(ClassVertex,LinkedList< XClass >) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function addClassVertexForMissingClass(ClassDescriptor,boolean) in line 1380
      10 lines of code
      2 parameters
      1 conditional paths
      uses function addVertexToGraph(ClassDescriptor,ClassVertex) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function addInheritanceEdge(ClassVertex,ClassDescriptor,boolean,@CheckForNull LinkedList< XClass >) in line 1334
      37 lines of code
      4 parameters
      7 conditional paths
      uses variable classDescriptorToVertexMap defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addClassVertexForMissingClass(ClassDescriptor,boolean) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function addVertexToGraph(ClassDescriptor,ClassVertex) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable graph defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function lookupEdge(VertexType,VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function createEdge(ClassVertex,ClassVertex) defined in edu::umd::cs::findbugs::ba::ch::InheritanceGraph
   function addSupertypeEdges(ClassVertex,LinkedList< XClass >) in line 1306
      14 lines of code
      2 parameters
      3 conditional paths
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function addInheritanceEdge(ClassVertex,ClassDescriptor,boolean,@CheckForNull LinkedList< XClass >) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
   function addToWorkList(LinkedList< SupertypeTraversalPath >,SupertypeTraversalPath,ClassDescriptor) in line 1045
      15 lines of code
      3 parameters
      2 conditional paths
      uses variable classDescriptorToVertexMap defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function hasBeenSeen(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeTraversalPath
      uses function fork(ClassVertex) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeTraversalPath
   function addVertexToGraph(ClassDescriptor,ClassVertex) in line 291
      20 lines of code
      2 parameters
      4 conditional paths
      uses variable classDescriptorToVertexMap defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable graph defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function addVertex(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable xclassSet defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function addInheritanceEdge(ClassVertex,ClassDescriptor,boolean,@CheckForNull LinkedList< XClass >) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function checkFirstCommonSuperclassQueryCache(ReferenceType,ReferenceType) in line 784
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable firstCommonSuperclassQueryCache defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function get(K1,K2) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
   function computeFirstCommonSuperclassOfDifferentDimensionArrays(ArrayType,ArrayType) in line 642
      38 lines of code
      2 parameters
      4 conditional paths
   function computeFirstCommonSuperclassOfObjectTypes(ObjectType,ObjectType) in line 716
      58 lines of code
      2 parameters
      10 conditional paths
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function resolveClassVertex(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function computeKnownSupertypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getAllSuperclassVertices(ClassVertex) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getPackageName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function computeFirstCommonSuperclassOfReferenceTypes(ReferenceType,ReferenceType) in line 558
      28 lines of code
      2 parameters
      4 conditional paths
      uses function computeFirstCommonSuperclassOfSameDimensionArrays(ArrayType,ArrayType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function computeFirstCommonSuperclassOfDifferentDimensionArrays(ArrayType,ArrayType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getFirstCommonSuperclass(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function computeFirstCommonSuperclassOfSameDimensionArrays(ArrayType,ArrayType) in line 597
      34 lines of code
      2 parameters
      3 conditional paths
      uses function getFirstCommonSuperclass(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function computeKnownSubtypes(ClassDescriptor) in line 1089
      29 lines of code
      1 parameters
      4 conditional paths
      uses function resolveClassVertex(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable graph defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function incomingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function computeKnownSupertypes(ClassDescriptor) in line 1156
      29 lines of code
      1 parameters
      4 conditional paths
      uses function resolveClassVertex(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable graph defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function computeSupertypes(ClassDescriptor) in line 1210
      42 lines of code
      1 parameters
      7 conditional paths
      uses variable DEBUG_QUERIES defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function optionallyResolveClassVertex(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable supertypeSet defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeQueryResults
      uses variable graph defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getAllSuperclassVertices(ClassVertex) in line 802
      12 lines of code
      1 parameters
      3 conditional paths
   function getDirectSubtypes(ClassDescriptor) in line 857
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses function resolveClassVertex(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable graph defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function incomingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getFirstCommonSuperclass(ReferenceType,ReferenceType) in line 544
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses function checkFirstCommonSuperclassQueryCache(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function computeFirstCommonSuperclassOfReferenceTypes(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function putFirstCommonSuperclassQueryCache(ReferenceType,ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function getFirstCommonSuperclass(ObjectType,ObjectType) in line 701
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses function checkFirstCommonSuperclassQueryCache(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function computeFirstCommonSuperclassOfObjectTypes(ObjectType,ObjectType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable firstCommonSuperclassQueryCache defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function put(K1,K2,V) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
   function getGraph() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable graph defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function getSubtypes(ClassDescriptor) in line 824
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable subtypeSetMap defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function computeKnownSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function getSupertypeQueryResults(ClassDescriptor) in line 1194
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable supertypeSetMap defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function computeSupertypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function getTransitiveCommonSubtypes(ClassDescriptor,ClassDescriptor) in line 881
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function getSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function getXClassCollection() in line 896
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable xclassSet defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function hasKnownSubclasses(ClassDescriptor) in line 1120
      protection public
      36 lines of code
      1 parameters
      6 conditional paths
      uses function resolveClassVertex(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable graph defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function incomingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function hasSubtypes(ClassDescriptor) in line 841
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getDirectSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function instanceOf(@DottedClassName String,@DottedClassName String) in line 171
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function instanceOf(ClassDescriptor,Class<?>) in line 183
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function instanceOf(@DottedClassName String,@DottedClassName String) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function instanceOf(ClassDescriptor,@DottedClassName String) in line 187
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function instanceOf(JavaClass,@DottedClassName String) in line 198
      protection public
      17 lines of code
      2 parameters
      4 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function isApplicationClass(ClassDescriptor) in line 234
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function resolveClassVertex(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function isCollection(ReferenceType) in line 137
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function isContainer(ReferenceType) in line 142
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function isJSP(JavaClass) in line 149
      protection public
      21 lines of code
      1 parameters
      6 conditional paths
      uses function instanceOf(@DottedClassName String,@DottedClassName String) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function isSubtype(ReferenceType,ReferenceType) in line 326
      protection public
      74 lines of code
      2 parameters
      12 conditional paths
      uses variable SERIALIZABLE defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable CLONEABLE defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function isSubtype(ClassDescriptor,ClassDescriptor) in line 403
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function isSubtype0(ClassDescriptor,ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function isSubtype(ClassDescriptor,ClassDescriptor...) in line 413
      protection public
      23 lines of code
      2 parameters
      8 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getSupertypeQueryResults(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function containsType(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeQueryResults
   function isSubtype(ObjectType,ObjectType) in line 507
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
      uses variable DEBUG_QUERIES defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function isSubtype0(ClassDescriptor,ClassDescriptor) in line 437
      protection public
      55 lines of code
      2 parameters
      11 conditional paths
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getSupertypeQueryResults(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function containsType(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeQueryResults
   function optionallyResolveClassVertex(ClassDescriptor) in line 1275
      20 lines of code
      1 parameters
      3 conditional paths
      uses variable classDescriptorToVertexMap defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addClassVertexForMissingClass(ClassDescriptor,boolean) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function addClassAndGetClassVertex(XClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function putFirstCommonSuperclassQueryCache(ReferenceType,ReferenceType,ReferenceType) in line 775
      8 lines of code
      3 parameters
      2 conditional paths
      uses variable firstCommonSuperclassQueryCache defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function put(K1,K2,V) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
   function resolveClassVertex(ClassDescriptor) in line 1264
      10 lines of code
      1 parameters
      2 conditional paths
      uses function optionallyResolveClassVertex(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function traverseEdge(ClassVertex,@CheckForNull ClassDescriptor,boolean,InheritanceGraphVisitor) in line 1061
      20 lines of code
      4 parameters
      4 conditional paths
      uses variable classDescriptorToVertexMap defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function resolveClassVertex(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function addClassVertexForMissingClass(ClassDescriptor,boolean) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function visitEdge(ClassDescriptor,XClass,ClassDescriptor,@CheckForNull XClass) defined in edu::umd::cs::findbugs::ba::ch::InheritanceGraphVisitor
   function traverseSupertypes(ClassDescriptor,InheritanceGraphVisitor) in line 958
      protection public
      37 lines of code
      2 parameters
      7 conditional paths
      uses function resolveClassVertex(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getNext() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeTraversalPath
      uses function hasBeenSeen(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeTraversalPath
      uses function markSeen(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeTraversalPath
      uses function getXClass() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function traverseEdge(ClassVertex,@CheckForNull ClassDescriptor,boolean,InheritanceGraphVisitor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function addToWorkList(LinkedList< SupertypeTraversalPath >,SupertypeTraversalPath,ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
   function traverseSupertypesDepthFirst(ClassDescriptor,SupertypeTraversalVisitor) in line 1009
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function traverseSupertypesDepthFirstHelper(ClassDescriptor,SupertypeTraversalVisitor,Set< ClassDescriptor >) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function traverseSupertypesDepthFirstHelper(ClassDescriptor,SupertypeTraversalVisitor,Set< ClassDescriptor >) in line 1013
      31 lines of code
      3 parameters
      6 conditional paths
      uses function resolveClassVertex(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getXClass() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
   function Subtypes2() in line 116
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   variable classDescriptorToVertexMap in line 70
   variable CLONEABLE in line 82
   variable DEBUG in line 64
      protection public
   variable DEBUG_QUERIES in line 66
      protection public
   variable ENABLE_SUBTYPES2_FOR_COMMON_SUPERCLASS_QUERIES in line 62
      protection public
   variable firstCommonSuperclassQueryCache in line 78
   variable graph in line 68
   variable SERIALIZABLE in line 80
   variable subtypeSetMap in line 74
   variable supertypeSetMap in line 72
   variable xclassSet in line 76
module edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeQueryResults
   function addSupertype(ClassDescriptor) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable supertypeSet defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeQueryResults
   function containsType(ClassDescriptor) in line 100
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable supertypeSet defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeQueryResults
      uses variable encounteredMissingClasses defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeQueryResults
   function setEncounteredMissingClasses(boolean) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable encounteredMissingClasses defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeQueryResults
   variable encounteredMissingClasses in line 90
   variable supertypeSet in line 88
module edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeTraversalPath
   function fork(ClassVertex) in line 936
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function setNext(ClassVertex) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2::SupertypeTraversalPath
   function getNext() in line 919
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasBeenSeen(ClassDescriptor) in line 923
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function markSeen(ClassDescriptor) in line 927
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNext(ClassVertex) in line 931
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 915
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SupertypeTraversalPath(@CheckForNull ClassVertex) in line 909
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ch/SupertypeTraversalVisitor.java
module edu::umd::cs::findbugs::ba::ch::SupertypeTraversalVisitor
   function visitClass(ClassDescriptor,XClass) in line 43
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/CheckReturnAnnotationDatabase.java
module edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
   inherits from AnnotationDatabase< CheckReturnValueAnnotation >
   function addWarningAboutSubmit(Class<?extends ExecutorService >) in line 215
      11 lines of code
      1 parameters
      1 conditional paths
      uses function addMethodAnnotation(Class<?>,String,String,boolean,AnnotationEnum) defined in AnnotationDatabase< CheckReturnValueAnnotation >
      uses variable CHECK_RETURN_VALUE_MEDIUM_BAD_PRACTICE defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_LOW_BAD_PRACTICE defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
   function getResolvedAnnotation(Object,boolean) in line 228
      protection public
      34 lines of code
      2 parameters
      11 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable throwableClass defined in edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable CHECK_RETURN_VALUE_VERY_HIGH defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_LOW defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable CHECK_RETURN_VALUE_MEDIUM defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
   function loadAuxiliaryAnnotations() in line 44
      protection public
      167 lines of code
      0 parameters
      4 conditional paths
      uses variable IGNORE_BUILTIN_ANNOTATIONS defined in AnnotationDatabase< CheckReturnValueAnnotation >
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addMethodAnnotation(Class<?>,String,String,boolean,AnnotationEnum) defined in AnnotationDatabase< CheckReturnValueAnnotation >
      uses variable CHECK_RETURN_VALUE_LOW defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_MEDIUM_BAD_PRACTICE defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_MEDIUM defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_HIGH defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_IGNORE defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_LOW_BAD_PRACTICE defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses function addWarningAboutSubmit(Class<?extends ExecutorService >) defined in edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
      uses function addDefaultMethodAnnotation(String,AnnotationEnum) defined in AnnotationDatabase< CheckReturnValueAnnotation >
      uses variable throwableClass defined in edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
   function CheckReturnAnnotationDatabase() in line 37
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setAddClassOnly(boolean) defined in AnnotationDatabase< CheckReturnValueAnnotation >
      uses function loadAuxiliaryAnnotations() defined in edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
   variable throwableClass in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/CheckReturnValueAnnotation.java
module edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
   inherits from AnnotationEnumeration< CheckReturnValueAnnotation >
   function getPattern() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPriority() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parse(String) in line 67
      protection public
      16 lines of code
      1 parameters
      5 conditional paths
      uses variable CHECK_RETURN_VALUE_MEDIUM defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_HIGH defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_LOW defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
   function values() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable myValues defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
   function CheckReturnValueAnnotation(String,int,int) in line 96
      5 lines of code
      3 parameters
      1 conditional paths
   function CheckReturnValueAnnotation(String,int,String,int) in line 102
      5 lines of code
      4 parameters
      1 conditional paths
   variable CHECK_RETURN_VALUE_HIGH in line 38
      protection public
   variable CHECK_RETURN_VALUE_IGNORE in line 47
      protection public
   variable CHECK_RETURN_VALUE_INFERRED in line 59
      protection public
   variable CHECK_RETURN_VALUE_LOW in line 44
      protection public
   variable CHECK_RETURN_VALUE_LOW_BAD_PRACTICE in line 53
      protection public
   variable CHECK_RETURN_VALUE_MEDIUM in line 41
      protection public
   variable CHECK_RETURN_VALUE_MEDIUM_BAD_PRACTICE in line 56
      protection public
   variable CHECK_RETURN_VALUE_UNKNOWN in line 35
      protection public
   variable CHECK_RETURN_VALUE_VERY_HIGH in line 50
      protection public
   variable myValues in line 62
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ClassContext.java
module edu::umd::cs::findbugs::ba::ClassContext
   function cachedBitsets() in line 459
      3 lines of code
      0 parameters
      1 conditional paths
      uses function get() defined in edu::umd::cs::findbugs::AnalysisLocal
   function cachedLoopExits() in line 498
      3 lines of code
      0 parameters
      13 conditional paths
      uses function get() defined in edu::umd::cs::findbugs::AnalysisLocal
   function dumpDataflowInformation(Method) in line 887
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getUnconditionalValueDerefDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function dumpDataflowInformation(Method,CFG,ValueNumberDataflow,IsNullValueDataflow,@CheckForNull UnconditionalValueDerefDataflow,@CheckForNull TypeDataflow) in line 901
      protection public
      32 lines of code
      6 parameters
      7 conditional paths
   function dumpLiveLocalStoreDataflow(MethodDescriptor,CFG,LiveLocalStoreDataflow) in line 951
      protection public
      16 lines of code
      3 parameters
      8 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable jclass defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function dumpSimpleDataflowInformation(Method) in line 873
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses function dumpDataflowInformation(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function dumpTypeDataflow(Method,CFG,TypeDataflow) in line 934
      protection public
      16 lines of code
      3 parameters
      3 conditional paths
   function getAnalysisContext() in line 263
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisContext defined in edu::umd::cs::findbugs::ba::ClassContext
   function getAssertionMethods() in line 710
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBlockTypeDataflow(Method) in line 687
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getBytecodeSet(Method) in line 413
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable jclass defined in edu::umd::cs::findbugs::ba::ClassContext
   function getBytecodeSet(JavaClass,Method) in line 430
      protection public
      28 lines of code
      2 parameters
      4 conditional paths
      uses function cachedBitsets() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function scan(byte[],Callback) defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses function getUnpackedCode() defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedBytecodeCallback
      uses function getBytecodeSet() defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedCode
   function getCallListDataflow(Method) in line 762
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getCFG(Method) in line 302
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getClassDescriptor() in line 216
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classInfo defined in edu::umd::cs::findbugs::ba::ClassContext
   function getCompactLocationNumbering(Method) in line 855
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getConstantDataflow(Method) in line 723
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getConstantPoolGen() in line 312
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDepthFirstSearch(Method) in line 368
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getExceptionSetFactory(Method) in line 642
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFullyQualifiedMethodName(Method) in line 238
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getIsNullValueDataflow(Method) in line 346
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getJavaClass() in line 208
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable jclass defined in edu::umd::cs::findbugs::ba::ClassContext
   function getLiveLocalStoreDataflow(Method) in line 676
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getLoadDataflow(Method) in line 736
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getLoadedFieldSet(Method) in line 665
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getLockChecker(Method) in line 581
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getLockDataflow(Method) in line 566
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getLookupFailureCallback() in line 272
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisContext defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getLoopExitBranches(Method,MethodGen) in line 464
      protection public
      33 lines of code
      2 parameters
      7 conditional paths
      uses function cachedLoopExits() defined in edu::umd::cs::findbugs::ba::ClassContext
   function getMethod(MethodGen) in line 227
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable jclass defined in edu::umd::cs::findbugs::ba::ClassContext
   function getMethodAnalysis(Class<?>,MethodDescriptor) in line 170
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getObjectMap(Class<?>) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getMethodGen(Method) in line 286
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMethodsInCallOrder() in line 243
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable classInfo defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses function getXMethodsInCallOrder() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   function getNonExceptionDominatorsAnalysis(Method) in line 604
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getNonExceptionPostDominatorsAnalysis(Method) in line 630
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getNonImplicitExceptionDominatorsAnalysis(Method) in line 617
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getObjectMap(Class<?>) in line 127
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable methodAnalysisObjectMap defined in edu::umd::cs::findbugs::ba::ClassContext
   function getOffsetToOpcodeMap(Method) in line 554
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getOffsetToBytecodeMap() defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedCode
   function getParameterSignatureList(Method) in line 654
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getReturnPathDataflow(Method) in line 592
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getReturnPathTypeDataflow(Method) in line 869
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getReverseDepthFirstSearch(Method) in line 379
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getStoreDataflow(Method) in line 749
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getTypeDataflow(Method) in line 357
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getUnconditionalValueDerefDataflow(Method) in line 842
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getUsagesRequiringNonNullValues(Method) in line 323
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getValueNumberDataflow(Method) in line 335
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getXClass() in line 212
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classInfo defined in edu::umd::cs::findbugs::ba::ClassContext
   function linesMentionedMultipleTimes(Method) in line 766
      protection public
      66 lines of code
      1 parameters
      15 conditional paths
      uses variable jclass defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function getNextJump(int) defined in edu::umd::cs::findbugs::OpcodeStack::JumpInfo
   function purgeAllMethodAnalyses() in line 175
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodAnalysisObjectMap defined in edu::umd::cs::findbugs::ba::ClassContext
   function purgeMethodAnalyses(MethodDescriptor) in line 185
      protection public
      19 lines of code
      1 parameters
      3 conditional paths
      uses variable methodAnalysisObjectMap defined in edu::umd::cs::findbugs::ba::ClassContext
   function putMethodAnalysis(Class<?>,MethodDescriptor,Object) in line 153
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses function getObjectMap(Class<?>) defined in edu::umd::cs::findbugs::ba::ClassContext
   function toString() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable jclass defined in edu::umd::cs::findbugs::ba::ClassContext
   function ClassContext(JavaClass,AnalysisContext) in line 115
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable jclass defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable analysisContext defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable classInfo defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   variable analysisContext in line 94
   variable classInfo in line 92
   variable DEBUG in line 84
      protection public
   variable DUMP_DATAFLOW_ANALYSIS in line 88
      protection public
   variable jclass in line 90
   variable methodAnalysisObjectMap in line 96
   variable TIME_ANALYSES in line 86
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ClassHash.java
module edu::umd::cs::findbugs::ba::ClassHash
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   inherits from Comparable
   function compareTo(ClassHash) in line 335
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
   function computeHash(JavaClass) in line 143
      protection public
      63 lines of code
      1 parameters
      5 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassHash
      uses function work(MessageDigest,String,CharsetEncoder) defined in edu::umd::cs::findbugs::ba::ClassHash
      uses function computeHash(Method) defined in edu::umd::cs::findbugs::ba::MethodHash
      uses variable methodHashMap defined in edu::umd::cs::findbugs::ba::ClassHash
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
   function equals(Object) in line 322
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function isSameHash(ClassHash) defined in edu::umd::cs::findbugs::ba::ClassHash
   function getClassHash() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
   function getClassName() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::ClassHash
   function getMethodHash(XMethod) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodHashMap defined in edu::umd::cs::findbugs::ba::ClassHash
   function hashCode() in line 307
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
   function hashToString(byte[]) in line 254
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable HEX_CHARS defined in edu::umd::cs::findbugs::ba::ClassHash
   function hexDigitValue(char) in line 263
      11 lines of code
      1 parameters
      4 conditional paths
   function isSameHash(ClassHash) in line 302
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
   function setClassHash(byte[]) in line 120
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
   function setMethodHash(XMethod,byte[]) in line 94
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable methodHashMap defined in edu::umd::cs::findbugs::ba::ClassHash
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function stringToHash(String) in line 282
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function hexDigitValue(char) defined in edu::umd::cs::findbugs::ba::ClassHash
   function toString() in line 348
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassHash
      uses function hashToString(byte[]) defined in edu::umd::cs::findbugs::ba::ClassHash
   function work(MessageDigest,String,CharsetEncoder) in line 207
      18 lines of code
      3 parameters
      2 conditional paths
   function writeXML(XMLOutput) in line 227
      protection public
      17 lines of code
      1 parameters
      2 conditional paths
      uses variable CLASS_HASH_ELEMENT_NAME defined in edu::umd::cs::findbugs::ba::ClassHash
      uses variable className defined in edu::umd::cs::findbugs::ba::ClassHash
      uses function hashToString(byte[]) defined in edu::umd::cs::findbugs::ba::ClassHash
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
      uses variable methodHashMap defined in edu::umd::cs::findbugs::ba::ClassHash
      uses variable METHOD_HASH_ELEMENT_NAME defined in edu::umd::cs::findbugs::ba::ClassHash
   function ClassHash() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ClassHash(String,byte[]) in line 79
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::ClassHash
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
   variable CLASS_HASH_ELEMENT_NAME in line 52
      protection public
   variable classHash in line 62
   variable className in line 60
   variable HEX_CHARS in line 245
   variable METHOD_HASH_ELEMENT_NAME in line 57
      protection public
   variable methodHashMap in line 64
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ClassMember.java
module edu::umd::cs::findbugs::ba::ClassMember
   inherits from java::io::Serializable
   inherits from edu::umd::cs::findbugs::ba::AccessibleEntity
   inherits from edu::umd::cs::findbugs::classfile::FieldOrMethodName
   function getClassName() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 54
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPackageName() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSignature() in line 60
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSourceSignature() in line 67
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isResolved() in line 72
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ClassNotFoundExceptionParser.java
module edu::umd::cs::findbugs::ba::ClassNotFoundExceptionParser
   function getMissingClassName(ClassNotFoundException) in line 67
      protection public
      28 lines of code
      1 parameters
      6 conditional paths
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable patternList defined in edu::umd::cs::findbugs::ba::ClassNotFoundExceptionParser
   variable BCEL_MISSING_CLASS_PATTERN in line 42
   variable patternList in line 48
   variable TYPE_REPOSITORY_MISSING_CLASS_PATTERN in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ClassSummary.java
module edu::umd::cs::findbugs::ba::ClassSummary
   function checksForEqualTo(ClassDescriptor,ClassDescriptor) in line 38
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::ba::ClassSummary
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable veryFunky defined in edu::umd::cs::findbugs::ba::ClassSummary
   function mightBeEqualTo(ClassDescriptor,ClassDescriptor) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable map defined in edu::umd::cs::findbugs::ba::ClassSummary
      uses variable veryFunky defined in edu::umd::cs::findbugs::ba::ClassSummary
   variable map in line 30
   variable veryFunky in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/CompactLocationNumbering.java
module edu::umd::cs::findbugs::ba::CompactLocationNumbering
   function build(CFG) in line 80
      9 lines of code
      1 parameters
      2 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses variable locationToNumberMap defined in edu::umd::cs::findbugs::ba::CompactLocationNumbering
      uses variable numberToLocationMap defined in edu::umd::cs::findbugs::ba::CompactLocationNumbering
   function getLocation(int) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable numberToLocationMap defined in edu::umd::cs::findbugs::ba::CompactLocationNumbering
   function getNumber(Location) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable locationToNumberMap defined in edu::umd::cs::findbugs::ba::CompactLocationNumbering
   function getSize() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable locationToNumberMap defined in edu::umd::cs::findbugs::ba::CompactLocationNumbering
   function CompactLocationNumbering(CFG) in line 42
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function build(CFG) defined in edu::umd::cs::findbugs::ba::CompactLocationNumbering
   variable locationToNumberMap in line 32
   variable numberToLocationMap in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ComparableField.java
module edu::umd::cs::findbugs::ba::ComparableField
   inherits from Comparable
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ComparableMethod.java
module edu::umd::cs::findbugs::ba::ComparableMethod
   inherits from Comparable
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/CompoundMethodChooser.java
module edu::umd::cs::findbugs::ba::CompoundMethodChooser
   inherits from edu::umd::cs::findbugs::ba::JavaClassAndMethodChooser
   function choose(JavaClassAndMethod) in line 34
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function choose(XMethod) in line 51
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function CompoundMethodChooser(JavaClassAndMethodChooser[]) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/constant/Constant.java
module edu::umd::cs::findbugs::ba::constant::Constant
   function equals(Object) in line 116
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function Constant(@Nullable Object) defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::constant::Constant
   function getConstantInt() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function getConstantString() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function getConstantValue() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function hashCode() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function isConstant() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function isConstantInteger() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isConstant() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function isConstantString() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isConstant() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function merge(Constant,Constant) in line 105
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function isConstant() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable NOT_CONSTANT defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function toString() in line 136
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function isConstant() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function Constant(@Nullable Object) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   variable NOT_CONSTANT in line 36
      protection public
   variable value in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/constant/ConstantAnalysis.java
module edu::umd::cs::findbugs::ba::constant::ConstantAnalysis
   inherits from edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   function createFact() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::constant::ConstantAnalysis
   function initEntryFact(ConstantFrame) in line 54
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function setValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable NOT_CONSTANT defined in edu::umd::cs::findbugs::ba::constant::Constant
   function meetInto(ConstantFrame,Edge,ConstantFrame) in line 71
      protection public
      18 lines of code
      3 parameters
      4 conditional paths
      uses function modifyFrame(FrameType,@CheckForNull FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses function pushValue(ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable NOT_CONSTANT defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses function mergeInto(FrameType,FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   function mergeValues(ConstantFrame,ConstantFrame,int) in line 91
      4 lines of code
      3 parameters
      1 conditional paths
   function transferInstruction(InstructionHandle,BasicBlock,ConstantFrame) in line 64
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable visitor defined in edu::umd::cs::findbugs::ba::constant::ConstantAnalysis
      uses function setFrameAndLocation(FrameType,Location) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function analyzeInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function ConstantAnalysis(MethodGen,DepthFirstSearch) in line 42
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::constant::ConstantAnalysis
   variable methodGen in line 38
   variable visitor in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/constant/ConstantDataflow.java
module edu::umd::cs::findbugs::ba::constant::ConstantDataflow
   inherits from edu::umd::cs::findbugs::ba::Dataflow
   function ConstantDataflow(CFG,ConstantAnalysis) in line 32
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable analysis defined in edu::umd::cs::findbugs::ba::Dataflow
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/constant/ConstantFrame.java
module edu::umd::cs::findbugs::ba::constant::ConstantFrame
   inherits from edu::umd::cs::findbugs::ba::Frame
   function ConstantFrame(int) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable numLocals defined in edu::umd::cs::findbugs::ba::Frame
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/constant/ConstantFrameModelingVisitor.java
module edu::umd::cs::findbugs::ba::constant::ConstantFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function getDefaultValue() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NOT_CONSTANT defined in edu::umd::cs::findbugs::ba::constant::Constant
   function visitBIPUSH(BIPUSH) in line 77
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitICONST(ICONST) in line 70
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitIINC(IINC) in line 54
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isConstantInteger() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getConstantInt() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable NOT_CONSTANT defined in edu::umd::cs::findbugs::ba::constant::Constant
   function visitLDC(LDC) in line 91
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitLDC2_W(LDC2_W) in line 98
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitSIPUSH(SIPUSH) in line 84
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function ConstantFrameModelingVisitor(ConstantPoolGen) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/Dataflow.java
module edu::umd::cs::findbugs::ba::Dataflow
   function blockId(BasicBlock) in line 454
      7 lines of code
      1 parameters
      1 conditional paths
   function debug(BasicBlock,String) in line 462
      4 lines of code
      2 parameters
      1 conditional paths
   function debug(BasicBlock,BasicBlock,Edge,String) in line 467
      4 lines of code
      4 parameters
      1 conditional paths
   function dumpDataflow(AnalysisType) in line 564
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
   function execute() in line 142
      protection public
      302 lines of code
      0 parameters
      1 conditional paths
   function getAnalysis() in line 536
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCFG() in line 543
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFactAfterLocation(Location) in line 517
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFactAtLocation(Location) in line 503
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFactOnEdge(Edge) in line 529
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFullyQualifiedMethodName() in line 106
      10 lines of code
      0 parameters
      1 conditional paths
   function getNumIterations() in line 475
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getResultFact(BasicBlock) in line 489
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getStartFact(BasicBlock) in line 482
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function logicalEntryBlock() in line 560
      3 lines of code
      0 parameters
      1 conditional paths
   function logicalPredecessorEdgeIterator(BasicBlock) in line 552
      3 lines of code
      1 parameters
      1 conditional paths
   function reportAnalysis(String) in line 445
      8 lines of code
      1 parameters
      1 conditional paths
   function Dataflow(CFG,AnalysisType) in line 76
      protection public
      26 lines of code
      2 parameters
      1 conditional paths
   variable analysis in line 58
   variable blockOrder in line 60
   variable cfg in line 56
   variable DEBUG in line 66
      protection public
   variable isForwards in line 62
   variable MAX_ITERS in line 104
   variable numIterations in line 64
module edu::umd::cs::findbugs::ba::Dataflow::ForwardProgramOrder
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(BasicBlock,BasicBlock) in line 120
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::Dataflow::BackwardProgramOrder
   inherits from edu::umd::cs::findbugs::ba::Dataflow::ForwardProgramOrder
   function compare(BasicBlock,BasicBlock) in line 131
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/DataflowAnalysis.java
module edu::umd::cs::findbugs::ba::DataflowAnalysis
   function copy(Fact,Fact) in line 100
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function createFact() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function edgeTransfer(Edge,Fact) in line 172
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function factToString(Fact) in line 209
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function finishIteration() in line 196
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBlockOrder(CFG) in line 129
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getFactAfterLocation(Location) in line 85
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getFactAtLocation(Location) in line 73
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getFactOnEdge(Edge) in line 95
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getLastUpdateTimestamp(Fact) in line 198
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getResultFact(BasicBlock) in line 61
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getStartFact(BasicBlock) in line 53
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function initEntryFact(Fact) in line 105
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isForwards() in line 120
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isTop(Fact) in line 115
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function makeFactTop(Fact) in line 110
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function meetInto(Fact,Edge,Fact) in line 185
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function same(Fact,Fact) in line 134
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function setLastUpdateTimestamp(Fact,int) in line 200
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function startIteration() in line 191
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function transfer(BasicBlock,@CheckForNull InstructionHandle,Fact,Fact) in line 153
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/DataflowAnalysisException.java
module edu::umd::cs::findbugs::ba::DataflowAnalysisException
   inherits from edu::umd::cs::findbugs::classfile::CheckedAnalysisException
   function DataflowAnalysisException() in line 39
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function DataflowAnalysisException(String) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function DataflowAnalysisException(String,Throwable) in line 60
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function DataflowAnalysisException(String,MethodGen,InstructionHandle) in line 74
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function DataflowAnalysisException(String,MethodGen,InstructionHandle,Throwable) in line 91
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   variable serialVersionUID in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/DataflowCFGPrinter.java
module edu::umd::cs::findbugs::ba::DataflowCFGPrinter
   inherits from edu::umd::cs::findbugs::ba::CFGPrinter
   function blockAnnotate(BasicBlock) in line 74
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function isForwards() defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses variable dataflow defined in edu::umd::cs::findbugs::ba::DataflowCFGPrinter
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
   function blockStartAnnotate(BasicBlock) in line 66
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function isForwards() defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses variable dataflow defined in edu::umd::cs::findbugs::ba::DataflowCFGPrinter
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
   function edgeAnnotate(Edge) in line 55
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable dataflow defined in edu::umd::cs::findbugs::ba::DataflowCFGPrinter
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function instructionAnnotate(InstructionHandle,BasicBlock) in line 82
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function isForwards() defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses variable dataflow defined in edu::umd::cs::findbugs::ba::DataflowCFGPrinter
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function printCFG(Dataflow< Fact, AnalysisType >,PrintStream) in line 107
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable dataflow defined in edu::umd::cs::findbugs::ba::DataflowCFGPrinter
      uses function print(PrintStream) defined in edu::umd::cs::findbugs::ba::CFGPrinter
   function DataflowCFGPrinter(Dataflow< Fact, AnalysisType >) in line 40
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable dataflow defined in edu::umd::cs::findbugs::ba::DataflowCFGPrinter
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function setIsForwards(boolean) defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   variable dataflow in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/DataflowValueChooser.java
module edu::umd::cs::findbugs::ba::DataflowValueChooser
   function choose(Value) in line 28
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/DebugRepositoryLookupFailureCallback.java
module edu::umd::cs::findbugs::ba::DebugRepositoryLookupFailureCallback
   inherits from edu::umd::cs::findbugs::ba::RepositoryLookupFailureCallback
   function logError(String) in line 78
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function logError(String,Throwable) in line 92
      protection public
      19 lines of code
      2 parameters
      3 conditional paths
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::ba::DebugRepositoryLookupFailureCallback
   function reportMissingClass(ClassNotFoundException) in line 44
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
   function reportMissingClass(ClassDescriptor) in line 64
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function reportSkippedAnalysis(MethodDescriptor) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/DefaultNullnessAnnotations.java
module edu::umd::cs::findbugs::ba::DefaultNullnessAnnotations
   function addDefaultNullnessAnnotations(INullnessAnnotationDatabase) in line 36
      protection public
      373 lines of code
      1 parameters
      2 conditional paths
      uses variable IGNORE_BUILTIN_ANNOTATIONS defined in edu::umd::cs::findbugs::ba::AnnotationDatabase
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addDefaultAnnotation(AnnotationDatabase.Target,@DottedClassName String,NullnessAnnotation) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses variable METHOD defined in edu::umd::cs::findbugs::ba::AnnotationDatabase::Target
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function addFieldAnnotation(@DottedClassName String,String,String,boolean,NullnessAnnotation) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses function addMethodAnnotation(@DottedClassName String,String,String,boolean,NullnessAnnotation) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function addMethodParameterAnnotation(@DottedClassName String,String,String,boolean,int,NullnessAnnotation) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses variable NULLABLE defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable PARAMETER defined in edu::umd::cs::findbugs::ba::AnnotationDatabase::Target
      uses variable UNKNOWN_NULLNESS defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function addEclipseSpecificAnnotations(INullnessAnnotationDatabase) defined in edu::umd::cs::findbugs::ba::DefaultNullnessAnnotations
   function addEclipseSpecificAnnotations(INullnessAnnotationDatabase) in line 410
      277 lines of code
      1 parameters
      1 conditional paths
      uses function addMethodAnnotation(@DottedClassName String,String,String,boolean,NullnessAnnotation) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   variable ICSE10_NULLNESS_PAPER in line 28
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/DepthFirstSearch.java
module edu::umd::cs::findbugs::ba::DepthFirstSearch
   inherits from DepthFirstSearch< CFG, Edge, BasicBlock >
   function getNextSearchTreeRoot() in line 43
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable firstRoot defined in edu::umd::cs::findbugs::ba::DepthFirstSearch
   function DepthFirstSearch(CFG) in line 37
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable firstRoot defined in edu::umd::cs::findbugs::ba::DepthFirstSearch
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
   variable firstRoot in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/graph/DepthFirstSearch.java
module edu::umd::cs::findbugs::graph::DepthFirstSearch
   inherits from AbstractDepthFirstSearch< GraphType, EdgeType, VertexType >
   function getSource(EdgeType) in line 55
      3 lines of code
      1 parameters
      1 conditional paths
   function getTarget(EdgeType) in line 50
      3 lines of code
      1 parameters
      1 conditional paths
   function outgoingEdgeIterator(GraphType,VertexType) in line 45
      3 lines of code
      2 parameters
      1 conditional paths
   function DepthFirstSearch(GraphType) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/deref/UnconditionalValueDerefAnalysis.java
module edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   inherits from edu::umd::cs::findbugs::ba::BackwardDataflowAnalysis
   function check(InstructionHandle,int[]) in line 168
      25 lines of code
      2 parameters
      11 conditional paths
   function checkAllNonNullParams(Location,ValueNumberFrame,ConstantPoolGen,@CheckForNull Method,@CheckForNull IsNullValueDataflow,TypeDataflow) in line 525
      protection public
      18 lines of code
      6 parameters
      4 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function checkNonNullParams(Location,ValueNumberFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable method defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function checkUnconditionalDerefDatabase(Location,ValueNumberFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function checkInstance(Location,ValueNumberFrame,UnconditionalValueDerefSet) in line 600
      56 lines of code
      3 parameters
      10 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getPredecessorWithEdgeType(BasicBlock,@Type int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function isNullCheck() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstanceSlot(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function reportDereference(IsNullValueFrame,int) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable IGNORE_DEREF_OF_NCP defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function checkNonNullParams(Location,ValueNumberFrame,UnconditionalValueDerefSet) in line 515
      9 lines of code
      3 parameters
      2 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable method defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
   function checkNonNullParams(Location,ValueNumberFrame,ConstantPoolGen,@CheckForNull Method,@CheckForNull IsNullValueFrame) in line 544
      protection public
      43 lines of code
      5 parameters
      8 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getSlotsFromTopOfStackForParameter(int) defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function reportDereference(IsNullValueFrame,int) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function parameterMustBeNonNull(XMethod,int) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses variable method defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
   function checkNonNullPutField(Location,ValueNumberFrame,UnconditionalValueDerefSet) in line 478
      24 lines of code
      3 parameters
      5 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getResolvedAnnotation(final Object,boolean) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function reportDereference(IsNullValueFrame,int) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function checkNonNullReturnValue(XMethod,Location,ValueNumberFrame,UnconditionalValueDerefSet) in line 453
      12 lines of code
      4 parameters
      3 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getResolvedAnnotation(final Object,boolean) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function reportPotentialDereference(Location,IsNullValueFrame) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
   function checkUnconditionalDerefDatabase(Location,ValueNumberFrame,UnconditionalValueDerefSet) in line 323
      9 lines of code
      3 parameters
      2 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function checkUnconditionalDerefDatabase(Location,ValueNumberFrame,ConstantPoolGen,@CheckForNull IsNullValueFrame,TypeDataflow) in line 333
      protection public
      104 lines of code
      5 parameters
      24 conditional paths
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function hasReferenceParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable DEBUG_CHECK_CALLS defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getProperty(KeyType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses function copyFrom(ParameterProperty) defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
      uses function intersectWith(ParameterProperty) defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function hasProperty(int) defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
      uses function getSlotsFromTopOfStackForParameter(int) defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function reportDereference(IsNullValueFrame,int) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function clearDerefsOnNonNullBranches(IsNullValueDataflow) in line 155
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function copy(UnconditionalValueDerefSet,UnconditionalValueDerefSet) in line 687
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function makeSameAs(UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function createFact() in line 692
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function duplicateFact(UnconditionalValueDerefSet) in line 900
      6 lines of code
      1 parameters
      1 conditional paths
      uses function createFact() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function copy(UnconditionalValueDerefSet,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function findValueKnownNonnullOnBranch(UnconditionalValueDerefSet,Edge) in line 918
      22 lines of code
      2 parameters
      5 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getDecision() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function getDecision(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function getLastUpdateTimestamp(UnconditionalValueDerefSet) in line 981
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLastUpdateTimestamp() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function handleNullCheck(Location,ValueNumberFrame,UnconditionalValueDerefSet) in line 212
      7 lines of code
      3 parameters
      2 conditional paths
      uses function reportPotentialDereference(Location,IsNullValueFrame) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
   function initEntryFact(UnconditionalValueDerefSet) in line 697
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isAssertion(InstructionHandle) in line 681
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable assertionMethods defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function isAssertionHandle(InstructionHandle,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function isExceptionEdge(Edge) in line 949
      19 lines of code
      1 parameters
      5 conditional paths
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function isNullCheck(InstructionHandle,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function isFactValid(UnconditionalValueDerefSet) in line 164
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function isNullCheck(InstructionHandle,ConstantPoolGen) in line 194
      protection public
      17 lines of code
      2 parameters
      4 conditional paths
      uses function check(InstructionHandle,int[]) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable NULLCHECK1 defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable NULLCHECK2 defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function isTop(UnconditionalValueDerefSet) in line 715
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function makeFactTop(UnconditionalValueDerefSet) in line 710
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setIsTop() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function meetInto(UnconditionalValueDerefSet,Edge,UnconditionalValueDerefSet) in line 720
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function meetInto(UnconditionalValueDerefSet,Edge,UnconditionalValueDerefSet,boolean) in line 725
      protection public
      78 lines of code
      4 parameters
      17 conditional paths
      uses function isExceptionEdge(Edge) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function isFactValid(UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function propagateDerefSetsToMergeInputValues(UnconditionalValueDerefSet,Edge) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function findValueKnownNonnullOnBranch(UnconditionalValueDerefSet,Edge) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function duplicateFact(UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function clearDerefSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function isBackwardInBytecode() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable method defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function sourceIsTopOfLoop(@Nonnull Set< Integer >) defined in edu::umd::cs::findbugs::ba::Edge
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function isTop() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function copy(UnconditionalValueDerefSet,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable ASSUME_NONZERO_TRIP_LOOPS defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function unionWith(UnconditionalValueDerefSet,ValueNumberFactory) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function mergeWith(UnconditionalValueDerefSet,@CheckForNull ValueNumber,ValueNumberFactory) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function propagateDerefSetsToMergeInputValues(UnconditionalValueDerefSet,Edge) in line 816
      76 lines of code
      2 parameters
      17 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function duplicateFact(UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumLocals() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function clearDerefSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function isUnconditionallyDereferenced(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function setDerefSet(ValueNumber,Set< Location >) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getUnconditionalDerefLocationSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function valueNumbersForLoads() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getAvailableLoad(AvailableLoad) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable PHI_NODE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses variable phiNodeForLoads defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function cleanDerefSet(@CheckForNull Location,ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function reportDereference(IsNullValueFrame,int) in line 657
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
   function reportDereference(IsNullValue) in line 661
      12 lines of code
      1 parameters
      4 conditional paths
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable IGNORE_DEREF_OF_NCP defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function isNullOnComplicatedPath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function reportPotentialDereference(Location,IsNullValueFrame) in line 220
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function same(UnconditionalValueDerefSet,UnconditionalValueDerefSet) in line 970
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function isSameAs(UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function setLastUpdateTimestamp(UnconditionalValueDerefSet,int) in line 986
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function setLastUpdateTimestamp(int) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function setTypeDataflow(TypeDataflow) in line 159
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function startIteration() in line 975
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function transferInstruction(InstructionHandle,BasicBlock,UnconditionalValueDerefSet) in line 236
      protection public
      74 lines of code
      3 parameters
      12 conditional paths
      uses function isAssertion(InstructionHandle) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function makeFactTop(UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function isNullCheck(InstructionHandle,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function handleNullCheck(Location,ValueNumberFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable CHECK_CALLS defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function checkUnconditionalDerefDatabase(Location,ValueNumberFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable CHECK_ANNOTATIONS defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function checkNonNullParams(Location,ValueNumberFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function checkNonNullReturnValue(XMethod,Location,ValueNumberFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function checkNonNullPutField(Location,ValueNumberFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function checkInstance(Location,ValueNumberFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function UnconditionalValueDerefAnalysis(ReverseDepthFirstSearch,DepthFirstSearch,CFG,Method,MethodGen,ValueNumberDataflow,AssertionMethods) in line 129
      protection public
      13 lines of code
      7 parameters
      2 conditional paths
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::BackwardDataflowAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::BackwardDataflowAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable method defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable assertionMethods defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   variable assertionMethods in line 110
   variable ASSUME_NONZERO_TRIP_LOOPS in line 88
      protection public
   variable cfg in line 102
   variable CHECK_ANNOTATIONS in line 92
      protection public
   variable CHECK_CALLS in line 94
      protection public
   variable DEBUG in line 86
      protection public
   variable DEBUG_CHECK_CALLS in line 96
      protection public
   variable IGNORE_DEREF_OF_NCP in line 90
      protection public
   variable invDataflow in line 112
   variable method in line 104
   variable methodGen in line 106
   variable NULLCHECK1 in line 98
   variable NULLCHECK2 in line 100
   variable typeDataflow in line 114
   variable VERBOSE_NULLARG_DEBUG in line 438
      protection public
   variable vnaDataflow in line 108
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/deref/UnconditionalValueDerefDataflow.java
module edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefDataflow
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflow
   function UnconditionalValueDerefDataflow(CFG,UnconditionalValueDerefAnalysis) in line 41
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< Fact, AnalysisType >
      uses variable analysis defined in Dataflow< Fact, AnalysisType >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/deref/UnconditionalValueDerefSet.java
module edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function addDeref(ValueNumber,Location) in line 244
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getDerefLocationSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function cleanDerefSet(@CheckForNull Location,ValueNumberFrame) in line 418
      protection public
      20 lines of code
      2 parameters
      4 conditional paths
      uses function allSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function valueNumbersForLoads() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getValueNumbersThatAreUnconditionallyDereferenced() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function retainOnlyTheseValueNumbers(Collection< ValueNumber >) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function clearDerefSet(ValueNumber) in line 280
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function getDerefLocationSet(ValueNumber) in line 295
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function getDerefLocationSet(int) in line 405
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function getLastUpdateTimestamp() in line 450
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastUpdateTimestamp defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function getUnconditionalDerefLocationSet(ValueNumber) in line 347
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function getValueNumbersThatAreUnconditionallyDereferenced() in line 317
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function isBottom() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function isEmpty() in line 457
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function isSameAs(UnconditionalValueDerefSet) in line 147
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function isTop() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function isUnconditionallyDereferenced(ValueNumber) in line 313
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function makeSameAs(UnconditionalValueDerefSet) in line 124
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable lastUpdateTimestamp defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function mergeWith(UnconditionalValueDerefSet,@CheckForNull ValueNumber,ValueNumberFactory) in line 161
      protection public
      48 lines of code
      3 parameters
      11 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function forNumber(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function retainOnlyTheseValueNumbers(Collection< ValueNumber >) in line 327
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function setDerefSet(ValueNumber,Set< Location >) in line 263
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getDerefLocationSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function setIsBottom() in line 86
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function setIsTop() in line 103
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable lastUpdateTimestamp defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function setLastUpdateTimestamp(int) in line 443
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lastUpdateTimestamp defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function toString() in line 361
      protection public
      43 lines of code
      0 parameters
      9 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getDerefLocationSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function unionWith(UnconditionalValueDerefSet,ValueNumberFactory) in line 210
      protection public
      25 lines of code
      2 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function forNumber(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getDerefLocationSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function UnconditionalValueDerefSet(int) in line 67
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   variable derefLocationSetMap in line 53
   variable lastUpdateTimestamp in line 59
   variable numValueNumbersInMethod in line 47
   variable valueNumbersUnconditionallyDereferenced in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/DFSCFGPrinter.java
module edu::umd::cs::findbugs::ba::DFSCFGPrinter
   inherits from edu::umd::cs::findbugs::ba::CFGPrinter
   inherits from edu::umd::cs::findbugs::ba::DFSEdgeTypes
   function edgeAnnotate(Edge) in line 31
      protection public
      17 lines of code
      1 parameters
      6 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::DFSCFGPrinter
      uses variable UNKNOWN_EDGE defined in edu::umd::cs::findbugs::graph::DFSEdgeTypes
      uses variable TREE_EDGE defined in edu::umd::cs::findbugs::graph::DFSEdgeTypes
      uses variable BACK_EDGE defined in edu::umd::cs::findbugs::graph::DFSEdgeTypes
      uses variable CROSS_EDGE defined in edu::umd::cs::findbugs::graph::DFSEdgeTypes
      uses variable FORWARD_EDGE defined in edu::umd::cs::findbugs::graph::DFSEdgeTypes
   function DFSCFGPrinter(CFG,DepthFirstSearch) in line 25
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses variable dfs defined in edu::umd::cs::findbugs::ba::DFSCFGPrinter
   variable dfs in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/DFSEdgeTypes.java
module edu::umd::cs::findbugs::ba::DFSEdgeTypes
   inherits from edu::umd::cs::findbugs::graph::DFSEdgeTypes
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/graph/DFSEdgeTypes.java
module edu::umd::cs::findbugs::graph::DFSEdgeTypes
   variable BACK_EDGE in line 41
      protection public
   variable CROSS_EDGE in line 53
      protection public
   variable FORWARD_EDGE in line 47
      protection public
   variable TREE_EDGE in line 36
      protection public
   variable UNKNOWN_EDGE in line 31
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/DominatorsAnalysis.java
module edu::umd::cs::findbugs::ba::DominatorsAnalysis
   inherits from edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
   function getBlockOrder(CFG) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::DominatorsAnalysis
   function isForwards() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function DominatorsAnalysis(CFG,DepthFirstSearch,boolean) in line 42
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::DominatorsAnalysis
   variable dfs in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/Edge.java
module edu::umd::cs::findbugs::ba::Edge
   inherits from edu::umd::cs::findbugs::graph::AbstractEdge
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   inherits from edu::umd::cs::findbugs::ba::Debug
   function compareTo(Edge) in line 149
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::Edge
   function edgeTypeToString(@Type int) in line 240
      protection public
      33 lines of code
      1 parameters
      15 conditional paths
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable SWITCH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable SWITCH_DEFAULT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable JSR_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable RET_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable GOTO_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable RETURN_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable UNHANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable HANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable START_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable BACKEDGE_TARGET_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable BACKEDGE_SOURCE_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable EXIT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function equals(Object) in line 131
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function Edge(BasicBlock,BasicBlock) defined in edu::umd::cs::findbugs::ba::Edge
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
   function formatAsString(boolean) in line 195
      protection public
      41 lines of code
      1 parameters
      6 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable target defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function edgeTypeToString(@Type int) defined in edu::umd::cs::findbugs::ba::Edge
      uses variable type defined in edu::umd::cs::findbugs::ba::Edge
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function getFlags() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::ba::Edge
   function getId() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getType() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::Edge
   function hashCode() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function isBackwardInBytecode() in line 162
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable target defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function isExceptionEdge() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::Edge
      uses variable HANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable UNHANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function isFlagSet(int) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFlags(int) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::ba::Edge
   function setType(@Type int) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::Edge
   function sourceIsTopOfLoop(@Nonnull Set< Integer >) in line 176
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function stringToEdgeType(String) in line 278
      protection public
      35 lines of code
      1 parameters
      15 conditional paths
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable SWITCH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable SWITCH_DEFAULT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable JSR_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable RET_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable GOTO_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable RETURN_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable UNHANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable HANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable START_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable BACKEDGE_TARGET_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable BACKEDGE_SOURCE_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable EXIT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function toString() in line 158
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function formatAsString(boolean) defined in edu::umd::cs::findbugs::ba::Edge
   function Edge(BasicBlock,BasicBlock) in line 75
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::graph::AbstractEdge
   variable flags in line 59
   variable type in line 57
module edu::umd::cs::findbugs::ba::Edge::Type
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/EdgeChooser.java
module edu::umd::cs::findbugs::ba::EdgeChooser
   function choose(Edge) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/EdgeTypes.java
module edu::umd::cs::findbugs::ba::EdgeTypes
   variable BACKEDGE_SOURCE_EDGE in line 121
      protection public
   variable BACKEDGE_TARGET_EDGE in line 115
      protection public
   variable CHECKED_EXCEPTIONS_FLAG in line 138
      protection public
   variable EXIT_EDGE in line 127
      protection public
   variable EXPLICIT_EXCEPTIONS_FLAG in line 143
      protection public
   variable FALL_THROUGH_EDGE in line 45
      protection public
   variable GOTO_EDGE in line 81
      protection public
   variable HANDLED_EXCEPTION_EDGE in line 102
      protection public
   variable IFCMP_EDGE in line 51
      protection public
   variable JSR_EDGE in line 69
      protection public
   variable RET_EDGE in line 75
      protection public
   variable RETURN_EDGE in line 88
      protection public
   variable START_EDGE in line 108
      protection public
   variable SWITCH_DEFAULT_EDGE in line 63
      protection public
   variable SWITCH_EDGE in line 57
      protection public
   variable UNHANDLED_EXCEPTION_EDGE in line 95
      protection public
   variable UNKNOWN_EDGE in line 39
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/EqualsKindSummary.java
module edu::umd::cs::findbugs::ba::EqualsKindSummary
   function get(ClassAnnotation) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function put(ClassAnnotation,EqualsKindSummary.KindOfEquals) in line 42
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
   variable ABSTRACT_GETCLASS_GOOD_EQUALS in line 35
      protection public
   variable ABSTRACT_INSTANCE_OF in line 35
      protection public
   variable ALWAYS_FALSE in line 35
      protection public
   variable ALWAYS_TRUE in line 35
      protection public
   variable CHECKED_CAST_EQUALS in line 35
      protection public
   variable COMPARE_EQUALS in line 35
      protection public
   variable DELEGATE_EQUALS in line 35
      protection public
   variable GETCLASS_BAD_EQUALS in line 35
      protection public
   variable GETCLASS_GOOD_EQUALS in line 35
      protection public
   variable INSTANCE_OF_EQUALS in line 35
      protection public
   variable INSTANCE_OF_SUPERCLASS_EQUALS in line 35
      protection public
   variable INVOKES_SUPER in line 35
      protection public
   variable OBJECT_EQUALS in line 35
      protection public
   variable RETURNS_SUPER in line 35
      protection public
   variable TRIVIAL_EQUALS in line 35
      protection public
   variable UNKNOWN in line 36
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ExceptionHandlerMap.java
module edu::umd::cs::findbugs::ba::ExceptionHandlerMap
   function addExceptionHandler(CodeExceptionGen) in line 153
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable startInstructionToHandlerMap defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
      uses function merge(@CheckForNull TypeMerger,CodeExceptionGen,CodeExceptionGen) defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
   function addHandler(InstructionHandle,CodeExceptionGen) in line 162
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable codeToHandlerMap defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
   function build(MethodGen) in line 93
      34 lines of code
      1 parameters
      6 conditional paths
      uses function addExceptionHandler(CodeExceptionGen) defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
      uses function addHandler(InstructionHandle,CodeExceptionGen) defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
   function getHandlerForStartInstruction(InstructionHandle) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable startInstructionToHandlerMap defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
   function getHandlerList(InstructionHandle) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable codeToHandlerMap defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
   function merge(@CheckForNull TypeMerger,CodeExceptionGen,CodeExceptionGen) in line 128
      protection public
      23 lines of code
      3 parameters
      6 conditional paths
   function ExceptionHandlerMap(MethodGen,TypeMerger) in line 57
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable codeToHandlerMap defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
      uses variable startInstructionToHandlerMap defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
      uses variable merger defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
      uses function build(MethodGen) defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
   variable codeToHandlerMap in line 46
   variable merger in line 50
   variable startInstructionToHandlerMap in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/FieldSummary.java
module edu::umd::cs::findbugs::ba::FieldSummary
   function addWrittenOutsideOfConstructor(XField) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable writtenOutsideOfConstructor defined in edu::umd::cs::findbugs::ba::FieldSummary
   function callsOverriddenMethodsFromConstructor(ClassDescriptor) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable callsOverriddenMethodsFromConstructor defined in edu::umd::cs::findbugs::ba::FieldSummary
   function callsOverriddenMethodsFromSuperConstructor(ClassDescriptor) in line 82
      protection public
      17 lines of code
      1 parameters
      5 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable callsOverriddenMethodsFromConstructor defined in edu::umd::cs::findbugs::ba::FieldSummary
   function getCalledFromSuperConstructor(ClassDescriptor,XMethod) in line 111
      protection public
      22 lines of code
      2 parameters
      5 conditional paths
      uses variable callsOverriddenMethodsFromConstructor defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses variable selfMethodsCalledFromConstructor defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function getFieldsWritten(XMethod) in line 146
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable fieldsWritten defined in edu::umd::cs::findbugs::ba::FieldSummary
   function getSummary(XField) in line 65
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable summary defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function getSuperCall(XMethod) in line 254
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable nonVoidSuperConstructorsCalled defined in edu::umd::cs::findbugs::ba::FieldSummary
   function isComplete() in line 238
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable complete defined in edu::umd::cs::findbugs::ba::FieldSummary
   function isWrittenOutsideOfConstructor(XField) in line 154
      protection public
      16 lines of code
      1 parameters
      5 conditional paths
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable writtenOutsideOfConstructor defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isReflexive(XField) defined in edu::umd::cs::findbugs::detect::UnreadFieldsData
   function mergeSummary(XField,OpcodeStack.Item) in line 175
      protection public
      27 lines of code
      2 parameters
      5 conditional paths
      uses variable ASSERTIONS_ENABLED defined in edu::umd::cs::findbugs::SystemProperties
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getPriority() defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function toString() defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable summary defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function clearNewlyAllocated() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function sawSuperCall(XMethod,XMethod) in line 242
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable nonVoidSuperConstructorsCalled defined in edu::umd::cs::findbugs::ba::FieldSummary
   function setCalledFromSuperConstructor(ProgramPoint,XMethod) in line 100
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable selfMethodsCalledFromConstructor defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses variable callsOverriddenMethodsFromConstructor defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses variable method defined in edu::umd::cs::findbugs::ProgramPoint
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function setComplete(boolean) in line 207
      protection public
      27 lines of code
      1 parameters
      5 conditional paths
      uses variable complete defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function isComplete() defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses variable summary defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function makeCrossMethod() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function setFieldsWritten(XMethod,Collection< XField >) in line 134
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable fieldsWritten defined in edu::umd::cs::findbugs::ba::FieldSummary
   variable callsOverriddenMethodsFromConstructor in line 61
   variable complete in line 63
   variable fieldsWritten in line 55
   variable nonVoidSuperConstructorsCalled in line 57
   variable selfMethodsCalledFromConstructor in line 59
   variable summary in line 53
   variable writtenOutsideOfConstructor in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/FileSourceFileDataSource.java
module edu::umd::cs::findbugs::ba::FileSourceFileDataSource
   inherits from edu::umd::cs::findbugs::ba::SourceFileDataSource
   function getFullFileName() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fileName defined in edu::umd::cs::findbugs::ba::FileSourceFileDataSource
   function getLastModified() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fileName defined in edu::umd::cs::findbugs::ba::FileSourceFileDataSource
   function open() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fileName defined in edu::umd::cs::findbugs::ba::FileSourceFileDataSource
   function FileSourceFileDataSource(String) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fileName defined in edu::umd::cs::findbugs::ba::FileSourceFileDataSource
   variable fileName in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ForwardDataflowAnalysis.java
module edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflowAnalysis
   abstract class
   function getBlockOrder(CFG) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDepthFirstSearch() in line 40
      3 lines of code
      0 parameters
      1 conditional paths
   function isForwards() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ForwardDataflowAnalysis(DepthFirstSearch) in line 33
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   variable dfs in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/Frame.java
module edu::umd::cs::findbugs::ba::Frame
   abstract class
   function allSlots() in line 692
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function clearStack() in line 487
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function contains(ValueType) in line 518
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function copyFrom(Frame< ValueType >) in line 606
      protection public
      29 lines of code
      1 parameters
      1 conditional paths
   function getArgument(InvokeInstruction,ConstantPoolGen,int,int) in line 388
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
   function getArgument(InvokeInstruction,ConstantPoolGen,int,SignatureParser) in line 406
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
   function getArgumentSet(InvokeInstruction,ConstantPoolGen,DataflowValueChooser< ValueType >) in line 468
      protection public
      14 lines of code
      3 parameters
      1 conditional paths
   function getArgumentSlot(int,int) in line 425
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function getInstance(Instruction,ConstantPoolGen) in line 282
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getInstanceSlot(Instruction,ConstantPoolGen) in line 324
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
   function getInstanceStackLocation(Instruction,ConstantPoolGen) in line 305
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function getLastUpdateTimestamp() in line 710
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumArguments(InvokeInstruction,ConstantPoolGen) in line 348
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function getNumArgumentsIncludingObjectInstance(InvokeInstruction,ConstantPoolGen) in line 364
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function getNumLocals() in line 507
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumSlots() in line 514
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getOperand(StackConsumer,ConstantPoolGen,int) in line 445
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
   function getStackDepth() in line 500
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStackLocation(int) in line 263
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getStackValue(int) in line 241
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function getTopStackWords(ValueType[]) in line 223
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function getTopValue() in line 207
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function getValue(int) in line 537
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function isBottom() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTop() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isValid() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function popValue() in line 191
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function pushValue(ValueType) in line 174
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function sameAs(Frame< ValueType >) in line 570
      protection public
      29 lines of code
      1 parameters
      1 conditional paths
   function setBottom() in line 149
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setLastUpdateTimestamp(int) in line 703
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setTop() in line 131
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function setValid() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setValue(int,ValueType) in line 552
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 642
      protection public
      33 lines of code
      0 parameters
      1 conditional paths
   function valueToString(ValueType) in line 681
      6 lines of code
      1 parameters
      1 conditional paths
   function Frame(int) in line 111
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   variable DEFAULT_STACK_CAPACITY in line 97
   variable isBottom in line 92
   variable isTop in line 86
   variable lastUpdateTimestamp in line 70
   variable numLocals in line 75
   variable slotList in line 80
   variable STACK_ONLY in line 636
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/FrameDataflowAnalysis.java
module edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   inherits from ForwardDataflowAnalysis< FrameType >
   abstract class
   function copy(FrameType,FrameType) in line 41
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getFactAtPC(CFG,int) in line 68
      protection public
      14 lines of code
      2 parameters
      1 conditional paths
   function getFactBeforeExceptionCheck(CFG,int) in line 91
      protection public
      19 lines of code
      2 parameters
      1 conditional paths
   function getLastUpdateTimestamp(FrameType) in line 117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isFactValid(FrameType) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isTop(FrameType) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function makeFactTop(FrameType) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function mergeInto(FrameType,FrameType) in line 177
      36 lines of code
      2 parameters
      1 conditional paths
   function mergeValues(FrameType,FrameType,int) in line 225
      1 lines of code
      3 parameters
      1 conditional paths
   function modifyFrame(FrameType,@CheckForNull FrameType) in line 160
      7 lines of code
      2 parameters
      1 conditional paths
   function same(FrameType,FrameType) in line 56
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function setLastUpdateTimestamp(FrameType,int) in line 122
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function FrameDataflowAnalysis(DepthFirstSearch) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/generic/GenericObjectType.java
module edu::umd::cs::findbugs::ba::generic::GenericObjectType
   inherits from org::apache::bcel::generic::ObjectType
   function equals(Object) in line 74
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function getExtension() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getGenericParametersAsString() in line 257
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function getTypeCategory() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function toString() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function getNumParameters() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getObjectType() in line 221
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
   function getParameterAt(int) in line 157
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function getParameters() in line 166
      protection public
      6 lines of code
      0 parameters
      3 conditional paths
   function getTypeCategory() in line 112
      protection public
      22 lines of code
      0 parameters
      7 conditional paths
      uses function hasParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function getUpperBound() in line 86
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function getVariable() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 68
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function hasParameters() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function produce() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getTypeCategory() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function toPlainString() in line 253
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(boolean) in line 242
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getTypeCategory() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function toString() in line 249
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getTypeCategory() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/generic/GenericSignatureParser.java
module edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function compareSignatures(String,String) in line 247
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function GenericSignatureParser(String) defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function getGenericSignatureIterator(Method) in line 209
      protection public
      33 lines of code
      1 parameters
      8 conditional paths
      uses function compareSignatures(String,String) defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function GenericSignatureParser(String) defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function getNumParameters() in line 181
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function getNumParametersForInvocation(InvokeInstruction,ConstantPoolGen) in line 197
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function GenericSignatureParser(String) defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function getReturnTypeSignature() in line 168
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function main(String[]) in line 258
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses function GenericSignatureParser(String) defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function parameterSignatureIterator() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function GenericSignatureParser(String) in line 141
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   variable signature in line 132
module edu::umd::cs::findbugs::ba::generic::GenericSignatureParser::ParameterSignatureIterator
   inherits from java::util::Iterator
   function hasNext() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable index defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser::ParameterSignatureIterator
      uses variable signature defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function next() in line 54
      protection public
      71 lines of code
      0 parameters
      25 conditional paths
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser::ParameterSignatureIterator
      uses variable signature defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses variable index defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser::ParameterSignatureIterator
   function remove() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable index in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/generic/GenericUtilities.java
module edu::umd::cs::findbugs::ba::generic::GenericUtilities
   function getString(Type) in line 210
      protection public
      9 lines of code
      1 parameters
      9 conditional paths
      uses function asString(GenericObjectType) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
   function getType(String,List<?extends ReferenceType >) in line 245
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getType(String) in line 260
      protection public
      56 lines of code
      1 parameters
      13 conditional paths
      uses function lastMatchedLeftAngleBracket(String) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
      uses function nextUnmatchedRightAngleBracket(String,int) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
      uses function getTypeParameters(String) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
      uses function removeMatchedAngleBrackets(String) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
      uses function getType(String,List<?extends ReferenceType >) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
   function getTypeCategory(Type) in line 187
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
   function getTypeParameters(String) in line 423
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function getType(String,List<?extends ReferenceType >) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
   function isPlainObject(Type) in line 203
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getTypeCategory(Type) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
   function lastMatchedLeftAngleBracket(String) in line 391
      protection public
      22 lines of code
      1 parameters
      7 conditional paths
   function merge(@CheckForNull Type,ObjectType) in line 317
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
   function merge(@CheckForNull GenericObjectType,Type) in line 324
      protection public
      12 lines of code
      2 parameters
      4 conditional paths
      uses function merge(@CheckForNull Type,ObjectType) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
   function merge(@CheckForNull GenericObjectType,ObjectType) in line 337
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
   function nextUnmatchedRightAngleBracket(String,int) in line 370
      protection public
      20 lines of code
      2 parameters
      6 conditional paths
   function removeMatchedAngleBrackets(String) in line 348
      protection public
      21 lines of code
      1 parameters
      6 conditional paths
   function split(String,boolean) in line 439
      protection public
      36 lines of code
      2 parameters
      9 conditional paths
module edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
   function asString(GenericObjectType) in line 171
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function asString(ArrayType) in line 175
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getString(Type) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
   function produce(GenericObjectType) in line 173
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable produce in line 169
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/heap/FieldSet.java
module edu::umd::cs::findbugs::ba::heap::FieldSet
   function addField(XField) in line 70
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function clear() in line 65
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function contains(XField) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function copyFrom(FieldSet) in line 98
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function isBottom() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isEmpty() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function isIntersectionNonEmpty(FieldSet) in line 105
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function isTop() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isValid() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function mergeWith(FieldSet) in line 81
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function copyFrom(FieldSet) defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function sameAs(FieldSet) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function setBottom() in line 48
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function clear() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function setTop() in line 39
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function clear() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isTop() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function toString() in line 115
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function FieldSet() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   variable fieldSet in line 33
   variable isTop in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/heap/FieldSetAnalysis.java
module edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   inherits from edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
   abstract class
   function copy(FieldSet,FieldSet) in line 99
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(FieldSet) defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function createFact() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCPG() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   function handleInstruction(InstructionHandle,BasicBlock,FieldSet) in line 114
      35 lines of code
      3 parameters
      11 conditional paths
      uses function lookupField(InstructionHandle,FieldInstruction) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
      uses function sawLoad(FieldSet,XField) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
      uses function sawStore(FieldSet,XField) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
      uses function setBottom() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function initEntryFact(FieldSet) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isFactValid(FieldSet) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function isTop(FieldSet) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function lookupField(InstructionHandle,FieldInstruction) in line 150
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable instructionToFieldMap defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
      uses function sawLoad(FieldSet,XField) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
      uses function sawStore(FieldSet,XField) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   function makeFactTop(FieldSet) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function meetInto(FieldSet,Edge,FieldSet) in line 79
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function same(FieldSet,FieldSet) in line 84
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function sameAs(FieldSet) defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function sawLoad(FieldSet,XField) in line 159
      1 lines of code
      2 parameters
      1 conditional paths
   function sawStore(FieldSet,XField) in line 161
      1 lines of code
      2 parameters
      1 conditional paths
   function transferInstruction(InstructionHandle,BasicBlock,FieldSet) in line 104
      protection public
      9 lines of code
      3 parameters
      2 conditional paths
      uses function isFactValid(FieldSet) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
      uses function handleInstruction(InstructionHandle,BasicBlock,FieldSet) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   function FieldSetAnalysis(DepthFirstSearch,ConstantPoolGen) in line 49
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
      uses variable cpg defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   variable cpg in line 45
   variable instructionToFieldMap in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/heap/LoadAnalysis.java
module edu::umd::cs::findbugs::ba::heap::LoadAnalysis
   inherits from edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   function sawLoad(FieldSet,XField) in line 33
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addField(XField) defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function sawStore(FieldSet,XField) in line 38
      2 lines of code
      2 parameters
      1 conditional paths
   function LoadAnalysis(DepthFirstSearch,ConstantPoolGen) in line 28
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
      uses variable cpg defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/heap/LoadDataflow.java
module edu::umd::cs::findbugs::ba::heap::LoadDataflow
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflow
   function LoadDataflow(CFG,LoadAnalysis) in line 29
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< Fact, AnalysisType >
      uses variable analysis defined in Dataflow< Fact, AnalysisType >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/heap/StoreAnalysis.java
module edu::umd::cs::findbugs::ba::heap::StoreAnalysis
   inherits from edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   function sawLoad(FieldSet,XField) in line 44
      2 lines of code
      2 parameters
      1 conditional paths
   function sawStore(FieldSet,XField) in line 56
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addField(XField) defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function StoreAnalysis(DepthFirstSearch,ConstantPoolGen) in line 31
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
      uses variable cpg defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/heap/StoreDataflow.java
module edu::umd::cs::findbugs::ba::heap::StoreDataflow
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflow
   function StoreDataflow(CFG,StoreAnalysis) in line 29
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< Fact, AnalysisType >
      uses variable analysis defined in Dataflow< Fact, AnalysisType >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/Hierarchy.java
module edu::umd::cs::findbugs::ba::Hierarchy
   function accessFlagsAreConcrete(int) in line 558
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function findConcreteMethod(JavaClass,String,String) in line 499
      protection public
      20 lines of code
      3 parameters
      5 conditional paths
      uses variable DEBUG_METHOD_LOOKUP defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function accessFlagsAreConcrete(int) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findDeclaredExceptions(InvokeInstruction,ConstantPoolGen) in line 411
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function findExactMethod(InvokeInstruction,ConstantPoolGen) in line 231
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable ANY_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findExactMethod(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) in line 251
      protection public
      9 lines of code
      3 parameters
      1 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findField(String,String) in line 887
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
   function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen) in line 322
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable ANY_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) in line 327
      protection public
      44 lines of code
      3 parameters
      8 conditional paths
      uses variable DEBUG_METHOD_LOOKUP defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable INSTANCE_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable STATIC_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function findExactMethod(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findInvocationLeastUpperBound(JavaClass,String,String,JavaClassAndMethodChooser,boolean) in line 373
      protection public
      22 lines of code
      5 parameters
      6 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findMethod(JavaClass,String,String) in line 428
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable ANY_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findMethod(JavaClass,String,String,JavaClassAndMethodChooser) in line 433
      protection public
      21 lines of code
      4 parameters
      7 conditional paths
      uses variable DEBUG_METHOD_LOOKUP defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function choose(JavaClassAndMethod) defined in edu::umd::cs::findbugs::ba::JavaClassAndMethodChooser
   function findMethod(ClassDescriptor,String,String,boolean) in line 470
      protection public
      14 lines of code
      4 parameters
      3 conditional paths
      uses variable DEBUG_METHOD_LOOKUP defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
   function findMethod(JavaClass[],String,String) in line 623
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable ANY_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findMethod(JavaClass[],String,String,JavaClassAndMethodChooser) in line 642
      protection public
      12 lines of code
      4 parameters
      3 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findXField(String,String,String,boolean) in line 920
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
   function findXField(FieldInstruction,@Nonnull ConstantPoolGen) in line 938
      protection public
      17 lines of code
      2 parameters
      2 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function findXField(String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function findXMethod(JavaClass,String,String,JavaClassAndMethodChooser) in line 536
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function findXMethod(JavaClass[],String,String) in line 668
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function findXMethod(JavaClass,String,String,JavaClassAndMethodChooser) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable ANY_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findXMethod(JavaClass[],String,String,JavaClassAndMethodChooser) in line 688
      protection public
      10 lines of code
      4 parameters
      3 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function choose(JavaClassAndMethod) defined in edu::umd::cs::findbugs::ba::JavaClassAndMethodChooser
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function getInnerClassAccess(INVOKESTATIC,ConstantPoolGen) in line 982
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getMethodSignature() defined in edu::umd::cs::findbugs::ba::InnerClassAccess
   function isConcrete(XMethod) in line 873
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getAccessFlags() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function isInnerClassAccess(INVOKESTATIC,ConstantPoolGen) in line 967
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function isMonitorNotify(String,String) in line 189
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function isMonitorNotify(Instruction,ConstantPoolGen) in line 203
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses function isMonitorNotify(String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function isMonitorWait(String,String) in line 150
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function isMonitorWait(Instruction,ConstantPoolGen) in line 164
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses function isMonitorWait(String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function isSubtype(@DottedClassName String,@DottedClassName String) in line 94
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function isSubtype(ReferenceType,ReferenceType) in line 108
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function isUncheckedException(ObjectType) in line 130
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable RUNTIME_EXCEPTION_TYPE defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable ERROR_TYPE defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable RUNTIME_EXCEPTION defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable ERROR defined in edu::umd::cs::findbugs::ba::Hierarchy
   function isUniversalExceptionHandler(ObjectType) in line 122
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function resolveMethodCallTargets(InvokeInstruction,TypeFrame,ConstantPoolGen) in line 713
      protection public
      44 lines of code
      3 parameters
      7 conditional paths
      uses function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable CONCRETE_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable DEBUG_METHOD_LOOKUP defined in edu::umd::cs::findbugs::ba::Hierarchy
   function resolveMethodCallTargets(ReferenceType,InvokeInstruction,ConstantPoolGen) in line 771
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function resolveMethodCallTargets(InvokeInstruction,TypeFrame,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function resolveMethodCallTargets(ReferenceType,InvokeInstruction,ConstantPoolGen,boolean) in line 791
      protection public
      73 lines of code
      4 parameters
      13 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable INSTANCE_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function lookupClass(@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable CONCRETE_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable DEBUG_METHOD_LOOKUP defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getAccessFlags() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function visitSuperClassMethods(JavaClassAndMethod,JavaClassAndMethodChooser) in line 271
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function visitSuperInterfaceMethods(JavaClassAndMethod,JavaClassAndMethodChooser) in line 287
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
   variable ANY_METHOD in line 544
      protection public
   variable CONCRETE_METHOD in line 566
      protection public
   variable DEBUG_METHOD_LOOKUP in line 63
   variable ERROR in line 67
      protection public
   variable ERROR_TYPE in line 77
      protection public
   variable EXCEPTION in line 66
      protection public
   variable EXCEPTION_TYPE in line 72
      protection public
   variable INSTANCE_METHOD in line 598
      protection public
   variable RUNTIME_EXCEPTION in line 65
      protection public
   variable RUNTIME_EXCEPTION_TYPE in line 82
      protection public
   variable STATIC_METHOD in line 583
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/Hierarchy2.java
module edu::umd::cs::findbugs::ba::Hierarchy2
   function findDeclaredExceptions(InvokeInstruction,ConstantPoolGen) in line 488
      protection public
      19 lines of code
      2 parameters
      4 conditional paths
      uses function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses variable STATIC_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable INSTANCE_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function getThrownExceptions() defined in edu::umd::cs::findbugs::ba::XMethod
   function findExactMethod(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) in line 82
      protection public
      11 lines of code
      3 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function findMethod(ClassDescriptor,String,String,boolean) defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses function thisOrNothing(@CheckForNull XMethod,JavaClassAndMethodChooser) defined in edu::umd::cs::findbugs::ba::Hierarchy2
   function findFirstSuperMethod(XMethod) in line 223
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function findMatchingMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::ba::XClass
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
   function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) in line 106
      protection public
      48 lines of code
      3 parameters
      9 conditional paths
      uses function findExactMethod(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses function thisOrNothing(@CheckForNull XMethod,JavaClassAndMethodChooser) defined in edu::umd::cs::findbugs::ba::Hierarchy2
   function findInvocationLeastUpperBound(ClassDescriptor,String,String,boolean,boolean) in line 156
      protection public
      8 lines of code
      5 parameters
      2 conditional paths
      uses function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) defined in edu::umd::cs::findbugs::ba::Hierarchy2
   function findInvocationLeastUpperBound(XClass,String,String,boolean,boolean) in line 166
      protection public
      23 lines of code
      5 parameters
      6 conditional paths
      uses function findMethod(ClassDescriptor,String,String,boolean) defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
   function findInvocationLeastUpperBound0(XClass,String,String,boolean,boolean) in line 191
      protection public
      21 lines of code
      5 parameters
      6 conditional paths
      uses function findMethod(ClassDescriptor,String,String,boolean) defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
      uses function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
   function findMethod(ClassDescriptor,String,String,boolean) in line 267
      protection public
      7 lines of code
      4 parameters
      2 conditional paths
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function findSuperMethods(XMethod) in line 213
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function findSuperMethods(@CheckForNull ClassDescriptor,XMethod,Set< XMethod >) in line 243
      22 lines of code
      3 parameters
      6 conditional paths
      uses function findMatchingMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::ba::XClass
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function findSuperMethods(XMethod) defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
   function resolveMethodCallTargets(InvokeInstruction,TypeFrame,ConstantPoolGen) in line 302
      protection public
      39 lines of code
      3 parameters
      6 conditional paths
      uses function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) defined in edu::umd::cs::findbugs::ba::Hierarchy2
   function resolveMethodCallTargets(ReferenceType,InvokeInstruction,ConstantPoolGen) in line 355
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function resolveMethodCallTargets(InvokeInstruction,TypeFrame,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Hierarchy2
   function resolveMethodCallTargets(ReferenceType,InvokeInstruction,ConstantPoolGen,boolean) in line 375
      protection public
      31 lines of code
      4 parameters
      5 conditional paths
      uses variable objectDescriptor defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses function findMethod(ClassDescriptor,String,String,boolean) defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses function resolveVirtualMethodCallTargets(String,String,String,boolean,boolean) defined in edu::umd::cs::findbugs::ba::Hierarchy2
   function resolveVirtualMethodCallTargets(String,String,String,boolean,boolean) in line 407
      protection public
      5 lines of code
      5 parameters
      1 conditional paths
   function resolveVirtualMethodCallTargets(XMethod,boolean,boolean) in line 413
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function resolveVirtualMethodCallTargets(String,String,String,boolean,boolean) defined in edu::umd::cs::findbugs::ba::Hierarchy2
   function resolveVirtualMethodCallTargets(ClassDescriptor,String,String,boolean,boolean) in line 423
      protection public
      52 lines of code
      5 parameters
      11 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function findMethod(ClassDescriptor,String,String,boolean) defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses variable OPEN_WORLD_DEBUG defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable OPEN_WORLD defined in edu::umd::cs::findbugs::ba::Hierarchy2
      uses function isAbstract() defined in edu::umd::cs::findbugs::ba::XMethod
   function thisOrNothing(@CheckForNull XMethod,JavaClassAndMethodChooser) in line 95
      9 lines of code
      2 parameters
      3 conditional paths
      uses function choose(JavaClassAndMethod) defined in edu::umd::cs::findbugs::ba::JavaClassAndMethodChooser
   variable objectDescriptor in line 64
   variable OPEN_WORLD in line 419
   variable OPEN_WORLD_DEBUG in line 421
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/IncompatibleTypes.java
module edu::umd::cs::findbugs::ba::IncompatibleTypes
   function getMsg() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPriority() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPriorityForAssumingCompatible(GenericObjectType,Type) in line 116
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getPriorityForAssumingCompatible(GenericObjectType,Type) defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function getObjectType() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getPriority() defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable UNRELATED_TYPES_BUT_MATCHES_TYPE_PARAMETER defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
   function getPriorityForAssumingCompatible(Type,Type) in line 127
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getPriorityForAssumingCompatible(GenericObjectType,Type) defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
   function getPriorityForAssumingCompatible(Type,Type,boolean) in line 132
      protection public
      45 lines of code
      3 parameters
      12 conditional paths
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable PRIMATIVE_ARRAY_AND_OTHER_ARRAY defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable INCOMPATIBLE_PRIMATIVE_ARRAYS defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function getPriorityForAssumingCompatibleWithArray(Type) defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function getPriorityForAssumingCompatible(GenericObjectType,Type) defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
   function getPriorityForAssumingCompatible(ObjectType,ObjectType,boolean) in line 210
      protection public
      54 lines of code
      3 parameters
      11 conditional paths
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable UNCHECKED defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable GWT_JAVASCRIPTOBJECT_TYPE defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function getPriorityForAssumingCompatible(GenericObjectType,Type) defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable COLLECTION_TYPE defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable MAP_TYPE defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function getPriority() defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
   function getPriorityForAssumingCompatible(boolean,ClassDescriptor,ClassDescriptor) in line 265
      protection public
      64 lines of code
      3 parameters
      12 conditional paths
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable INCOMPATIBLE_CLASSES defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable SET_DESCRIPTOR defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable MAP_DESCRIPTOR defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable LIST_DESCRIPTOR defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function isInterface() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getTransitiveCommonSubtypes(ClassDescriptor,ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function hasKnownSubclasses(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable UNRELATED_INTERFACES_WITHOUT_IMPLEMENTATIONS defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable UNRELATED_INTERFACES defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable UNRELATED_FINAL_CLASS_AND_INTERFACE defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable UNRELATED_UTIL_INTERFACE defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable UNRELATED_CLASS_AND_INTERFACE defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
   function getPriorityForAssumingCompatibleWithArray(Type) in line 178
      10 lines of code
      1 parameters
      7 conditional paths
      uses variable ARRAY_AND_OBJECT defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable ARRAY_AND_NON_ARRAY defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function toString() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function IncompatibleTypes(String,int) in line 61
      4 lines of code
      2 parameters
      1 conditional paths
   variable ARRAY_AND_NON_ARRAY in line 81
      protection public
   variable ARRAY_AND_OBJECT in line 93
      protection public
   variable COLLECTION_TYPE in line 47
   variable GWT_JAVASCRIPTOBJECT_TYPE in line 44
   variable INCOMPATIBLE_CLASSES in line 95
      protection public
   variable INCOMPATIBLE_PRIMATIVE_ARRAYS in line 87
      protection public
   variable LIST_DESCRIPTOR in line 51
   variable MAP_DESCRIPTOR in line 53
   variable MAP_TYPE in line 49
   variable PRIMATIVE_ARRAY_AND_OTHER_ARRAY in line 84
      protection public
   variable SEEMS_OK in line 79
      protection public
   variable SET_DESCRIPTOR in line 55
   variable UNCHECKED in line 90
      protection public
   variable UNRELATED_CLASS_AND_INTERFACE in line 98
      protection public
   variable UNRELATED_FINAL_CLASS_AND_INTERFACE in line 101
      protection public
   variable UNRELATED_INTERFACES in line 104
      protection public
   variable UNRELATED_INTERFACES_WITHOUT_IMPLEMENTATIONS in line 106
      protection public
   variable UNRELATED_TYPES_BUT_MATCHES_TYPE_PARAMETER in line 112
      protection public
   variable UNRELATED_UTIL_INTERFACE in line 109
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/InnerClassAccess.java
module edu::umd::cs::findbugs::ba::InnerClassAccess
   function getField() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable field defined in edu::umd::cs::findbugs::ba::InnerClassAccess
   function getMethodName() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::InnerClassAccess
   function getMethodSignature() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::InnerClassAccess
   function isLoad() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable field defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function InnerClassAccess(String,String,@Nonnull XField,boolean) in line 34
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses variable field defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function isLoad() defined in edu::umd::cs::findbugs::ba::InnerClassAccess
   variable field in line 30
   variable isLoad in line 32
   variable methodName in line 25
   variable methodSig in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/InnerClassAccessMap.java
module edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function clearCache() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classToAccessMap defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function create() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function InnerClassAccessMap() defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function getAccessMapForClass(String) in line 341
      55 lines of code
      1 parameters
      10 conditional paths
      uses variable classToAccessMap defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
      uses variable methodName defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
      uses variable instructionList defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
      uses function InstructionCallback(JavaClass,String,String,byte[]) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
      uses function scan(byte[],Callback) defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses variable access defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
      uses function getAccess() defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
   function getIndex(byte[],int) in line 153
      3 lines of code
      2 parameters
      1 conditional paths
      uses function toInt(byte) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function getInnerClassAccess(String,String) in line 93
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getAccessMapForClass(String) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function getInnerClassAccess(INVOKESTATIC,ConstantPoolGen) in line 109
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function getInnerClassAccess(String,String) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function toInt(byte) in line 142
      7 lines of code
      1 parameters
      2 conditional paths
   function InnerClassAccessMap() in line 135
      3 lines of code
      0 parameters
      1 conditional paths
   variable classToAccessMap in line 66
   variable DEBUG in line 54
module edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
   inherits from edu::umd::cs::findbugs::ba::BytecodeScanner::Callback
   function getAccess() in line 233
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable access defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
   function handleInstruction(int,int) in line 212
      protection public
      14 lines of code
      2 parameters
      5 conditional paths
      uses function setField(int,boolean,boolean) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
      uses function getIndex(byte[],int) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
      uses variable instructionList defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
   function isValidAccessMethod(String,XField,boolean) in line 285
      46 lines of code
      3 parameters
      8 conditional paths
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
      uses variable methodName defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
   function setField(int,boolean,boolean) in line 247
      25 lines of code
      3 parameters
      3 conditional paths
      uses variable accessCount defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
      uses variable access defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isValidAccessMethod(String,XField,boolean) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
      uses variable methodName defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
   function InstructionCallback(JavaClass,String,String,byte[]) in line 202
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
      uses variable methodName defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
      uses variable instructionList defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
   variable access in line 186
   variable accessCount in line 188
   variable instructionList in line 184
   variable javaClass in line 178
   variable methodName in line 180
   variable methodSig in line 182
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/InstructionHandleMap.java
module edu::umd::cs::findbugs::ba::InstructionHandleMap
   function get(InstructionHandle) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::ba::InstructionHandleMap
   function put(InstructionHandle,ValueType) in line 42
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::ba::InstructionHandleMap
   function InstructionHandleMap(MethodGen) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::ba::InstructionHandleMap
   variable map in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/interproc/FieldPropertyDatabase.java
module edu::umd::cs::findbugs::ba::interproc::FieldPropertyDatabase
   inherits from PropertyDatabase< FieldDescriptor, Property >
   abstract class
   function parseKey(String) in line 48
      19 lines of code
      1 parameters
      1 conditional paths
   function writeKey(Writer,FieldDescriptor) in line 77
      11 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/interproc/MethodPropertyDatabase.java
module edu::umd::cs::findbugs::ba::interproc::MethodPropertyDatabase
   inherits from PropertyDatabase< MethodDescriptor, Property >
   abstract class
   function parseKey(String) in line 41
      22 lines of code
      1 parameters
      1 conditional paths
   function writeKey(Writer,MethodDescriptor) in line 65
      10 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/interproc/ParameterProperty.java
module edu::umd::cs::findbugs::ba::interproc::ParameterProperty
   function copyFrom(ParameterProperty) in line 235
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bits defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
   function getAsBitSet() in line 179
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
      uses function hasProperty(int) defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
   function getMatchingParameters(BitSet) in line 171
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function hasProperty(int) defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
   function getParamsWithProperty() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bits defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
   function hasProperty(int) in line 154
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable bits defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
   function intersectWith(ParameterProperty) in line 225
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bits defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
   function isEmpty() in line 196
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bits defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
   function iterable() in line 62
      protection public
      43 lines of code
      0 parameters
      3 conditional paths
      uses function hasProperty(int) defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
   function setParamsWithProperty(int) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setParamsWithProperty(BitSet) in line 122
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function setParamWithProperty(int,boolean) defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
   function setParamWithProperty(int,boolean) in line 136
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses function hasProperty(int) defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
      uses variable bits defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
   function toString() in line 201
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
      uses function hasProperty(int) defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
   function ParameterProperty() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ParameterProperty(int) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bits defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
   variable bits in line 37
   variable MAX_PARAMS in line 35
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/interproc/PropertyDatabase.java
module edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
   abstract class
   function decodeProperty(String) in line 265
      1 lines of code
      1 parameters
      1 conditional paths
   function encodeProperty(ValueType) in line 275
      1 lines of code
      1 parameters
      1 conditional paths
   function entrySet() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getKeys() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getProperty(KeyType) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isEmpty() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parseKey(String) in line 244
      1 lines of code
      1 parameters
      1 conditional paths
   function read(@WillClose InputStream) in line 139
      protection public
      30 lines of code
      1 parameters
      1 conditional paths
   function readFromFile(String) in line 126
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeProperty(KeyType) in line 114
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setProperty(KeyType,ValueType) in line 73
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function write(@WillClose OutputStream) in line 203
      protection public
      32 lines of code
      1 parameters
      1 conditional paths
   function writeKey(Writer,KeyType) in line 254
      1 lines of code
      2 parameters
      1 conditional paths
   function writeToFile(String) in line 177
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function PropertyDatabase() in line 61
      3 lines of code
      0 parameters
      1 conditional paths
   variable propertyMap in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/interproc/PropertyDatabaseFormatException.java
module edu::umd::cs::findbugs::ba::interproc::PropertyDatabaseFormatException
   inherits from Exception
   function PropertyDatabaseFormatException(String) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable serialVersionUID in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/INullnessAnnotationDatabase.java
module edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
   function addDefaultAnnotation(AnnotationDatabase.Target,@DottedClassName String,NullnessAnnotation) in line 137
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function addFieldAnnotation(@DottedClassName String,String,String,boolean,NullnessAnnotation) in line 87
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   function addMethodAnnotation(@DottedClassName String,String,String,boolean,NullnessAnnotation) in line 104
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   function addMethodParameterAnnotation(@DottedClassName String,String,String,boolean,int,NullnessAnnotation) in line 123
      protection public
      1 lines of code
      6 parameters
      1 conditional paths
   function getResolvedAnnotation(final Object,boolean) in line 56
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function loadAuxiliaryAnnotations() in line 62
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function parameterMustBeNonNull(XMethod,int) in line 43
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/InvalidBytecodeException.java
module edu::umd::cs::findbugs::ba::InvalidBytecodeException
   inherits from RuntimeException
   function InvalidBytecodeException(String) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function InvalidBytecodeException(String,Throwable) in line 54
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function InvalidBytecodeException(String,MethodGen,InstructionHandle) in line 68
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function InvalidBytecodeException(String,MethodGen,InstructionHandle,Throwable) in line 84
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   variable serialVersionUID in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/JavaClassAndMethod.java
module edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function equals(Object) in line 116
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function JavaClassAndMethod(JavaClass,Method) defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function getJavaClass() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function getMethod() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function getSlashedClassName() in line 106
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function hashCode() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function toMethodDescriptor() in line 101
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getSlashedClassName() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function toString() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function toXMethod() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function JavaClassAndMethod(JavaClass,Method) in line 50
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function JavaClassAndMethod(XMethod) in line 62
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   variable javaClass in line 38
   variable method in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/JavaClassAndMethodChooser.java
module edu::umd::cs::findbugs::ba::JavaClassAndMethodChooser
   function choose(JavaClassAndMethod) in line 27
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function choose(XMethod) in line 29
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/JCIPAnnotationDatabase.java
module edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function addEntryForClass(@DottedClassName String,String,ElementValue) in line 91
      protection public
      9 lines of code
      3 parameters
      2 conditional paths
      uses function getEntryForClass(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function addEntryForClassMember(ClassMember,String,ElementValue) in line 75
      protection public
      9 lines of code
      3 parameters
      2 conditional paths
   function getClassAnnotation(@DottedClassName String,String) in line 37
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getEntryForClass(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function getEntryForClass(@DottedClassName String) in line 86
      4 lines of code
      1 parameters
      1 conditional paths
   function getEntryForClassMember(ClassMember) in line 71
      3 lines of code
      1 parameters
      1 conditional paths
   function getFieldAnnotation(XField,String) in line 49
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getEntryForClassMember(ClassMember) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function getMethodAnnotation(XMethod,String) in line 60
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getEntryForClassMember(ClassMember) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function hasClassAnnotation(@DottedClassName String,String) in line 42
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getEntryForClass(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function hasFieldAnnotation(XField,String) in line 54
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getEntryForClassMember(ClassMember) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function hasMethodAnnotation(XMethod,String) in line 65
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getEntryForClassMember(ClassMember) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/AbstractMethodAnnotationAccumulator.java
module edu::umd::cs::findbugs::ba::jsr305::AbstractMethodAnnotationAccumulator
   inherits from edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
   abstract class
   function getResult() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTypeQualifierValue() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::AbstractMethodAnnotationAccumulator
   function lookupAnnotation(XMethod) in line 72
      1 lines of code
      1 parameters
      1 conditional paths
   function overrides() in line 74
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function visitOverriddenMethod(XMethod) in line 47
      22 lines of code
      1 parameters
      3 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
      uses function getXmethod() defined in edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
      uses function lookupAnnotation(XMethod) defined in edu::umd::cs::findbugs::ba::jsr305::AbstractMethodAnnotationAccumulator
      uses function getResult() defined in edu::umd::cs::findbugs::ba::jsr305::AbstractMethodAnnotationAccumulator
      uses function overrides() defined in edu::umd::cs::findbugs::ba::jsr305::AbstractMethodAnnotationAccumulator
   function AbstractMethodAnnotationAccumulator(TypeQualifierValue<?>,XMethod) in line 34
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::AbstractMethodAnnotationAccumulator
   variable typeQualifierValue in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/Analysis.java
module edu::umd::cs::findbugs::ba::jsr305::Analysis
   function addEffectiveRelevantQualifiers(HashSet< TypeQualifierValue<?>>,XMethod) in line 158
      38 lines of code
      2 parameters
      10 conditional paths
      uses variable DEBUG_FIND_EFFECTIVE_RELEVANT_QUALIFIERS defined in edu::umd::cs::findbugs::ba::jsr305::Analysis
      uses function getNumParams() defined in edu::umd::cs::findbugs::ba::XMethod
   function addKnownTypeQualifiers(HashSet<?super TypeQualifierValue<?>>,Collection< TypeQualifierAnnotation >) in line 222
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
   function addKnownTypeQualifiersForParameters(HashSet<?super TypeQualifierValue<?>>,XMethod) in line 211
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function addKnownTypeQualifiers(HashSet<?super TypeQualifierValue<?>>,Collection< TypeQualifierAnnotation >) defined in edu::umd::cs::findbugs::ba::jsr305::Analysis
   function getDirectlyRelevantTypeQualifiers(XMethod,HashSet< TypeQualifierValue<?>>) in line 201
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
   function getRelevantTypeQualifiers(MethodDescriptor,CFG) in line 76
      protection public
      81 lines of code
      2 parameters
      8 conditional paths
      uses variable FIND_EFFECTIVE_RELEVANT_QUALIFIERS defined in edu::umd::cs::findbugs::ba::jsr305::Analysis
      uses variable DEBUG_FIND_EFFECTIVE_RELEVANT_QUALIFIERS defined in edu::umd::cs::findbugs::ba::jsr305::Analysis
      uses function getDirectlyRelevantTypeQualifiers(XMethod,HashSet< TypeQualifierValue<?>>) defined in edu::umd::cs::findbugs::ba::jsr305::Analysis
      uses function addEffectiveRelevantQualifiers(HashSet< TypeQualifierValue<?>>,XMethod) defined in edu::umd::cs::findbugs::ba::jsr305::Analysis
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   variable DEBUG in line 54
   variable DEBUG_FIND_EFFECTIVE_RELEVANT_QUALIFIERS in line 65
      protection public
   variable FIND_EFFECTIVE_RELEVANT_QUALIFIERS in line 63
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/BackwardTypeQualifierDataflow.java
module edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflow
   inherits from TypeQualifierDataflow< BackwardTypeQualifierDataflowAnalysis >
   function BackwardTypeQualifierDataflow(CFG,BackwardTypeQualifierDataflowAnalysis) in line 39
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/BackwardTypeQualifierDataflowAnalysis.java
module edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   function edgeTransfer(Edge,TypeQualifierValueSet) in line 103
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable PRUNE_CONFLICTING_VALUES defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
      uses variable forwardTypeQualifierDataflow defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
      uses function pruneConflictingValues(TypeQualifierValueSet,TypeQualifierValueSet) defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
   function getBlockOrder(CFG) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
   function isForwards() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function modelArguments(Location) in line 212
      49 lines of code
      1 parameters
      7 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumParams() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable USE_DATABASE defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getParameter(MethodDescriptor,int,TypeQualifierValue<?>) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function getArgument(InvokeInstruction,ConstantPoolGen,int,int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable ARGUMENT_TO_CALLED_METHOD defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkType
      uses function setParameter(int) defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function setInterproc(boolean) defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function registerSourceSink(SourceSinkInfo) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   function modelFieldStore(Location) in line 195
      16 lines of code
      1 parameters
      2 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable FIELD_STORE defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkType
      uses function registerSourceSink(SourceSinkInfo) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   function modelReturn(TypeQualifierAnnotation,Location) in line 183
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable RETURN_VALUE defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkType
      uses function registerSourceSink(SourceSinkInfo) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   function propagateAcrossPhiNode(TypeQualifierValueSet,ValueNumber,ValueNumber) in line 272
      4 lines of code
      3 parameters
      1 conditional paths
      uses function propagateAcrossPhiNode(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function pruneConflictingValues(TypeQualifierValueSet,TypeQualifierValueSet) in line 127
      14 lines of code
      2 parameters
      4 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function getValueNumbers() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function isStrictQualifier() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function isIdentity() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function getValue(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function pruneValue(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function registerInstructionSinks() in line 157
      25 lines of code
      0 parameters
      6 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function modelReturn(TypeQualifierAnnotation,Location) defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
      uses function modelFieldStore(Location) defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
      uses function modelArguments(Location) defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
   function registerSourceSinkLocations() in line 153
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function registerInstructionSinks() defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
   function setForwardTypeQualifierDataflow(ForwardTypeQualifierDataflow) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable forwardTypeQualifierDataflow defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
   function transferInstruction(InstructionHandle,BasicBlock,TypeQualifierValueSet) in line 112
      protection public
      14 lines of code
      3 parameters
      3 conditional paths
      uses variable PRUNE_CONFLICTING_VALUES defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
      uses variable forwardTypeQualifierDataflow defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
      uses function pruneConflictingValues(TypeQualifierValueSet,TypeQualifierValueSet) defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
   function BackwardTypeQualifierDataflowAnalysis(DepthFirstSearch,ReverseDepthFirstSearch,XMethod,CFG,ValueNumberDataflow,ConstantPoolGen,TypeQualifierValue<?>) in line 87
      protection public
      6 lines of code
      7 parameters
      1 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable cpg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
   variable dfs in line 62
   variable forwardTypeQualifierDataflow in line 66
   variable PRUNE_CONFLICTING_VALUES in line 60
   variable rdfs in line 64
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/BackwardTypeQualifierDataflowFactory.java
module edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowFactory
   inherits from TypeQualifierDataflowFactory< BackwardTypeQualifierDataflowAnalysis, BackwardTypeQualifierDataflow >
   function getDataflow(DepthFirstSearch,XMethod,CFG,ValueNumberDataflow,ConstantPoolGen,IAnalysisCache,MethodDescriptor,TypeQualifierValue<?>) in line 73
      25 lines of code
      8 parameters
      2 conditional paths
      uses variable methodDescriptor defined in TypeQualifierDataflowFactory< BackwardTypeQualifierDataflowAnalysis, BackwardTypeQualifierDataflow >
      uses function getDataflow(DepthFirstSearch,XMethod,CFG,ValueNumberDataflow,ConstantPoolGen,IAnalysisCache,MethodDescriptor,TypeQualifierValue<?>) defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowFactory
      uses function setForwardTypeQualifierDataflow(ForwardTypeQualifierDataflow) defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
      uses function registerSourceSinkLocations() defined in edu::umd::cs::findbugs::ba::jsr305::BackwardTypeQualifierDataflowAnalysis
      uses variable DUMP_DATAFLOW_ANALYSIS defined in edu::umd::cs::findbugs::ba::ClassContext
   function populateDatabase(BackwardTypeQualifierDataflow,ValueNumberDataflow,XMethod,TypeQualifierValue<?>) in line 100
      33 lines of code
      4 parameters
      5 conditional paths
      uses variable USE_DATABASE defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
      uses function getValue(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable ALWAYS defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses variable NEVER defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function setParameter(MethodDescriptor,int,TypeQualifierValue<?>,TypeQualifierAnnotation) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
   function BackwardTypeQualifierDataflowFactory(MethodDescriptor) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodDescriptor defined in TypeQualifierDataflowFactory< BackwardTypeQualifierDataflowAnalysis, BackwardTypeQualifierDataflow >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/DirectlyRelevantTypeQualifiersDatabase.java
module edu::umd::cs::findbugs::ba::jsr305::DirectlyRelevantTypeQualifiersDatabase
   function getAllKnownQualifiers() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable allKnownQualifiers defined in edu::umd::cs::findbugs::ba::jsr305::DirectlyRelevantTypeQualifiersDatabase
   function getDirectlyRelevantTypeQualifiers(MethodDescriptor) in line 58
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable methodToDirectlyRelevantQualifiersMap defined in edu::umd::cs::findbugs::ba::jsr305::DirectlyRelevantTypeQualifiersDatabase
   function setDirectlyRelevantTypeQualifiers(MethodDescriptor,Collection< TypeQualifierValue<?>>) in line 84
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable methodToDirectlyRelevantQualifiersMap defined in edu::umd::cs::findbugs::ba::jsr305::DirectlyRelevantTypeQualifiersDatabase
      uses variable allKnownQualifiers defined in edu::umd::cs::findbugs::ba::jsr305::DirectlyRelevantTypeQualifiersDatabase
   function DirectlyRelevantTypeQualifiersDatabase() in line 46
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable methodToDirectlyRelevantQualifiersMap defined in edu::umd::cs::findbugs::ba::jsr305::DirectlyRelevantTypeQualifiersDatabase
      uses variable allKnownQualifiers defined in edu::umd::cs::findbugs::ba::jsr305::DirectlyRelevantTypeQualifiersDatabase
   variable allKnownQualifiers in line 41
   variable methodToDirectlyRelevantQualifiersMap in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/FindBugsDefaultAnnotations.java
module edu::umd::cs::findbugs::ba::jsr305::FindBugsDefaultAnnotations
   abstract class
   variable DEFAULT_ANNOTATION in line 45
      protection public
   variable DEFAULT_ANNOTATION_FOR_FIELDS in line 50
      protection public
   variable DEFAULT_ANNOTATION_FOR_METHODS in line 54
      protection public
   variable DEFAULT_ANNOTATION_FOR_PARAMETERS in line 58
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/FlowValue.java
module edu::umd::cs::findbugs::ba::jsr305::FlowValue
   function backwardsValueConflictsWithSource(FlowValue,SourceSinkInfo,TypeQualifierValue,boolean) in line 143
      protection public
      16 lines of code
      4 parameters
      2 conditional paths
      uses function getWhen() defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function isStrictQualifier() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses variable ALWAYS defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses variable NEVER defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
   function flowValueFromWhen(When) in line 115
      protection public
      14 lines of code
      1 parameters
      5 conditional paths
      uses variable ALWAYS defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses variable UNKNOWN defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses variable NEVER defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
   function isNo() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NO defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue::Bits
   function isUncertain() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable UNCERTAIN defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue::Bits
   function isYes() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable YES defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue::Bits
   function meet(FlowValue,FlowValue) in line 74
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
   function valuesConflict(boolean,FlowValue,FlowValue) in line 96
      protection public
      11 lines of code
      3 parameters
      3 conditional paths
   function FlowValue(int) in line 43
      3 lines of code
      1 parameters
      1 conditional paths
   variable ALWAYS in line 31
      protection public
   variable bits in line 41
   variable mergeMatrix in line 72
   variable NEVER in line 31
      protection public
   variable TOP in line 31
      protection public
   variable UNKNOWN in line 31
      protection public
module edu::umd::cs::findbugs::ba::jsr305::FlowValue::Bits
   variable NO in line 38
      protection public
   variable UNCERTAIN in line 36
      protection public
   variable YES in line 34
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/ForwardTypeQualifierDataflow.java
module edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflow
   inherits from TypeQualifierDataflow< ForwardTypeQualifierDataflowAnalysis >
   function ForwardTypeQualifierDataflow(CFG,ForwardTypeQualifierDataflowAnalysis) in line 39
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/ForwardTypeQualifierDataflowAnalysis.java
module edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   function getBlockOrder(CFG) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
   function isForwards() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function propagateAcrossPhiNode(TypeQualifierValueSet,ValueNumber,ValueNumber) in line 258
      4 lines of code
      3 parameters
      1 conditional paths
      uses function propagateAcrossPhiNode(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function registerConstantPushSource(Location) in line 166
      6 lines of code
      1 parameters
      1 conditional paths
      uses function registerConstantSource(Location,@CheckForNull Object) defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
   function registerConstantSource(Location,@CheckForNull Object) in line 148
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function canValidate(@CheckForNull Object) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function validate(@CheckForNull Object) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function isStrictQualifier() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function registerTopOfStackSource(SourceSinkType,Location,When,boolean,@CheckForNull Object) defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
      uses variable CONSTANT_VALUE defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkType
   function registerFieldLoadSource(Location) in line 205
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function registerTopOfStackSource(SourceSinkType,Location,When,boolean,@CheckForNull Object) defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
      uses variable FIELD_LOAD defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkType
   function registerInstructionSources() in line 101
      31 lines of code
      0 parameters
      9 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable cpg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function registerReturnValueSource(Location) defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
      uses function registerFieldLoadSource(Location) defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
      uses function registerLDCValueSource(Location) defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
      uses function registerLDC2ValueSource(Location) defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
      uses function registerConstantPushSource(Location) defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
      uses function registerPushNullSource(Location) defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
      uses function registerOtherSource(Location) defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
   function registerLDC2ValueSource(Location) in line 139
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function registerConstantSource(Location,@CheckForNull Object) defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
   function registerLDCValueSource(Location) in line 133
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function registerConstantSource(Location,@CheckForNull Object) defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
   function registerOtherSource(Location) in line 161
      4 lines of code
      1 parameters
      1 conditional paths
      uses function registerTopOfStackSource(SourceSinkType,Location,When,boolean,@CheckForNull Object) defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
      uses variable OTHER defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkType
   function registerParameterSources() in line 231
      25 lines of code
      0 parameters
      2 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable cfg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function parameterSignatures() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable PARAMETER defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkType
      uses function getLocationAtEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function setParameterAndLocal(int,int) defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function registerSourceSink(SourceSinkInfo) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   function registerPushNullSource(Location) in line 145
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerConstantSource(Location,@CheckForNull Object) defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
   function registerReturnValueSource(Location) in line 172
      32 lines of code
      1 parameters
      6 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable USE_DATABASE defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getReturnValue(MethodDescriptor,TypeQualifierValue<?>) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function registerTopOfStackSource(SourceSinkType,Location,When,boolean,@CheckForNull Object) defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
      uses variable RETURN_VALUE_OF_CALLED_METHOD defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkType
   function registerSourceSinkLocations() in line 96
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function registerParameterSources() defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
      uses function registerInstructionSources() defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
   function registerTopOfStackSource(SourceSinkType,Location,When,boolean,@CheckForNull Object) in line 216
      14 lines of code
      5 parameters
      3 conditional paths
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function isStrictQualifier() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function setInterproc(boolean) defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function setConstantValue(Object) defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function registerSourceSink(SourceSinkInfo) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   function ForwardTypeQualifierDataflowAnalysis(DepthFirstSearch,XMethod,CFG,ValueNumberDataflow,ConstantPoolGen,TypeQualifierValue<?>) in line 79
      protection public
      5 lines of code
      6 parameters
      1 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable cpg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
   variable dfs in line 60
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/ForwardTypeQualifierDataflowFactory.java
module edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowFactory
   inherits from TypeQualifierDataflowFactory< ForwardTypeQualifierDataflowAnalysis, ForwardTypeQualifierDataflow >
   function getDataflow(DepthFirstSearch,XMethod,CFG,ValueNumberDataflow,ConstantPoolGen,IAnalysisCache,MethodDescriptor,TypeQualifierValue<?>) in line 67
      14 lines of code
      8 parameters
      2 conditional paths
      uses function registerSourceSinkLocations() defined in edu::umd::cs::findbugs::ba::jsr305::ForwardTypeQualifierDataflowAnalysis
      uses variable DUMP_DATAFLOW_ANALYSIS defined in edu::umd::cs::findbugs::ba::ClassContext
   function populateDatabase(ForwardTypeQualifierDataflow,ValueNumberDataflow,XMethod,TypeQualifierValue<?>) in line 83
      56 lines of code
      4 parameters
      10 conditional paths
      uses variable USE_DATABASE defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
      uses variable ALWAYS defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses variable NEVER defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function setReturnValue(MethodDescriptor,TypeQualifierValue<?>,TypeQualifierAnnotation) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
   function ForwardTypeQualifierDataflowFactory(MethodDescriptor) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodDescriptor defined in TypeQualifierDataflowFactory< ForwardTypeQualifierDataflowAnalysis, ForwardTypeQualifierDataflow >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/JSR305NullnessAnnotations.java
module edu::umd::cs::findbugs::ba::jsr305::JSR305NullnessAnnotations
   abstract class
   variable CHECK_FOR_NULL in line 32
      protection public
   variable NONNULL in line 35
      protection public
   variable NULLABLE in line 37
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/ParameterAnnotationAccumulator.java
module edu::umd::cs::findbugs::ba::jsr305::ParameterAnnotationAccumulator
   inherits from edu::umd::cs::findbugs::ba::jsr305::AbstractMethodAnnotationAccumulator
   function getResult() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable result defined in edu::umd::cs::findbugs::ba::jsr305::ParameterAnnotationAccumulator
   function lookupAnnotation(XMethod) in line 67
      10 lines of code
      1 parameters
      2 conditional paths
      uses function overrides() defined in edu::umd::cs::findbugs::ba::jsr305::ParameterAnnotationAccumulator
      uses variable parameter defined in edu::umd::cs::findbugs::ba::jsr305::ParameterAnnotationAccumulator
      uses function getTypeQualifierValue() defined in edu::umd::cs::findbugs::ba::jsr305::AbstractMethodAnnotationAccumulator
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function overrides() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ParameterAnnotationAccumulator(TypeQualifierValue<?>,XMethod,int) in line 46
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::AbstractMethodAnnotationAccumulator
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::ch::OverriddenMethodsVisitor
      uses variable parameter defined in edu::umd::cs::findbugs::ba::jsr305::ParameterAnnotationAccumulator
   variable overrides in line 34
   variable parameter in line 30
   variable result in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/ParameterAnnotationLookupResult.java
module edu::umd::cs::findbugs::ba::jsr305::ParameterAnnotationLookupResult
   inherits from edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult
   function combine(TypeQualifierAnnotation,TypeQualifierAnnotation) in line 38
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/ReturnTypeAnnotationAccumulator.java
module edu::umd::cs::findbugs::ba::jsr305::ReturnTypeAnnotationAccumulator
   inherits from edu::umd::cs::findbugs::ba::jsr305::AbstractMethodAnnotationAccumulator
   function getResult() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function lookupAnnotation(XMethod) in line 64
      4 lines of code
      1 parameters
      1 conditional paths
   function overrides() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ReturnTypeAnnotationAccumulator(TypeQualifierValue<?>,XMethod) in line 44
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable overrides in line 33
   variable result in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/ReturnTypeAnnotationLookupResult.java
module edu::umd::cs::findbugs::ba::jsr305::ReturnTypeAnnotationLookupResult
   inherits from edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult
   function combine(TypeQualifierAnnotation,TypeQualifierAnnotation) in line 38
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/SourceSinkInfo.java
module edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   inherits from Comparable
   function compareTo(SourceSinkInfo) in line 161
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function compareTo(Location) defined in edu::umd::cs::findbugs::ba::Location
      uses variable location defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function equals(Object) in line 189
      protection public
      49 lines of code
      1 parameters
      18 conditional paths
      uses function SourceSinkInfo(SourceSinkType,Location,ValueNumber,When) defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable constantValue defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable interproc defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable local defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable location defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::Location
      uses variable parameter defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable type defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable vn defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function getConstantValue() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable constantValue defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function getInterproc() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable interproc defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function getLocal() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable local defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function getLocation() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function getParameter() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parameter defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function getType() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function getValueNumber() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vn defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function getWhen() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function hashCode() in line 174
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable constantValue defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable interproc defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable local defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable location defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::Location
      uses variable parameter defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable type defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable vn defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function setConstantValue(Object) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable constantValue defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function setInterproc(boolean) in line 139
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable interproc defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function setParameter(int) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parameter defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function setParameterAndLocal(int,int) in line 111
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable parameter defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable local defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function toString() in line 245
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable location defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function toCompactString() defined in edu::umd::cs::findbugs::ba::Location
      uses variable vn defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function SourceSinkInfo(SourceSinkType,Location,ValueNumber,When) in line 62
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable location defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable vn defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   variable constantValue in line 45
   variable interproc in line 47
   variable local in line 43
   variable location in line 35
   variable parameter in line 41
   variable type in line 33
   variable vn in line 37
   variable when in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/SourceSinkType.java
module edu::umd::cs::findbugs::ba::jsr305::SourceSinkType
   variable ARGUMENT_TO_CALLED_METHOD in line 34
      protection public
   variable CONSTANT_VALUE in line 31
      protection public
   variable FIELD_LOAD in line 31
      protection public
   variable FIELD_STORE in line 35
      protection public
   variable OTHER in line 31
      protection public
   variable PARAMETER in line 31
      protection public
   variable RETURN_VALUE in line 34
      protection public
   variable RETURN_VALUE_OF_CALLED_METHOD in line 31
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierAnnotation.java
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function clearInstance() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function combineAnnotations(TypeQualifierAnnotation,TypeQualifierAnnotation,When) in line 139
      19 lines of code
      3 parameters
      3 conditional paths
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function getValue(TypeQualifierValue<?>,When) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function combineParameterAnnotations(TypeQualifierAnnotation,TypeQualifierAnnotation) in line 135
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function combineAnnotations(TypeQualifierAnnotation,TypeQualifierAnnotation,When) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses variable combineParameterMatrix defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function combineReturnTypeAnnotations(TypeQualifierAnnotation,TypeQualifierAnnotation) in line 121
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function combineAnnotations(TypeQualifierAnnotation,TypeQualifierAnnotation,When) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses variable combineReturnValueMatrix defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function equals(Object) in line 186
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function TypeQualifierAnnotation(TypeQualifierValue<?>,When) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function getValue(TypeQualifierValue<?>,When) in line 169
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function get(K1,K2) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function TypeQualifierAnnotation(TypeQualifierValue<?>,When) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function put(K1,K2,V) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
   function getValues(Map< TypeQualifierValue<?>, When >) in line 160
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getValue(TypeQualifierValue<?>,When) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function hashCode() in line 181
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function toString() in line 195
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function TypeQualifierAnnotation(TypeQualifierValue<?>,When) in line 44
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   variable combineParameterMatrix in line 102
   variable combineReturnValueMatrix in line 95
   variable instance in line 60
   variable OVERRIDES_BUT_NO_ANNOTATION in line 49
      protection public
   variable TOP in line 93
   variable typeQualifier in line 40
      protection public
   variable when in line 42
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierAnnotationLookupResult.java
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult
   function combine(TypeQualifierAnnotation,TypeQualifierAnnotation) in line 124
      3 lines of code
      2 parameters
      1 conditional paths
   function getEffectiveTypeQualifierAnnotation() in line 96
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses variable partialResultList defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult
      uses function getTypeQualifierAnnotation() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult::PartialResult
      uses function combine(TypeQualifierAnnotation,TypeQualifierAnnotation) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult
   function toString() in line 134
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable partialResultList defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult
   variable partialResultList in line 79
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult::PartialResult
   function getAnnotatedObject() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable annotatedObject defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult::PartialResult
   function getTypeQualifierAnnotation() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeQualifierAnnotation defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult::PartialResult
   function toString() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable annotatedObject defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult::PartialResult
      uses variable typeQualifierAnnotation defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult::PartialResult
   variable annotatedObject in line 45
   variable typeQualifierAnnotation in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierApplications.java
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function checkFindBugsDefaultAnnotation(ClassDescriptor,AnnotatedObject,TypeQualifierValue<?>) in line 467
      64 lines of code
      3 parameters
      13 conditional paths
      uses function getAnnotation(ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getValue(String) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses function toString() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function extractAnnotation(Collection< AnnotationValue >,TypeQualifierValue<?>) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function clearInstance() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function computeEffectiveTypeQualifierAnnotation(TypeQualifierValue<?>,AnnotatedObject) in line 596
      53 lines of code
      2 parameters
      8 conditional paths
      uses function getEffectiveObjectAnnotations() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function getDirectTypeQualifierAnnotation(AnnotatedObject,TypeQualifierValue<?>) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function getInheritedTypeQualifierAnnotation(XMethod,TypeQualifierValue<?>) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses variable OVERRIDES_BUT_NO_ANNOTATION defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function getDefaultTypeQualifierAnnotation(AnnotatedObject,TypeQualifierValue<?>,boolean) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function computeEffectiveTypeQualifierAnnotation(TypeQualifierValue<?>,XMethod,int) in line 788
      122 lines of code
      3 parameters
      25 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function getEffectiveParameterAnnotations() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function get(K1,K2) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
      uses function put(K1,K2,V) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
      uses function containsKey(K1,K2) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
      uses function isVarArgs() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function getNumParams() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function getDirectTypeQualifierAnnotation(AnnotatedObject,TypeQualifierValue<?>) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isPrivate() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getInheritedTypeQualifierAnnotation(XMethod,TypeQualifierValue<?>) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses variable OVERRIDES_BUT_NO_ANNOTATION defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function isVariableSynthetic(int) defined in edu::umd::cs::findbugs::ba::XMethod
      uses function getDefaultTypeQualifierAnnotationForParameters(XMethod,TypeQualifierValue<?>,boolean) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function computeExclusiveQualifier(TypeQualifierValue<?>,ComputeEffectiveTypeQualifierAnnotation) in line 1051
      50 lines of code
      2 parameters
      7 conditional paths
      uses function isExclusiveQualifier() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function isExhaustiveQualifier() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function compute(TypeQualifierValue<?>) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications::ComputeEffectiveTypeQualifierAnnotation
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
   function constructTypeQualifierAnnotation(AnnotationValue) in line 251
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function getValue(String) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses variable value defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
      uses function getAnnotationClass() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function constructTypeQualifierAnnotation(Set< TypeQualifierAnnotation >,AnnotationValue) in line 270
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function constructTypeQualifierAnnotation(AnnotationValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function extractAnnotation(Collection< AnnotationValue >,TypeQualifierValue<?>) in line 532
      13 lines of code
      2 parameters
      4 conditional paths
      uses function constructTypeQualifierAnnotation(AnnotationValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
   function findMatchingTypeQualifierAnnotation(Collection< TypeQualifierAnnotation >,TypeQualifierValue<?>) in line 388
      9 lines of code
      2 parameters
      3 conditional paths
   function getApplicableApplications(AnnotatedObject) in line 351
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getApplicableScopedApplications(Set< TypeQualifierAnnotation >,AnnotatedObject,ElementType) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function getElementType() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function getApplicableApplications(XMethod,int) in line 374
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getApplicableScopedApplications(Set< TypeQualifierAnnotation >,AnnotatedObject,ElementType) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getApplicableScopedApplications(Set< TypeQualifierAnnotation >,AnnotatedObject,ElementType) in line 288
      9 lines of code
      3 parameters
      3 conditional paths
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getContainingScope() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getDirectApplications(Set< TypeQualifierAnnotation >,XMethod,int) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getApplicableScopedApplications(AnnotatedObject,ElementType) in line 309
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getApplicableScopedApplications(Set< TypeQualifierAnnotation >,AnnotatedObject,ElementType) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getApplicableScopedApplications(XMethod,int) in line 326
      7 lines of code
      2 parameters
      1 conditional paths
      uses function getApplicableScopedApplications(Set< TypeQualifierAnnotation >,AnnotatedObject,ElementType) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function getDirectApplications(Set< TypeQualifierAnnotation >,XMethod,int) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getDefaultAnnotation(AnnotatedObject,TypeQualifierValue<?>,ElementType) in line 411
      54 lines of code
      3 parameters
      9 conditional paths
      uses function getAnnotations() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function extractAnnotation(Collection< AnnotationValue >,TypeQualifierValue<?>) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function checkFindBugsDefaultAnnotation(ClassDescriptor,AnnotatedObject,TypeQualifierValue<?>) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses variable DEFAULT_ANNOTATION defined in edu::umd::cs::findbugs::ba::jsr305::FindBugsDefaultAnnotations
      uses variable DEFAULT_ANNOTATION_FOR_FIELDS defined in edu::umd::cs::findbugs::ba::jsr305::FindBugsDefaultAnnotations
      uses variable DEFAULT_ANNOTATION_FOR_METHODS defined in edu::umd::cs::findbugs::ba::jsr305::FindBugsDefaultAnnotations
      uses variable DEFAULT_ANNOTATION_FOR_PARAMETERS defined in edu::umd::cs::findbugs::ba::jsr305::FindBugsDefaultAnnotations
      uses function getAnnotation(ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function getDefaultTypeQualifierAnnotation(AnnotatedObject,TypeQualifierValue<?>,boolean) in line 712
      36 lines of code
      3 parameters
      7 conditional paths
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getElementType() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getContainingScope() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getDirectApplications(Set< TypeQualifierAnnotation >,XMethod,int) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function findMatchingTypeQualifierAnnotation(Collection< TypeQualifierAnnotation >,TypeQualifierValue<?>) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function getDefaultAnnotation(AnnotatedObject,TypeQualifierValue<?>,ElementType) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getDefaultTypeQualifierAnnotationForParameters(XMethod,TypeQualifierValue<?>,boolean) in line 984
      66 lines of code
      3 parameters
      13 conditional paths
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function isAnonymousClass() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function isPrivate() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isProtected() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getDirectApplications(Set< TypeQualifierAnnotation >,XMethod,int) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function findMatchingTypeQualifierAnnotation(Collection< TypeQualifierAnnotation >,TypeQualifierValue<?>) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function getDefaultAnnotation(AnnotatedObject,TypeQualifierValue<?>,ElementType) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function getContainingScope() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function getDirectAnnotation(AnnotatedObject) in line 148
      15 lines of code
      1 parameters
      4 conditional paths
      uses function getDirectObjectAnnotations() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function getAnnotationDescriptors() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getAnnotations() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function getDirectAnnotation(XMethod,int) in line 174
      28 lines of code
      2 parameters
      7 conditional paths
      uses function getDirectParameterAnnotations() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function getNumParams() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function isVarArgs() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function getParameterAnnotations(int) defined in edu::umd::cs::findbugs::ba::XMethod
   function getDirectApplications(Set< TypeQualifierAnnotation >,XMethod,int) in line 214
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses function getDirectAnnotation(AnnotatedObject) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function constructTypeQualifierAnnotation(AnnotationValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getDirectApplications(Set< TypeQualifierAnnotation >,AnnotatedObject,ElementType) in line 233
      protection public
      10 lines of code
      3 parameters
      3 conditional paths
      uses function getElementType() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getDirectAnnotation(AnnotatedObject) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function constructTypeQualifierAnnotation(AnnotationValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getDirectObjectAnnotations() in line 123
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getDirectParameterAnnotations() in line 119
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getDirectTypeQualifierAnnotation(AnnotatedObject,TypeQualifierValue<?>) in line 660
      11 lines of code
      2 parameters
      1 conditional paths
      uses function getDirectApplications(Set< TypeQualifierAnnotation >,XMethod,int) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function getElementType() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function findMatchingTypeQualifierAnnotation(Collection< TypeQualifierAnnotation >,TypeQualifierValue<?>) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getDirectTypeQualifierAnnotation(XMethod,int,TypeQualifierValue<?>) in line 925
      protection public
      13 lines of code
      3 parameters
      3 conditional paths
      uses function bridgeTo() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function getDirectApplications(Set< TypeQualifierAnnotation >,XMethod,int) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function findMatchingTypeQualifierAnnotation(Collection< TypeQualifierAnnotation >,TypeQualifierValue<?>) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getEffectiveObjectAnnotations() in line 115
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getEffectiveParameterAnnotations() in line 111
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getEffectiveTypeQualifierAnnotation(AnnotatedObject,TypeQualifierValue<?>) in line 559
      protection public
      36 lines of code
      2 parameters
      6 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getInnerClassAccess(String,String) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable isLoad defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function getField() defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function computeEffectiveTypeQualifierAnnotation(TypeQualifierValue<?>,AnnotatedObject) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function isExclusiveQualifier() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function computeExclusiveQualifier(TypeQualifierValue<?>,ComputeEffectiveTypeQualifierAnnotation) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getEffectiveTypeQualifierAnnotation(final XMethod,final int,TypeQualifierValue<?>) in line 764
      protection public
      21 lines of code
      3 parameters
      2 conditional paths
      uses function computeEffectiveTypeQualifierAnnotation(TypeQualifierValue<?>,AnnotatedObject) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
      uses function isExclusiveQualifier() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function computeExclusiveQualifier(TypeQualifierValue<?>,ComputeEffectiveTypeQualifierAnnotation) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   function getInheritedTypeQualifierAnnotation(XMethod,TypeQualifierValue<?>) in line 684
      protection public
      16 lines of code
      2 parameters
      3 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses variable OVERRIDES_BUT_NO_ANNOTATION defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function getInheritedTypeQualifierAnnotation(XMethod,int,TypeQualifierValue<?>) in line 953
      protection public
      17 lines of code
      3 parameters
      3 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getResult() defined in edu::umd::cs::findbugs::ba::jsr305::ParameterAnnotationAccumulator
      uses function getEffectiveTypeQualifierAnnotation() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotationLookupResult
      uses variable overrides defined in edu::umd::cs::findbugs::ba::jsr305::ParameterAnnotationAccumulator
      uses variable OVERRIDES_BUT_NO_ANNOTATION defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function updateAnnotations(AnnotatedObject) in line 127
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function clearInstance() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications
   variable instance in line 97
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications::Data
   variable directObjectAnnotations in line 77
   variable directParameterAnnotations in line 80
   variable effectiveObjectAnnotations in line 87
   variable effectiveParameterAnnotations in line 94
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierApplications::ComputeEffectiveTypeQualifierAnnotation
   function compute(TypeQualifierValue<?>) in line 137
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierDatabase.java
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
   function getParameter(MethodDescriptor,int,TypeQualifierValue<?>) in line 138
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses variable parameterMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
   function getReturnValue(MethodDescriptor,TypeQualifierValue<?>) in line 89
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable returnValueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
   function setParameter(MethodDescriptor,int,TypeQualifierValue<?>,TypeQualifierAnnotation) in line 112
      protection public
      12 lines of code
      4 parameters
      3 conditional paths
      uses variable parameterMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
   function setReturnValue(MethodDescriptor,TypeQualifierValue<?>,TypeQualifierAnnotation) in line 65
      protection public
      12 lines of code
      3 parameters
      3 conditional paths
      uses variable returnValueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDatabase
   function TypeQualifierDatabase() in line 50
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG in line 41
      protection public
   variable parameterMap in line 45
   variable returnValueMap in line 43
   variable USE_DATABASE in line 39
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierDataflow.java
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflow
   inherits from edu::umd::cs::findbugs::ba::Dataflow
   function TypeQualifierDataflow(CFG,AnalysisType) in line 41
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierDataflowAnalysis.java
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflowAnalysis
   abstract class
   function copy(TypeQualifierValueSet,TypeQualifierValueSet) in line 160
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function makeSameAs(TypeQualifierValueSet) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function createFact() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   function edgeTransfer(Edge,TypeQualifierValueSet) in line 236
      protection public
      37 lines of code
      2 parameters
      7 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable PHI_NODE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function propagateAcrossPhiNode(TypeQualifierValueSet,ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function isForwards() defined in edu::umd::cs::findbugs::ba::DataflowAnalysis
      uses function registerSourceSinkLocations() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   function getSourceSinkInfoSet(Location) in line 301
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceSinkMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   function initEntryFact(TypeQualifierValueSet) in line 137
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isFactValid(TypeQualifierValueSet) in line 149
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function isTop(TypeQualifierValueSet) in line 180
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function makeFactTop(TypeQualifierValueSet) in line 191
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function meetInto(TypeQualifierValueSet,Edge,TypeQualifierValueSet) in line 202
      protection public
      14 lines of code
      3 parameters
      3 conditional paths
   function propagateAcrossPhiNode(TypeQualifierValueSet,ValueNumber,ValueNumber) in line 274
      1 lines of code
      3 parameters
      1 conditional paths
   function registerSourceSink(SourceSinkInfo) in line 283
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable sourceSinkMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function registerSourceSinkLocations() in line 281
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function same(TypeQualifierValueSet,TypeQualifierValueSet) in line 224
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function transferInstruction(InstructionHandle,BasicBlock,TypeQualifierValueSet) in line 315
      protection public
      35 lines of code
      3 parameters
      7 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable cpg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable sourceSinkMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses function toCompactString() defined in edu::umd::cs::findbugs::ba::Location
      uses function modelSourceSink(SourceSinkInfo) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function TypeQualifierDataflowAnalysis(XMethod,CFG,ValueNumberDataflow,ConstantPoolGen,TypeQualifierValue<?>) in line 120
      protection public
      9 lines of code
      5 parameters
      1 conditional paths
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable cpg defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
      uses variable typeQualifierValue defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowAnalysis
   variable cfg in line 95
   variable cpg in line 101
   variable sourceSinkMap in line 103
   variable typeQualifierValue in line 99
   variable vnaDataflow in line 97
   variable xmethod in line 93
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierDataflowFactory.java
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowFactory
   abstract class
   function compute(TypeQualifierValue<?>) in line 81
      32 lines of code
      1 parameters
      1 conditional paths
   function getDataflow(TypeQualifierValue<?>) in line 72
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function getDataflow(DepthFirstSearch,XMethod,CFG,ValueNumberDataflow,ConstantPoolGen,IAnalysisCache,MethodDescriptor,TypeQualifierValue<?>) in line 114
      1 lines of code
      8 parameters
      1 conditional paths
   function populateDatabase(DataflowType,ValueNumberDataflow,XMethod,TypeQualifierValue<?>) in line 118
      1 lines of code
      4 parameters
      1 conditional paths
   function TypeQualifierDataflowFactory(MethodDescriptor) in line 67
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable dataflowMap in line 63
   variable methodDescriptor in line 65
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierDataflowFactory::DataflowResult
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierResolver.java
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierResolver
   function logMissingAnnotationClass(MissingClassException) in line 160
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function resolveTypeQualifierDefaults(Collection< AnnotationValue >,ElementType) in line 90
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
   function resolveTypeQualifierDefaults(AnnotationValue,ElementType,LinkedList< AnnotationValue >) in line 203
      34 lines of code
      3 parameters
      8 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getAnnotationClass() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses function getAnnotation(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::XClass
      uses function getValue(String) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses variable desc defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable value defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
      uses function getAnnotationDescriptors() defined in edu::umd::cs::findbugs::ba::XClass
      uses function resolveTypeQualifierNicknames(AnnotationValue,LinkedList< AnnotationValue >,LinkedList< ClassDescriptor >) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierResolver
      uses function logMissingAnnotationClass(MissingClassException) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierResolver
   function resolveTypeQualifierNicknames(AnnotationValue,LinkedList< AnnotationValue >,LinkedList< ClassDescriptor >) in line 113
      46 lines of code
      3 parameters
      10 conditional paths
      uses function getAnnotationClass() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::jsr305::JSR305NullnessAnnotations
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::jsr305::JSR305NullnessAnnotations
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getAnnotationDescriptors() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getAnnotation(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::XClass
      uses function logMissingAnnotationClass(MissingClassException) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierResolver
   function resolveTypeQualifiers(AnnotationValue) in line 74
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function resolveTypeQualifierNicknames(AnnotationValue,LinkedList< AnnotationValue >,LinkedList< ClassDescriptor >) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierResolver
   function resolveTypeQualifiers(Collection< AnnotationValue >) in line 177
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function resolveTypeQualifierNicknames(AnnotationValue,LinkedList< AnnotationValue >,LinkedList< ClassDescriptor >) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierResolver
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierValue.java
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
   function canValidate(@CheckForNull Object) in line 262
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function clearInstance() in line 258
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function equals(Object) in line 419
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getAllKnownTypeQualifiers() in line 320
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getComplementaryExclusiveTypeQualifierValue(TypeQualifierValue<?>) in line 332
      protection public
      18 lines of code
      1 parameters
      1 conditional paths
   function getQualifierClass(ClassDescriptor) in line 216
      17 lines of code
      1 parameters
      1 conditional paths
   function getTypeQualifierClassDescriptor() in line 376
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getValidator(Class<?extends TypeQualifierValidator< A >>) in line 209
      5 lines of code
      1 parameters
      1 conditional paths
   function getValue(ClassDescriptor,@CheckForNull Object) in line 298
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
   function getValue(Class< A >,@CheckForNull Object) in line 311
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function hashCode() in line 410
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function hasMultipleVariants(TypeQualifierValue<?>) in line 361
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function isExclusiveQualifier() in line 395
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isExhaustiveQualifier() in line 405
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isStrictQualifier() in line 385
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 428
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function validate(@CheckForNull Object) in line 269
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
   function TypeQualifierValue(ClassDescriptor,@CheckForNull Object) in line 90
      118 lines of code
      2 parameters
      1 conditional paths
   variable DEBUG in line 63
      protection public
   variable DEBUG_CLASSLOADING in line 64
      protection public
   variable EXCLUSIVE_ANNOTATION in line 66
   variable EXHAUSTIVE_ANNOTATION in line 69
   variable instance in line 251
   variable isExclusive in line 81
   variable isExhaustive in line 83
   variable isStrict in line 79
   variable proxy in line 75
      protection public
   variable typeQualifier in line 72
      protection public
   variable typeQualifierClass in line 73
      protection public
   variable validator in line 86
   variable value in line 77
      protection public
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue::Data
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/TypeQualifierValueSet.java
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function addSourceSinkInfo(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber,SourceSinkInfo) in line 115
      9 lines of code
      3 parameters
      2 conditional paths
   function appendSourceSinkInfos(StringBuilder,String,Set<?extends SourceSinkInfo >) in line 380
      16 lines of code
      3 parameters
      3 conditional paths
   function copySourceSinkInfoSetMap(Map< ValueNumber, Set< SourceSinkInfo >>,Map< ValueNumber, Set< SourceSinkInfo >>) in line 201
      8 lines of code
      2 parameters
      2 conditional paths
   function equals(Object) in line 297
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function TypeQualifierValueSet(TypeQualifierValue<?>) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function isValid() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable valueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable state defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function getOrCreateSourceSinkInfoSet(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber) in line 158
      9 lines of code
      2 parameters
      2 conditional paths
   function getSourceSinkInfoSet(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber) in line 149
      9 lines of code
      2 parameters
      2 conditional paths
   function getValue(ValueNumber) in line 170
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable valueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable TOP defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
   function getValueNumbers() in line 175
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function getWhere(ValueNumber) in line 132
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function getValue(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function getSourceSinkInfoSet(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereAlways defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereNever defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function getWhereAlways(ValueNumber) in line 141
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSourceSinkInfoSet(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereAlways defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function getWhereNever(ValueNumber) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSourceSinkInfoSet(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereNever defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function hashCode() in line 315
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isBottom() in line 221
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function isTop() in line 210
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function isValid() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function makeSameAs(TypeQualifierValueSet) in line 191
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function reset(State) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable state defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable valueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function copySourceSinkInfoSetMap(Map< ValueNumber, Set< SourceSinkInfo >>,Map< ValueNumber, Set< SourceSinkInfo >>) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereAlways defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereNever defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function makeValid() in line 183
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function reset(State) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function mergeSourceSinkInfoSets(Map< ValueNumber, Set< SourceSinkInfo >>,Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber) in line 279
      11 lines of code
      3 parameters
      3 conditional paths
      uses function getSourceSinkInfoSet(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function getOrCreateSourceSinkInfoSet(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function mergeWith(TypeQualifierValueSet) in line 263
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function setValue(ValueNumber,FlowValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function mergeSourceSinkInfoSets(Map< ValueNumber, Set< SourceSinkInfo >>,Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function modelSourceSink(SourceSinkInfo) in line 62
      protection public
      28 lines of code
      1 parameters
      4 conditional paths
      uses function getValueNumber() defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function getWhen() defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function setValue(ValueNumber,FlowValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function addSourceSinkInfo(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber,SourceSinkInfo) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereAlways defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereNever defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function propagateAcrossPhiNode(ValueNumber,ValueNumber) in line 239
      protection public
      14 lines of code
      2 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function setValue(ValueNumber,FlowValue) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function getValue(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function transferSourceSinkInfoSet(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereAlways defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereNever defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable valueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function pruneValue(ValueNumber) in line 125
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable valueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereAlways defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereNever defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function reset(State) in line 232
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable valueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereAlways defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereNever defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable state defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function setBottom() in line 225
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function reset(State) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function setTop() in line 214
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function reset(State) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function setValue(ValueNumber,FlowValue) in line 91
      7 lines of code
      2 parameters
      4 conditional paths
      uses variable TOP defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses function pruneValue(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable valueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable state defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereAlways defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereNever defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function toString() in line 320
      protection public
      28 lines of code
      0 parameters
      5 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable valueMap defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function getValue(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable TOP defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses variable UNKNOWN defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses function valueNumberToString(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function transferSourceSinkInfoSet(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber,ValueNumber) in line 254
      8 lines of code
      3 parameters
      2 conditional paths
      uses function getSourceSinkInfoSet(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function addSourceSinkInfo(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber,SourceSinkInfo) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function valueNumberToString(ValueNumber) in line 349
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getValue(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function valueNumberToString(ValueNumber,FlowValue) in line 352
      protection public
      27 lines of code
      2 parameters
      6 conditional paths
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable TOP defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses function getSourceSinkInfoSet(Map< ValueNumber, Set< SourceSinkInfo >>,ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereAlways defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable whereNever defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable UNKNOWN defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses function appendSourceSinkInfos(StringBuilder,String,Set<?extends SourceSinkInfo >) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
   function TypeQualifierValueSet(TypeQualifierValue<?>) in line 54
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function isStrictQualifier() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
   variable state in line 50
   variable valueMap in line 44
   variable whereAlways in line 46
   variable whereNever in line 48
module edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet::State
   variable BOTTOM in line 42
      protection public
   variable TOP in line 41
      protection public
   variable VALID in line 41
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/ValidationSecurityManager.java
module edu::umd::cs::findbugs::ba::jsr305::ValidationSecurityManager
   inherits from SecurityManager
   function checkPermission(Permission) in line 79
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function checkPermission(Permission,Object) in line 94
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
   function inValidation() in line 110
      9 lines of code
      0 parameters
      1 conditional paths
   function sandboxedValidation(A,TypeQualifierValidator< A >,@CheckForNull Object) in line 42
      protection public
      34 lines of code
      3 parameters
      1 conditional paths
   function ValidationSecurityManager() in line 108
      1 lines of code
      0 parameters
      1 conditional paths
   variable performingValidation in line 120
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/jsr305/ValidatorClassLoader.java
module edu::umd::cs::findbugs::ba::jsr305::ValidatorClassLoader
   inherits from ClassLoader
   function findClass(@DottedClassName String) in line 60
      protection public
      24 lines of code
      1 parameters
      1 conditional paths
   function findClass(@DottedClassName String,byte   []) in line 86
      18 lines of code
      2 parameters
      1 conditional paths
   function loadClass(String,boolean) in line 46
      13 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/LineNumberMap.java
module edu::umd::cs::findbugs::ba::LineNumberMap
   function build() in line 68
      protection public
      46 lines of code
      0 parameters
      10 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::LineNumberMap
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::LineNumberMap
      uses function checkTable(LineNumberTable) defined in edu::umd::cs::findbugs::ba::LineNumberMap
      uses variable LINE_NUMBER_BUG defined in edu::umd::cs::findbugs::ba::LineNumberMap
      uses variable lineNumberMap defined in edu::umd::cs::findbugs::ba::LineNumberMap
      uses function hasLineNumbers() defined in edu::umd::cs::findbugs::ba::LineNumberMap
   function checkTable(LineNumberTable) in line 115
      17 lines of code
      1 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::LineNumberMap
   function hasLineNumbers() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function lookupLineNumber(InstructionHandle) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lineNumberMap defined in edu::umd::cs::findbugs::ba::LineNumberMap
   function LineNumberMap(MethodGen) in line 58
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::LineNumberMap
      uses variable lineNumberMap defined in edu::umd::cs::findbugs::ba::LineNumberMap
      uses function hasLineNumbers() defined in edu::umd::cs::findbugs::ba::LineNumberMap
   variable DEBUG in line 38
   variable hasLineNumbers in line 50
   variable LINE_NUMBER_BUG in line 44
   variable lineNumberMap in line 48
   variable methodGen in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/LiveLocalStoreAnalysis.java
module edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   inherits from BackwardDataflowAnalysis< BitSet >
   inherits from edu::umd::cs::findbugs::ba::Debug
   function copy(BitSet,BitSet) in line 62
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function createFact() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function factToString(BitSet) in line 153
      protection public
      27 lines of code
      1 parameters
      7 conditional paths
      uses function isTop(BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
      uses variable killedByStoreOffset defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
      uses function killedByStore(BitSet,int) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
      uses function isStoreAlive(BitSet,int) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function initEntryFact(BitSet) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isFactValid(BitSet) in line 136
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function verifyFact(BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
      uses function isTop(BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function isStoreAlive(BitSet,int) in line 197
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function isTop(BitSet) in line 185
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable topBit defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function killedByStore(BitSet,int) in line 205
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable killedByStoreOffset defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function makeFactTop(BitSet) in line 73
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable topBit defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function meetInto(BitSet,Edge,BitSet) in line 84
      protection public
      16 lines of code
      3 parameters
      3 conditional paths
      uses function verifyFact(BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
      uses function isTop(BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
      uses function copy(BitSet,BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function same(BitSet,BitSet) in line 79
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function transferInstruction(InstructionHandle,BasicBlock,BitSet) in line 102
      protection public
      32 lines of code
      3 parameters
      5 conditional paths
      uses function isFactValid(BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
      uses variable killedByStoreOffset defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function verifyFact(BitSet) in line 144
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function isTop(BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
      uses variable topBit defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function LiveLocalStoreAnalysis(MethodGen,ReverseDepthFirstSearch,DepthFirstSearch) in line 50
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable rdfs defined in BackwardDataflowAnalysis< BitSet >
      uses variable dfs defined in BackwardDataflowAnalysis< BitSet >
   variable killedByStoreOffset in line 48
   variable topBit in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/LiveLocalStoreDataflow.java
module edu::umd::cs::findbugs::ba::LiveLocalStoreDataflow
   inherits from Dataflow< BitSet, LiveLocalStoreAnalysis >
   function LiveLocalStoreDataflow(CFG,LiveLocalStoreAnalysis) in line 31
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< BitSet, LiveLocalStoreAnalysis >
      uses variable analysis defined in Dataflow< BitSet, LiveLocalStoreAnalysis >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/Location.java
module edu::umd::cs::findbugs::ba::Location
   inherits from Comparable
   function compareTo(Location) in line 120
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
   function equals(Object) in line 134
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function Location(@Nonnull InstructionHandle,@Nonnull BasicBlock) defined in edu::umd::cs::findbugs::ba::Location
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
   function getBasicBlock() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
   function getFirstLocation(@Nonnull BasicBlock) in line 66
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function Location(@Nonnull InstructionHandle,@Nonnull BasicBlock) defined in edu::umd::cs::findbugs::ba::Location
   function getHandle() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
   function getLastLocation(@Nonnull BasicBlock) in line 74
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function Location(@Nonnull InstructionHandle,@Nonnull BasicBlock) defined in edu::umd::cs::findbugs::ba::Location
   function hashCode() in line 126
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable hash defined in edu::umd::cs::findbugs::ba::Location
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
   function isFirstInstructionInBasicBlock() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isLastInstructionInBasicBlock() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function toCompactString() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
   function toString() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function Location(@Nonnull InstructionHandle,@Nonnull BasicBlock) in line 59
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
   variable basicBlock in line 47
   variable handle in line 45
   variable hash in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/LockAnalysis.java
module edu::umd::cs::findbugs::ba::LockAnalysis
   inherits from ForwardDataflowAnalysis< LockSet >
   function copy(LockSet,LockSet) in line 74
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(LockSet) defined in edu::umd::cs::findbugs::ba::LockSet
   function createFact() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initEntryFact(LockSet) in line 79
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function clear() defined in edu::umd::cs::findbugs::ba::LockSet
      uses function setDefaultLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable isSynchronized defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable isStatic defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable vna defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses function getThisValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function setLockCount(int,int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getClassObjectValue(String) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::LockAnalysis
   function isFactValid(LockSet) in line 167
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isTop(LockSet) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::LockSet
   function lockOp(LockSet,int,int) in line 150
      15 lines of code
      3 parameters
      4 conditional paths
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable BOTTOM defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses function setLockCount(int,int) defined in edu::umd::cs::findbugs::ba::LockSet
   function makeFactTop(LockSet) in line 93
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function clear() defined in edu::umd::cs::findbugs::ba::LockSet
      uses function setDefaultLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable TOP defined in edu::umd::cs::findbugs::ba::LockSet
   function meetInto(LockSet,Edge,LockSet) in line 109
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function modifyLock(ValueNumberFrame,LockSet,int) in line 143
      6 lines of code
      3 parameters
      2 conditional paths
      uses function lockOp(LockSet,int,int) defined in edu::umd::cs::findbugs::ba::LockAnalysis
   function same(LockSet,LockSet) in line 104
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function sameAs(LockSet) defined in edu::umd::cs::findbugs::ba::LockSet
   function transferInstruction(InstructionHandle,BasicBlock,LockSet) in line 114
      protection public
      28 lines of code
      3 parameters
      6 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function modifyLock(ValueNumberFrame,LockSet,int) defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable isSynchronized defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable isStatic defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses function lockOp(LockSet,int,int) defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable vna defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses function getThisValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function LockAnalysis(MethodGen,ValueNumberDataflow,DepthFirstSearch) in line 56
      protection public
      11 lines of code
      3 parameters
      2 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< LockSet >
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::LockAnalysis
   variable DEBUG in line 44
   variable isStatic in line 54
   variable isSynchronized in line 52
   variable methodGen in line 46
   variable vna in line 50
   variable vnaDataflow in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/LockChecker.java
module edu::umd::cs::findbugs::ba::LockChecker
   function execute() in line 74
      protection public
      18 lines of code
      0 parameters
      4 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::LockChecker
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable methodDescriptor defined in edu::umd::cs::findbugs::ba::LockChecker
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getLockDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getFactAtLocation(Location) in line 101
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses variable lockDataflow defined in edu::umd::cs::findbugs::ba::LockChecker
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable cache defined in edu::umd::cs::findbugs::ba::LockChecker
      uses function setDefaultLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable method defined in edu::umd::cs::findbugs::ba::LockChecker
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::LockChecker
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function setLockCount(int,int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function LockChecker(MethodDescriptor) in line 64
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable methodDescriptor defined in edu::umd::cs::findbugs::ba::LockChecker
   variable cache in line 59
   variable lockDataflow in line 55
   variable method in line 53
   variable methodDescriptor in line 51
   variable vnaDataflow in line 57
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/LockDataflow.java
module edu::umd::cs::findbugs::ba::LockDataflow
   inherits from Dataflow< LockSet, LockAnalysis >
   function LockDataflow(CFG,LockAnalysis) in line 28
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< LockSet, LockAnalysis >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/LockSet.java
module edu::umd::cs::findbugs::ba::LockSet
   function addEntry(int,int,int) in line 317
      26 lines of code
      3 parameters
      3 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable INVALID defined in edu::umd::cs::findbugs::ba::LockSet
   function clear() in line 155
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable INVALID defined in edu::umd::cs::findbugs::ba::LockSet
   function containsReturnValue(ValueNumberFactory) in line 211
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses function forNumber(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable RETURN_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function copyFrom(LockSet) in line 144
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable defaultLockCount defined in edu::umd::cs::findbugs::ba::LockSet
   function findIndex(int) in line 303
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
   function getLockCount(int) in line 82
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function findIndex(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable defaultLockCount defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
   function getLockedValueNumbers(ValueNumberFrame) in line 385
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses function allSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
   function getNumLockedObjects() in line 125
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable INVALID defined in edu::umd::cs::findbugs::ba::LockSet
   function identicalSubset(LockSet) in line 271
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
   function intersectWith(LockSet) in line 233
      protection public
      17 lines of code
      1 parameters
      5 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
   function isEmpty() in line 257
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
   function isTop() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable defaultLockCount defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable TOP defined in edu::umd::cs::findbugs::ba::LockSet
   function meetWith(LockSet) in line 168
      protection public
      25 lines of code
      1 parameters
      5 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function mergeValues(int,int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function setLockCount(int,int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function setDefaultLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
   function mergeValues(int,int) in line 289
      13 lines of code
      2 parameters
      5 conditional paths
      uses variable TOP defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable BOTTOM defined in edu::umd::cs::findbugs::ba::LockSet
   function sameAs(LockSet) in line 200
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function identicalSubset(LockSet) defined in edu::umd::cs::findbugs::ba::LockSet
   function setDefaultLockCount(int) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable defaultLockCount defined in edu::umd::cs::findbugs::ba::LockSet
   function setLockCount(int,int) in line 103
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function findIndex(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function addEntry(int,int,int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
   function toString() in line 345
      protection public
      35 lines of code
      0 parameters
      8 conditional paths
      uses variable defaultLockCount defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable TOP defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable BOTTOM defined in edu::umd::cs::findbugs::ba::LockSet
   function LockSet() in line 69
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable DEFAULT_CAPACITY defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable TOP defined in edu::umd::cs::findbugs::ba::LockSet
      uses function clear() defined in edu::umd::cs::findbugs::ba::LockSet
   variable array in line 58
   variable BOTTOM in line 47
      protection public
   variable DEFAULT_CAPACITY in line 51
   variable defaultLockCount in line 63
   variable INVALID in line 49
   variable TOP in line 41
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/MethodBytecodeSet.java
module edu::umd::cs::findbugs::ba::MethodBytecodeSet
   inherits from java::util::BitSet
   function toString() in line 33
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/MethodChooser.java
module edu::umd::cs::findbugs::ba::MethodChooser
   function choose(Method) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/MethodHash.java
module edu::umd::cs::findbugs::ba::MethodHash
   inherits from Comparable
   function compareHashes(byte[],byte[]) in line 173
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses function toUnsigned(byte) defined in edu::umd::cs::findbugs::ba::MethodHash
   function compareTo(MethodHash) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function compareHashes(byte[],byte[]) defined in edu::umd::cs::findbugs::ba::MethodHash
      uses variable hash defined in edu::umd::cs::findbugs::ba::MethodHash
   function computeHash(Method) in line 109
      protection public
      24 lines of code
      1 parameters
      2 conditional paths
      uses function scan(byte[],Callback) defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses variable hash defined in edu::umd::cs::findbugs::ba::MethodHash
   function equals(Object) in line 157
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function isSameHash(MethodHash) defined in edu::umd::cs::findbugs::ba::MethodHash
   function getMethodHash() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable hash defined in edu::umd::cs::findbugs::ba::MethodHash
   function getMethodName() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::MethodHash
   function getMethodSig() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::MethodHash
   function hashCode() in line 165
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable hash defined in edu::umd::cs::findbugs::ba::MethodHash
   function isSameHash(MethodHash) in line 142
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable hash defined in edu::umd::cs::findbugs::ba::MethodHash
   function isStatic() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toUnsigned(byte) in line 191
      7 lines of code
      1 parameters
      2 conditional paths
   function MethodHash() in line 49
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function MethodHash(String,String,boolean,byte[]) in line 64
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::MethodHash
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::MethodHash
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::MethodHash
      uses variable hash defined in edu::umd::cs::findbugs::ba::MethodHash
   variable hash in line 38
   variable isStatic in line 44
   variable METHOD_HASH_ELEMENT_NAME in line 36
      protection public
   variable methodName in line 40
   variable methodSig in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/MethodUnprofitableException.java
module edu::umd::cs::findbugs::ba::MethodUnprofitableException
   inherits from edu::umd::cs::findbugs::ba::CFGBuilderException
   function getMethod() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::MethodUnprofitableException
   function MethodUnprofitableException(JavaClassAndMethod) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::MethodUnprofitableException
   function MethodUnprofitableException(JavaClass,Method) in line 57
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::MethodUnprofitableException
   function MethodUnprofitableException(MethodDescriptor) in line 69
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   variable method in line 35
   variable serialVersionUID in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/MissingClassException.java
module edu::umd::cs::findbugs::ba::MissingClassException
   inherits from edu::umd::cs::findbugs::ba::DataflowAnalysisException
   function getClassDescriptor() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::MissingClassException
   function getClassName() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::MissingClassException
   function getClassNotFoundException() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function MissingClassException(String) in line 39
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::MissingClassException
   function MissingClassException(ClassNotFoundException) in line 50
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable className in line 37
   variable serialVersionUID in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/MissingClassException.java
module edu::umd::cs::findbugs::classfile::MissingClassException
   inherits from edu::umd::cs::findbugs::classfile::ResourceNotFoundException
   function getClassDescriptor() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::MissingClassException
   function MissingClassException(ClassDescriptor) in line 37
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::MissingClassException
      uses function toResourceName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function MissingClassException(ClassDescriptor,Throwable) in line 50
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::MissingClassException
      uses function toResourceName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   variable classDescriptor in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/DerefFinder.java
module edu::umd::cs::findbugs::ba::npe::DerefFinder
   function getAnalysis(ClassContext,Method) in line 68
      protection public
      143 lines of code
      2 parameters
      27 conditional paths
      uses function getXClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::DerefFinder
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getMethodNullnessAnnotation(ClassContext,Method) defined in edu::umd::cs::findbugs::ba::npe::DerefFinder
      uses function isNullCheck() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function add(Location,ValueNumber,PointerUsageRequiringNonNullValue) defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function parameterMustBeNonNull(XMethod,int) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses function getSlotsFromTopOfStackForParameter(int) defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getProperty(KeyType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   function getMethodNullnessAnnotation(ClassContext,Method) in line 212
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable UNKNOWN_NULLNESS defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   variable DEBUG in line 66
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/IsNullConditionDecision.java
module edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function equals(Object) in line 78
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function IsNullConditionDecision(@CheckForNull ValueNumber,@CheckForNull IsNullValue,@CheckForNull IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable value defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function getDecision(int) in line 124
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function getValue() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function hashCode() in line 72
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function isEdgeFeasible(int) in line 110
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getDecision(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function isRedundant() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function toString() in line 136
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses function toString() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses function toString() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function IsNullConditionDecision(@CheckForNull ValueNumber,@CheckForNull IsNullValue,@CheckForNull IsNullValue) in line 61
      protection public
      9 lines of code
      3 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   variable fallThroughDecision in line 46
   variable ifcmpDecision in line 43
   variable value in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/IsNullValue.java
module edu::umd::cs::findbugs::ba::npe::IsNullValue
   inherits from edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
   inherits from edu::umd::cs::findbugs::ba::Debug
   function checkedNonNullValue() in line 322
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function checkedNullValue() in line 307
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function checkNoKaboomNNLocation() in line 152
      5 lines of code
      0 parameters
      2 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function createInstanceByFlagList() in line 116
      14 lines of code
      0 parameters
      2 conditional paths
      uses variable FLAG_MASK defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_SHIFT defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function IsNullValue(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NSP defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN_UNKNOWN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP2 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP3 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function downgradeOnControlSplit() in line 560
      protection public
      21 lines of code
      0 parameters
      5 conditional paths
      uses variable NCP_EXTRA_BRANCH defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function nullOnComplexPathValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function nullOnComplexPathValue3() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function equals(Object) in line 159
      protection public
      16 lines of code
      1 parameters
      5 conditional paths
      uses function IsNullValue(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::Location
   function getBaseKind() in line 185
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_MASK defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function getFlags() in line 189
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_MASK defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function getLocationOfKaBoom() in line 550
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function hasFlag(int) in line 193
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function hashCode() in line 177
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::Location
   function isChecked() in line 229
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isDefinitelyNotNull() in line 498
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isDefinitelyNull() in line 439
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isException() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable EXCEPTION defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isFieldValue() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FIELD_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isNullOnComplicatedPath() in line 463
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN_UNKNOWN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP2 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP3 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isNullOnComplicatedPath2() in line 479
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP2 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isNullOnComplicatedPath23() in line 471
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP2 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP3 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isNullOnSomePath() in line 447
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP_EXTRA_BRANCH defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
      uses variable NSP defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP2 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isParamValue() in line 222
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable PARAM defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isReadlineValue() in line 211
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable READLINE_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isReturnValue() in line 207
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable RETURN_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function markInformationAsComingFromFieldValue(XField) in line 288
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function IsNullValue(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FIELD_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_SHIFT defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function markInformationAsComingFromReturnValueOfMethod(XMethod) in line 264
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getAccessMethodForField() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function markInformationAsComingFromFieldValue(XField) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable RETURN_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable READLINE_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function IsNullValue(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_SHIFT defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function merge(IsNullValue,IsNullValue) in line 400
      protection public
      35 lines of code
      2 parameters
      6 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable EXCEPTION defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable mergeMatrix defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function noKaboomNonNullValue(@Nonnull Location) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_SHIFT defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function mightBeNull() in line 491
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function noKaboomNonNullValue(@Nonnull Location) in line 330
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function IsNullValue(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function nonNullValue() in line 314
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function nonReportingNotNullValue() in line 361
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN_UNKNOWN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function nullOnComplexPathValue() in line 371
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP2 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function nullOnComplexPathValue3() in line 379
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP3 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function nullOnSimplePathValue() in line 341
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NSP defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function nullValue() in line 298
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function parameterMarkedAsMightBeNull(XMethodParameter) in line 348
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable PARAM defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_SHIFT defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NSP defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function parameterMarkedAsNonnull(XMethodParameter) in line 355
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable PARAM defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_SHIFT defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function pathSensitiveNonNullValue() in line 393
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function pathSensitiveNullValue() in line 386
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function toExceptionValue() in line 250
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function IsNullValue(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable EXCEPTION defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_SHIFT defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function toString() in line 504
      protection public
      45 lines of code
      0 parameters
      16 conditional paths
      uses variable DEBUG_EXCEPTION defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable EXCEPTION defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable PARAM defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable RETURN_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FIELD_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable DEBUG_KABOOM defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NSP defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN_UNKNOWN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP2 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function wouldHaveBeenAKaboom() in line 237
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function IsNullValue(int) in line 136
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkNoKaboomNNLocation() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function IsNullValue(int,Location) in line 144
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkNoKaboomNNLocation() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   variable CHECKED_NN in line 56
   variable CHECKED_NULL in line 50
   variable DEBUG_EXCEPTION in line 42
   variable DEBUG_KABOOM in line 44
   variable EXCEPTION in line 82
   variable FIELD_VAL in line 93
   variable FLAG_MASK in line 98
   variable FLAG_SHIFT in line 79
   variable instanceByFlagsList in line 114
   variable kind in line 132
   variable locationOfKaBoom in line 134
   variable mergeMatrix in line 100
   variable NCP2 in line 74
   variable NCP3 in line 77
   variable NN in line 53
   variable NN_UNKNOWN in line 71
   variable NO_KABOOM_NN in line 62
   variable NSP in line 65
   variable NULL in line 47
   variable PARAM in line 85
   variable READLINE_VAL in line 96
   variable RETURN_VAL in line 91
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/IsNullValueAnalysis.java
module edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   inherits from edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   inherits from edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
   function addLocationWhereValueBecomesNull(LocationWhereValueBecomesNull) in line 624
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable locationWhereValueBecomesNullSet defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function createFact() in line 225
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function endTransfer(BasicBlock,@CheckForNull InstructionHandle,IsNullValueFrame) in line 300
      protection public
      14 lines of code
      3 parameters
      3 conditional paths
      uses variable lastFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getDecision(BasicBlock,IsNullValueFrame) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable instanceOfFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function getClassAndMethod() in line 220
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function getDecision(BasicBlock,IsNullValueFrame) in line 653
      139 lines of code
      2 parameters
      23 conditional paths
      uses variable lastFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable instanceOfFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable nullComparisonInstructionSet defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function handleIfNull(IsNullValue,ValueNumber,boolean) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
   function getFactAtMidEdge(Edge) in line 916
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses function isForwards() defined in ForwardDataflowAnalysis< FrameType >
      uses function createFact() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function copy(FrameType,FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses function makeFactTop(FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses function meetInto(IsNullValueFrame,Edge,IsNullValueFrame) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function getForPointerEqualityCheck(CFG,ValueNumberDataflow) in line 131
      protection public
      58 lines of code
      2 parameters
      15 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function orderedLocations() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
   function getKnownNonnullDueToPointerDisequality(ValueNumber,int) in line 191
      12 lines of code
      2 parameters
      4 conditional paths
      uses variable pointerEqualityCheck defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function getLocationWhereValueBecomesNullSet() in line 630
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable locationWhereValueBecomesNullSet defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function handleIfNull(IsNullValue,ValueNumber,boolean) in line 793
      28 lines of code
      3 parameters
      5 conditional paths
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function wouldHaveBeenAKaboom() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function initEntryFact(IsNullValueFrame) in line 230
      protection public
      47 lines of code
      1 parameters
      7 conditional paths
      uses variable cachedEntryFact defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function createFact() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function setValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getResolvedAnnotation(final Object,boolean) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function copy(FrameType,FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   function meetInto(IsNullValueFrame,Edge,IsNullValueFrame) in line 397
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function meetInto(IsNullValueFrame,Edge,IsNullValueFrame,boolean) in line 401
      protection public
      197 lines of code
      4 parameters
      37 conditional paths
      uses variable NO_SPLIT_DOWNGRADE_NSP defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
      uses variable cfg defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getNumNonExceptionSucessors(BasicBlock) defined in edu::umd::cs::findbugs::ba::CFG
      uses function modifyFrame(FrameType,@CheckForNull FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses function downgradeOnControlSplit() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable NO_SWITCH_DEFAULT_AS_EXCEPTION defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
      uses variable SWITCH_DEFAULT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function toExceptionValues() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function isExceptionHandler() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getExceptionGen() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses function pushValue(ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getDecision() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function isEdgeFeasible(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses function createFact() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function setTop() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function getValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getDecision(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function availableLoadMapAsString() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function replaceValues(IsNullValueFrame,IsNullValueFrame,ValueNumber,ValueNumberFrame,ValueNumberFrame,IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function addLocationWhereValueBecomesNull(LocationWhereValueBecomesNull) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getKnownNonnullDueToPointerDisequality(ValueNumber,int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function isNullCheck() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable phiNodeForLoads defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getAvailableLoad(AvailableLoad) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function useNewValueNumberForLoad(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function mergeInto(IsNullValueFrame,IsNullValueFrame) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function mergeInto(IsNullValueFrame,IsNullValueFrame) in line 600
      15 lines of code
      2 parameters
      4 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function mergeValues(IsNullValueFrame,IsNullValueFrame,int) in line 635
      5 lines of code
      3 parameters
      1 conditional paths
   function replaceValues(IsNullValueFrame,IsNullValueFrame,ValueNumber,ValueNumberFrame,ValueNumberFrame,IsNullValue) in line 842
      73 lines of code
      6 parameters
      15 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function modifyFrame(FrameType,@CheckForNull FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getAvailableLoad(AvailableLoad) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
   function setClassAndMethod(JavaClassAndMethod) in line 216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function startIteration() in line 617
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable locationWhereValueBecomesNullSet defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function startTransfer() in line 295
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable lastFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable instanceOfFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function transfer(BasicBlock,@CheckForNull InstructionHandle,IsNullValueFrame,IsNullValueFrame) in line 279
      protection public
      15 lines of code
      4 parameters
      3 conditional paths
      uses function startTransfer() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function endTransfer(BasicBlock,@CheckForNull InstructionHandle,IsNullValueFrame) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
   function transferInstruction(InstructionHandle,BasicBlock,IsNullValueFrame) in line 316
      protection public
      70 lines of code
      3 parameters
      11 conditional paths
      uses variable lastFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function createFact() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function copyFrom(Frame< IsNullValue >) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable instanceOfFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable visitor defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function setFrameAndLocation(FrameType,Location) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function analyzeInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getSlotContainingNewNullValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function addLocationWhereValueBecomesNull(LocationWhereValueBecomesNull) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function IsNullValueAnalysis(MethodDescriptor,MethodGen,CFG,ValueNumberDataflow,TypeDataflow,DepthFirstSearch,AssertionMethods) in line 105
      protection public
      20 lines of code
      7 parameters
      2 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable TRACK_VALUE_NUMBERS_IN_NULL_POINTER_ANALYSIS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getForPointerEqualityCheck(CFG,ValueNumberDataflow) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   variable cachedEntryFact in line 98
   variable cfg in line 88
   variable classAndMethod in line 100
   variable instanceOfFrame in line 96
   variable lastFrame in line 94
   variable locationWhereValueBecomesNullSet in line 90
   variable methodGen in line 82
   variable nullComparisonInstructionSet in line 387
   variable pointerEqualityCheck in line 103
   variable trackValueNumbers in line 92
   variable visitor in line 84
   variable vnaDataflow in line 86
module edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis::PointerEqualityCheckState
   variable IFEQUAL in line 127
      protection public
   variable INIT in line 127
      protection public
   variable SAW1 in line 127
      protection public
   variable SAW2 in line 127
      protection public
   variable START in line 127
      protection public
module edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis::PointerEqualityCheck
   function PointerEqualityCheck(ValueNumber,ValueNumber,int) in line 209
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/IsNullValueAnalysisFeatures.java
module edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
   variable NCP_EXTRA_BRANCH in line 50
      protection public
   variable NO_SPLIT_DOWNGRADE_NSP in line 38
      protection public
   variable NO_SWITCH_DEFAULT_AS_EXCEPTION in line 43
      protection public
   variable UNKNOWN_VALUES_ARE_NSP in line 56
      protection public
   variable USE_TYPE_QUALIFIERS in line 62
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/IsNullValueDataflow.java
module edu::umd::cs::findbugs::ba::npe::IsNullValueDataflow
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflow
   function getFactAtMidEdge(Edge) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAnalysis() defined in Dataflow< Fact, AnalysisType >
   function IsNullValueDataflow(CFG,IsNullValueAnalysis) in line 28
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< Fact, AnalysisType >
      uses variable analysis defined in Dataflow< Fact, AnalysisType >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/IsNullValueFrame.java
module edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   inherits from edu::umd::cs::findbugs::ba::Frame
   function cleanStaleKnowledge(ValueNumberFrame) in line 93
      protection public
      21 lines of code
      1 parameters
      7 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function copyFrom(Frame< IsNullValue >) in line 235
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable decision defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function IsNullValueFrame(int,boolean) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function downgradeOnControlSplit() in line 293
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function downgradeOnControlSplit() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function getDecision() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable decision defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function getKnownValue(ValueNumber) in line 174
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function getKnownValueMapEntrySet() in line 187
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function getKnownValues() in line 179
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function isTrackValueNumbers() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function mergeKnownValuesWith(IsNullValueFrame) in line 195
      protection public
      33 lines of code
      1 parameters
      7 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function sameAs(Frame< IsNullValue >) in line 244
      protection public
      17 lines of code
      1 parameters
      5 conditional paths
      uses function IsNullValueFrame(int,boolean) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable decision defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function setDecision(@CheckForNull IsNullConditionDecision) in line 138
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable decision defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function setKnownValue(@Nonnull ValueNumber,@Nonnull IsNullValue) in line 147
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function setTop() in line 116
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable decision defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function toExceptionValues() in line 124
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function toString() in line 263
      protection public
      25 lines of code
      0 parameters
      5 conditional paths
      uses variable decision defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function toString() defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function useNewValueNumberForLoad(ValueNumber,ValueNumber) in line 159
      protection public
      13 lines of code
      2 parameters
      4 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function IsNullValueFrame(int,boolean) in line 85
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable numLocals defined in edu::umd::cs::findbugs::ba::Frame
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   variable decision in line 75
   variable knownValueMap in line 83
   variable trackValueNumbers in line 77
module edu::umd::cs::findbugs::ba::npe::IsNullValueFrame::PointerEqualityInfo
   function equals(Object) in line 62
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PointerEqualityInfo(ValueNumber,ValueNumber,boolean) in line 45
      protection public
      10 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/IsNullValueFrameModelingVisitor.java
module edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function analyzeInstruction(Instruction) in line 100
      protection public
      30 lines of code
      1 parameters
      9 conditional paths
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable slotContainingNewNullValue defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable NO_ASSERT_HACK defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable assertionMethods defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function isAssertionHandle(InstructionHandle,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function checkForKnownValue(Instruction) in line 434
      23 lines of code
      1 parameters
      5 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function modelNormalInstruction(Instruction,int,int) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function getDefaultValue() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getReturnValueNullness(XMethod) in line 255
      protection public
      30 lines of code
      1 parameters
      7 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function markInformationAsComingFromReturnValueOfMethod(XMethod) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NULLABLE defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   function getSlotContainingNewNullValue() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable slotContainingNewNullValue defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function handleInvoke(InvokeInstruction) in line 175
      79 lines of code
      1 parameters
      15 conditional paths
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable location defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable MODEL_NONNULL_RETURN defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getReturnValueNullness(XMethod) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function modelInstruction(Instruction,int,int,Value) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsProduced(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function newValueOnTOS() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function newValueOnTOS() in line 290
      22 lines of code
      0 parameters
      6 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable slotContainingNewNullValue defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
   function produce(IsNullValue) in line 159
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function newValueOnTOS() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function produce2(IsNullValue) in line 165
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitACONST_NULL(ACONST_NULL) in line 459
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitANEWARRAY(ANEWARRAY) in line 475
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function modelNormalInstruction(Instruction,int,int) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitCHECKCAST(CHECKCAST) in line 497
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGETFIELD(GETFIELD) in line 347
      protection public
      26 lines of code
      1 parameters
      5 conditional paths
      uses function getNumWordsProduced(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function checkForKnownValue(Instruction) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function modelNormalInstruction(Instruction,int,int) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function markInformationAsComingFromFieldValue(XField) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function visitGETSTATIC(GETSTATIC) in line 382
      protection public
      40 lines of code
      1 parameters
      9 conditional paths
      uses function getNumWordsProduced(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function checkForKnownValue(Instruction) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isNull() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function modelNormalInstruction(Instruction,int,int) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function markInformationAsComingFromFieldValue(XField) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function visitINVOKEINTERFACE(INVOKEINTERFACE) in line 512
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitINVOKESPECIAL(INVOKESPECIAL) in line 507
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitINVOKESTATIC(INVOKESTATIC) in line 502
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitINVOKEVIRTUAL(INVOKEVIRTUAL) in line 517
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitLDC(LDC) in line 487
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitLDC2_W(LDC2_W) in line 492
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function produce2(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitMULTIANEWARRAY(MULTIANEWARRAY) in line 481
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function modelNormalInstruction(Instruction,int,int) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitNEW(NEW) in line 464
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitNEWARRAY(NEWARRAY) in line 469
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function modelNormalInstruction(Instruction,int,int) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitPUTFIELD(PUTFIELD) in line 314
      protection public
      31 lines of code
      1 parameters
      7 conditional paths
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getAvailableLoad(AvailableLoad) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function IsNullValueFrameModelingVisitor(ConstantPoolGen,AssertionMethods,ValueNumberDataflow,TypeDataflow,boolean) in line 83
      protection public
      8 lines of code
      5 parameters
      1 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable assertionMethods defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   variable assertionMethods in line 73
   variable MODEL_NONNULL_RETURN in line 71
   variable NO_ASSERT_HACK in line 69
   variable slotContainingNewNullValue in line 81
   variable trackValueNumbers in line 79
   variable typeDataflow in line 77
   variable vnaDataflow in line 75
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/LocationWhereValueBecomesNull.java
module edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
   inherits from Comparable
   function compareTo(LocationWhereValueBecomesNull) in line 68
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function compareTo(Location) defined in edu::umd::cs::findbugs::ba::Location
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses function compareTo(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
   function equals(Object) in line 83
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function LocationWhereValueBecomesNull(Location,ValueNumber) defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::Location
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
   function getLocation() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
   function getValueNumber() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
   function hashCode() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::Location
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function toString() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function LocationWhereValueBecomesNull(Location,ValueNumber) in line 43
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
   variable location in line 31
   variable valueNumber in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/MayReturnNullPropertyDatabase.java
module edu::umd::cs::findbugs::ba::npe::MayReturnNullPropertyDatabase
   inherits from edu::umd::cs::findbugs::ba::interproc::MethodPropertyDatabase
   function decodeProperty(String) in line 35
      3 lines of code
      1 parameters
      1 conditional paths
   function encodeProperty(Boolean) in line 40
      3 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 44
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function readFromFile(String) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses variable DEFAULT_NULL_RETURN_VALUE_DB_FILENAME defined in edu::umd::cs::findbugs::ba::AnalysisContext
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/NonNullParamViolation.java
module edu::umd::cs::findbugs::ba::npe::NonNullParamViolation
   function getClassAndMethod() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::NonNullParamViolation
   function getParam() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable param defined in edu::umd::cs::findbugs::ba::npe::NonNullParamViolation
   function NonNullParamViolation(JavaClassAndMethod,int) in line 29
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::NonNullParamViolation
      uses variable param defined in edu::umd::cs::findbugs::ba::npe::NonNullParamViolation
   variable classAndMethod in line 25
   variable param in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/NonNullSpecification.java
module edu::umd::cs::findbugs::ba::npe::NonNullSpecification
   function getCheckForNullProperty() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable possiblyNullProperty defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
   function getClassAndMethod() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
   function getNonNullProperty() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nonNullProperty defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
   function toString() in line 52
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
      uses variable nonNullProperty defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
      uses variable possiblyNullProperty defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
   function NonNullSpecification(JavaClassAndMethod,ParameterProperty,ParameterProperty) in line 32
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
      uses variable possiblyNullProperty defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
   variable classAndMethod in line 26
   variable nonNullProperty in line 28
   variable possiblyNullProperty in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/NullDerefAndRedundantComparisonCollector.java
module edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonCollector
   function foundGuaranteedNullDeref(@Nonnull Set< Location >,@Nonnull Set< Location >,SortedSet< Location >,ValueNumberDataflow,ValueNumber,@CheckForNull BugAnnotation,NullValueUnconditionalDeref,boolean) in line 115
      protection public
      1 lines of code
      8 parameters
      1 conditional paths
   function foundNullDeref(Location,ValueNumber,IsNullValue,ValueNumberFrame) in line 60
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
   function foundNullDeref(Location,ValueNumber,IsNullValue,ValueNumberFrame,boolean) in line 79
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   function foundRedundantNullCheck(Location,RedundantBranch) in line 91
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/NullDerefAndRedundantComparisonFinder.java
module edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function analyzeIfNullBranch(BasicBlock,InstructionHandle) in line 751
      61 lines of code
      2 parameters
      10 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getLineNumber(Method,InstructionHandle) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable undeterminedBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable definitelySameBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable definitelyDifferentBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getOutgoingEdgeWithType(BasicBlock,@Type int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function setInfeasibleEdge(Edge) defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses variable redundantBranchList defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function analyzeNullCheck(IsNullValueDataflow,BasicBlock) in line 813
      78 lines of code
      2 parameters
      14 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable classContext defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function isNullCheck() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable collector defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function foundNullDeref(Location,ValueNumber,IsNullValue,ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonCollector
   function analyzeRefComparisonBranch(BasicBlock,InstructionHandle) in line 688
      61 lines of code
      2 parameters
      11 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getLineNumber(Method,InstructionHandle) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable definitelySameBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable definitelyDifferentBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getOutgoingEdgeWithType(BasicBlock,@Type int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function setInfeasibleEdge(Edge) defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses variable redundantBranchList defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable undeterminedBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function checkEdges(CFG,Map< ValueNumber, NullValueUnconditionalDeref >,Map< ValueNumber, SortedSet< Location >>) in line 366
      protection public
      52 lines of code
      3 parameters
      11 conditional paths
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable uvdDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getFactOnEdge(Edge) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable DEBUG_DEREFS defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function formatAsString(boolean) defined in edu::umd::cs::findbugs::ba::Edge
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getFactAtMidEdge(Edge) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueDataflow
      uses function getSuccessorWithEdgeType(BasicBlock,@Type int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable assertionMethods defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function isAssertionInstruction(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses variable classContext defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function checkForUnconditionallyDereferencedNullValues(Location,Map< ValueNumber, SortedSet< Location >>,Map< ValueNumber, NullValueUnconditionalDeref >,ValueNumberFrame,IsNullValueFrame,UnconditionalValueDerefSet,boolean) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function checkForUnconditionallyDereferencedNullValues(Location,Map< ValueNumber, SortedSet< Location >>,Map< ValueNumber, NullValueUnconditionalDeref >,ValueNumberFrame,IsNullValueFrame,UnconditionalValueDerefSet,boolean) in line 488
      98 lines of code
      7 parameters
      11 conditional paths
      uses variable DEBUG_DEREFS defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumLocals() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isReturnValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isUnconditionallyDereferenced(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable MY_DEBUG defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable classContext defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getPreviousLocation(Location) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getFullyQualifiedMethodName(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function noteUnconditionallyDereferencedNullValue(Location,Map< ValueNumber, SortedSet< Location >>,Map< ValueNumber, NullValueUnconditionalDeref >,UnconditionalValueDerefSet,IsNullValue,ValueNumber) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getKnownValueMapEntrySet() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function isFieldValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function examineBasicBlocks() in line 185
      34 lines of code
      0 parameters
      8 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function isNullCheck() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function analyzeNullCheck(IsNullValueDataflow,BasicBlock) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function analyzeRefComparisonBranch(BasicBlock,InstructionHandle) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function analyzeIfNullBranch(BasicBlock,InstructionHandle) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function examineNullValues() in line 227
      41 lines of code
      0 parameters
      4 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DEBUG_DEREFS defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable classContext defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function checkForUnconditionallyDereferencedNullValues(Location,Map< ValueNumber, SortedSet< Location >>,Map< ValueNumber, NullValueUnconditionalDeref >,ValueNumberFrame,IsNullValueFrame,UnconditionalValueDerefSet,boolean) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable uvdDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function checkEdges(CFG,Map< ValueNumber, NullValueUnconditionalDeref >,Map< ValueNumber, SortedSet< Location >>) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function findNullAssignments(Set< LocationWhereValueBecomesNull >) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function reportBugs(Map< ValueNumber, NullValueUnconditionalDeref >,HashSet< ValueNumber >,Map< ValueNumber, SortedSet< Location >>,Map< ValueNumber, Set< Location >>) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function examineRedundantBranches() in line 641
      46 lines of code
      0 parameters
      8 conditional paths
      uses variable redundantBranchList defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable undeterminedBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable definitelySameBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable definitelyDifferentBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable lineMentionedMultipleTimes defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable collector defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function foundRedundantNullCheck(Location,RedundantBranch) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonCollector
   function execute() in line 144
      protection public
      33 lines of code
      0 parameters
      5 conditional paths
      uses function getProfiler() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses variable classContext defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable findGuaranteedDerefs defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable DEBUG_DEREFS defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getUnconditionalValueDerefDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function examineBasicBlocks() defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function examineNullValues() defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function examineRedundantBranches() defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
   function findAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) in line 931
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function findFieldAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) in line 909
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function findLocalAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) in line 920
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function findNullAssignments(Set< LocationWhereValueBecomesNull >) in line 269
      protection public
      18 lines of code
      1 parameters
      5 conditional paths
      uses variable DEBUG_DEREFS defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function findXFieldFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) in line 898
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function getLineNumber(Method,InstructionHandle) in line 936
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function noteUnconditionallyDereferencedNullValue(Location,Map< ValueNumber, SortedSet< Location >>,Map< ValueNumber, NullValueUnconditionalDeref >,UnconditionalValueDerefSet,IsNullValue,ValueNumber) in line 602
      35 lines of code
      6 parameters
      6 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getUnconditionalDerefLocationSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable classContext defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function add(IsNullValue,Set< Location >) defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
   function removeStrictlyDominatedLocations(Set< Location >,DominatorsAnalysis) in line 444
      24 lines of code
      2 parameters
      6 conditional paths
      uses function getAllDominatedBy(BasicBlock) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function equals(Object) defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function removeStrictlyPostDominatedLocations(Set< Location >,PostDominatorsAnalysis) in line 419
      24 lines of code
      2 parameters
      6 conditional paths
      uses function getAllDominatedBy(BasicBlock) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function equals(Object) defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function reportBugs(Map< ValueNumber, NullValueUnconditionalDeref >,HashSet< ValueNumber >,Map< ValueNumber, SortedSet< Location >>,Map< ValueNumber, Set< Location >>) in line 288
      protection public
      77 lines of code
      4 parameters
      16 conditional paths
      uses variable DEBUG_DEREFS defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable classContext defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable PRUNE_GUARANTEED_DEREFERENCES defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getNonExceptionPostDominatorsAnalysis(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function removeStrictlyPostDominatedLocations(Set< Location >,PostDominatorsAnalysis) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getNonExceptionDominatorsAnalysis(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function removeStrictlyDominatedLocations(Set< Location >,DominatorsAnalysis) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable collector defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function foundGuaranteedNullDeref(@Nonnull Set< Location >,@Nonnull Set< Location >,SortedSet< Location >,ValueNumberDataflow,ValueNumber,@CheckForNull BugAnnotation,NullValueUnconditionalDeref,boolean) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonCollector
   function NullDerefAndRedundantComparisonFinder(ClassContext,Method,NullDerefAndRedundantComparisonCollector) in line 127
      protection public
      16 lines of code
      3 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable collector defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getAnalysisContext() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getBoolProperty(@AnalysisFeature int) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable TRACK_GUARANTEED_VALUE_DEREFS_IN_NULL_POINTER_ANALYSIS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses function linesMentionedMultipleTimes(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getAssertionMethods() defined in edu::umd::cs::findbugs::ba::ClassContext
   variable assertionMethods in line 108
   variable classContext in line 84
   variable collector in line 88
   variable DEBUG in line 78
   variable DEBUG_DEREFS in line 82
   variable definitelyDifferentBranchSet in line 96
   variable definitelySameBranchSet in line 94
   variable findGuaranteedDerefs in line 90
   variable invDataflow in line 102
   variable lineMentionedMultipleTimes in line 100
   variable method in line 86
   variable MY_DEBUG in line 469
   variable PRUNE_GUARANTEED_DEREFERENCES in line 80
   variable redundantBranchList in line 92
   variable undeterminedBranchSet in line 98
   variable uvdDataflow in line 106
   variable vnaDataflow in line 104
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/NullValueUnconditionalDeref.java
module edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
   function add(IsNullValue,Set< Location >) in line 35
      protection public
      15 lines of code
      2 parameters
      5 conditional paths
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable alwaysOnExceptionPath defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
      uses function isFieldValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable alwaysFieldValue defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
      uses function isReturnValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable alwaysMethodReturnValue defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
      uses function isReadlineValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable alwaysReadlineValue defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
      uses variable derefLocationSet defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
   function getDerefLocationSet() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable derefLocationSet defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
   function isAlwaysOnExceptionPath() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable alwaysOnExceptionPath defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
   function isFieldValue() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable alwaysFieldValue defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
   function isMethodReturnValue() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable alwaysMethodReturnValue defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
   function isReadlineValue() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable alwaysReadlineValue defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
   function NullValueUnconditionalDeref() in line 23
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   variable alwaysFieldValue in line 15
   variable alwaysMethodReturnValue in line 17
   variable alwaysOnExceptionPath in line 13
   variable alwaysReadlineValue in line 19
   variable derefLocationSet in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/ParameterNullnessPropertyDatabase.java
module edu::umd::cs::findbugs::ba::npe::ParameterNullnessPropertyDatabase
   inherits from edu::umd::cs::findbugs::ba::interproc::MethodPropertyDatabase
   function decodeProperty(String) in line 43
      9 lines of code
      1 parameters
      2 conditional paths
   function encodeProperty(ParameterProperty) in line 62
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getParamsWithProperty() defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/PointerUsageRequiringNonNullValue.java
module edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
   abstract class
   function getDescription() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNonNullField() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNonNullParameter() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPassedAsNonNullParameter(final XMethod,final int) in line 102
      protection public
      15 lines of code
      2 parameters
      1 conditional paths
      uses function getNonNullParameter() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
      uses function getDescription() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
   function getPointerDereference() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
   function getPointerNullChecked() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nullCheckInstance defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
   function getReturnFromNonNullMethod(XMethod) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nonNullReturnInstance defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
   function getStoredIntoNonNullField(final XField) in line 118
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
      uses function getNonNullField() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
      uses function getDescription() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
   function isDirect() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isReturnFromNonNullMethod() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDescription() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
   variable instance in line 58
   variable nonNullReturnInstance in line 70
   variable nullCheckInstance in line 86
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/RedundantBranch.java
module edu::umd::cs::findbugs::ba::npe::RedundantBranch
   function setInfeasibleEdge(Edge) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable infeasibleEdge defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
   function toString() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses function toString() defined in edu::umd::cs::findbugs::ba::Location
      uses variable lineNumber defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
   function RedundantBranch(Location,int,IsNullValue,IsNullValue) in line 51
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses variable lineNumber defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses variable firstValue defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
   function RedundantBranch(Location,int,IsNullValue) in line 68
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses variable lineNumber defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses variable firstValue defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
   variable firstValue in line 35
      protection public
   variable infeasibleEdge in line 37
      protection public
   variable lineNumber in line 33
      protection public
   variable location in line 31
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/ReturnPathType.java
module edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function canReturnNormally() in line 55
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable CAN_RETURN_NORMALLY defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function copyFrom(ReturnPathType) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function isTop() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable TOP defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function isValid() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable TOP defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function mergeWith(ReturnPathType) in line 103
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function copyFrom(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable CAN_RETURN_NORMALLY defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function setCanReturnNormally(boolean) in line 93
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable CAN_RETURN_NORMALLY defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable CANNOT_RETURN_NORMALLY defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function setTop() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable TOP defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function toString() in line 146
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable TOP defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable CAN_RETURN_NORMALLY defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable CANNOT_RETURN_NORMALLY defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function ReturnPathType() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable TOP defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   variable CAN_RETURN_NORMALLY in line 36
   variable CANNOT_RETURN_NORMALLY in line 38
   variable TOP in line 40
   variable type in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/ReturnPathTypeAnalysis.java
module edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
   inherits from edu::umd::cs::findbugs::ba::BasicAbstractDataflowAnalysis
   function copy(ReturnPathType,ReturnPathType) in line 64
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function createFact() in line 69
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function edgeTransfer(Edge,ReturnPathType) in line 76
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable cfg defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
      uses function setCanReturnNormally(boolean) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
   function finishIteration() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBlockOrder(CFG) in line 93
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
   function getLastUpdateTimestamp(ReturnPathType) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function initEntryFact(ReturnPathType) in line 123
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function isForwards() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTop(ReturnPathType) in line 138
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function makeFactTop(ReturnPathType) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function meetInto(ReturnPathType,Edge,ReturnPathType) in line 148
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function same(ReturnPathType,ReturnPathType) in line 153
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function setLastUpdateTimestamp(ReturnPathType,int) in line 158
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function startIteration() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function transfer(BasicBlock,InstructionHandle,ReturnPathType,ReturnPathType) in line 168
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
   function ReturnPathTypeAnalysis(CFG,ReverseDepthFirstSearch,DepthFirstSearch) in line 57
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
   variable cfg in line 41
   variable dfs in line 43
   variable rdfs in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/ReturnPathTypeDataflow.java
module edu::umd::cs::findbugs::ba::npe::ReturnPathTypeDataflow
   inherits from edu::umd::cs::findbugs::ba::Dataflow
   function ReturnPathTypeDataflow(CFG,ReturnPathTypeAnalysis) in line 40
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable analysis defined in edu::umd::cs::findbugs::ba::Dataflow
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/ReturnValueNullnessPropertyDatabase.java
module edu::umd::cs::findbugs::ba::npe::ReturnValueNullnessPropertyDatabase
   inherits from edu::umd::cs::findbugs::ba::interproc::MethodPropertyDatabase
   function decodeProperty(String) in line 41
      4 lines of code
      1 parameters
      1 conditional paths
   function encodeProperty(Boolean) in line 55
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/TypeQualifierNullnessAnnotationDatabase.java
module edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
   inherits from edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
   function addDefaultAnnotation(Target,String,NullnessAnnotation) in line 243
      protection public
      56 lines of code
      3 parameters
      10 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function getClassDescriptorForDottedClassName(@DottedClassName String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable PARAMETER defined in edu::umd::cs::findbugs::ba::AnnotationDatabase::Target
      uses function addAnnotation(AnnotationValue) defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses variable PARAMETERS_ARE_NONNULL_BY_DEFAULT defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses variable METHOD defined in edu::umd::cs::findbugs::ba::AnnotationDatabase::Target
      uses variable RETURN_VALUES_ARE_NONNULL_BY_DEFAULT defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses variable ANY defined in edu::umd::cs::findbugs::ba::AnnotationDatabase::Target
      uses variable DEFAULT_ANNOTATION defined in edu::umd::cs::findbugs::ba::jsr305::FindBugsDefaultAnnotations
      uses variable FIELD defined in edu::umd::cs::findbugs::ba::AnnotationDatabase::Target
      uses variable DEFAULT_ANNOTATION_FOR_FIELDS defined in edu::umd::cs::findbugs::ba::jsr305::FindBugsDefaultAnnotations
      uses variable DEFAULT_ANNOTATION_FOR_METHODS defined in edu::umd::cs::findbugs::ba::jsr305::FindBugsDefaultAnnotations
      uses variable DEFAULT_ANNOTATION_FOR_PARAMETERS defined in edu::umd::cs::findbugs::ba::jsr305::FindBugsDefaultAnnotations
      uses function getNullnessAnnotationClassDescriptor(NullnessAnnotation) defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function getAnnotationVisitor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function addFieldAnnotation(String,String,String,boolean,NullnessAnnotation) in line 301
      protection public
      22 lines of code
      5 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function getNullnessAnnotationClassDescriptor(NullnessAnnotation) defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
   function addMethodAnnotation(String,String,String,boolean,NullnessAnnotation) in line 356
      protection public
      17 lines of code
      5 parameters
      3 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function getXMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function getNullnessAnnotationClassDescriptor(NullnessAnnotation) defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function addAnnotation(AnnotationValue) defined in edu::umd::cs::findbugs::ba::XMethod
   function addMethodParameterAnnotation(@DottedClassName String,String,String,boolean,int,NullnessAnnotation) in line 375
      protection public
      34 lines of code
      6 parameters
      6 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function getXMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function getNullnessAnnotationClassDescriptor(NullnessAnnotation) defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable ASSERTIONS_ENABLED defined in edu::umd::cs::findbugs::SystemProperties
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function addParameterAnnotation(int,AnnotationValue) defined in edu::umd::cs::findbugs::ba::XMethod
   function assertsFirstParameterIsNonnull(XMethod) in line 168
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function getDirectAnnotation(Object) in line 134
      protection public
      33 lines of code
      1 parameters
      7 conditional paths
      uses function getProfiler() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses function getParameterNumber() defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses variable nonnullTypeQualifierValue defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function toNullnessAnnotation(@CheckForNull TypeQualifierAnnotation) defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function toString() defined in edu::umd::cs::findbugs::ba::AnnotationEnumeration
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
   function getInheritedAnnotation(XMethod,int) in line 109
      protection public
      13 lines of code
      2 parameters
      2 conditional paths
      uses function getProfiler() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses variable nonnullTypeQualifierValue defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function toNullnessAnnotation(@CheckForNull TypeQualifierAnnotation) defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
   function getInheritedAnnotation(XMethod) in line 122
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function getProfiler() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses variable nonnullTypeQualifierValue defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function toNullnessAnnotation(@CheckForNull TypeQualifierAnnotation) defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
   function getNullnessAnnotationClassDescriptor(NullnessAnnotation) in line 222
      13 lines of code
      1 parameters
      5 conditional paths
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::jsr305::JSR305NullnessAnnotations
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::jsr305::JSR305NullnessAnnotations
      uses variable NULLABLE defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable NULLABLE defined in edu::umd::cs::findbugs::ba::jsr305::JSR305NullnessAnnotations
      uses variable UNKNOWN_NULLNESS defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   function getResolvedAnnotation(Object,boolean) in line 74
      protection public
      34 lines of code
      2 parameters
      7 conditional paths
      uses function getProfiler() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses function getParameterNumber() defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses variable nonnullTypeQualifierValue defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function toNullnessAnnotation(@CheckForNull TypeQualifierAnnotation) defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function toString() defined in edu::umd::cs::findbugs::ba::AnnotationEnumeration
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
   function getXMethod(String,String,String,boolean) in line 325
      protection public
      29 lines of code
      4 parameters
      5 conditional paths
      uses function getClassDescriptorForDottedClassName(@DottedClassName String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   function loadAuxiliaryAnnotations() in line 411
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parameterMustBeNonNull(XMethod,int) in line 180
      protection public
      26 lines of code
      2 parameters
      6 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses variable nonnullTypeQualifierValue defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function assertsFirstParameterIsNonnull(XMethod) defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
   function toNullnessAnnotation(@CheckForNull TypeQualifierAnnotation) in line 423
      24 lines of code
      1 parameters
      7 conditional paths
      uses variable OVERRIDES_BUT_NO_ANNOTATION defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable UNKNOWN_NULLNESS defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   function TypeQualifierNullnessAnnotationDatabase() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nonnullTypeQualifierValue defined in edu::umd::cs::findbugs::ba::npe::TypeQualifierNullnessAnnotationDatabase
   variable DEBUG in line 65
   variable nonnullTypeQualifierValue in line 67
      protection public
   variable PARAMETERS_ARE_NONNULL_BY_DEFAULT in line 236
   variable RETURN_VALUES_ARE_NONNULL_BY_DEFAULT in line 239
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/npe/UsagesRequiringNonNullValues.java
module edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues
   function add(Location,ValueNumber,PointerUsageRequiringNonNullValue) in line 67
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
      uses variable vn defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues::Pair
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::DerefFinder
      uses function add(K,V) defined in edu::umd::cs::findbugs::util::MultiMap
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function get(Location,ValueNumber,ValueNumberDataflow) in line 77
      protection public
      17 lines of code
      3 parameters
      5 conditional paths
      uses function get(K) defined in edu::umd::cs::findbugs::util::MultiMap
      uses variable vn defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues::Pair
      uses variable PHI_NODE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getTransitiveInputSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function getPairs(Integer) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function get(K) defined in edu::umd::cs::findbugs::util::MultiMap
   function toString() in line 59
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function asMap() defined in edu::umd::cs::findbugs::util::MultiMap
module edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues::Pair
   function toString() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vn defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues::Pair
      uses function toString() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   variable pu in line 43
      protection public
   variable vn in line 41
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/NullnessAnnotation.java
module edu::umd::cs::findbugs::ba::NullnessAnnotation
   inherits from AnnotationEnumeration< NullnessAnnotation >
   function values() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable myValues defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   function NullnessAnnotation(String,int) in line 70
      3 lines of code
      2 parameters
      1 conditional paths
   variable CHECK_FOR_NULL in line 31
      protection public
   variable myValues in line 39
   variable NONNULL in line 33
      protection public
   variable NULLABLE in line 35
      protection public
   variable UNKNOWN_NULLNESS in line 37
      protection public
module edu::umd::cs::findbugs::ba::NullnessAnnotation::Parser
   function parse(@DottedClassName String) in line 43
      protection public
      21 lines of code
      1 parameters
      6 conditional paths
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable myValues defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/NullnessAnnotationDatabase.java
module edu::umd::cs::findbugs::ba::NullnessAnnotationDatabase
   inherits from AnnotationDatabase< NullnessAnnotation >
   inherits from edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
   function addDefaultAnnotation(AnnotationDatabase.Target,String,NullnessAnnotation) in line 130
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function addDefaultMethodAnnotation(String,NullnessAnnotation) in line 125
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function addFieldAnnotation(String,String,String,boolean,NullnessAnnotation) in line 135
      protection public
      3 lines of code
      5 parameters
      1 conditional paths
   function addMethodAnnotation(String,String,String,boolean,NullnessAnnotation) in line 140
      protection public
      3 lines of code
      5 parameters
      1 conditional paths
   function addMethodParameterAnnotation(String,String,String,boolean,int,NullnessAnnotation) in line 145
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
   function getResolvedAnnotation(final Object,boolean) in line 71
      protection public
      50 lines of code
      2 parameters
      13 conditional paths
      uses function getProfiler() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses function getParameterNumber() defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function isPrivate() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
   function loadAuxiliaryAnnotations() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parameterMustBeNonNull(XMethod,int) in line 46
      protection public
      22 lines of code
      2 parameters
      7 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function anyAnnotations(AnnotationEnum) defined in AnnotationDatabase< NullnessAnnotation >
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function getResolvedAnnotation(final Object,boolean) defined in edu::umd::cs::findbugs::ba::NullnessAnnotationDatabase
   function NullnessAnnotationDatabase() in line 34
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setAddClassOnly(boolean) defined in AnnotationDatabase< NullnessAnnotation >
      uses function loadAuxiliaryAnnotations() defined in edu::umd::cs::findbugs::ba::NullnessAnnotationDatabase
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ObjectTypeFactory.java
module edu::umd::cs::findbugs::ba::ObjectTypeFactory
   function clearInstance() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::ObjectTypeFactory
   function getInstance(Class<?>) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getInstance(@DottedClassName String) in line 53
      protection public
      20 lines of code
      1 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses variable instance defined in edu::umd::cs::findbugs::ba::ObjectTypeFactory
   variable instance in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/obl/InstructionActionCache.java
module edu::umd::cs::findbugs::ba::obl::InstructionActionCache
   function addsObligation(BasicBlock,InstructionHandle,Obligation) in line 195
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function hasAction(BasicBlock,InstructionHandle,Obligation,ObligationPolicyDatabaseActionType) defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
      uses variable ADD defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
   function deletesObligation(BasicBlock,InstructionHandle,Obligation) in line 199
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function hasAction(BasicBlock,InstructionHandle,Obligation,ObligationPolicyDatabaseActionType) defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
      uses variable DEL defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
   function getActions(BasicBlock,InstructionHandle) in line 87
      protection public
      107 lines of code
      2 parameters
      20 conditional paths
      uses variable actionCache defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
      uses variable cpg defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable DEBUG_LOOKUP defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
      uses function getAnnotationDescriptors() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable CLEAR defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
      uses variable database defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
      uses function getActions(ReferenceType,String,String,boolean,Collection< ObligationPolicyDatabaseAction >) defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getParameterAnnotationDescriptors(int) defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getArgument(InvokeInstruction,ConstantPoolGen,int,int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getObligationByType(ObjectType) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses variable DEL defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::obl::Obligation
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
   function hasAction(BasicBlock,InstructionHandle,Obligation,ObligationPolicyDatabaseActionType) in line 203
      10 lines of code
      4 parameters
      3 conditional paths
      uses function getActions(BasicBlock,InstructionHandle) defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
   function InstructionActionCache(ObligationPolicyDatabase,XMethod,ConstantPoolGen,TypeDataflow) in line 78
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
      uses variable cpg defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
   variable actionCache in line 70
   variable cpg in line 74
   variable database in line 68
   variable DEBUG_LOOKUP in line 66
   variable typeDataflow in line 73
   variable xmethod in line 72
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/obl/MatchMethodEntry.java
module edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
   inherits from edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseEntry
   function getActions(ReferenceType,String,String,boolean,Collection< ObligationPolicyDatabaseAction >) in line 122
      protection public
      11 lines of code
      5 parameters
      3 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable signature defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable isStatic defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable receiverType defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable obligations defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable action defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
   function getAllObligations() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable obligations defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
   function getEntryType() in line 117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entryType defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
   function toString() in line 135
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable receiverType defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable methodName defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable signature defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable isStatic defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable action defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable obligations defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable entryType defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
   function MatchMethodEntry(XMethod,ObligationPolicyDatabaseActionType,ObligationPolicyDatabaseEntryType,Obligation...) in line 73
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable action defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable entryType defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable obligations defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
   function MatchMethodEntry(MethodDescriptor,ObligationPolicyDatabaseActionType,ObligationPolicyDatabaseEntryType,Obligation...) in line 79
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable action defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable entryType defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable obligations defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
   function MatchMethodEntry(TypeMatcher,StringMatcher,StringMatcher,boolean,ObligationPolicyDatabaseActionType,ObligationPolicyDatabaseEntryType,Obligation...) in line 105
      protection public
      10 lines of code
      7 parameters
      1 conditional paths
      uses variable receiverType defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable methodName defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable signature defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable isStatic defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable action defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable obligations defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
      uses variable entryType defined in edu::umd::cs::findbugs::ba::obl::MatchMethodEntry
   variable action in line 49
   variable entryType in line 53
   variable isStatic in line 47
   variable methodName in line 43
   variable obligations in line 51
   variable receiverType in line 41
   variable signature in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/obl/NonexistentObligationException.java
module edu::umd::cs::findbugs::ba::obl::NonexistentObligationException
   inherits from Exception
   function NonexistentObligationException(Obligation) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::obl::Obligation
   variable serialVersionUID in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/obl/Obligation.java
module edu::umd::cs::findbugs::ba::obl::Obligation
   function getClassName() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function getId() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable id defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function getType() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function isUserObligationType() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable userObligationType defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function setUserObligationType(boolean) in line 69
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable userObligationType defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function toString() in line 74
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function Obligation(@DottedClassName String,int) in line 47
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::obl::Obligation
      uses variable id defined in edu::umd::cs::findbugs::ba::obl::Obligation
   variable className in line 39
   variable id in line 43
   variable type in line 41
   variable userObligationType in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/obl/ObligationAcquiredOrReleasedInLoopException.java
module edu::umd::cs::findbugs::ba::obl::ObligationAcquiredOrReleasedInLoopException
   inherits from edu::umd::cs::findbugs::ba::DataflowAnalysisException
   function getObligation() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable obligation defined in edu::umd::cs::findbugs::ba::obl::ObligationAcquiredOrReleasedInLoopException
   function ObligationAcquiredOrReleasedInLoopException(Obligation) in line 33
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable obligation defined in edu::umd::cs::findbugs::ba::obl::ObligationAcquiredOrReleasedInLoopException
   variable obligation in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/obl/ObligationAnalysis.java
module edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
   inherits from edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
   function acmpNullCheck(short,Edge,InstructionHandle,BasicBlock) in line 286
      37 lines of code
      4 parameters
      5 conditional paths
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable DEBUG_NULL_CHECK defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
   function comparesObligationTypeToNull(Edge) in line 226
      39 lines of code
      1 parameters
      9 conditional paths
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable DEBUG_NULL_CHECK defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function nullCheck(short,Edge,InstructionHandle,BasicBlock) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function acmpNullCheck(short,Edge,InstructionHandle,BasicBlock) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable database defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getObligationByType(ObjectType) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses variable errorLogger defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function copy(StateSet,StateSet) in line 325
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(StateSet) defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function createFact() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
   function edgeTransfer(Edge,StateSet) in line 173
      protection public
      48 lines of code
      2 parameters
      8 conditional paths
      uses variable CHECKED_EXCEPTIONS_FLAG defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable actionCache defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function getActions(BasicBlock,InstructionHandle) defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
      uses variable DEL defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
      uses function isPossibleIfComparison(Edge) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function comparesObligationTypeToNull(Edge) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable DEBUG_NULL_CHECK defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function toString() defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function endTransfer(BasicBlock,@CheckForNull InstructionHandle,StateSet) in line 164
      7 lines of code
      3 parameters
      2 conditional paths
      uses function stateIterator() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function getPath() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function append(int) defined in edu::umd::cs::findbugs::ba::Path
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function getActionCache() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable actionCache defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
   function initEntryFact(StateSet) in line 330
      protection public
      29 lines of code
      1 parameters
      5 conditional paths
      uses variable cachedEntryFact defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function getParameterObligationTypes(XMethod) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function getParameterAnnotation(int,ClassDescriptor) defined in edu::umd::cs::findbugs::ba::XMethod
      uses function add(Obligation) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function replaceMap(Map< ObligationSet, State >) defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function isFactValid(StateSet) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function isPossibleIfComparison(Edge) in line 222
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function isTop(StateSet) in line 373
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function makeFactTop(StateSet) in line 368
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function meetInto(StateSet,Edge,StateSet) in line 383
      protection public
      82 lines of code
      3 parameters
      15 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function isValid() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function stateIterator() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function getPath() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function getLength() defined in edu::umd::cs::findbugs::ba::Path
      uses function getBlockIdAt(int) defined in edu::umd::cs::findbugs::ba::Path
      uses variable isTop defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable isBottom defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function copy(StateSet,StateSet) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function isOnExceptionPath() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function getAllObligationSets() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function getStateWithObligationSet(ObligationSet) defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function copyFrom(ObligationSet) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function copyFrom(Path) defined in edu::umd::cs::findbugs::ba::Path
      uses function duplicate() defined in edu::umd::cs::findbugs::ba::obl::State
   function nullCheck(short,Edge,InstructionHandle,BasicBlock) in line 266
      19 lines of code
      4 parameters
      5 conditional paths
      uses variable DEBUG_NULL_CHECK defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
   function same(StateSet,StateSet) in line 378
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function transfer(BasicBlock,@CheckForNull InstructionHandle,StateSet,StateSet) in line 158
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses function endTransfer(BasicBlock,@CheckForNull InstructionHandle,StateSet) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
   function transferInstruction(InstructionHandle,BasicBlock,StateSet) in line 137
      protection public
      19 lines of code
      3 parameters
      6 conditional paths
      uses variable actionCache defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function getActions(BasicBlock,InstructionHandle) defined in edu::umd::cs::findbugs::ba::obl::InstructionActionCache
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
   function ObligationAnalysis(DepthFirstSearch,XMethod,ConstantPoolGen,ObligationFactory,ObligationPolicyDatabase,TypeDataflow,IsNullValueDataflow,IErrorLogger) in line 109
      protection public
      12 lines of code
      8 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
      uses variable xmethod defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable database defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable errorLogger defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
   variable actionCache in line 86
   variable cachedEntryFact in line 88
   variable database in line 78
   variable DEBUG in line 70
   variable DEBUG_NULL_CHECK in line 72
   variable errorLogger in line 84
   variable factory in line 76
   variable invDataflow in line 82
   variable typeDataflow in line 80
   variable xmethod in line 74
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/obl/ObligationDataflow.java
module edu::umd::cs::findbugs::ba::obl::ObligationDataflow
   inherits from edu::umd::cs::findbugs::ba::Dataflow
   function ObligationDataflow(CFG,ObligationAnalysis) in line 31
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable analysis defined in edu::umd::cs::findbugs::ba::Dataflow
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/obl/ObligationFactory.java
module edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function addObligation(@DottedClassName String) in line 167
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable classNameToObligationMap defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses variable slashedClassNames defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function createObligationSet() in line 190
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMaxObligationTypes() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classNameToObligationMap defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function getObligationById(int) in line 177
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable classNameToObligationMap defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function getObligationByName(@DottedClassName String) in line 186
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classNameToObligationMap defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function getObligationByType(ObjectType) in line 111
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function obligationIterator() defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function getType() defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function getObligationByType(ClassDescriptor) in line 132
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getObligationByType(ObjectType) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getErrorLogger() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function getParameterObligationTypes(XMethod) in line 151
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getObligationByType(ObjectType) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function getErrorLogger() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function isObligationType(ClassDescriptor) in line 81
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getObligationByType(ObjectType) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getErrorLogger() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function obligationIterator() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classNameToObligationMap defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function signatureInvolvesObligations(String) in line 63
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable slashedClassNames defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function ObligationFactory() in line 54
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable classNameToObligationMap in line 46
   variable slashedClassNames in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/obl/ObligationPolicyDatabase.java
module edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
   function addEntry(ObligationPolicyDatabaseEntry) in line 69
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses variable allObligations defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getAllObligations() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseEntry
      uses variable entryList defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
   function addParameterDeletesObligationDatabaseEntry(XMethod,Obligation,ObligationPolicyDatabaseEntryType) in line 88
      protection public
      9 lines of code
      3 parameters
      1 conditional paths
      uses variable DEL defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
      uses function addEntry(ObligationPolicyDatabaseEntry) defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
   function getActions(ReferenceType,String,String,boolean,Collection< ObligationPolicyDatabaseAction >) in line 109
      protection public
      22 lines of code
      5 parameters
      6 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses variable entryList defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
   function getAllObligations() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable allObligations defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
   function getEntries() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entryList defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
   function getFactory() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
   function isStrictChecking() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable strictChecking defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
   function setStrictChecking(boolean) in line 98
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses variable strictChecking defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
   function ObligationPolicyDatabase() in line 55
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   variable allObligations in line 51
   variable DEBUG in line 45
      protection public
   variable entryList in line 49
   variable factory in line 47
   variable strictChecking in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/obl/ObligationPolicyDatabaseAction.java
module edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
   function apply(StateSet,int) in line 51
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses variable actionType defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
      uses variable obligation defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
      uses variable CLEAR defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
   function getActionType() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable actionType defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
   function getObligation() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable obligation defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
   function toString() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable actionType defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
      uses variable obligation defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
   function ObligationPolicyDatabaseAction(ObligationPolicyDatabaseActionType,@Nullable Obligation) in line 38
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable actionType defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
      uses variable obligation defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseAction
   variable actionType in line 31
   variable CLEAR in line 35
      protection public
   variable obligation in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/obl/ObligationPolicyDatabaseActionType.java
module edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
   variable ADD in line 8
      protection public
   variable CLEAR in line 9
      protection public
   variable DEL in line 8
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/obl/ObligationPolicyDatabaseEntry.java
module edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseEntry
   function getActions(ReferenceType,String,String,boolean,Collection< ObligationPolicyDatabaseAction >) in line 56
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   function getAllObligations() in line 59
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEntryType() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/obl/ObligationPolicyDatabaseEntryType.java
module edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseEntryType
   variable STRONG in line 31
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/obl/ObligationSet.java
module edu::umd::cs::findbugs::ba::obl::ObligationSet
   function add(Obligation) in line 60
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function invalidate() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function getId() defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function copyFrom(ObligationSet) in line 154
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function invalidate() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function duplicate() in line 161
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function ObligationSet(ObligationFactory) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function copyFrom(ObligationSet) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function equals(Object) in line 113
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function ObligationSet(ObligationFactory) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function getCount(int) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function hashCode() in line 168
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable INVALID_HASH_CODE defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function invalidate() in line 179
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable INVALID_HASH_CODE defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function isEmpty() in line 52
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function remove(Obligation) in line 65
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function invalidate() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function toString() in line 133
      protection public
      20 lines of code
      0 parameters
      4 conditional paths
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function getObligationById(int) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function toString() defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function ObligationSet(ObligationFactory) in line 44
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function getMaxObligationTypes() defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function invalidate() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   variable cachedHashCode in line 42
   variable countList in line 37
   variable factory in line 40
   variable INVALID_HASH_CODE in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/obl/State.java
module edu::umd::cs::findbugs::ba::obl::State
   function duplicate() in line 62
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function State() defined in edu::umd::cs::findbugs::ba::obl::State
      uses variable obligationSet defined in edu::umd::cs::findbugs::ba::obl::State
      uses function duplicate() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable path defined in edu::umd::cs::findbugs::ba::obl::State
      uses function duplicate() defined in edu::umd::cs::findbugs::ba::Path
   function equals(Object) in line 71
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function State() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable obligationSet defined in edu::umd::cs::findbugs::ba::obl::State
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::Path
      uses variable path defined in edu::umd::cs::findbugs::ba::obl::State
   function getObligationSet() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable obligationSet defined in edu::umd::cs::findbugs::ba::obl::State
   function getPath() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable path defined in edu::umd::cs::findbugs::ba::obl::State
   function hashCode() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable obligationSet defined in edu::umd::cs::findbugs::ba::obl::State
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable path defined in edu::umd::cs::findbugs::ba::obl::State
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::Path
   function toString() in line 85
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable obligationSet defined in edu::umd::cs::findbugs::ba::obl::State
      uses function toString() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable path defined in edu::umd::cs::findbugs::ba::obl::State
      uses function toString() defined in edu::umd::cs::findbugs::ba::Path
   function State() in line 40
      2 lines of code
      0 parameters
      1 conditional paths
   function State(ObligationFactory) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable obligationSet in line 36
   variable path in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/obl/StateSet.java
module edu::umd::cs::findbugs::ba::obl::StateSet
   function addObligation(final Obligation,int) in line 189
      protection public
      16 lines of code
      2 parameters
      3 conditional paths
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function add(Obligation) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function checkCircularity(State,Obligation,int) defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function replaceMap(Map< ObligationSet, State >) defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function checkCircularity(State,Obligation,int) in line 242
      6 lines of code
      3 parameters
      2 conditional paths
   function clear() in line 101
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function copyFrom(StateSet) in line 158
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable isBottom defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable onExceptionPath defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function duplicate() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
   function createEmptyMap() in line 313
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function deleteObligation(final Obligation,int) in line 216
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses function stateIterator() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function checkCircularity(State,Obligation,int) defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function remove(Obligation) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function replaceMap(Map< ObligationSet, State >) defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function duplicate() in line 174
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function StateSet(ObligationFactory) defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function copyFrom(StateSet) defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function equals(Object) in line 278
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function StateSet(ObligationFactory) defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable isTop defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable isBottom defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable onExceptionPath defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function getAllObligationSets() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function getPrefixStates(Path) in line 267
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function getStateWithObligationSet(ObligationSet) in line 133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function hashCode() in line 288
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isBottom() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isEmpty() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function isOnExceptionPath() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable onExceptionPath defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function isTop() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isValid() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function replaceMap(Map< ObligationSet, State >) in line 255
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function setBottom() in line 80
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setOnExceptionPath(boolean) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable onExceptionPath defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function setTop() in line 69
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function stateIterator() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function toString() in line 293
      protection public
      15 lines of code
      0 parameters
      4 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable onExceptionPath defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function StateSet(ObligationFactory) in line 63
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::StateSet
   variable factory in line 61
   variable isBottom in line 51
   variable isTop in line 49
   variable onExceptionPath in line 53
   variable stateMap in line 55
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/OpcodeStackScanner.java
module edu::umd::cs::findbugs::ba::OpcodeStackScanner
   function getStackAt(JavaClass,Method,int) in line 61
      protection public
      9 lines of code
      3 parameters
      5 conditional paths
      uses function UnreachableCodeException(@DottedClassName String,String,String,int) defined in edu::umd::cs::findbugs::ba::OpcodeStackScanner::UnreachableCodeException
module edu::umd::cs::findbugs::ba::OpcodeStackScanner::UnreachableCodeException
   inherits from RuntimeException
   function UnreachableCodeException(@DottedClassName String,String,String,int) in line 39
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::OpcodeStackScanner::EarlyExitException
   inherits from RuntimeException
   function EarlyExitException(OpcodeStack) in line 55
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::OpcodeStackScanner::Scanner
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function execute() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function sawOpcode(int) in line 89
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function visitJavaClass(JavaClass) in line 99
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/Path.java
module edu::umd::cs::findbugs::ba::Path
   function acceptVisitor(CFG,PathVisitor) in line 134
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function getLength() defined in edu::umd::cs::findbugs::ba::Path
      uses function lookupBlockByLabel(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getBlockIdAt(int) defined in edu::umd::cs::findbugs::ba::Path
      uses function acceptVisitorStartingFromLocation(CFG,PathVisitor,BasicBlock,InstructionHandle) defined in edu::umd::cs::findbugs::ba::Path
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function acceptVisitorStartingFromLocation(CFG,PathVisitor,BasicBlock,InstructionHandle) in line 155
      protection public
      51 lines of code
      4 parameters
      9 conditional paths
      uses function getLength() defined in edu::umd::cs::findbugs::ba::Path
      uses function getBlockIdAt(int) defined in edu::umd::cs::findbugs::ba::Path
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable next defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function visitBasicBlock(BasicBlock) defined in edu::umd::cs::findbugs::ba::PathVisitor
      uses function visitInstructionHandle(InstructionHandle) defined in edu::umd::cs::findbugs::ba::PathVisitor
      uses function lookupBlockByLabel(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function lookupEdge(VertexType,VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function visitEdge(Edge) defined in edu::umd::cs::findbugs::ba::PathVisitor
   function append(int) in line 57
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function grow(int) defined in edu::umd::cs::findbugs::ba::Path
      uses variable length defined in edu::umd::cs::findbugs::ba::Path
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::Path
      uses function invalidate() defined in edu::umd::cs::findbugs::ba::Path
   function copyFrom(Path) in line 119
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function grow(int) defined in edu::umd::cs::findbugs::ba::Path
      uses variable length defined in edu::umd::cs::findbugs::ba::Path
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::Path
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::ba::Path
   function duplicate() in line 107
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function Path() defined in edu::umd::cs::findbugs::ba::Path
      uses function copyFrom(Path) defined in edu::umd::cs::findbugs::ba::Path
   function equals(Object) in line 243
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
      uses function Path() defined in edu::umd::cs::findbugs::ba::Path
      uses variable length defined in edu::umd::cs::findbugs::ba::Path
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::Path
   function getBlockIdAt(int) in line 88
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable length defined in edu::umd::cs::findbugs::ba::Path
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::Path
   function getLength() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable length defined in edu::umd::cs::findbugs::ba::Path
   function grow(int) in line 275
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::Path
      uses variable length defined in edu::umd::cs::findbugs::ba::Path
   function hasComponent(int) in line 72
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable length defined in edu::umd::cs::findbugs::ba::Path
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::Path
   function hashCode() in line 231
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::ba::Path
      uses variable INVALID_HASH_CODE defined in edu::umd::cs::findbugs::ba::Path
      uses variable length defined in edu::umd::cs::findbugs::ba::Path
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::Path
   function invalidate() in line 226
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable INVALID_HASH_CODE defined in edu::umd::cs::findbugs::ba::Path
   function isPrefixOf(Path) in line 214
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function getLength() defined in edu::umd::cs::findbugs::ba::Path
      uses function getBlockIdAt(int) defined in edu::umd::cs::findbugs::ba::Path
   function toString() in line 262
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable length defined in edu::umd::cs::findbugs::ba::Path
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::Path
      uses variable SYMBOLS defined in edu::umd::cs::findbugs::ba::Path
   function Path() in line 45
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable DEFAULT_CAPACITY defined in edu::umd::cs::findbugs::ba::Path
      uses function invalidate() defined in edu::umd::cs::findbugs::ba::Path
   variable blockIdList in line 36
   variable cachedHashCode in line 40
   variable DEFAULT_CAPACITY in line 32
   variable INVALID_HASH_CODE in line 34
   variable length in line 38
   variable SYMBOLS in line 259
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/PathVisitor.java
module edu::umd::cs::findbugs::ba::PathVisitor
   function visitBasicBlock(BasicBlock) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitEdge(Edge) in line 52
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitInstructionHandle(InstructionHandle) in line 44
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/PostDominatorsAnalysis.java
module edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
   inherits from edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
   function getBlockOrder(CFG) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
   function isForwards() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PostDominatorsAnalysis(CFG,ReverseDepthFirstSearch,DepthFirstSearch,EdgeChooser) in line 46
      5 lines of code
      4 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable edgeChooser defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
   function PostDominatorsAnalysis(CFG,ReverseDepthFirstSearch,DepthFirstSearch,boolean) in line 64
      5 lines of code
      4 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
   variable dfs in line 32
   variable rdfs in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/PruneInfeasibleExceptionEdges.java
module edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function execute() in line 121
      protection public
      58 lines of code
      0 parameters
      11 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable edge defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges::MarkedEdge
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
      uses function getEdgeExceptionSet(Edge) defined in edu::umd::cs::findbugs::ba::type::TypeDataflow
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function add(ObjectType,boolean) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function isSingleton(String) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function getMethodName() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getMethodGen() defined in edu::umd::cs::findbugs::ba::CFG
      uses function containsCheckedExceptions() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function containsExplicitExceptions() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable CHECKED_EXCEPTIONS_FLAG defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable EXPLICIT_EXCEPTIONS_FLAG defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function MarkedEdge(Edge,int) defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges::MarkedEdge
      uses function removeEdge(Edge) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable STATS defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
      uses variable numEdgesPruned defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
      uses variable cfgModified defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
   function wasCFGModified() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfgModified defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
   function PruneInfeasibleExceptionEdges(CFG,MethodGen,TypeDataflow) in line 105
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
   variable cfg in line 88
   variable cfgModified in line 92
   variable DEBUG in line 46
   variable numEdgesPruned in line 50
   variable STATS in line 48
   variable typeDataflow in line 90
module edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges::MarkedEdge
   function apply() in line 81
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable edge defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges::MarkedEdge
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable flag defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges::MarkedEdge
      uses function setFlags(int) defined in edu::umd::cs::findbugs::ba::Edge
   function MarkedEdge(Edge,int) in line 76
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable edge defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges::MarkedEdge
      uses variable flag defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges::MarkedEdge
   variable edge in line 72
   variable flag in line 74
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/PruneUnconditionalExceptionThrowerEdges.java
module edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function doesMethodUnconditionallyThrowException(XMethod,JavaClass,Method) in line 249
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function doesMethodUnconditionallyThrowException(XMethod) in line 257
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isUnconditionalThrower() defined in edu::umd::cs::findbugs::ba::XMethod
   function execute() in line 99
      protection public
      136 lines of code
      0 parameters
      30 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getBoolProperty(@AnalysisFeature int) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable CONSERVE_SPACE defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable cfg defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable cpg defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable unconditionalThrowerPattern defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses function isUnconditionalThrower(XMethod) defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isAbstract() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable analysisContext defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getOutgoingEdgeWithType(BasicBlock,@Type int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable cfgModified defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses function setFlag(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FOUND_INEXACT_UNCONDITIONAL_THROWERS defined in edu::umd::cs::findbugs::ba::CFG
      uses function removeEdge(Edge) defined in edu::umd::cs::findbugs::ba::CFG
   function isUnconditionalThrower(XMethod) in line 236
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isUnconditionalThrower() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function isUnsupported() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function wasCFGModified() in line 266
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfgModified defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
   function PruneUnconditionalExceptionThrowerEdges(JavaClass,Method,MethodGen,CFG,ConstantPoolGen,TypeDataflow,AnalysisContext) in line 89
      protection public
      9 lines of code
      7 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable cfg defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable cpg defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable analysisContext defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
   variable analysisContext in line 61
   variable cfg in line 55
   variable cfgModified in line 63
   variable cpg in line 57
   variable DEBUG in line 46
   variable DEBUG_DIFFERENCES in line 48
   variable methodGen in line 53
   variable RETURN_OPCODE_SET in line 67
   variable typeDataflow in line 59
   variable UNCONDITIONAL_THROWER_METHOD_NAMES in line 50
   variable unconditionalThrowerPattern in line 65
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/PutfieldScanner.java
module edu::umd::cs::findbugs::ba::PutfieldScanner
   function getPutfieldsFor(JavaClass,Method,XField) in line 36
      protection public
      7 lines of code
      3 parameters
      3 conditional paths
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
module edu::umd::cs::findbugs::ba::PutfieldScanner::Scanner
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function execute() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function sawOpcode(int) in line 61
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function visitJavaClass(JavaClass) in line 73
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function Scanner(JavaClass,Method,XField) in line 48
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/RepositoryClassParser.java
module edu::umd::cs::findbugs::ba::RepositoryClassParser
   function parse() in line 79
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable classParser defined in edu::umd::cs::findbugs::ba::RepositoryClassParser
   function RepositoryClassParser(InputStream,String) in line 45
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable classParser defined in edu::umd::cs::findbugs::ba::RepositoryClassParser
   function RepositoryClassParser(String) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classParser defined in edu::umd::cs::findbugs::ba::RepositoryClassParser
   function RepositoryClassParser(String,String) in line 67
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable classParser defined in edu::umd::cs::findbugs::ba::RepositoryClassParser
   variable classParser in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/RepositoryLookupFailureCallback.java
module edu::umd::cs::findbugs::ba::RepositoryLookupFailureCallback
   inherits from edu::umd::cs::findbugs::classfile::IErrorLogger
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ResourceTracker.java
module edu::umd::cs::findbugs::ba::ResourceTracker
   function createVisitor(Resource,ConstantPoolGen) in line 95
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function ignoreExceptionEdge(Edge,Resource,ConstantPoolGen) in line 125
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function ignoreImplicitExceptions(Resource) in line 109
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isParamInstance(Resource,int) in line 137
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function isResourceClose(BasicBlock,InstructionHandle,ConstantPoolGen,Resource,ResourceValueFrame) in line 67
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   function isResourceCreation(BasicBlock,InstructionHandle,ConstantPoolGen) in line 47
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function mightCloseResource(BasicBlock,InstructionHandle,ConstantPoolGen) in line 82
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ResourceValue.java
module edu::umd::cs::findbugs::ba::ResourceValue
   function instance() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isInstance() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function instance() defined in edu::umd::cs::findbugs::ba::ResourceValue
   function merge(ResourceValue,ResourceValue) in line 38
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function notInstance() defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses function instance() defined in edu::umd::cs::findbugs::ba::ResourceValue
   function notInstance() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function instance() defined in edu::umd::cs::findbugs::ba::ResourceValue
   function ResourceValue() in line 23
      2 lines of code
      0 parameters
      1 conditional paths
   variable instance in line 26
   variable notInstance in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ResourceValueAnalysis.java
module edu::umd::cs::findbugs::ba::ResourceValueAnalysis
   inherits from FrameDataflowAnalysis< ResourceValue, ResourceValueFrame >
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function createFact() in line 65
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::ResourceValueAnalysis
      uses function setTop() defined in edu::umd::cs::findbugs::ba::Frame
   function initEntryFact(ResourceValueFrame) in line 72
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function setValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable resourceTracker defined in edu::umd::cs::findbugs::ba::ResourceValueAnalysis
      uses variable resource defined in edu::umd::cs::findbugs::ba::ResourceValueAnalysis
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses variable notInstance defined in edu::umd::cs::findbugs::ba::ResourceValue
   function meetInto(ResourceValueFrame,Edge,ResourceValueFrame) in line 83
      protection public
      126 lines of code
      3 parameters
      23 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable ACCURATE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses variable ignoreImplicitExceptions defined in edu::umd::cs::findbugs::ba::ResourceValueAnalysis
      uses variable EXPLICIT_EXCEPTIONS_FLAG defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable resourceTracker defined in edu::umd::cs::findbugs::ba::ResourceValueAnalysis
      uses variable resource defined in edu::umd::cs::findbugs::ba::ResourceValueAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::ResourceValueAnalysis
      uses variable OPEN defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function modifyFrame(FrameType,@CheckForNull FrameType) defined in FrameDataflowAnalysis< ResourceValue, ResourceValueFrame >
      uses function setStatus(int) defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable OPEN_ON_EXCEPTION_PATH defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable cfg defined in edu::umd::cs::findbugs::ba::ResourceValueAnalysis
      uses function getSuccessorWithEdgeType(BasicBlock,@Type int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::ResourceValueAnalysis
      uses variable CLOSED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function isExceptionHandler() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses function pushValue(ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable notInstance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isInstance() defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses variable NONEXISTENT defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function mergeInto(ResourceValueFrame,ResourceValueFrame) defined in edu::umd::cs::findbugs::ba::ResourceValueAnalysis
   function mergeInto(ResourceValueFrame,ResourceValueFrame) in line 211
      7 lines of code
      2 parameters
      1 conditional paths
   function mergeValues(ResourceValueFrame,ResourceValueFrame,int) in line 220
      5 lines of code
      3 parameters
      1 conditional paths
   function transferInstruction(InstructionHandle,BasicBlock,ResourceValueFrame) in line 227
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses variable visitor defined in edu::umd::cs::findbugs::ba::ResourceValueAnalysis
      uses function setFrameAndLocation(FrameType,Location) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function transferInstruction(InstructionHandle,BasicBlock) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function ResourceValueAnalysis(MethodGen,CFG,DepthFirstSearch,ResourceTracker< Resource >,Resource) in line 51
      protection public
      12 lines of code
      5 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::ResourceValueAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::ResourceValueAnalysis
      uses variable resourceTracker defined in edu::umd::cs::findbugs::ba::ResourceValueAnalysis
      uses variable resource defined in edu::umd::cs::findbugs::ba::ResourceValueAnalysis
   variable cfg in line 41
   variable DEBUG in line 37
   variable ignoreImplicitExceptions in line 49
   variable methodGen in line 39
   variable resource in line 45
   variable resourceTracker in line 43
   variable visitor in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ResourceValueFrame.java
module edu::umd::cs::findbugs::ba::ResourceValueFrame
   inherits from Frame< ResourceValue >
   function copyFrom(Frame< ResourceValue >) in line 81
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function ResourceValueFrame(int) defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable status defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function getStatus() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable status defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function sameAs(Frame< ResourceValue >) in line 71
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function ResourceValueFrame(int) defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable status defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function setStatus(int) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable status defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function toString() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable statusList defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable status defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function ResourceValueFrame(int) in line 57
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable NONEXISTENT defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   variable CLOSED in line 43
      protection public
   variable CREATED in line 48
      protection public
   variable ESCAPED in line 26
      protection public
   variable NONEXISTENT in line 53
      protection public
   variable OPEN in line 32
      protection public
   variable OPEN_ON_EXCEPTION_PATH in line 38
      protection public
   variable status in line 55
   variable statusList in line 87
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ResourceValueFrameModelingVisitor.java
module edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   inherits from AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
   abstract class
   function getDefaultValue() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable notInstance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses function transferInstruction(InstructionHandle,BasicBlock) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function handleArrayStore(ArrayInstruction) in line 80
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable frame defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getFrame() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses variable ESCAPED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function handleNormalInstruction(Instruction) defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
   function handleFieldStore(FieldInstruction) in line 60
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable frame defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getFrame() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses variable ESCAPED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function handleNormalInstruction(Instruction) defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
   function handleInvoke(InvokeInstruction) in line 122
      21 lines of code
      1 parameters
      4 conditional paths
      uses variable frame defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getFrame() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getNumWordsConsumed(Instruction) defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses function instanceEscapes(InvokeInstruction,int) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
      uses variable ESCAPED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function handleNormalInstruction(Instruction) defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
   function instanceEscapes(InvokeInstruction,int) in line 118
      3 lines of code
      2 parameters
      1 conditional paths
   function transferInstruction(InstructionHandle,BasicBlock) in line 51
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visitAASTORE(AASTORE) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleArrayStore(ArrayInstruction) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function visitARETURN(ARETURN) in line 181
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable frame defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getFrame() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses variable ESCAPED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function handleNormalInstruction(Instruction) defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
   function visitCHECKCAST(CHECKCAST) in line 145
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable frame defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getFrame() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses variable ESCAPED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function visitINVOKEINTERFACE(INVOKEINTERFACE) in line 166
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function visitINVOKESPECIAL(INVOKESPECIAL) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function visitINVOKESTATIC(INVOKESTATIC) in line 176
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function visitINVOKEVIRTUAL(INVOKEVIRTUAL) in line 161
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function visitPUTFIELD(PUTFIELD) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleFieldStore(FieldInstruction) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function visitPUTSTATIC(PUTSTATIC) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleFieldStore(FieldInstruction) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function ResourceValueFrameModelingVisitor(ConstantPoolGen) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cpg defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ReturnPath.java
module edu::umd::cs::findbugs::ba::ReturnPath
   function copyFrom(ReturnPath) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::ReturnPath
   function getKind() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::ReturnPath
   function mergeWith(ReturnPath) in line 79
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable mergeMatrix defined in edu::umd::cs::findbugs::ba::ReturnPath
   function sameAs(ReturnPath) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::ReturnPath
   function setKind(int) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::ReturnPath
   function toString() in line 86
      protection public
      16 lines of code
      0 parameters
      6 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable TOP defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable EXIT defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable UE defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable EXIT_UE defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable RETURNS defined in edu::umd::cs::findbugs::ba::ReturnPath
   function ReturnPath(int) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::ReturnPath
   variable EXIT in line 31
      protection public
   variable EXIT_UE in line 41
      protection public
   variable kind in line 48
   variable mergeMatrix in line 70
   variable RETURNS in line 46
      protection public
   variable TOP in line 26
      protection public
   variable UE in line 36
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ReturnPathAnalysis.java
module edu::umd::cs::findbugs::ba::ReturnPathAnalysis
   inherits from ForwardDataflowAnalysis< ReturnPath >
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function copy(ReturnPath,ReturnPath) in line 35
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(ReturnPath) defined in edu::umd::cs::findbugs::ba::ReturnPath
   function createFact() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable TOP defined in edu::umd::cs::findbugs::ba::ReturnPath
   function initEntryFact(ReturnPath) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setKind(int) defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable RETURNS defined in edu::umd::cs::findbugs::ba::ReturnPath
   function isFactValid(ReturnPath) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isTop(ReturnPath) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getKind() defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable TOP defined in edu::umd::cs::findbugs::ba::ReturnPath
   function makeFactTop(ReturnPath) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setKind(int) defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable TOP defined in edu::umd::cs::findbugs::ba::ReturnPath
   function meetInto(ReturnPath,Edge,ReturnPath) in line 71
      protection public
      14 lines of code
      3 parameters
      3 conditional paths
      uses variable UNHANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable UE defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable EXIT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable EXIT defined in edu::umd::cs::findbugs::ba::ReturnPath
   function same(ReturnPath,ReturnPath) in line 55
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function sameAs(ReturnPath) defined in edu::umd::cs::findbugs::ba::ReturnPath
   function transferInstruction(InstructionHandle,BasicBlock,ReturnPath) in line 60
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function ReturnPathAnalysis(DepthFirstSearch) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< ReturnPath >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ReturnPathDataflow.java
module edu::umd::cs::findbugs::ba::ReturnPathDataflow
   inherits from Dataflow< ReturnPath, ReturnPathAnalysis >
   function ReturnPathDataflow(CFG,ReturnPathAnalysis) in line 23
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< ReturnPath, ReturnPathAnalysis >
      uses variable analysis defined in Dataflow< ReturnPath, ReturnPathAnalysis >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ReverseDepthFirstSearch.java
module edu::umd::cs::findbugs::ba::ReverseDepthFirstSearch
   inherits from ReverseDepthFirstSearch< CFG, Edge, BasicBlock >
   function getNextSearchTreeRoot() in line 44
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable firstRoot defined in edu::umd::cs::findbugs::ba::ReverseDepthFirstSearch
   function ReverseDepthFirstSearch(CFG) in line 38
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
   variable firstRoot in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/graph/ReverseDepthFirstSearch.java
module edu::umd::cs::findbugs::graph::ReverseDepthFirstSearch
   inherits from AbstractDepthFirstSearch< GraphType, EdgeType, VertexType >
   function getSource(EdgeType) in line 56
      3 lines of code
      1 parameters
      1 conditional paths
   function getTarget(EdgeType) in line 51
      3 lines of code
      1 parameters
      1 conditional paths
   function outgoingEdgeIterator(GraphType,VertexType) in line 46
      3 lines of code
      2 parameters
      1 conditional paths
   function ReverseDepthFirstSearch(GraphType) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ReverseDFSOrder.java
module edu::umd::cs::findbugs::ba::ReverseDFSOrder
   inherits from edu::umd::cs::findbugs::ba::AbstractBlockOrder
   function ReverseDFSOrder(CFG,ReverseDepthFirstSearch,DepthFirstSearch) in line 66
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function ReverseDFSComparator(ReverseDepthFirstSearch,DepthFirstSearch) defined in edu::umd::cs::findbugs::ba::ReverseDFSOrder::ReverseDFSComparator
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::ReverseDFSOrder
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ReverseDFSOrder::ReverseDFSComparator
   variable dfs in line 54
      protection public
   variable rdfs in line 52
      protection public
module edu::umd::cs::findbugs::ba::ReverseDFSOrder::ReverseDFSComparator
   inherits from java::util::Comparator
   function compare(BasicBlock,BasicBlock) in line 47
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ReverseDFSOrder::ReverseDFSComparator
   function ReverseDFSComparator(ReverseDepthFirstSearch,DepthFirstSearch) in line 39
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ReverseDFSOrder::ReverseDFSComparator
   variable dfs in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ReversePostOrder.java
module edu::umd::cs::findbugs::ba::ReversePostOrder
   inherits from edu::umd::cs::findbugs::ba::AbstractBlockOrder
   function ReversePostOrder(CFG,DepthFirstSearch) in line 60
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function ReversePostfixComparator(DepthFirstSearch) defined in edu::umd::cs::findbugs::ba::ReversePostOrder::ReversePostfixComparator
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ReversePostOrder::ReversePostfixComparator
module edu::umd::cs::findbugs::ba::ReversePostOrder::ReversePostfixComparator
   inherits from java::util::Comparator
   function compare(BasicBlock,BasicBlock) in line 47
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ReversePostOrder::ReversePostfixComparator
   function ReversePostfixComparator(DepthFirstSearch) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ReversePostOrder::ReversePostfixComparator
   variable dfs in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/SignatureConverter.java
module edu::umd::cs::findbugs::ba::SignatureConverter
   function convert(String) in line 265
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function SignatureConverter(String) defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function convertMethodSignature(JavaClass,Method) in line 146
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function convertMethodSignature(MethodGen) in line 157
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function convertMethodSignature(JavaClass,Method) defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function convertMethodSignature(InvokeInstruction,ConstantPoolGen) in line 170
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function convertMethodSignature(JavaClass,Method) defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function convertMethodSignature(String,String,String) in line 185
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function convertMethodSignature(JavaClass,Method) defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function convertMethodSignature(XMethod) in line 197
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function convertMethodSignature(JavaClass,Method) defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function convertMethodSignature(MethodDescriptor) in line 212
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function convertMethodSignature(JavaClass,Method) defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function convertMethodSignature(String,String,String,String) in line 231
      protection public
      26 lines of code
      4 parameters
      3 conditional paths
      uses function SignatureConverter(String) defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function skip() defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function getFirst() defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function shorten(String,String) defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function parseNext() defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function getFirst() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function parseNext() in line 78
      protection public
      58 lines of code
      0 parameters
      15 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function skip() defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function shorten(String,String) in line 269
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
   function skip() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function SignatureConverter(String) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureConverter
   variable signature in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/SignatureParser.java
module edu::umd::cs::findbugs::ba::SignatureParser
   function getArguments() in line 166
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function getNumParameters() in line 210
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumParametersForInvocation(InvokeInstruction,ConstantPoolGen) in line 254
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function SignatureParser(String) defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function getNumSlotsForType(String) in line 268
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getParameter(int) in line 224
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureParser
   function getReturnTypeSignature() in line 197
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureParser
   function getSlotsFromTopOfStackForParameter(int) in line 77
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable totalArgumentSize defined in edu::umd::cs::findbugs::ba::SignatureParser
   function getTotalArgumentSize() in line 40
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable parameterOffset defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses variable totalArgumentSize defined in edu::umd::cs::findbugs::ba::SignatureParser
   function hasReferenceParameters() in line 214
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function isReferenceType(String) in line 243
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureParser
   function main(String[]) in line 276
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function SignatureParser(String) defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function parameterSignatureIterator() in line 178
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parameterSignatures() in line 182
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureParser
   function SignatureParser(String) in line 157
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureParser
   variable parameterOffset in line 47
   variable signature in line 144
   variable totalArgumentSize in line 38
module edu::umd::cs::findbugs::ba::SignatureParser::ParameterSignatureIterator
   inherits from java::util::Iterator
   function hasNext() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable index defined in edu::umd::cs::findbugs::ba::SignatureParser::ParameterSignatureIterator
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureParser
   function next() in line 92
      protection public
      45 lines of code
      0 parameters
      15 conditional paths
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::SignatureParser::ParameterSignatureIterator
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses variable index defined in edu::umd::cs::findbugs::ba::SignatureParser::ParameterSignatureIterator
   function remove() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable index in line 84
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/SimplePathEnumerator.java
module edu::umd::cs::findbugs::ba::SimplePathEnumerator
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   inherits from edu::umd::cs::findbugs::ba::DFSEdgeTypes
   function enumerate() in line 97
      protection public
      17 lines of code
      0 parameters
      3 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses variable work defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable maxWork defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
   function iterator() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pathList defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
   function work(LinkedList< Edge >) in line 122
      41 lines of code
      1 parameters
      7 conditional paths
      uses variable pathList defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable maxPaths defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable cfg defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable dfs defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable BACK_EDGE defined in edu::umd::cs::findbugs::graph::DFSEdgeTypes
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable UNHANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable work defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable maxWork defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
   function SimplePathEnumerator(CFG,int,int) in line 70
      protection public
      9 lines of code
      3 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable dfs defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable maxPaths defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable maxWork defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
   function SimplePathEnumerator(CFG,int) in line 88
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable maxPaths defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable DEFAULT_MAX_WORK defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
   variable cfg in line 40
   variable DEBUG in line 52
   variable DEFAULT_MAX_WORK in line 57
      protection public
   variable dfs in line 42
   variable maxPaths in line 44
   variable maxWork in line 46
   variable pathList in line 50
   variable work in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/SourceFile.java
module edu::umd::cs::findbugs::ba::SourceFile
   function addLineOffset(int) in line 153
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable numLines defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable lineNumberMap defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable offset defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
   function getFullFileName() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dataSource defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function getFullFileName() defined in edu::umd::cs::findbugs::ba::SourceFileDataSource
   function getInputStream() in line 128
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFileData() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable data defined in edu::umd::cs::findbugs::ba::SourceFile
   function getInputStreamFromOffset(int) in line 141
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function loadFileData() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable data defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable offset defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
   function getLastModified() in line 231
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dataSource defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function getLastModified() defined in edu::umd::cs::findbugs::ba::SourceFileDataSource
   function getLineOffset(int) in line 175
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function loadFileData() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable numLines defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable lineNumberMap defined in edu::umd::cs::findbugs::ba::SourceFile
   function intValueOf(byte) in line 35
      3 lines of code
      1 parameters
      1 conditional paths
   function loadFileData() in line 188
      32 lines of code
      0 parameters
      5 conditional paths
      uses variable data defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable dataSource defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function open() defined in edu::umd::cs::findbugs::ba::SourceFileDataSource
      uses function addLineOffset(int) defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function LineNumberMapBuilder(SourceFile) defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
      uses function addData(byte[],int) defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
      uses function eof() defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
      uses function setData(byte[]) defined in edu::umd::cs::findbugs::ba::SourceFile
   function setData(byte[]) in line 227
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable data defined in edu::umd::cs::findbugs::ba::SourceFile
   function SourceFile(SourceFileDataSource) in line 109
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable dataSource defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable DEFAULT_SIZE defined in edu::umd::cs::findbugs::ba::SourceFile
   variable data in line 96
   variable dataSource in line 94
   variable DEFAULT_SIZE in line 92
   variable lineNumberMap in line 98
   variable numLines in line 100
module edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
   function add(int) in line 68
      22 lines of code
      1 parameters
      4 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
      uses function addLineOffset(int) defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable offset defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
      uses variable lastSeen defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
   function addData(byte[],int) in line 56
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function intValueOf(byte) defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable data defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function add(int) defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
   function eof() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function add(int) defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
   function LineNumberMapBuilder(SourceFile) in line 50
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
   variable lastSeen in line 48
   variable offset in line 46
   variable sourceFile in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/SourceFileDataSource.java
module edu::umd::cs::findbugs::ba::SourceFileDataSource
   function getFullFileName() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getLastModified() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function open() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/SourceFinder.java
module edu::umd::cs::findbugs::ba::SourceFinder
   function findSourceFile(SourceLineAnnotation) in line 432
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getOrGuessSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
   function findSourceFile(String,String) in line 448
      protection public
      49 lines of code
      2 parameters
      7 conditional paths
      uses function getPlatformName(String,String) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getCanonicalName(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable cache defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable repositoryList defined in edu::umd::cs::findbugs::ba::SourceFinder
   function getCanonicalName(SourceLineAnnotation) in line 508
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getOrGuessSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
   function getCanonicalName(String,String) in line 512
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function getOrGuessSourceFile(SourceLineAnnotation) in line 517
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function isSourceFileKnown() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getPlatformName(String,String) in line 498
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function getPlatformName(SourceLineAnnotation) in line 504
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPlatformName(String,String) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getOrGuessSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
   function getProject() in line 376
      protection public
      3 lines of code
      0 parameters
      6 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable repositoryList defined in edu::umd::cs::findbugs::ba::SourceFinder
   function hasSourceFile(SourceLineAnnotation) in line 531
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getOrGuessSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
   function hasSourceFile(String,String) in line 535
      protection public
      47 lines of code
      2 parameters
      7 conditional paths
      uses function getPlatformName(String,String) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getCanonicalName(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable cache defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable repositoryList defined in edu::umd::cs::findbugs::ba::SourceFinder
   function openSource(String,String) in line 422
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getInputStream() defined in edu::umd::cs::findbugs::ba::SourceFile
   function openSource(SourceLineAnnotation) in line 427
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getInputStream() defined in edu::umd::cs::findbugs::ba::SourceFile
   function setProject(Project) in line 583
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable repositoryList defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable cache defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getResolvedSourcePaths() defined in edu::umd::cs::findbugs::Project
   function SourceFinder(Project) in line 369
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setProject(Project) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable project defined in edu::umd::cs::findbugs::ba::SourceFinder
   variable cache in line 359
   variable CACHE_SIZE in line 61
   variable DEBUG in line 59
   variable project in line 361
   variable repositoryList in line 357
module edu::umd::cs::findbugs::ba::SourceFinder::Cache
   inherits from java::util::LinkedHashMap
   function removeEldestEntry(Map.Entry< String, SourceFile >) in line 80
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable CACHE_SIZE defined in edu::umd::cs::findbugs::ba::SourceFinder
   variable serialVersionUID in line 77
module edu::umd::cs::findbugs::ba::SourceFinder::SourceRepository
   function contains(String) in line 89
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getDataSource(String) in line 93
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isPlatformDependent() in line 91
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::SourceFinder::DirectorySourceRepository
   inherits from edu::umd::cs::findbugs::ba::SourceFinder::SourceRepository
   function contains(String) in line 112
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::SourceFinder
   function getDataSource(String) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFullFileName(String) in line 131
      3 lines of code
      1 parameters
      1 conditional paths
   function isPlatformDependent() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function DirectorySourceRepository(String) in line 102
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable baseDir in line 100
module edu::umd::cs::findbugs::ba::SourceFinder::InMemorySourceRepository
   inherits from edu::umd::cs::findbugs::ba::SourceFinder::SourceRepository
   function contains(String) in line 178
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDataSource(final String) in line 183
      protection public
      23 lines of code
      1 parameters
      2 conditional paths
   function isPlatformDependent() in line 208
      protection public
      3 lines of code
      0 parameters
      8 conditional paths
      uses function getProject() defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::Project
      uses function getProgressMonitorInputStream(InputStream,int,String) defined in edu::umd::cs::findbugs::IGuiCallback
      uses function setErrorMessage(String) defined in edu::umd::cs::findbugs::IGuiCallback
      uses function contains(String) defined in edu::umd::cs::findbugs::ba::SourceFinder::SourceRepository
      uses function getDataSource(String) defined in edu::umd::cs::findbugs::ba::SourceFinder::SourceRepository
      uses function isPlatformDependent() defined in edu::umd::cs::findbugs::ba::SourceFinder::SourceRepository
module edu::umd::cs::findbugs::ba::SourceFinder::BlockingSourceRepository
   inherits from edu::umd::cs::findbugs::ba::SourceFinder::SourceRepository
   function await() in line 297
      7 lines of code
      0 parameters
      1 conditional paths
   function contains(String) in line 306
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getDataSource(String) in line 312
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function isPlatformDependent() in line 318
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function isReady() in line 288
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setBase(SourceRepository) in line 292
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function BlockingSourceRepository() in line 285
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::SourceFinder::ZipSourceRepository
   inherits from edu::umd::cs::findbugs::ba::SourceFinder::SourceRepository
   function contains(String) in line 336
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDataSource(String) in line 346
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isPlatformDependent() in line 341
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ZipSourceRepository(ZipFile) in line 331
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/SourceInfoMap.java
module edu::umd::cs::findbugs::ba::SourceInfoMap
   function addClassLine(String,SourceLineRange) in line 279
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable classLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function addFieldLine(String,String,SourceLineRange) in line 251
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable fieldLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function addMethodLine(String,String,String,SourceLineRange) in line 267
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable methodLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function createRange(String,String) in line 464
      3 lines of code
      2 parameters
      1 conditional paths
   function expect(StringTokenizer,String) in line 453
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function fallBackToClassfile() in line 224
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function getClassLine(String) in line 324
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function getFieldLine(String,String) in line 294
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable fieldLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function getMethodLine(String,String,String) in line 311
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable methodLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function isEmpty() in line 228
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable methodLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable classLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function parseVersionNumber(String) in line 433
      9 lines of code
      1 parameters
      2 conditional paths
      uses function expect(StringTokenizer,String) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function read(@WillClose InputStream) in line 339
      protection public
      85 lines of code
      1 parameters
      15 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses function parseVersionNumber(String) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable DIGITS defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses function createRange(String,String) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable classLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable methodLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable fieldLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function SourceInfoMap() in line 235
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   variable classLineMap in line 222
   variable DEBUG in line 216
   variable DIGITS in line 328
   variable fieldLineMap in line 218
   variable methodLineMap in line 220
module edu::umd::cs::findbugs::ba::SourceInfoMap::FieldDescriptor
   inherits from Comparable
   function compareTo(FieldDescriptor) in line 69
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 93
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FieldDescriptor(String,String) in line 53
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::SourceInfoMap::MethodDescriptor
   inherits from Comparable
   function compareTo(MethodDescriptor) in line 126
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 153
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function MethodDescriptor(String,String,String) in line 109
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable className in line 103
   variable methodName in line 105
   variable methodSignature in line 107
module edu::umd::cs::findbugs::ba::SourceInfoMap::SourceLineRange
   function getEnd() in line 201
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStart() in line 193
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 211
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SourceLineRange(@Nonnull Integer) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function SourceLineRange(@Nonnull Integer,@Nonnull Integer) in line 184
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable start in line 167
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/StackDepth.java
module edu::umd::cs::findbugs::ba::StackDepth
   function getDepth() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable depth defined in edu::umd::cs::findbugs::ba::StackDepth
   function setDepth(int) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable depth defined in edu::umd::cs::findbugs::ba::StackDepth
   function toString() in line 55
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function getDepth() defined in edu::umd::cs::findbugs::ba::StackDepth
      uses variable TOP defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
      uses variable BOTTOM defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
      uses variable depth defined in edu::umd::cs::findbugs::ba::StackDepth
   function StackDepth(int) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable depth defined in edu::umd::cs::findbugs::ba::StackDepth
   variable depth in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/StackDepthAnalysis.java
module edu::umd::cs::findbugs::ba::StackDepthAnalysis
   inherits from ForwardDataflowAnalysis< StackDepth >
   function copy(StackDepth,StackDepth) in line 78
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function setDepth(int) defined in edu::umd::cs::findbugs::ba::StackDepth
      uses function getDepth() defined in edu::umd::cs::findbugs::ba::StackDepth
   function createFact() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable TOP defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
   function initEntryFact(StackDepth) in line 83
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setDepth(int) defined in edu::umd::cs::findbugs::ba::StackDepth
   function isFactValid(StackDepth) in line 72
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getDepth() defined in edu::umd::cs::findbugs::ba::StackDepth
      uses variable TOP defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
      uses variable BOTTOM defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
   function isTop(StackDepth) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getDepth() defined in edu::umd::cs::findbugs::ba::StackDepth
      uses variable TOP defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
   function makeFactTop(StackDepth) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setDepth(int) defined in edu::umd::cs::findbugs::ba::StackDepth
      uses variable TOP defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
   function meetInto(StackDepth,Edge,StackDepth) in line 111
      protection public
      17 lines of code
      3 parameters
      4 conditional paths
      uses function getDepth() defined in edu::umd::cs::findbugs::ba::StackDepth
      uses variable TOP defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
      uses variable BOTTOM defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
      uses function setDepth(int) defined in edu::umd::cs::findbugs::ba::StackDepth
   function same(StackDepth,StackDepth) in line 88
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getDepth() defined in edu::umd::cs::findbugs::ba::StackDepth
   function transferInstruction(InstructionHandle,BasicBlock,StackDepth) in line 93
      protection public
      16 lines of code
      3 parameters
      3 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
      uses variable BOTTOM defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
   function StackDepthAnalysis(ConstantPoolGen,DepthFirstSearch) in line 51
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< StackDepth >
      uses variable cpg defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
   variable BOTTOM in line 38
      protection public
   variable cpg in line 40
   variable TOP in line 36
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/Target.java
module edu::umd::cs::findbugs::ba::Target
   function getEdgeType() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable edgeType defined in edu::umd::cs::findbugs::ba::Target
   function getTargetInstruction() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable targetInstruction defined in edu::umd::cs::findbugs::ba::Target
   function Target(InstructionHandle,@Edge.Type int) in line 41
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable targetInstruction defined in edu::umd::cs::findbugs::ba::Target
      uses variable edgeType defined in edu::umd::cs::findbugs::ba::Target
   variable edgeType in line 31
   variable targetInstruction in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/TargetEnumeratingVisitor.java
module edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
   inherits from org::apache::bcel::generic::EmptyVisitor
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function instructionIsExit() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instructionIsReturn() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instructionIsThrow() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isEndOfBasicBlock() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isBranch defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
   function targetIterator() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable targetList defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
   function visitATHROW(ATHROW) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGotoInstruction(GotoInstruction) in line 106
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable isBranch defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable targetList defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable GOTO_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function visitIfInstruction(IfInstruction) in line 116
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable isBranch defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable targetList defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable handle defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function visitINVOKESTATIC(INVOKESTATIC) in line 156
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable constPoolGen defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
   function visitReturnInstruction(ReturnInstruction) in line 146
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitSelect(Select) in line 128
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable isBranch defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable targetList defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable SWITCH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable SWITCH_DEFAULT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function TargetEnumeratingVisitor(InstructionHandle,ConstantPoolGen) in line 60
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable constPoolGen defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable targetList defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable isBranch defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
   variable constPoolGen in line 45
   variable handle in line 43
   variable isBranch in line 49
   variable targetList in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/TestCaseDetector.java
module edu::umd::cs::findbugs::ba::TestCaseDetector
   function likelyTestCase(XMethod) in line 35
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses function getAnnotation(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable JUNIT4TEST defined in edu::umd::cs::findbugs::ba::TestCaseDetector
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable JUNIT3TESTCASE defined in edu::umd::cs::findbugs::ba::TestCaseDetector
   variable JUNIT3TESTCASE in line 33
   variable JUNIT4TEST in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/type/BottomType.java
module edu::umd::cs::findbugs::ba::type::BottomType
   inherits from org::apache::bcel::generic::Type
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function equals(Object) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::ba::type::BottomType
   function BottomType() in line 40
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_BOTTOM defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   variable serialVersionUID in line 36
   variable theInstance in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/type/DoubleExtraType.java
module edu::umd::cs::findbugs::ba::type::DoubleExtraType
   inherits from org::apache::bcel::generic::Type
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function equals(Object) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::ba::type::DoubleExtraType
   function DoubleExtraType() in line 42
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_DOUBLE_EXTRA defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   variable serialVersionUID in line 38
   variable theInstance in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/type/ExceptionObjectType.java
module edu::umd::cs::findbugs::ba::type::ExceptionObjectType
   inherits from org::apache::bcel::generic::ObjectType
   inherits from org::apache::bcel::Constants
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function equals(Object) in line 86
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function ExceptionObjectType(String,ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function fromExceptionSet(ExceptionSet) in line 60
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
      uses function getCommonSupertype() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function ExceptionObjectType(String,ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
   function getExceptionSet() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
   function getType() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_EXCEPTION defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function hashCode() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 108
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
      uses function iterator() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   function ExceptionObjectType(String,ExceptionSet) in line 47
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
   variable exceptionSet in line 37
   variable serialVersionUID in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/type/ExceptionSet.java
module edu::umd::cs::findbugs::ba::type::ExceptionSet
   inherits from java::io::Serializable
   function add(ObjectType,boolean) in line 254
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function size() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable commonSupertype defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function addAll(ExceptionSet) in line 273
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function size() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function countBits(BitSet) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable commonSupertype defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function addExplicit(ObjectType) in line 231
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function add(ObjectType,boolean) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function addImplicit(ObjectType) in line 241
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function add(ObjectType,boolean) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function clear() in line 294
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable universalHandler defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable commonSupertype defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function size() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function containsCheckedExceptions() in line 321
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   function containsExplicitExceptions() in line 334
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   function countBits(BitSet) in line 281
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function duplicate() in line 125
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function createExceptionSet() defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable size defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable universalHandler defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable commonSupertype defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function equals(Object) in line 144
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable universalHandler defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function getCommonSupertype() in line 161
      protection public
      32 lines of code
      0 parameters
      6 conditional paths
      uses variable commonSupertype defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function iterator() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses variable ENABLE_SUBTYPES2_FOR_COMMON_SUPERCLASS_QUERIES defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function hashCode() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function isEmpty() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function size() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function isSingleton(String) in line 216
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function size() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function iterator() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function iterator() in line 197
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function sawUniversal() in line 306
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function clear() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable universalHandler defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function sawUniversalHandler() in line 314
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable universalHandler defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function size() in line 369
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 345
      protection public
      23 lines of code
      0 parameters
      5 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   variable commonSupertype in line 58
   variable exceptionSet in line 50
   variable explicitSet in line 52
   variable factory in line 48
   variable serialVersionUID in line 46
   variable size in line 54
   variable universalHandler in line 56
module edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   inherits from java::util::Iterator
   function findNext() in line 100
      9 lines of code
      0 parameters
      3 conditional paths
      uses function next() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses variable factory defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function hasNext() in line 71
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable last defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses function next() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses function findNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses variable factory defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function isExplicit() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable last defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   function next() in line 79
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses variable factory defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable last defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   function remove() in line 93
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable last defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function size() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable commonSupertype defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   variable last in line 64
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/type/ExceptionSetFactory.java
module edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
   inherits from java::io::Serializable
   function createExceptionSet() in line 43
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
      uses variable typeIndexMap defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
      uses variable typeList defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
   function ExceptionSetFactory() in line 38
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable serialVersionUID in line 32
   variable typeIndexMap in line 34
   variable typeList in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/type/ExtendedTypes.java
module edu::umd::cs::findbugs::ba::type::ExtendedTypes
   variable T_AVAIL_TYPE in line 79
      protection public
   variable T_BOTTOM in line 56
      protection public
   variable T_DOUBLE_EXTRA in line 51
      protection public
   variable T_EXCEPTION in line 72
      protection public
   variable T_LONG_EXTRA in line 45
      protection public
   variable T_NULL in line 64
      protection public
   variable T_TOP in line 39
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/type/FieldStoreType.java
module edu::umd::cs::findbugs::ba::type::FieldStoreType
   function addTypeSignature(String) in line 50
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable loadType defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
      uses variable typeSignatureSet defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
   function computeLoadType(ReferenceType) in line 66
      49 lines of code
      1 parameters
      9 conditional paths
      uses function signatureIterator() defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
      uses variable ENABLE_SUBTYPES2_FOR_COMMON_SUPERCLASS_QUERIES defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable loadType defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
   function getLoadType(ReferenceType) in line 59
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable loadType defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
      uses function computeLoadType(ReferenceType) defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
   function signatureIterator() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeSignatureSet defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
   function FieldStoreType() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable loadType in line 43
   variable typeSignatureSet in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/type/FieldStoreTypeDatabase.java
module edu::umd::cs::findbugs::ba::type::FieldStoreTypeDatabase
   inherits from edu::umd::cs::findbugs::ba::interproc::FieldPropertyDatabase
   function decodeProperty(String) in line 59
      9 lines of code
      1 parameters
      2 conditional paths
   function encodeProperty(FieldStoreType) in line 70
      10 lines of code
      1 parameters
      3 conditional paths
      uses function signatureIterator() defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
   function purgeBoringEntries() in line 41
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
      uses function getKeys() defined in PropertyDatabase< FieldDescriptor, Property >
      uses function getProperty(KeyType) defined in PropertyDatabase< FieldDescriptor, Property >
      uses function removeProperty(KeyType) defined in PropertyDatabase< FieldDescriptor, Property >
      uses function getLoadType(ReferenceType) defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
   variable DEFAULT_FILENAME in line 39
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/type/LongExtraType.java
module edu::umd::cs::findbugs::ba::type::LongExtraType
   inherits from org::apache::bcel::generic::Type
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function equals(Object) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::ba::type::LongExtraType
   function LongExtraType() in line 42
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_LONG_EXTRA defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   variable serialVersionUID in line 38
   variable theInstance in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/type/NullType.java
module edu::umd::cs::findbugs::ba::type::NullType
   inherits from org::apache::bcel::generic::ReferenceType
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function equals(Object) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::ba::type::NullType
   function NullType() in line 41
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_NULL defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   variable serialVersionUID in line 37
   variable theInstance in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/type/StandardTypeMerger.java
module edu::umd::cs::findbugs::ba::type::StandardTypeMerger
   inherits from edu::umd::cs::findbugs::ba::type::TypeMerger
   inherits from org::apache::bcel::Constants
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function isIntegerType(byte) in line 139
      3 lines of code
      1 parameters
      1 conditional paths
   function isObjectType(byte) in line 129
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable T_EXCEPTION defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function isReferenceType(byte) in line 121
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable T_NULL defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses variable T_EXCEPTION defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function isThrowable(ReferenceType) in line 236
      15 lines of code
      1 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function mergeReferenceTypes(ReferenceType,ReferenceType) in line 162
      73 lines of code
      2 parameters
      15 conditional paths
      uses function isObjectType(byte) defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses variable T_EXCEPTION defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses function isThrowable(ReferenceType) defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses function updateExceptionSet(ExceptionSet,ObjectType) defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getTypeCategory() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getObjectType() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses variable ENABLE_SUBTYPES2_FOR_COMMON_SUPERCLASS_QUERIES defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function mergeTypes(Type,Type) in line 67
      protection public
      47 lines of code
      2 parameters
      12 conditional paths
      uses variable T_TOP defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses variable T_BOTTOM defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses function isReferenceType(byte) defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses variable T_NULL defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses function mergeReferenceTypes(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses function isIntegerType(byte) defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
   function updateExceptionSet(ExceptionSet,ObjectType) in line 143
      7 lines of code
      2 parameters
      2 conditional paths
      uses function addAll(ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function addExplicit(ObjectType) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function StandardTypeMerger(RepositoryLookupFailureCallback,ExceptionSetFactory) in line 61
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
   variable exceptionSetFactory in line 49
   variable lookupFailureCallback in line 47
   variable OBJECT_TYPE in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/type/ThrownException.java
module edu::umd::cs::findbugs::ba::type::ThrownException
   function duplicate() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function ThrownException(ObjectType,boolean) defined in edu::umd::cs::findbugs::ba::type::ThrownException
      uses variable type defined in edu::umd::cs::findbugs::ba::type::ThrownException
   function equals(Object) in line 91
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function ThrownException(ObjectType,boolean) defined in edu::umd::cs::findbugs::ba::type::ThrownException
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::type::ThrownException
      uses variable type defined in edu::umd::cs::findbugs::ba::type::ThrownException
      uses variable explicit defined in edu::umd::cs::findbugs::ba::type::ThrownException
   function getType() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::type::ThrownException
   function hashCode() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::type::ThrownException
   function isExplicit() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setExplicit(boolean) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ThrownException(ObjectType,boolean) in line 52
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::type::ThrownException
   variable explicit in line 42
   variable type in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/type/TopType.java
module edu::umd::cs::findbugs::ba::type::TopType
   inherits from org::apache::bcel::generic::Type
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function equals(Object) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::ba::type::TopType
   function TopType() in line 40
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_TOP defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   variable serialVersionUID in line 36
   variable theInstance in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/type/TypeAnalysis.java
module edu::umd::cs::findbugs::ba::type::TypeAnalysis
   inherits from edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function computeBlockExceptionSet(BasicBlock,TypeFrame) in line 729
      13 lines of code
      2 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses function computeThrownExceptionTypes(BasicBlock,@CheckForNull InstructionHandle,TypeFrame) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function createFact() defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function copy(TypeFrame,TypeFrame) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses function CachedExceptionSet(TypeFrame,ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable thrownExceptionSetMap defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function computeEdgeExceptionSet(Edge,ExceptionSet) in line 757
      69 lines of code
      2 parameters
      11 conditional paths
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function createExceptionSet() defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable UNHANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function clear() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getExceptionGen() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function iterator() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function computeThrownExceptionTypes(BasicBlock,@CheckForNull InstructionHandle,TypeFrame) in line 432
      65 lines of code
      3 parameters
      11 conditional paths
      uses variable FORCE_ACCURATE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable ACCURATE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses function getCachedExceptionSet(BasicBlock) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function isUpToDate(TypeFrame) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable cfg defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
      uses function computeBlockExceptionSet(BasicBlock,TypeFrame) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function setEdgeExceptionSet(Edge,ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses function getExceptionSet() defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function duplicate() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function computeEdgeExceptionSet(Edge,ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function computeThrownExceptionTypes(BasicBlock) in line 835
      103 lines of code
      1 parameters
      14 conditional paths
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function createExceptionSet() defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
      uses function addImplicit(ObjectType) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable ERROR_TYPE defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function clear() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function addExplicit(ObjectType) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function addAll(ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function getExceptionSet() defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable EXCEPTION_TYPE defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable RUNTIME_EXCEPTION_TYPE defined in edu::umd::cs::findbugs::ba::Hierarchy
   function copy(TypeFrame,TypeFrame) in line 383
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(Frame< Type >) defined in edu::umd::cs::findbugs::ba::type::TypeFrame
   function createFact() in line 319
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function getCachedExceptionSet(BasicBlock) in line 697
      19 lines of code
      1 parameters
      2 conditional paths
      uses variable thrownExceptionSetMap defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function createFact() defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function makeFactTop(TypeFrame) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function CachedExceptionSet(TypeFrame,ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function createExceptionSet() defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
   function getEdgeExceptionSet(Edge) in line 313
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable thrownExceptionSetMap defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getEdgeExceptionSet(Edge) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
   function handleInstanceOfBranch(TypeFrame,TypeFrame,Edge) in line 563
      107 lines of code
      3 parameters
      20 conditional paths
      uses variable instanceOfCheckMap defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function modifyFrame(FrameType,@CheckForNull FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses function setTop() defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function initEntryFact(TypeFrame) in line 324
      protection public
      57 lines of code
      1 parameters
      9 conditional paths
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses function setValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function isFactValid(TypeFrame) in line 393
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
   function isImpliedByGenericTypes(ReferenceType) in line 945
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function isImpliedByGenericTypes(ReferenceType) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function makeFactTop(TypeFrame) in line 388
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::type::TypeFrame
   function meetInto(TypeFrame,Edge,TypeFrame) in line 499
      protection public
      63 lines of code
      3 parameters
      10 conditional paths
      uses function isExceptionHandler() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function modifyFrame(FrameType,@CheckForNull FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses function getExceptionGen() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable FORCE_ACCURATE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable ACCURATE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses function getCachedExceptionSet(BasicBlock) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getEdgeExceptionSet(Edge) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function handleInstanceOfBranch(TypeFrame,TypeFrame,Edge) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function mergeInto(FrameType,FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
   function mergeValues(TypeFrame,TypeFrame,int) in line 672
      15 lines of code
      3 parameters
      1 conditional paths
      uses variable typeMerger defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function mergeTypes(Type,Type) defined in edu::umd::cs::findbugs::ba::type::TypeMerger
   function same(TypeFrame,TypeFrame) in line 398
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function sameAs(Frame< ValueType >) defined in edu::umd::cs::findbugs::ba::Frame
   function setFieldStoreTypeDatabase(FieldStoreTypeDatabase) in line 301
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function setFieldStoreTypeDatabase(FieldStoreTypeDatabase) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function setValueNumberDataflow(ValueNumberDataflow) in line 289
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function setValueNumberDataflow(ValueNumberDataflow) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function toString() in line 940
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function transfer(BasicBlock,@CheckForNull InstructionHandle,TypeFrame,TypeFrame) in line 410
      protection public
      21 lines of code
      4 parameters
      3 conditional paths
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function startBasicBlock() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses function computeThrownExceptionTypes(BasicBlock,@CheckForNull InstructionHandle,TypeFrame) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable instanceOfCheckMap defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function isInstanceOfFollowedByBranch() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getInstanceOfValueNumber() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getInstanceOfType() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function transferInstruction(InstructionHandle,BasicBlock,TypeFrame) in line 403
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function setFrameAndLocation(FrameType,Location) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function analyzeInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function TypeAnalysis(Method,MethodGen,CFG,DepthFirstSearch,TypeMerger,TypeFrameModelingVisitor,RepositoryLookupFailureCallback,ExceptionSetFactory) in line 205
      protection public
      26 lines of code
      8 parameters
      5 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function setLocalTypeTable(LocalVariableTypeTable) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable typeMerger defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function TypeAnalysis(Method,MethodGen,CFG,DepthFirstSearch,TypeMerger,RepositoryLookupFailureCallback,ExceptionSetFactory) in line 250
      protection public
      8 lines of code
      7 parameters
      2 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses variable typeMerger defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function TypeAnalysis(Method,MethodGen,CFG,DepthFirstSearch,RepositoryLookupFailureCallback,ExceptionSetFactory) in line 275
      protection public
      5 lines of code
      6 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   variable cfg in line 168
   variable DEBUG in line 88
      protection public
   variable exceptionSetFactory in line 178
   variable FORCE_ACCURATE_EXCEPTIONS in line 93
      protection public
   variable instanceOfCheckMap in line 182
   variable lookupFailureCallback in line 176
   variable method in line 166
   variable methodGen in line 164
   variable thrownExceptionSetMap in line 174
   variable typeMerger in line 170
   variable valueNumberDataflow in line 180
   variable visitor in line 172
module edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
   function getEdgeExceptionSet(Edge) in line 126
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable edgeExceptionMap defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function createExceptionSet() defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
   function getExceptionSet() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
   function isUpToDate(TypeFrame) in line 114
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
   function setEdgeExceptionSet(Edge,ExceptionSet) in line 122
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable edgeExceptionMap defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
   function CachedExceptionSet(TypeFrame,ExceptionSet) in line 108
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
   variable edgeExceptionMap in line 106
   variable exceptionSet in line 104
   variable result in line 102
module edu::umd::cs::findbugs::ba::type::TypeAnalysis::InstanceOfCheck
   function getType() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getValueNumber() in line 152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/type/TypeDataflow.java
module edu::umd::cs::findbugs::ba::type::TypeDataflow
   inherits from edu::umd::cs::findbugs::ba::Dataflow
   function getEdgeExceptionSet(Edge) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function getLocationAndFactForInstruction(int) in line 50
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getLocationsContainingInstructionWithOffset(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable location defined in edu::umd::cs::findbugs::ba::type::TypeDataflow::LocationAndFactPair
      uses variable frame defined in edu::umd::cs::findbugs::ba::type::TypeDataflow::LocationAndFactPair
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
   function TypeDataflow(CFG,TypeAnalysis) in line 42
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable analysis defined in edu::umd::cs::findbugs::ba::Dataflow
module edu::umd::cs::findbugs::ba::type::TypeDataflow::LocationAndFactPair
   variable frame in line 34
      protection public
   variable location in line 32
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/type/TypeFrame.java
module edu::umd::cs::findbugs::ba::type::TypeFrame
   inherits from edu::umd::cs::findbugs::ba::Frame
   function clearExactSet() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exactTypeSet defined in edu::umd::cs::findbugs::ba::type::TypeFrame
   function copyFrom(Frame< Type >) in line 88
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function clearExactSet() defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function TypeFrame(int) defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses variable exactTypeSet defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function copyFrom(Frame< ValueType >) defined in edu::umd::cs::findbugs::ba::Frame
   function getBottomType() in line 113
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDoubleExtraType() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLongExtraType() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNullType() in line 134
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTopType() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isExact(int) in line 69
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable exactTypeSet defined in edu::umd::cs::findbugs::ba::type::TypeFrame
   function popValue() in line 159
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable exactTypeSet defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function getStackLocation(int) defined in edu::umd::cs::findbugs::ba::Frame
   function pushValue(Type) in line 139
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable exactTypeSet defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function getStackLocation(int) defined in edu::umd::cs::findbugs::ba::Frame
   function setExact(int,boolean) in line 57
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable exactTypeSet defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function isExact(int) defined in edu::umd::cs::findbugs::ba::type::TypeFrame
   function setTop() in line 82
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function clearExactSet() defined in edu::umd::cs::findbugs::ba::type::TypeFrame
   function toString() in line 166
      protection public
      37 lines of code
      0 parameters
      9 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumLocals() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isExact(int) defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function valueToString(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
   function valueToString(Type) in line 99
      3 lines of code
      1 parameters
      1 conditional paths
   function TypeFrame(int) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable numLocals defined in edu::umd::cs::findbugs::ba::Frame
   variable exactTypeSet in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/type/TypeFrameModelingVisitor.java
module edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   inherits from org::apache::bcel::Constants
   inherits from edu::umd::cs::findbugs::ba::Debug
   function analyzeInstruction(Instruction) in line 194
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function consumeStack(Instruction) in line 214
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function getDefaultValue() in line 185
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInstanceOfType() in line 158
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceOfType defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function getInstanceOfValueNumber() in line 169
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceOfValueNumber defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function getResultTypeFromGenericType(TypeFrame,int,int) in line 446
      24 lines of code
      3 parameters
      5 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses variable typesComputedFromGenerics defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function getType(XField) in line 368
      protection public
      47 lines of code
      1 parameters
      9 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getProperty(KeyType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses function getSummary(XField) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isNull() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSourceSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function handleGetMapView(TypeFrame,String,int,int) in line 471
      26 lines of code
      4 parameters
      5 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses variable typesComputedFromGenerics defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function handleLoadInstruction(LoadInstruction) in line 875
      protection public
      24 lines of code
      1 parameters
      5 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function setTopOfStackIsExact() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function handleStoreInstruction(StoreInstruction) in line 844
      protection public
      24 lines of code
      1 parameters
      4 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isTopOfStackExact() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function handleToArray(InvokeInstruction) in line 777
      35 lines of code
      1 parameters
      12 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushReturnType(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable genericLocalVariables defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable localTypeTable defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function isImpliedByGenericTypes(ReferenceType) in line 1499
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable typesComputedFromGenerics defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function isInstanceOfFollowedByBranch() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function isStraightGenericMap(ClassDescriptor) in line 731
      protection public
      27 lines of code
      1 parameters
      7 conditional paths
      uses function matches(Class<?>) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getXClass() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getSourceSignature() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable mapSignaturePattern defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function isTopOfStackExact() in line 1448
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function merge(Type,Type) in line 759
      17 lines of code
      2 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable typeMerger defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function mergeTypes(Type,Type) defined in edu::umd::cs::findbugs::ba::type::TypeMerger
   function modelFieldLoad(FieldInstruction) in line 354
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getType(XField) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function modelNormalInstruction(Instruction,int,int) in line 271
      protection public
      8 lines of code
      3 parameters
      3 conditional paths
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
   function pushReturnType(InvokeInstruction) in line 258
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function pushValue(Type) in line 239
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function setFieldStoreTypeDatabase(FieldStoreTypeDatabase) in line 180
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLocalTypeTable(LocalVariableTypeTable) in line 122
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses variable localTypeTable defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable genericLocalVariables defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function setTopOfStackIsExact() in line 1443
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function setValueNumberDataflow(ValueNumberDataflow) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function startBasicBlock() in line 205
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceOfType defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable instanceOfValueNumber defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitAALOAD(AALOAD) in line 1341
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitACONST_NULL(ACONST_NULL) in line 300
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitANEWARRAY(ANEWARRAY) in line 1425
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function setTopOfStackIsExact() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitARRAYLENGTH(ARRAYLENGTH) in line 1335
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitATHROW(ATHROW) in line 294
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visitBALOAD(BALOAD) in line 1361
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitBIPUSH(BIPUSH) in line 335
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitCALOAD(CALOAD) in line 1367
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitCHECKCAST(CHECKCAST) in line 901
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitD2F(D2F) in line 1014
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitD2I(D2I) in line 1020
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitD2L(D2L) in line 1026
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDADD(DADD) in line 1174
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDALOAD(DALOAD) in line 1373
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDCMPG(DCMPG) in line 1002
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDCMPL(DCMPL) in line 996
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDCONST(DCONST) in line 305
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDDIV(DDIV) in line 1265
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDMUL(DMUL) in line 1241
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDNEG(DNEG) in line 1317
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitDREM(DREM) in line 1289
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDSUB(DSUB) in line 1198
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDUP(DUP) in line 1204
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isTopOfStackExact() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function setTopOfStackIsExact() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitF2D(F2D) in line 1032
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitF2I(F2I) in line 1038
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitF2L(F2L) in line 1044
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFADD(FADD) in line 1180
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFALOAD(FALOAD) in line 1379
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFCMPG(FCMPG) in line 990
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFCMPL(FCMPL) in line 984
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFCONST(FCONST) in line 310
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFDIV(FDIV) in line 1271
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFMUL(FMUL) in line 1247
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFNEG(FNEG) in line 1321
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitFREM(FREM) in line 1295
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFSUB(FSUB) in line 1223
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitGETFIELD(GETFIELD) in line 350
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function modelFieldLoad(FieldInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitGETSTATIC(GETSTATIC) in line 345
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function modelFieldLoad(FieldInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitI2B(I2B) in line 1050
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitI2C(I2C) in line 1056
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitI2D(I2D) in line 1062
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitI2F(I2F) in line 1068
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitI2L(I2L) in line 1074
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitI2S(I2S) in line 1080
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitIADD(IADD) in line 1186
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIALOAD(IALOAD) in line 1385
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIAND(IAND) in line 1102
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitICONST(ICONST) in line 315
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIDIV(IDIV) in line 1277
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIFEQ(IFEQ) in line 1468
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIFGT(IFGT) in line 1476
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIFLE(IFLE) in line 1484
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIFNE(IFNE) in line 1492
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIFNONNULL(IFNONNULL) in line 962
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instanceOfValueNumber defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instanceOfType defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIFNULL(IFNULL) in line 940
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instanceOfValueNumber defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instanceOfType defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIINC(IINC) in line 1313
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitIMUL(IMUL) in line 1253
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitINEG(INEG) in line 1325
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitINSTANCEOF(INSTANCEOF) in line 916
      protection public
      22 lines of code
      1 parameters
      5 conditional paths
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable instanceOfValueNumber defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instanceOfType defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitInvokeInstructionCommon(InvokeInstruction) in line 500
      protection public
      229 lines of code
      1 parameters
      46 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getReturnTypeSignature() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getClassName(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberDataflow
      uses variable instanceOfValueNumber defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instanceOfType defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushReturnType(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function isStraightGenericMap(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getResultTypeFromGenericType(TypeFrame,int,int) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function handleGetMapView(TypeFrame,String,int,int) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function handleToArray(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function bridgeTo() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function getReturnTypeSignature() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function merge(Type,Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitINVOKEINTERFACE(INVOKEINTERFACE) in line 437
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitInvokeInstructionCommon(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitINVOKESPECIAL(INVOKESPECIAL) in line 432
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitInvokeInstructionCommon(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitINVOKESTATIC(INVOKESTATIC) in line 417
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function visitInvokeInstructionCommon(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitINVOKEVIRTUAL(INVOKEVIRTUAL) in line 442
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitInvokeInstructionCommon(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIOR(IOR) in line 1114
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIREM(IREM) in line 1301
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitISHL(ISHL) in line 1162
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitISHR(ISHR) in line 1138
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitISUB(ISUB) in line 1229
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIUSHR(IUSHR) in line 1144
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIXOR(IXOR) in line 1126
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitJSR(JSR) in line 1454
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitJSR_W(JSR_W) in line 1459
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitL2D(L2D) in line 1084
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitL2F(L2F) in line 1090
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitL2I(L2I) in line 1096
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLADD(LADD) in line 1192
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLALOAD(LALOAD) in line 1391
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLAND(LAND) in line 1108
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLCMP(LCMP) in line 1008
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLCONST(LCONST) in line 320
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLDC(LDC) in line 325
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitLDC2_W(LDC2_W) in line 330
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitLDIV(LDIV) in line 1283
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLMUL(LMUL) in line 1259
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLNEG(LNEG) in line 1331
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitLOR(LOR) in line 1120
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLREM(LREM) in line 1307
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLSHL(LSHL) in line 1168
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLSHR(LSHR) in line 1150
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLSUB(LSUB) in line 1235
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLUSHR(LUSHR) in line 1156
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLXOR(LXOR) in line 1132
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitMULTIANEWARRAY(MULTIANEWARRAY) in line 1435
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function setTopOfStackIsExact() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitNEW(NEW) in line 1405
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function setTopOfStackIsExact() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitNEWARRAY(NEWARRAY) in line 1415
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function setTopOfStackIsExact() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitRET(RET) in line 1464
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitSALOAD(SALOAD) in line 1397
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitSIPUSH(SIPUSH) in line 340
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function TypeFrameModelingVisitor(ConstantPoolGen,TypeMerger) in line 104
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable typeMerger defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   variable DEBUG in line 498
      protection public
   variable genericLocalVariables in line 92
   variable instanceOfFollowedByBranch in line 80
   variable instanceOfType in line 82
   variable instanceOfValueNumber in line 84
   variable localTypeTable in line 90
   variable mapSignaturePattern in line 730
      protection public
   variable typeMerger in line 88
   variable typesComputedFromGenerics in line 86
   variable valueNumberDataflow in line 77
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/type/TypeMerger.java
module edu::umd::cs::findbugs::ba::type::TypeMerger
   function mergeTypes(Type,Type) in line 43
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/UnresolvedXField.java
module edu::umd::cs::findbugs::ba::UnresolvedXField
   inherits from edu::umd::cs::findbugs::ba::AbstractField
   function compareTo(ComparableField) in line 68
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getAnnotation(ClassDescriptor) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getAnnotationDescriptors() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAnnotations() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getContainingScope() in line 118
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getElementType() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSourceSignature() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isDeprecated() in line 141
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function UnresolvedXField(@DottedClassName String,String,String,int) in line 42
      9 lines of code
      4 parameters
      3 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable DEBUG_UNRESOLVED defined in edu::umd::cs::findbugs::ba::XFactory
   function UnresolvedXField(FieldDescriptor) in line 52
      9 lines of code
      1 parameters
      3 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable DEBUG_UNRESOLVED defined in edu::umd::cs::findbugs::ba::XFactory
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/UnresolvedXMethod.java
module edu::umd::cs::findbugs::ba::UnresolvedXMethod
   inherits from edu::umd::cs::findbugs::ba::AbstractMethod
   function addAnnotation(AnnotationValue) in line 243
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function addParameterAnnotation(int,AnnotationValue) in line 186
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
   function bridgeFrom() in line 271
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function bridgeTo() in line 281
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function compareTo(ComparableMethod) in line 55
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function getAccessMethodForField() in line 293
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAccessMethodForMethod() in line 289
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAnnotation(ClassDescriptor) in line 256
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getAnnotationDescriptors() in line 251
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAnnotations() in line 261
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getContainingScope() in line 72
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function getElementType() in line 63
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function getParameterAnnotation(int,ClassDescriptor) in line 216
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function getParameterAnnotationDescriptors(int) in line 201
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getParameterAnnotations(int) in line 225
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getSourceSignature() in line 158
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getThrownExceptions() in line 86
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function hasParameterAnnotations() in line 210
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isAbstract() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isDeprecated() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isIdentity() in line 173
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isReturnTypeReferenceType() in line 43
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function isStub() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSynthetic() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isUnconditionalThrower() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isUnsupported() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isVarArgs() in line 142
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isVariableSynthetic(int) in line 300
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function usesConcurrency() in line 152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function usesInvokeDynamic() in line 305
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function UnresolvedXMethod(MethodDescriptor) in line 29
      7 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/URLClassPath.java
module edu::umd::cs::findbugs::ba::URLClassPath
   inherits from java::io::Serializable
   function addURL(String) in line 302
      protection public
      33 lines of code
      1 parameters
      7 conditional paths
      uses function getURLProtocol(String) defined in edu::umd::cs::findbugs::ba::URLClassPath
      uses function getFileExtension(String) defined in edu::umd::cs::findbugs::ba::URLClassPath
      uses function isArchiveExtension(String) defined in edu::umd::cs::findbugs::ba::URLClassPath
      uses variable entryList defined in edu::umd::cs::findbugs::ba::URLClassPath
   function close() in line 449
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable entryList defined in edu::umd::cs::findbugs::ba::URLClassPath
   function getClassPath() in line 341
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable entryList defined in edu::umd::cs::findbugs::ba::URLClassPath
   function getFileExtension(String) in line 481
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getInputStreamForResource(String) in line 363
      36 lines of code
      1 parameters
      6 conditional paths
      uses variable entryList defined in edu::umd::cs::findbugs::ba::URLClassPath
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function getURLProtocol(String) in line 464
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable knownURLProtocolSet defined in edu::umd::cs::findbugs::FindBugs
   function isArchiveExtension(String) in line 493
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ARCHIVE_EXTENSION_SET defined in edu::umd::cs::findbugs::util::Archive
   function lookupClass(String) in line 411
      protection public
      34 lines of code
      1 parameters
      6 conditional paths
      uses variable classesThatCantBeFound defined in edu::umd::cs::findbugs::ba::URLClassPath
      uses function getInputStreamForResource(String) defined in edu::umd::cs::findbugs::ba::URLClassPath
   function URLClassPath() in line 288
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable classesThatCantBeFound in line 400
   variable entryList in line 283
   variable serialVersionUID in line 49
module edu::umd::cs::findbugs::ba::URLClassPath::Entry
   function close() in line 75
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getURL() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function openStream(String) in line 65
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::URLClassPath::LocalArchiveEntry
   inherits from edu::umd::cs::findbugs::ba::URLClassPath::Entry
   function close() in line 121
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getURL() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function openStream(String) in line 102
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function LocalArchiveEntry(String) in line 85
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
   variable zipFile in line 83
module edu::umd::cs::findbugs::ba::URLClassPath::LocalDirectoryEntry
   inherits from edu::umd::cs::findbugs::ba::URLClassPath::Entry
   function close() in line 178
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getURL() in line 173
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function openStream(String) in line 159
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function LocalDirectoryEntry(String) in line 145
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   variable dirName in line 135
module edu::umd::cs::findbugs::ba::URLClassPath::RemoteArchiveEntry
   inherits from edu::umd::cs::findbugs::ba::URLClassPath::Entry
   function close() in line 228
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getURL() in line 223
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function openStream(String) in line 208
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function RemoteArchiveEntry(URL) in line 197
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable remoteArchiveURL in line 189
module edu::umd::cs::findbugs::ba::URLClassPath::RemoteDirectoryEntry
   inherits from edu::umd::cs::findbugs::ba::URLClassPath::Entry
   function close() in line 277
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getURL() in line 272
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function openStream(String) in line 257
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function RemoteDirectoryEntry(URL) in line 246
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable remoteDirURL in line 238
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/URLClassPathRepository.java
module edu::umd::cs::findbugs::ba::URLClassPathRepository
   inherits from org::apache::bcel::Repository
   function addURL(String) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable urlClassPath defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function addURL(String) defined in edu::umd::cs::findbugs::ba::URLClassPath
   function clear() in line 187
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function dumpStack() defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses variable nameToClassMap defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function destroy() in line 66
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable nameToClassMap defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses variable urlClassPath defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function close() defined in edu::umd::cs::findbugs::ba::URLClassPath
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function dumpStack() in line 127
      3 lines of code
      0 parameters
      1 conditional paths
   function findClass(String) in line 137
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable nameToClassMap defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function getClassPath() in line 201
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable urlClassPath defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function getClassPath() defined in edu::umd::cs::findbugs::ba::URLClassPath
   function loadClass(String) in line 154
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function findClass(String) defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function dumpStack() defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses variable urlClassPath defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function lookupClass(String) defined in edu::umd::cs::findbugs::ba::URLClassPath
      uses function storeClass(JavaClass) defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function loadClass(Class<?>) in line 177
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function loadClass(String) defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function removeClass(JavaClass) in line 119
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable nameToClassMap defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function dumpStack() defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function storeClass(JavaClass) in line 93
      protection public
      17 lines of code
      1 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses variable nameToClassMap defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function dumpStack() defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function URLClassPathRepository() in line 58
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG in line 50
      protection public
   variable nameToClassMap in line 54
   variable serialVersionUID in line 52
   variable urlClassPath in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/vna/AvailableLoad.java
module edu::umd::cs::findbugs::ba::vna::AvailableLoad
   inherits from Comparable
   function compareTo(AvailableLoad) in line 102
      protection public
      14 lines of code
      1 parameters
      5 conditional paths
      uses variable field defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses variable reference defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function compareTo(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function equals(Object) in line 123
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function AvailableLoad(XField) defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses variable reference defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable field defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   function getField() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable field defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   function getReference() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reference defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   function hashCode() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reference defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable field defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   function matchesReference(ValueNumber) in line 81
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable reference defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function toString() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reference defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable field defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   function AvailableLoad(XField) in line 50
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function AvailableLoad(ValueNumber,XField) in line 63
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable reference defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses variable field defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   variable field in line 42
   variable reference in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/vna/LoadedFieldSet.java
module edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function addLoad(InstructionHandle,XField) in line 104
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getLoadStoreCount(XField) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses variable handleToFieldMap defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses variable loadHandleSet defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function addStore(InstructionHandle,XField) in line 118
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getLoadStoreCount(XField) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses variable handleToFieldMap defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function getField(InstructionHandle) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable handleToFieldMap defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function getLoadStoreCount(XField) in line 87
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable loadStoreCountMap defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function instructionIsLoad(InstructionHandle) in line 155
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable loadHandleSet defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function isLoaded(XField) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLoadStoreCount(XField) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function LoadedFieldSet(MethodGen) in line 72
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   variable handleToFieldMap in line 62
   variable loadHandleSet in line 64
   variable loadStoreCountMap in line 60
module edu::umd::cs::findbugs::ba::vna::LoadedFieldSet::LoadStoreCount
   function getLoadCount() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStoreCount() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/vna/MergeTree.java
module edu::umd::cs::findbugs::ba::vna::MergeTree
   function getInputSet(ValueNumber) in line 78
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable outputToInputMap defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function getTransitiveInputSet(ValueNumber) in line 98
      protection public
      36 lines of code
      1 parameters
      9 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getInputSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses function getNumValuesAllocated() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function forNumber(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function mapInputToOutput(ValueNumber,ValueNumber) in line 61
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getInputSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::vna::MergeTree
   function MergeTree(ValueNumberFactory) in line 48
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::MergeTree
   variable DEBUG in line 36
      protection public
   variable factory in line 38
   variable outputToInputMap in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumber.java
module edu::umd::cs::findbugs::ba::vna::ValueNumber
   inherits from Comparable
   function compareTo(ValueNumber) in line 158
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function createValueNumber(int,int) in line 56
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function ValueNumber(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function createValueNumber(int) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createValueNumber(int,int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function equals(Object) in line 150
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function ValueNumber(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function getFlags() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumber() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasFlag(int) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 145
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function mergeFlags(int,int) in line 46
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
   function toString() in line 137
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function ValueNumber(int) in line 114
      4 lines of code
      1 parameters
      1 conditional paths
   function ValueNumber(int,int) in line 119
      4 lines of code
      2 parameters
      1 conditional paths
   variable ARRAY_VALUE in line 100
      protection public
   variable CONSTANT_CLASS_OBJECT in line 102
      protection public
   variable CONSTANT_VALUE in line 106
      protection public
   variable PHI_NODE in line 104
      protection public
   variable RETURN_VALUE in line 98
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberAnalysis.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   inherits from edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   function compactValueNumbers(Dataflow< ValueNumberFrame, ValueNumberAnalysis >) in line 382
      protection public
      30 lines of code
      1 parameters
      2 conditional paths
   function createFact() in line 177
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function factIterator() in line 325
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factAtLocationMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function getClassName(ValueNumber) in line 468
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function getClassName(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function getClassObjectValue(String) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable visitor defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function getClassObjectValue(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function getEntryValue(int) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable entryLocalValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function getEntryValueForParameter(int) in line 159
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function parameterSignatures() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getEntryValue(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function getExceptionValueNumber(BasicBlock) in line 457
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable exceptionHandlerValueNumberMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function getFactAfterLocation(Location) in line 299
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses variable TRACE defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses variable factAfterLocationMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function createFact() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function makeFactTop(FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   function getFactAtLocation(Location) in line 287
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable factAtLocationMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function createFact() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function makeFactTop(FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   function getFactory() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function getMergeTree() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mergeTree defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function getNumValuesAllocated() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function getNumValuesAllocated() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function getThisValue() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable thisValue defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function initEntryFact(ValueNumberFrame) in line 182
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function setValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable entryLocalValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function isThisValue(ValueNumber) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable thisValue defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function meetInto(ValueNumberFrame,Edge,ValueNumberFrame) in line 212
      protection public
      21 lines of code
      3 parameters
      2 conditional paths
      uses function getExceptionValueNumber(BasicBlock) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function createFact() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function copyFrom(Frame< ValueNumber >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses function pushValue(ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses function mergeInto(ValueNumberFrame,ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function mergeInto(ValueNumberFrame,ValueNumberFrame) in line 235
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses variable mergeTree defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function mergeValues(ValueNumberFrame,ValueNumberFrame,int) in line 241
      5 lines of code
      3 parameters
      1 conditional paths
   function mergeValues(ValueNumberFrame,int,ValueNumber,ValueNumber) in line 247
      38 lines of code
      4 parameters
      5 conditional paths
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable PHI_NODE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable mergeTree defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function mapInputToOutput(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::MergeTree
   function setMergeTree(MergeTree) in line 115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mergeTree defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function transferInstruction(InstructionHandle,BasicBlock,ValueNumberFrame) in line 195
      protection public
      15 lines of code
      3 parameters
      1 conditional paths
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function copy(FrameType,FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses variable visitor defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function setFrameAndLocation(FrameType,Location) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function setHandle(InstructionHandle) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function analyzeInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function ValueNumberAnalysis(MethodGen,DepthFirstSearch,LoadedFieldSet,RepositoryLookupFailureCallback) in line 79
      protection public
      31 lines of code
      4 parameters
      4 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable entryLocalValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   variable DEBUG in line 59
      protection public
   variable entryLocalValueList in line 67
   variable exceptionHandlerValueNumberMap in line 69
   variable factAfterLocationMap in line 75
   variable factAtLocationMap in line 73
   variable factory in line 63
   variable mergeTree in line 77
   variable methodGen in line 61
   variable thisValue in line 71
   variable TRACE in line 57
   variable visitor in line 65
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberAnalysisFeatures.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
   variable REDUNDANT_LOAD_ELIMINATION in line 42
      protection public
   variable RLE_DEBUG in line 47
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberCache.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberCache
   function addOutputValues(Entry,ValueNumber[]) in line 141
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable entryToOutputMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache
   function lookupOutputValues(Entry) in line 120
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache
      uses variable entryToOutputMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache
   variable DEBUG in line 39
   variable entryToOutputMap in line 110
module edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
   function equals(Object) in line 60
      protection public
      20 lines of code
      1 parameters
      6 conditional paths
      uses function Entry(InstructionHandle,ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
      uses variable inputValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
   function hashCode() in line 82
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
      uses variable inputValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function toString() in line 96
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
      uses variable inputValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
   function Entry(InstructionHandle,ValueNumber[]) in line 53
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
      uses variable inputValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
   variable cachedHashCode in line 50
   variable handle in line 46
      protection public
   variable inputValueList in line 48
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberDataflow.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberDataflow
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflow
   function getClassName(ValueNumber) in line 77
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getAnalysis() defined in Dataflow< Fact, AnalysisType >
   function getValueNumberToParamMap(Method) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getValueNumberToParamMap(String,boolean) in line 61
      protection public
      13 lines of code
      2 parameters
      2 conditional paths
      uses function getStartFact(BasicBlock) defined in Dataflow< Fact, AnalysisType >
      uses function getCFG() defined in Dataflow< Fact, AnalysisType >
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function ValueNumberDataflow(CFG,ValueNumberAnalysis) in line 35
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< Fact, AnalysisType >
      uses variable analysis defined in Dataflow< Fact, AnalysisType >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberFactory.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function compact(int[],int) in line 87
      protection public
      19 lines of code
      2 parameters
      4 conditional paths
      uses variable allocatedValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function createFreshValue() in line 49
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getNumValuesAllocated() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable allocatedValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function createFreshValue(int) in line 55
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getNumValuesAllocated() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable allocatedValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function forNumber(int) in line 64
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getNumValuesAllocated() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable allocatedValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function getClassName(ValueNumber) in line 127
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable classObjectValueMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function getClassObjectValue(@DottedClassName String) in line 113
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable classObjectValueMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function getNumValuesAllocated() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable allocatedValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   variable allocatedValueList in line 42
   variable classObjectValueMap in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberFrame.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   inherits from edu::umd::cs::findbugs::ba::Frame
   inherits from edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
   function addAvailableLoad(AvailableLoad,@Nonnull ValueNumber[]) in line 153
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses function getUpdateableAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getUpdateablePreviouslyKnownAs() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
   function assignAvailableLoadMap(ValueNumberFrame) in line 433
      12 lines of code
      1 parameters
      2 conditional paths
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function setAvailableLoadMap(Map< AvailableLoad, ValueNumber[]>) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function assignPreviouslyKnownAs(ValueNumberFrame) in line 446
      12 lines of code
      1 parameters
      2 conditional paths
      uses function getPreviouslyKnownAs() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function setPreviouslyKnownAs(Map< ValueNumber, AvailableLoad >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function availableLoadMapAsString() in line 101
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function copyFrom(Frame< ValueNumber >) in line 410
      protection public
      22 lines of code
      1 parameters
      5 conditional paths
      uses variable mergedValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function assignAvailableLoadMap(ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function assignPreviouslyKnownAs(ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function extractPackageName(String) in line 302
      3 lines of code
      1 parameters
      22 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function availableLoadMapAsString() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function setAvailableLoadMap(Map< AvailableLoad, ValueNumber[]>) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getUpdateableAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getMergedLoads() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable PHI_NODE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function getUpdateableMergedLoads() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function mapInputToOutput(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses function toString() defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getPreviouslyKnownAs() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function assignPreviouslyKnownAs(ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getUpdateablePreviouslyKnownAs() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable mergedValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function fromMatchingFields(ValueNumber,ValueNumber) in line 540
      protection public
      30 lines of code
      2 parameters
      9 conditional paths
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getPreviouslyKnownAs() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function getField() defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function getReference() defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function contains(ValueType) defined in edu::umd::cs::findbugs::ba::Frame
   function fromMatchingLoads(ValueNumber,ValueNumber) in line 522
      protection public
      17 lines of code
      2 parameters
      5 conditional paths
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getPreviouslyKnownAs() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   function fuzzyMatch(ValueNumber,ValueNumber) in line 506
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function fromMatchingLoads(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function haveMatchingFlags(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function getAvailableLoad(AvailableLoad) in line 141
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function getAvailableLoadMap() in line 599
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable availableLoadMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function getLoad(ValueNumber) in line 117
      protection public
      16 lines of code
      1 parameters
      6 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function getMergedLoads() in line 616
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mergedLoads defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function getPreviouslyKnownAs() in line 632
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable previouslyKnownAs defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function getUpdateableAvailableLoadMap() in line 603
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable availableLoadMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function getUpdateableMergedLoads() in line 620
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable mergedLoads defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function getUpdateablePreviouslyKnownAs() in line 636
      15 lines of code
      0 parameters
      3 conditional paths
      uses variable previouslyKnownAs defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function haveMatchingFlags(ValueNumber,ValueNumber) in line 574
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function killAllLoads() in line 198
      protection public
      19 lines of code
      0 parameters
      5 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable USE_WRITTEN_OUTSIDE_OF_CONSTRUCTOR defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function isWrittenOutsideOfConstructor(XField) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function killAvailableLoads(HashSet< AvailableLoad >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function killAllLoadsExceptFor(@CheckForNull ValueNumber) in line 218
      protection public
      16 lines of code
      1 parameters
      5 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function killAvailableLoads(HashSet< AvailableLoad >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function killAllLoadsOf(@CheckForNull ValueNumber) in line 239
      protection public
      21 lines of code
      1 parameters
      6 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable USE_WRITTEN_OUTSIDE_OF_CONSTRUCTOR defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function isWrittenOutsideOfConstructor(XField) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function killAvailableLoads(HashSet< AvailableLoad >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function killAvailableLoads(HashSet< AvailableLoad >) in line 296
      5 lines of code
      1 parameters
      2 conditional paths
      uses function removeAllKeys(Map< K, V >,Iterable< K >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getUpdateableAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function killLoadsOf(Set< XField >) in line 261
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function killAvailableLoads(HashSet< AvailableLoad >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function killLoadsOfField(XField) in line 178
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function killAvailableLoads(HashSet< AvailableLoad >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function killLoadsWithSimilarName(String,String) in line 276
      protection public
      19 lines of code
      2 parameters
      4 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function extractPackageName(String) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function killAvailableLoads(HashSet< AvailableLoad >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function removeAllKeys(Map< K, V >,Iterable< K >) in line 166
      5 lines of code
      2 parameters
      2 conditional paths
   function setAvailableLoadMap(Map< AvailableLoad, ValueNumber[]>) in line 595
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable availableLoadMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function setMergedLoads(Map< AvailableLoad, ValueNumber >) in line 612
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mergedLoads defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function setPreviouslyKnownAs(Map< ValueNumber, AvailableLoad >) in line 628
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable previouslyKnownAs defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function toString() in line 460
      protection public
      29 lines of code
      0 parameters
      5 conditional paths
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function valueToString(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable phiNodeForLoads defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function valueNumbersForLoads() in line 580
      protection public
      14 lines of code
      0 parameters
      5 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function valueToString(ValueNumber[]) in line 490
      15 lines of code
      1 parameters
      3 conditional paths
   function veryFuzzyMatch(ValueNumber,ValueNumber) in line 514
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function fromMatchingFields(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function haveMatchingFlags(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function ValueNumberFrame(int) in line 92
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable numLocals defined in edu::umd::cs::findbugs::ba::Frame
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function setAvailableLoadMap(Map< AvailableLoad, ValueNumber[]>) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function setMergedLoads(Map< AvailableLoad, ValueNumber >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function setPreviouslyKnownAs(Map< ValueNumber, AvailableLoad >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   variable availableLoadMap in line 54
   variable mergedLoads in line 56
   variable mergedValueList in line 52
   variable phiNodeForLoads in line 60
      protection public
   variable previouslyKnownAs in line 58
   variable USE_WRITTEN_OUTSIDE_OF_CONSTRUCTOR in line 62
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberFrameModelingVisitor.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::Debug
   inherits from edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
   function allocateValueNumberArray(int) in line 671
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable EMPTY_INPUT_VALUE_LIST defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function checkConsumedAndProducedValues(Instruction,ValueNumber[],ValueNumber[]) in line 208
      21 lines of code
      3 parameters
      5 conditional paths
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function doForwardSubstitution() in line 185
      22 lines of code
      0 parameters
      5 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable loadedFieldSet defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getField(InstructionHandle) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function isReferenceType() defined in edu::umd::cs::findbugs::ba::XField
      uses function isLoaded(XField) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function doRedundantLoadElimination() in line 154
      23 lines of code
      0 parameters
      4 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable loadedFieldSet defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getField(InstructionHandle) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function isReferenceType() defined in edu::umd::cs::findbugs::ba::XField
   function getDefaultValue() in line 129
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function getOutputValues(ValueNumber[],int) in line 637
      3 lines of code
      2 parameters
      1 conditional paths
   function getOutputValues(ValueNumber[],int,int) in line 641
      22 lines of code
      3 parameters
      3 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable cache defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function lookupOutputValues(Entry) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache
      uses function allocateValueNumberArray(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function addOutputValues(Entry,ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache
   function killLoadsOfObjectsPassed(INVOKEDYNAMIC) in line 415
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function allocateValueNumberArray(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function killLoadsOfObjectsPassed(InvokeInstruction) in line 430
      23 lines of code
      1 parameters
      4 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable ANY_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getFieldsWritten(XMethod) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function allocateValueNumberArray(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function loadInstanceField(XField,Instruction) in line 697
      42 lines of code
      2 parameters
      8 conditional paths
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getOutputValues(ValueNumber[],int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getNumWordsProduced(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function vlts(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function pushOutputValues(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkConsumedAndProducedValues(Instruction,ValueNumber[],ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function loadStaticField(XField,Instruction) in line 748
      32 lines of code
      2 parameters
      6 conditional paths
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsProduced(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getOutputValues(ValueNumber[],int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable EMPTY_INPUT_VALUE_LIST defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkConsumedAndProducedValues(Instruction,ValueNumber[],ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function pushOutputValues(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function modelNormalInstruction(Instruction,int,int) in line 234
      protection public
      26 lines of code
      3 parameters
      5 conditional paths
      uses variable RETURN_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable ARRAY_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function popInputValues(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getOutputValues(ValueNumber[],int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkConsumedAndProducedValues(Instruction,ValueNumber[],ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function pushOutputValues(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function popInputValues(int) in line 607
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function allocateValueNumberArray(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function pushOutputValues(ValueNumber[]) in line 627
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function setHandle(InstructionHandle) in line 137
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function storeInstanceField(XField,Instruction,boolean) in line 792
      39 lines of code
      3 parameters
      5 conditional paths
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function popInputValues(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function allocateValueNumberArray(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function pushOutputValues(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkConsumedAndProducedValues(Instruction,ValueNumber[],ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable EMPTY_INPUT_VALUE_LIST defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function storeStaticField(XField,Instruction,boolean) in line 843
      30 lines of code
      3 parameters
      5 conditional paths
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function popInputValues(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function pushOutputValues(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkConsumedAndProducedValues(Instruction,ValueNumber[],ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable EMPTY_INPUT_VALUE_LIST defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function visitACONST_NULL(ACONST_NULL) in line 522
      protection public
      16 lines of code
      1 parameters
      2 conditional paths
      uses function popInputValues(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getOutputValues(ValueNumber[],int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable CONSTANT_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkConsumedAndProducedValues(Instruction,ValueNumber[],ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function pushOutputValues(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function visitCHECKCAST(CHECKCAST) in line 594
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGETFIELD(GETFIELD) in line 262
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function doRedundantLoadElimination() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function loadInstanceField(XField,Instruction) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitGETSTATIC(GETSTATIC) in line 292
      protection public
      35 lines of code
      1 parameters
      7 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getClassObjectValue(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses function doRedundantLoadElimination() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function loadStaticField(XField,Instruction) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitIINC(IINC) in line 568
      protection public
      24 lines of code
      1 parameters
      3 conditional paths
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable cache defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function lookupOutputValues(Entry) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function addOutputValues(Entry,ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache
   function visitINVOKEDYNAMIC(INVOKEDYNAMIC) in line 469
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function killLoadsOfObjectsPassed(INVOKEDYNAMIC) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitINVOKEINTERFACE(INVOKEINTERFACE) in line 485
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function killLoadsOfObjectsPassed(INVOKEDYNAMIC) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitINVOKESPECIAL(INVOKESPECIAL) in line 477
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function killLoadsOfObjectsPassed(INVOKEDYNAMIC) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitINVOKESTATIC(INVOKESTATIC) in line 343
      protection public
      71 lines of code
      1 parameters
      13 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable stringConstantMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getClassObjectValue(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable loadedFieldSet defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getField(InstructionHandle) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses function instructionIsLoad(InstructionHandle) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses function doRedundantLoadElimination() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function loadStaticField(XField,Instruction) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function loadInstanceField(XField,Instruction) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function doForwardSubstitution() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function storeStaticField(XField,Instruction,boolean) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function storeInstanceField(XField,Instruction,boolean) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function killLoadsOfObjectsPassed(INVOKEDYNAMIC) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitINVOKEVIRTUAL(INVOKEVIRTUAL) in line 497
      protection public
      23 lines of code
      1 parameters
      4 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function killLoadsOfObjectsPassed(INVOKEDYNAMIC) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitLDC(LDC) in line 540
      protection public
      26 lines of code
      1 parameters
      5 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getClassObjectValue(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable constantValueMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable CONSTANT_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable stringConstantMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitMONITORENTER(MONITORENTER) in line 455
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitPUTFIELD(PUTFIELD) in line 279
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function doForwardSubstitution() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function storeInstanceField(XField,Instruction,boolean) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitPUTSTATIC(PUTSTATIC) in line 329
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function doForwardSubstitution() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function storeStaticField(XField,Instruction,boolean) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function vlts(ValueNumber[]) in line 678
      10 lines of code
      1 parameters
      3 conditional paths
   function ValueNumberFrameModelingVisitor(MethodGen,ValueNumberFactory,ValueNumberCache,LoadedFieldSet,RepositoryLookupFailureCallback) in line 116
      protection public
      11 lines of code
      5 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable cache defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable loadedFieldSet defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   variable cache in line 84
   variable constantValueMap in line 88
   variable EMPTY_INPUT_VALUE_LIST in line 94
   variable handle in line 92
   variable loadedFieldSet in line 86
   variable methodGen in line 80
   variable stringConstantMap in line 90
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberSourceInfo.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberSourceInfo
   abstract class
   function findAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame,@CheckForNull String) in line 58
      protection public
      29 lines of code
      5 parameters
      7 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function setDescription(String) defined in edu::umd::cs::findbugs::StringAnnotation
      uses variable STRING_NONSTRING_CONSTANT_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
      uses function findLocalAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberSourceInfo
      uses function setDescription(String) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function isSignificant() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function findFieldAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberSourceInfo
      uses function setDescription(String) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function findFieldAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) in line 133
      protection public
      8 lines of code
      4 parameters
      2 conditional paths
      uses function findXFieldFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberSourceInfo
   function findLocalAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) in line 107
      protection public
      25 lines of code
      4 parameters
      6 conditional paths
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumLocals() defined in edu::umd::cs::findbugs::ba::Frame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function findRequiredAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame,@CheckForNull String) in line 98
      protection public
      8 lines of code
      5 parameters
      2 conditional paths
      uses function findAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame,@CheckForNull String) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberSourceInfo
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function findXFieldFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) in line 142
      protection public
      12 lines of code
      4 parameters
      3 conditional paths
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getField() defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   function getFromValueNumber(ClassContext,Method,Location,int) in line 164
      protection public
      15 lines of code
      4 parameters
      3 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function findAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame,@CheckForNull String) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberSourceInfo
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/XClass.java
module edu::umd::cs::findbugs::ba::XClass
   inherits from Comparable
   inherits from edu::umd::cs::findbugs::ba::AccessibleEntity
   inherits from edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function findField(String,String,boolean) in line 131
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function findMatchingMethod(MethodDescriptor) in line 118
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function findMethod(String,String,boolean) in line 99
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function findMethod(MethodDescriptor) in line 108
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getAnnotation(ClassDescriptor) in line 86
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getAnnotationDescriptors() in line 83
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCalledClassDescriptors() in line 146
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getImmediateEnclosingClass() in line 63
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getInterfaceDescriptorList() in line 54
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSource() in line 80
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSourceSignature() in line 137
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSuperclassDescriptor() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getXFields() in line 133
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getXMethods() in line 135
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function hasStubs() in line 141
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isAbstract() in line 73
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isInterface() in line 68
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function usesConcurrency() in line 139
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/XFactory.java
module edu::umd::cs::findbugs::ba::XFactory
   function addCalledMethod(MethodDescriptor) in line 123
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable calledMethods defined in edu::umd::cs::findbugs::ba::XFactory
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
   function addEmptyArrayField(XField) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable emptyArrays defined in edu::umd::cs::findbugs::ba::XFactory
   function addFunctionThatMightBeMistakenForProcedures(MethodDescriptor) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable functionsThatMightBeMistakenForProcedures defined in edu::umd::cs::findbugs::ba::XFactory
   function addReflectiveClasses(ClassDescriptor) in line 162
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reflectiveClasses defined in edu::umd::cs::findbugs::ba::XFactory
   function allFields() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fields defined in edu::umd::cs::findbugs::ba::XFactory
   function assertDottedClassName(@DottedClassName String) in line 283
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function assertSlashedClassName(@SlashedClassName String) in line 287
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function canonicalizeAll() in line 88
      protection public
      13 lines of code
      0 parameters
      5 conditional paths
      uses variable methods defined in edu::umd::cs::findbugs::ba::XFactory
      uses function canonicalize(MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable fields defined in edu::umd::cs::findbugs::ba::XFactory
   function canonicalizeString(String) in line 235
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function compare(E,E) in line 691
      protection public
      20 lines of code
      2 parameters
      4 conditional paths
   function createReferencedXField(DismantleBytecode) in line 471
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getOpcode() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function createXFieldUsingSlashedClassName(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRefFieldIsStatic() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function createReferencedXMethod(DismantleBytecode) in line 480
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function createXMethodUsingSlashedClassName(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getOpcode() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function resolveAccessMethodForMethod() defined in edu::umd::cs::findbugs::ba::XMethod
   function createXField(@DottedClassName String,String,String,boolean) in line 453
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function createXField(FieldInstruction,ConstantPoolGen) in line 462
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function createXField(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXField(FieldAnnotation) in line 486
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createXField(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getFieldName() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getFieldSignature() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable isStatic defined in edu::umd::cs::findbugs::FieldAnnotation
   function createXField(JavaClass,Field) in line 490
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function createXField(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXField(String,Field) in line 503
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getExactXField(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
   function createXField(FieldDescriptor) in line 551
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable fields defined in edu::umd::cs::findbugs::ba::XFactory
      uses function resolveXField(FieldDescriptor) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXField(PreorderVisitor) in line 641
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function createXField(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXFieldUsingSlashedClassName(@SlashedClassName String,String,String,boolean) in line 436
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function createXField(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXMethod(String,Method) in line 249
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
   function createXMethod(@DottedClassName String,String,String,int) in line 260
      3 lines of code
      4 parameters
      1 conditional paths
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXMethod(JavaClass,Method) in line 274
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
   function createXMethod(@DottedClassName String,String,String,boolean) in line 314
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses function assertDottedClassName(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXMethod(MethodDescriptor) in line 321
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable methods defined in edu::umd::cs::findbugs::ba::XFactory
      uses function resolveXMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function canonicalize(MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function createXMethod(MethodAnnotation) in line 423
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getMethodSignature() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable isStatic defined in edu::umd::cs::findbugs::MethodAnnotation
   function createXMethod(InvokeInstruction,ConstantPoolGen) in line 610
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXMethod(PreorderVisitor) in line 626
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXMethod(MethodGen) in line 648
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXMethod(JavaClassAndMethod) in line 656
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function createXMethodUsingSlashedClassName(@SlashedClassName String,String,String,boolean) in line 299
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses function assertSlashedClassName(@SlashedClassName String) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
   function getCalledMethods() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable calledMethods defined in edu::umd::cs::findbugs::ba::XFactory
   function getDetailedSignature(XMethod) in line 226
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function getExactXField(@SlashedClassName String,String,String,boolean) in line 528
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getExactXField(@SlashedClassName String,Field) in line 535
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getExactXField(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
   function getExactXField(FieldDescriptor) in line 541
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable fields defined in edu::umd::cs::findbugs::ba::XFactory
   function getReflectiveClasses() in line 154
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reflectiveClasses defined in edu::umd::cs::findbugs::ba::XFactory
   function getXClass(ClassDescriptor) in line 670
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function intern(XClass) in line 108
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function getXMethods() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable methods defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getXFields() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable fields defined in edu::umd::cs::findbugs::ba::XFactory
   function isCalled(XMethod) in line 136
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable calledMethods defined in edu::umd::cs::findbugs::ba::XFactory
   function isCalledDirectlyOrIndirectly(XMethod) in line 166
      protection public
      31 lines of code
      1 parameters
      7 conditional paths
      uses function isCalled(XMethod) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isPrivate() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
   function isCalledDirectlyOrIndirectly(@CheckForNull ClassDescriptor,XMethod) in line 198
      23 lines of code
      2 parameters
      6 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses function isCalled(XMethod) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function isCalledDirectlyOrIndirectly(XMethod) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
   function isEmptyArrayField(@CheckForNull XField) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable emptyArrays defined in edu::umd::cs::findbugs::ba::XFactory
   function isFunctionshatMightBeMistakenForProcedures(MethodDescriptor) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable functionsThatMightBeMistakenForProcedures defined in edu::umd::cs::findbugs::ba::XFactory
   function isInterned(XMethod) in line 231
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
   function isReflectiveClass(ClassDescriptor) in line 158
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reflectiveClasses defined in edu::umd::cs::findbugs::ba::XFactory
   function nameAndSignatureIsCalled(XMethod) in line 222
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable calledMethodSignatures defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getDetailedSignature(XMethod) defined in edu::umd::cs::findbugs::ba::XFactory
   function profile() in line 338
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable methods defined in edu::umd::cs::findbugs::ba::XFactory
      uses function profile() defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function resolveXField(FieldDescriptor) in line 563
      37 lines of code
      1 parameters
      9 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable fields defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
   function resolveXMethod(MethodDescriptor) in line 351
      71 lines of code
      1 parameters
      11 conditional paths
      uses variable methods defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getOptionalDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable INFER_CLOSE_METHODS defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function split() defined in edu::umd::cs::findbugs::util::SplitCamelCaseIdentifier
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getParameterObligationTypes(XMethod) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function addParameterDeletesObligationDatabaseEntry(XMethod,Obligation,ObligationPolicyDatabaseEntryType) defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses variable STRONG defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseEntryType
      uses enumvalue WEAK defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseEntryType
   function XFactory() in line 105
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable calledMethods in line 80
   variable calledMethodSignatures in line 84
   variable DEBUG_CIRCULARITY in line 460
      protection public
   variable DEBUG_UNRESOLVED in line 72
      protection public
   variable emptyArrays in line 82
   variable fields in line 78
   variable functionsThatMightBeMistakenForProcedures in line 86
   variable methods in line 76
   variable reflectiveClasses in line 74
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/XField.java
module edu::umd::cs::findbugs::ba::XField
   inherits from edu::umd::cs::findbugs::ba::ClassMember
   inherits from edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   inherits from edu::umd::cs::findbugs::ba::ComparableField
   function getFieldDescriptor() in line 57
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isReferenceType() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isVolatile() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/XMethod.java
module edu::umd::cs::findbugs::ba::XMethod
   inherits from edu::umd::cs::findbugs::ba::ClassMember
   inherits from edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   inherits from edu::umd::cs::findbugs::ba::ComparableMethod
   function addAnnotation(AnnotationValue) in line 210
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addParameterAnnotation(int,AnnotationValue) in line 197
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function bridgeFrom() in line 94
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function bridgeTo() in line 91
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getAccessMethodForField() in line 101
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getAccessMethodForMethod() in line 97
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getAnnotation(ClassDescriptor) in line 179
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getAnnotationDescriptors() in line 168
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getAnnotations() in line 187
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMethodDescriptor() in line 56
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumParams() in line 51
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getParameterAnnotation(int,ClassDescriptor) in line 147
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getParameterAnnotationDescriptors(int) in line 133
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getParameterAnnotations(int) in line 158
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getThrownExceptions() in line 62
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function hasParameterAnnotations() in line 160
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isAbstract() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isIdentity() in line 81
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isNative() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isReturnTypeReferenceType() in line 122
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isStub() in line 78
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isSynchronized() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isUnconditionalThrower() in line 67
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isUnsupported() in line 112
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isVarArgs() in line 117
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isVariableSynthetic(int) in line 200
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function resolveAccessMethodForMethod() in line 105
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function usesConcurrency() in line 73
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function usesInvokeDynamic() in line 212
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/XMethodParameter.java
module edu::umd::cs::findbugs::ba::XMethodParameter
   inherits from Comparable
   function compareTo(XMethodParameter) in line 67
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses variable parameter defined in edu::umd::cs::findbugs::ba::XMethodParameter
   function equals(Object) in line 52
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function XMethodParameter(XMethod,int) defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses variable parameter defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses variable method defined in edu::umd::cs::findbugs::ba::XMethodParameter
   function getMethod() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::XMethodParameter
   function getParameterNumber() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parameter defined in edu::umd::cs::findbugs::ba::XMethodParameter
   function hashCode() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses variable parameter defined in edu::umd::cs::findbugs::ba::XMethodParameter
   function toString() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parameter defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses variable method defined in edu::umd::cs::findbugs::ba::XMethodParameter
   function XMethodParameter(XMethod,int) in line 34
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses variable parameter defined in edu::umd::cs::findbugs::ba::XMethodParameter
   variable method in line 39
   variable parameter in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ba/ZipSourceFileDataSource.java
module edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
   inherits from edu::umd::cs::findbugs::ba::SourceFileDataSource
   function getFullFileName() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entryName defined in edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
   function getLastModified() in line 61
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable zipEntry defined in edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
   function open() in line 45
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable zipEntry defined in edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
      uses variable entryName defined in edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
      uses variable zipFile defined in edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
   function ZipSourceFileDataSource(ZipFile,String) in line 38
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable zipFile defined in edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
      uses variable entryName defined in edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
   variable entryName in line 34
   variable zipEntry in line 36
   variable zipFile in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/bcel/AnnotationDetector.java
module edu::umd::cs::findbugs::bcel::AnnotationDetector
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::UseAnnotationDatabase
   abstract class
   function getClassContext() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::bcel::AnnotationDetector
   function report() in line 52
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 37
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::bcel::AnnotationDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   variable classContext in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/bcel/BCELUtil.java
module edu::umd::cs::findbugs::bcel::BCELUtil
   abstract class
   function getAccessedFieldDescriptor(FieldInstruction,ConstantPoolGen) in line 91
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getCalledMethodDescriptor(InvokeInstruction,ConstantPoolGen) in line 71
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getClassDescriptor(JavaClass) in line 106
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getClassDescriptor(ObjectType) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getMethodDescriptor(JavaClass,Method) in line 56
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getObjectTypeInstance(@DottedClassName String) in line 154
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getObjectTypeInstance(Class<?>) in line 158
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getObjectTypeInstance(@DottedClassName String) defined in edu::umd::cs::findbugs::bcel::BCELUtil
   function isSynthetic(FieldOrMethod) in line 162
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
   function isSynthetic(JavaClass) in line 174
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
   function isSynthetic(FieldGenOrMethodGen) in line 186
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
   function preTiger(JavaClass) in line 117
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable JDK15_MAJOR defined in edu::umd::cs::findbugs::bcel::BCELUtil
      uses variable JDK15_MINOR defined in edu::umd::cs::findbugs::bcel::BCELUtil
   function throwClassNotFoundException(ClassDescriptor) in line 150
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable JDK15_MAJOR in line 110
   variable JDK15_MINOR in line 112
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/bcel/CFGDetector.java
module edu::umd::cs::findbugs::bcel::CFGDetector
   inherits from edu::umd::cs::findbugs::Detector2
   abstract class
   function finishPass() in line 48
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function getDetectorClassName() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitClass(ClassDescriptor) in line 71
      protection public
      25 lines of code
      1 parameters
      4 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable classContext defined in edu::umd::cs::findbugs::bcel::CFGDetector
      uses function getMethodsInCallOrder() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::bcel::CFGDetector
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function visitMethodCFG(MethodDescriptor,CFG) defined in edu::umd::cs::findbugs::bcel::CFGDetector
   function visitMethodCFG(MethodDescriptor,CFG) in line 105
      1 lines of code
      2 parameters
      1 conditional paths
   variable classContext in line 61
   variable method in line 62
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/bcel/generic/NONNULL2Z.java
module edu::umd::cs::findbugs::bcel::generic::NONNULL2Z
   inherits from edu::umd::cs::findbugs::bcel::generic::NullnessConversationInstruction
   function NONNULL2Z() in line 11
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/bcel/generic/NULL2Z.java
module edu::umd::cs::findbugs::bcel::generic::NULL2Z
   inherits from edu::umd::cs::findbugs::bcel::generic::NullnessConversationInstruction
   function NULL2Z() in line 12
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/bcel/generic/NullnessConversationInstruction.java
module edu::umd::cs::findbugs::bcel::generic::NullnessConversationInstruction
   inherits from org::apache::bcel::generic::ConversionInstruction
   abstract class
   function accept(Visitor) in line 63
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function consumeStack(ConstantPoolGen) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getType(ConstantPoolGen) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function produceStack(ConstantPoolGen) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function NullnessConversationInstruction(short) in line 32
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/bcel/OpcodeStackDetector.java
module edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   abstract class
   function afterOpcode(int) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function sawOpcode(int) defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function beforeOpcode(int) in line 68
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function precomputation(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isTop() defined in edu::umd::cs::findbugs::OpcodeStack
   function getStack() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function isUsingCustomUserValue() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function sawOpcode(int) in line 90
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitCode(Code) in line 57
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function shouldVisitCode(Code) defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function resetForMethodEntry(final DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
   function OpcodeStackDetector() in line 38
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function isUsingCustomUserValue() defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   variable isUsingCustomUserValue in line 36
   variable stack in line 50
module edu::umd::cs::findbugs::bcel::OpcodeStackDetector::WithCustomJumpInfo
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   abstract class
   function customJumpInfo() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/bcel/PreorderDetector.java
module edu::umd::cs::findbugs::bcel::PreorderDetector
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   abstract class
   function getClassContext() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::bcel::PreorderDetector
   function report() in line 51
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 36
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::bcel::PreorderDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   variable classContext in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/BugAccumulator.java
module edu::umd::cs::findbugs::BugAccumulator
   function accumulateBug(BugInstance,SourceLineAnnotation) in line 109
      protection public
      40 lines of code
      2 parameters
      9 conditional paths
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable performAccumulation defined in edu::umd::cs::findbugs::BugAccumulator
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable lastBug defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable lastSourceLine defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable map defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getInstanceHash() defined in edu::umd::cs::findbugs::BugInstance
      uses variable hashes defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportBug(BugInstance,Data) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable reporter defined in edu::umd::cs::findbugs::BugAccumulator
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function accumulateBug(BugInstance,BytecodeScanningDetector) in line 159
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function accumulateBug(BugInstance,ClassContext,Method,Location) in line 213
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function accumulateBug(BugInstance,ClassContext,MethodGen,String,Location) in line 218
      protection public
      5 lines of code
      5 parameters
      1 conditional paths
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function clearBugs() in line 206
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable hashes defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable lastBug defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable lastSourceLine defined in edu::umd::cs::findbugs::BugAccumulator
   function forgetLastBug() in line 88
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable lastBug defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable lastSourceLine defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable hashes defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getInstanceHash() defined in edu::umd::cs::findbugs::BugInstance
   function getLastBugLocation() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastSourceLine defined in edu::umd::cs::findbugs::BugAccumulator
   function locations(BugInstance) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::BugAccumulator
   function reportAccumulatedBugs() in line 177
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::BugAccumulator
      uses function reportBug(BugInstance,Data) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function clearBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function reportBug(BugInstance,Data) in line 186
      protection public
      16 lines of code
      2 parameters
      3 conditional paths
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable ROLE_ANOTHER_INSTANCE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable reporter defined in edu::umd::cs::findbugs::BugAccumulator
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function uniqueBugs() in line 164
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::BugAccumulator
   function BugAccumulator(BugReporter) in line 78
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable performAccumulation defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable MERGE_SIMILAR_WARNINGS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
   variable hashes in line 52
   variable lastBug in line 54
   variable lastSourceLine in line 55
   variable map in line 50
   variable performAccumulation in line 48
   variable reporter in line 46
module edu::umd::cs::findbugs::BugAccumulator::Data
   function Data(int,SourceLineAnnotation) in line 59
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/BugAnnotation.java
module edu::umd::cs::findbugs::BugAnnotation
   inherits from Comparable
   inherits from edu::umd::cs::findbugs::XMLWriteableWithMessages
   inherits from java::io::Serializable
   inherits from Cloneable
   function accept(BugAnnotationVisitor) in line 44
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function clone() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function format(String,ClassAnnotation) in line 57
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getDescription() in line 63
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isSignificant() in line 77
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setDescription(String) in line 69
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function toString(ClassAnnotation) in line 79
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable MESSAGE_TAG in line 34
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/BugAnnotationUtil.java
module edu::umd::cs::findbugs::BugAnnotationUtil
   abstract class
   function writeXML(XMLOutput,String,BugAnnotation,XMLAttributeList,boolean) in line 47
      protection public
      24 lines of code
      5 parameters
      5 conditional paths
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable MESSAGE_TAG defined in edu::umd::cs::findbugs::BugAnnotation
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/BugAnnotationVisitor.java
module edu::umd::cs::findbugs::BugAnnotationVisitor
   function visitClassAnnotation(ClassAnnotation) in line 23
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitFieldAnnotation(FieldAnnotation) in line 25
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitIntAnnotation(IntAnnotation) in line 29
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitLocalVariableAnnotation(LocalVariableAnnotation) in line 33
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitMethodAnnotation(MethodAnnotation) in line 27
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitSourceLineAnnotation(SourceLineAnnotation) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitStringAnnotation(StringAnnotation) in line 31
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitTypeAnnotation(TypeAnnotation) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/BugAnnotationWithSourceLines.java
module edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   inherits from edu::umd::cs::findbugs::BugAnnotation
   abstract class
   function clone() in line 39
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getSourceFileName() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceFileName defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function getSourceLines() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceLines defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function setSourceLines(SourceLineAnnotation) in line 58
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceLines defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses variable sourceFileName defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function toString(ClassAnnotation) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function BugAnnotationWithSourceLines() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable sourceFileName in line 27
   variable sourceLines in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/BugCategory.java
module edu::umd::cs::findbugs::BugCategory
   inherits from Comparable
   function compareTo(BugCategory) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
   function equals(Object) in line 142
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function BugCategory(String,String,String,String) defined in edu::umd::cs::findbugs::BugCategory
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
   function getAbbrev() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCategory
   function getCategory() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
   function getDetailText() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detailText defined in edu::umd::cs::findbugs::BugCategory
   function getShortDescription() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable shortDescription defined in edu::umd::cs::findbugs::BugCategory
   function hashCode() in line 137
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
   function isHidden() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable hidden defined in edu::umd::cs::findbugs::BugCategory
   function setAbbrev(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCategory
   function setDetailText(String) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detailText defined in edu::umd::cs::findbugs::BugCategory
   function setHidden(boolean) in line 166
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable hidden defined in edu::umd::cs::findbugs::BugCategory
   function setShortDescription(String) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable shortDescription defined in edu::umd::cs::findbugs::BugCategory
   function toString() in line 152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
      uses variable shortDescription defined in edu::umd::cs::findbugs::BugCategory
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCategory
      uses variable detailText defined in edu::umd::cs::findbugs::BugCategory
   function BugCategory(String,String,String,String) in line 50
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
      uses variable shortDescription defined in edu::umd::cs::findbugs::BugCategory
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCategory
      uses variable detailText defined in edu::umd::cs::findbugs::BugCategory
   function BugCategory(String,String) in line 65
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
      uses variable shortDescription defined in edu::umd::cs::findbugs::BugCategory
   function BugCategory(String) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
   variable abbrev in line 31
   variable category in line 27
   variable detailText in line 33
   variable hidden in line 35
   variable shortDescription in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/BugCode.java
module edu::umd::cs::findbugs::BugCode
   inherits from Comparable
   function compareTo(BugCode) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCode
   function equals(Object) in line 93
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function BugCode(String,String) defined in edu::umd::cs::findbugs::BugCode
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCode
   function getAbbrev() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCode
   function getCWEid() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cweid defined in edu::umd::cs::findbugs::BugCode
   function getDescription() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::BugCode
   function hashCode() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCode
   function toString() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCode
   function BugCode(String,String) in line 46
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCode
      uses variable description defined in edu::umd::cs::findbugs::BugCode
   function BugCode(String,String,int) in line 52
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCode
      uses variable description defined in edu::umd::cs::findbugs::BugCode
      uses variable cweid defined in edu::umd::cs::findbugs::BugCode
   variable abbrev in line 31
   variable cweid in line 33
   variable description in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/BugCollection.java
module edu::umd::cs::findbugs::BugCollection
   inherits from Iterable
   function add(BugInstance) in line 197
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function add(BugInstance,boolean) in line 210
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function addAppVersion(AppVersion) in line 176
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addError(String) in line 231
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addError(AnalysisError) in line 239
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addMissingClass(String) in line 247
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function appVersionIterator() in line 186
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function bugsPopulated() in line 391
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function clearAppVersions() in line 168
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function clearClassFeatures() in line 255
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function clearMissingClasses() in line 257
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEmptyCollectionWithMetadata() in line 353
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function findBug(String,String,int) in line 370
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function getAnalysisTimestamp() in line 132
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getAppVersionFromSequenceNumber(long) in line 138
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getCloud() in line 381
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCloudLazily() in line 383
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCollection() in line 339
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCurrentAppVersion() in line 181
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getProject() in line 78
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getProjectStats() in line 98
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getReleaseName() in line 93
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSequenceNumber() in line 157
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTimestamp() in line 111
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getWithMessages() in line 368
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getXmlCloudDetails() in line 389
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function hasDeadBugs() in line 160
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isApplySuppressions() in line 372
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isMultiversion() in line 159
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function iterator() in line 334
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function lookupFromUniqueId(String) in line 223
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function readXML(String) in line 266
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function readXML(@WillClose InputStream) in line 276
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function readXML(@WillClose Reader) in line 286
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reinitializeCloud() in line 385
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setAnalysisTimestamp(long) in line 119
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setAnalysisVersion(String) in line 127
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setApplySuppressions(boolean) in line 374
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setClassFeatureSet(ClassFeatureSet) in line 249
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setMinimalXML(boolean) in line 363
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setReleaseName(String) in line 86
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setSequenceNumber(long) in line 147
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setTimestamp(long) in line 106
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setWithMessages(boolean) in line 358
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setXmlCloudDetails(Map< String, String >) in line 387
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function toDocument() in line 346
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function writeEpilogue(XMLOutput) in line 253
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writePrologue(XMLOutput) in line 251
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writeXML(String) in line 294
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writeXML(@WillClose Writer) in line 303
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writeXML(@WillClose OutputStream) in line 313
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writeXML(@WillClose XMLOutput) in line 328
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable ANALYSIS_ERROR_ELEMENT_NAME in line 50
      protection public
   variable APP_CLASS_ELEMENT_NAME in line 71
      protection public
   variable CLASS_HASHES_ELEMENT_NAME in line 73
      protection public
   variable ERROR_ELEMENT_NAME in line 54
      protection public
   variable ERROR_EXCEPTION_ELEMENT_NAME in line 60
      protection public
   variable ERROR_MESSAGE_ELEMENT_NAME in line 56
      protection public
   variable ERROR_STACK_TRACE_ELEMENT_NAME in line 63
      protection public
   variable ERRORS_ELEMENT_NAME in line 48
      protection public
   variable HISTORY_ELEMENT_NAME in line 76
      protection public
   variable MISSING_CLASS_ELEMENT_NAME in line 67
      protection public
   variable PROJECT_ELEMENT_NAME in line 46
      protection public
   variable ROOT_ELEMENT_NAME in line 42
      protection public
   variable SRCMAP_ELEMENT_NAME in line 44
      protection public
   variable SUMMARY_HTML_ELEMENT_NAME in line 69
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/BugCollectionBugReporter.java
module edu::umd::cs::findbugs::BugCollectionBugReporter
   inherits from edu::umd::cs::findbugs::TextUIBugReporter
   inherits from edu::umd::cs::findbugs::ba::Debug
   function doReportBug(BugInstance) in line 95
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkBugInstance(BugInstance) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function notifyObservers(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function emitLine(String) in line 135
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable writer defined in edu::umd::cs::findbugs::BugCollectionBugReporter
   function finish() in line 120
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses variable writer defined in edu::umd::cs::findbugs::BugCollectionBugReporter
   function getBugCollection() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
   function getProject() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::BugCollectionBugReporter
   function getRealBugReporter() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function logError(String) in line 64
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function addError(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function logError(String,Throwable) in line 70
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function addError(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function observeClass(ClassDescriptor) in line 60
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function reportMissingClass(ClassNotFoundException) in line 85
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function addMissingClass(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function BugCollectionBugReporter(Project) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::BugCollectionBugReporter
   function BugCollectionBugReporter(Project,@CheckForNull PrintWriter) in line 43
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function getProjectStats() defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable writer defined in edu::umd::cs::findbugs::BugCollectionBugReporter
   variable bugCollection in line 33
   variable project in line 35
   variable writer in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/BugDesignation.java
module edu::umd::cs::findbugs::BugDesignation
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   inherits from java::io::Serializable
   inherits from Comparable
   function cleanDirty() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function setDirty(boolean) defined in edu::umd::cs::findbugs::BugDesignation
   function compareTo(BugDesignation) in line 288
      protection public
      26 lines of code
      1 parameters
      6 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
   function equals(Object) in line 280
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function compareTo(BugDesignation) defined in edu::umd::cs::findbugs::BugDesignation
   function getAnnotationText() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
   function getDesignationKey() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
   function getNonnullAnnotationText() in line 191
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
   function getTimestamp() in line 167
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
   function getUser() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
   function hasAnnotationText() in line 186
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
   function hasDesignationKey() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::BugDesignation
   function hashCode() in line 267
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
   function isDirty() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dirty defined in edu::umd::cs::findbugs::BugDesignation
   function merge(@CheckForNull BugDesignation) in line 237
      protection public
      28 lines of code
      1 parameters
      7 conditional paths
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
      uses function setDirty(boolean) defined in edu::umd::cs::findbugs::BugDesignation
      uses function hasDesignationKey() defined in edu::umd::cs::findbugs::BugDesignation
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
   function setAnnotationText(String) in line 198
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
      uses function setDirty(boolean) defined in edu::umd::cs::findbugs::BugDesignation
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
   function setDesignationKey(String) in line 145
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::BugDesignation
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
      uses function setDirty(boolean) defined in edu::umd::cs::findbugs::BugDesignation
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::BugDesignation
   function setDirty(boolean) in line 73
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable dirty defined in edu::umd::cs::findbugs::BugDesignation
   function setTimestamp(long) in line 171
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
      uses function hasAnnotationText() defined in edu::umd::cs::findbugs::BugDesignation
      uses function hasDesignationKey() defined in edu::umd::cs::findbugs::BugDesignation
      uses function setDirty(boolean) defined in edu::umd::cs::findbugs::BugDesignation
   function setUser(String) in line 163
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
   function toString() in line 53
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
   function writeXML(XMLOutput) in line 208
      protection public
      24 lines of code
      1 parameters
      6 conditional paths
      uses function hasDesignationKey() defined in edu::umd::cs::findbugs::BugDesignation
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
      uses function equals(Object) defined in edu::umd::cs::findbugs::BugDesignation
      uses variable dirty defined in edu::umd::cs::findbugs::BugDesignation
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
   function BugDesignation() in line 90
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function BugDesignation(String,long,String,String) in line 99
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
   function BugDesignation(BugDesignation) in line 106
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
   variable annotationText in line 114
   variable designation in line 50
   variable dirty in line 64
   variable timestamp in line 110
   variable UNCLASSIFIED in line 43
      protection public
   variable user in line 88
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/BugInstance.java
module edu::umd::cs::findbugs::BugInstance
   inherits from Comparable
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   inherits from java::io::Serializable
   inherits from Cloneable
   function add(@Nonnull BugAnnotation) in line 2395
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::BugInstance
      uses variable INVALID_HASH_CODE defined in edu::umd::cs::findbugs::BugInstance
   function addAnnotations(Collection<?extends BugAnnotation >) in line 1045
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addCalledMethod(DismantleBytecode) in line 1651
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
   function addCalledMethod(XMethod) in line 1656
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
   function addCalledMethod(String,String,String,boolean) in line 1674
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
   function addCalledMethod(ConstantPoolGen,InvokeInstruction) in line 1690
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
   function addCalledMethod(MethodGen,InvokeInstruction) in line 1710
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
   function addClass(String,String) in line 1168
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addClass(@SlashedClassName(when=When.UNKNOWN) String) in line 1183
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addClass(ClassNode) in line 1197
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addClass(ClassDescriptor) in line 1213
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addClass(JavaClass) in line 1227
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
   function addClass(PreorderVisitor) in line 1241
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
   function addClassAndMethod(MethodDescriptor) in line 1058
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getSlashedClassName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addClassAndMethod(XMethod) in line 1064
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
   function addClassAndMethod(PreorderVisitor) in line 1077
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function foundInSyntheticMethod() defined in edu::umd::cs::findbugs::BugInstance
   function addClassAndMethod(MethodAnnotation) in line 1106
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addClassAndMethod(MethodGen,String) in line 1122
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function foundInSyntheticMethod() defined in edu::umd::cs::findbugs::BugInstance
   function addClassAndMethod(JavaClass,Method) in line 1141
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function foundInSyntheticMethod() defined in edu::umd::cs::findbugs::BugInstance
   function addEqualsMethodUsed(ClassDescriptor) in line 1312
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
   function addEqualsMethodUsed(@CheckForNull Collection< XMethod >) in line 1324
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_EQUALS_USED defined in edu::umd::cs::findbugs::MethodAnnotation
   function addField(String,String,String,boolean) in line 1372
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   function addField(String,String,String,int) in line 1391
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addField(PreorderVisitor) in line 1397
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addField(FieldAnnotation) in line 1410
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addField(FieldVariable) in line 1423
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function getFieldName() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function getFieldSig() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function addField(XField) in line 1450
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function addField(FieldDescriptor) in line 1462
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addFieldOrMethodValueSource(OpcodeStack.Item) in line 2506
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getFieldOrMethodValueSource(@CheckForNull OpcodeStack.Item) defined in edu::umd::cs::findbugs::BugInstance
   function addFoundAndExpectedType(Type,Type) in line 1297
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses variable EXPECTED_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
   function addFoundAndExpectedType(String,String) in line 1305
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses variable EXPECTED_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
   function addInt(int) in line 1769
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addMethod(String,String,String,boolean) in line 1543
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   function addMethod(@SlashedClassName String,String,String,int) in line 1563
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addMethod(MethodGen,String) in line 1580
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLinesForMethod(MethodAnnotation,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addMethod(JavaClass,Method) in line 1601
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function setSourceLines(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addMethod(JavaClassAndMethod) in line 1620
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function addMethod(PreorderVisitor) in line 1634
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLinesForMethod(MethodAnnotation,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addMethod(XMethod) in line 1723
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addMethod(MethodDescriptor) in line 1736
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addMethod(MethodAnnotation) in line 1750
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addOptionalAnnotation(@CheckForNull BugAnnotation) in line 2381
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addOptionalAnnotation(@CheckForNull BugAnnotation,String) in line 2388
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
   function addOptionalField(@CheckForNull XField) in line 1435
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addOptionalLocalVariable(DismantleBytecode,OpcodeStack.Item) in line 1513
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function addOptionalUniqueAnnotations(BugAnnotation...) in line 2511
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addOptionalUniqueAnnotationsWithFallback(BugAnnotation,BugAnnotation...) in line 2531
      protection public
      12 lines of code
      2 parameters
      4 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addParameterAnnotation(int,String) in line 1782
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addInt(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
   function addProperty(BugProperty) in line 1022
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable propertyListHead defined in edu::umd::cs::findbugs::BugInstance
   function addReferencedField(DismantleBytecode) in line 1478
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addReferencedField(FieldAnnotation) in line 1489
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addSomeSourceForTopTwoStackValues(ClassContext,Method,Location) in line 2407
      protection public
      16 lines of code
      3 parameters
      3 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getSomeSource(ClassContext,Method,Location,OpcodeStack,int) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalUniqueAnnotations(BugAnnotation...) defined in edu::umd::cs::findbugs::BugInstance
      uses variable ASSERTIONS_ENABLED defined in edu::umd::cs::findbugs::SystemProperties
   function addSourceForTopStackValue(ClassContext,Method,Location) in line 2424
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function getSourceForTopStackValue(ClassContext,Method,Location) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLine(SourceLineAnnotation) in line 1826
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLine(BytecodeScanningDetector,int) in line 1845
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLine(ClassContext,PreorderVisitor,int) in line 1869
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLine(ClassContext,MethodGen,String,@Nonnull InstructionHandle) in line 1893
      protection public
      9 lines of code
      4 parameters
      2 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLine(ClassContext,MethodGen,String,InstructionHandle,InstructionHandle) in line 1919
      protection public
      15 lines of code
      5 parameters
      3 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLine(ClassContext,Method,Location) in line 1947
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function addSourceLine(MethodDescriptor,Location) in line 1961
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function addSourceLine(ClassContext,Method,InstructionHandle) in line 1985
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLine(BytecodeScanningDetector) in line 2053
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLineRange(BytecodeScanningDetector,int,int) in line 2009
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLineRange(ClassContext,PreorderVisitor,int,int) in line 2034
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLinesForMethod(MethodAnnotation,SourceLineAnnotation) in line 2566
      13 lines of code
      2 parameters
      2 conditional paths
      uses function setSourceLines(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function addString(String) in line 1794
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addString(char) in line 1807
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSuperclass(PreorderVisitor) in line 1256
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
   function addType(String) in line 1283
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addType(Type) in line 1290
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance::NoSuchBugPattern
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addType(ClassDescriptor) in line 1346
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addTypeOfNamedClass(@DottedClassName String) in line 1339
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addUnknownSourceLine(String,String) in line 2072
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addValueSource(@CheckForNull OpcodeStack.Item,DismantleBytecode) in line 2494
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function addValueSource(OpcodeStack.Item,Method,int) in line 2501
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getValueSource(OpcodeStack.Item,Method,int) defined in edu::umd::cs::findbugs::BugInstance
   function addVisitedField(PreorderVisitor) in line 1503
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function adjustForDetector(String) in line 274
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getFactoryByClassName(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable detectorFactory defined in edu::umd::cs::findbugs::BugInstance
      uses function getPriorityAdjustment() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function boundPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses variable ASSERTIONS_ENABLED defined in edu::umd::cs::findbugs::SystemProperties
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getReportedBugPatterns() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
   function ageInDays(BugCollection,long) in line 2366
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getAnalysisTimestamp() defined in edu::umd::cs::findbugs::BugCollection
   function annotationIterator() in line 598
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
   function annotationTextContainsWord(String) in line 812
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getTextAnnotationWords() defined in edu::umd::cs::findbugs::BugInstance
   function boundedPriority(int) in line 415
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable IGNORE_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function boundPriority() in line 225
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function boundedPriority(int) defined in edu::umd::cs::findbugs::BugInstance
   function clearHistory() in line 2659
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function setFirstVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses function setLastVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses function setIntroducedByChangeOfExistingClass(boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function setRemovedByChangeOfPersistingClass(boolean) defined in edu::umd::cs::findbugs::BugInstance
   function clearUserDesignation() in line 632
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
   function clone() in line 230
      protection public
      19 lines of code
      0 parameters
      4 conditional paths
      uses function BugInstance(String,int) defined in edu::umd::cs::findbugs::BugInstance
      uses function clone() defined in edu::umd::cs::findbugs::BugInstance
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses variable propertyListHead defined in edu::umd::cs::findbugs::BugInstance
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function addProperty(BugProperty) defined in edu::umd::cs::findbugs::BugInstance
   function compareTo(BugInstance) in line 2625
      protection public
      26 lines of code
      1 parameters
      5 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance::NoSuchBugPattern
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
   function deleteProperty(String) in line 989
      protection public
      32 lines of code
      1 parameters
      6 conditional paths
      uses variable propertyListHead defined in edu::umd::cs::findbugs::BugInstance
      uses function getName() defined in edu::umd::cs::findbugs::BugProperty
   function describe(String) in line 2164
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
   function equals(Object) in line 2598
      protection public
      25 lines of code
      1 parameters
      7 conditional paths
      uses function BugInstance(String,int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable type defined in edu::umd::cs::findbugs::BugInstance::NoSuchBugPattern
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
   function firstSeenXMLFormat() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foundInSyntheticMethod() in line 1087
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function setProperty(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable ASSERTIONS_ENABLED defined in edu::umd::cs::findbugs::SystemProperties
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
   function getAbbrev() in line 626
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
   function getAbridgedMessage() in line 2111
      protection public
      14 lines of code
      0 parameters
      2 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses function format(BugAnnotation[],ClassAnnotation) defined in edu::umd::cs::findbugs::FindBugsMessageFormat
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
   function getAnnotations() in line 605
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
   function getAnnotationsForMessage(boolean) in line 2778
      protection public
      53 lines of code
      1 parameters
      10 conditional paths
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function optionalAdd(Collection< BugAnnotation >,BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getDescription() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getAnnotations() defined in edu::umd::cs::findbugs::BugInstance
      uses function isNamed() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function isUnknown() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getAnnotationText() in line 767
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses function getAnnotationText() defined in edu::umd::cs::findbugs::BugDesignation
   function getAnnotationWithRole(Class< A >,String) in line 612
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
   function getAnotherInstanceSourceLineAnnotations() in line 549
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses function getDescription() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable ROLE_ANOTHER_INSTANCE defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getBugPattern() in line 331
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
   function getBugRank() in line 351
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBugRankCategory() in line 355
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getBugRank() defined in edu::umd::cs::findbugs::BugInstance
   function getCategoryAbbrev() in line 379
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategoryAbbrev() defined in edu::umd::cs::findbugs::BugPattern
   function getCWEid() in line 2191
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCWEid() defined in edu::umd::cs::findbugs::BugPattern
      uses function getBugCode() defined in edu::umd::cs::findbugs::BugPattern
      uses function getCWEid() defined in edu::umd::cs::findbugs::BugCode
   function getDetectorFactory() in line 2768
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detectorFactory defined in edu::umd::cs::findbugs::BugInstance
   function getFieldOrMethodValueSource(@CheckForNull OpcodeStack.Item) in line 2545
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses function setDescription(String) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable LOADED_FROM_ROLE defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable METHOD_RETURN_VALUE_OF defined in edu::umd::cs::findbugs::MethodAnnotation
   function getFirstVersion() in line 2666
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable firstVersion defined in edu::umd::cs::findbugs::BugInstance
   function getInstanceHash() in line 2728
      protection public
      18 lines of code
      0 parameters
      3 conditional paths
      uses variable instanceHash defined in edu::umd::cs::findbugs::BugInstance
      uses function getInstanceKey() defined in edu::umd::cs::findbugs::BugInstance
   function getInstanceKey() in line 564
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getInstanceKeyNew() defined in edu::umd::cs::findbugs::BugInstance
   function getInstanceKeyNew() in line 569
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance::NoSuchBugPattern
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
   function getInstanceOccurrenceMax() in line 2763
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceOccurrenceMax defined in edu::umd::cs::findbugs::BugInstance
   function getInstanceOccurrenceNum() in line 2755
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceOccurrenceNum defined in edu::umd::cs::findbugs::BugInstance
   function getLastVersion() in line 2696
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastVersion defined in edu::umd::cs::findbugs::BugInstance
   function getMessage() in line 2131
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function format(BugAnnotation[],ClassAnnotation) defined in edu::umd::cs::findbugs::FindBugsMessageFormat
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
   function getMessageWithoutPrefix() in line 2092
      protection public
      14 lines of code
      0 parameters
      2 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses function format(BugAnnotation[],ClassAnnotation) defined in edu::umd::cs::findbugs::FindBugsMessageFormat
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLongDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses variable type defined in edu::umd::cs::findbugs::BugInstance::NoSuchBugPattern
   function getMessageWithPriorityType() in line 2148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getPriorityTypeString() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
   function getMessageWithPriorityTypeAbbreviation() in line 2152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getPriorityTypeAbbreviation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
   function getNonnullUserDesignation() in line 675
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
   function getPrimaryClass() in line 443
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrimaryField() in line 459
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrimaryLocalVariableAnnotation() in line 501
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
   function getPrimaryMethod() in line 451
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrimarySourceLineAnnotation() in line 517
      protection public
      31 lines of code
      0 parameters
      8 conditional paths
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses function getDescription() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function isUnknown() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function inspectPackageMemberSourceLines(PackageMemberAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
   function getPriority() in line 347
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
   function getPriorityAbbreviation() in line 404
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getPriorityString() defined in edu::umd::cs::findbugs::BugInstance
   function getPriorityString() in line 384
      protection public
      19 lines of code
      0 parameters
      5 conditional paths
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function getPriorityTypeAbbreviation() in line 374
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getPriorityAbbreviation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategoryAbbrev() defined in edu::umd::cs::findbugs::BugInstance
   function getPriorityTypeString() in line 365
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function getPriorityString() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugCategoryDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
   function getProperty(String) in line 909
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function lookupProperty(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getValue() defined in edu::umd::cs::findbugs::BugProperty
   function getProperty(String,String) in line 925
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getProperty(String) defined in edu::umd::cs::findbugs::BugInstance
   function getSomeSource(ClassContext,Method,Location,OpcodeStack,int) in line 2450
      protection public
      17 lines of code
      5 parameters
      3 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getValueSource(OpcodeStack.Item,Method,int) defined in edu::umd::cs::findbugs::BugInstance
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
   function getSourceForStackValue(ClassContext,Method,Location,int) in line 2435
      protection public
      13 lines of code
      4 parameters
      3 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getSomeSource(ClassContext,Method,Location,OpcodeStack,int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable ASSERTIONS_ENABLED defined in edu::umd::cs::findbugs::SystemProperties
   function getSourceForTopStackValue(ClassContext,Method,Location) in line 2430
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function getSourceForStackValue(ClassContext,Method,Location,int) defined in edu::umd::cs::findbugs::BugInstance
   function getTextAnnotationWords() in line 819
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function getAnnotationText() defined in edu::umd::cs::findbugs::BugInstance
   function getType() in line 324
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance::NoSuchBugPattern
   function getUserDesignation() in line 656
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses function hasAnnotationText() defined in edu::umd::cs::findbugs::BugDesignation
      uses function hasDesignationKey() defined in edu::umd::cs::findbugs::BugDesignation
   function getUserDesignationKey() in line 695
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::BugDesignation
      uses function getDesignationKey() defined in edu::umd::cs::findbugs::BugDesignation
   function getUserDesignationKeyIndex() in line 716
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getUserDesignationKeys() defined in edu::umd::cs::findbugs::I18N
      uses function getUserDesignationKey() defined in edu::umd::cs::findbugs::BugInstance
   function getUserName() in line 702
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses function getUser() defined in edu::umd::cs::findbugs::BugDesignation
   function getUserTimestamp() in line 709
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses function getTimestamp() defined in edu::umd::cs::findbugs::BugDesignation
   function getValueSource(OpcodeStack.Item,Method,int) in line 2469
      protection public
      24 lines of code
      3 parameters
      5 conditional paths
      uses function isNamed() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function getFieldOrMethodValueSource(@CheckForNull OpcodeStack.Item) defined in edu::umd::cs::findbugs::BugInstance
      uses function setDescription(String) defined in edu::umd::cs::findbugs::BugAnnotation
      uses variable STRING_CONSTANT_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
      uses variable INT_VALUE defined in edu::umd::cs::findbugs::IntAnnotation
   function getXmlProps() in line 834
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable xmlProps defined in edu::umd::cs::findbugs::BugInstance
   function hashCode() in line 2581
      protection public
      15 lines of code
      0 parameters
      4 conditional paths
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::BugInstance
      uses variable INVALID_HASH_CODE defined in edu::umd::cs::findbugs::BugInstance
      uses variable type defined in edu::umd::cs::findbugs::BugInstance::NoSuchBugPattern
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
   function hasSomeUserAnnotation() in line 847
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getAnnotationText() defined in edu::umd::cs::findbugs::BugInstance
      uses function getUserDesignationKey() defined in edu::umd::cs::findbugs::BugInstance
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::BugDesignation
   function hasXmlProps() in line 829
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable xmlProps defined in edu::umd::cs::findbugs::BugInstance
   function inspectPackageMemberSourceLines(PackageMemberAnnotation) in line 591
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSourceLines() defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function isDead() in line 2700
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastVersion defined in edu::umd::cs::findbugs::BugInstance
   function isExperimental() in line 435
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function isExperimental() defined in edu::umd::cs::findbugs::BugPattern
   function isInstanceHashConsistent() in line 2747
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable oldInstanceHash defined in edu::umd::cs::findbugs::BugInstance
      uses function getInstanceHash() defined in edu::umd::cs::findbugs::BugInstance
   function isIntroducedByChangeOfExistingClass() in line 2708
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable introducedByChangeOfExistingClass defined in edu::umd::cs::findbugs::BugInstance
   function isRemovedByChangeOfPersistingClass() in line 2716
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable removedByChangeOfPersistingClass defined in edu::umd::cs::findbugs::BugInstance
   function isUserAnnotationDirty() in line 797
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses function getUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function isDirty() defined in edu::umd::cs::findbugs::BugDesignation
   function lookupProperty(String) in line 968
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable propertyListHead defined in edu::umd::cs::findbugs::BugInstance
      uses function getName() defined in edu::umd::cs::findbugs::BugProperty
   function lowerPriority() in line 424
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function boundedPriority(int) defined in edu::umd::cs::findbugs::BugInstance
   function lowerPriorityALot() in line 428
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function boundedPriority(int) defined in edu::umd::cs::findbugs::BugInstance
   function lowerPriorityIfDeprecated() in line 464
      protection public
      11 lines of code
      0 parameters
      7 conditional paths
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses function isDeprecated() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function lowerPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function getDescription() defined in edu::umd::cs::findbugs::BugAnnotation
   function optionalAdd(Collection< BugAnnotation >,BugAnnotation) in line 2772
      5 lines of code
      2 parameters
      2 conditional paths
   function propertyIterator() in line 935
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function raisePriority() in line 419
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function boundedPriority(int) defined in edu::umd::cs::findbugs::BugInstance
   function setAdjustExperimental(boolean) in line 311
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable adjustExperimental defined in edu::umd::cs::findbugs::BugInstance
   function setAnnotationText(String,@CheckForNull BugCollection) in line 745
      protection public
      15 lines of code
      2 parameters
      4 conditional paths
      uses function getNonnullUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getNonnullAnnotationText() defined in edu::umd::cs::findbugs::BugDesignation
      uses function setAnnotationText(String) defined in edu::umd::cs::findbugs::BugDesignation
      uses function storeUserAnnotation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
   function setFirstVersion(long) in line 2652
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable lastVersion defined in edu::umd::cs::findbugs::BugInstance
      uses variable firstVersion defined in edu::umd::cs::findbugs::BugInstance
   function setHistory(BugInstance) in line 2670
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
      uses function setFirstVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses function setLastVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses variable removedByChangeOfPersistingClass defined in edu::umd::cs::findbugs::BugInstance
      uses variable introducedByChangeOfExistingClass defined in edu::umd::cs::findbugs::BugInstance
   function setInstanceHash(String) in line 2720
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceHash defined in edu::umd::cs::findbugs::BugInstance
   function setInstanceOccurrenceMax(int) in line 2759
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceOccurrenceMax defined in edu::umd::cs::findbugs::BugInstance
   function setInstanceOccurrenceNum(int) in line 2751
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceOccurrenceNum defined in edu::umd::cs::findbugs::BugInstance
   function setIntroducedByChangeOfExistingClass(boolean) in line 2704
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable introducedByChangeOfExistingClass defined in edu::umd::cs::findbugs::BugInstance
   function setLastVersion(long) in line 2684
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable lastVersion defined in edu::umd::cs::findbugs::BugInstance
      uses variable firstVersion defined in edu::umd::cs::findbugs::BugInstance
   function setLive() in line 2692
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setOldInstanceHash(String) in line 2724
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable oldInstanceHash defined in edu::umd::cs::findbugs::BugInstance
   function setPriority(int) in line 411
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function boundedPriority(int) defined in edu::umd::cs::findbugs::BugInstance
   function setProperty(String,String) in line 949
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function lookupProperty(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function setValue(String) defined in edu::umd::cs::findbugs::BugProperty
      uses function addProperty(BugProperty) defined in edu::umd::cs::findbugs::BugInstance
   function setRemovedByChangeOfPersistingClass(boolean) in line 2712
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable removedByChangeOfPersistingClass defined in edu::umd::cs::findbugs::BugInstance
   function setUser(String) in line 779
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses function getNonnullUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function setUser(String) defined in edu::umd::cs::findbugs::BugDesignation
   function setUserAnnotationDirty(boolean) in line 789
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses function getUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function setDirty(boolean) defined in edu::umd::cs::findbugs::BugDesignation
   function setUserAnnotationTimestamp(long) in line 784
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses function getNonnullUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::BugDesignation
   function setUserDesignation(BugDesignation) in line 641
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
   function setUserDesignationKey(String,@CheckForNull BugCollection) in line 720
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses function getNonnullUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getDesignationKey() defined in edu::umd::cs::findbugs::BugDesignation
      uses function setDesignationKey(String) defined in edu::umd::cs::findbugs::BugDesignation
      uses function storeUserAnnotation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
   function setUserDesignationKeyIndex(int,@CheckForNull BugCollection) in line 735
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function setUserDesignationKey(String,@CheckForNull BugCollection) defined in edu::umd::cs::findbugs::BugInstance
      uses function getUserDesignationKey(int) defined in edu::umd::cs::findbugs::I18N
   function toString() in line 2176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getShortMessage(String) defined in edu::umd::cs::findbugs::I18N
      uses variable type defined in edu::umd::cs::findbugs::BugInstance::NoSuchBugPattern
   function tryAddingOptionalUniqueAnnotations(BugAnnotation...) in line 2521
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function writeXML(XMLOutput) in line 2187
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,BugCollection,boolean) in line 2201
      protection public
      164 lines of code
      3 parameters
      35 conditional paths
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable type defined in edu::umd::cs::findbugs::BugInstance::NoSuchBugPattern
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugRank() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getInstanceHash() defined in edu::umd::cs::findbugs::BugInstance
      uses function getInstanceOccurrenceNum() defined in edu::umd::cs::findbugs::BugInstance
      uses function getInstanceOccurrenceMax() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCWEid() defined in edu::umd::cs::findbugs::BugInstance
      uses variable oldInstanceHash defined in edu::umd::cs::findbugs::BugInstance
      uses function isInstanceHashConsistent() defined in edu::umd::cs::findbugs::BugInstance
      uses variable firstVersion defined in edu::umd::cs::findbugs::BugInstance
      uses variable lastVersion defined in edu::umd::cs::findbugs::BugInstance
      uses variable introducedByChangeOfExistingClass defined in edu::umd::cs::findbugs::BugInstance
      uses variable removedByChangeOfPersistingClass defined in edu::umd::cs::findbugs::BugInstance
      uses function communicationInitiated() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getFirstSeen(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function firstSeenXMLFormat() defined in edu::umd::cs::findbugs::BugInstance
      uses function getNumberReviewers(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getConsensusDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function isInCloud(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function ageInDays(BugCollection,long) defined in edu::umd::cs::findbugs::BugInstance
      uses function score() defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function hasXmlProps() defined in edu::umd::cs::findbugs::BugInstance
      uses function getXmlProps() defined in edu::umd::cs::findbugs::BugInstance
      uses variable firstSeen defined in edu::umd::cs::findbugs::BugInstance::XmlProps
      uses function addOptionalAttribute(@Nonnull String,@CheckForNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable reviewCount defined in edu::umd::cs::findbugs::BugInstance::XmlProps
      uses variable consensus defined in edu::umd::cs::findbugs::BugInstance::XmlProps
      uses variable isInCloud defined in edu::umd::cs::findbugs::BugInstance::XmlProps
      uses function shouldFix() defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function notAProblem() defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::BugInstance
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::BugDesignation
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses function getAbridgedMessage() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMessageWithoutPrefix() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses function setSynthetic(boolean) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable propertyListHead defined in edu::umd::cs::findbugs::BugInstance
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::BugProperty
   function BugInstance(String,int) in line 192
      protection public
      22 lines of code
      2 parameters
      4 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance::NoSuchBugPattern
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses variable lastVersion defined in edu::umd::cs::findbugs::BugInstance
      uses variable xmlProps defined in edu::umd::cs::findbugs::BugInstance
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::BugInstance
      uses variable INVALID_HASH_CODE defined in edu::umd::cs::findbugs::BugInstance
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable missingBugTypes defined in edu::umd::cs::findbugs::BugInstance
      uses function NoSuchBugPattern(String) defined in edu::umd::cs::findbugs::BugInstance::NoSuchBugPattern
      uses function getPriorityAdjustment() defined in edu::umd::cs::findbugs::BugPattern
      uses variable adjustExperimental defined in edu::umd::cs::findbugs::BugInstance
      uses function isExperimental() defined in edu::umd::cs::findbugs::BugInstance
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function boundPriority() defined in edu::umd::cs::findbugs::BugInstance
   function BugInstance(Detector,String,int) in line 261
      protection public
      9 lines of code
      3 parameters
      2 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance::NoSuchBugPattern
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function adjustForDetector(String) defined in edu::umd::cs::findbugs::BugInstance
   function BugInstance(Detector2,String,int) in line 300
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance::NoSuchBugPattern
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function getDetectorClassName() defined in edu::umd::cs::findbugs::Detector2
      uses function adjustForDetector(String) defined in edu::umd::cs::findbugs::BugInstance
   variable adjustExperimental in line 172
   variable annotationList in line 125
   variable cachedHashCode in line 127
   variable detectorFactory in line 143
   variable ELEMENT_NAME in line 166
   variable firstVersion in line 152
   variable instanceHash in line 136
   variable instanceOccurrenceMax in line 140
   variable instanceOccurrenceNum in line 138
   variable introducedByChangeOfExistingClass in line 156
   variable INVALID_HASH_CODE in line 164
   variable lastVersion in line 154
   variable missingBugTypes in line 174
   variable oldInstanceHash in line 134
   variable priority in line 123
   variable propertyListHead in line 132
   variable removedByChangeOfPersistingClass in line 158
   variable serialVersionUID in line 119
   variable type in line 121
   variable userDesignation in line 130
   variable xmlProps in line 145
module edu::umd::cs::findbugs::BugInstance::NoSuchBugPattern
   inherits from IllegalArgumentException
   function NoSuchBugPattern(String) in line 178
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance::NoSuchBugPattern
   variable type in line 177
      protection public
module edu::umd::cs::findbugs::BugInstance::BugPropertyIterator
   inherits from java::util::Iterator
   function findNext() in line 896
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyListHead defined in edu::umd::cs::findbugs::BugInstance
   function hasNext() in line 864
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 869
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
   function remove() in line 881
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable propertyListHead defined in edu::umd::cs::findbugs::BugInstance
   variable prev in line 859
   variable removed in line 861
module edu::umd::cs::findbugs::BugInstance::XmlProps
   function getConsensus() in line 2855
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFirstSeen() in line 2847
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getReviewCount() in line 2851
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isInCloud() in line 2859
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setConsensus(String) in line 2871
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFirstSeen(Date) in line 2863
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsInCloud(boolean) in line 2875
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setReviewCount(int) in line 2867
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable consensus in line 2845
   variable firstSeen in line 2839
   variable isInCloud in line 2843
   variable reviewCount in line 2841
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/BugPattern.java
module edu::umd::cs::findbugs::BugPattern
   inherits from Comparable
   function adjustPriority(int) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function compareTo(BugPattern) in line 244
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugPattern
   function equals(Object) in line 254
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function BugPattern(String,String,String,boolean,String,String,String) defined in edu::umd::cs::findbugs::BugPattern
      uses variable type defined in edu::umd::cs::findbugs::BugPattern
   function getAbbrev() in line 129
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugPattern
   function getBugCode() in line 136
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBugCode(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable abbrev defined in edu::umd::cs::findbugs::BugPattern
   function getCategory() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugPattern
   function getCategoryAbbrev() in line 155
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses function getBugCategory(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugCategory
   function getCWEid() in line 265
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDetailHTML() in line 210
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDetailText() defined in edu::umd::cs::findbugs::BugPattern
   function getDetailHTML(String) in line 214
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses function wrapInDescriptionLink(String) defined in edu::umd::cs::findbugs::BugPattern
      uses variable detailText defined in edu::umd::cs::findbugs::BugPattern
   function getDetailPlainText() in line 198
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable detailText defined in edu::umd::cs::findbugs::BugPattern
   function getDetailText() in line 191
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detailText defined in edu::umd::cs::findbugs::BugPattern
   function getLongDescription() in line 184
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable longDescription defined in edu::umd::cs::findbugs::BugPattern
   function getPriorityAdjustment() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getShortDescription() in line 177
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable shortDescription defined in edu::umd::cs::findbugs::BugPattern
   function getType() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugPattern
   function hashCode() in line 249
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugPattern
   function isDeprecated() in line 289
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable deprecated defined in edu::umd::cs::findbugs::BugPattern
   function isExperimental() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable experimental defined in edu::umd::cs::findbugs::BugPattern
   function toString() in line 270
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugPattern
      uses variable deprecated defined in edu::umd::cs::findbugs::BugPattern
   function wrapInDescriptionLink(String) in line 230
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses function isExperimental() defined in edu::umd::cs::findbugs::BugPattern
      uses variable type defined in edu::umd::cs::findbugs::BugPattern
   function BugPattern(String,String,String,boolean,String,String,String) in line 75
      protection public
      4 lines of code
      7 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugPattern
      uses variable abbrev defined in edu::umd::cs::findbugs::BugPattern
      uses variable category defined in edu::umd::cs::findbugs::BugPattern
      uses variable experimental defined in edu::umd::cs::findbugs::BugPattern
      uses variable shortDescription defined in edu::umd::cs::findbugs::BugPattern
      uses variable longDescription defined in edu::umd::cs::findbugs::BugPattern
      uses variable detailText defined in edu::umd::cs::findbugs::BugPattern
   function BugPattern(String,String,String,boolean,String,String,String,int) in line 99
      protection public
      12 lines of code
      8 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugPattern
      uses variable abbrev defined in edu::umd::cs::findbugs::BugPattern
      uses variable category defined in edu::umd::cs::findbugs::BugPattern
      uses variable experimental defined in edu::umd::cs::findbugs::BugPattern
      uses variable shortDescription defined in edu::umd::cs::findbugs::BugPattern
      uses variable longDescription defined in edu::umd::cs::findbugs::BugPattern
      uses variable detailText defined in edu::umd::cs::findbugs::BugPattern
      uses function BugPattern(String,String,String,boolean,String,String,String) defined in edu::umd::cs::findbugs::BugPattern
   variable abbrev in line 38
   variable category in line 40
   variable deprecated in line 54
   variable detailText in line 48
   variable experimental in line 42
   variable longDescription in line 46
   variable shortDescription in line 44
   variable type in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/BugProperty.java
module edu::umd::cs::findbugs::BugProperty
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   inherits from java::io::Serializable
   inherits from Cloneable
   function clone() in line 73
      7 lines of code
      0 parameters
      2 conditional paths
   function getName() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::BugProperty
   function getValue() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::BugProperty
   function getValueAsBoolean() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getValue() defined in edu::umd::cs::findbugs::BugProperty
   function getValueAsInt() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getValue() defined in edu::umd::cs::findbugs::BugProperty
   function setValue(String) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::BugProperty
      uses variable next defined in edu::umd::cs::findbugs::BugProperty
   function writeXML(XMLOutput) in line 155
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::BugProperty
      uses function getValue() defined in edu::umd::cs::findbugs::BugProperty
   variable IS_BUG in line 44
      protection public
   variable name in line 53
   variable next in line 57
   variable serialVersionUID in line 37
   variable SEVERITY in line 50
      protection public
   variable value in line 55
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/BugRankCategory.java
module edu::umd::cs::findbugs::BugRankCategory
   function getRank(int) in line 37
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function toString() in line 51
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function BugRankCategory(int) in line 46
      3 lines of code
      1 parameters
      1 conditional paths
   variable maxRank in line 34
      protection public
   variable OF_CONCERN in line 32
      protection public
   variable SCARIEST in line 32
      protection public
   variable SCARY in line 32
      protection public
   variable TROUBLING in line 32
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/BugRanker.java
module edu::umd::cs::findbugs::BugRanker
   function adjustRank(int,int) in line 198
      7 lines of code
      2 parameters
      2 conditional paths
      uses function priorityAdjustment(int) defined in edu::umd::cs::findbugs::BugRanker
      uses variable VISIBLE_RANK_MAX defined in edu::umd::cs::findbugs::BugRanker
      uses variable VISIBLE_RANK_MIN defined in edu::umd::cs::findbugs::BugRanker
   function findRank(BugInstance) in line 245
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getDetectorFactory() defined in edu::umd::cs::findbugs::BugInstance
      uses function adjustRank(int,int) defined in edu::umd::cs::findbugs::BugRanker
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
   function findRank(BugPattern,int) in line 250
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function findRank(BugInstance) defined in edu::umd::cs::findbugs::BugRanker
      uses function adjustRank(int,int) defined in edu::umd::cs::findbugs::BugRanker
      uses variable rankForBugPattern defined in edu::umd::cs::findbugs::BugRanker
   function findRank(BugPattern,@CheckForNull DetectorFactory) in line 265
      protection public
      28 lines of code
      2 parameters
      6 conditional paths
      uses variable rankForBugPattern defined in edu::umd::cs::findbugs::BugRanker
      uses function findRankUnknownPlugin(BugPattern) defined in edu::umd::cs::findbugs::BugRanker
      uses function getBugRanker() defined in edu::umd::cs::findbugs::Plugin
      uses function getCoreRanker() defined in edu::umd::cs::findbugs::BugRanker
      uses function rankBugPattern(BugPattern,BugRanker...) defined in edu::umd::cs::findbugs::BugRanker
   function findRankUnknownPlugin(BugPattern) in line 294
      30 lines of code
      1 parameters
      8 conditional paths
      uses function getCoreRanker() defined in edu::umd::cs::findbugs::BugRanker
      uses function rankBugPattern(BugPattern,BugRanker...) defined in edu::umd::cs::findbugs::BugRanker
   function getCoreRanker() in line 240
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getPlugin() defined in edu::umd::cs::findbugs::PluginLoader
      uses function getBugRanker() defined in edu::umd::cs::findbugs::Plugin
   function priorityAdjustment(int) in line 185
      12 lines of code
      1 parameters
      4 conditional paths
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function rankBugPattern(BugPattern,BugRanker...) in line 206
      31 lines of code
      2 parameters
      10 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::BugPattern
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
   function trimToMaxRank(BugCollection,int) in line 325
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses function findRank(BugInstance) defined in edu::umd::cs::findbugs::BugRanker
   variable ADJUST_FILENAME in line 183
      protection public
   variable bugCategories in line 176
   variable bugKinds in line 174
   variable bugPatterns in line 172
   variable FILENAME in line 181
      protection public
   variable rankForBugPattern in line 256
   variable VISIBLE_RANK_MAX in line 89
      protection public
   variable VISIBLE_RANK_MIN in line 91
      protection public
module edu::umd::cs::findbugs::BugRanker::Scorer
   variable adjustment in line 96
   variable isRelative in line 98
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/BugReporter.java
module edu::umd::cs::findbugs::BugReporter
   inherits from edu::umd::cs::findbugs::ba::RepositoryLookupFailureCallback
   inherits from edu::umd::cs::findbugs::classfile::IClassObserver
   function addObserver(BugReporterObserver) in line 91
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function finish() in line 78
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBugCollection() in line 103
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getProjectStats() in line 97
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function reportBug(@Nonnull BugInstance) in line 72
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reportQueuedErrors() in line 83
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setErrorVerbosity(int) in line 54
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setPriorityThreshold(int) in line 63
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable NORMAL in line 46
      protection public
   variable SILENT in line 41
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/bugReporter/BugReporterDecorator.java
module edu::umd::cs::findbugs::bugReporter::BugReporterDecorator
   inherits from edu::umd::cs::findbugs::DelegatingBugReporter
   abstract class
   function construct(ComponentPlugin< BugReporterDecorator >,BugReporter) in line 35
      protection public
      16 lines of code
      2 parameters
      2 conditional paths
      uses function getComponentClass() defined in edu::umd::cs::findbugs::ComponentPlugin
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function getId() defined in edu::umd::cs::findbugs::ComponentPlugin
   function BugReporterDecorator(ComponentPlugin< BugReporterDecorator >,BugReporter) in line 54
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/bugReporter/MaxRankDecorator.java
module edu::umd::cs::findbugs::bugReporter::MaxRankDecorator
   inherits from edu::umd::cs::findbugs::bugReporter::BugReporterDecorator
   function reportBug(@Nonnull BugInstance) in line 41
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getDelegate() defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function MaxRankDecorator(ComponentPlugin< BugReporterDecorator >,BugReporter) in line 35
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function getProperties() defined in edu::umd::cs::findbugs::ComponentPlugin
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/bugReporter/SuppressionDecorator.java
module edu::umd::cs::findbugs::bugReporter::SuppressionDecorator
   inherits from edu::umd::cs::findbugs::bugReporter::BugReporterDecorator
   function processPackageList(@WillClose Reader) in line 93
      23 lines of code
      1 parameters
      6 conditional paths
   function reportBug(@Nonnull BugInstance) in line 118
      protection public
      29 lines of code
      1 parameters
      7 conditional paths
      uses function getDelegate() defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function SuppressionDecorator(ComponentPlugin< BugReporterDecorator >,BugReporter) in line 51
      protection public
      37 lines of code
      2 parameters
      8 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function getProperties() defined in edu::umd::cs::findbugs::ComponentPlugin
      uses function getBugCategory(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function processPackageList(@WillClose Reader) defined in edu::umd::cs::findbugs::bugReporter::SuppressionDecorator
      uses function getPlugin() defined in edu::umd::cs::findbugs::ComponentPlugin
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/BugReporterObserver.java
module edu::umd::cs::findbugs::BugReporterObserver
   function reportBug(BugInstance) in line 38
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ByteCodePatternDetector.java
module edu::umd::cs::findbugs::ByteCodePatternDetector
   inherits from edu::umd::cs::findbugs::Detector
   abstract class
   function getBugReporter() in line 48
      1 lines of code
      0 parameters
      1 conditional paths
   function getDetectorName() in line 107
      8 lines of code
      0 parameters
      2 conditional paths
   function getPattern() in line 123
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function prescreen(Method,ClassContext) in line 147
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function report() in line 117
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
      uses function getPattern() defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses function prescreen(Method,ClassContext) defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses function reportMatch(ClassContext,Method,ByteCodePatternMatch) defined in edu::umd::cs::findbugs::ByteCodePatternDetector
   function reportMatch(ClassContext,Method,ByteCodePatternMatch) in line 160
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 51
      protection public
      55 lines of code
      1 parameters
      11 conditional paths
      uses function getPattern() defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable METHOD defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses variable DEBUG defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses function prescreen(Method,ClassContext) defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function byteCodePatternMatchIterator() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function patternElementMatchIterator() defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses function toString() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function reportMatch(ClassContext,Method,ByteCodePatternMatch) defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses function getBugReporter() defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getDetectorName() defined in edu::umd::cs::findbugs::ByteCodePatternDetector
   variable DEBUG in line 44
   variable METHOD in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/BytecodeScanningDetector.java
module edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::visitclass::DismantleBytecode
   inherits from edu::umd::cs::findbugs::Detector
   function getClassContext() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
   function report() in line 62
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function shouldVisitCode(Code) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 36
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   variable classContext in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/CallGraph.java
module edu::umd::cs::findbugs::CallGraph
   inherits from edu::umd::cs::findbugs::graph::AbstractGraph
   function addNode(Method) in line 41
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function addVertex(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable methodToNodeMap defined in edu::umd::cs::findbugs::CallGraph
   function allocateEdge(CallGraphNode,CallGraphNode) in line 54
      3 lines of code
      2 parameters
      1 conditional paths
   function createEdge(CallGraphNode,CallGraphNode,CallSite) in line 35
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   function getNodeForMethod(Method) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodToNodeMap defined in edu::umd::cs::findbugs::CallGraph
   function CallGraph() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable methodToNodeMap in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/CallGraphEdge.java
module edu::umd::cs::findbugs::CallGraphEdge
   inherits from edu::umd::cs::findbugs::graph::AbstractEdge
   function getCalledMethod() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getCallingMethod() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getCallSite() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable callSite defined in edu::umd::cs::findbugs::CallGraphEdge
   variable callSite in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/CallGraphNode.java
module edu::umd::cs::findbugs::CallGraphNode
   inherits from edu::umd::cs::findbugs::graph::AbstractVertex
   function getMethod() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::CallGraphNode
   variable method in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/CallSite.java
module edu::umd::cs::findbugs::CallSite
   function equals(Object) in line 86
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function CallSite(Method,BasicBlock,InstructionHandle) defined in edu::umd::cs::findbugs::CallSite
      uses variable method defined in edu::umd::cs::findbugs::CallSite
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::CallSite
      uses function getHandle() defined in edu::umd::cs::findbugs::CallSite
   function getBasicBlock() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::CallSite
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
   function getHandle() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::CallSite
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function getLocation() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::CallSite
   function getMethod() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::CallSite
   function hashCode() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::CallSite
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::CallSite
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses variable location defined in edu::umd::cs::findbugs::CallSite
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function CallSite(Method,BasicBlock,InstructionHandle) in line 46
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::CallSite
   variable location in line 34
   variable method in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/CategoryFilteringBugReporter.java
module edu::umd::cs::findbugs::CategoryFilteringBugReporter
   inherits from edu::umd::cs::findbugs::DelegatingBugReporter
   function reportBug(@Nonnull BugInstance) in line 40
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses variable categorySet defined in edu::umd::cs::findbugs::CategoryFilteringBugReporter
      uses function getDelegate() defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable DEBUG defined in edu::umd::cs::findbugs::CategoryFilteringBugReporter
   function CategoryFilteringBugReporter(BugReporter,Set< String >) in line 34
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable categorySet defined in edu::umd::cs::findbugs::CategoryFilteringBugReporter
   variable categorySet in line 32
   variable DEBUG in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/charsets/SourceCharset.java
module edu::umd::cs::findbugs::charsets::SourceCharset
   function bufferedReader(InputStream) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable charset defined in edu::umd::cs::findbugs::charsets::SourceCharset
   function fileWriter(File) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable charset defined in edu::umd::cs::findbugs::charsets::SourceCharset
   function fileWriter(String) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable charset defined in edu::umd::cs::findbugs::charsets::SourceCharset
   function printWriter(File) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function fileWriter(File) defined in edu::umd::cs::findbugs::charsets::SourceCharset
   function printWriter(String) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function fileWriter(File) defined in edu::umd::cs::findbugs::charsets::SourceCharset
   variable charset in line 39
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/charsets/UserTextFile.java
module edu::umd::cs::findbugs::charsets::UserTextFile
   function bufferedReader(@WillCloseWhenClosed InputStream) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function reader(@WillCloseWhenClosed InputStream) defined in edu::umd::cs::findbugs::charsets::UserTextFile
   function fileWriter(String) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable charset defined in edu::umd::cs::findbugs::charsets::UserTextFile
   function printWriter(String) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function fileWriter(String) defined in edu::umd::cs::findbugs::charsets::UserTextFile
   function reader(@WillCloseWhenClosed InputStream) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable charset defined in edu::umd::cs::findbugs::charsets::UserTextFile
   variable charset in line 41
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/charsets/UTF8.java
module edu::umd::cs::findbugs::charsets::UTF8
   function bufferedReader(@WillCloseWhenClosed InputStream) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function reader(@WillCloseWhenClosed InputStream) defined in edu::umd::cs::findbugs::charsets::UTF8
   function bufferedWriter(File) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function fileWriter(File) defined in edu::umd::cs::findbugs::charsets::UTF8
   function bufferedWriter(String) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function fileWriter(File) defined in edu::umd::cs::findbugs::charsets::UTF8
   function fileReader(String) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function reader(@WillCloseWhenClosed InputStream) defined in edu::umd::cs::findbugs::charsets::UTF8
   function fileReader(File) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function reader(@WillCloseWhenClosed InputStream) defined in edu::umd::cs::findbugs::charsets::UTF8
   function fileWriter(File) in line 69
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable charset defined in edu::umd::cs::findbugs::charsets::UTF8
   function fileWriter(String) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable charset defined in edu::umd::cs::findbugs::charsets::UTF8
   function getBytes(String) in line 122
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable charset defined in edu::umd::cs::findbugs::charsets::UTF8
   function printStream(OutputStream) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function printStream(OutputStream,boolean) in line 59
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable UTF_8 defined in edu::umd::cs::findbugs::charsets::UTF8
   function printWriter(File) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function bufferedWriter(File) defined in edu::umd::cs::findbugs::charsets::UTF8
   function printWriter(PrintStream) in line 81
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function printStream(OutputStream) defined in edu::umd::cs::findbugs::charsets::UTF8
      uses variable UTF_8 defined in edu::umd::cs::findbugs::charsets::UTF8
   function printWriter(PrintStream,boolean) in line 88
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function printStream(OutputStream) defined in edu::umd::cs::findbugs::charsets::UTF8
      uses variable UTF_8 defined in edu::umd::cs::findbugs::charsets::UTF8
   function printWriter(String) in line 110
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function bufferedWriter(File) defined in edu::umd::cs::findbugs::charsets::UTF8
   function reader(@WillCloseWhenClosed InputStream) in line 114
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable charset defined in edu::umd::cs::findbugs::charsets::UTF8
   function writer(OutputStream) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable charset defined in edu::umd::cs::findbugs::charsets::UTF8
   variable charset in line 50
      protection public
   variable UTF_8 in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/CheckBcel.java
module edu::umd::cs::findbugs::CheckBcel
   function check() in line 95
      protection public
      39 lines of code
      0 parameters
      7 conditional paths
      uses variable ORG_APACHE_BCEL_GENERIC_OBJECT_TYPE defined in edu::umd::cs::findbugs::CheckBcel
      uses variable ORG_APACHE_BCEL_GENERIC_TYPE defined in edu::umd::cs::findbugs::CheckBcel
      uses variable ORG_APACHE_BCEL_CONSTANTS defined in edu::umd::cs::findbugs::CheckBcel
      uses variable ORG_APACHE_BCEL_CLASSFILE_EMPTY_VISITOR defined in edu::umd::cs::findbugs::CheckBcel
      uses variable ORG_APACHE_BCEL_REPOSITORY defined in edu::umd::cs::findbugs::CheckBcel
      uses function isFinal(Class<?>) defined in edu::umd::cs::findbugs::CheckBcel
      uses function error(String) defined in edu::umd::cs::findbugs::CheckBcel
   function error(String) in line 80
      7 lines of code
      1 parameters
      1 conditional paths
   function isFinal(Class<?>) in line 70
      3 lines of code
      1 parameters
      1 conditional paths
   variable ORG_APACHE_BCEL_CLASSFILE_EMPTY_VISITOR in line 46
   variable ORG_APACHE_BCEL_CONSTANTS in line 51
   variable ORG_APACHE_BCEL_GENERIC_OBJECT_TYPE in line 61
   variable ORG_APACHE_BCEL_GENERIC_TYPE in line 56
   variable ORG_APACHE_BCEL_REPOSITORY in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ClassAnnotation.java
module edu::umd::cs::findbugs::ClassAnnotation
   inherits from edu::umd::cs::findbugs::PackageMemberAnnotation
   function accept(BugAnnotationVisitor) in line 90
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitClassAnnotation(ClassAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function compareTo(BugAnnotation) in line 137
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function ClassAnnotation(@DottedClassName String) defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function contains(ClassAnnotation) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function equals(Object) in line 115
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function ClassAnnotation(@DottedClassName String) defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function formatPackageMember(String,ClassAnnotation) in line 95
      13 lines of code
      2 parameters
      5 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function fromClassDescriptor(ClassDescriptor) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function ClassAnnotation(@DottedClassName String) defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getSourceLines() in line 153
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable sourceLines defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function getSourceLinesForClass(@DottedClassName String,String) defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable sourceFileName defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function getSourceLinesForClass(@DottedClassName String,String) in line 160
      protection public
      18 lines of code
      2 parameters
      3 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable sourceFileName defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function getSourceInfoMap() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassLine(String) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function getTopLevelClass() in line 127
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function ClassAnnotation(@DottedClassName String) defined in edu::umd::cs::findbugs::ClassAnnotation
   function hashCode() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function isSignificant() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable SUBCLASS_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable description defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function writeXML(XMLOutput) in line 188
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean,boolean) in line 193
      protection public
      21 lines of code
      3 parameters
      4 conditional paths
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function getSourceLines() defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable MESSAGE_TAG defined in edu::umd::cs::findbugs::BugAnnotation
      uses function toString() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function ClassAnnotation(@DottedClassName String) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
   function ClassAnnotation(@DottedClassName String,String) in line 69
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable sourceFileName defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   variable ANNOTATION_ROLE in line 54
      protection public
   variable DEFAULT_ROLE in line 42
   variable ELEMENT_NAME in line 185
   variable IMPLEMENTED_INTERFACE_ROLE in line 50
      protection public
   variable INTERFACE_ROLE in line 52
      protection public
   variable RECOMMENDED_SUPERCLASS_ROLE in line 48
      protection public
   variable serialVersionUID in line 40
   variable SUBCLASS_ROLE in line 44
      protection public
   variable SUPERCLASS_ROLE in line 46
      protection public
   variable TYPE_QUALIFIER_ROLE in line 56
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/analysis/AnnotatedObject.java
module edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function getAnnotation(ClassDescriptor) in line 40
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getAnnotationDescriptors() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getAnnotations() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getClassDescriptor() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getContainingScope() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getElementType() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isSynthetic() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/analysis/AnnotationValue.java
module edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function canonicalString(String) in line 103
      6 lines of code
      1 parameters
      2 conditional paths
   function getAnnotationClass() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable annotationClass defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function getAnnotationVisitor() in line 113
      protection public
      62 lines of code
      0 parameters
      1 conditional paths
      uses variable ASM_VERSION defined in edu::umd::cs::findbugs::classfile::engine::asm::FindBugsASM
      uses function canonicalString(String) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses variable valueMap defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses function AnnotationValue(ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses variable typeMap defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses function getAnnotationVisitor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function getDesc(String) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable typeMap defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function getValue(String) in line 83
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable valueMap defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function toString() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable annotationClass defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses variable valueMap defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function AnnotationValue(ClassDescriptor) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable annotationClass defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function AnnotationValue(String) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable annotationClass defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   variable annotationClass in line 39
   variable typeMap in line 43
   variable valueMap in line 41
module edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
   inherits from org::objectweb::asm::AnnotationVisitor
   function visit(String,Object) in line 207
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable result defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
   function visitAnnotation(String,String) in line 212
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function AnnotationValue(ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses variable result defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
      uses function getAnnotationVisitor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function visitArray(String) in line 219
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function AnnotationArrayVisitor(String) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
      uses variable result defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
   function visitEnd() in line 224
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
      uses variable valueMap defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses variable result defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
      uses variable outerList defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
   function visitEnum(String,String,String) in line 233
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable result defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
   function AnnotationArrayVisitor(String) in line 193
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable ASM_VERSION defined in edu::umd::cs::findbugs::classfile::engine::asm::FindBugsASM
      uses variable name defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
      uses function canonicalString(String) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function AnnotationArrayVisitor(List< Object >) in line 200
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable ASM_VERSION defined in edu::umd::cs::findbugs::classfile::engine::asm::FindBugsASM
      uses variable outerList defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue::AnnotationArrayVisitor
   variable name in line 180
   variable outerList in line 182
   variable result in line 187
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/analysis/ClassData.java
module edu::umd::cs::findbugs::classfile::analysis::ClassData
   function getClassDescriptor() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
   function getCodeBaseEntry() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
   function getData() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable data defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
   function getInputStream() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable data defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
   function toString() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
   function ClassData(ClassDescriptor,ICodeBaseEntry,byte[]) in line 48
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses variable data defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
   variable classDescriptor in line 34
   variable codeBaseEntry in line 36
   variable data in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/analysis/ClassInfo.java
module edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   inherits from edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   inherits from edu::umd::cs::findbugs::ba::XClass
   function addAnnotation(AnnotationValue) in line 393
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getAnnotationClass() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function computeMethodsInCallOrder() in line 192
      23 lines of code
      0 parameters
      2 conditional paths
      uses variable xMethods defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses function get(K) defined in edu::umd::cs::findbugs::util::MultiMap
      uses function getMethodCallCount() defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function findField(String,String,boolean) in line 307
      protection public
      33 lines of code
      3 parameters
      9 conditional paths
      uses variable xFields defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function findField(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
   function findMatchingMethod(MethodDescriptor) in line 302
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function findMethod(String,String,boolean) in line 282
      protection public
      10 lines of code
      3 parameters
      3 conditional paths
      uses variable xMethods defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   function findMethod(MethodDescriptor) in line 294
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function findMatchingMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   function getAnnotation(ClassDescriptor) in line 378
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getAnnotationDescriptors() in line 368
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAnnotations() in line 373
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getContainingScope() in line 418
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable containingScopeCached defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses function getContainingScope0() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   function getContainingScope0() in line 427
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable immediateEnclosingClass defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getImmediateEnclosingClass() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getSlashedPackageName() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   function getElementType() in line 400
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function isAnnotation() defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   function getImmediateEnclosingClass() in line 342
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable immediateEnclosingClass defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function getPackageName() in line 347
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getSlashedPackageName() in line 357
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getSource() in line 412
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function getSourceSignature() in line 443
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classSourceSignature defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function getXFields() in line 268
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable xFields defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   function getXMethods() in line 273
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable xMethods defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   function getXMethodsInCallOrder() in line 277
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodsInCallOrder defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   function hasStubs() in line 453
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function usesConcurrency() in line 448
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ClassInfo(ClassDescriptor,String,ClassDescriptor,ClassDescriptor[],ICodeBaseEntry,int,String,int,int,Collection< ClassDescriptor >,Set< ClassDescriptor >,Map< ClassDescriptor, AnnotationValue >,FieldInfo[],MethodInfo[],ClassDescriptor,boolean,boolean) in line 236
      30 lines of code
      17 parameters
      2 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses variable classSourceSignature defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses variable EMPTY_ARRAY defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
      uses variable methodInfoList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses variable immediateEnclosingClass defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses function computeMethodsInCallOrder() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   variable classSourceSignature in line 68
   variable containingScopeCached in line 79
   variable hasStubs in line 74
   variable immediateEnclosingClass in line 64
   variable methodsInCallOrder in line 62
   variable source in line 70
   variable usesConcurrency in line 72
   variable xFields in line 58
   variable xMethods in line 60
module edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   inherits from edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo::Builder
   function addAnnotation(String,AnnotationValue) in line 150
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function addBridgeMethodDescriptor(MethodInfo,String) in line 171
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable bridgedSignatures defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses function addMethodDescriptor(MethodInfo) defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function addFieldDescriptor(FieldInfo) in line 159
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fieldInfoList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function addMethodDescriptor(MethodInfo) in line 167
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodInfoList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function build() in line 104
      protection public
      33 lines of code
      0 parameters
      6 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable fieldInfoList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses variable EMPTY_ARRAY defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
      uses variable bridgedSignatures defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses variable methodInfoList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function setBridgeMethod(MethodInfo,MethodInfo) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable EMPTY_ARRAY defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
      uses function ClassInfo(ClassDescriptor,String,ClassDescriptor,ClassDescriptor[],ICodeBaseEntry,int,String,int,int,Collection< ClassDescriptor >,Set< ClassDescriptor >,Map< ClassDescriptor, AnnotationValue >,FieldInfo[],MethodInfo[],ClassDescriptor,boolean,boolean) defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses variable classSourceSignature defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses variable source defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses variable immediateEnclosingClass defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function getClassDescriptor() in line 142
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setFieldDescriptorList(FieldInfo[]) in line 155
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHasStubs() in line 186
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setImmediateEnclosingClass(ClassDescriptor) in line 178
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable immediateEnclosingClass defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function setMethodDescriptorList(MethodInfo[]) in line 163
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSource(String) in line 138
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function setSourceSignature(String) in line 146
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classSourceSignature defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function setUsesConcurrency() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable bridgedSignatures in line 89
   variable classSourceSignature in line 95
   variable fieldInfoList in line 82
   variable immediateEnclosingClass in line 91
   variable methodInfoList in line 84
   variable source in line 97
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/analysis/ClassNameAndSuperclassInfo.java
module edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   inherits from edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getAccessFlags() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCalledClassDescriptors() in line 207
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getClassDescriptor() in line 186
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCodeBaseEntry() in line 193
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInterfaceDescriptorList() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMajorVersion() in line 172
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMinorVersion() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSuperclassDescriptor() in line 214
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isAbstract() in line 246
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable ACC_ABSTRACT defined in edu::umd::cs::findbugs::classfile::IClassConstants
   function isAnnotation() in line 250
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable ACC_ANNOTATION defined in edu::umd::cs::findbugs::classfile::IClassConstants
   function isDeprecated() in line 258
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   function isFinal() in line 222
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable ACC_FINAL defined in edu::umd::cs::findbugs::classfile::IClassConstants
   function isFlagSet(int) in line 218
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAccessFlags() defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   function isInterface() in line 242
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable ACC_INTERFACE defined in edu::umd::cs::findbugs::classfile::IClassConstants
   function isPrivate() in line 226
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable ACC_PRIVATE defined in edu::umd::cs::findbugs::classfile::IClassConstants
   function isProtected() in line 230
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable ACC_PROTECTED defined in edu::umd::cs::findbugs::classfile::IClassConstants
   function isPublic() in line 234
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable ACC_PUBLIC defined in edu::umd::cs::findbugs::classfile::IClassConstants
   function isStatic() in line 238
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable ACC_STATIC defined in edu::umd::cs::findbugs::classfile::IClassConstants
   function isSynthetic() in line 254
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable ACC_SYNTHETIC defined in edu::umd::cs::findbugs::classfile::IClassConstants
   variable accessFlags in line 48
   variable calledClassDescriptors in line 50
   variable codeBaseEntry in line 46
   variable interfaceDescriptorList in line 44
   variable majorVersion in line 52
   variable superclassDescriptor in line 42
module edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo::Builder
   function build() in line 71
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setAccessFlags(int) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setCalledClassDescriptors(Collection< ClassDescriptor >) in line 133
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function setClassDescriptor(ClassDescriptor) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setClassfileVersion(int,int) in line 116
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function setCodeBaseEntry(ICodeBaseEntry) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setInterfaceDescriptorList(ClassDescriptor[]) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setReferencedClassDescriptors(Collection< ClassDescriptor >) in line 125
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function setSuperclassDescriptor(ClassDescriptor) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/analysis/EnumValue.java
module edu::umd::cs::findbugs::classfile::analysis::EnumValue
   function equals(Object) in line 52
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function EnumValue(String,String) defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable desc defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
      uses variable value defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
   function hashCode() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable desc defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
      uses function hashCode() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable value defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
   function toString() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable desc defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable value defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
   function EnumValue(String,String) in line 36
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable desc defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
      uses variable value defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
   variable desc in line 32
      protection public
   variable value in line 34
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/analysis/FieldInfo.java
module edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   inherits from edu::umd::cs::findbugs::classfile::FieldDescriptor
   inherits from edu::umd::cs::findbugs::ba::XField
   function addAnnotation(AnnotationValue) in line 271
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function getAnnotationClass() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function checkFlag(int) in line 110
      3 lines of code
      1 parameters
      1 conditional paths
   function compareTo(ComparableField) in line 150
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function compareTo(FieldOrMethodName) defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
   function createUnresolvedFieldInfo(String,String,String,boolean) in line 303
      protection public
      9 lines of code
      4 parameters
      1 conditional paths
      uses function FieldInfo(@SlashedClassName String,String,String,@CheckForNull String,int,Map< ClassDescriptor, AnnotationValue >,boolean) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable signature defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function getAccessFlags() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAnnotation(ClassDescriptor) in line 253
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getAnnotationDescriptors() in line 248
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAnnotations() in line 258
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getClassName() in line 129
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getContainingScope() in line 320
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function getElementType() in line 314
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFieldDescriptor() in line 285
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumParams() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function getPackageName() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getPackageName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getSourceSignature() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isDeprecated() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   function isFinal() in line 178
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   function isNative() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   function isPrivate() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   function isProtected() in line 198
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   function isPublic() in line 208
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   function isReferenceType() in line 228
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function isResolved() in line 218
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSynchronized() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   function isSynthetic() in line 243
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   function isVolatile() in line 238
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   function FieldInfo(@SlashedClassName String,String,String,@CheckForNull String,int,Map< ClassDescriptor, AnnotationValue >,boolean) in line 96
      9 lines of code
      7 parameters
      1 conditional paths
      uses function isResolved() defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   variable EMPTY_ARRAY in line 54
      protection public
module edu::umd::cs::findbugs::classfile::analysis::FieldInfo::Builder
   function addAnnotation(String,AnnotationValue) in line 76
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function build() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function FieldInfo(@SlashedClassName String,String,String,@CheckForNull String,int,Map< ClassDescriptor, AnnotationValue >,boolean) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
      uses function isResolved() defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo
   function setSourceSignature(String) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function Builder(@SlashedClassName String,String,String,int) in line 65
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/analysis/MethodInfo.java
module edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   inherits from edu::umd::cs::findbugs::classfile::MethodDescriptor
   inherits from edu::umd::cs::findbugs::ba::XMethod
   function addAnnotation(AnnotationValue) in line 568
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function getAnnotationClass() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function addParameterAnnotation(int,AnnotationValue) in line 585
      protection public
      13 lines of code
      2 parameters
      2 conditional paths
      uses function getAnnotationClass() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function bridgeFrom() in line 673
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function bridgeTo() in line 683
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function checkFlag(int) in line 374
      3 lines of code
      1 parameters
      1 conditional paths
   function compareTo(ComparableMethod) in line 428
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function compareTo(FieldOrMethodName) defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
   function getAccessFlags() in line 446
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAccessMethodForField() in line 663
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAccessMethodForMethod() in line 658
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAnnotation(ClassDescriptor) in line 549
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getAnnotationDescriptors() in line 544
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAnnotations() in line 554
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getClassName() in line 407
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getContainingScope() in line 619
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function getElementType() in line 610
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::MethodDescriptor
   function getInvokeDynamicMethods() in line 280
      protection public
      3 lines of code
      0 parameters
      9 conditional paths
   function getMethodCallCount() in line 370
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMethodDescriptor() in line 605
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumParams() in line 358
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function getPackageName() in line 413
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getPackageName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getParameterAnnotation(int,ClassDescriptor) in line 526
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
   function getParameterAnnotationDescriptors(int) in line 511
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getParameterAnnotations(int) in line 535
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getSourceSignature() in line 418
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getThrownExceptions() in line 330
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasBackBranch() in line 648
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasParameterAnnotations() in line 520
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isAbstract() in line 384
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function isDeprecated() in line 471
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function isFinal() in line 456
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function isIdentity() in line 342
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isNative() in line 379
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function isPrivate() in line 466
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function isProtected() in line 481
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function isPublic() in line 491
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function isResolved() in line 506
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isReturnTypeReferenceType() in line 399
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getReturnTypeSignature() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function isStub() in line 652
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSynchronized() in line 389
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function isSynthetic() in line 496
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function isUnconditionalThrower() in line 337
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isUnsupported() in line 353
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isVarArgs() in line 633
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkFlag(int) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function isVariableSynthetic(int) in line 363
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function newArray(int) in line 60
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable EMPTY_ARRAY defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function resolveAccessMethodForMethod() in line 689
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getAccessMethodForMethod() defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   function usesConcurrency() in line 643
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function usesInvokeDynamic() in line 347
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getInvokeDynamicMethods() defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
   variable EMPTY_ARRAY in line 58
      protection public
module edu::umd::cs::findbugs::classfile::analysis::MethodInfo::Builder
   function addAccessFlags(int) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function addAnnotation(String,AnnotationValue) in line 173
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function addParameterAnnotation(int,String,AnnotationValue) in line 178
      protection public
      9 lines of code
      3 parameters
      2 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function build() in line 188
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
   function setAccessFlags(int) in line 165
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAccessMethodForField(String,String,String,boolean) in line 120
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function setAccessMethodForMethod(String,String,String,boolean) in line 117
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function MethodDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::MethodDescriptor
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function setHasBackBranch() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsIdentity() in line 156
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function setIsStub() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsUnconditionalThrower() in line 198
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setNumberMethodCalls(int) in line 211
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setSourceSignature(String) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setThrownExceptions(String[]) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setUnsupported() in line 203
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setUsesConcurrency() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setUsesInvokeDynamic() in line 219
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setVariableHasName(int) in line 128
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function setVariableIsSynthetic(int) in line 134
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function toString() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Builder(@SlashedClassName String,String,String,int) in line 110
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
module edu::umd::cs::findbugs::classfile::analysis::MethodInfo::MethodInfoDatabase
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/CheckedAnalysisException.java
module edu::umd::cs::findbugs::classfile::CheckedAnalysisException
   inherits from Exception
   function CheckedAnalysisException() in line 32
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function CheckedAnalysisException(CheckedAnalysisException) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function CheckedAnalysisException(String) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function CheckedAnalysisException(String,Throwable) in line 57
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/ClassDescriptor.java
module edu::umd::cs::findbugs::classfile::ClassDescriptor
   inherits from Comparable
   inherits from java::io::Serializable
   function compareTo(ClassDescriptor) in line 79
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function createClassDescriptor(@SlashedClassName String) in line 207
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function createClassDescriptor(String[]) in line 216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function createClassDescriptor(JavaClass) in line 236
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function createClassDescriptorFromDottedClassName(String) in line 226
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function createClassDescriptorFromSignature(String) in line 198
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 256
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function fromFieldSignature(String) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function fromResourceName(String) in line 161
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getClassName() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getDottedClassName() in line 113
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getPackageName() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getSignature() in line 139
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isArray() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getSimpleName() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getXClass() in line 117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function hashCode() in line 273
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function isAnonymousClass() in line 291
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ANONYMOUS_CLASS_NAME defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function isArray() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function isClassResource(String) in line 188
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function matches(Class<?>) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function throwClassNotFoundException(ClassDescriptor) in line 287
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toDottedClassName() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function toResourceName() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function toString() in line 246
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function ClassDescriptor(@SlashedClassName String) in line 55
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   variable ANONYMOUS_CLASS_NAME in line 45
   variable className in line 43
   variable EMPTY_ARRAY in line 47
      protection public
   variable serialVersionUID in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/ClassNameMismatchException.java
module edu::umd::cs::findbugs::classfile::ClassNameMismatchException
   inherits from edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   function getLoadedClassDescriptor() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable loadedClassDescriptor defined in edu::umd::cs::findbugs::classfile::ClassNameMismatchException
   function ClassNameMismatchException(ClassDescriptor,ClassDescriptor,ICodeBaseEntry) in line 41
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable loadedClassDescriptor defined in edu::umd::cs::findbugs::classfile::ClassNameMismatchException
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   variable loadedClassDescriptor in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/DescriptorFactory.java
module edu::umd::cs::findbugs::classfile::DescriptorFactory
   function canonicalize(MethodDescriptor) in line 202
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable methodDescriptorMap defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function canonicalize(FieldDescriptor) in line 210
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable fieldDescriptorMap defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function canonicalizeString(@CheckForNull String) in line 73
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable instanceThreadLocal defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable stringCache defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function clearInstance() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceThreadLocal defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function createClassDescriptor(JavaClass) in line 268
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createClassDescriptorFromDottedClassName(String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function createClassDescriptor(Class<?>) in line 333
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function instance() defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function createClassDescriptor(@SlashedClassName String) in line 337
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function instance() defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function createClassDescriptor(String[]) in line 341
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable EMPTY_ARRAY defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function createClassDescriptor(JavaClass) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function createClassDescriptorFromDottedClassName(String) in line 352
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createClassDescriptor(JavaClass) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function createClassDescriptorFromFieldSignature(String) in line 291
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function createClassDescriptor(JavaClass) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function createClassDescriptorFromResourceName(String) in line 279
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function isClassResource(String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function createClassDescriptor(JavaClass) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function createClassDescriptorFromSignature(String) in line 315
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function createClassDescriptor(JavaClass) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function createClassOrObjectDescriptorFromSignature(String) in line 326
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function createClassDescriptor(JavaClass) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function createClassDescriptorFromSignature(String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getAllClassDescriptors() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classDescriptorMap defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getClassDescriptor(Class<?>) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getClassDescriptorForDottedClassName(@DottedClassName String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getClassDescriptor(@SlashedClassName String) in line 123
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function canonicalizeString(@CheckForNull String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable classDescriptorMap defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getClassDescriptor(ObjectType) in line 264
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function instance() defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassDescriptorForDottedClassName(@DottedClassName String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getClassDescriptorForDottedClassName(@DottedClassName String) in line 141
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable dottedClassDescriptorMap defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getFieldDescriptor(@SlashedClassName String,String,String,boolean) in line 237
      protection public
      9 lines of code
      4 parameters
      2 conditional paths
      uses variable fieldDescriptorMap defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getFieldDescriptor(@SlashedClassName String,Field) in line 247
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getFieldDescriptor(FieldAnnotation) in line 252
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getFieldName() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getFieldSignature() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable isStatic defined in edu::umd::cs::findbugs::FieldAnnotation
   function getMethodDescriptor(JavaClass,Method) in line 151
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function getMethodDescriptor(@SlashedClassName String,String,String,boolean) in line 170
      protection public
      13 lines of code
      4 parameters
      3 conditional paths
      uses variable methodDescriptorMap defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getMethodDescriptor(MethodAnnotation) in line 218
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getMethodSignature() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable isStatic defined in edu::umd::cs::findbugs::MethodAnnotation
   function instance() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceThreadLocal defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function isClassResource(String) in line 310
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function profile() in line 184
      protection public
      17 lines of code
      0 parameters
      4 conditional paths
      uses variable methodDescriptorMap defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function purge(Collection< ClassDescriptor >) in line 103
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable classDescriptorMap defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable dottedClassDescriptorMap defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function DescriptorFactory() in line 64
      6 lines of code
      0 parameters
      1 conditional paths
   variable classDescriptorMap in line 56
   variable dottedClassDescriptorMap in line 58
   variable fieldDescriptorMap in line 62
   variable instanceThreadLocal in line 49
   variable methodDescriptorMap in line 60
   variable stringCache in line 71
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/AbstractFieldAnnotationVisitor.java
module edu::umd::cs::findbugs::classfile::engine::AbstractFieldAnnotationVisitor
   inherits from org::objectweb::asm::FieldVisitor
   abstract class
   function visitAttribute(Attribute) in line 44
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function AbstractFieldAnnotationVisitor() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ASM_VERSION defined in edu::umd::cs::findbugs::classfile::engine::asm::FindBugsASM
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/AbstractMethodVisitor.java
module edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   inherits from org::objectweb::asm::MethodVisitor
   abstract class
   function visitAnnotationDefault() in line 48
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function visitAttribute(Attribute) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitCode() in line 71
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function visitFieldInsn(int,String,String,String) in line 83
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function visitFrame(int,int,Object[],int,Object[]) in line 95
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
   function visitIincInsn(int,int) in line 106
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function visitInsn(int) in line 117
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function visitIntInsn(int,int) in line 128
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function visitJumpInsn(int,Label) in line 140
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function visitLabel(Label) in line 151
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visitLdcInsn(Object) in line 162
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function visitLineNumber(int,Label) in line 174
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visitLocalVariable(String,String,String,Label,Label,int) in line 187
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
   function visitLookupSwitchInsn(Label,int[],Label[]) in line 200
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function visitMaxs(int,int) in line 211
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visitMethodInsn(int,String,String,String,boolean) in line 223
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function visitMultiANewArrayInsn(String,int) in line 236
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function visitSomeInsn() in line 39
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitTableSwitchInsn(int,int,Label,Label...) in line 248
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   function visitTryCatchBlock(Label,Label,Label,String) in line 262
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   function visitTypeInsn(int,String) in line 273
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function visitVarInsn(int,int) in line 284
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function AbstractMethodVisitor() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ASM_VERSION defined in edu::umd::cs::findbugs::classfile::engine::asm::FindBugsASM
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/asm/ClassNodeAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::engine::asm::ClassNodeAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::RecomputableClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 47
      protection public
      17 lines of code
      2 parameters
      2 conditional paths
   function registerWith(IAnalysisCache) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/asm/ClassReaderAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::engine::asm::ClassReaderAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::RecomputableClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 44
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function getData() defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
   function registerWith(IAnalysisCache) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/asm/EngineRegistrar.java
module edu::umd::cs::findbugs::classfile::engine::asm::EngineRegistrar
   inherits from edu::umd::cs::findbugs::classfile::IAnalysisEngineRegistrar
   function registerAnalysisEngines(IAnalysisCache) in line 51
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable classAnalysisEngineList defined in edu::umd::cs::findbugs::classfile::engine::asm::EngineRegistrar
      uses variable methodAnalysisEngineList defined in edu::umd::cs::findbugs::classfile::engine::asm::EngineRegistrar
   function EngineRegistrar() in line 41
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable classAnalysisEngineList in line 33
   variable methodAnalysisEngineList in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/EngineRegistrar.java
module edu::umd::cs::findbugs::classfile::engine::bcel::EngineRegistrar
   inherits from edu::umd::cs::findbugs::classfile::IAnalysisEngineRegistrar
   function registerAnalysisEngines(IAnalysisCache) in line 97
      protection public
      18 lines of code
      1 parameters
      4 conditional paths
      uses variable classAnalysisEngineList defined in edu::umd::cs::findbugs::classfile::engine::bcel::EngineRegistrar
      uses variable methodAnalysisEngineList defined in edu::umd::cs::findbugs::classfile::engine::bcel::EngineRegistrar
      uses variable databaseFactoryList defined in edu::umd::cs::findbugs::classfile::engine::bcel::EngineRegistrar
   variable classAnalysisEngineList in line 56
   variable databaseFactoryList in line 74
   variable methodAnalysisEngineList in line 61
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/EngineRegistrar.java
module edu::umd::cs::findbugs::classfile::engine::EngineRegistrar
   inherits from edu::umd::cs::findbugs::classfile::IAnalysisEngineRegistrar
   function registerAnalysisEngines(IAnalysisCache) in line 53
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable classAnalysisEngineList defined in edu::umd::cs::findbugs::classfile::engine::EngineRegistrar
      uses variable methodAnalysisEngineList defined in edu::umd::cs::findbugs::classfile::engine::EngineRegistrar
   function EngineRegistrar() in line 42
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable classAnalysisEngineList in line 34
   variable methodAnalysisEngineList in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/asm/FindBugsASM.java
module edu::umd::cs::findbugs::classfile::engine::asm::FindBugsASM
   variable ASM_VERSION in line 29
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/AnalysisFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::AnalysisFactory
   inherits from edu::umd::cs::findbugs::classfile::IMethodAnalysisEngine
   abstract class
   function getAssertionMethods(IAnalysisCache,ClassDescriptor) in line 121
      4 lines of code
      2 parameters
      1 conditional paths
   function getCFG(IAnalysisCache,MethodDescriptor) in line 92
      3 lines of code
      2 parameters
      1 conditional paths
   function getCompactLocationNumbering(IAnalysisCache,MethodDescriptor) in line 111
      4 lines of code
      2 parameters
      1 conditional paths
   function getConstantPoolGen(IAnalysisCache,ClassDescriptor) in line 101
      4 lines of code
      2 parameters
      1 conditional paths
   function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) in line 96
      4 lines of code
      2 parameters
      1 conditional paths
   function getExceptionSetFactory(IAnalysisCache,MethodDescriptor) in line 140
      4 lines of code
      2 parameters
      1 conditional paths
   function getIsNullValueDataflow(IAnalysisCache,MethodDescriptor) in line 145
      4 lines of code
      2 parameters
      1 conditional paths
   function getJavaClass(IAnalysisCache,ClassDescriptor) in line 126
      4 lines of code
      2 parameters
      1 conditional paths
   function getLoadedFieldSet(IAnalysisCache,MethodDescriptor) in line 155
      4 lines of code
      2 parameters
      1 conditional paths
   function getMethod(IAnalysisCache,MethodDescriptor) in line 131
      3 lines of code
      2 parameters
      1 conditional paths
   function getMethodGen(IAnalysisCache,MethodDescriptor) in line 106
      4 lines of code
      2 parameters
      1 conditional paths
   function getReverseDepthFirstSearch(IAnalysisCache,MethodDescriptor) in line 135
      4 lines of code
      2 parameters
      1 conditional paths
   function getTypeDataflow(IAnalysisCache,MethodDescriptor) in line 150
      4 lines of code
      2 parameters
      1 conditional paths
   function getValueNumberDataflow(IAnalysisCache,MethodDescriptor) in line 116
      4 lines of code
      2 parameters
      1 conditional paths
   function registerWith(IAnalysisCache) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AnalysisFactory(String,Class< Analysis >) in line 56
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable analysisClass in line 48
   variable analysisName in line 46
   variable NULL_ANALYSIS_RESULT in line 84
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/AssertionMethodsFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::AssertionMethodsFactory
   inherits from edu::umd::cs::findbugs::classfile::RecomputableClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 38
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function registerWith(IAnalysisCache) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/AssignedFieldMapFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::AssignedFieldMapFactory
   inherits from edu::umd::cs::findbugs::classfile::RecomputableClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 43
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function registerWith(IAnalysisCache) in line 59
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/BackwardTypeQualifierDataflowFactoryFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::BackwardTypeQualifierDataflowFactoryFactory
   inherits from AnalysisFactory< BackwardTypeQualifierDataflowFactory >
   function analyze(IAnalysisCache,MethodDescriptor) in line 45
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function BackwardTypeQualifierDataflowFactoryFactory() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/BlockTypeAnalysisFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::BlockTypeAnalysisFactory
   inherits from AnalysisFactory< BlockTypeDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 29
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< BlockTypeDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< BlockTypeDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
   function BlockTypeAnalysisFactory() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/CallListDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::CallListDataflowFactory
   inherits from AnalysisFactory< CallListDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 27
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< CallListDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< CallListDataflow >
      uses function getConstantPoolGen(IAnalysisCache,ClassDescriptor) defined in AnalysisFactory< CallListDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
   function CallListDataflowFactory() in line 15
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/CFGFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::CFGFactory
   inherits from AnalysisFactory< CFG >
   function analyze(IAnalysisCache,MethodDescriptor) in line 83
      protection public
      146 lines of code
      2 parameters
      22 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function build() defined in edu::umd::cs::findbugs::ba::CFGBuilder
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::CFGBuilder
      uses function setFlag(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable BUSY defined in edu::umd::cs::findbugs::ba::CFG
      uses function setMethodName(String) defined in edu::umd::cs::findbugs::ba::CFG
      uses function setMethodGen(MethodGen) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable DEBUG_CFG defined in edu::umd::cs::findbugs::classfile::engine::bcel::CFGFactory
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function removeEdge(Edge) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable PRUNED_FAILED_ASSERTION_EDGES defined in edu::umd::cs::findbugs::ba::CFG
      uses variable ACCURATE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable PRUNED_INFEASIBLE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::CFG
      uses function execute() defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
      uses function wasCFGModified() defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses variable CONSERVE_SPACE defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses variable PRUNED_UNCONDITIONAL_THROWERS defined in edu::umd::cs::findbugs::ba::CFG
      uses function execute() defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses function wasCFGModified() defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable REFINED defined in edu::umd::cs::findbugs::ba::CFG
      uses function clearFlag(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function removeVertex(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function purgeMethodAnalyses(@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function registerWith(IAnalysisCache) in line 238
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerMethodAnalysisEngine(Class< E >,IMethodAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function CFGFactory() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG_CFG in line 66
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ClassContextClassAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ClassContextClassAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::RecomputableClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 47
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function registerWith(IAnalysisCache) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/CompactLocationNumberingFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::CompactLocationNumberingFactory
   inherits from AnalysisFactory< CompactLocationNumbering >
   function analyze(IAnalysisCache,MethodDescriptor) in line 50
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< CompactLocationNumbering >
   function CompactLocationNumberingFactory() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ConstantDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ConstantDataflowFactory
   inherits from AnalysisFactory< ConstantDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 29
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function getMethodGen(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ConstantDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ConstantDataflow >
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ConstantDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
   function ConstantDataflowFactory() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ConstantPoolGenFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ConstantPoolGenFactory
   inherits from edu::umd::cs::findbugs::classfile::RecomputableClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 46
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function registerWith(IAnalysisCache) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/DepthFirstSearchFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::DepthFirstSearchFactory
   inherits from AnalysisFactory< DepthFirstSearch >
   function analyze(IAnalysisCache,MethodDescriptor) in line 48
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< DepthFirstSearch >
   function DepthFirstSearchFactory() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/DominatorsAnalysisFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::DominatorsAnalysisFactory
   inherits from AnalysisFactory< DominatorsAnalysis >
   function analyze(IAnalysisCache,MethodDescriptor) in line 32
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< DominatorsAnalysis >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< DominatorsAnalysis >
   function DominatorsAnalysisFactory() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ExceptionSetFactoryFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ExceptionSetFactoryFactory
   inherits from AnalysisFactory< ExceptionSetFactory >
   function analyze(IAnalysisCache,MethodDescriptor) in line 47
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function ExceptionSetFactoryFactory() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ForwardTypeQualifierDataflowFactoryFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ForwardTypeQualifierDataflowFactoryFactory
   inherits from AnalysisFactory< ForwardTypeQualifierDataflowFactory >
   function analyze(IAnalysisCache,MethodDescriptor) in line 45
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function ForwardTypeQualifierDataflowFactoryFactory() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/IsNullValueDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::IsNullValueDataflowFactory
   inherits from AnalysisFactory< IsNullValueDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 60
      protection public
      27 lines of code
      2 parameters
      3 conditional paths
      uses function getMethodGen(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< IsNullValueDataflow >
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< IsNullValueDataflow >
      uses function getValueNumberDataflow(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< IsNullValueDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< IsNullValueDataflow >
      uses function getAssertionMethods(IAnalysisCache,ClassDescriptor) defined in AnalysisFactory< IsNullValueDataflow >
      uses function getTypeDataflow(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< IsNullValueDataflow >
      uses function setClassAndMethod(JavaClassAndMethod) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getJavaClass(IAnalysisCache,ClassDescriptor) defined in AnalysisFactory< IsNullValueDataflow >
      uses function getMethod(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< IsNullValueDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DUMP_DATAFLOW_ANALYSIS defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function dumpDataflow(AnalysisType) defined in edu::umd::cs::findbugs::ba::Dataflow
   function IsNullValueDataflowFactory() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/JavaClassAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::engine::bcel::JavaClassAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::IClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 55
      protection public
      20 lines of code
      2 parameters
      3 conditional paths
      uses function getInputStream() defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses variable DEBUG_MISSING_CLASSES defined in edu::umd::cs::findbugs::classfile::engine::bcel::JavaClassAnalysisEngine
   function canRecompute() in line 94
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function registerWith(IAnalysisCache) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   variable DEBUG_MISSING_CLASSES in line 43
   variable JVM_VERSION in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/LiveLocalStoreDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::LiveLocalStoreDataflowFactory
   inherits from AnalysisFactory< LiveLocalStoreDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 54
      protection public
      21 lines of code
      2 parameters
      3 conditional paths
      uses function getMethodGen(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LiveLocalStoreDataflow >
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LiveLocalStoreDataflow >
      uses function getReverseDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LiveLocalStoreDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LiveLocalStoreDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DUMP_DATAFLOW_ANALYSIS defined in edu::umd::cs::findbugs::ba::ClassContext
   function LiveLocalStoreDataflowFactory() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/LoadDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::LoadDataflowFactory
   inherits from AnalysisFactory< LoadDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 50
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function getMethodGen(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LoadDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LoadDataflow >
      uses function getConstantPoolGen(IAnalysisCache,ClassDescriptor) defined in AnalysisFactory< LoadDataflow >
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LoadDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
   function LoadDataflowFactory() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/LoadedFieldSetFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::LoadedFieldSetFactory
   inherits from AnalysisFactory< LoadedFieldSet >
   function analyze(IAnalysisCache,MethodDescriptor) in line 79
      protection public
      50 lines of code
      2 parameters
      11 conditional paths
      uses function getMethodGen(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LoadedFieldSet >
      uses function getConstantPoolGen(IAnalysisCache,ClassDescriptor) defined in AnalysisFactory< LoadedFieldSet >
      uses variable isLoad defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function addLoad(InstructionHandle,XField) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses function getField() defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function addStore(InstructionHandle,XField) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function LoadedFieldSetFactory() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/LockCheckerFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::LockCheckerFactory
   inherits from AnalysisFactory< LockChecker >
   function analyze(IAnalysisCache,MethodDescriptor) in line 47
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function execute() defined in edu::umd::cs::findbugs::ba::LockChecker
   function LockCheckerFactory() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/LockDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::LockDataflowFactory
   inherits from AnalysisFactory< LockDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 54
      protection public
      15 lines of code
      2 parameters
      2 conditional paths
      uses function getMethodGen(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LockDataflow >
      uses function getValueNumberDataflow(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LockDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LockDataflow >
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< LockDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
   function LockDataflowFactory() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/MethodBytecodeSetFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::MethodBytecodeSetFactory
   inherits from AnalysisFactory< MethodBytecodeSet >
   function analyze(IAnalysisCache,MethodDescriptor) in line 52
      protection public
      24 lines of code
      2 parameters
      3 conditional paths
      uses function scan(byte[],Callback) defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses function getUnpackedCode() defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedBytecodeCallback
      uses function getBytecodeSet() defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedCode
   function registerWith(IAnalysisCache) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerMethodAnalysisEngine(Class< E >,IMethodAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function MethodBytecodeSetFactory(String,Class< MethodBytecodeSet >) in line 40
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable analysisName defined in AnalysisFactory< MethodBytecodeSet >
      uses variable analysisClass defined in AnalysisFactory< MethodBytecodeSet >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/MethodFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::MethodFactory
   inherits from AnalysisFactory< Method >
   function analyze(IAnalysisCache,MethodDescriptor) in line 49
      protection public
      21 lines of code
      2 parameters
      3 conditional paths
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::MethodDescriptor
   function registerWith(IAnalysisCache) in line 79
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerMethodAnalysisEngine(Class< E >,IMethodAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function MethodFactory() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/MethodGenFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::MethodGenFactory
   inherits from AnalysisFactory< MethodGen >
   function analyze(IAnalysisCache,MethodDescriptor) in line 57
      protection public
      39 lines of code
      2 parameters
      7 conditional paths
      uses function getMethod(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< MethodGen >
      uses function usesInvokeDynamic() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getJavaClass(IAnalysisCache,ClassDescriptor) defined in AnalysisFactory< MethodGen >
      uses function getConstantPoolGen(IAnalysisCache,ClassDescriptor) defined in AnalysisFactory< MethodGen >
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function reportSkippedAnalysis(MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getBoolProperty(@AnalysisFeature int) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable SKIP_HUGE_METHODS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
   function MethodGenFactory() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/NonExceptionPostdominatorsAnalysis.java
module edu::umd::cs::findbugs::classfile::engine::bcel::NonExceptionPostdominatorsAnalysis
   inherits from edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
   function NonExceptionPostdominatorsAnalysis(CFG,ReverseDepthFirstSearch,DepthFirstSearch) in line 43
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/NonExceptionPostdominatorsAnalysisFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::NonExceptionPostdominatorsAnalysisFactory
   inherits from AnalysisFactory< NonExceptionPostdominatorsAnalysis >
   function analyze(IAnalysisCache,MethodDescriptor) in line 48
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< NonExceptionPostdominatorsAnalysis >
      uses function getReverseDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< NonExceptionPostdominatorsAnalysis >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< NonExceptionPostdominatorsAnalysis >
   function NonExceptionPostdominatorsAnalysisFactory() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/NonImplicitExceptionPostDominatorsAnalysis.java
module edu::umd::cs::findbugs::classfile::engine::bcel::NonImplicitExceptionPostDominatorsAnalysis
   inherits from edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
   function NonImplicitExceptionPostDominatorsAnalysis(CFG,ReverseDepthFirstSearch,DepthFirstSearch) in line 39
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::ba::Edge
      uses variable EXPLICIT_EXCEPTIONS_FLAG defined in edu::umd::cs::findbugs::ba::EdgeTypes
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/NonImplicitExceptionPostDominatorsAnalysisFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::NonImplicitExceptionPostDominatorsAnalysisFactory
   inherits from AnalysisFactory< NonImplicitExceptionPostDominatorsAnalysis >
   function analyze(IAnalysisCache,MethodDescriptor) in line 53
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< NonImplicitExceptionPostDominatorsAnalysis >
      uses function getReverseDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< NonImplicitExceptionPostDominatorsAnalysis >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< NonImplicitExceptionPostDominatorsAnalysis >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
   function NonImplicitExceptionPostDominatorsAnalysisFactory() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ObligationDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ObligationDataflowFactory
   inherits from AnalysisFactory< ObligationDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 54
      protection public
      33 lines of code
      2 parameters
      3 conditional paths
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses variable DEBUG_PRINTCFG defined in edu::umd::cs::findbugs::classfile::engine::bcel::ObligationDataflowFactory
   function ObligationDataflowFactory() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG_PRINTCFG in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ParameterSignatureListFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ParameterSignatureListFactory
   inherits from AnalysisFactory< String[]>
   function analyze(IAnalysisCache,MethodDescriptor) in line 51
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function ParameterSignatureListFactory() in line 38
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ReturnPathDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ReturnPathDataflowFactory
   inherits from AnalysisFactory< ReturnPathDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 50
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ReturnPathDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ReturnPathDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
   function ReturnPathDataflowFactory() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ReturnPathTypeDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ReturnPathTypeDataflowFactory
   inherits from AnalysisFactory< ReturnPathTypeDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 52
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ReturnPathTypeDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ReturnPathTypeDataflow >
      uses function getReverseDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ReturnPathTypeDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
   function ReturnPathTypeDataflowFactory() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ReverseDepthFirstSearchFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ReverseDepthFirstSearchFactory
   inherits from AnalysisFactory< ReverseDepthFirstSearch >
   function analyze(IAnalysisCache,MethodDescriptor) in line 49
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ReverseDepthFirstSearch >
   function ReverseDepthFirstSearchFactory() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/StoreDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::StoreDataflowFactory
   inherits from AnalysisFactory< StoreDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 50
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function getMethodGen(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< StoreDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< StoreDataflow >
      uses function getConstantPoolGen(IAnalysisCache,ClassDescriptor) defined in AnalysisFactory< StoreDataflow >
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< StoreDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
   function StoreDataflowFactory() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/TypeDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::TypeDataflowFactory
   inherits from AnalysisFactory< TypeDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 59
      protection public
      35 lines of code
      2 parameters
      5 conditional paths
      uses function getMethodGen(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< TypeDataflow >
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< TypeDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< TypeDataflow >
      uses function getExceptionSetFactory(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< TypeDataflow >
      uses function getMethod(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< TypeDataflow >
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable MODEL_INSTANCEOF defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses function setValueNumberDataflow(ValueNumberDataflow) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getValueNumberDataflow(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< TypeDataflow >
      uses function setFieldStoreTypeDatabase(FieldStoreTypeDatabase) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable DUMP_DATAFLOW_ANALYSIS defined in edu::umd::cs::findbugs::ba::ClassContext
   function TypeDataflowFactory() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/UnconditionalValueDerefDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::UnconditionalValueDerefDataflowFactory
   inherits from AnalysisFactory< UnconditionalValueDerefDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 57
      protection public
      35 lines of code
      2 parameters
      4 conditional paths
      uses function getMethodGen(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< UnconditionalValueDerefDataflow >
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< UnconditionalValueDerefDataflow >
      uses function getValueNumberDataflow(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< UnconditionalValueDerefDataflow >
      uses function getReverseDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< UnconditionalValueDerefDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< UnconditionalValueDerefDataflow >
      uses function getMethod(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< UnconditionalValueDerefDataflow >
      uses function getAssertionMethods(IAnalysisCache,ClassDescriptor) defined in AnalysisFactory< UnconditionalValueDerefDataflow >
      uses function getIsNullValueDataflow(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< UnconditionalValueDerefDataflow >
      uses function clearDerefsOnNonNullBranches(IsNullValueDataflow) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getTypeDataflow(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< UnconditionalValueDerefDataflow >
      uses function setTypeDataflow(TypeDataflow) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DUMP_DATAFLOW_ANALYSIS defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function dumpDataflow(AnalysisType) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function dumpDataflowInformation(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function UnconditionalValueDerefDataflowFactory() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/UnpackedBytecodeCallback.java
module edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedBytecodeCallback
   inherits from edu::umd::cs::findbugs::ba::BytecodeScanner::Callback
   function getUnpackedCode() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bytecodeSet defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedBytecodeCallback
      uses variable offsetToOpcodeMap defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedBytecodeCallback
   function handleInstruction(int,int) in line 43
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable bytecodeSet defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedBytecodeCallback
      uses variable offsetToOpcodeMap defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedBytecodeCallback
   function UnpackedBytecodeCallback(int) in line 30
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable bytecodeSet in line 26
   variable offsetToOpcodeMap in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/UnpackedCode.java
module edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedCode
   function getBytecodeSet() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bytecodeSet defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedCode
   function getOffsetToBytecodeMap() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable offsetToBytecodeMap defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedCode
   function UnpackedCode(MethodBytecodeSet,short[]) in line 14
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable bytecodeSet defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedCode
      uses variable offsetToBytecodeMap defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedCode
   variable bytecodeSet in line 10
   variable offsetToBytecodeMap in line 12
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/UnpackedCodeFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedCodeFactory
   inherits from AnalysisFactory< UnpackedCode >
   function analyze(IAnalysisCache,MethodDescriptor) in line 50
      protection public
      19 lines of code
      2 parameters
      2 conditional paths
      uses function getMethod(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< UnpackedCode >
      uses function scan(byte[],Callback) defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses function getUnpackedCode() defined in edu::umd::cs::findbugs::classfile::engine::bcel::UnpackedBytecodeCallback
   function UnpackedCodeFactory() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/UsagesRequiringNonNullValuesFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::UsagesRequiringNonNullValuesFactory
   inherits from AnalysisFactory< UsagesRequiringNonNullValues >
   function analyze(IAnalysisCache,MethodDescriptor) in line 45
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethod(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< UsagesRequiringNonNullValues >
   function UsagesRequiringNonNullValuesFactory() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ValueNumberDataflowFactory.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ValueNumberDataflowFactory
   inherits from AnalysisFactory< ValueNumberDataflow >
   function analyze(IAnalysisCache,MethodDescriptor) in line 62
      protection public
      31 lines of code
      2 parameters
      5 conditional paths
      uses function getMethodGen(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ValueNumberDataflow >
      uses function getDepthFirstSearch(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ValueNumberDataflow >
      uses function getLoadedFieldSet(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ValueNumberDataflow >
      uses function setMergeTree(MergeTree) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function getCFG(IAnalysisCache,MethodDescriptor) defined in AnalysisFactory< ValueNumberDataflow >
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DUMP_DATAFLOW_ANALYSIS defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
   function ValueNumberDataflowFactory() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/ClassDataAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::engine::ClassDataAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::RecomputableClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 45
      protection public
      39 lines of code
      2 parameters
      6 conditional paths
      uses function getNumBytes() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses function openResource() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function registerWith(IAnalysisCache) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
module edu::umd::cs::findbugs::classfile::engine::ClassDataAnalysisEngine::VirtualCodeBaseEntry
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function getClassDescriptor() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassDataAnalysisEngine::VirtualCodeBaseEntry
   function getCodeBase() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumBytes() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getResourceName() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassDataAnalysisEngine::VirtualCodeBaseEntry
      uses function toResourceName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function openResource() in line 109
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassDataAnalysisEngine::VirtualCodeBaseEntry
      uses function toResourceName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function overrideResourceName(String) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function VirtualCodeBaseEntry(ClassDescriptor) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassDataAnalysisEngine::VirtualCodeBaseEntry
   variable descriptor in line 92
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/ClassInfoAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::engine::ClassInfoAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::IClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 54
      protection public
      33 lines of code
      2 parameters
      5 conditional paths
      uses function setClassDescriptor(ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo::Builder
      uses function getCodeBaseEntry() defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses function parse(ClassNameAndSuperclassInfo.Builder) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserInterface
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function canRecompute() in line 106
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function registerWith(IAnalysisCache) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/ClassNameAndSuperclassInfoAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::engine::ClassNameAndSuperclassInfoAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::IClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 49
      protection public
      17 lines of code
      2 parameters
      2 conditional paths
      uses function getData() defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses function getCodeBaseEntry() defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses function parse(ClassNameAndSuperclassInfo.Builder) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserInterface
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function canRecompute() in line 85
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function registerWith(IAnalysisCache) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/ClassParser.java
module edu::umd::cs::findbugs::classfile::engine::ClassParser
   inherits from edu::umd::cs::findbugs::classfile::engine::ClassParserInterface
   function checkConstantPoolIndex(int) in line 347
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable constantPool defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function checkConstantTag(Constant,int) in line 363
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function extractReferencedClasses() in line 160
      27 lines of code
      0 parameters
      7 conditional paths
      uses variable constantPool defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable CONSTANT_Class defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses function getUtf8String(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function extractReferencedClassesFromSignature(Set< ClassDescriptor >,String) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable CONSTANT_Methodref defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses variable CONSTANT_Fieldref defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses variable CONSTANT_InterfaceMethodref defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses function getClassName(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function getSignatureFromNameAndType(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function extractReferencedClassesFromSignature(Set< ClassDescriptor >,String) in line 188
      protection public
      18 lines of code
      2 parameters
      5 conditional paths
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getClassDescriptor(int) in line 318
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getClassName(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getClassName(int) in line 295
      14 lines of code
      1 parameters
      2 conditional paths
      uses function checkConstantPoolIndex(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable constantPool defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function checkConstantTag(Constant,int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable CONSTANT_Class defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses function getUtf8String(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function getSignatureFromNameAndType(int) in line 495
      6 lines of code
      1 parameters
      1 conditional paths
      uses function checkConstantPoolIndex(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable constantPool defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function checkConstantTag(Constant,int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable CONSTANT_NameAndType defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses function getUtf8String(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function getUtf8String(int) in line 332
      6 lines of code
      1 parameters
      1 conditional paths
      uses function checkConstantPoolIndex(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable constantPool defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function checkConstantTag(Constant,int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable CONSTANT_Utf8 defined in edu::umd::cs::findbugs::classfile::IClassConstants
   function parse(ClassNameAndSuperclassInfo.Builder) in line 89
      protection public
      59 lines of code
      1 parameters
      8 conditional paths
      uses variable in defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable constantPool defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function readConstant() defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable CONSTANT_Double defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses variable CONSTANT_Long defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses function getClassDescriptor(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable EMPTY_ARRAY defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function extractReferencedClasses() defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function parse(ClassInfo.Builder) in line 150
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function readConstant() in line 242
      42 lines of code
      0 parameters
      11 conditional paths
      uses variable in defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable CONSTANT_FORMAT_MAP defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function ClassParser(DataInputStream,@CheckForNull ClassDescriptor,ICodeBaseEntry) in line 82
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable in defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   variable codeBaseEntry in line 66
   variable CONSTANT_FORMAT_MAP in line 213
   variable constantPool in line 68
   variable expectedClassDescriptor in line 64
   variable in in line 62
module edu::umd::cs::findbugs::classfile::engine::ClassParser::Constant
module edu::umd::cs::findbugs::classfile::engine::ClassParser::FieldOrMethodDescriptorCreator
   function create(String,String,String,int) in line 370
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/ClassParserInterface.java
module edu::umd::cs::findbugs::classfile::engine::ClassParserInterface
   function parse(ClassNameAndSuperclassInfo.Builder) in line 45
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function parse(ClassInfo.Builder) in line 56
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/ClassParserUsingASM.java
module edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM
   inherits from edu::umd::cs::findbugs::classfile::engine::ClassParserInterface
   function parse(final ClassNameAndSuperclassInfo.Builder) in line 513
      protection public
      183 lines of code
      1 parameters
      27 conditional paths
      uses variable cBuilder defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM
      uses variable calledClassSet defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses variable classReader defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM
      uses variable ASM_VERSION defined in edu::umd::cs::findbugs::classfile::engine::asm::FindBugsASM
      uses function visitAnnotation(final String,boolean) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses function visitAttribute(Attribute) defined in edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
      uses function visitEnd() defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses variable access defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses variable slashedClassName defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM
      uses function setSourceSignature(String) defined in edu::umd::cs::findbugs::classfile::analysis::FieldInfo::Builder
      uses function getAnnotationVisitor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses variable methodName defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses variable methodDesc defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses variable mBuilder defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses function ClassParserMethodVisitor(TreeSet< ClassDescriptor >,edu.umd.cs.findbugs.classfile.analysis.MethodInfo.Builder,String,int,String,edu.umd.cs.findbugs.classfile.analysis.ClassNameAndSuperclassInfo.Builder) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function parse(ClassInfo.Builder) in line 698
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function parse(final ClassNameAndSuperclassInfo.Builder) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM
   function ClassParserUsingASM(ClassReader,@CheckForNull ClassDescriptor,ICodeBaseEntry) in line 505
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable classReader defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM
   variable classReader in line 71
   variable codeBaseEntry in line 78
   variable RETURN_OPCODE_SET in line 61
   variable slashedClassName in line 74
module edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
   inherits from edu::umd::cs::findbugs::classfile::engine::AbstractMethodVisitor
   function resetState() in line 242
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function sawBranchTo(Label) in line 380
      6 lines of code
      1 parameters
      2 conditional paths
   function visitAnnotation(final String,boolean) in line 304
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable mBuilder defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses function addAnnotation(AnnotationValue) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
      uses function getAnnotationVisitor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function visitEnd() in line 422
      protection public
      63 lines of code
      0 parameters
      16 conditional paths
      uses variable mBuilder defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses variable methodDesc defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses variable cBuilder defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses function addBridgeMethodDescriptor(MethodInfo,String) defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses function addMethodDescriptor(MethodInfo) defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses function setUsesConcurrency() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
      uses function setHasStubs() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo::Builder
   function visitFieldInsn(int,String,String,String) in line 283
      protection public
      19 lines of code
      4 parameters
      3 conditional paths
      uses variable slashedClassName defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM
      uses variable mBuilder defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
   function visitInsn(int) in line 208
      protection public
      33 lines of code
      1 parameters
      12 conditional paths
      uses variable mBuilder defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses function resetState() defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
   function visitInvokeDynamicInsn(String,String,Handle,Object...) in line 311
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses variable mBuilder defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
   function visitJumpInsn(int,Label) in line 388
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function sawBranchTo(Label) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
   function visitLabel(Label) in line 415
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visitLdcInsn(Object) in line 198
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function visitLocalVariable(String,String,String,Label,Label,int) in line 187
      protection public
      9 lines of code
      6 parameters
      1 conditional paths
      uses variable mBuilder defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
   function visitLookupSwitchInsn(Label,int[],Label[]) in line 395
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
      uses function sawBranchTo(Label) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
   function visitMethodInsn(int,String,String,String,boolean) in line 317
      protection public
      62 lines of code
      5 parameters
      15 conditional paths
      uses variable mBuilder defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::MethodDescriptor
      uses variable methodName defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses variable slashedClassName defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable calledClassSet defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
   function visitParameterAnnotation(int,String,boolean) in line 487
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable mBuilder defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses function addParameterAnnotation(int,AnnotationValue) defined in edu::umd::cs::findbugs::classfile::analysis::MethodInfo
      uses function getAnnotationVisitor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
   function visitSomeInsn() in line 247
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function resetState() defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
   function visitTableSwitchInsn(int,int,Label,Label...) in line 405
      protection public
      8 lines of code
      4 parameters
      2 conditional paths
      uses function sawBranchTo(Label) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
   function visitVarInsn(int,int) in line 254
      protection public
      27 lines of code
      2 parameters
      6 conditional paths
      uses function visitSomeInsn() defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
   function ClassParserMethodVisitor(TreeSet< ClassDescriptor >,edu.umd.cs.findbugs.classfile.analysis.MethodInfo.Builder,String,int,String,edu.umd.cs.findbugs.classfile.analysis.ClassNameAndSuperclassInfo.Builder) in line 167
      13 lines of code
      6 parameters
      1 conditional paths
      uses variable calledClassSet defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses variable mBuilder defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses variable methodName defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses variable access defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses variable methodDesc defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
      uses variable cBuilder defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ClassParserMethodVisitor
   variable access in line 104
   variable calledClassSet in line 89
   variable cBuilder in line 114
   variable mBuilder in line 94
   variable methodDesc in line 109
   variable methodName in line 99
module edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::StubState
   variable INITIAL in line 496
      protection public
   variable INITIALIZE_RUNTIME in line 497
      protection public
   variable LOADED_STUB in line 496
      protection public
module edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::IdentityMethodState
   variable INITIAL in line 500
      protection public
   variable LOADED_PARAMETER in line 500
      protection public
module edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM::ParameterLoadState
   variable LOADED_THIS in line 503
      protection public
   variable OTHER in line 503
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/ClassParserUsingBCEL.java
module edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
   inherits from edu::umd::cs::findbugs::classfile::engine::ClassParserInterface
   function parse(final ClassNameAndSuperclassInfo.Builder) in line 77
      protection public
      23 lines of code
      1 parameters
      4 conditional paths
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
      uses variable javaClass defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable EMPTY_ARRAY defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function parse(ClassInfo.Builder) in line 109
      protection public
      36 lines of code
      1 parameters
      3 conditional paths
      uses function parse(final ClassNameAndSuperclassInfo.Builder) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
      uses variable javaClass defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
      uses function parseMethod(Method) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
      uses function parseField(Field) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function parseField(Field) in line 151
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable slashedClassName defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
   function parseMethod(Method) in line 160
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable slashedClassName defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
   function ClassParserUsingBCEL(JavaClass,@CheckForNull ClassDescriptor,ICodeBaseEntry) in line 60
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingBCEL
   variable codeBaseEntry in line 58
   variable expectedClassDescriptor in line 56
   variable javaClass in line 52
   variable slashedClassName in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/engine/SelfMethodCalls.java
module edu::umd::cs::findbugs::classfile::engine::SelfMethodCalls
   function getSelfCalls(final ClassDescriptor,final Map< String, T >) in line 47
      protection public
      32 lines of code
      2 parameters
      2 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable ASM_VERSION defined in edu::umd::cs::findbugs::classfile::engine::asm::FindBugsASM
   function interestingSignature(String) in line 43
      3 lines of code
      1 parameters
      1 conditional paths
   function SelfMethodCalls(ClassReader) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/FieldDescriptor.java
module edu::umd::cs::findbugs::classfile::FieldDescriptor
   inherits from edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   inherits from edu::umd::cs::findbugs::ba::ComparableField
   function compareTo(ComparableField) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function compareTo(FieldOrMethodName) defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function equals(Object) in line 59
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function haveEqualFields(FieldOrMethodDescriptor) defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function toString() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function FieldDescriptor(@SlashedClassName String,String,String,boolean) in line 44
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/FieldOrMethodDescriptor.java
module edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   inherits from edu::umd::cs::findbugs::classfile::FieldOrMethodName
   abstract class
   function compareTo(FieldOrMethodName) in line 104
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function compareTo(ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodName
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodName
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodName
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodName
   function compareTo(FieldOrMethodDescriptor,FieldOrMethodDescriptor) in line 150
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
      uses variable slashedClassName defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable signature defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable isStatic defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function getClassDescriptor() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable slashedClassName defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function getName() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function getNameSigHashCode(String,String) in line 54
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable signature defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function getNameSigHashCode() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nameSigHashCode defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function getSignature() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function getSlashedClassName() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable slashedClassName defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function hashCode() in line 133
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable slashedClassName defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable nameSigHashCode defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function haveEqualFields(FieldOrMethodDescriptor) in line 122
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable isStatic defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable slashedClassName defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable signature defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function isStatic() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable signature defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function FieldOrMethodDescriptor(@SlashedClassName String,String,String,boolean) in line 44
      protection public
      9 lines of code
      4 parameters
      1 conditional paths
      uses variable slashedClassName defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable signature defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getNameSigHashCode() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   variable cachedHashCode in line 40
   variable isStatic in line 38
   variable name in line 34
   variable nameSigHashCode in line 42
   variable signature in line 36
   variable slashedClassName in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/FieldOrMethodName.java
module edu::umd::cs::findbugs::classfile::FieldOrMethodName
   function getClassDescriptor() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSignature() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/Global.java
module edu::umd::cs::findbugs::classfile::Global
   abstract class
   function getAnalysisCache() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisCacheThreadLocal defined in edu::umd::cs::findbugs::classfile::Global
   function removeAnalysisCacheForCurrentThread() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisCacheThreadLocal defined in edu::umd::cs::findbugs::classfile::Global
   function setAnalysisCacheForCurrentThread(IAnalysisCache) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable analysisCacheThreadLocal defined in edu::umd::cs::findbugs::classfile::Global
   variable analysisCacheThreadLocal in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/IAnalysisCache.java
module edu::umd::cs::findbugs::classfile::IAnalysisCache
   function eagerlyPutDatabase(Class< E >,E) in line 188
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function eagerlyPutMethodAnalysis(Class< E >,@Nonnull MethodDescriptor,E) in line 122
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function getAnalysisLocals() in line 207
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) in line 76
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getClassPath() in line 195
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDatabase(Class< E >) in line 173
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getErrorLogger() in line 202
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) in line 106
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getOptionalDatabase(Class< E >) in line 175
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getProfiler() in line 212
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function probeClassAnalysis(Class< E >,@Nonnull ClassDescriptor) in line 90
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function purgeAllMethodAnalysis() in line 138
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function purgeClassAnalysis(Class<?>) in line 143
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function purgeMethodAnalyses(@Nonnull MethodDescriptor) in line 133
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine< E >) in line 47
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function registerDatabaseFactory(Class< E >,IDatabaseFactory< E >) in line 155
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function registerMethodAnalysisEngine(Class< E >,IMethodAnalysisEngine< E >) in line 60
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/IAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::IAnalysisEngine
   function analyze(IAnalysisCache,DescriptorType) in line 37
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function registerWith(IAnalysisCache) in line 45
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/IAnalysisEngineRegistrar.java
module edu::umd::cs::findbugs::classfile::IAnalysisEngineRegistrar
   function registerAnalysisEngines(IAnalysisCache) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/IClassAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::IClassAnalysisEngine
   inherits from IAnalysisEngine< ClassDescriptor, ResultType >
   function canRecompute() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/IClassConstants.java
module edu::umd::cs::findbugs::classfile::IClassConstants
   variable ACC_ABSTRACT in line 68
      protection public
   variable ACC_ANNOTATION in line 72
      protection public
   variable ACC_BRIDGE in line 78
      protection public
   variable ACC_ENUM in line 74
      protection public
   variable ACC_FINAL in line 58
      protection public
   variable ACC_INTERFACE in line 66
      protection public
   variable ACC_NATIVE in line 82
      protection public
   variable ACC_PRIVATE in line 52
      protection public
   variable ACC_PROTECTED in line 54
      protection public
   variable ACC_PUBLIC in line 50
      protection public
   variable ACC_STATIC in line 56
      protection public
   variable ACC_STRICT in line 84
      protection public
   variable ACC_SUPER in line 60
      protection public
   variable ACC_SYNCHRONIZED in line 76
      protection public
   variable ACC_SYNTHETIC in line 70
      protection public
   variable ACC_TRANSIENT in line 64
      protection public
   variable ACC_VARARGS in line 80
      protection public
   variable ACC_VOLATILE in line 62
      protection public
   variable CONSTANT_Class in line 28
      protection public
   variable CONSTANT_Double in line 44
      protection public
   variable CONSTANT_Fieldref in line 30
      protection public
   variable CONSTANT_Float in line 40
      protection public
   variable CONSTANT_Integer in line 38
      protection public
   variable CONSTANT_InterfaceMethodref in line 34
      protection public
   variable CONSTANT_Long in line 42
      protection public
   variable CONSTANT_Methodref in line 32
      protection public
   variable CONSTANT_NameAndType in line 46
      protection public
   variable CONSTANT_String in line 36
      protection public
   variable CONSTANT_Utf8 in line 48
      protection public
   variable MAGIC in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/IClassFactory.java
module edu::umd::cs::findbugs::classfile::IClassFactory
   function createAnalysisCache(IClassPath,BugReporter) in line 37
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function createClassPath() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createClassPathBuilder(IErrorLogger) in line 31
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function createFilesystemCodeBaseLocator(String) in line 33
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function createNestedArchiveCodeBaseLocator(ICodeBase,String) in line 35
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/IClassObserver.java
module edu::umd::cs::findbugs::classfile::IClassObserver
   function observeClass(ClassDescriptor) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/IClassPath.java
module edu::umd::cs::findbugs::classfile::IClassPath
   function addCodeBase(ICodeBase) in line 40
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function appCodeBaseIterator() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function auxCodeBaseIterator() in line 54
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function close() in line 83
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getApplicationCodebaseEntries() in line 90
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function lookupResource(String) in line 65
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function mapResourceNameToCodeBaseEntry(String,ICodeBaseEntry) in line 77
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/IClassPathBuilder.java
module edu::umd::cs::findbugs::classfile::IClassPathBuilder
   function addCodeBase(ICodeBaseLocator,boolean) in line 45
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function build(IClassPath,IClassPathBuilderProgress) in line 67
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getAppClassList() in line 76
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function scanNestedArchives(boolean) in line 54
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/IClassPathBuilderProgress.java
module edu::umd::cs::findbugs::classfile::IClassPathBuilderProgress
   function finishArchive() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function startArchive(String) in line 33
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/ICodeBase.java
module edu::umd::cs::findbugs::classfile::ICodeBase
   function close() in line 135
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function containsSourceFiles() in line 102
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCodeBaseLocator() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getHowDiscovered() in line 94
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getLastModifiedTime() in line 130
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPathName() in line 110
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isApplicationCodeBase() in line 77
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function lookupResource(String) in line 62
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setApplicationCodeBase(boolean) in line 70
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setHowDiscovered(ICodeBase.Discovered) in line 86
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setLastModifiedTime(long) in line 119
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::classfile::ICodeBase::Discovered
   variable IN_JAR_MANIFEST in line 42
      protection public
   variable IN_SYSTEM_CLASSPATH in line 45
      protection public
   variable NESTED in line 36
      protection public
   variable SPECIFIED in line 33
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/ICodeBaseEntry.java
module edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function getClassDescriptor() in line 75
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCodeBase() in line 60
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumBytes() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getResourceName() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function openResource() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function overrideResourceName(String) in line 83
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/ICodeBaseIterator.java
module edu::umd::cs::findbugs::classfile::ICodeBaseIterator
   function hasNext() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function next() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/ICodeBaseLocator.java
module edu::umd::cs::findbugs::classfile::ICodeBaseLocator
   function createRelativeCodeBaseLocator(String) in line 46
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function openCodeBase() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 57
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/IDatabaseFactory.java
module edu::umd::cs::findbugs::classfile::IDatabaseFactory
   function createDatabase() in line 28
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function registerWith(IAnalysisCache) in line 30
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/IErrorLogger.java
module edu::umd::cs::findbugs::classfile::IErrorLogger
   function logError(String) in line 51
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function logError(String,Throwable) in line 61
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function reportMissingClass(ClassNotFoundException) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reportMissingClass(ClassDescriptor) in line 43
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reportSkippedAnalysis(MethodDescriptor) in line 69
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/IMethodAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::IMethodAnalysisEngine
   inherits from IAnalysisEngine< MethodDescriptor, ResultType >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/impl/AbstractScannableCodeBase.java
module edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   inherits from edu::umd::cs::findbugs::classfile::IScannableCodeBase
   abstract class
   function addLastModifiedTime(long) in line 128
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable lastModifiedTime defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function addResourceNameTranslation(String,String) in line 144
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable resourceNameTranslationMap defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function containsSourceFiles() in line 71
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getCodeBaseLocator() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function getHowDiscovered() in line 113
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable howDiscovered defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function getLastModifiedTime() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastModifiedTime defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function isApplicationCodeBase() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isAppCodeBase defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function setApplicationCodeBase(boolean) in line 83
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isAppCodeBase defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function setHowDiscovered(ICodeBase.Discovered) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable howDiscovered defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function setLastModifiedTime(long) in line 123
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable lastModifiedTime defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function translateResourceName(String) in line 150
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable resourceNameTranslationMap defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function AbstractScannableCodeBase(ICodeBaseLocator) in line 48
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   variable codeBaseLocator in line 38
   variable howDiscovered in line 42
   variable isAppCodeBase in line 40
   variable lastModifiedTime in line 44
   variable resourceNameTranslationMap in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/impl/AbstractScannableCodeBaseEntry.java
module edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   abstract class
   function getCodeBase() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getRealResourceName() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getResourceName() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getCodeBase() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
      uses function translateResourceName(String) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses function getRealResourceName() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   function overrideResourceName(String) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCodeBase() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
      uses function addResourceNameTranslation(String,String) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses function getRealResourceName() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/impl/AnalysisCache.java
module edu::umd::cs::findbugs::classfile::impl::AnalysisCache
   inherits from edu::umd::cs::findbugs::classfile::IAnalysisCache
   function createMap(final Map< Class<?>,?extends IAnalysisEngine< DescriptorType,?>>,final Class<?>) in line 428
      22 lines of code
      2 parameters
      6 conditional paths
      uses variable MAX_JAVACLASS_RESULTS_TO_CACHE defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable MAX_FBCLASSREADER_RESULTS_TO_CACHE defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable MAX_CONSTANT_POOL_GEN_RESULTS_TO_CACHE defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable MAX_CLASS_RESULTS_TO_CACHE defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable classAnalysisEngineMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable methodAnalysisEngineMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable databaseFactoryMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
   function dispose() in line 205
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable classAnalysisMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable classAnalysisEngineMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable analysisLocals defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable databaseFactoryMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable databaseMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable methodAnalysisEngineMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
   function findOrCreateDescriptorMap(final Map< Class<?>, Map< DescriptorType, Object >>,final Map< Class<?>,?extends IAnalysisEngine< DescriptorType,?>>,final Class<?>) in line 416
      11 lines of code
      3 parameters
      2 conditional paths
      uses function createMap(final Map< Class<?>,?extends IAnalysisEngine< DescriptorType,?>>,final Class<?>) defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
   function getAnalysisLocals() in line 95
      protection public
      3 lines of code
      0 parameters
      5 conditional paths
      uses variable analysisLocals defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable ASSERTIONS_ENABLED defined in edu::umd::cs::findbugs::SystemProperties
      uses variable classPath defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
   function getClassAnalysis(Class<?>) in line 218
      protection public
      3 lines of code
      1 parameters
      16 conditional paths
      uses variable classAnalysisMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses function createMap(final Map< Class<?>,?extends IAnalysisEngine< DescriptorType,?>>,final Class<?>) defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable classAnalysisEngineMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses function findOrCreateDescriptorMap(final Map< Class<?>, Map< DescriptorType, Object >>,final Map< Class<?>,?extends IAnalysisEngine< DescriptorType,?>>,final Class<?>) defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses function getProfiler() defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses function analyze(IAnalysisCache,DescriptorType) defined in edu::umd::cs::findbugs::classfile::IAnalysisEngine
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodAnalysis(Class<?>,MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function putMethodAnalysis(Class<?>,MethodDescriptor,Object) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses variable methodAnalysisEngineMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses function analyze(IAnalysisCache,DescriptorType) defined in IAnalysisEngine< MethodDescriptor, ResultType >
   function getClassPath() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classPath defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
   function getErrorLogger() in line 511
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
   function getOptionalDatabase(Class< E >) in line 471
      protection public
      3 lines of code
      1 parameters
      6 conditional paths
      uses variable databaseMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable databaseFactoryMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses function createDatabase() defined in edu::umd::cs::findbugs::classfile::IDatabaseFactory
   function getProfiler() in line 516
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugReporter
      uses function getProfiler() defined in edu::umd::cs::findbugs::ProjectStats
   function purgeAllMethodAnalysis() in line 173
      protection public
      15 lines of code
      0 parameters
      4 conditional paths
      uses function findOrCreateDescriptorMap(final Map< Class<?>, Map< DescriptorType, Object >>,final Map< Class<?>,?extends IAnalysisEngine< DescriptorType,?>>,final Class<?>) defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable classAnalysisMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable classAnalysisEngineMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
   function purgeClassAnalysis(Class<?>) in line 198
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classAnalysisMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
   function purgeMethodAnalyses(@Nonnull MethodDescriptor) in line 390
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function getClassAnalysis(Class<?>) defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function purgeMethodAnalyses(MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ClassContext
   variable analysisLocals in line 92
   variable bugReporter in line 80
   variable classAnalysisEngineMap in line 82
   variable classAnalysisMap in line 88
   variable classPath in line 78
   variable databaseFactoryMap in line 86
   variable databaseMap in line 90
   variable MAX_CLASS_RESULTS_TO_CACHE in line 73
   variable MAX_CONSTANT_POOL_GEN_RESULTS_TO_CACHE in line 68
   variable MAX_FBCLASSREADER_RESULTS_TO_CACHE in line 66
   variable MAX_JAVACLASS_RESULTS_TO_CACHE in line 65
   variable methodAnalysisEngineMap in line 84
module edu::umd::cs::findbugs::classfile::impl::AnalysisCache::AbnormalAnalysisResult
   function returnOrThrow() in line 124
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/impl/ClassFactory.java
module edu::umd::cs::findbugs::classfile::impl::ClassFactory
   inherits from edu::umd::cs::findbugs::classfile::IClassFactory
   function createAnalysisCache(IClassPath,BugReporter) in line 138
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function createClassPath() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createClassPathBuilder(IErrorLogger) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function createFilesystemCodeBaseLocator(String) in line 81
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
   function createNestedArchiveCodeBaseLocator(ICodeBase,String) in line 101
      protection public
      3 lines of code
      2 parameters
      6 conditional paths
      uses function getPathName() defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   function instance() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::classfile::impl::ClassFactory
   function ClassFactory() in line 45
      2 lines of code
      0 parameters
      1 conditional paths
   variable theInstance in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/impl/ClassPathBuilder.java
module edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   inherits from edu::umd::cs::findbugs::classfile::IClassPathBuilder
   function addCodeBase(ICodeBaseLocator,boolean) in line 198
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addToWorkList(LinkedList< WorkListItem >,WorkListItem) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable projectWorkList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable SPECIFIED defined in edu::umd::cs::findbugs::classfile::ICodeBase::Discovered
   function addToWorkList(LinkedList< WorkListItem >,WorkListItem) in line 788
      25 lines of code
      2 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   function addWorkListItemsForClasspath(LinkedList< WorkListItem >,String) in line 498
      15 lines of code
      2 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function addToWorkList(LinkedList< WorkListItem >,WorkListItem) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable classFactory defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function createFilesystemCodeBaseLocator(String) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses variable IN_SYSTEM_CLASSPATH defined in edu::umd::cs::findbugs::classfile::ICodeBase::Discovered
   function addWorkListItemsForExtDir(LinkedList< WorkListItem >,String) in line 522
      24 lines of code
      2 parameters
      3 conditional paths
      uses function addToWorkList(LinkedList< WorkListItem >,WorkListItem) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable classFactory defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function createFilesystemCodeBaseLocator(String) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses variable IN_SYSTEM_CLASSPATH defined in edu::umd::cs::findbugs::classfile::ICodeBase::Discovered
   function build(IClassPath,IClassPathBuilderProgress) in line 223
      protection public
      54 lines of code
      2 parameters
      10 conditional paths
      uses function processWorkList(IClassPath,LinkedList< WorkListItem >,IClassPathBuilderProgress) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable projectWorkList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable discoveredCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function locateCodebasesRequiredForAnalysis(IClassPath,IClassPathBuilderProgress) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function hasNext() defined in edu::umd::cs::findbugs::classfile::ICodeBaseIterator
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses variable appClassList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable DEBUG defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function dumpCodeBaseList(Iterator<?extends ICodeBase >,String) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   function buildFindBugsAnnotationCodebaseList() in line 400
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createFindBugsLibWorkList(String) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   function buildFindBugsFullJarCodebaseList() in line 332
      16 lines of code
      0 parameters
      2 conditional paths
      uses variable IN_SYSTEM_CLASSPATH defined in edu::umd::cs::findbugs::classfile::ICodeBase::Discovered
   function buildJSR305AnnotationsCodebaseList() in line 408
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createFindBugsLibWorkList(String) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   function buildSystemCodebaseList() in line 372
      23 lines of code
      0 parameters
      3 conditional paths
      uses function addWorkListItemsForClasspath(LinkedList< WorkListItem >,String) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function addWorkListItemsForExtDir(LinkedList< WorkListItem >,String) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   function createFindBugsLibWorkList(String) in line 412
      73 lines of code
      1 parameters
      15 conditional paths
      uses variable classFactory defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function createFilesystemCodeBaseLocator(String) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses variable IN_SYSTEM_CLASSPATH defined in edu::umd::cs::findbugs::classfile::ICodeBase::Discovered
      uses variable DEBUG defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function matchesJarFile(String,String) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   function dumpCodeBaseList(Iterator<?extends ICodeBase >,String) in line 361
      10 lines of code
      2 parameters
      3 conditional paths
      uses function getCodeBaseLocator() defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses function toString() defined in edu::umd::cs::findbugs::classfile::ICodeBaseLocator
      uses function containsSourceFiles() defined in edu::umd::cs::findbugs::classfile::ICodeBase
   function getAppClassList() in line 820
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable appClassList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   function locateCodebasesRequiredForAnalysis(IClassPath,IClassPathBuilderProgress) in line 282
      43 lines of code
      2 parameters
      10 conditional paths
      uses variable discoveredCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function probeCodeBaseForResource(DiscoveredCodeBase,String) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable DEBUG defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function processWorkList(IClassPath,LinkedList< WorkListItem >,IClassPathBuilderProgress) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function buildSystemCodebaseList() defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function runningFindBugsFullJar() defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function buildFindBugsFullJarCodebaseList() defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function buildFindBugsAnnotationCodebaseList() defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function buildJSR305AnnotationsCodebaseList() defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   function matchesJarFile(String,String) in line 486
      3 lines of code
      2 parameters
      1 conditional paths
   function parseClassName(ICodeBaseEntry) in line 706
      24 lines of code
      1 parameters
      4 conditional paths
      uses function openResource() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses function parse(ClassNameAndSuperclassInfo.Builder) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserInterface
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses function overrideResourceName(String) defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses variable errorLogger defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function probeCodeBaseForResource(DiscoveredCodeBase,String) in line 356
      4 lines of code
      2 parameters
      1 conditional paths
   function processWorkList(IClassPath,LinkedList< WorkListItem >,IClassPathBuilderProgress) in line 561
      86 lines of code
      3 parameters
      15 conditional paths
      uses variable SPECIFIED defined in edu::umd::cs::findbugs::classfile::ICodeBase::Discovered
      uses variable DEBUG defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable discoveredCodeBaseMap defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function getPathName() defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
      uses variable discoveredCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function scanCodebase(IClassPath,LinkedList< WorkListItem >,DiscoveredCodeBase) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function scanJarManifestForClassPathEntries(LinkedList< WorkListItem >,ICodeBase) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable errorLogger defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function runningFindBugsFullJar() in line 326
      5 lines of code
      0 parameters
      1 conditional paths
   function scanCodebase(IClassPath,LinkedList< WorkListItem >,DiscoveredCodeBase) in line 662
      36 lines of code
      3 parameters
      7 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function iterator() defined in edu::umd::cs::findbugs::classfile::IScannableCodeBase
      uses function hasNext() defined in edu::umd::cs::findbugs::classfile::ICodeBaseIterator
      uses function next() defined in edu::umd::cs::findbugs::classfile::ICodeBaseIterator
      uses variable VERBOSE defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses variable NO_PARSE_CLASS_NAMES defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function isApplicationCodeBase() defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses function parseClassName(ICodeBaseEntry) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable scanNestedArchives defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable classFactory defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function createNestedArchiveCodeBaseLocator(ICodeBase,String) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses function addToWorkList(LinkedList< WorkListItem >,WorkListItem) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable NESTED defined in edu::umd::cs::findbugs::classfile::ICodeBase::Discovered
   function scanJarManifestForClassPathEntries(LinkedList< WorkListItem >,ICodeBase) in line 740
      36 lines of code
      2 parameters
      6 conditional paths
      uses function openResource() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses function createRelativeCodeBaseLocator(String) defined in edu::umd::cs::findbugs::classfile::ICodeBaseLocator
      uses function addToWorkList(LinkedList< WorkListItem >,WorkListItem) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable IN_JAR_MANIFEST defined in edu::umd::cs::findbugs::classfile::ICodeBase::Discovered
   function scanNestedArchives(boolean) in line 210
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable scanNestedArchives defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   variable appClassList in line 169
   variable classFactory in line 159
   variable DEBUG in line 72
   variable discoveredCodeBaseList in line 165
   variable discoveredCodeBaseMap in line 167
   variable errorLogger in line 161
   variable NO_PARSE_CLASS_NAMES in line 74
   variable projectWorkList in line 163
   variable scanNestedArchives in line 171
   variable VERBOSE in line 70
module edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder::WorkListItem
   function getCodeBaseLocator() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHowDiscovered() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isAppCodeBase() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function WorkListItem(ICodeBaseLocator,boolean,ICodeBase.Discovered) in line 92
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable codeBaseLocator in line 81
   variable howDiscovered in line 85
   variable isAppCodeBase in line 83
module edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder::DiscoveredCodeBase
   function addCodeBaseEntry(ICodeBaseEntry) in line 135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getCodeBase() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getResourceList() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterator() in line 139
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
   function DiscoveredCodeBase(ICodeBase) in line 122
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/impl/ClassPathImpl.java
module edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   inherits from edu::umd::cs::findbugs::classfile::IClassPath
   function addCodeBase(ICodeBase) in line 76
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function isApplicationCodeBase() defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses variable appCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
      uses variable auxCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   function appCodeBaseIterator() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable appCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   function auxCodeBaseIterator() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable auxCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   function close() in line 113
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable appCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
      uses variable auxCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
      uses variable codeBaseEntryMap defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   function getApplicationCodebaseEntries() in line 126
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable codeBaseEntryMap defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
      uses function getCodeBase() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses function isApplicationCodeBase() defined in edu::umd::cs::findbugs::classfile::ICodeBase
   function lookupResource(String) in line 146
      protection public
      27 lines of code
      1 parameters
      4 conditional paths
      uses variable codeBaseEntryMap defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
      uses function search(List<?extends ICodeBase >,String) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
      uses variable appCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
      uses variable auxCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   function mapResourceNameToCodeBaseEntry(String,ICodeBaseEntry) in line 203
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable codeBaseEntryMap defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   function search(List<?extends ICodeBase >,String) in line 184
      10 lines of code
      2 parameters
      3 conditional paths
   function toString() in line 54
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable appCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
      uses variable auxCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   function ClassPathImpl() in line 47
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   variable appCodeBaseList in line 41
   variable auxCodeBaseList in line 43
   variable codeBaseEntryMap in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/impl/DelegatingCodeBaseEntry.java
module edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function equals(Object) in line 116
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function DelegatingCodeBaseEntry(ICodeBase,ICodeBaseEntry) defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses variable frontEndCodeBase defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
   function getClassDescriptor() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function getCodeBase() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable frontEndCodeBase defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
   function getNumBytes() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses function getNumBytes() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function getResourceName() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function hashCode() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable frontEndCodeBase defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
   function openResource() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses function openResource() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function overrideResourceName(String) in line 106
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses function overrideResourceName(String) defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function toString() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
   function DelegatingCodeBaseEntry(ICodeBase,ICodeBaseEntry) in line 43
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable frontEndCodeBase defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
   variable delegateCodeBaseEntry in line 41
   variable frontEndCodeBase in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/impl/DelegatingCodeBaseIterator.java
module edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseIterator
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseIterator
   function hasNext() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBaseIterator defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseIterator
      uses function hasNext() defined in edu::umd::cs::findbugs::classfile::ICodeBaseIterator
   function next() in line 61
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBaseIterator defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseIterator
      uses function next() defined in edu::umd::cs::findbugs::classfile::ICodeBaseIterator
      uses variable frontEndCodeBase defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseIterator
   function DelegatingCodeBaseIterator(ICodeBase,IScannableCodeBase) in line 39
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable frontEndCodeBase defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseIterator
   variable delegateCodeBaseIterator in line 37
   variable frontEndCodeBase in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/impl/DirectoryCodeBase.java
module edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase
   inherits from edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function close() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPathName() in line 134
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable directory defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase
   function iterator() in line 119
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable searchPerformed defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase
      uses variable rfs defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase
      uses function search() defined in edu::umd::cs::findbugs::RecursiveFileSearch
   function lookupResource(String) in line 155
      protection public
      12 lines of code
      1 parameters
      6 conditional paths
      uses function translateResourceName(String) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses variable directory defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase
   function toString() in line 228
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable directory defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase
   function DirectoryCodeBase(ICodeBaseLocator,File) in line 93
      protection public
      19 lines of code
      2 parameters
      2 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses variable directory defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase
   variable directory in line 79
   variable rfs in line 81
   variable searchPerformed in line 83
module edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase::DirectoryCodeBaseIterator
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseIterator
   function hasNext() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 64
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addLastModifiedTime(long) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/impl/DirectoryCodeBaseEntry.java
module edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   inherits from edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   function equals(Object) in line 111
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function DirectoryCodeBaseEntry(DirectoryCodeBase,String) defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
      uses variable realResourceName defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   function getClassDescriptor() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   function getCodeBase() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   function getNumBytes() in line 51
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
      uses variable realResourceName defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   function getRealResourceName() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable realResourceName defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   function hashCode() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
      uses variable realResourceName defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   function openResource() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
      uses variable realResourceName defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   function toString() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getCodeBase() defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   function DirectoryCodeBaseEntry(DirectoryCodeBase,String) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
      uses variable realResourceName defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   variable codeBase in line 36
   variable realResourceName in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/impl/FilesystemCodeBaseLocator.java
module edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseLocator
   function createRelativeCodeBaseLocator(String) in line 61
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable pathName defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
      uses function FilesystemCodeBaseLocator(String) defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   function equals(Object) in line 96
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function FilesystemCodeBaseLocator(String) defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
      uses variable pathName defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   function getPathName() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pathName defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   function hashCode() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pathName defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   function openCodeBase() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pathName defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   function FilesystemCodeBaseLocator(String) in line 36
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable pathName defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   variable pathName in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/impl/NestedZipFileCodeBase.java
module edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
   inherits from edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function close() in line 138
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable delegateCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
      uses function close() defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses variable tempFile defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
   function getPathName() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterator() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
   function lookupResource(String) in line 114
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable delegateCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
      uses function lookupResource(String) defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
   function NestedZipFileCodeBase(NestedZipFileCodeBaseLocator) in line 59
      protection public
      37 lines of code
      1 parameters
      5 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses variable tempFile defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
      uses variable parentCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
      uses function lookupResource(String) defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
      uses function openResource() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses variable delegateCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
   variable delegateCodeBase in line 51
   variable parentCodeBase in line 45
   variable resourceName in line 47
   variable tempFile in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/impl/NestedZipFileCodeBaseLocator.java
module edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseLocator
   function createRelativeCodeBaseLocator(String) in line 65
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function NestedZipFileCodeBaseLocator(ICodeBase,String) defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
      uses variable parentCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   function equals(Object) in line 97
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function NestedZipFileCodeBaseLocator(ICodeBase,String) defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
      uses variable parentCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   function getParentCodeBase() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parentCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   function getResourceName() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   function hashCode() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parentCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   function openCodeBase() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parentCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
      uses function getCodeBaseLocator() defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   function NestedZipFileCodeBaseLocator(ICodeBase,String) in line 38
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable parentCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   variable parentCodeBase in line 34
   variable resourceName in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/impl/SingleFileCodeBase.java
module edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   inherits from edu::umd::cs::findbugs::classfile::IScannableCodeBase
   function close() in line 231
      protection public
      3 lines of code
      0 parameters
      6 conditional paths
      uses variable resourceNameKnown defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
      uses function toResourceName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable fileName defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
      uses function parse(ClassNameAndSuperclassInfo.Builder) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserInterface
   function containsSourceFiles() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCodeBaseLocator() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function getHowDiscovered() in line 185
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable howDiscovered defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function getLastModifiedTime() in line 207
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastModifiedTime defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function getPathName() in line 217
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fileName defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function isApplicationCodeBase() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isAppCodeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function iterator() in line 103
      protection public
      29 lines of code
      0 parameters
      2 conditional paths
   function lookupResource(String) in line 140
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function setApplicationCodeBase(boolean) in line 155
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isAppCodeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function setHowDiscovered(ICodeBase.Discovered) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable howDiscovered defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function setLastModifiedTime(long) in line 195
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable lastModifiedTime defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function toString() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fileName defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function SingleFileCodeBase(ICodeBaseLocator,String) in line 65
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
      uses variable fileName defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   variable codeBaseLocator in line 51
   variable fileName in line 53
   variable howDiscovered in line 57
   variable isAppCodeBase in line 55
   variable lastModifiedTime in line 59
   variable resourceName in line 63
   variable resourceNameKnown in line 61
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/impl/SingleFileCodeBaseEntry.java
module edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function equals(Object) in line 103
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function SingleFileCodeBaseEntry(SingleFileCodeBase) defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function getClassDescriptor() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function getCodeBase() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function getNumBytes() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function getResourceName() in line 48
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable overriddenResourceName defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function hashCode() in line 117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function openResource() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function overrideResourceName(String) in line 93
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable overriddenResourceName defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function toString() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
      uses function getPathName() defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function SingleFileCodeBaseEntry(SingleFileCodeBase) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   variable codeBase in line 18
   variable overriddenResourceName in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/impl/ZipCodeBaseFactory.java
module edu::umd::cs::findbugs::classfile::impl::ZipCodeBaseFactory
   function makeZipCodeBase(ICodeBaseLocator,File) in line 35
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function getProfiler() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/impl/ZipFileCodeBase.java
module edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBase
   inherits from edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function close() in line 164
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getPathName() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterator() in line 117
      protection public
      40 lines of code
      0 parameters
      5 conditional paths
      uses function addLastModifiedTime(long) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function lookupResource(String) in line 97
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses function translateResourceName(String) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function toString() in line 173
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ZipFileCodeBase(ICodeBaseLocator,File) in line 53
      protection public
      42 lines of code
      2 parameters
      10 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses function setLastModifiedTime(long) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/impl/ZipFileCodeBaseEntry.java
module edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   inherits from edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   function equals(Object) in line 103
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function ZipFileCodeBaseEntry(ZipFileCodeBase,ZipEntry) defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   function getClassDescriptor() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   function getCodeBase() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   function getNumBytes() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   function getRealResourceName() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   function hashCode() in line 117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   function openResource() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   function toString() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getCodeBase() defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   function ZipFileCodeBaseEntry(ZipFileCodeBase,ZipEntry) in line 39
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   variable codeBase in line 35
   variable zipEntry in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/impl/ZipInputStreamCodeBase.java
module edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBase
   inherits from edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function close() in line 241
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPathName() in line 231
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterator() in line 221
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function lookupResource(String) in line 101
      protection public
      47 lines of code
      1 parameters
      16 conditional paths
      uses function translateResourceName(String) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses function addLastModifiedTime(long) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function toString() in line 251
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ZipInputStreamCodeBase(ICodeBaseLocator,File) in line 60
      protection public
      33 lines of code
      2 parameters
      7 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses function setLastModifiedTime(long) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
module edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBase::MyIterator
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseIterator
   function getNextEntry() in line 177
      6 lines of code
      0 parameters
      1 conditional paths
   function hasNext() in line 190
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function next() in line 204
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/impl/ZipInputStreamCodeBaseEntry.java
module edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
   inherits from edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   function equals(Object) in line 111
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function ZipInputStreamCodeBaseEntry(ZipInputStreamCodeBase,ZipEntry,byte[]) defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
   function getBytes() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bytes defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
   function getClassDescriptor() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   function getCodeBase() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
   function getNumBytes() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
   function getRealResourceName() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
   function hashCode() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
   function openResource() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bytes defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
   function toString() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getCodeBase() defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   function ZipInputStreamCodeBaseEntry(ZipInputStreamCodeBase,ZipEntry,byte[]) in line 42
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
      uses variable bytes defined in edu::umd::cs::findbugs::classfile::impl::ZipInputStreamCodeBaseEntry
   variable bytes in line 40
   variable codeBase in line 36
   variable zipEntry in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/InvalidClassFileFormatException.java
module edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   inherits from edu::umd::cs::findbugs::classfile::CheckedAnalysisException
   function getClassDescriptor() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   function getCodeBaseEntry() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   function getMessage() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   function InvalidClassFileFormatException(ClassDescriptor,ICodeBaseEntry) in line 30
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   function InvalidClassFileFormatException(ClassDescriptor,ICodeBaseEntry,Throwable) in line 36
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   function InvalidClassFileFormatException(String,ClassDescriptor,ICodeBaseEntry) in line 42
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   variable classDescriptor in line 26
   variable codeBaseEntry in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/IScannableCodeBase.java
module edu::umd::cs::findbugs::classfile::IScannableCodeBase
   inherits from edu::umd::cs::findbugs::classfile::ICodeBase
   function iterator() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/MethodDescriptor.java
module edu::umd::cs::findbugs::classfile::MethodDescriptor
   inherits from edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   inherits from edu::umd::cs::findbugs::ba::ComparableMethod
   function compareTo(ComparableMethod) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function compareTo(FieldOrMethodName) defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function equals(Object) in line 55
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function haveEqualFields(FieldOrMethodDescriptor) defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function MethodDescriptor(@SlashedClassName String,String,String,boolean) in line 45
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/RecomputableClassAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::RecomputableClassAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::IClassAnalysisEngine
   abstract class
   function canRecompute() in line 28
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/ReflectionDatabaseFactory.java
module edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
   inherits from IDatabaseFactory< E >
   function createDatabase() in line 51
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses function createUsingStaticCreateMethod() defined in edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
      uses function createUsingConstructor() defined in edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
      uses variable databaseClass defined in edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
   function createUsingConstructor() in line 104
      18 lines of code
      0 parameters
      3 conditional paths
      uses variable databaseClass defined in edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
   function createUsingStaticCreateMethod() in line 73
      24 lines of code
      0 parameters
      5 conditional paths
      uses variable databaseClass defined in edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
   function registerWith(IAnalysisCache) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerDatabaseFactory(Class< E >,IDatabaseFactory< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable databaseClass defined in edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
   function ReflectionDatabaseFactory(Class< E >) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable databaseClass defined in edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
   variable databaseClass in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/ResourceNotFoundException.java
module edu::umd::cs::findbugs::classfile::ResourceNotFoundException
   inherits from edu::umd::cs::findbugs::classfile::CheckedAnalysisException
   function getResourceName() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::ResourceNotFoundException
   function toClassNotFoundException() in line 70
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::ResourceNotFoundException
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function ResourceNotFoundException(String) in line 38
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable MESSAGE_PREFIX defined in edu::umd::cs::findbugs::classfile::ResourceNotFoundException
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::ResourceNotFoundException
   function ResourceNotFoundException(String,Throwable) in line 51
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable MESSAGE_PREFIX defined in edu::umd::cs::findbugs::classfile::ResourceNotFoundException
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::ResourceNotFoundException
   variable MESSAGE_PREFIX in line 30
      protection public
   variable resourceName in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/classfile/UncheckedAnalysisException.java
module edu::umd::cs::findbugs::classfile::UncheckedAnalysisException
   inherits from RuntimeException
   function UncheckedAnalysisException(String) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function UncheckedAnalysisException(String,Throwable) in line 46
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ClassScreener.java
module edu::umd::cs::findbugs::ClassScreener
   inherits from edu::umd::cs::findbugs::IClassScreener
   function addAllowedClass(String) in line 103
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable START defined in edu::umd::cs::findbugs::ClassScreener
      uses function dotsToRegex(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses variable DEBUG defined in edu::umd::cs::findbugs::ClassScreener
      uses variable patternList defined in edu::umd::cs::findbugs::ClassScreener
   function addAllowedPackage(String) in line 118
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable START defined in edu::umd::cs::findbugs::ClassScreener
      uses function dotsToRegex(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses variable SEP defined in edu::umd::cs::findbugs::ClassScreener
      uses variable JAVA_IDENTIFIER_PART defined in edu::umd::cs::findbugs::ClassScreener
      uses variable DEBUG defined in edu::umd::cs::findbugs::ClassScreener
      uses variable patternList defined in edu::umd::cs::findbugs::ClassScreener
   function addAllowedPrefix(String) in line 138
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ClassScreener
      uses variable START defined in edu::umd::cs::findbugs::ClassScreener
      uses function dotsToRegex(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses variable SEP defined in edu::umd::cs::findbugs::ClassScreener
      uses variable patternList defined in edu::umd::cs::findbugs::ClassScreener
   function dotsToRegex(String) in line 82
      14 lines of code
      1 parameters
      1 conditional paths
      uses variable SEP defined in edu::umd::cs::findbugs::ClassScreener
   function matches(String) in line 158
      protection public
      29 lines of code
      1 parameters
      8 conditional paths
      uses variable patternList defined in edu::umd::cs::findbugs::ClassScreener
      uses variable DEBUG defined in edu::umd::cs::findbugs::ClassScreener
   function vacuous() in line 194
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable patternList defined in edu::umd::cs::findbugs::ClassScreener
   function ClassScreener() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG in line 41
   variable JAVA_IDENTIFIER_PART in line 59
   variable patternList in line 61
   variable SEP in line 48
   variable START in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ClassWarningSuppressor.java
module edu::umd::cs::findbugs::ClassWarningSuppressor
   inherits from edu::umd::cs::findbugs::WarningSuppressor
   function getClassAnnotation() in line 15
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function match(BugInstance) in line 20
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function contains(ClassAnnotation) defined in edu::umd::cs::findbugs::ClassAnnotation
   function ClassWarningSuppressor(String,ClassAnnotation) in line 7
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/cloud/AbstractCloud.java
module edu::umd::cs::findbugs::cloud::AbstractCloud
   inherits from edu::umd::cs::findbugs::cloud::Cloud
   abstract class
   function addDateSeen(BugInstance,long) in line 733
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function addListener(CloudListener) in line 351
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable listeners defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function addStatusListener(CloudStatusListener) in line 366
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable statusListeners defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function bugsPopulated() in line 288
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable issueDataDownloaded defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function canSeeCommentsByOthers(BugInstance) in line 240
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function getMode() defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function hasVoted(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function canStoreUserAnnotation(BugInstance) in line 686
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function claim(BugInstance) in line 216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function claimedBy(BugInstance) in line 211
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function communicationInitiated() in line 939
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isOnlineCloud() defined in edu::umd::cs::findbugs::cloud::Cloud
   function createTask(final String) in line 807
      protection public
      26 lines of code
      1 parameters
      3 conditional paths
      uses variable listeners defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function setDefaultListener(Cloud.CloudTaskListener) defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
      uses function setStatusMsg(String) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function isUsingDefaultListener() defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
   function fileBug(BugInstance) in line 231
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function fireIssueDataDownloadedEvent() in line 760
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable issueDataDownloaded defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses variable statusListeners defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function getBugByHash(String) in line 784
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
   function getBugCollection() in line 181
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function getBugIsUnassigned(BugInstance) in line 903
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBugLink(BugInstance) in line 221
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBugLinkStatus(BugInstance) in line 236
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBugLinkType(BugInstance) in line 226
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBugStatus(BugInstance) in line 339
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLatestDesignationFromEachUser(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function getClassificationDisagreement(BugInstance) in line 691
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getClassificationScore(BugInstance) in line 479
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function getLatestDesignationFromEachUser(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function nonVoting() defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function score() defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function getClassificationVariance(BugInstance) in line 496
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses function getLatestDesignationFromEachUser(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function nonVoting() defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function score() defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function getCloudName() in line 934
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getPlugin() defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getDescription() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
   function getCloudProperty(String) in line 849
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable properties defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getProperty(String) defined in edu::umd::cs::findbugs::PropertyBundle
   function getCloudReport(BugInstance) in line 276
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSelectiveCloudReport(BugInstance,Set< String >) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function getCloudReportWithoutMe(BugInstance) in line 281
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getUser() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getSelectiveCloudReport(BugInstance,Set< String >) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function getConsensusDesignation(BugInstance) in line 396
      protection public
      75 lines of code
      1 parameters
      22 conditional paths
      uses function getLatestDesignationFromEachUser(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses variable I_WILL_FIX defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses variable MUST_FIX defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function add(K) defined in edu::umd::cs::findbugs::util::Multiset
      uses function nonVoting() defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function score() defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function entriesInDecreasingFrequency() defined in edu::umd::cs::findbugs::util::Multiset
      uses variable SHOULD_FIX defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses variable NOT_A_BUG defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses variable MOSTLY_HARMLESS defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses variable NEEDS_STUDY defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function getFirstSeen(BugInstance) in line 728
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLocalFirstSeen(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function getGuiCallback() in line 929
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getBugCollection() defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::Project
   function getIWillFix(BugInstance) in line 391
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getUserDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses variable I_WILL_FIX defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function getLatestDesignationFromEachUser(BugInstance) in line 343
      1 lines of code
      1 parameters
      1 conditional paths
   function getLocalFirstSeen(BugInstance) in line 943
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugCollection() defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getAppVersionFromSequenceNumber(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function getTimestamp() defined in edu::umd::cs::findbugs::BugCollection
      uses function getTimestamp() defined in edu::umd::cs::findbugs::AppVersion
      uses function hasXmlProps() defined in edu::umd::cs::findbugs::BugInstance
      uses function getXmlProps() defined in edu::umd::cs::findbugs::BugInstance
      uses function getFirstSeen() defined in edu::umd::cs::findbugs::BugInstance::XmlProps
   function getMode() in line 166
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mode defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function getNumberReviewers(BugInstance) in line 530
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getLatestDesignationFromEachUser(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function getPlugin() in line 176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function getPortionObsoleteClassifications(BugInstance) in line 516
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getLatestDesignationFromEachUser(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses enumvalue OBSOLETE_CODE defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function getReviewers(BugInstance) in line 920
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getLatestDesignationFromEachUser(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function getSelectiveCloudReport(BugInstance,Set< String >) in line 292
      41 lines of code
      2 parameters
      8 conditional paths
      uses function isInCloud(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function notInCloudMsg(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function initiateCommunication() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getFirstSeen(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function canSeeCommentsByOthers(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function supportsBugLinks() defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getBugLinkStatus(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function bugIsFiled() defined in edu::umd::cs::findbugs::cloud::Cloud::BugFilingStatus
      uses function getBugStatus(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getBugIsUnassigned(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getUser() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getLatestDesignationFromEachUser(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getUserDesignation(String) defined in edu::umd::cs::findbugs::I18N
   function getSigninState() in line 768
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signinState defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function getSourceLink(BugInstance) in line 860
      protection public
      29 lines of code
      1 parameters
      5 conditional paths
      uses variable sourceFileLinkPattern defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getSourcePath() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFileLinkFormatWithLine defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses variable sourceFileLinkFormat defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function getSourceLinkToolTip(BugInstance) in line 891
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceFileLinkToolTip defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function getStatusMsg() in line 381
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable statusMsg defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function getUserDate(BugInstance) in line 346
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getUserTimestamp(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function getUserDesignation(BugInstance) in line 696
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getPrimaryDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getDesignationKey() defined in edu::umd::cs::findbugs::BugDesignation
   function getUserEvaluation(BugInstance) in line 705
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function getPrimaryDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getAnnotationText() defined in edu::umd::cs::findbugs::BugDesignation
   function getUsernameLookup() in line 793
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getUsernameClass() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
      uses function signIn(CloudPlugin,BugCollection) defined in edu::umd::cs::findbugs::cloud::username::NameLookup
      uses variable bugCollection defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function getUserTimestamp(BugInstance) in line 718
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getPrimaryDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getTimestamp() defined in edu::umd::cs::findbugs::BugDesignation
   function getWillNotBeFixed(BugInstance) in line 915
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hasVoted(BugInstance) in line 252
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function getLatestDesignationFromEachUser(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getUser() defined in edu::umd::cs::findbugs::cloud::Cloud
   function initialize() in line 131
      protection public
      33 lines of code
      0 parameters
      6 conditional paths
      uses function getCloudProperty(String) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses variable DEFAULT_VOTING_MODE defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses variable LOGGER defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function setMode(Mode) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses variable properties defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getProperty(String) defined in edu::umd::cs::findbugs::PropertyBundle
      uses variable THROW_EXCEPTION_IF_CANT_CONNECT defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function isInitialized() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function issueDataHasBeenDownloaded() in line 334
      3 lines of code
      0 parameters
      1 conditional paths
   function notInCloudMsg(BugInstance) in line 261
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function isOnlineCloud() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getSigninState() defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses variable issueDataDownloaded defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function overallClassificationIsNotAProblem(BugInstance) in line 473
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getConsensusDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function notAProblem() defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function printCloudSummary(PrintWriter,Iterable< BugInstance >,String[]) in line 542
      protection public
      96 lines of code
      3 parameters
      17 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function getNumClasses() defined in edu::umd::cs::findbugs::ProjectStats
      uses function supportsBugLinks() defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getBugLinkStatus(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function bugIsFiled() defined in edu::umd::cs::findbugs::cloud::Cloud::BugFilingStatus
      uses function getBugStatus(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function add(K) defined in edu::umd::cs::findbugs::util::Multiset
      uses function getLatestDesignationFromEachUser(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getUserDesignation(String) defined in edu::umd::cs::findbugs::I18N
      uses function getBugCollection() defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses function numKeys() defined in edu::umd::cs::findbugs::util::Multiset
      uses function printLeaderBoard(PrintWriter,Multiset< String >,int,String,boolean,String) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getUser() defined in edu::umd::cs::findbugs::cloud::Cloud
   function printLeaderBoard(PrintWriter,Multiset< String >,int,String,boolean,String) in line 839
      9 lines of code
      6 parameters
      2 conditional paths
      uses function printLeaderBoard2(PrintWriter,Multiset< String >,int,String,String,String) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function printLeaderBoard2(PrintWriter,Multiset< String >,int,String,String,String) in line 640
      protection public
      39 lines of code
      6 parameters
      9 conditional paths
      uses variable LEADERBOARD_BLACKLIST_PATTERN defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function removeListener(CloudListener) in line 361
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable listeners defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function removeStatusListener(CloudStatusListener) in line 376
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable statusListeners defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function setBugLinkOnCloudAndStoreIssueDetails(BugInstance,String,String) in line 191
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function setMode(Mode) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mode defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function setSigninState(SigninState) in line 772
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable signinState defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses variable LOGGER defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses variable statusListeners defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function setStatusMsg(String) in line 834
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable statusMsg defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function updatedStatus() defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function shutdown() in line 386
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function supportsBugLinks() in line 186
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function supportsClaims() in line 201
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function supportsCloudReports() in line 206
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function supportsCloudSummaries() in line 681
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function supportsSourceLinks() in line 854
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceFileLinkPattern defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function updateBugStatusCache(BugInstance,String) in line 197
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function updatedIssue(BugInstance) in line 750
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable listeners defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses variable LOGGER defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function updatedStatus() in line 740
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable listeners defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses variable LOGGER defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function AbstractCloud(CloudPlugin,BugCollection,Properties) in line 115
      8 lines of code
      3 parameters
      2 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getProperties() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
      uses function copy() defined in edu::umd::cs::findbugs::PropertyBundle
      uses variable properties defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function loadProperties(Properties) defined in edu::umd::cs::findbugs::PropertyBundle
   variable bugCollection in line 91
   variable DEFAULT_VOTING_MODE in line 68
   variable issueDataDownloaded in line 113
   variable LEADERBOARD_BLACKLIST in line 72
   variable LEADERBOARD_BLACKLIST_PATTERN in line 74
   variable listeners in line 104
   variable LOGGER in line 70
   variable MIN_TIMESTAMP in line 64
      protection public
   variable mode in line 108
   variable plugin in line 89
   variable properties in line 93
   variable signinState in line 112
   variable sourceFileLinkFormat in line 98
   variable sourceFileLinkFormatWithLine in line 100
   variable sourceFileLinkPattern in line 96
   variable sourceFileLinkToolTip in line 102
   variable statusListeners in line 106
   variable statusMsg in line 110
   variable THROW_EXCEPTION_IF_CANT_CONNECT in line 66
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/cloud/BugCollectionStorageCloud.java
module edu::umd::cs::findbugs::cloud::BugCollectionStorageCloud
   inherits from edu::umd::cs::findbugs::cloud::AbstractCloud
   function addDateSeen(BugInstance,long) in line 195
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function getXmlProps() defined in edu::umd::cs::findbugs::BugInstance
      uses function setFirstSeen(Date) defined in edu::umd::cs::findbugs::BugInstance::XmlProps
   function availableForInitialization() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function bugFiled(BugInstance,Object) in line 156
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function bugsPopulated() in line 123
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getLatestDesignationFromEachUser(BugInstance) in line 167
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getPrimaryDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::BugCollectionStorageCloud
   function getMode() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable COMMUNAL defined in edu::umd::cs::findbugs::cloud::Cloud::Mode
   function getPrimaryDesignation(BugInstance) in line 162
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
   function getProjects(String) in line 176
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getUser() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUserDesignation(BugInstance) in line 90
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getDesignationKey() defined in edu::umd::cs::findbugs::BugDesignation
   function getUserEvaluation(BugInstance) in line 100
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAnnotationText() defined in edu::umd::cs::findbugs::BugDesignation
   function getUserTimestamp(BugInstance) in line 110
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getTimestamp() defined in edu::umd::cs::findbugs::BugDesignation
   function initialize() in line 51
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function initiateCommunication() in line 65
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function isInCloud(BugInstance) in line 181
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isOnlineCloud() in line 186
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSavingSignInInformationEnabled() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setMode(Mode) in line 119
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function setSaveSignInInformation(boolean) in line 129
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function signIn() in line 138
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function signOut() in line 142
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function storeUserAnnotation(BugInstance) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function waitUntilIssueDataDownloaded() in line 61
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function waitUntilIssueDataDownloaded(long,TimeUnit) in line 74
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function waitUntilNewIssuesUploaded(long,TimeUnit) in line 69
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function waitUntilNewIssuesUploaded() in line 191
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function BugCollectionStorageCloud(CloudPlugin,BugCollection,Properties) in line 45
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses variable properties defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function setSigninState(SigninState) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses variable NO_SIGNIN_REQUIRED defined in edu::umd::cs::findbugs::cloud::Cloud::SigninState
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/cloud/BugFiler.java
module edu::umd::cs::findbugs::cloud::BugFiler
   function file(BugInstance) in line 12
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getBugStatus(String) in line 10
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function ready() in line 14
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/cloud/BugFilingCommentHelper.java
module edu::umd::cs::findbugs::cloud::BugFilingCommentHelper
   function commonLeadingWhitespace(String,String) in line 220
      15 lines of code
      2 parameters
      5 conditional paths
   function getBugPatternExplanation(BugInstance) in line 192
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getDetailPlainText() defined in edu::umd::cs::findbugs::BugPattern
   function getBugReportHead(BugInstance) in line 146
      protection public
      45 lines of code
      1 parameters
      8 conditional paths
      uses function getMessageWithoutPrefix() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAnnotations() defined in edu::umd::cs::findbugs::BugInstance
      uses variable cloud defined in edu::umd::cs::findbugs::cloud::BugFilingCommentHelper
      uses function supportsSourceLinks() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getSourceLink(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getSourceLinkToolTip(@CheckForNull BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable BUG_NOTE defined in edu::umd::cs::findbugs::cloud::BugFilingCommentHelper
      uses variable POSTMORTEM_NOTE defined in edu::umd::cs::findbugs::cloud::BugFilingCommentHelper
      uses variable POSTMORTEM_RANK defined in edu::umd::cs::findbugs::cloud::BugFilingCommentHelper
      uses function getConsensusDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function score() defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getProjects(String) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function getBugReportSourceCode(BugInstance) in line 73
      protection public
      72 lines of code
      1 parameters
      14 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceLines() defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function isSourceFileKnown() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable cloud defined in edu::umd::cs::findbugs::cloud::BugFilingCommentHelper
      uses function getBugCollection() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function getSourceFinder() defined in edu::umd::cs::findbugs::Project
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getInputStream() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function commonLeadingWhitespace(String,String) defined in edu::umd::cs::findbugs::cloud::BugFilingCommentHelper
   function getBugReportSummary(BugInstance) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getMessageWithoutPrefix() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getSourceFileName() defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function getBugReportTail(BugInstance) in line 213
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getInstanceHash() defined in edu::umd::cs::findbugs::BugInstance
   function getBugReportText(BugInstance) in line 67
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getBugReportHead(BugInstance) defined in edu::umd::cs::findbugs::cloud::BugFilingCommentHelper
      uses function getBugReportSourceCode(BugInstance) defined in edu::umd::cs::findbugs::cloud::BugFilingCommentHelper
      uses function getLineTerminatedUserEvaluation(BugInstance) defined in edu::umd::cs::findbugs::cloud::BugFilingCommentHelper
      uses function getBugPatternExplanation(BugInstance) defined in edu::umd::cs::findbugs::cloud::BugFilingCommentHelper
      uses function getBugReportTail(BugInstance) defined in edu::umd::cs::findbugs::cloud::BugFilingCommentHelper
   function getLineTerminatedUserEvaluation(BugInstance) in line 197
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable cloud defined in edu::umd::cs::findbugs::cloud::BugFilingCommentHelper
      uses function getUserDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getUserEvaluation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
   function BugFilingCommentHelper(Cloud) in line 55
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable cloud defined in edu::umd::cs::findbugs::cloud::BugFilingCommentHelper
      uses function getPlugin() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getProperties() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
      uses variable BUG_NOTE defined in edu::umd::cs::findbugs::cloud::BugFilingCommentHelper
      uses function getProperty(String) defined in edu::umd::cs::findbugs::PropertyBundle
      uses variable POSTMORTEM_NOTE defined in edu::umd::cs::findbugs::cloud::BugFilingCommentHelper
      uses variable POSTMORTEM_RANK defined in edu::umd::cs::findbugs::cloud::BugFilingCommentHelper
      uses function getInt(String,int) defined in edu::umd::cs::findbugs::PropertyBundle
   variable BUG_NOTE in line 49
   variable cloud in line 47
   variable POSTMORTEM_NOTE in line 51
   variable POSTMORTEM_RANK in line 53
module edu::umd::cs::findbugs::cloud::BugFilingCommentHelper::SourceLine
   function SourceLine(int,String) in line 244
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable line defined in edu::umd::cs::findbugs::cloud::BugFilingCommentHelper::SourceLine
      uses variable text defined in edu::umd::cs::findbugs::cloud::BugFilingCommentHelper::SourceLine
   variable line in line 240
      protection public
   variable text in line 242
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/cloud/BugLinkInterface.java
module edu::umd::cs::findbugs::cloud::BugLinkInterface
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/cloud/Cloud.java
module edu::umd::cs::findbugs::cloud::Cloud
   function addDateSeen(BugInstance,long) in line 283
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function addListener(CloudListener) in line 65
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addStatusListener(CloudStatusListener) in line 69
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function availableForInitialization() in line 83
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function bugFiled(BugInstance,@CheckForNull Object) in line 238
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function bugsPopulated() in line 120
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function canStoreUserAnnotation(BugInstance) in line 299
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function claim(BugInstance) in line 253
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function claimedBy(BugInstance) in line 246
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function communicationInitiated() in line 115
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function fileBug(BugInstance) in line 221
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getBugCollection() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBugIsUnassigned(BugInstance) in line 214
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getBugLink(BugInstance) in line 217
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getBugLinkStatus(BugInstance) in line 202
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getBugLinkType(BugInstance) in line 219
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getBugStatus(BugInstance) in line 208
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getClassificationDisagreement(BugInstance) in line 273
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getClassificationScore(BugInstance) in line 269
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getClassificationVariance(BugInstance) in line 271
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getCloudName() in line 51
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCloudReport(BugInstance) in line 240
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getCloudReportWithoutMe(BugInstance) in line 242
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getConsensusDesignation(BugInstance) in line 288
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getFirstSeen(BugInstance) in line 281
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getGuiCallback() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getIWillFix(BugInstance) in line 193
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getMode() in line 156
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumberReviewers(BugInstance) in line 277
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getPlugin() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPortionObsoleteClassifications(BugInstance) in line 275
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getPrimaryDesignation(BugInstance) in line 261
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getProjects(String) in line 179
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getReviewers(BugInstance) in line 279
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getSigninState() in line 138
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSourceLink(BugInstance) in line 199
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getSourceLinkToolTip(@CheckForNull BugInstance) in line 196
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getStatusMsg() in line 61
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getUser() in line 136
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getUserDate(BugInstance) in line 258
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getUserDesignation(BugInstance) in line 264
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getUserEvaluation(BugInstance) in line 267
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getUserTimestamp(BugInstance) in line 256
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getWillNotBeFixed(BugInstance) in line 211
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function initialize() in line 90
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function initiateCommunication() in line 129
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isInCloud(BugInstance) in line 188
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isInitialized() in line 93
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isOnlineCloud() in line 190
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isSavingSignInInformationEnabled() in line 146
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function overallClassificationIsNotAProblem(BugInstance) in line 290
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function printCloudSummary(PrintWriter,Iterable< BugInstance >,String[]) in line 63
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function removeListener(CloudListener) in line 67
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function removeStatusListener(CloudStatusListener) in line 71
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setBugLinkOnCloudAndStoreIssueDetails(BugInstance,String,String) in line 223
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function setMode(Mode) in line 159
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setSaveSignInInformation(boolean) in line 144
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function shutdown() in line 132
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function signIn() in line 148
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function signOut() in line 150
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function storeUserAnnotation(BugInstance) in line 305
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function supportsBugLinks() in line 165
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function supportsClaims() in line 171
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function supportsCloudReports() in line 168
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function supportsCloudSummaries() in line 173
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function supportsSourceLinks() in line 162
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function updateBugStatusCache(BugInstance,String) in line 227
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function waitUntilIssueDataDownloaded() in line 106
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function waitUntilIssueDataDownloaded(long,TimeUnit) in line 108
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function waitUntilNewIssuesUploaded() in line 97
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function waitUntilNewIssuesUploaded(long,TimeUnit) in line 99
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::cloud::Cloud::CloudListener
   function issueUpdated(BugInstance) in line 310
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function statusUpdated() in line 312
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function taskStarted(CloudTask) in line 314
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::cloud::Cloud::CloudStatusListener
   function handleIssueDataDownloadedEvent() in line 318
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function handleStateChange(SigninState,SigninState) in line 320
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::cloud::Cloud::CloudTask
   function addListener(CloudTaskListener) in line 330
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getName() in line 324
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPercentCompleted() in line 328
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getStatusLine() in line 326
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isFinished() in line 334
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function removeListener(CloudTaskListener) in line 332
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setUseDefaultListener(boolean) in line 336
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::cloud::Cloud::CloudTaskListener
   function taskFailed(String) in line 344
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function taskFinished() in line 342
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function taskStatusUpdated(String,double) in line 340
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::cloud::Cloud::SigninState
   function canDownload() in line 352
      protection public
      12 lines of code
      0 parameters
      5 conditional paths
   function canUpload() in line 366
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
   function couldSignIn() in line 390
      protection public
      12 lines of code
      0 parameters
      6 conditional paths
   function shouldAskToSignIn() in line 378
      protection public
      10 lines of code
      0 parameters
      4 conditional paths
   function toString() in line 407
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   variable names in line 403
      protection public
   variable NO_SIGNIN_REQUIRED in line 348
      protection public
   variable SIGNED_IN in line 348
      protection public
   variable SIGNED_OUT in line 348
      protection public
   variable SIGNIN_DECLINED in line 348
      protection public
   variable SIGNIN_FAILED in line 348
      protection public
   variable SIGNING_IN in line 348
      protection public
   variable UNAUTHENTICATED in line 348
      protection public
module edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function nonVoting() in line 439
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses enumvalue OBSOLETE_CODE defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses variable NEEDS_STUDY defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function notAProblem() in line 444
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function score() in line 419
      protection public
      19 lines of code
      0 parameters
      8 conditional paths
   function shouldFix() in line 447
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable BAD_ANALYSIS in line 417
      protection public
   variable I_WILL_FIX in line 417
      protection public
   variable MOSTLY_HARMLESS in line 417
      protection public
   variable MUST_FIX in line 417
      protection public
   variable NEEDS_STUDY in line 417
      protection public
   variable NOT_A_BUG in line 417
      protection public
   variable SHOULD_FIX in line 417
      protection public
   variable UNCLASSIFIED in line 417
      protection public
module edu::umd::cs::findbugs::cloud::Cloud::Mode
   variable COMMUNAL in line 453
      protection public
   variable SECRET in line 454
      protection public
   variable VOTING in line 453
      protection public
module edu::umd::cs::findbugs::cloud::Cloud::BugFilingStatus
   function bugIsFiled() in line 492
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function linkEnabled() in line 496
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 505
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BugFilingStatus(String) in line 500
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable BUG_PENDING in line 473
      protection public
   variable displayName in line 490
      protection public
   variable FILE_AGAIN in line 465
      protection public
   variable FILE_BUG in line 463
      protection public
   variable NA in line 488
      protection public
   variable VIEW_BUG in line 475
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/cloud/CloudFactory.java
module edu::umd::cs::findbugs::cloud::CloudFactory
   function createCloudWithoutInitializing(BugCollection) in line 56
      protection public
      30 lines of code
      1 parameters
      5 conditional paths
      uses function getCloudPlugin(BugCollection) defined in edu::umd::cs::findbugs::cloud::CloudFactory
      uses variable LOGGER defined in edu::umd::cs::findbugs::cloud::CloudFactory
      uses variable DEFAULT_CLOUD defined in edu::umd::cs::findbugs::cloud::CloudFactory
      uses function getPlainCloud(BugCollection) defined in edu::umd::cs::findbugs::cloud::CloudFactory
      uses function getId() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
      uses function getCloudClass() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function getCloudProperties() defined in edu::umd::cs::findbugs::Project
      uses variable DEBUG defined in edu::umd::cs::findbugs::cloud::CloudFactory
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::Project
      uses function showMessageDialog(String) defined in edu::umd::cs::findbugs::IGuiCallback
      uses function availableForInitialization() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function handleInitializationException(BugCollection,CloudPlugin,Throwable) defined in edu::umd::cs::findbugs::cloud::CloudFactory
   function getCloudPlugin(BugCollection) in line 87
      protection public
      28 lines of code
      1 parameters
      7 conditional paths
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function getCloudId() defined in edu::umd::cs::findbugs::Project
      uses function getRegisteredClouds() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable FAIL_ON_CLOUD_ERROR defined in edu::umd::cs::findbugs::cloud::CloudFactory
      uses function getFindbugsPluginId() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
      uses function getPluginStatus(Plugin) defined in edu::umd::cs::findbugs::Project
      uses variable DEFAULT_CLOUD defined in edu::umd::cs::findbugs::cloud::CloudFactory
      uses variable LOGGER defined in edu::umd::cs::findbugs::cloud::CloudFactory
   function getPlainCloud(BugCollection) in line 148
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function initialize() defined in edu::umd::cs::findbugs::cloud::DoNothingCloud
   function handleInitializationException(BugCollection,CloudPlugin,Throwable) in line 116
      protection public
      10 lines of code
      3 parameters
      3 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::cloud::CloudFactory
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::Project
      uses function showMessageDialog(String) defined in edu::umd::cs::findbugs::IGuiCallback
      uses variable LOGGER defined in edu::umd::cs::findbugs::cloud::CloudFactory
      uses function getPlainCloud(BugCollection) defined in edu::umd::cs::findbugs::cloud::CloudFactory
   function initializeCloud(BugCollection,Cloud) in line 127
      protection public
      19 lines of code
      2 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::cloud::CloudFactory
      uses function showMessageDialog(String) defined in edu::umd::cs::findbugs::IGuiCallback
   variable DEBUG in line 50
      protection public
   variable DEFAULT_CLOUD in line 52
      protection public
   variable FAIL_ON_CLOUD_ERROR in line 48
      protection public
   variable FAIL_ON_CLOUD_ERROR_PROP in line 47
      protection public
   variable FINDBUGS_NAMELOOKUP_CLASSNAME in line 43
   variable FINDBUGS_NAMELOOKUP_REQUIRED in line 45
   variable LOGGER in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/cloud/CloudPlugin.java
module edu::umd::cs::findbugs::cloud::CloudPlugin
   function getClassLoader() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCloudClass() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDescription() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDetails() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFindbugsPluginId() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getId() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getProperties() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUsernameClass() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isHidden() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isOnline() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDescription() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
   function CloudPlugin(String,String,ClassLoader,Class<?extends Cloud >,Class<?extends NameLookup >,boolean,PropertyBundle,String,String) in line 48
      protection public
      13 lines of code
      9 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/cloud/CloudPluginBuilder.java
module edu::umd::cs::findbugs::cloud::CloudPluginBuilder
   function createCloudPlugin() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable findbugsPluginId defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses variable cloudid defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses variable classLoader defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses variable cloudClass defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses variable usernameClass defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses variable hidden defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses variable properties defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses variable description defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses variable details defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
   function getFindbugsPluginId() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable findbugsPluginId defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
   function isOnlineStorage() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable onlineStorage defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
   function setClassLoader(ClassLoader) in line 32
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classLoader defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
   function setCloudClass(Class<?extends Cloud >) in line 37
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable cloudClass defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
   function setCloudid(String) in line 27
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable cloudid defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
   function setDescription(String) in line 52
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
   function setDetails(String) in line 57
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable details defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
   function setFindbugsPluginId(String) in line 80
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable findbugsPluginId defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
   function setHidden(boolean) in line 62
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable hidden defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
   function setOnlineStorage(boolean) in line 71
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable onlineStorage defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
   function setProperties(PropertyBundle) in line 47
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable properties defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
   function setUsernameClass(Class<?extends NameLookup >) in line 42
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable usernameClass defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
   variable classLoader in line 9
   variable cloudClass in line 11
   variable cloudid in line 7
   variable description in line 17
   variable details in line 19
   variable findbugsPluginId in line 25
   variable hidden in line 21
   variable onlineStorage in line 23
   variable properties in line 15
   variable usernameClass in line 13
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/cloud/DoNothingCloud.java
module edu::umd::cs::findbugs::cloud::DoNothingCloud
   inherits from edu::umd::cs::findbugs::cloud::Cloud
   function addDateSeen(BugInstance,long) in line 372
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function getXmlProps() defined in edu::umd::cs::findbugs::BugInstance
      uses function setFirstSeen(Date) defined in edu::umd::cs::findbugs::BugInstance::XmlProps
   function addListener(CloudListener) in line 83
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function addStatusListener(CloudStatusListener) in line 91
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function availableForInitialization() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function bugFiled(BugInstance,@CheckForNull Object) in line 274
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function bugsPopulated() in line 126
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function canStoreUserAnnotation(BugInstance) in line 407
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function claim(BugInstance) in line 294
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function claimedBy(BugInstance) in line 289
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function communicationInitiated() in line 417
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function fileBug(BugInstance) in line 259
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBugCollection() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::cloud::DoNothingCloud
   function getBugIsUnassigned(BugInstance) in line 244
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBugLink(BugInstance) in line 249
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBugLinkStatus(BugInstance) in line 229
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBugLinkType(BugInstance) in line 254
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBugStatus(BugInstance) in line 234
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getClassificationDisagreement(BugInstance) in line 334
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getClassificationScore(BugInstance) in line 324
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getClassificationVariance(BugInstance) in line 329
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getCloudName() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCloudReport(BugInstance) in line 279
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getCloudReportWithoutMe(BugInstance) in line 284
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCloudReport(BugInstance) defined in edu::umd::cs::findbugs::cloud::DoNothingCloud
   function getConsensusDesignation(BugInstance) in line 388
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function getXmlProps() defined in edu::umd::cs::findbugs::BugInstance
      uses function getConsensus() defined in edu::umd::cs::findbugs::BugInstance::XmlProps
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function getFallbackPlugin() in line 31
      10 lines of code
      0 parameters
      1 conditional paths
      uses function setCloudid(String) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function setDescription(String) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function setDetails(String) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function setClassLoader(ClassLoader) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function setUsernameClass(Class<?extends NameLookup >) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function setProperties(PropertyBundle) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function setOnlineStorage(boolean) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function createCloudPlugin() defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
   function getFirstSeen(BugInstance) in line 354
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getFirstSeenFromVersion(BugInstance) defined in edu::umd::cs::findbugs::cloud::DoNothingCloud
      uses function getXmlProps() defined in edu::umd::cs::findbugs::BugInstance
      uses function getFirstSeen() defined in edu::umd::cs::findbugs::BugInstance::XmlProps
   function getFirstSeenFromVersion(BugInstance) in line 378
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugCollection() defined in edu::umd::cs::findbugs::cloud::DoNothingCloud
      uses function getAppVersionFromSequenceNumber(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function getTimestamp() defined in edu::umd::cs::findbugs::BugCollection
      uses function getTimestamp() defined in edu::umd::cs::findbugs::AppVersion
   function getGuiCallback() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIWillFix(BugInstance) in line 214
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMode() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberReviewers(BugInstance) in line 344
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getXmlProps() defined in edu::umd::cs::findbugs::BugInstance
      uses function getReviewCount() defined in edu::umd::cs::findbugs::BugInstance::XmlProps
   function getPlugin() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::cloud::DoNothingCloud
   function getPortionObsoleteClassifications(BugInstance) in line 339
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getPrimaryDesignation(BugInstance) in line 309
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getProjects(String) in line 199
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getReviewers(BugInstance) in line 349
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSigninState() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NO_SIGNIN_REQUIRED defined in edu::umd::cs::findbugs::cloud::Cloud::SigninState
   function getSourceLink(BugInstance) in line 224
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSourceLinkToolTip(@CheckForNull BugInstance) in line 219
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getStatusMsg() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUser() in line 138
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUserDate(BugInstance) in line 304
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getUserDesignation(BugInstance) in line 314
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getUserEvaluation(BugInstance) in line 319
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getUserTimestamp(BugInstance) in line 299
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getWillNotBeFixed(BugInstance) in line 239
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function initialize() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initiateCommunication() in line 130
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function isInCloud(BugInstance) in line 204
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getXmlProps() defined in edu::umd::cs::findbugs::BugInstance
      uses variable isInCloud defined in edu::umd::cs::findbugs::BugInstance::XmlProps
   function isInitialized() in line 422
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isOnlineCloud() in line 209
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::cloud::DoNothingCloud
      uses function getXmlCloudDetails() defined in edu::umd::cs::findbugs::BugCollection
   function isSavingSignInInformationEnabled() in line 152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function overallClassificationIsNotAProblem(BugInstance) in line 401
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getConsensusDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::DoNothingCloud
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function score() defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function printCloudSummary(PrintWriter,Iterable< BugInstance >,String[]) in line 79
      protection public
      2 lines of code
      3 parameters
      1 conditional paths
   function removeListener(CloudListener) in line 87
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function removeStatusListener(CloudStatusListener) in line 95
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function setBugLinkOnCloudAndStoreIssueDetails(BugInstance,String,String) in line 264
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function setMode(Mode) in line 170
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function setSaveSignInInformation(boolean) in line 148
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function shutdown() in line 134
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function signIn() in line 157
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function signOut() in line 161
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function storeUserAnnotation(BugInstance) in line 412
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function supportsBugLinks() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function supportsClaims() in line 189
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function supportsCloudReports() in line 184
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function supportsCloudSummaries() in line 194
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function supportsSourceLinks() in line 174
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function updateBugStatusCache(BugInstance,String) in line 270
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function waitUntilIssueDataDownloaded() in line 113
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function waitUntilIssueDataDownloaded(long,TimeUnit) in line 122
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function waitUntilNewIssuesUploaded() in line 109
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function waitUntilNewIssuesUploaded(long,TimeUnit) in line 117
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function DoNothingCloud(CloudPlugin,BugCollection,Properties) in line 44
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::cloud::DoNothingCloud
   function DoNothingCloud(BugCollection) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getFallbackPlugin() defined in edu::umd::cs::findbugs::cloud::DoNothingCloud
   variable bugCollection in line 29
   variable plugin in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/cloud/MutableCloudTask.java
module edu::umd::cs::findbugs::cloud::MutableCloudTask
   inherits from edu::umd::cs::findbugs::cloud::Cloud::CloudTask
   function addListener(Cloud.CloudTaskListener) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable listeners defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
   function clearListeners() in line 100
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable listeners defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
      uses variable defaultListener defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
   function failed(String) in line 78
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function finished() defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
      uses function getListeners() defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
      uses function clearListeners() defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
   function finished() in line 70
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getListeners() defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
      uses function clearListeners() defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
   function getListeners() in line 91
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable listeners defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
      uses variable useDefaultListener defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
      uses variable defaultListener defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
   function getName() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
   function getPercentCompleted() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable percentDone defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
   function getStatusLine() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable substatus defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
   function isFinished() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function finished() defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
   function isUsingDefaultListener() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable listeners defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
   function removeListener(Cloud.CloudTaskListener) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable listeners defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
   function setDefaultListener(Cloud.CloudTaskListener) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable defaultListener defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
   function setUseDefaultListener(boolean) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function update(String,double) in line 62
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable substatus defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
      uses variable percentDone defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
      uses function getListeners() defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
   function MutableCloudTask(String) in line 23
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::cloud::MutableCloudTask
   variable defaultListener in line 17
   variable finished in line 19
   variable listeners in line 10
   variable name in line 8
   variable percentDone in line 14
   variable substatus in line 12
   variable useDefaultListener in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/cloud/OnlineCloud.java
module edu::umd::cs::findbugs::cloud::OnlineCloud
   inherits from edu::umd::cs::findbugs::cloud::Cloud
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/cloud/SignInCancelledException.java
module edu::umd::cs::findbugs::cloud::SignInCancelledException
   inherits from Exception
   function SignInCancelledException() in line 4
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SignInCancelledException(Throwable) in line 8
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/cloud/username/ClearCloudPreferences.java
module edu::umd::cs::findbugs::cloud::username::ClearCloudPreferences
   function main(String) in line 30
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/cloud/username/LocalNameLookup.java
module edu::umd::cs::findbugs::cloud::username::LocalNameLookup
   inherits from edu::umd::cs::findbugs::cloud::username::NameLookup
   function getUsername() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function signIn(CloudPlugin,BugCollection) in line 33
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable USER_NAME defined in edu::umd::cs::findbugs::cloud::username::NameLookup
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/cloud/username/NameLookup.java
module edu::umd::cs::findbugs::cloud::username::NameLookup
   function getUsername() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function signIn(CloudPlugin,BugCollection) in line 47
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   variable USER_NAME in line 32
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/cloud/username/NoNameLookup.java
module edu::umd::cs::findbugs::cloud::username::NoNameLookup
   inherits from edu::umd::cs::findbugs::cloud::username::NameLookup
   function getUsername() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function signIn(CloudPlugin,BugCollection) in line 36
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/cloud/username/PromptForNameLookup.java
module edu::umd::cs::findbugs::cloud::username::PromptForNameLookup
   inherits from edu::umd::cs::findbugs::cloud::username::NameLookup
   function getUsername() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function init() in line 41
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
      uses variable USER_NAME defined in edu::umd::cs::findbugs::cloud::username::NameLookup
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::Project
      uses function showQuestionDialog(String,String,String) defined in edu::umd::cs::findbugs::IGuiCallback
   function signIn(CloudPlugin,BugCollection) in line 65
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/cloud/username/WebCloudNameLookup.java
module edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
   inherits from edu::umd::cs::findbugs::cloud::username::NameLookup
   function checkAuthorized(URL) in line 215
      24 lines of code
      1 parameters
      4 conditional paths
      uses variable sessionId defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses variable username defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses variable LOGGER defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
   function checkResolveHost() in line 136
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable url defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
   function clearSavedSessionInformation() in line 163
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getAuthCheckUrl(long) in line 146
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable url defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses variable sessionId defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
   function getHost() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable url defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
   function getSessionId() in line 173
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sessionId defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
   function getUsername() in line 178
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable username defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
   function isSavingSessionInfoEnabled() in line 158
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable SYSPROP_NEVER_SAVE_SESSION defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses variable KEY_SAVE_SESSION_INFO defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
   function loadOrCreateSessionId() in line 190
      16 lines of code
      0 parameters
      4 conditional paths
      uses function loadSessionId() defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses variable LOGGER defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses variable secureRandom defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses function isSavingSessionInfoEnabled() defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses function saveSessionInformation(long) defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
   function loadProperties(CloudPlugin) in line 93
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getProperties() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
      uses variable url defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses function getProperty(String) defined in edu::umd::cs::findbugs::PropertyBundle
      uses variable APPENGINE_HOST_PROPERTY_NAME defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses function getId() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
   function loadSessionId() in line 210
      4 lines of code
      0 parameters
      1 conditional paths
   function saveSessionInformation(long) in line 168
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable sessionId defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
   function setSaveSessionInformation(boolean) in line 150
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable KEY_SAVE_SESSION_INFO defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses function clearSavedSessionInformation() defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
   function signIn(CloudPlugin,BugCollection) in line 63
      protection public
      29 lines of code
      2 parameters
      6 conditional paths
      uses function loadProperties(CloudPlugin) defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses function softSignin() defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses variable sessionId defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses function loadOrCreateSessionId() defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses variable LOGGER defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses variable url defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses variable USER_SIGNIN_TIMEOUT_SECS defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses function checkAuthorized(URL) defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses function getAuthCheckUrl(long) defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
   function softSignin() in line 107
      protection public
      28 lines of code
      0 parameters
      6 conditional paths
      uses variable url defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses function checkResolveHost() defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses variable sessionId defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses function checkAuthorized(URL) defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses function getAuthCheckUrl(long) defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses variable LOGGER defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
      uses function loadSessionId() defined in edu::umd::cs::findbugs::cloud::username::WebCloudNameLookup
   variable APPENGINE_HOST_PROPERTY_NAME in line 46
   variable KEY_SAVE_SESSION_INFO in line 47
   variable LOGGER in line 52
   variable secureRandom in line 188
   variable sessionId in line 58
   variable SYSPROP_NEVER_SAVE_SESSION in line 50
   variable url in line 60
   variable USER_SIGNIN_TIMEOUT_SECS in line 55
   variable username in line 59
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/CommandLineUiCallback.java
module edu::umd::cs::findbugs::CommandLineUiCallback
   inherits from edu::umd::cs::findbugs::IGuiCallback
   function displayNonmodelMessage(String,String) in line 112
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getBugUpdateExecutor() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugUpdateExecutor defined in edu::umd::cs::findbugs::CommandLineUiCallback
   function getProgressMonitorInputStream(InputStream,int,String) in line 102
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function invokeInGUIThread(Runnable) in line 213
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function isHeadless() in line 189
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parseAnswer(String) in line 79
      21 lines of code
      1 parameters
      6 conditional paths
   function registerCloud(Project,BugCollection,Cloud) in line 144
      protection public
      2 lines of code
      3 parameters
      1 conditional paths
   function setErrorMessage(String) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function showConfirmDialog(String,String,String,String) in line 59
      protection public
      19 lines of code
      4 parameters
      4 conditional paths
      uses function parseAnswer(String) defined in edu::umd::cs::findbugs::CommandLineUiCallback
   function showDocument(URL) in line 139
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function showForm(String,String,List< FormItem >) in line 129
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function showMessageDialog(String) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function showMessageDialogAndWait(String) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function showQuestionDialog(String,String,String) in line 124
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function unregisterCloud(Project,BugCollection,Cloud) in line 202
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function CommandLineUiCallback() in line 44
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable bugUpdateExecutor in line 42
module edu::umd::cs::findbugs::CommandLineUiCallback::CurrentThreadExecutorService
   inherits from java::util::concurrent::AbstractExecutorService
   function awaitTermination(long,TimeUnit) in line 173
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function execute(Runnable) in line 178
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isShutdown() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTerminated() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function shutdown() in line 154
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function shutdownNow() in line 158
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ComponentPlugin.java
module edu::umd::cs::findbugs::ComponentPlugin
   function getClassLoader() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getComponentClass() in line 94
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function getDescription() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDetails() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getId() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPlugin() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getProperties() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isAvailable() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isEnabledByDefault() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isNamed(Set< String >) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ComponentPlugin(Plugin,String,ClassLoader,Class<?extends T >,PropertyBundle,boolean,String,String) in line 30
      protection public
      17 lines of code
      8 parameters
      1 conditional paths
   variable classLoader in line 88
   variable description in line 90
   variable details in line 91
   variable enabledByDefault in line 92
   variable id in line 86
   variable plugin in line 47
   variable properties in line 89
   variable shortId in line 87
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/config/AnalysisFeatureSetting.java
module edu::umd::cs::findbugs::config::AnalysisFeatureSetting
   function configure(AnalysisContext) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setBoolProperty(@AnalysisFeature int,boolean) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable property defined in edu::umd::cs::findbugs::config::AnalysisFeatureSetting
      uses variable enabled defined in edu::umd::cs::findbugs::config::AnalysisFeatureSetting
   function AnalysisFeatureSetting(@AnalysisFeature int,boolean) in line 45
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable property defined in edu::umd::cs::findbugs::config::AnalysisFeatureSetting
      uses variable enabled defined in edu::umd::cs::findbugs::config::AnalysisFeatureSetting
   variable enabled in line 35
   variable property in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/config/CommandLine.java
module edu::umd::cs::findbugs::config::CommandLine
   abstract class
   function addCommandLineOptions(ArrayList< String >,BufferedReader,boolean,boolean) in line 223
      22 lines of code
      4 parameters
      6 conditional paths
   function addOption(String,String,String) in line 137
      protection public
      11 lines of code
      3 parameters
      2 conditional paths
      uses variable optionList defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionDescriptionMap defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable requiresArgumentSet defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable argumentDescriptionMap defined in edu::umd::cs::findbugs::config::CommandLine
   function addSwitch(String,String) in line 95
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable optionList defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionDescriptionMap defined in edu::umd::cs::findbugs::config::CommandLine
   function addSwitchWithOptionalExtraPart(String,String,String) in line 115
      protection public
      11 lines of code
      3 parameters
      2 conditional paths
      uses variable optionList defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionExtraPartSynopsisMap defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionDescriptionMap defined in edu::umd::cs::findbugs::config::CommandLine
   function expandOptionFiles(String[],boolean,boolean) in line 172
      protection public
      33 lines of code
      3 parameters
      5 conditional paths
      uses function parse(String,int,int,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function getAnalysisOptionProperties(boolean,boolean) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function addCommandLineOptions(ArrayList< String >,BufferedReader,boolean,boolean) defined in edu::umd::cs::findbugs::config::CommandLine
   function getAnalysisOptionProperties(boolean,boolean) in line 206
      protection public
      16 lines of code
      2 parameters
      3 conditional paths
      uses function addCommandLineOptions(ArrayList< String >,BufferedReader,boolean,boolean) defined in edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 364
      1 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 374
      1 lines of code
      2 parameters
      1 conditional paths
   function makeOptionUnlisted(String) in line 154
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable unlistedOptions defined in edu::umd::cs::findbugs::config::CommandLine
   function parse(String,int,int,String) in line 268
      protection public
      25 lines of code
      4 parameters
      3 conditional paths
      uses function printUsage(OutputStream) defined in edu::umd::cs::findbugs::config::CommandLine
   function parse(String) in line 306
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function parse(String,int,int,String) defined in edu::umd::cs::findbugs::config::CommandLine
   function parse(String,boolean) in line 310
      43 lines of code
      2 parameters
      10 conditional paths
      uses variable optionDescriptionMap defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable requiresArgumentSet defined in edu::umd::cs::findbugs::config::CommandLine
      uses function handleOptionWithArgument(String,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function handleOption(String,String) defined in edu::umd::cs::findbugs::config::CommandLine
   function printField(PrintStream,String,int) in line 417
      12 lines of code
      3 parameters
      3 conditional paths
      uses variable SPACES defined in edu::umd::cs::findbugs::config::CommandLine
   function printUsage(OutputStream) in line 382
      protection public
      34 lines of code
      1 parameters
      6 conditional paths
      uses variable optionList defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionGroups defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable unlistedOptions defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionExtraPartSynopsisMap defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable requiresArgumentSet defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable argumentDescriptionMap defined in edu::umd::cs::findbugs::config::CommandLine
      uses function printField(PrintStream,String,int) defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionDescriptionMap defined in edu::umd::cs::findbugs::config::CommandLine
   function startOptionGroup(String) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable optionGroups defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionList defined in edu::umd::cs::findbugs::config::CommandLine
   function CommandLine() in line 65
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   variable argumentDescriptionMap in line 61
   variable optionDescriptionMap in line 57
   variable optionExtraPartSynopsisMap in line 59
   variable optionGroups in line 53
   variable optionList in line 49
   variable requiresArgumentSet in line 55
   variable SPACES in line 47
   variable unlistedOptions in line 51
module edu::umd::cs::findbugs::config::CommandLine::HelpRequestedException
   inherits from Exception
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/config/ProjectFilterSettings.java
module edu::umd::cs::findbugs::config::ProjectFilterSettings
   inherits from Cloneable
   function addCategory(String) in line 340
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function clearAllCategories() in line 360
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function clone() in line 506
      protection public
      21 lines of code
      0 parameters
      2 conditional paths
      uses function clone() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable hiddenBugCategorySet defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable activeBugCategorySet defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function setMinRank(int) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable displayFalseWarnings defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function containsCategory(String) in line 373
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function createDefault() in line 135
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function displayFalseWarnings() in line 407
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function displayWarning(BugInstance) in line 263
      protection public
      30 lines of code
      1 parameters
      6 conditional paths
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugRank() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getProperty(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable IS_BUG defined in edu::umd::cs::findbugs::BugProperty
   function equals(Object) in line 474
      protection public
      25 lines of code
      1 parameters
      6 conditional paths
      uses function getMinPriority() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getMinRank() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable hiddenBugCategorySet defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable displayFalseWarnings defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function fromEncodedString(String) in line 151
      protection public
      73 lines of code
      1 parameters
      11 conditional paths
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function addCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function setDisplayFalseWarnings(boolean) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function setMinRank(int) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function getActiveCategorySet() in line 386
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getIntPriorityAsString(int) in line 541
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable EXPERIMENTAL_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable MEDIUM_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable DEFAULT_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function getMinPriority() in line 321
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMinPriorityAsInt() in line 330
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMinRank() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 534
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hiddenFromEncodedString(ProjectFilterSettings,String) in line 236
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses function removeCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function hiddenToEncodedString() in line 416
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
   function removeCategory(String) in line 351
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setDisplayFalseWarnings(boolean) in line 398
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setMinPriority(String) in line 300
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
   function setMinRank(int) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toEncodedString() in line 435
      protection public
      27 lines of code
      0 parameters
      3 conditional paths
   function toString() in line 464
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ProjectFilterSettings() in line 106
      14 lines of code
      0 parameters
      1 conditional paths
      uses function getBugCategories() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   variable activeBugCategorySet in line 88
   variable DEFAULT_MIN_RANK in line 85
   variable DEFAULT_PRIORITY in line 61
      protection public
   variable displayFalseWarnings in line 100
   variable EXPERIMENTAL_PRIORITY in line 58
      protection public
   variable FIELD_DELIMITER in line 77
   variable hiddenBugCategorySet in line 92
   variable HIGH_PRIORITY in line 49
      protection public
   variable LISTITEM_DELIMITER in line 83
   variable LOW_PRIORITY in line 55
      protection public
   variable MEDIUM_PRIORITY in line 52
      protection public
   variable minPriority in line 94
   variable minPriorityAsInt in line 96
   variable minRank in line 98
   variable priorityNameToValueMap in line 65
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/config/SortedProperties.java
module edu::umd::cs::findbugs::config::SortedProperties
   inherits from java::util::Properties
   function keys() in line 21
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function sortKeys(Set< String >) defined in edu::umd::cs::findbugs::config::SortedProperties
   function sortKeys(Set< String >) in line 38
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/config/UserPreferences.java
module edu::umd::cs::findbugs::config::UserPreferences
   inherits from Cloneable
   function clone() in line 516
      protection public
      16 lines of code
      0 parameters
      2 conditional paths
      uses function UserPreferences() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function clone() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function clone() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable includeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable excludeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable excludeBugsFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable customPlugins defined in edu::umd::cs::findbugs::config::UserPreferences
   function createDefaultUserPreferences() in line 154
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function UserPreferences() defined in edu::umd::cs::findbugs::config::UserPreferences
   function enableAllDetectors(boolean) in line 411
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
   function enableDetector(DetectorFactory,boolean) in line 380
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
   function equals(Object) in line 493
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses function UserPreferences() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable runAtFullBuild defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function equals(Object) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable effort defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable includeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable excludeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable excludeBugsFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable customPlugins defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable cloudId defined in edu::umd::cs::findbugs::config::UserPreferences
   function getAnalysisFeatureSettings() in line 731
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable effort defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable EFFORT_DEFAULT defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable DEFAULT_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable EFFORT_MIN defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable MIN_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable MAX_EFFORT defined in edu::umd::cs::findbugs::FindBugs
   function getCloudId() in line 548
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cloudId defined in edu::umd::cs::findbugs::config::UserPreferences
   function getCustomPlugins() in line 624
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable customPlugins defined in edu::umd::cs::findbugs::config::UserPreferences
   function getCustomPlugins(boolean) in line 641
      protection public
      16 lines of code
      1 parameters
      5 conditional paths
      uses variable customPlugins defined in edu::umd::cs::findbugs::config::UserPreferences
   function getEffort() in line 533
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable effort defined in edu::umd::cs::findbugs::config::UserPreferences
   function getExcludeBugsFiles() in line 570
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable excludeBugsFiles defined in edu::umd::cs::findbugs::config::UserPreferences
   function getExcludeFilterFiles() in line 588
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable excludeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
   function getFilterSettings() in line 437
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
   function getIncludeFilterFiles() in line 559
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable includeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
   function getRecentProjects() in line 333
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
   function getUserDetectorThreshold() in line 446
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMinPriorityAsInt() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function hashCode() in line 509
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function hashCode() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable effort defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable includeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable excludeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable runAtFullBuild defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable cloudId defined in edu::umd::cs::findbugs::config::UserPreferences
   function isDetectorEnabled(DetectorFactory) in line 391
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function isDefaultEnabled() defined in edu::umd::cs::findbugs::DetectorFactory
   function isRunAtFullBuild() in line 478
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable runAtFullBuild defined in edu::umd::cs::findbugs::config::UserPreferences
   function read() in line 162
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable PREF_FILE_NAME defined in edu::umd::cs::findbugs::config::UserPreferences
   function read(@WillClose InputStream) in line 182
      protection public
      74 lines of code
      1 parameters
      15 conditional paths
      uses variable MAX_RECENT_FILES defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable BOOL_SEPARATOR defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable FILTER_SETTINGS_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable DETECTOR_THRESHOLD_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function setUserDetectorThreshold(int) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable FILTER_SETTINGS2_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable RUN_AT_FULL_BUILD defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable runAtFullBuild defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable effort defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable EFFORT_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable EFFORT_DEFAULT defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable cloudId defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable CLOUD_ID_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable includeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function readProperties(Properties,String) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable KEY_INCLUDE_FILTER defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable excludeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable KEY_EXCLUDE_FILTER defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable excludeBugsFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable KEY_EXCLUDE_BUGS defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable customPlugins defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable KEY_PLUGIN defined in edu::umd::cs::findbugs::config::UserPreferences
   function readProperties(Properties,String) in line 669
      23 lines of code
      2 parameters
      4 conditional paths
      uses variable BOOL_SEPARATOR defined in edu::umd::cs::findbugs::config::UserPreferences
   function removeProject(String) in line 358
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
   function setCloudId(String) in line 555
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cloudId defined in edu::umd::cs::findbugs::config::UserPreferences
   function setCustomPlugins(Map< String, Boolean >) in line 603
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable customPlugins defined in edu::umd::cs::findbugs::config::UserPreferences
   function setEffort(String) in line 537
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable EFFORT_MIN defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable effort defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable EFFORT_DEFAULT defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable EFFORT_MAX defined in edu::umd::cs::findbugs::config::UserPreferences
   function setExcludeBugsFiles(Map< String, Boolean >) in line 574
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable excludeBugsFiles defined in edu::umd::cs::findbugs::config::UserPreferences
   function setExcludeFilterFiles(Map< String, Boolean >) in line 581
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable excludeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
   function setIncludeFilterFiles(Map< String, Boolean >) in line 563
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable includeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
   function setProjectFilterSettings(ProjectFilterSettings) in line 428
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
   function setRunAtFullBuild(boolean) in line 469
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setUserDetectorThreshold(int) in line 456
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function setUserDetectorThreshold(String) in line 488
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function useProject(String) in line 344
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function removeProject(String) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable MAX_RECENT_FILES defined in edu::umd::cs::findbugs::config::UserPreferences
   function write() in line 260
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable PREF_FILE_NAME defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
   function write(@WillClose OutputStream) in line 279
      protection public
      48 lines of code
      1 parameters
      7 conditional paths
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable BOOL_SEPARATOR defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable FILTER_SETTINGS_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function toEncodedString() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable FILTER_SETTINGS2_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function hiddenToEncodedString() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable DETECTOR_THRESHOLD_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function getMinPriorityAsInt() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable RUN_AT_FULL_BUILD defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable runAtFullBuild defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable EFFORT_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable effort defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable cloudId defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable CLOUD_ID_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function writeProperties(Properties,String,Map< String, Boolean >) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable KEY_INCLUDE_FILTER defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable includeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable KEY_EXCLUDE_FILTER defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable excludeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable KEY_EXCLUDE_BUGS defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable excludeBugsFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable KEY_PLUGIN defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable customPlugins defined in edu::umd::cs::findbugs::config::UserPreferences
   function writeProperties(Properties,String,Map< String, Boolean >) in line 704
      19 lines of code
      3 parameters
      4 conditional paths
      uses variable BOOL_SEPARATOR defined in edu::umd::cs::findbugs::config::UserPreferences
   function UserPreferences() in line 137
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable runAtFullBuild defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable effort defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable EFFORT_DEFAULT defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable includeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable excludeFilterFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable excludeBugsFiles defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable customPlugins defined in edu::umd::cs::findbugs::config::UserPreferences
   variable BOOL_SEPARATOR in line 69
   variable CLOUD_ID_KEY in line 88
   variable cloudId in line 127
   variable customPlugins in line 135
   variable DETECTOR_THRESHOLD_KEY in line 90
   variable detectorEnablementMap in line 119
   variable effort in line 125
   variable EFFORT_DEFAULT in line 73
      protection public
   variable EFFORT_KEY in line 98
   variable EFFORT_MAX in line 75
      protection public
   variable EFFORT_MIN in line 71
      protection public
   variable excludeBugsFiles in line 133
   variable excludeFilterFiles in line 131
   variable FILTER_SETTINGS2_KEY in line 94
   variable FILTER_SETTINGS_KEY in line 92
   variable filterSettings in line 121
   variable includeFilterFiles in line 129
   variable KEY_EXCLUDE_BUGS in line 113
      protection public
   variable KEY_EXCLUDE_FILTER in line 108
      protection public
   variable KEY_INCLUDE_FILTER in line 103
      protection public
   variable KEY_PLUGIN in line 80
      protection public
   variable MAX_RECENT_FILES in line 86
   variable PREF_FILE_NAME in line 84
   variable recentProjectsList in line 117
   variable RUN_AT_FULL_BUILD in line 96
   variable runAtFullBuild in line 123
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/DeepSubtypeAnalysis.java
module edu::umd::cs::findbugs::DeepSubtypeAnalysis
   function deepInstanceOf(@DottedClassName String,@DottedClassName String) in line 289
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function deepInstanceOf(JavaClass,JavaClass) in line 304
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function getComponentClass(ReferenceType) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getComponentClass(String) in line 173
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function getLeastSerializableTypeComponent(ReferenceType) in line 79
      protection public
      30 lines of code
      1 parameters
      7 conditional paths
      uses function isDeepSerializable(ReferenceType) defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses function getParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function isDeepRemote(ReferenceType) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isDeepRemote(String) in line 135
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses variable remote defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses function getComponentClass(ReferenceType) defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
   function isDeepSerializable(ReferenceType) in line 53
      protection public
      26 lines of code
      1 parameters
      7 conditional paths
      uses function getParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function isDeepSerializable(@DottedClassName String) in line 110
      protection public
      20 lines of code
      1 parameters
      5 conditional paths
      uses variable storedException defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses function isPrimitiveComponentClass(String) defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses function getComponentClass(ReferenceType) defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses function isDeepSerializable(ReferenceType) defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
   function isDeepSerializable(JavaClass) in line 185
      protection public
      91 lines of code
      1 parameters
      20 conditional paths
      uses variable storedException defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses variable serializable defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses variable collection defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses variable map defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDirectSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable comparator defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
   function isPrimitiveComponentClass(String) in line 155
      13 lines of code
      1 parameters
      2 conditional paths
   variable collection in line 22
   variable comparator in line 24
   variable DEBUG in line 32
   variable map in line 26
   variable remote in line 28
   variable serializable in line 20
   variable storedException in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/DelegatingBugReporter.java
module edu::umd::cs::findbugs::DelegatingBugReporter
   inherits from edu::umd::cs::findbugs::BugReporter
   function addObserver(BugReporterObserver) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function addObserver(BugReporterObserver) defined in edu::umd::cs::findbugs::BugReporter
   function finish() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function finish() defined in edu::umd::cs::findbugs::BugReporter
   function getBugCollection() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugReporter
   function getDelegate() in line 48
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
   function getProjectStats() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugReporter
   function logError(String) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function logError(String,Throwable) in line 108
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function observeClass(ClassDescriptor) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function observeClass(ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IClassObserver
   function reportBug(@Nonnull BugInstance) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function reportMissingClass(ClassNotFoundException) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function reportMissingClass(ClassDescriptor) in line 83
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function reportQueuedErrors() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportQueuedErrors() defined in edu::umd::cs::findbugs::BugReporter
   function reportSkippedAnalysis(MethodDescriptor) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportSkippedAnalysis(MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function setErrorVerbosity(int) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function setErrorVerbosity(int) defined in edu::umd::cs::findbugs::BugReporter
   function setPriorityThreshold(int) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function setPriorityThreshold(int) defined in edu::umd::cs::findbugs::BugReporter
   function DelegatingBugReporter(BugReporter) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
   variable delegate in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/AnyMethodReturnValueStreamFactory.java
module edu::umd::cs::findbugs::detect::AnyMethodReturnValueStreamFactory
   inherits from edu::umd::cs::findbugs::detect::StreamFactory
   function createStream(Location,ObjectType,ConstantPoolGen,RepositoryLookupFailureCallback) in line 55
      protection public
      25 lines of code
      4 parameters
      5 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable baseClassType defined in edu::umd::cs::findbugs::detect::AnyMethodReturnValueStreamFactory
      uses function setIgnoreImplicitExceptions(boolean) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable bugType defined in edu::umd::cs::findbugs::detect::AnyMethodReturnValueStreamFactory
      uses function setInteresting(String) defined in edu::umd::cs::findbugs::detect::Stream
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function setBugType(String) in line 49
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugType defined in edu::umd::cs::findbugs::detect::AnyMethodReturnValueStreamFactory
   function AnyMethodReturnValueStreamFactory(String) in line 44
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable baseClassType in line 40
   variable bugType in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/AppendingToAnObjectOutputStream.java
module edu::umd::cs::findbugs::detect::AppendingToAnObjectOutputStream
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 51
      protection public
      38 lines of code
      1 parameters
      8 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSpecialKind() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable FILE_OPENED_IN_APPEND_MODE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function visit(Method) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AppendingToAnObjectOutputStream(BugReporter) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/AtomicityProblem.java
module edu::umd::cs::findbugs::detect::AtomicityProblem
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 68
      protection public
      62 lines of code
      1 parameters
      20 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getXClassOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::AtomicityProblem
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function visit(Code) in line 53
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function AtomicityProblem(BugReporter) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::AtomicityProblem
   variable bugReporter in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/BadAppletConstructor.java
module edu::umd::cs::findbugs::detect::BadAppletConstructor
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 80
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadAppletConstructor
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable inConstructor defined in edu::umd::cs::findbugs::detect::BadAppletConstructor
   function visit(Code) in line 73
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable inConstructor defined in edu::umd::cs::findbugs::detect::BadAppletConstructor
   function visitClassContext(ClassContext) in line 52
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable appletClass defined in edu::umd::cs::findbugs::detect::BadAppletConstructor
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadAppletConstructor
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function BadAppletConstructor(BugReporter) in line 40
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadAppletConstructor
      uses variable appletClass defined in edu::umd::cs::findbugs::detect::BadAppletConstructor
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   variable appletClass in line 36
   variable bugReporter in line 34
   variable inConstructor in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/BadlyOverriddenAdapter.java
module edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function visit(JavaClass) in line 49
      protection public
      25 lines of code
      1 parameters
      5 conditional paths
      uses variable methodMap defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable badOverrideMap defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable packageName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable isAdapter defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(Method) in line 85
      protection public
      16 lines of code
      1 parameters
      5 conditional paths
      uses variable isAdapter defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodMap defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable badOverrideMap defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visitAfter(JavaClass) in line 76
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable badOverrideMap defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function BadlyOverriddenAdapter(BugReporter) in line 42
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable methodMap defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable badOverrideMap defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
   variable badOverrideMap in line 40
   variable bugReporter in line 34
   variable isAdapter in line 36
   variable methodMap in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/BadResultSetAccess.java
module edu::umd::cs::findbugs::detect::BadResultSetAccess
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 73
      protection public
      26 lines of code
      1 parameters
      5 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable dbFieldTypesSet defined in edu::umd::cs::findbugs::detect::BadResultSetAccess
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadResultSetAccess
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function BadResultSetAccess(BugReporter) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadResultSetAccess
   variable bugReporter in line 66
   variable dbFieldTypesSet in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/BadSyntaxForRegularExpression.java
module edu::umd::cs::findbugs::detect::BadSyntaxForRegularExpression
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function getIntValue(int,int) in line 118
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function sawOpcode(int) in line 131
      protection public
      29 lines of code
      1 parameters
      10 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawRegExPattern(int) defined in edu::umd::cs::findbugs::detect::BadSyntaxForRegularExpression
      uses function getIntValue(int,int) defined in edu::umd::cs::findbugs::detect::BadSyntaxForRegularExpression
      uses function singleDotPatternWouldBeSilly(int,boolean) defined in edu::umd::cs::findbugs::detect::BadSyntaxForRegularExpression
   function sawRegExPattern(int) in line 78
      3 lines of code
      1 parameters
      1 conditional paths
   function sawRegExPattern(int,int) in line 82
      34 lines of code
      2 parameters
      7 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable FILE_SEPARATOR_STRING defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable ERROR_MSG_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
      uses variable REGEX_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
      uses variable STRING_MESSAGE defined in edu::umd::cs::findbugs::StringAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function singleDotPatternWouldBeSilly(int,boolean) in line 40
      37 lines of code
      2 parameters
      9 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function BadSyntaxForRegularExpression(BugReporter) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/BadUseOfReturnValue.java
module edu::umd::cs::findbugs::detect::BadUseOfReturnValue
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 50
      protection public
      26 lines of code
      1 parameters
      7 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 42
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function BadUseOfReturnValue(BugReporter) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/BooleanReturnNull.java
module edu::umd::cs::findbugs::detect::BooleanReturnNull
   inherits from edu::umd::cs::findbugs::detect::TypeReturnNull
   function accumulateBug() in line 40
      4 lines of code
      0 parameters
      1 conditional paths
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function matchesReturnSignature(String) in line 35
      3 lines of code
      1 parameters
      1 conditional paths
   function BooleanReturnNull(BugReporter) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/BuildCheckReturnAnnotationDatabase.java
module edu::umd::cs::findbugs::detect::BuildCheckReturnAnnotationDatabase
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   function handleClassElementValue(ClassElementValue,Map< String, ElementValue >,Target) in line 138
      10 lines of code
      3 parameters
      3 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitAnnotation(@DottedClassName String,Map< String, ElementValue >,boolean) in line 72
      protection public
      65 lines of code
      3 parameters
      16 conditional paths
      uses variable DEFAULT_ANNOTATION_ANNOTATION_CLASS defined in edu::umd::cs::findbugs::detect::BuildCheckReturnAnnotationDatabase
      uses variable defaultKind defined in edu::umd::cs::findbugs::detect::BuildCheckReturnAnnotationDatabase
      uses variable METHOD defined in edu::umd::cs::findbugs::ba::AnnotationDatabase::Target
      uses function handleClassElementValue(ClassElementValue,Map< String, ElementValue >,Target) defined in edu::umd::cs::findbugs::detect::BuildCheckReturnAnnotationDatabase
      uses variable CHECK_RETURN_VALUE_IGNORE defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_MEDIUM_BAD_PRACTICE defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_HIGH defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_MEDIUM defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function BuildCheckReturnAnnotationDatabase() in line 59
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   variable DEFAULT_ANNOTATION_ANNOTATION_CLASS in line 48
   variable defaultKind in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/BuildInterproceduralCallGraph.java
module edu::umd::cs::findbugs::detect::BuildInterproceduralCallGraph
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function findVertex(XMethod) in line 102
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable callGraph defined in edu::umd::cs::findbugs::detect::BuildInterproceduralCallGraph
      uses function lookupVertex(MethodDescriptor) defined in edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraph
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function setXmethod(XMethod) defined in edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraphVertex
      uses function addVertex(InterproceduralCallGraphVertex) defined in edu::umd::cs::findbugs::ba::ch::InterproceduralCallGraph
   function report() in line 114
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable FIND_EFFECTIVE_RELEVANT_QUALIFIERS defined in edu::umd::cs::findbugs::ba::jsr305::Analysis
      uses function eagerlyPutDatabase(Class< E >,E) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable callGraph defined in edu::umd::cs::findbugs::detect::BuildInterproceduralCallGraph
   function sawOpcode(int) in line 79
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
      uses function getMethodDescriptorOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function findVertex(XMethod) defined in edu::umd::cs::findbugs::detect::BuildInterproceduralCallGraph
      uses variable callGraph defined in edu::umd::cs::findbugs::detect::BuildInterproceduralCallGraph
      uses function createEdge(VertexType,VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable currentVertex defined in edu::umd::cs::findbugs::detect::BuildInterproceduralCallGraph
   function visitClassContext(ClassContext) in line 65
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable FIND_EFFECTIVE_RELEVANT_QUALIFIERS defined in edu::umd::cs::findbugs::ba::jsr305::Analysis
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
   function visitMethod(Method) in line 73
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable currentVertex defined in edu::umd::cs::findbugs::detect::BuildInterproceduralCallGraph
      uses function findVertex(XMethod) defined in edu::umd::cs::findbugs::detect::BuildInterproceduralCallGraph
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function BuildInterproceduralCallGraph(BugReporter) in line 57
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable FIND_EFFECTIVE_RELEVANT_QUALIFIERS defined in edu::umd::cs::findbugs::ba::jsr305::Analysis
      uses variable callGraph defined in edu::umd::cs::findbugs::detect::BuildInterproceduralCallGraph
   variable callGraph in line 47
   variable currentVertex in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/BuildNonNullAnnotationDatabase.java
module edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   function handleClassElementValue(ClassElementValue,Target) in line 83
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
      uses function addDefaultAnnotation(AnnotationDatabase.Target,String,NullnessAnnotation) defined in edu::umd::cs::findbugs::ba::NullnessAnnotationDatabase
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitAnnotation(String,Map< String, ElementValue >,boolean) in line 92
      protection public
      38 lines of code
      3 parameters
      11 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
      uses variable defaultKind defined in edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
      uses variable METHOD defined in edu::umd::cs::findbugs::ba::AnnotationDatabase::Target
      uses function handleClassElementValue(ClassElementValue,Target) defined in edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addDirectAnnotation(Object,AnnotationEnum) defined in edu::umd::cs::findbugs::ba::AnnotationDatabase
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitParameterAnnotation(int,String,Map< String, ElementValue >,boolean) in line 146
      protection public
      21 lines of code
      4 parameters
      4 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
      uses function addDirectAnnotation(Object,AnnotationEnum) defined in edu::umd::cs::findbugs::ba::AnnotationDatabase
   function visitSyntheticParameterAnnotation(int,boolean) in line 132
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
      uses function addDirectAnnotation(Object,AnnotationEnum) defined in edu::umd::cs::findbugs::ba::AnnotationDatabase
      uses variable UNKNOWN_NULLNESS defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   function BuildNonNullAnnotationDatabase(@CheckForNull NullnessAnnotationDatabase) in line 71
      protection public
      3 lines of code
      1 parameters
      2 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   variable database in line 69
   variable DEBUG in line 55
   variable defaultKind in line 60
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/BuildNonnullReturnDatabase.java
module edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
   function analyzeMethod(ClassContext,Method) in line 84
      49 lines of code
      2 parameters
      8 conditional paths
      uses variable returnsReference defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable returnsNonNull defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
   function considerMethod(ClassContext,Method) in line 71
      8 lines of code
      2 parameters
      3 conditional paths
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable VERBOSE_DEBUG defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
   function visitClassContext(ClassContext) in line 53
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable INTERPROCEDURAL_ANALYSIS_OF_REFERENCED_CLASSES defined in edu::umd::cs::findbugs::FindBugsAnalysisFeatures
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable VERBOSE_DEBUG defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
      uses function getMethodsInCallOrder() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function considerMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
   variable DEBUG in line 51
   variable returnsNonNull in line 82
   variable returnsReference in line 80
   variable VERBOSE_DEBUG in line 49
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/BuildObligationPolicyDatabase.java
module edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
   inherits from edu::umd::cs::findbugs::Detector2
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function addBuiltInPolicies() in line 283
      60 lines of code
      0 parameters
      1 conditional paths
      uses function addFileStreamEntries(String) defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getObligationByName(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function addEntry(ObligationPolicyDatabaseEntry) defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses variable ADD defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
      uses variable STRONG defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseEntryType
      uses variable DEL defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
      uses function addObligation(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function addFileStreamEntries(String) in line 348
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function addObligation(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function addEntry(ObligationPolicyDatabaseEntry) defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses variable ADD defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
      uses variable STRONG defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseEntryType
      uses variable DEL defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
   function addObligations(XMethod) in line 198
      protection public
      60 lines of code
      1 parameters
      9 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getParameterObligationTypes(XMethod) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses variable INFER_CLOSE_METHODS defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function split() defined in edu::umd::cs::findbugs::util::SplitCamelCaseIdentifier
      uses function getNumParams() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function getParameterAnnotation(int,ClassDescriptor) defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable willCloseWhenClosed defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function handleWillCloseWhenClosed(XMethod,Obligation) defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses variable willClose defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function addParameterDeletesObligationDatabaseEntry(XMethod,Obligation,ObligationPolicyDatabaseEntryType) defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses variable STRONG defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseEntryType
      uses variable sawAnnotationsInApplicationCode defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses variable willNotClose defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses enumvalue WEAK defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseEntryType
   function addParameterDeletesObligationDatabaseEntry(XMethod,Obligation,ObligationPolicyDatabaseEntryType) in line 369
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function addParameterDeletesObligationDatabaseEntry(XMethod,Obligation,ObligationPolicyDatabaseEntryType) defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses variable DEBUG_ANNOTATIONS defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
   function finishPass() in line 260
      protection public
      17 lines of code
      0 parameters
      3 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function setStrictChecking(boolean) defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses variable sawAnnotationsInApplicationCode defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses variable DUMP_DB defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function isStrictChecking() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getEntries() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
   function getDetectorClassName() in line 279
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function handleWillCloseWhenClosed(XMethod,Obligation) in line 380
      44 lines of code
      2 parameters
      8 conditional paths
      uses variable DEBUG_ANNOTATIONS defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getObligationByType(ObjectType) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable reporter defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function addEntry(ObligationPolicyDatabaseEntry) defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses variable DEL defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
      uses variable STRONG defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseEntryType
      uses variable ADD defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
   function scanForResourceTypes() in line 425
      21 lines of code
      0 parameters
      5 conditional paths
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getXClassCollection() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable cleanupObligation defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function addObligation(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses variable DEBUG_ANNOTATIONS defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function obligationIterator() defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function visitClass(ClassDescriptor) in line 168
      protection public
      26 lines of code
      1 parameters
      5 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getObligationByType(ObjectType) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getXMethods() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable createsObligation defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function addEntry(ObligationPolicyDatabaseEntry) defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses variable ADD defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
      uses variable STRONG defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseEntryType
      uses variable dischargesObligation defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses variable DEL defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabaseActionType
      uses function addObligations(XMethod) defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
   function BuildObligationPolicyDatabase(BugReporter) in line 131
      protection public
      35 lines of code
      1 parameters
      5 conditional paths
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable database defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function addBuiltInPolicies() defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getObligationByName(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function addObligation(@DottedClassName String) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function addEntry(ObligationPolicyDatabaseEntry) defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function scanForResourceTypes() defined in edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase
      uses function eagerlyPutDatabase(Class< E >,E) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   variable cleanupObligation in line 119
   variable createsObligation in line 121
   variable database in line 111
   variable DEBUG_ANNOTATIONS in line 105
   variable dischargesObligation in line 123
   variable DUMP_DB in line 107
   variable INFER_CLOSE_METHODS in line 103
      protection public
   variable reporter in line 109
   variable sawAnnotationsInApplicationCode in line 129
   variable willClose in line 113
   variable willCloseWhenClosed in line 117
   variable willNotClose in line 115
module edu::umd::cs::findbugs::detect::BuildObligationPolicyDatabase::AuxilaryObligationPropertyDatabase
   inherits from edu::umd::cs::findbugs::ba::interproc::MethodPropertyDatabase
   function decodeProperty(String) in line 85
      3 lines of code
      1 parameters
      1 conditional paths
   function encodeProperty(String) in line 97
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/BuildUnconditionalParamDerefDatabase.java
module edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
   inherits from edu::umd::cs::findbugs::Detector
   abstract class
   function analyzeMethod(ClassContext,Method) in line 111
      109 lines of code
      2 parameters
      18 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getUnconditionalValueDerefDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isUnconditionallyDereferenced(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable nonnullTypeQualifierValue defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses variable catchTypesForNull defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function isCaught(ClassContext,Method,UnconditionalValueDerefSet,ValueNumber) defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isPrivate() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function reportBug(BugInstance) defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
      uses variable VERBOSE_DEBUG defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
      uses function dumpDataflowInformation(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
   function considerMethod(ClassContext,Method) in line 95
      15 lines of code
      2 parameters
      5 conditional paths
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable VERBOSE_DEBUG defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
   function isCaught(ClassContext,Method,UnconditionalValueDerefSet,ValueNumber) in line 221
      protection public
      17 lines of code
      4 parameters
      4 conditional paths
      uses function getDerefLocationSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function reportBug(BugInstance) in line 73
      1 lines of code
      1 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 80
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable INTERPROCEDURAL_ANALYSIS_OF_REFERENCED_CLASSES defined in edu::umd::cs::findbugs::FindBugsAnalysisFeatures
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable VERBOSE_DEBUG defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
      uses function getMethodsInCallOrder() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function considerMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
   function BuildUnconditionalParamDerefDatabase() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nonnullTypeQualifierValue defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
   variable DEBUG in line 69
   variable nonnullTypeQualifierValue in line 71
      protection public
   variable VERBOSE_DEBUG in line 67
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/CalledMethods.java
module edu::umd::cs::findbugs::detect::CalledMethods
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 92
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function sawOpcode(int) in line 50
      protection public
      40 lines of code
      1 parameters
      12 conditional paths
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isProtected() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getIntConstant() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPrevOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassDescriptorOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isApplicationClass(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getMethodDescriptorOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function CalledMethods(BugReporter) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/CallToUnconditionalThrower.java
module edu::umd::cs::findbugs::detect::CallToUnconditionalThrower
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 75
      83 lines of code
      2 parameters
      15 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable methodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function report() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 160
      protection public
      25 lines of code
      1 parameters
      5 conditional paths
      uses variable testingEnabled defined in edu::umd::cs::findbugs::detect::CallToUnconditionalThrower
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::CallToUnconditionalThrower
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function CallToUnconditionalThrower(BugReporter) in line 65
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable testingEnabled defined in edu::umd::cs::findbugs::detect::CallToUnconditionalThrower
   variable testingEnabled in line 63
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/CallToUnsupportedMethod.java
module edu::umd::cs::findbugs::detect::CallToUnsupportedMethod
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 92
      73 lines of code
      2 parameters
      15 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isAbstract() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function report() in line 172
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 63
      protection public
      24 lines of code
      1 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::CallToUnsupportedMethod
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function CallToUnsupportedMethod(BugReporter) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/CbeckMustOverrideSuperAnnotation.java
module edu::umd::cs::findbugs::detect::CbeckMustOverrideSuperAnnotation
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 82
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sawCallToSuper defined in edu::umd::cs::findbugs::detect::CbeckMustOverrideSuperAnnotation
   function visit(Code) in line 52
      protection public
      23 lines of code
      1 parameters
      6 conditional paths
      uses variable testingEnabled defined in edu::umd::cs::findbugs::detect::CbeckMustOverrideSuperAnnotation
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getAnnotation(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable sawCallToSuper defined in edu::umd::cs::findbugs::detect::CbeckMustOverrideSuperAnnotation
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function CbeckMustOverrideSuperAnnotation(BugReporter) in line 44
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable testingEnabled defined in edu::umd::cs::findbugs::detect::CbeckMustOverrideSuperAnnotation
   variable sawCallToSuper in line 49
   variable testingEnabled in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/CheckAnalysisContextContainedAnnotation.java
module edu::umd::cs::findbugs::detect::CheckAnalysisContextContainedAnnotation
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector::WithCustomJumpInfo
   function analysisContextContained(XClass) in line 60
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getAnnotation(ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getContainingScope() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
   function bad(Item,Item) in line 118
      24 lines of code
      2 parameters
      6 conditional paths
      uses function getReturnValueOf() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function customJumpInfo() in line 144
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function sawOpcode(int) in line 100
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function bad(Item,Item) defined in edu::umd::cs::findbugs::detect::CheckAnalysisContextContainedAnnotation
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Field) in line 73
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getXField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getAnnotation(ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function analysisContextContained(XClass) defined in edu::umd::cs::findbugs::detect::CheckAnalysisContextContainedAnnotation
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 90
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable testingEnabled defined in edu::umd::cs::findbugs::detect::CheckAnalysisContextContainedAnnotation
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function CheckAnalysisContextContainedAnnotation(BugReporter) in line 50
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable testingEnabled defined in edu::umd::cs::findbugs::detect::CheckAnalysisContextContainedAnnotation
   variable testingEnabled in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/CheckCalls.java
module edu::umd::cs::findbugs::detect::CheckCalls
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function analyzeMethod(ClassContext,Method) in line 92
      33 lines of code
      2 parameters
      5 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable TARGET_METHOD defined in edu::umd::cs::findbugs::detect::CheckCalls
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function report() in line 132
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 67
      protection public
      24 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable METHOD defined in edu::umd::cs::findbugs::detect::CheckCalls
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::CheckCalls
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function CheckCalls(BugReporter) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable METHOD in line 49
   variable TARGET_METHOD in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/CheckExpectedWarnings.java
module edu::umd::cs::findbugs::detect::CheckExpectedWarnings
   inherits from edu::umd::cs::findbugs::Detector2
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function check(XClass,ClassDescriptor,boolean,int) in line 210
      12 lines of code
      4 parameters
      3 conditional paths
      uses function getAnnotation(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::XClass
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable warningsByClass defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
   function check(XMethod,ClassDescriptor,boolean,int) in line 223
      12 lines of code
      4 parameters
      3 conditional paths
      uses function getAnnotation(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable warningsByMethod defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function check(XClass,ClassDescriptor,boolean,int) defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function check(XField,ClassDescriptor,boolean,int) in line 236
      13 lines of code
      4 parameters
      3 conditional paths
      uses function getAnnotation(ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function getFieldDescriptor() defined in edu::umd::cs::findbugs::ba::XField
      uses variable warningsByField defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function check(XClass,ClassDescriptor,boolean,int) defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function check(AnnotationValue,Object,Collection< BugInstance >,boolean,int,ClassDescriptor) in line 250
      45 lines of code
      6 parameters
      11 conditional paths
      uses function getValue(String) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses variable VISIBLE_RANK_MAX defined in edu::umd::cs::findbugs::BugRanker
      uses variable LOW defined in edu::umd::cs::findbugs::annotations::Confidence
      uses variable value defined in edu::umd::cs::findbugs::classfile::analysis::EnumValue
      uses function getConfidenceValue() defined in edu::umd::cs::findbugs::annotations::Confidence
      uses function getPriorityValue() defined in edu::umd::cs::findbugs::annotations::Priority
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function checkAnnotation(@CheckForNull String,Collection< BugInstance >,boolean,int,Integer,Integer,Object,int,ClassDescriptor) defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
   function checkAnnotation(@CheckForNull String,Collection< BugInstance >,boolean,int,Integer,Integer,Object,int,ClassDescriptor) in line 296
      protection public
      29 lines of code
      9 parameters
      7 conditional paths
      uses function countWarnings(Collection< BugInstance >,@CheckForNull String,int,int) defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function makeWarning(String,Object,int,ClassDescriptor) defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable reporter defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function countWarnings(Collection< BugInstance >,@CheckForNull String,int,int) in line 342
      41 lines of code
      4 parameters
      9 conditional paths
      uses function getBugCode(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getType() defined in edu::umd::cs::findbugs::BugPattern
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
   function finishPass() in line 385
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses function getFactories() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getBugPatterns() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getDetectorClassName() in line 400
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeWarning(String,Object,int,ClassDescriptor) in line 326
      protection public
      15 lines of code
      4 parameters
      5 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
   function visitClass(ClassDescriptor) in line 107
      protection public
      102 lines of code
      1 parameters
      19 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable warned defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable initialized defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable warningsByClass defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable warningsByMethod defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable warningsByField defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable bugCollection defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function iterator() defined in edu::umd::cs::findbugs::BugCollection
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses function toMethodDescriptor() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function toFieldDescriptor() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getXMethods() defined in edu::umd::cs::findbugs::ba::XClass
      uses function check(XClass,ClassDescriptor,boolean,int) defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable expectWarning defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable desireWarning defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable noWarning defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable desireNoWarning defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function getXFields() defined in edu::umd::cs::findbugs::ba::XClass
   function CheckExpectedWarnings(BugReporter) in line 95
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugReporter
      uses variable reporter defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable expectWarning defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable noWarning defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable desireWarning defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
      uses variable desireNoWarning defined in edu::umd::cs::findbugs::detect::CheckExpectedWarnings
   variable bugCollection in line 78
   variable DEBUG in line 74
   variable desireNoWarning in line 91
   variable desireWarning in line 89
   variable expectWarning in line 85
   variable initialized in line 80
   variable noWarning in line 87
   variable reporter in line 76
   variable warned in line 93
   variable warningsByClass in line 81
   variable warningsByField in line 83
   variable warningsByMethod in line 82
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/CheckImmutableAnnotation.java
module edu::umd::cs::findbugs::detect::CheckImmutableAnnotation
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function report() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(Field) in line 50
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visitClassContext(ClassContext) in line 63
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function visitJavaClass(JavaClass) in line 42
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function hasClassAnnotation(@DottedClassName String,String) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function CheckImmutableAnnotation(BugReporter) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/CheckRelaxingNullnessAnnotation.java
module edu::umd::cs::findbugs::detect::CheckRelaxingNullnessAnnotation
   inherits from edu::umd::cs::findbugs::asm::ClassNodeDetector
   function visitClass(ClassDescriptor) in line 84
      protection public
      6 lines of code
      1 parameters
      4 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable bugReporter defined in edu::umd::cs::findbugs::asm::ClassNodeDetector
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitMethod(int,String,String,String,String[]) in line 105
      protection public
      14 lines of code
      5 parameters
      3 conditional paths
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses variable bugReporter defined in edu::umd::cs::findbugs::asm::ClassNodeDetector
      uses function reportSkippedAnalysis(MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function CheckRelaxingNullnessAnnotation(BugReporter) in line 79
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::asm::ClassNodeDetector
module edu::umd::cs::findbugs::detect::CheckRelaxingNullnessAnnotation::DetectorNode
   inherits from org::objectweb::asm::tree::MethodNode
   function checkMethod(@Nonnull XMethod) in line 187
      40 lines of code
      1 parameters
      9 conditional paths
      uses variable checkForNullReturn defined in edu::umd::cs::findbugs::detect::CheckRelaxingNullnessAnnotation::DetectorNode
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable xmethod defined in edu::umd::cs::findbugs::detect::CheckRelaxingNullnessAnnotation::DetectorNode
      uses variable bugReporter defined in edu::umd::cs::findbugs::asm::ClassNodeDetector
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable nonNullParameter defined in edu::umd::cs::findbugs::detect::CheckRelaxingNullnessAnnotation::DetectorNode
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::AnnotationEnumeration
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function setDescription(String) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable PARAMETER_NAMED_ROLE defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable PARAMETER_ROLE defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function visitEnd() in line 135
      protection public
      51 lines of code
      0 parameters
      11 conditional paths
      uses variable checkForNullReturn defined in edu::umd::cs::findbugs::detect::CheckRelaxingNullnessAnnotation::DetectorNode
      uses variable nonNullParameter defined in edu::umd::cs::findbugs::detect::CheckRelaxingNullnessAnnotation::DetectorNode
      uses function next() defined in edu::umd::cs::findbugs::detect::CheckRelaxingNullnessAnnotation::HierarchyIterator
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses function checkMethod(@Nonnull XMethod) defined in edu::umd::cs::findbugs::detect::CheckRelaxingNullnessAnnotation::DetectorNode
      uses function getXMethods() defined in edu::umd::cs::findbugs::ba::XClass
   variable checkForNullReturn in line 126
   variable nonNullParameter in line 124
   variable xmethod in line 122
module edu::umd::cs::findbugs::detect::CheckRelaxingNullnessAnnotation::HierarchyIterator
   function next() in line 240
      protection public
      23 lines of code
      0 parameters
      24 conditional paths
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable nonNullParameter defined in edu::umd::cs::findbugs::detect::CheckRelaxingNullnessAnnotation::DetectorNode
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getReturnTypeSignature() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function HierarchyIterator(@Nonnull XClass) in line 234
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   variable interfacesToVisit in line 231
   variable superclass in line 230
   variable visited in line 232
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/CheckTypeQualifiers.java
module edu::umd::cs::findbugs::detect::CheckTypeQualifiers
   inherits from edu::umd::cs::findbugs::bcel::CFGDetector
   function annotateWarningWithSourceSinkInfo(BugInstance,XMethod,ValueNumber,SourceSinkInfo) in line 600
      46 lines of code
      4 parameters
      12 conditional paths
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function getType() defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses variable method defined in edu::umd::cs::findbugs::bcel::CFGDetector
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getLocal() defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function setDescription(String) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function isSignificant() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable PARAMETER_VALUE_SOURCE_NAMED_ROLE defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable PARAMETER_VALUE_SOURCE_ROLE defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function getConstantValue() defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable STRING_CONSTANT_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
      uses function addInt(int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable INT_VALUE defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable STRING_NONSTRING_CONSTANT_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
   function annotateWarningWithTypeQualifier(BugInstance,TypeQualifierValue<?>) in line 582
      17 lines of code
      2 parameters
      2 conditional paths
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable value defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable TYPE_QUALIFIER_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable TYPE_QUALIFIER_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
   function checkDataflow(XMethod,CFG,TypeQualifierValue<?>,ValueNumberDataflow,ForwardTypeQualifierDataflow,BackwardTypeQualifierDataflow) in line 259
      59 lines of code
      6 parameters
      6 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses variable checkLocation defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function toCompactString() defined in edu::umd::cs::findbugs::ba::Location
      uses function checkForConflictingValues(XMethod,CFG,TypeQualifierValue<?>,TypeQualifierValueSet,TypeQualifierValueSet,Location,Location,ValueNumberFrame) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function checkForEqualityTest(XMethod,CFG,TypeQualifierValue<?>,TypeQualifierValueSet,Location,ValueNumberFrame) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getEdgeTargetLocation(CFG,Edge) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getEdgeSourceLocation(CFG,Edge) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
   function checkForConflictingValues(XMethod,CFG,TypeQualifierValue<?>,TypeQualifierValueSet,TypeQualifierValueSet,Location,Location,ValueNumberFrame) in line 471
      25 lines of code
      8 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses variable checkLocation defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function emitDataflowWarning(XMethod,TypeQualifierValue<?>,TypeQualifierValueSet,TypeQualifierValueSet,ValueNumber,FlowValue,FlowValue,Location,@CheckForNull Location,ValueNumberFrame) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
   function checkForEqualityTest(XMethod,CFG,TypeQualifierValue<?>,TypeQualifierValueSet,Location,ValueNumberFrame) in line 320
      52 lines of code
      6 parameters
      11 conditional paths
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function annotateWarningWithTypeQualifier(BugInstance,TypeQualifierValue<?>) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function annotateWarningWithSourceSinkInfo(BugInstance,XMethod,ValueNumber,SourceSinkInfo) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSomeSourceForTopTwoStackValues(ClassContext,Method,Location) defined in edu::umd::cs::findbugs::BugInstance
      uses variable classContext defined in edu::umd::cs::findbugs::bcel::CFGDetector
      uses variable method defined in edu::umd::cs::findbugs::bcel::CFGDetector
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function checkQualifier(XMethod,CFG,TypeQualifierValue<?>,ForwardTypeQualifierDataflowFactory,BackwardTypeQualifierDataflowFactory,ValueNumberDataflow) in line 216
      42 lines of code
      6 parameters
      6 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses variable DEBUG_DATAFLOW defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function print(PrintStream) defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses variable DEBUG_DATAFLOW_MODE defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function checkDataflow(XMethod,CFG,TypeQualifierValue<?>,ValueNumberDataflow,ForwardTypeQualifierDataflow,BackwardTypeQualifierDataflow) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function checkValueSources(XMethod,CFG,TypeQualifierValue<?>,ValueNumberDataflow,ForwardTypeQualifierDataflow,BackwardTypeQualifierDataflow) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
   function checkValueSources(XMethod,CFG,TypeQualifierValue<?>,ValueNumberDataflow,ForwardTypeQualifierDataflow,BackwardTypeQualifierDataflow) in line 373
      62 lines of code
      6 parameters
      10 conditional paths
      uses function getValue(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable ALWAYS defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses variable NEVER defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function toCompactString() defined in edu::umd::cs::findbugs::ba::Location
      uses function emitSourceWarning(String,XMethod,TypeQualifierValue<?>,FlowValue,TypeQualifierValueSet,SourceSinkInfo,ValueNumber,Location) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses variable PARAMETER defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkType
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function emitDataflowWarning(XMethod,TypeQualifierValue<?>,TypeQualifierValueSet,TypeQualifierValueSet,ValueNumber,FlowValue,FlowValue,Location,@CheckForNull Location,ValueNumberFrame) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
   function emitDataflowWarning(XMethod,TypeQualifierValue<?>,TypeQualifierValueSet,TypeQualifierValueSet,ValueNumber,FlowValue,FlowValue,Location,@CheckForNull Location,ValueNumberFrame) in line 497
      66 lines of code
      10 parameters
      9 conditional paths
      uses variable UNKNOWN defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses variable NEVER defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function annotateWarningWithTypeQualifier(BugInstance,TypeQualifierValue<?>) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses variable ALWAYS defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses function annotateWarningWithSourceSinkInfo(BugInstance,XMethod,ValueNumber,SourceSinkInfo) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function getSinkLocation(SourceSinkInfo) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses variable method defined in edu::umd::cs::findbugs::bcel::CFGDetector
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function equals(Object) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function getPrimaryLocalVariableAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function setDescription(String) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function isSignificant() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::Location
      uses function setDescription(String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function emitSourceWarning(String,XMethod,TypeQualifierValue<?>,FlowValue,TypeQualifierValueSet,SourceSinkInfo,ValueNumber,Location) in line 564
      17 lines of code
      8 parameters
      2 conditional paths
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function annotateWarningWithTypeQualifier(BugInstance,TypeQualifierValue<?>) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function annotateWarningWithSourceSinkInfo(BugInstance,XMethod,ValueNumber,SourceSinkInfo) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses variable NEVER defined in edu::umd::cs::findbugs::ba::jsr305::FlowValue
      uses function getWhereNever(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses function getWhereAlways(ValueNumber) defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValueSet
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function getEdgeSourceLocation(CFG,Edge) in line 466
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getEdgeTargetLocation(CFG,Edge) in line 436
      29 lines of code
      2 parameters
      7 conditional paths
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getSuccessorWithEdgeType(BasicBlock,@Type int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function removedEdgeIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
   function getSinkLocation(SourceSinkInfo) in line 648
      12 lines of code
      1 parameters
      4 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::jsr305::SourceSinkInfo
   function getSinkLocation(Iterable<?extends SourceSinkInfo >) in line 662
      10 lines of code
      1 parameters
      3 conditional paths
      uses function getSinkLocation(SourceSinkInfo) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
   function visitClass(ClassDescriptor) in line 119
      protection public
      21 lines of code
      1 parameters
      6 conditional paths
      uses variable typeQualifier defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierValue
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable NONNULL_ANNOTATION defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
   function visitMethodCFG(MethodDescriptor,CFG) in line 149
      46 lines of code
      2 parameters
      10 conditional paths
      uses variable METHOD defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses variable NONNULL_ANNOTATION defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function checkQualifier(XMethod,CFG,TypeQualifierValue<?>,ForwardTypeQualifierDataflowFactory,BackwardTypeQualifierDataflowFactory,ValueNumberDataflow) defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function CheckTypeQualifiers(BugReporter) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::CheckTypeQualifiers
   variable bugReporter in line 101
   variable checkLocation in line 196
   variable DEBUG in line 91
   variable DEBUG_DATAFLOW in line 93
   variable DEBUG_DATAFLOW_MODE in line 95
   variable METHOD in line 99
   variable NONNULL_ANNOTATION in line 97
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/CloneIdiom.java
module edu::umd::cs::findbugs::detect::CloneIdiom
   inherits from edu::umd::cs::findbugs::visitclass::DismantleBytecode
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function report() in line 231
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function sawOpcode(int) in line 88
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 81
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(JavaClass) in line 99
      protection public
      42 lines of code
      1 parameters
      8 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable cloneDescriptor defined in edu::umd::cs::findbugs::detect::CloneIdiom
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::CloneIdiom
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(ConstantNameAndType) in line 190
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Method) in line 203
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isDeprecated() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function visitAfter(JavaClass) in line 143
      protection public
      45 lines of code
      1 parameters
      12 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::CloneIdiom
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDirectSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable SUBCLASS_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitClassContext(ClassContext) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function CloneIdiom(BugReporter) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::CloneIdiom
   variable bugReporter in line 69
   variable cloneDescriptor in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/ComparatorIdiom.java
module edu::umd::cs::findbugs::detect::ComparatorIdiom
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function report() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(JavaClass) in line 48
      protection public
      35 lines of code
      1 parameters
      8 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitClassContext(ClassContext) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function ComparatorIdiom(BugReporter) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/ConfusedInheritance.java
module edu::umd::cs::findbugs::detect::ConfusedInheritance
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function report() in line 59
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 43
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable cls defined in edu::umd::cs::findbugs::detect::ConfusedInheritance
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function visitField(Field) in line 51
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::ConfusedInheritance
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable cls defined in edu::umd::cs::findbugs::detect::ConfusedInheritance
   function ConfusedInheritance(BugReporter) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::ConfusedInheritance
   variable bugReporter in line 34
   variable cls in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/ConfusionBetweenInheritedAndOuterMethod.java
module edu::umd::cs::findbugs::detect::ConfusionBetweenInheritedAndOuterMethod
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 71
      protection public
      52 lines of code
      1 parameters
      11 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPackageName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function visit(Field) in line 56
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function visit(Code) in line 63
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitJavaClass(JavaClass) in line 43
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function ConfusionBetweenInheritedAndOuterMethod(BugReporter) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/CrossSiteScripting.java
module edu::umd::cs::findbugs::detect::CrossSiteScripting
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function annotateAndReport(BugInstance,OpcodeStack.Item) in line 63
      18 lines of code
      2 parameters
      4 conditional paths
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable PARAMETER_NAME_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable ROLE_GENERATED_AT defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function addOptionalLocalVariable(DismantleBytecode,OpcodeStack.Item) defined in edu::umd::cs::findbugs::BugInstance
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function isTainted(OpcodeStack.Item) in line 214
      6 lines of code
      1 parameters
      2 conditional paths
   function sawOpcode(int) in line 87
      protection public
      126 lines of code
      1 parameters
      25 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function replaceTop(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isTainted(OpcodeStack.Item) defined in edu::umd::cs::findbugs::detect::CrossSiteScripting
      uses function taintPriority(OpcodeStack.Item) defined in edu::umd::cs::findbugs::detect::CrossSiteScripting
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function annotateAndReport(BugInstance,OpcodeStack.Item) defined in edu::umd::cs::findbugs::detect::CrossSiteScripting
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function taintPriority(OpcodeStack.Item) in line 237
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 56
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function CrossSiteScripting(BugReporter) in line 44
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/DeadLocalStoreProperty.java
module edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function DeadLocalStoreProperty(String,PriorityAdjustment) in line 12
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable BASE_VALUE in line 106
      protection public
   variable CACHING_VALUE in line 98
      protection public
   variable CLONED_STORE in line 27
      protection public
   variable COPY_VALUE in line 102
      protection public
   variable DEAD_INCREMENT in line 47
      protection public
   variable DEAD_INCREMENT_IN_MAIN in line 52
      protection public
   variable DEAD_INCREMENT_IN_RETURN in line 49
      protection public
   variable DEAD_OBJECT_STORE in line 63
      protection public
   variable DEFENSIVE_CONSTANT_OPCODE in line 39
      protection public
   variable DUP_THEN_STORE in line 75
      protection public
   variable EXCEPTION_HANDLER in line 43
      protection public
   variable IN_JSP_PAGE in line 17
      protection public
   variable IS_PARAMETER in line 119
      protection public
   variable KILLED_BY_SUBSEQUENT_STORE in line 31
      protection public
   variable LOCAL_NAME in line 94
      protection public
   variable MANY_STORES in line 110
      protection public
   variable METHOD_RESULT in line 55
      protection public
   variable NO_LOADS in line 79
      protection public
   variable NOT_JAVA in line 21
      protection public
   variable PARAM_DEAD_ON_ENTRY in line 90
      protection public
   variable SHADOWS_FIELD in line 83
      protection public
   variable SINGLE_DEAD_INCREMENT in line 59
      protection public
   variable SINGLE_STORE in line 71
      protection public
   variable STORE_OF_CONSTANT in line 116
      protection public
   variable STORE_OF_DATABASE_VALUE in line 35
      protection public
   variable STORE_OF_NULL in line 113
      protection public
   variable SYNTHETIC_NAME in line 86
      protection public
   variable TWO_STORES_MULTIPLE_LOADS in line 67
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/DefaultEncodingDetector.java
module edu::umd::cs::findbugs::detect::DefaultEncodingDetector
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 166
      protection public
      16 lines of code
      1 parameters
      5 conditional paths
      uses variable defaultEncodingAnnotationDatabase defined in edu::umd::cs::findbugs::detect::DefaultEncodingDetector
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::DefaultEncodingDetector
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function shouldVisit(JavaClass) in line 149
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getCalledClassDescriptors() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable defaultEncodingAnnotationDatabase defined in edu::umd::cs::findbugs::detect::DefaultEncodingDetector
   function visit(Code) in line 160
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::DefaultEncodingDetector
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function DefaultEncodingDetector(BugReporter) in line 143
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable bugAccumulator in line 43
   variable defaultEncodingAnnotationDatabase in line 45
module edu::umd::cs::findbugs::detect::DefaultEncodingDetector::DefaultEncodingAnnotation
   inherits from edu::umd::cs::findbugs::ba::AnnotationEnumeration
   function values() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function DefaultEncodingAnnotation(String,int) in line 60
      3 lines of code
      2 parameters
      1 conditional paths
   variable DEFAULT_ENCODING in line 52
      protection public
   variable myValues in line 54
module edu::umd::cs::findbugs::detect::DefaultEncodingDetector::DefaultEncodingAnnotationDatabase
   inherits from edu::umd::cs::findbugs::ba::AnnotationDatabase
   function addMethodAnnotation(@DottedClassName String,String,String,boolean,DefaultEncodingAnnotation) in line 77
      6 lines of code
      5 parameters
      1 conditional paths
   function loadAuxiliaryAnnotations() in line 85
      protection public
      55 lines of code
      0 parameters
      1 conditional paths
   function DefaultEncodingAnnotationDatabase() in line 70
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/DoInsideDoPrivileged.java
module edu::umd::cs::findbugs::detect::DoInsideDoPrivileged
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 67
      protection public
      23 lines of code
      1 parameters
      5 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(JavaClass) in line 45
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Code) in line 52
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function DoInsideDoPrivileged(BugReporter) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/DontCatchIllegalMonitorStateException.java
module edu::umd::cs::findbugs::detect::DontCatchIllegalMonitorStateException
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function report() in line 91
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visit(ExceptionTable) in line 53
      protection public
      10 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::DontCatchIllegalMonitorStateException
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(CodeException) in line 65
      protection public
      18 lines of code
      1 parameters
      5 conditional paths
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::DontCatchIllegalMonitorStateException
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visitClassContext(ClassContext) in line 85
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function DontCatchIllegalMonitorStateException(BugReporter) in line 45
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::DontCatchIllegalMonitorStateException
   variable DEBUG in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/DontIgnoreResultOfPutIfAbsent.java
module edu::umd::cs::findbugs::detect::DontIgnoreResultOfPutIfAbsent
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 204
      102 lines of code
      2 parameters
      12 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function extendsConcurrentMap(@DottedClassName String) defined in edu::umd::cs::findbugs::detect::DontIgnoreResultOfPutIfAbsent
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumLocals() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getPriorityForBeingMutable(Type) defined in edu::umd::cs::findbugs::detect::DontIgnoreResultOfPutIfAbsent
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function extendsConcurrentMap(@DottedClassName String) in line 307
      19 lines of code
      1 parameters
      4 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function getPriorityForBeingMutable(Type) in line 145
      58 lines of code
      1 parameters
      14 conditional paths
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable IGNORE_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getXFields() defined in edu::umd::cs::findbugs::ba::XClass
      uses function isWrittenOutsideOfInitialization(XField) defined in edu::umd::cs::findbugs::detect::UnreadFieldsData
      uses function isInterface() defined in edu::umd::cs::findbugs::ba::XClass
      uses function isAbstract() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function report() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 98
      protection public
      35 lines of code
      1 parameters
      8 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::DontIgnoreResultOfPutIfAbsent
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function DontIgnoreResultOfPutIfAbsent(BugReporter) in line 86
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/DontUseEnum.java
module edu::umd::cs::findbugs::detect::DontUseEnum
   inherits from edu::umd::cs::findbugs::bcel::PreorderDetector
   function isReservedName(String) in line 54
      3 lines of code
      1 parameters
      1 conditional paths
   function isVisible(FieldOrMethod) in line 50
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 42
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function isReservedName(String) defined in edu::umd::cs::findbugs::detect::DontUseEnum
      uses function isVisible(FieldOrMethod) defined in edu::umd::cs::findbugs::detect::DontUseEnum
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visit(Field) in line 59
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function isReservedName(String) defined in edu::umd::cs::findbugs::detect::DontUseEnum
      uses function isVisible(FieldOrMethod) defined in edu::umd::cs::findbugs::detect::DontUseEnum
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visit(LocalVariable) in line 68
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function isReservedName(String) defined in edu::umd::cs::findbugs::detect::DontUseEnum
      uses function getClassContext() defined in edu::umd::cs::findbugs::bcel::PreorderDetector
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function DontUseEnum(BugReporter) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/DoomedCodeWarningProperty.java
module edu::umd::cs::findbugs::detect::DoomedCodeWarningProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function DoomedCodeWarningProperty(String,PriorityAdjustment) in line 32
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable shortName defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable DOOMED_CODE in line 39
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/DroppedException.java
module edu::umd::cs::findbugs::detect::DroppedException
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function catchBlockHasComment(SourceLineAnnotation) in line 392
      144 lines of code
      1 parameters
      31 conditional paths
      uses variable LOOK_IN_SOURCE_TO_FIND_COMMENTED_CATCH_BLOCKS defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable sourceFile defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable NUM_CONTEXT_LINES defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable MAX_LINES defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function next() defined in edu::umd::cs::findbugs::Tokenizer
      uses function getKind() defined in edu::umd::cs::findbugs::Token
      uses variable EOF defined in edu::umd::cs::findbugs::Token
      uses variable EOL defined in edu::umd::cs::findbugs::Token
      uses variable WORD defined in edu::umd::cs::findbugs::Token
      uses function getLexeme() defined in edu::umd::cs::findbugs::Token
      uses variable START defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable CATCH defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable OPEN_PAREN defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable CLOSE_PAREN defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable OPEN_BRACE defined in edu::umd::cs::findbugs::detect::DroppedException
   function getNextExecutableLineNumber(LineNumberTable,int) in line 337
      24 lines of code
      2 parameters
      6 conditional paths
   function getUnsignedShort(byte[],int) in line 102
      3 lines of code
      2 parameters
      1 conditional paths
      uses function asUnsignedByte(byte) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function report() in line 84
      protection public
      2 lines of code
      0 parameters
      4 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(Code) in line 107
      protection public
      229 lines of code
      1 parameters
      57 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function asUnsignedByte(byte) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getUnsignedShort(byte[],int) defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function getNextExecutableLineNumber(LineNumberTable,int) defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOOK_IN_SOURCE_TO_FIND_COMMENTED_CATCH_BLOCKS defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function catchBlockHasComment(SourceLineAnnotation) defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getName() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function visitClassContext(ClassContext) in line 76
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function DroppedException(BugReporter) in line 67
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::DroppedException
   variable bugAccumulator in line 63
   variable bugReporter in line 62
   variable CATCH in line 364
   variable classContext in line 65
   variable CLOSE_PAREN in line 368
   variable DEBUG in line 53
   variable LOOK_IN_SOURCE_TO_FIND_COMMENTED_CATCH_BLOCKS in line 55
   variable MAX_LINES in line 383
   variable NUM_CONTEXT_LINES in line 377
   variable OPEN_BRACE in line 370
   variable OPEN_PAREN in line 366
   variable START in line 362
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/DumbMethodInvocations.java
module edu::umd::cs::findbugs::detect::DumbMethodInvocations
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 64
      78 lines of code
      2 parameters
      15 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isConstantString() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses function getConstantString() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::DumbMethodInvocations
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isConstantInteger() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses function getConstantInt() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses function isAbsoluteFileName(String) defined in edu::umd::cs::findbugs::detect::DumbMethodInvocations
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function isAbsoluteFileName(String) in line 143
      20 lines of code
      1 parameters
      6 conditional paths
   function report() in line 165
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 39
      protection public
      24 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::DumbMethodInvocations
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::DumbMethodInvocations
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DumbMethodInvocations
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function DumbMethodInvocations(BugReporter) in line 33
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DumbMethodInvocations
   variable bugAccumulator in line 31
   variable bugReporter in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/DumbMethods.java
module edu::umd::cs::findbugs::detect::DumbMethods
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function checkForCompatibleLongComparison(OpcodeStack.Item,OpcodeStack.Item) in line 1078
      20 lines of code
      2 parameters
      6 conditional paths
      uses variable RESULT_OF_I2L defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable STRING_NONSTRING_CONSTANT_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
      uses function addValueSource(@CheckForNull OpcodeStack.Item,DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
   function checkMonitorWait() in line 1167
      29 lines of code
      0 parameters
      5 conditional paths
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getLocationAndFactForInstruction(int) defined in edu::umd::cs::findbugs::ba::type::TypeDataflow
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable frame defined in edu::umd::cs::findbugs::ba::type::TypeDataflow::LocationAndFactPair
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable CONDITION_TYPE defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function flush() in line 1212
      45 lines of code
      0 parameters
      10 conditional paths
      uses variable absoluteValueAccumulator defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
      uses function clearBugs() defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable gcInvocationBugReport defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable sawCurrentTimeMillis defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable exceptionTable defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable gcInvocationPC defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable OOM_CATCH_LEN defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function getStackEntryOfListCallThatMustBeNonnegative() in line 1156
      10 lines of code
      0 parameters
      3 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function isMonitorWait(String,String) in line 1197
      4 lines of code
      2 parameters
      1 conditional paths
   function isTestMethod(Method) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function reportVacuousBitOperation(int,OpcodeStack.Item) in line 1103
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function sawOpcode(int) in line 221
      protection public
      856 lines of code
      1 parameters
      159 conditional paths
      uses function isMethodCall() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getMethodDescriptorOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function isJumpTarget(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable SHOULD_CALL defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getSlashedClassName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getConstantRefOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable testingEnabled defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable MICROS_PER_DAY_OVERFLOWED_AS_INT defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addInt(int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable INT_VALUE defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable absoluteValueAccumulator defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function clearBugs() defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function checkForCompatibleLongComparison(OpcodeStack.Item,OpcodeStack.Item) defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getSpecialKind() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable SIGNED_BYTE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable sawCheckForNonNegativeSignedByte defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPrevOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable STRING_MESSAGE defined in edu::umd::cs::findbugs::StringAnnotation
      uses variable STRING_CONSTANT_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
      uses function addValueSource(@CheckForNull OpcodeStack.Item,DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses variable prevOpcode defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function isRegisterLoad() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable isEqualsObject defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable reportedBadCastInEquals defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable sawInstanceofCheck defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function getSizeOfSurroundingTryBlock(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getBranchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable RANDOM_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function stackEntryThatMustBeNonnegative(int) defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable HASHCODE_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RANDOM_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable switchLabels defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSwitchLabels() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable switchOffsets defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSwitchOffsets() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NON_NEGATIVE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function reportVacuousBitOperation(int,OpcodeStack.Item) defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable checkForBitIorofSignedByte defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable LOW_8_BITS_CLEAR defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable prevOpcodeWasReadLine defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable sinceBufferedInputStreamReady defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable randomNextIntState defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable isPublicStaticVoidMain defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable ANNOTATION_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable gcInvocationBugReport defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function isTestMethod(Method) defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable gcInvocationPC defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sawCurrentTimeMillis defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable primitiveObjCtorSeen defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable ctorSeen defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function isMonitorWait(String,String) defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function checkMonitorWait() defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function getItemMethodInvokedOn(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable METHOD_ALTERNATIVE_TARGET defined in edu::umd::cs::findbugs::MethodAnnotation
   function stackEntryThatMustBeNonnegative(int) in line 1120
      35 lines of code
      1 parameters
      21 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackEntryOfListCallThatMustBeNonnegative() defined in edu::umd::cs::findbugs::detect::DumbMethods
   function visit(JavaClass) in line 137
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable superclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Field) in line 161
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable testingEnabled defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable MICROS_PER_DAY_OVERFLOWED_AS_INT defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable INT_VALUE defined in edu::umd::cs::findbugs::IntAnnotation
   function visit(Method) in line 177
      protection public
      28 lines of code
      1 parameters
      3 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable isPublicStaticVoidMain defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable prevOpcodeWasReadLine defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable primitiveObjCtorSeen defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable ctorSeen defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable randomNextIntState defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable checkForBitIorofSignedByte defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable isEqualsObject defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sawInstanceofCheck defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable reportedBadCastInEquals defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable sinceBufferedInputStreamReady defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable sawCheckForNonNegativeSignedByte defined in edu::umd::cs::findbugs::detect::DumbMethods
   function visit(Code) in line 1203
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function flush() defined in edu::umd::cs::findbugs::detect::DumbMethods
   function visitAfter(JavaClass) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function DumbMethods(BugReporter) in line 127
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable absoluteValueAccumulator defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable testingEnabled defined in edu::umd::cs::findbugs::detect::DumbMethods
   variable absoluteValueAccumulator in line 122
   variable accumulator in line 121
   variable bugReporter in line 77
   variable checkForBitIorofSignedByte in line 112
   variable CONDITION_TYPE in line 75
   variable ctorSeen in line 92
   variable exceptionTable in line 85
   variable gcInvocationBugReport in line 81
   variable gcInvocationPC in line 83
   variable isEqualsObject in line 100
   variable isPublicStaticVoidMain in line 98
   variable MICROS_PER_DAY_OVERFLOWED_AS_INT in line 124
   variable OOM_CATCH_LEN in line 117
   variable prevOpcode in line 96
   variable prevOpcodeWasReadLine in line 94
   variable primitiveObjCtorSeen in line 90
   variable randomNextIntState in line 110
   variable reportedBadCastInEquals in line 104
   variable sawCheckForNonNegativeSignedByte in line 106
   variable sawCurrentTimeMillis in line 79
   variable sawInstanceofCheck in line 102
   variable sinceBufferedInputStreamReady in line 108
   variable testingEnabled in line 119
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/DuplicateBranches.java
module edu::umd::cs::findbugs::detect::DuplicateBranches
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function findIfElseDuplicates(CFG,Method,BasicBlock) in line 111
      65 lines of code
      3 parameters
      12 conditional paths
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getDeepFirstInstruction(CFG,BasicBlock) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function findThenFinish(CFG,BasicBlock,int) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getCodeBytes(Method,int,int) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable pendingBugs defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable classContext defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function addSourceLineRange(BytecodeScanningDetector,int,int) defined in edu::umd::cs::findbugs::BugInstance
   function findSwitchDuplicates(CFG,Method,BasicBlock) in line 197
      93 lines of code
      3 parameters
      16 conditional paths
      uses function getNumOutgoingEdges(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable SWITCH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable SWITCH_DEFAULT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getDeepFirstInstruction(CFG,BasicBlock) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getFinalTarget(CFG,int,Collection< InstructionHandle >) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getCodeBytesAsBigInt(Method,int[],int,int) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function updateMap(HashMap< BigInteger, Collection< Integer >>,int,BigInteger) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable classContext defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function addSourceLineRange(BytecodeScanningDetector,int,int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable pendingBugs defined in edu::umd::cs::findbugs::detect::DuplicateBranches
   function findThenFinish(CFG,BasicBlock,int) in line 405
      22 lines of code
      3 parameters
      5 conditional paths
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getCodeBytes(Method,int,int) in line 373
      31 lines of code
      3 parameters
      6 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getCodeBytesAsBigInt(Method,int[],int,int) in line 301
      11 lines of code
      4 parameters
      2 conditional paths
      uses function getCodeBytes(Method,int,int) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getDeepFirstInstruction(CFG,BasicBlock) in line 181
      15 lines of code
      2 parameters
      4 conditional paths
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function toString() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getFinalTarget(CFG,int,Collection< InstructionHandle >) in line 317
      55 lines of code
      3 parameters
      10 conditional paths
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses function toString() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable GOTO_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getDeepFirstInstruction(CFG,BasicBlock) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function report() in line 429
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function updateMap(HashMap< BigInteger, Collection< Integer >>,int,BigInteger) in line 291
      9 lines of code
      3 parameters
      2 conditional paths
   function visitClassContext(ClassContext) in line 68
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function visitMethod(Method) in line 74
      protection public
      36 lines of code
      1 parameters
      9 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable classContext defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getNumOutgoingEdges(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function findIfElseDuplicates(CFG,Method,BasicBlock) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function findSwitchDuplicates(CFG,Method,BasicBlock) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable pendingBugs defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function DuplicateBranches(BugReporter) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DuplicateBranches
   variable bugReporter in line 59
   variable classContext in line 57
   variable pendingBugs in line 61
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/EmptyZipFileEntry.java
module edu::umd::cs::findbugs::detect::EmptyZipFileEntry
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 58
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable streamType defined in edu::umd::cs::findbugs::detect::EmptyZipFileEntry
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sawPutEntry defined in edu::umd::cs::findbugs::detect::EmptyZipFileEntry
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::EmptyZipFileEntry
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function visit(JavaClass) in line 48
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 52
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable sawPutEntry defined in edu::umd::cs::findbugs::detect::EmptyZipFileEntry
      uses variable streamType defined in edu::umd::cs::findbugs::detect::EmptyZipFileEntry
   function EmptyZipFileEntry(BugReporter) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::EmptyZipFileEntry
   variable bugReporter in line 37
   variable sawPutEntry in line 39
   variable streamType in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/EqualsOperandShouldHaveClassCompatibleWithThis.java
module edu::umd::cs::findbugs::detect::EqualsOperandShouldHaveClassCompatibleWithThis
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::FirstPassDetector
   function check(ClassDescriptor) in line 102
      30 lines of code
      1 parameters
      6 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isArray() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function checksForEqualTo(ClassDescriptor,ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ClassSummary
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function sawOpcode(int) in line 73
      protection public
      25 lines of code
      1 parameters
      7 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function check(ClassDescriptor) defined in edu::umd::cs::findbugs::detect::EqualsOperandShouldHaveClassCompatibleWithThis
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getClassDescriptorOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 56
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
      uses function clearBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function EqualsOperandShouldHaveClassCompatibleWithThis(BugReporter) in line 48
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function setClassSummary(@Nonnull ClassSummary) defined in edu::umd::cs::findbugs::ba::AnalysisContext
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/ExplicitSerialization.java
module edu::umd::cs::findbugs::detect::ExplicitSerialization
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function sawOpcode(int) in line 69
      protection public
      56 lines of code
      1 parameters
      15 conditional paths
      uses function getXMethodOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function isInterface() defined in edu::umd::cs::findbugs::ba::XClass
      uses function isSynthetic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isAbstract() defined in edu::umd::cs::findbugs::ba::XClass
      uses function strongEvidenceForIntendedSerialization(ClassDescriptor) defined in edu::umd::cs::findbugs::detect::UnreadFieldsData
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getClassDescriptorOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function shouldVisit(JavaClass) in line 62
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getCalledClassDescriptors() defined in edu::umd::cs::findbugs::ba::XClass
   function ExplicitSerialization(BugReporter) in line 55
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getUnreadFieldsData() defined in edu::umd::cs::findbugs::ba::AnalysisContext
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FieldItemSummary.java
module edu::umd::cs::findbugs::detect::FieldItemSummary
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 154
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function setComplete(boolean) defined in edu::umd::cs::findbugs::ba::FieldSummary
   function sawOpcode(int) in line 61
      protection public
      64 lines of code
      1 parameters
      16 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getXMethodOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isPrivate() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function setCalledFromSuperConstructor(ProgramPoint,XMethod) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getItemMethodInvokedOn(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function sawSuperCall(XMethod,XMethod) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function addWrittenOutsideOfConstructor(XField) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function mergeSummary(XField,OpcodeStack.Item) defined in edu::umd::cs::findbugs::ba::FieldSummary
   function shouldVisit(JavaClass) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function hasStubs() defined in edu::umd::cs::findbugs::ba::XClass
   function visit(Code) in line 127
      protection public
      25 lines of code
      1 parameters
      7 conditional paths
      uses function setFieldsWritten(XMethod,Collection< XField >) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable thisClass defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function mergeSummary(XField,OpcodeStack.Item) defined in edu::umd::cs::findbugs::ba::FieldSummary
   function FieldItemSummary(BugReporter) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function setFieldSummary(@Nonnull FieldSummary) defined in edu::umd::cs::findbugs::ba::AnalysisContext
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FinalizerNullsFields.java
module edu::umd::cs::findbugs::detect::FinalizerNullsFields
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 83
      protection public
      18 lines of code
      1 parameters
      5 conditional paths
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 54
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function visit(Field) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 68
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function FinalizerNullsFields(BugReporter) in line 44
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindBadCast2.java
module edu::umd::cs::findbugs::detect::FindBadCast2
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 142
      481 lines of code
      2 parameters
      96 conditional paths
      uses function prescreen(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses function getClassName(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberDataflow
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getSourceSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getLocationsContainingInstructionWithOffset(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isExact(int) defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function getStackLocation(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getParameterValueNumbers(ClassContext,Method,CFG) defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable concreteCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable abstractCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable veryAbstractCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses function getMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable ARRAY_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable RETURN_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function toXMethod() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function isPrivate() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addFoundAndExpectedType(Type,Type) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function getParameterValueNumbers(ClassContext,Method,CFG) in line 130
      11 lines of code
      3 parameters
      2 conditional paths
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getNumLocals() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
   function prescreen(ClassContext,Method) in line 125
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function report() in line 625
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 100
      protection public
      24 lines of code
      1 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindBadCast2(BugReporter) in line 76
      protection public
      22 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable veryAbstractCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable abstractCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable concreteCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast2
   variable abstractCollectionClasses in line 70
   variable bugReporter in line 66
   variable concreteCollectionClasses in line 68
   variable DEBUG in line 74
   variable veryAbstractCollectionClasses in line 72
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindBadForLoop.java
module edu::umd::cs::findbugs::detect::FindBadForLoop
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 51
      protection public
      37 lines of code
      1 parameters
      6 conditional paths
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable branchTarget defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getCodeByte(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 42
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function FindBadForLoop(BugReporter) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindBugsSummaryStats.java
module edu::umd::cs::findbugs::detect::FindBugsSummaryStats
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::BugReporterObserver
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 134
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function report(PrintStream) in line 138
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function reportBug(BugInstance) in line 146
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(JavaClass) in line 70
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(Field) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 90
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(LineNumber) in line 113
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visitAfter(JavaClass) in line 95
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable stats defined in edu::umd::cs::findbugs::detect::FindBugsSummaryStats
      uses function addClass(@DottedClassName String,@CheckForNull String,boolean,int) defined in edu::umd::cs::findbugs::ProjectStats
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitClassContext(ClassContext) in line 129
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function visitJavaClass(JavaClass) in line 63
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function FindBugsSummaryStats(BugReporter) in line 119
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugReporter
      uses function addObserver(BugReporterObserver) defined in edu::umd::cs::findbugs::BugReporter
   function FindBugsSummaryStats() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable stats in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindCircularDependencies.java
module edu::umd::cs::findbugs::detect::FindCircularDependencies
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function removeDependencyLeaves(Map< String, Set< String >>) in line 112
      24 lines of code
      1 parameters
      6 conditional paths
      uses variable dependencyGraph defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
   function removeLoopLinks(Map< String, Set< String >>,Set< String >) in line 137
      24 lines of code
      2 parameters
      12 conditional paths
      uses variable clsName defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
      uses variable dependencyGraph defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
   function report() in line 84
      protection public
      27 lines of code
      0 parameters
      5 conditional paths
      uses function removeDependencyLeaves(Map< String, Set< String >>) defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
      uses variable dependencyGraph defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
      uses variable clsName defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function removeLoopLinks(Map< String, Set< String >>,Set< String >) defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
   function sawOpcode(int) in line 53
      protection public
      29 lines of code
      1 parameters
      7 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable clsName defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
      uses variable dependencyGraph defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
   function visit(JavaClass) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable clsName defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
   function FindCircularDependencies(BugReporter) in line 42
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
   variable bugReporter in line 38
   variable clsName in line 40
   variable dependencyGraph in line 36
module edu::umd::cs::findbugs::detect::FindCircularDependencies::LoopFinder
   function findLoop(Map< String, Set< String >>,String) in line 171
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
   function findLoop(String) in line 182
      24 lines of code
      1 parameters
      1 conditional paths
   variable dGraph in line 163
   variable loop in line 169
   variable startClass in line 165
   variable visited in line 167
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindDeadLocalStores.java
module edu::umd::cs::findbugs::detect::FindDeadLocalStores
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 203
      415 lines of code
      2 parameters
      79 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FOUND_INEXACT_UNCONDITIONAL_THROWERS defined in edu::umd::cs::findbugs::ba::CFG
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function countLocalStoresLoadsAndIncrements(int[],int[],int[],CFG) defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function isStore(Location) defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
      uses function isExceptionHandler() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable EXCEPTION_HANDLER defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getName() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable SYNTHETIC_NAME defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable EXCLUDED_LOCALS defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function setProperty(T,String) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable LOCAL_NAME defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable IS_PARAMETER defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable SHADOWS_FIELD defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable DID_YOU_MEAN_ROLE defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function addType(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable STORE_OF_CONSTANT defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable STORE_OF_NULL defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable BASE_VALUE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses function containsProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable KILLED_BY_SUBSEQUENT_STORE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses function getPredecessorOf(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable defensiveConstantValueOpcodes defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses variable DEFENSIVE_CONSTANT_OPCODE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable CACHING_VALUE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable COPY_VALUE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable METHOD_RESULT defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable DEAD_INCREMENT_IN_MAIN defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable DEAD_INCREMENT_IN_RETURN defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable DEAD_INCREMENT defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable SINGLE_DEAD_INCREMENT defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses function removeProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable DUP_THEN_STORE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable DEAD_OBJECT_STORE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable TWO_STORES_MULTIPLE_LOADS defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable SINGLE_STORE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable NO_LOADS defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable STORE_OF_DATABASE_VALUE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable PARAM_DEAD_ON_ENTRY defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable MANY_STORES defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses function getLocationsContainingInstructionWithOffset(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable CLONED_STORE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable IN_JSP_PAGE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable NOT_JAVA defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function suppressWarningsIfOneLiveStoreOnLine(BugAccumulator,BitSet) defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function countLocalStoresLoadsAndIncrements(int[],int[],int[],CFG) in line 661
      28 lines of code
      4 parameters
      6 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
      uses function isExceptionHandler() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isStore(Location) defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function isLoad(Location) defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function isLoad(Location) in line 732
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function isStore(Location) in line 720
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function prescreen(ClassContext,Method) in line 173
      3 lines of code
      2 parameters
      1 conditional paths
   function report() in line 738
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function suppressWarningsIfOneLiveStoreOnLine(BugAccumulator,BitSet) in line 628
      19 lines of code
      2 parameters
      5 conditional paths
      uses variable SUPPRESS_IF_AT_LEAST_ONE_LIVE_STORE_ON_LINE defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function uniqueBugs() defined in edu::umd::cs::findbugs::BugAccumulator
      uses function locations(BugInstance) defined in edu::umd::cs::findbugs::BugAccumulator
   function visitClassContext(ClassContext) in line 178
      protection public
      24 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function prescreen(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindDeadLocalStores(BugReporter) in line 166
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
   variable bugReporter in line 164
   variable DEBUG in line 98
   variable defensiveConstantValueOpcodes in line 143
   variable EXCLUDED_LOCALS in line 107
   variable FINDBUGS_EXCLUDED_LOCALS_PROP_NAME in line 103
   variable SUPPRESS_IF_AT_LEAST_ONE_LIVE_STORE_ON_LINE in line 134
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindDoubleCheck.java
module edu::umd::cs::findbugs::detect::FindDoubleCheck
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 79
      protection public
      100 lines of code
      1 parameters
      29 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindDoubleCheck
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Method) in line 63
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function FindDoubleCheck(BugReporter) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindDoubleCheck
   variable bugReporter in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindEmptySynchronizedBlock.java
module edu::umd::cs::findbugs::detect::FindEmptySynchronizedBlock
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 35
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getPrevOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function FindEmptySynchronizedBlock(BugReporter) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindFieldSelfAssignment.java
module edu::umd::cs::findbugs::detect::FindFieldSelfAssignment
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 71
      protection public
      93 lines of code
      1 parameters
      19 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindFieldSelfAssignment
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFieldSelfAssignment
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addReferencedField(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getNextOpcode() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getLVValue(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getNumLocalValues() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isMethodCall() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 49
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindFieldSelfAssignment
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function FindFieldSelfAssignment(BugReporter) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFieldSelfAssignment
   variable bugReporter in line 39
   variable DEBUG in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindFinalizeInvocations.java
module edu::umd::cs::findbugs::detect::FindFinalizeInvocations
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 87
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindFinalizeInvocations
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 48
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindFinalizeInvocations
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFinalizeInvocations
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 59
      protection public
      26 lines of code
      1 parameters
      7 conditional paths
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindFinalizeInvocations
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFinalizeInvocations
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function FindFinalizeInvocations(BugReporter) in line 40
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFinalizeInvocations
   variable bugAccumulator in line 38
   variable bugReporter in line 36
   variable DEBUG in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindFloatEquality.java
module edu::umd::cs::findbugs::detect::FindFloatEquality
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function isZero(Number) in line 85
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function okValueToCompareAgainst(Number) in line 93
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function sawOpcode(int) in line 106
      protection public
      82 lines of code
      1 parameters
      25 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable state defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable SAW_NOTHING defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable NASTY_FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isZero(Number) defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function okValueToCompareAgainst(Number) defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable priority defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable SAW_COMP defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getXField() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getFieldLoadedFromRegister() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function visit(Code) in line 58
      protection public
      26 lines of code
      1 parameters
      4 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable state defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable SAW_NOTHING defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable ROLE_ANOTHER_INSTANCE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function FindFloatEquality(BugReporter) in line 50
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFloatEquality
   variable bugAccumulator in line 46
   variable bugReporter in line 44
   variable priority in line 42
   variable SAW_COMP in line 40
   variable SAW_NOTHING in line 38
   variable state in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindFloatMath.java
module edu::umd::cs::findbugs::detect::FindFloatMath
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 35
      protection public
      26 lines of code
      1 parameters
      10 conditional paths
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFloatMath
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function FindFloatMath(BugReporter) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFloatMath
   variable bugReporter in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindHEmismatch.java
module edu::umd::cs::findbugs::detect::FindHEmismatch
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function check(int) in line 530
      42 lines of code
      1 parameters
      11 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getJavaClass() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addTypeOfNamedClass(@DottedClassName String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable UNHASHABLE_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function isHashableClassName(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dottedClassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function opcode(byte,int) in line 376
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function report() in line 645
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function isHashableClassName(String) defined in edu::umd::cs::findbugs::detect::FindHEmismatch
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindHEmismatch
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function sawOpcode(int) in line 504
      protection public
      25 lines of code
      1 parameters
      7 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function check(int) defined in edu::umd::cs::findbugs::detect::FindHEmismatch
   function shouldVisitCode(Code) in line 364
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(JavaClass) in line 340
      protection public
      22 lines of code
      1 parameters
      1 conditional paths
      uses function getDottedSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function visit(Field) in line 381
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function visit(Method) in line 392
      protection public
      100 lines of code
      1 parameters
      27 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindHEmismatch
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function opcode(byte,int) defined in edu::umd::cs::findbugs::detect::FindHEmismatch
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Signature) in line 594
      protection public
      49 lines of code
      1 parameters
      11 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addVisitedField(PreorderVisitor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addTypeOfNamedClass(@DottedClassName String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable UNHASHABLE_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
   function visitAfter(JavaClass) in line 126
      protection public
      212 lines of code
      1 parameters
      45 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindHEmismatch
      uses function isAbstract() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isAbstract() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable superclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable ALWAYS_FALSE defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getSimpleName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_DID_YOU_MEAN_TO_OVERRIDE defined in edu::umd::cs::findbugs::MethodAnnotation
   function FindHEmismatch(BugReporter) in line 115
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindHEmismatch
   variable bugReporter in line 113
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindInconsistentSync2.java
module edu::umd::cs::findbugs::detect::FindInconsistentSync2
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method,Set< Method >) in line 625
      178 lines of code
      3 parameters
      28 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isGetterMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getInnerClassAccess(String,String) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
      uses function getMethodSignature() defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function getField() defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses variable isLoad defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::LockChecker
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function isConstructor(String) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function containsReturnValue(ValueNumberFactory) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable ADJUST_SUBCLASS_ACCESSES defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable LOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable UNLOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable WRITE defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable NULLCHECK defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable READ defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isAnonymousClass() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getStats(XField) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function addAccess(int) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses function addLocalLock() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses function addGetterMethodAccess() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function findLockedMethods(ClassContext,SelfCalls,Set< CallSite >) in line 951
      50 lines of code
      3 parameters
      9 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCallGraph() defined in edu::umd::cs::findbugs::SelfCalls
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getCallSite() defined in edu::umd::cs::findbugs::CallGraphEdge
      uses function getMethod() defined in edu::umd::cs::findbugs::CallSite
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getMethod() defined in edu::umd::cs::findbugs::CallGraphNode
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
   function findNotUnlockedMethods(ClassContext,SelfCalls,Set< CallSite >) in line 884
      61 lines of code
      3 parameters
      10 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCallGraph() defined in edu::umd::cs::findbugs::SelfCalls
      uses function isConstructor(String) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getCallSite() defined in edu::umd::cs::findbugs::CallGraphEdge
      uses function getMethod() defined in edu::umd::cs::findbugs::CallSite
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getMethod() defined in edu::umd::cs::findbugs::CallGraphNode
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
   function findObviouslyLockedCallSites(ClassContext,SelfCalls) in line 1048
      55 lines of code
      2 parameters
      6 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::CallSite
      uses function getLocation() defined in edu::umd::cs::findbugs::CallSite
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::LockChecker
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function getStats(XField) in line 870
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable statMap defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
   function isConstructor(String) in line 616
      8 lines of code
      1 parameters
      1 conditional paths
   function isGetterMethod(ClassContext,Method) in line 813
      protection public
      53 lines of code
      2 parameters
      29 conditional paths
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function isServletField(XField) in line 206
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable servlet defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable singleThreadedServlet defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function report() in line 434
      protection public
      175 lines of code
      0 parameters
      31 conditional paths
      uses variable statMap defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isInteresting() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses function hasClassAnnotation(@DottedClassName String,String) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
      uses function getFieldAnnotation(XField,String) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
      uses function getNumAccesses(int) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses variable READ_UNLOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable WRITE_UNLOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable NULLCHECK_UNLOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable READ_LOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable WRITE_LOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable NULLCHECK_LOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable WRITE_BIAS defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable ANNOTATED_AS_GUARDED_BY_THIS defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses variable ANNOTATED_AS_THREAD_SAFE defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses function isServletField() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable EVAL defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable UNSYNC_FACTOR defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable MANY_BIASED_UNLOCKED defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses variable NEVER_WRITTEN defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses variable NEVER_READ defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses function getNumLocalLocks() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses variable NO_LOCAL_LOCKS defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses variable MIN_SYNC_PERCENT defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable BELOW_MIN_SYNC_PERCENT defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses function getNumGetterMethodAccesses() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses variable ONLY_UNSYNC_IN_GETTERS defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses variable MUTABLE_SERVLET_FIELD defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addInt(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable INT_SYNC_PERCENT defined in edu::umd::cs::findbugs::IntAnnotation
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses function unsyncAccessIterator() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable SYNC_ACCESS defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function syncAccessIterator() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitClassContext(ClassContext) in line 342
      protection public
      90 lines of code
      1 parameters
      15 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function execute() defined in edu::umd::cs::findbugs::SelfCalls
      uses function getCallGraph() defined in edu::umd::cs::findbugs::SelfCalls
      uses function getNumVertices() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getNumEdges() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function findObviouslyLockedCallSites(ClassContext,SelfCalls) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function findNotUnlockedMethods(ClassContext,SelfCalls,Set< CallSite >) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function findLockedMethods(ClassContext,SelfCalls,Set< CallSite >) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method,Set< Method >) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable statMap defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function isServletField() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses function hasAnySynchronizedAccesses() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
   function FindInconsistentSync2(BugReporter) in line 337
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
   variable ADJUST_SUBCLASS_ACCESSES in line 104
   variable bugReporter in line 327
   variable DEBUG in line 99
   variable EVAL in line 106
   variable LOCKED in line 157
   variable MIN_SYNC_PERCENT in line 119
   variable NULLCHECK in line 163
   variable NULLCHECK_LOCKED in line 175
   variable NULLCHECK_UNLOCKED in line 169
   variable READ in line 159
   variable READ_LOCKED in line 171
   variable READ_UNLOCKED in line 165
   variable servlet in line 201
   variable singleThreadedServlet in line 203
   variable statMap in line 329
   variable SYNC_ACCESS in line 101
   variable UNLOCKED in line 155
   variable UNSYNC_FACTOR in line 146
   variable WRITE in line 161
   variable WRITE_BIAS in line 126
   variable WRITE_LOCKED in line 173
   variable WRITE_UNLOCKED in line 167
module edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldAccess
   function asSourceLineAnnotation(Collection< FieldAccess >) in line 191
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
module edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
   function addAccess(int) in line 248
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function addAccess(MethodDescriptor,InstructionHandle,boolean) in line 284
      protection public
      21 lines of code
      3 parameters
      5 conditional paths
      uses variable SYNC_ACCESS defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
   function addGetterMethodAccess() in line 264
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function addLocalLock() in line 256
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumAccesses(int) in line 252
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getNumGetterMethodAccesses() in line 268
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumLocalLocks() in line 260
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasAnySynchronizedAccesses() in line 280
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isInteresting() in line 272
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isServletField() in line 276
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function syncAccessIterator() in line 313
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function unsyncAccessIterator() in line 306
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   variable countList in line 230
   variable numGetterMethodAccesses in line 234
   variable numLocalLocks in line 232
   variable syncAccessList in line 238
   variable unsyncAccessList in line 236
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindJSR166LockMonitorenter.java
module edu::umd::cs::findbugs::detect::FindJSR166LockMonitorenter
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function analyzeMethod(ClassContext,Method) in line 114
      133 lines of code
      2 parameters
      24 conditional paths
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindJSR166LockMonitorenter
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_ALTERNATIVE_TARGET defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function addType(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable LOCK_TYPE defined in edu::umd::cs::findbugs::detect::FindJSR166LockMonitorenter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable UTIL_CONCURRRENT_SIG_PREFIX defined in edu::umd::cs::findbugs::detect::FindJSR166LockMonitorenter
      uses function addSourceForTopStackValue(ClassContext,Method,Location) defined in edu::umd::cs::findbugs::BugInstance
   function clone() in line 79
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function report() in line 249
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 88
      protection public
      25 lines of code
      1 parameters
      6 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindJSR166LockMonitorenter
   function FindJSR166LockMonitorenter(BugReporter) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindJSR166LockMonitorenter
   variable bugReporter in line 70
   variable LOCK_TYPE in line 72
   variable UTIL_CONCURRRENT_SIG_PREFIX in line 68
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindLocalSelfAssignment2.java
module edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 61
      protection public
      49 lines of code
      1 parameters
      10 conditional paths
      uses variable previousGotoTarget defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable gotoCount defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable previousLoadOf defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses function isRegisterLoad() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable previousStores defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getName() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function getXFields() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable DID_YOU_MEAN_ROLE defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function visit(Code) in line 52
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable previousLoadOf defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses variable previousGotoTarget defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses variable gotoCount defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses variable previousStores defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
   function FindLocalSelfAssignment2(BugReporter) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
   variable bugReporter in line 37
   variable gotoCount in line 43
   variable previousGotoTarget in line 41
   variable previousLoadOf in line 39
   variable previousStores in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindMaskedFields.java
module edu::umd::cs::findbugs::detect::FindMaskedFields
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function report() in line 214
      protection public
      40 lines of code
      0 parameters
      12 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable rememberedBugs defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function getReadFields() defined in edu::umd::cs::findbugs::detect::UnreadFieldsData
      uses function getWrittenFields() defined in edu::umd::cs::findbugs::detect::UnreadFieldsData
      uses function isWrittenOutsideOfInitialization(XField) defined in edu::umd::cs::findbugs::detect::UnreadFieldsData
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visit(JavaClass) in line 84
      protection public
      74 lines of code
      1 parameters
      17 conditional paths
      uses variable classFields defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getXFields() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable rememberedBugs defined in edu::umd::cs::findbugs::detect::FindMaskedFields
   function visit(Method) in line 160
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable numParms defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses function getNumberMethodArguments() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable staticMethod defined in edu::umd::cs::findbugs::detect::FindMaskedFields
   function visit(LocalVariableTable) in line 178
      protection public
      34 lines of code
      1 parameters
      8 conditional paths
      uses variable ENABLE_LOCALS defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses variable staticMethod defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses variable numParms defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses variable classFields defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visitClassContext(ClassContext) in line 76
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function FindMaskedFields(BugReporter) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindMaskedFields
   variable bugReporter in line 49
   variable classFields in line 53
   variable ENABLE_LOCALS in line 175
   variable numParms in line 51
   variable rememberedBugs in line 57
   variable staticMethod in line 55
module edu::umd::cs::findbugs::detect::FindMaskedFields::RememberedBug
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindMismatchedWaitOrNotify.java
module edu::umd::cs::findbugs::detect::FindMismatchedWaitOrNotify
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function analyzeMethod(ClassContext,Method) in line 103
      72 lines of code
      2 parameters
      12 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getLockedValueNumbers(ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function veryFuzzyMatch(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindMismatchedWaitOrNotify
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function clone() in line 64
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function report() in line 177
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 73
      protection public
      29 lines of code
      1 parameters
      6 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindMismatchedWaitOrNotify
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindMismatchedWaitOrNotify
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindMismatchedWaitOrNotify(BugReporter) in line 58
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindMismatchedWaitOrNotify
   variable bugAccumulator in line 56
   variable bugReporter in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindNakedNotify.java
module edu::umd::cs::findbugs::detect::FindNakedNotify
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 67
      protection public
      39 lines of code
      1 parameters
      10 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable notifyPC defined in edu::umd::cs::findbugs::detect::FindNakedNotify
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNakedNotify
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 51
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 57
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNakedNotify
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable notifyPC defined in edu::umd::cs::findbugs::detect::FindNakedNotify
   function FindNakedNotify(BugReporter) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNakedNotify
   variable bugReporter in line 40
   variable notifyPC in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindNonSerializableStoreIntoSession.java
module edu::umd::cs::findbugs::detect::FindNonSerializableStoreIntoSession
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 67
      83 lines of code
      2 parameters
      15 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNonSerializableStoreIntoSession
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindNonSerializableStoreIntoSession
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
   function report() in line 152
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 47
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindNonSerializableStoreIntoSession
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNonSerializableStoreIntoSession
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindNonSerializableStoreIntoSession
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function FindNonSerializableStoreIntoSession(BugReporter) in line 41
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNonSerializableStoreIntoSession
   variable bugAccumulator in line 37
   variable bugReporter in line 35
   variable DEBUG in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindNonSerializableValuePassedToWriteObject.java
module edu::umd::cs::findbugs::detect::FindNonSerializableValuePassedToWriteObject
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 62
      96 lines of code
      2 parameters
      17 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNonSerializableValuePassedToWriteObject
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNonSerializableValuePassedToWriteObject
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function report() in line 160
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 43
      protection public
      18 lines of code
      1 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindNonSerializableValuePassedToWriteObject
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNonSerializableValuePassedToWriteObject
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindNonSerializableValuePassedToWriteObject(BugReporter) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNonSerializableValuePassedToWriteObject
   variable bugReporter in line 34
   variable DEBUG in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindNonShortCircuit.java
module edu::umd::cs::findbugs::detect::FindNonShortCircuit
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function clearAll() in line 70
      10 lines of code
      0 parameters
      1 conditional paths
   function reportBug() in line 190
      18 lines of code
      0 parameters
      4 conditional paths
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function sawBooleanValue() in line 271
      16 lines of code
      0 parameters
      1 conditional paths
   function sawOpcode(int) in line 90
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses function scanForBooleanValue(int) defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
      uses function scanForDanger(int) defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
      uses function scanForShortCircuit(int) defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
   function scanForBooleanValue(int) in line 209
      61 lines of code
      1 parameters
      24 conditional paths
      uses function clearAll() defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
      uses function sawBooleanValue() defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function scanForDanger(int) in line 104
      43 lines of code
      1 parameters
      20 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function scanForShortCircuit(int) in line 148
      41 lines of code
      1 parameters
      11 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function reportBug() defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
   function visit(Method) in line 65
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function clearAll() defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
   function visit(Code) in line 84
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function FindNonShortCircuit(BugReporter) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable bugAccumulator in line 58
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindNullDeref.java
module edu::umd::cs::findbugs::detect::FindNullDeref
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::UseAnnotationDatabase
   inherits from edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonCollector
   function addParamAnnotations(Location,BitSet,BitSet,WarningPropertySet<?super NullArgumentWarningProperty >,BugInstance) in line 799
      38 lines of code
      5 parameters
      6 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable ARG_DEFINITELY_NULL defined in edu::umd::cs::findbugs::detect::NullArgumentWarningProperty
      uses function getArgument(InvokeInstruction,ConstantPoolGen,int,int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addParameterAnnotation(int,String) defined in edu::umd::cs::findbugs::BugInstance
   function addPropertiesForDereferenceLocations(WarningPropertySet< WarningProperty >,Collection< Location >,boolean) in line 1650
      45 lines of code
      3 parameters
      10 conditional paths
      uses function isDoomed(Location) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable FALSE_POSITIVE defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses variable DOOMED_CODE defined in edu::umd::cs::findbugs::detect::DoomedCodeWarningProperty
      uses function uniqueLocations(Collection< Location >) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function skipIfInsideCatchNull() defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable DEREFS_IN_CATCH_BLOCKS defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses variable DEREFS_ARE_CLONED defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses function addPropertiesForMethodContainingWarning(WarningPropertySet< WarningProperty >) defined in edu::umd::cs::findbugs::detect::FindNullDeref
   function addPropertiesForMethodContainingWarning(WarningPropertySet< WarningProperty >) in line 1726
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isPrivate() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable IN_UNCALLABLE_METHOD defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
   function analyzeMethod(ClassContext,Method) in line 221
      62 lines of code
      2 parameters
      9 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable DEBUG_NULLARG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable checkedDatabases defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function checkDatabases() defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getAnnotation(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::XMethod
      uses function getValue(String) defined in edu::umd::cs::findbugs::classfile::analysis::AnnotationValue
      uses function getMethodNullnessAnnotation() defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function findPreviouslyDeadBlocks() defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable invDataflow defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute() defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function checkCallSitesAndReturnInstructions() defined in edu::umd::cs::findbugs::detect::FindNullDeref
   function catchesNull(ConstantPool,Code,Location) in line 593
      protection public
      12 lines of code
      3 parameters
      3 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable catchTypesForNull defined in edu::umd::cs::findbugs::detect::FindNullDeref
   function checkCallSitesAndReturnInstructions() in line 342
      33 lines of code
      0 parameters
      8 conditional paths
      uses function getProfiler() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function examineCallSite(Location,ConstantPoolGen,TypeDataflow) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable methodAnnotation defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function examineReturnInstruction(Location) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function examinePutfieldInstruction(Location,PUTFIELD,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
   function checkDatabases() in line 310
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable unconditionalDerefParamDatabase defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getUnconditionalDerefParamDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function checkNonNullParam(Location,ConstantPoolGen,TypeDataflow,InvokeInstruction,BitSet,BitSet) in line 849
      67 lines of code
      6 parameters
      10 conditional paths
      uses function skipIfInsideCatchNull() defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function parameterMustBeNonNull(XMethod,int) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses variable DEBUG_NULLARG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getArgument(InvokeInstruction,ConstantPoolGen,int,int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isPrivate() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function addPropertiesForDereferenceLocations(WarningPropertySet< WarningProperty >,Collection< Location >,boolean) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function isDuplicated(WarningPropertySet< WarningProperty >,int,boolean) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function addParameterAnnotation(int,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function checkUnconditionallyDereferencedParam(Location,ConstantPoolGen,TypeDataflow,InvokeInstruction,BitSet,BitSet) in line 637
      154 lines of code
      6 parameters
      27 conditional paths
      uses function skipIfInsideCatchNull() defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses variable DEBUG_NULLARG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable unconditionalDerefParamDatabase defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getProperty(KeyType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable ALL_DANGEROUS_TARGETS defined in edu::umd::cs::findbugs::detect::NullArgumentWarningProperty
      uses variable MONOMORPHIC_CALL_SITE defined in edu::umd::cs::findbugs::detect::NullArgumentWarningProperty
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable ACTUAL_PARAMETER_GUARANTEED_NULL defined in edu::umd::cs::findbugs::detect::NullArgumentWarningProperty
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function safeCallToPrimateParseMethod(XMethod,Location) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isPrivate() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable IN_UNCALLABLE_METHOD defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses function addParamAnnotations(Location,BitSet,BitSet,WarningPropertySet<?super NullArgumentWarningProperty >,BugInstance) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_DANGEROUS_TARGET_ACTUAL_GUARANTEED_NULL defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable METHOD_DANGEROUS_TARGET defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable METHOD_SAFE_TARGET defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function decorateWarning(Location,WarningPropertySet< WarningProperty >,BugInstance) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function decorateWarning(Location,WarningPropertySet< WarningProperty >,BugInstance) in line 792
      6 lines of code
      3 parameters
      2 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
   function examineCallSite(Location,ConstantPoolGen,TypeDataflow) in line 376
      110 lines of code
      3 parameters
      9 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getArgumentSet(InvokeInstruction,ConstantPoolGen,DataflowValueChooser< ValueType >) defined in edu::umd::cs::findbugs::ba::Frame
      uses function mightBeNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isReturnValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable DEBUG_NULLARG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getNumArguments(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable unconditionalDerefParamDatabase defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function checkUnconditionallyDereferencedParam(Location,ConstantPoolGen,TypeDataflow,InvokeInstruction,BitSet,BitSet) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function checkNonNullParam(Location,ConstantPoolGen,TypeDataflow,InvokeInstruction,BitSet,BitSet) defined in edu::umd::cs::findbugs::detect::FindNullDeref
   function examinePutfieldInstruction(Location,PUTFIELD,ConstantPoolGen) in line 487
      35 lines of code
      3 parameters
      5 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function examineReturnInstruction(Location) in line 523
      38 lines of code
      1 parameters
      8 conditional paths
      uses variable DEBUG_NULLRETURN defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable invDataflow defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function findPreviouslyDeadBlocks() in line 292
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function foundGuaranteedNullDeref(@Nonnull Set< Location >,@Nonnull Set< Location >,SortedSet< Location >,ValueNumberDataflow,ValueNumber,@CheckForNull BugAnnotation,NullValueUnconditionalDeref,boolean) in line 1404
      protection public
      245 lines of code
      8 parameters
      50 conditional paths
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isMethodReturnValue() defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
      uses function isReadlineValue() defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
      uses function isAlwaysOnExceptionPath() defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
      uses function addPropertiesForDereferenceLocations(WarningPropertySet< WarningProperty >,Collection< Location >,boolean) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getUsagesRequiringNonNullValues(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function get(Location,ValueNumber,ValueNumberDataflow) defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function isReturnFromNonNullMethod() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
      uses function getNonNullField() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
      uses function getNonNullParameter() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses function safeCallToPrimateParseMethod(XMethod,Location) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getParameterNumber() defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses function hasManyPreceedingNullTests(int) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function resolveAccessMethodForMethod() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function addParameterAnnotation(int,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable ALWAYS_ON_EXCEPTION_PATH defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses variable LONG_RANGE_NULL_SOURCE defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function foundNullDeref(Location,ValueNumber,IsNullValue,ValueNumberFrame) in line 933
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function foundNullDeref(Location,ValueNumber,IsNullValue,ValueNumberFrame,boolean) in line 938
      protection public
      73 lines of code
      5 parameters
      17 conditional paths
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable ON_EXCEPTION_PATH defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function addPropertiesForDereferenceLocations(WarningPropertySet< WarningProperty >,Collection< Location >,boolean) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable CLOSING_NULL defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses function isDuplicated(WarningPropertySet< WarningProperty >,int,boolean) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function skipIfInsideCatchNull() defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function containsProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable DEREFS_ARE_CLONED defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportNullDeref(WarningPropertySet< WarningProperty >,Location,String,int,@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function mightBeNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isParamValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNullDeref
   function foundRedundantNullCheck(Location,RedundantBranch) in line 1074
      protection public
      230 lines of code
      2 parameters
      51 conditional paths
      uses variable firstValue defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses function isChecked() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function wouldHaveBeenAKaboom() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isParamValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getLocationOfKaBoom() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable infeasibleEdge defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isGoto(Instruction) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getNumIncomingEdges(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function isThrower(BasicBlock) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable previouslyDeadBlocks defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses variable invDataflow defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable ASSERTIONS_ENABLED defined in edu::umd::cs::findbugs::SystemProperties
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function isNamed() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function tryAddingOptionalUniqueAnnotations(BugAnnotation...) defined in edu::umd::cs::findbugs::BugInstance
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable CHECKED_VALUE defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses variable WOULD_HAVE_BEEN_A_KABOOM defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses variable CREATED_DEAD_CODE defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses function setDescription(String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function getMethodNullnessAnnotation() in line 325
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable DEBUG_NULLRETURN defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable UNKNOWN_NULLNESS defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   function hasManyPreceedingNullTests(int) in line 562
      26 lines of code
      1 parameters
      5 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function isDoomed(Location) in line 1736
      17 lines of code
      1 parameters
      9 conditional paths
      uses variable MARK_DOOMED defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getReturnPathTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function getUsagesRequiringNonNullValues(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function get(Location,ValueNumber,ValueNumberDataflow) defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getDescription() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function isDuplicated(WarningPropertySet< WarningProperty >,int,boolean) in line 1012
      protection public
      19 lines of code
      3 parameters
      5 conditional paths
      uses function containsProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable DEREFS_ARE_CLONED defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getLocationsContainingInstructionWithOffset(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable DEREFS_ARE_INLINED_FINALLY_BLOCKS defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses function getFullyQualifiedMethodName(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function isGoto(Instruction) in line 1337
      3 lines of code
      1 parameters
      11 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
   function isThrower(BasicBlock) in line 1054
      protection public
      18 lines of code
      1 parameters
      5 conditional paths
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function report() in line 918
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function reportNullDeref(WarningPropertySet< WarningProperty >,Location,String,int,@CheckForNull BugAnnotation) in line 1032
      21 lines of code
      5 parameters
      3 conditional paths
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addPropertiesForDereferenceLocations(WarningPropertySet< WarningProperty >,Collection< Location >,boolean) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function safeCallToPrimateParseMethod(XMethod,Location) in line 606
      30 lines of code
      2 parameters
      6 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
   function skipIfInsideCatchNull() in line 921
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
   function uniqueLocations(Collection< Location >) in line 1696
      29 lines of code
      1 parameters
      7 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function linesMentionedMultipleTimes(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function visitClassContext(ClassContext) in line 183
      protection public
      37 lines of code
      1 parameters
      7 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable CLASS defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getMethodsInCallOrder() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable METHOD defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable DEBUG_NULLARG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function FindNullDeref(BugReporter) in line 177
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
   variable bugAccumulator in line 157
   variable bugReporter in line 155
   variable catchTypesForNull in line 590
      protection public
   variable checkedDatabases in line 162
   variable CLASS in line 152
   variable classContext in line 165
   variable DEBUG in line 140
      protection public
   variable DEBUG_NULLARG in line 142
   variable DEBUG_NULLRETURN in line 144
   variable invDataflow in line 169
   variable MARK_DOOMED in line 146
   variable METHOD in line 150
   variable method in line 167
   variable methodAnnotation in line 175
   variable previouslyDeadBlocks in line 173
   variable unconditionalDerefParamDatabase in line 160
   variable vnaDataflow in line 171
module edu::umd::cs::findbugs::detect::FindNullDeref::CheckCallSitesAndReturnInstructions
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindNullDerefsInvolvingNonShortCircuitEvaluation.java
module edu::umd::cs::findbugs::detect::FindNullDerefsInvolvingNonShortCircuitEvaluation
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function checkForNullForcingABranch(int,int,OpcodeStack.Item) in line 84
      88 lines of code
      3 parameters
      17 conditional paths
      uses function nullGuaranteesBranch(int,OpcodeStack.Item) defined in edu::umd::cs::findbugs::detect::FindNullDerefsInvolvingNonShortCircuitEvaluation
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNullDerefsInvolvingNonShortCircuitEvaluation
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getUnconditionalValueDerefDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isUnconditionallyDereferenced(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getUnconditionalDerefLocationSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function nullGuaranteesBranch(int,OpcodeStack.Item) in line 195
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable ZERO_MEANS_NULL defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NONZERO_MEANS_NULL defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function sawOpcode(int) in line 70
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function getCodeByte(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function checkForNullForcingABranch(int,int,OpcodeStack.Item) defined in edu::umd::cs::findbugs::detect::FindNullDerefsInvolvingNonShortCircuitEvaluation
   function visit(Code) in line 61
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function FindNullDerefsInvolvingNonShortCircuitEvaluation(BugReporter) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable DEBUG in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindOpenStream.java
module edu::umd::cs::findbugs::detect::FindOpenStream
   inherits from edu::umd::cs::findbugs::ResourceTrackingDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function analyzeMethod(ClassContext,Method,StreamResourceTracker,ResourceCollection< Stream >) in line 331
      protection public
      120 lines of code
      4 parameters
      17 conditional paths
      uses variable potentialOpenStreamList defined in edu::umd::cs::findbugs::detect::FindOpenStream
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function setIsOpenOnCreation(boolean) defined in edu::umd::cs::findbugs::detect::Stream
      uses function setOpenLocation(Location) defined in edu::umd::cs::findbugs::detect::Stream
      uses function setInstanceParam(int) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable bugReporter defined in edu::umd::cs::findbugs::ResourceTrackingDetector
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable stream defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses variable isClosed defined in edu::umd::cs::findbugs::detect::Stream
      uses function setClosed() defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
      uses variable isUninteresting defined in edu::umd::cs::findbugs::detect::Stream
      uses function getOpenLocation() defined in edu::umd::cs::findbugs::detect::Stream
      uses function getStreamBase() defined in edu::umd::cs::findbugs::detect::Stream
      uses function isMainMethod(Method) defined in edu::umd::cs::findbugs::detect::FindOpenStream
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::ResourceTrackingDetector
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addTypeOfNamedClass(@DottedClassName String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable CLOSEIT_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function getLocation() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function clone() in line 244
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getResourceTracker(ClassContext,Method) in line 322
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::ResourceTrackingDetector
   function inspectResult(ClassContext,MethodGen,CFG,Dataflow< ResourceValueFrame, ResourceValueAnalysis< Stream >>,Stream) in line 453
      protection public
      31 lines of code
      5 parameters
      5 conditional paths
      uses variable stream defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getStatus() defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable OPEN defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable OPEN_ON_EXCEPTION_PATH defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable bugType defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses function getBugType() defined in edu::umd::cs::findbugs::detect::Stream
      uses variable priority defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable potentialOpenStreamList defined in edu::umd::cs::findbugs::detect::FindOpenStream
      uses function PotentialOpenStream(String,int,Stream) defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses variable CLOSED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function setClosed() defined in edu::umd::cs::findbugs::detect::Stream
   function isMainMethod(Method) in line 326
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function prescreen(ClassContext,Method,boolean) in line 311
      protection public
      9 lines of code
      3 parameters
      2 conditional paths
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function visitClassContext(ClassContext) in line 267
      protection public
      42 lines of code
      1 parameters
      9 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getConstantString() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable PRESCREEN_CLASS_LIST defined in edu::umd::cs::findbugs::detect::FindOpenStream
   function FindOpenStream(BugReporter) in line 238
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::ResourceTrackingDetector
   variable potentialOpenStreamList in line 230
   variable PRESCREEN_CLASS_LIST in line 256
module edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
   function toString() in line 213
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stream defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses function toString() defined in edu::umd::cs::findbugs::detect::Stream
   function PotentialOpenStream(String,int,Stream) in line 217
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable bugType defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses variable priority defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses variable stream defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
   variable bugType in line 206
      protection public
   variable priority in line 208
      protection public
   variable stream in line 210
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindPuzzlers.java
module edu::umd::cs::findbugs::detect::FindPuzzlers
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function adjustMultiplier(Object,int) in line 156
      7 lines of code
      2 parameters
      2 conditional paths
   function adjustPriority(int,int) in line 143
      12 lines of code
      2 parameters
      4 conditional paths
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function beforeOpcode(int) in line 165
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function resetIMulCastLong() in line 138
      4 lines of code
      0 parameters
      1 conditional paths
   function sawOpcode(int) in line 173
      protection public
      519 lines of code
      1 parameters
      102 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function isTop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable testingEnabled defined in edu::umd::cs::findbugs::detect::FindPuzzlers
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLineRange(BytecodeScanningDetector,int,int) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isReturn(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPrevOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function resetIMulCastLong() defined in edu::umd::cs::findbugs::detect::FindPuzzlers
      uses function adjustMultiplier(Object,int) defined in edu::umd::cs::findbugs::detect::FindPuzzlers
      uses function adjustPriority(int,int) defined in edu::umd::cs::findbugs::detect::FindPuzzlers
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSpecialKind() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable AVERAGE_COMPUTED_USING_DIVISION defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getPC() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isNonNegative() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable INT_SHIFT defined in edu::umd::cs::findbugs::IntAnnotation
      uses function addValueSource(@CheckForNull OpcodeStack.Item,DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses variable INT_VALUE defined in edu::umd::cs::findbugs::IntAnnotation
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable MATH_ABS defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::FieldDescriptor
      uses function getFieldDescriptor() defined in edu::umd::cs::findbugs::ba::XField
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function setDescription(String) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable LOADED_FROM_ROLE defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isNamed() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable METHOD_RETURN_VALUE_OF defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedClassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable RESULT_OF_L2I defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function visit(Code) in line 77
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function resetIMulCastLong() defined in edu::umd::cs::findbugs::detect::FindPuzzlers
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function visit(JavaClass) in line 124
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function FindPuzzlers(BugReporter) in line 70
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable testingEnabled defined in edu::umd::cs::findbugs::detect::FindPuzzlers
   variable testingEnabled in line 68
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindRefComparison.java
module edu::umd::cs::findbugs::detect::FindRefComparison
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function analyzeMethod(ClassContext,final Method) in line 733
      91 lines of code
      2 parameters
      12 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable comparedForEqualityInThisMethod defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable cfg defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses function getDepthFirstSearch(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getExceptionSetFactory(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable typeMerger defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function SpecialTypeAnalysis(Method,MethodGen,CFG,DepthFirstSearch,TypeMerger,TypeFrameModelingVisitor,RepositoryLookupFailureCallback,ExceptionSetFactory) defined in edu::umd::cs::findbugs::detect::FindRefComparison::SpecialTypeAnalysis
      uses function getProfiler() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function inspectLocation(JavaClass,ConstantPoolGen,Method,MethodGen,LinkedList< WarningWithProperties >,LinkedList< WarningWithProperties >,RefComparisonTypeFrameModelingVisitor,TypeDataflow,Location) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function decorateWarnings(LinkedList< WarningWithProperties >,WarningDecorator) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable SAW_CALL_TO_EQUALS defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable COMPARE_IN_TEST_CASE defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses function reportBest(ClassContext,Method,LinkedList< WarningWithProperties >,boolean) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function getAnnotations() defined in edu::umd::cs::findbugs::BugInstance
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function checkEqualsComparison(Location,JavaClass,Method,MethodGen,ConstantPoolGen,TypeDataflow) in line 1084
      173 lines of code
      6 parameters
      30 conditional paths
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable T_TOP defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses variable T_BOTTOM defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses function getMethodCalledAnnotation(ConstantPoolGen,InvokeInstruction) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable T_NULL defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable isStatic defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getPriority() defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable ARRAY_AND_NON_ARRAY defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable ARRAY_AND_OBJECT defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function checkForWeirdEquals(String,String,Set< XMethod >) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function addFoundAndExpectedType(Type,Type) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSomeSourceForTopTwoStackValues(ClassContext,Method,Location) defined in edu::umd::cs::findbugs::BugInstance
      uses variable INCOMPATIBLE_CLASSES defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable UNRELATED_CLASS_AND_INTERFACE defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable UNRELATED_FINAL_CLASS_AND_INTERFACE defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function addEqualsMethodUsed(ClassDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable UNRELATED_INTERFACES defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable UNCHECKED defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
   function checkForWeirdEquals(String,String,Set< XMethod >) in line 1274
      22 lines of code
      3 parameters
      4 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function mightBeEqualTo(ClassDescriptor,ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ClassSummary
   function checkRefComparison(Location,JavaClass,Method,MethodGen,RefComparisonTypeFrameModelingVisitor,TypeDataflow,List< WarningWithProperties >,List< WarningWithProperties >) in line 923
      61 lines of code
      8 parameters
      11 conditional paths
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable UNCHECKED defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable testingEnabled defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getPriority() defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addFoundAndExpectedType(Type,Type) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSomeSourceForTopTwoStackValues(ClassContext,Method,Location) defined in edu::umd::cs::findbugs::BugInstance
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function handleStringComparison(JavaClass,Method,MethodGen,RefComparisonTypeFrameModelingVisitor,List< WarningWithProperties >,Location,Type,Type) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable suspiciousSet defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function handleSuspiciousRefComparison(JavaClass,Method,MethodGen,List< WarningWithProperties >,Location,String,ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function decorateWarnings(LinkedList< WarningWithProperties >,WarningDecorator) in line 883
      6 lines of code
      2 parameters
      2 conditional paths
      uses function decorate(WarningWithProperties) defined in edu::umd::cs::findbugs::detect::FindRefComparison::WarningDecorator
   function getInvokedMethod(ConstantPoolGen,InvokeInstruction) in line 1265
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function getMethodCalledAnnotation(ConstantPoolGen,InvokeInstruction) in line 1258
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getInvokedMethod(ConstantPoolGen,InvokeInstruction) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function handleStringComparison(JavaClass,Method,MethodGen,RefComparisonTypeFrameModelingVisitor,List< WarningWithProperties >,Location,Type,Type) in line 985
      54 lines of code
      8 parameters
      9 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable T_STATIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable COMPARE_STATIC_STRINGS defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable T_DYNAMIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable DYNAMIC_AND_UNKNOWN defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable T_PARAMETER_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable STRING_PARAMETER_IN_PUBLIC_METHOD defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable STRING_PARAMETER defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable EMPTY_AND_UNKNOWN defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable STATIC_AND_UNKNOWN defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable SAW_INTERN defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable BASE_ES_PRIORITY defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addType(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function addSomeSourceForTopTwoStackValues(ClassContext,Method,Location) defined in edu::umd::cs::findbugs::BugInstance
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function handleSuspiciousRefComparison(JavaClass,Method,MethodGen,List< WarningWithProperties >,Location,String,ReferenceType,ReferenceType) in line 1040
      34 lines of code
      8 parameters
      7 conditional paths
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addType(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable LOADED_FROM_ROLE defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function addSomeSourceForTopTwoStackValues(ClassContext,Method,Location) defined in edu::umd::cs::findbugs::BugInstance
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function inspectLocation(JavaClass,ConstantPoolGen,Method,MethodGen,LinkedList< WarningWithProperties >,LinkedList< WarningWithProperties >,RefComparisonTypeFrameModelingVisitor,TypeDataflow,Location) in line 838
      44 lines of code
      9 parameters
      8 conditional paths
      uses function checkRefComparison(Location,JavaClass,Method,MethodGen,RefComparisonTypeFrameModelingVisitor,TypeDataflow,List< WarningWithProperties >,List< WarningWithProperties >) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function getLastBugLocation() defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getEndBytecode() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function forgetLastBug() defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function checkEqualsComparison(Location,JavaClass,Method,MethodGen,ConstantPoolGen,TypeDataflow) defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function report() in line 1298
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function reportBest(ClassContext,Method,LinkedList< WarningWithProperties >,boolean) in line 890
      32 lines of code
      4 parameters
      8 conditional paths
      uses variable REPORT_ALL_REF_COMPARISONS defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function visitClassContext(ClassContext) in line 672
      protection public
      35 lines of code
      1 parameters
      6 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable prescreenSet defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function analyzeMethod(ClassContext,final Method) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function FindRefComparison(BugReporter) in line 654
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable DEFAULT_SUSPICIOUS_SET defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable suspiciousSet defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable testingEnabled defined in edu::umd::cs::findbugs::detect::FindRefComparison
   variable BASE_ES_PRIORITY in line 128
   variable bugAccumulator in line 640
   variable bugReporter in line 638
   variable classContext in line 642
   variable comparedForEqualityInThisMethod in line 1075
   variable DEBUG in line 124
   variable DEFAULT_SUSPICIOUS_SET in line 134
   variable dynamicStringTypeInstance in line 281
   variable emptyStringTypeInstance in line 346
   variable invokeInstanceSet in line 150
   variable parameterStringTypeInstance in line 380
   variable prescreenSet in line 162
   variable REPORT_ALL_REF_COMPARISONS in line 126
   variable staticStringTypeInstance in line 316
   variable STRING_SIGNATURE in line 184
   variable suspiciousSet in line 644
   variable T_DYNAMIC_STRING in line 176
   variable T_PARAMETER_STRING in line 180
   variable T_STATIC_STRING in line 178
   variable testingEnabled in line 646
module edu::umd::cs::findbugs::detect::FindRefComparison::SpecialTypeAnalysis
   inherits from edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function initEntryFact(TypeFrame) in line 198
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable parameterStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function SpecialTypeAnalysis(Method,MethodGen,CFG,DepthFirstSearch,TypeMerger,TypeFrameModelingVisitor,RepositoryLookupFailureCallback,ExceptionSetFactory) in line 191
      5 lines of code
      8 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses variable typeMerger defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
module edu::umd::cs::findbugs::detect::FindRefComparison::DynamicStringType
   inherits from org::apache::bcel::generic::ObjectType
   function equals(Object) in line 231
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getType() in line 221
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_DYNAMIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function hashCode() in line 226
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 236
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function DynamicStringType() in line 216
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable serialVersionUID in line 214
module edu::umd::cs::findbugs::detect::FindRefComparison::FinalConstant
   inherits from org::apache::bcel::generic::ObjectType
   function equals(Object) in line 259
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::detect::FindRefComparison::FinalConstant
   function getXField() in line 271
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 253
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 276
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FinalConstant(@DottedClassName String,@Nonnull XField) in line 247
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 242
module edu::umd::cs::findbugs::detect::FindRefComparison::StaticStringType
   inherits from org::apache::bcel::generic::ObjectType
   function equals(Object) in line 306
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getType() in line 296
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_STATIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function hashCode() in line 301
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 311
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function StaticStringType() in line 291
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable serialVersionUID in line 289
module edu::umd::cs::findbugs::detect::FindRefComparison::EmptyStringType
   inherits from edu::umd::cs::findbugs::detect::FindRefComparison::StaticStringType
   function equals(Object) in line 336
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getType() in line 326
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_STATIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function hashCode() in line 331
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 341
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function EmptyStringType() in line 321
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable serialVersionUID in line 319
module edu::umd::cs::findbugs::detect::FindRefComparison::ParameterStringType
   inherits from org::apache::bcel::generic::ObjectType
   function equals(Object) in line 370
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getType() in line 360
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_PARAMETER_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function hashCode() in line 365
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 375
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ParameterStringType() in line 355
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable serialVersionUID in line 353
module edu::umd::cs::findbugs::detect::FindRefComparison::RefComparisonTypeFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function handleInstanceMethod(InvokeInstruction) in line 450
      19 lines of code
      1 parameters
      3 conditional paths
      uses variable staticStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable dynamicStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function handleLoad(FieldInstruction) in line 557
      29 lines of code
      1 parameters
      5 conditional paths
      uses variable STRING_SIGNATURE defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable staticStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function isString(Type) in line 491
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable STRING_SIGNATURE defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function returnsString(InvokeInstruction) in line 445
      4 lines of code
      1 parameters
      1 conditional paths
   function sawStringIntern() in line 394
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitGETFIELD(GETFIELD) in line 527
      protection public
      29 lines of code
      1 parameters
      6 conditional paths
      uses variable STRING_SIGNATURE defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSummary(XField) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function isNull() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable DEFAULT_SUSPICIOUS_SET defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function visitGETSTATIC(GETSTATIC) in line 496
      protection public
      29 lines of code
      1 parameters
      6 conditional paths
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSummary(XField) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function isNull() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable DEFAULT_SUSPICIOUS_SET defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable STRING_SIGNATURE defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function visitINVOKEINTERFACE(INVOKEINTERFACE) in line 427
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function visitINVOKESPECIAL(INVOKESPECIAL) in line 418
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function visitINVOKESTATIC(INVOKESTATIC) in line 402
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable dynamicStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function visitINVOKEVIRTUAL(INVOKEVIRTUAL) in line 437
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function visitLDC(LDC) in line 471
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable emptyStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable staticStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function visitLDC2_W(LDC2_W) in line 486
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable staticStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function RefComparisonTypeFrameModelingVisitor(ConstantPoolGen,TypeMerger,RepositoryLookupFailureCallback) in line 387
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable typeMerger defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   variable lookupFailureCallback in line 383
   variable sawStringIntern in line 385
module edu::umd::cs::findbugs::detect::FindRefComparison::RefComparisonTypeMerger
   inherits from edu::umd::cs::findbugs::ba::type::StandardTypeMerger
   function isExtendedStringType(byte) in line 627
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable T_DYNAMIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable T_STATIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable T_PARAMETER_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function isReferenceType(byte) in line 598
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable T_STATIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable T_DYNAMIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function mergeReferenceTypes(ReferenceType,ReferenceType) in line 603
      23 lines of code
      2 parameters
      5 conditional paths
   function RefComparisonTypeMerger(RepositoryLookupFailureCallback,ExceptionSetFactory) in line 592
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
module edu::umd::cs::findbugs::detect::FindRefComparison::WarningWithProperties
module edu::umd::cs::findbugs::detect::FindRefComparison::WarningDecorator
   function decorate(WarningWithProperties) in line 730
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindReturnRef.java
module edu::umd::cs::findbugs::detect::FindReturnRef
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function isPotentialCapture(OpcodeStack.Item) in line 175
      14 lines of code
      1 parameters
      4 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function sawOpcode(int) in line 103
      protection public
      71 lines of code
      1 parameters
      10 conditional paths
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isPotentialCapture(OpcodeStack.Item) defined in edu::umd::cs::findbugs::detect::FindReturnRef
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindReturnRef
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(JavaClass) in line 64
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 75
      protection public
      19 lines of code
      1 parameters
      3 conditional paths
      uses function getNumberMethodArguments() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Code) in line 96
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function visitAfter(JavaClass) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindReturnRef
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function FindReturnRef(BugReporter) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable bugAccumulator in line 55
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindRoughConstants.java
module edu::umd::cs::findbugs::detect::FindRoughConstants
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function checkConst(Number) in line 123
      31 lines of code
      1 parameters
      7 conditional paths
      uses variable badConstants defined in edu::umd::cs::findbugs::detect::FindRoughConstants
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRoughConstants
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function sawOpcode(int) in line 112
      protection public
      10 lines of code
      1 parameters
      4 conditional paths
      uses function getConstantRefOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function checkConst(Number) defined in edu::umd::cs::findbugs::detect::FindRoughConstants
   function FindRoughConstants(BugReporter) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRoughConstants
   variable badConstants in line 96
   variable bugReporter in line 105
module edu::umd::cs::findbugs::detect::FindRoughConstants::BadConstant
   function addApprox(BigDecimal) in line 83
      11 lines of code
      1 parameters
      1 conditional paths
   function diff(double) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function equalPrefix(Number) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function exact(Number) in line 67
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindRunInvocations.java
module edu::umd::cs::findbugs::detect::FindRunInvocations
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function isThread(String) in line 44
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRunInvocations
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function sawOpcode(int) in line 61
      protection public
      19 lines of code
      1 parameters
      6 conditional paths
      uses variable alreadySawStart defined in edu::umd::cs::findbugs::detect::FindRunInvocations
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isThread(String) defined in edu::umd::cs::findbugs::detect::FindRunInvocations
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function amVisitingMainMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindRunInvocations
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 54
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable alreadySawStart defined in edu::umd::cs::findbugs::detect::FindRunInvocations
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindRunInvocations
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function FindRunInvocations(BugReporter) in line 39
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRunInvocations
   variable alreadySawStart in line 37
   variable bugAccumulator in line 35
   variable bugReporter in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindSelfComparison.java
module edu::umd::cs::findbugs::detect::FindSelfComparison
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function checkForSelfOperation(int,String) in line 258
      74 lines of code
      2 parameters
      14 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function linesMentionedMultipleTimes(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable lineNumberTable defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function isMethodCall() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function resetDoubleAssignmentState() in line 78
      6 lines of code
      0 parameters
      1 conditional paths
   function sawBranchTo(int) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function resetDoubleAssignmentState() defined in edu::umd::cs::findbugs::detect::FindSelfComparison
   function sawOpcode(int) in line 91
      protection public
      162 lines of code
      1 parameters
      52 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function hasIncomingBranches(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function resetDoubleAssignmentState() defined in edu::umd::cs::findbugs::detect::FindSelfComparison
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getXClassOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses function getXFields() defined in edu::umd::cs::findbugs::ba::XClass
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addReferencedField(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable DID_YOU_MEAN_ROLE defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function isReturn(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNextOpcode() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function checkForSelfOperation(int,String) defined in edu::umd::cs::findbugs::detect::FindSelfComparison
      uses function isRegisterLoad() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isMethodCall() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 62
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function resetDoubleAssignmentState() defined in edu::umd::cs::findbugs::detect::FindSelfComparison
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function FindSelfComparison(BugReporter) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindSelfComparison2.java
module edu::umd::cs::findbugs::detect::FindSelfComparison2
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 74
      73 lines of code
      2 parameters
      31 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function checkForSelfOperation(ClassContext,Location,ValueNumberDataflow,String,Method,MethodGen,String) defined in edu::umd::cs::findbugs::detect::FindSelfComparison2
   function checkForSelfOperation(ClassContext,Location,ValueNumberDataflow,String,Method,MethodGen,String) in line 156
      63 lines of code
      7 parameters
      13 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSelfComparison2
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function report() in line 221
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 42
      protection public
      23 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindSelfComparison2
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSelfComparison2
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindSelfComparison2(BugReporter) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSelfComparison2
   variable bugReporter in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindSleepWithLockHeld.java
module edu::umd::cs::findbugs::detect::FindSleepWithLockHeld
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 101
      29 lines of code
      2 parameters
      5 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function isSleep(INVOKESTATIC,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSleepWithLockHeld
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getNumLockedObjects() defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindSleepWithLockHeld
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function isSleep(INVOKESTATIC,ConstantPoolGen) in line 131
      10 lines of code
      2 parameters
      2 conditional paths
   function prescreen(ClassContext,Method) in line 83
      17 lines of code
      2 parameters
      4 conditional paths
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function report() in line 143
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 60
      protection public
      22 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function prescreen(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindSleepWithLockHeld
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindSleepWithLockHeld
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSleepWithLockHeld
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindSleepWithLockHeld(BugReporter) in line 54
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSleepWithLockHeld
   variable bugAccumulator in line 52
   variable bugReporter in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindSpinLoop.java
module edu::umd::cs::findbugs::detect::FindSpinLoop
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 55
      protection public
      56 lines of code
      1 parameters
      20 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindSpinLoop
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable lastFieldSeen defined in edu::umd::cs::findbugs::detect::FindSpinLoop
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSpinLoop
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 47
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindSpinLoop
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function FindSpinLoop(BugReporter) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSpinLoop
   variable bugReporter in line 38
   variable DEBUG in line 32
   variable lastFieldSeen in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindSqlInjection.java
module edu::umd::cs::findbugs::detect::FindSqlInjection
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 481
      48 lines of code
      2 parameters
      8 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getStringAppendState(CFG,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function getConstantDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function isDatabaseSink(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getNumArguments(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isConstantString() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses function getPreviousLocation(CFG,Location,boolean) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function isSafeValue(Location,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function generateBugInstance(JavaClass,MethodGen,InstructionHandle,StringAppendState) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses variable testingEnabled defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function generateBugInstance(JavaClass,MethodGen,InstructionHandle,StringAppendState) in line 435
      41 lines of code
      4 parameters
      11 conditional paths
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getSawAppend(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function getSawOpenQuote(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function getSawCloseQuote(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getSawComma(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getSawUnsafeAppend(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function getSawSeriousTaint(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function getSawTaint(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function isExecuteDatabaseSink(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function isPreparedStatementDatabaseSink(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
   function getPreviousInstruction(InstructionHandle,boolean) in line 404
      10 lines of code
      2 parameters
      3 conditional paths
   function getPreviousLocation(CFG,Location,boolean) in line 416
      18 lines of code
      3 parameters
      5 conditional paths
      uses function getPreviousInstruction(InstructionHandle,boolean) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
      uses function getPredecessorWithEdgeType(BasicBlock,@Type int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getStringAppendState(CFG,ConstantPoolGen) in line 295
      79 lines of code
      2 parameters
      18 conditional paths
      uses function setSawInitialTaint() defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function isConstantStringLoad(Location,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function updateStringAppendState(Location,ConstantPoolGen,StringAppendState) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function isStringAppend(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function setSawAppend(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function getPreviousLocation(CFG,Location,boolean) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function isSafeValue(Location,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function setSawUnsafeAppend(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function setSawTaint(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function setSawSeriousTaint(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
   function isCloseQuote(String) in line 227
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isConstantStringLoad(Location,ConstantPoolGen) in line 206
      12 lines of code
      2 parameters
      3 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function isDatabaseSink(InvokeInstruction,ConstantPoolGen) in line 291
      3 lines of code
      2 parameters
      1 conditional paths
      uses function isPreparedStatementDatabaseSink(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function isExecuteDatabaseSink(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
   function isExecuteDatabaseSink(InvokeInstruction,ConstantPoolGen) in line 273
      17 lines of code
      2 parameters
      3 conditional paths
   function isOpenQuote(String) in line 221
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isPreparedStatementDatabaseSink(Instruction,ConstantPoolGen) in line 255
      17 lines of code
      2 parameters
      3 conditional paths
   function isSafeValue(Location,ConstantPoolGen) in line 375
      27 lines of code
      2 parameters
      8 conditional paths
      uses function getPreviousLocation(CFG,Location,boolean) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function isStringAppend(Instruction,ConstantPoolGen) in line 192
      13 lines of code
      2 parameters
      3 conditional paths
   function report() in line 531
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function updateStringAppendState(Location,ConstantPoolGen,StringAppendState) in line 231
      23 lines of code
      3 parameters
      5 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function isConstantStringLoad(Location,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function setSawComma(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function isCloseQuote(String) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function getSawOpenQuote(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function setSawCloseQuote(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function isOpenQuote(String) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function setSawOpenQuote(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
   function visitClassContext(ClassContext) in line 164
      protection public
      27 lines of code
      1 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getFullyQualifiedMethodName(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function FindSqlInjection(BugReporter) in line 157
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable testingEnabled defined in edu::umd::cs::findbugs::detect::FindSqlInjection
   variable testingEnabled in line 155
module edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
   function getSawAppend(InstructionHandle) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSawCloseQuote(InstructionHandle) in line 93
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSawComma(InstructionHandle) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSawOpenQuote(InstructionHandle) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSawSeriousTaint(InstructionHandle) in line 113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSawTaint(InstructionHandle) in line 109
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSawUnsafeAppend(InstructionHandle) in line 105
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSawAppend(InstructionHandle) in line 129
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSawCloseQuote(InstructionHandle) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSawComma(InstructionHandle) in line 125
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSawInitialTaint() in line 145
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setSawOpenQuote(InstructionHandle) in line 117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSawSeriousTaint(InstructionHandle) in line 137
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSawTaint(InstructionHandle) in line 141
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSawUnsafeAppend(InstructionHandle) in line 133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindTwoLockWait.java
module edu::umd::cs::findbugs::detect::FindTwoLockWait
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function analyzeMethod(ClassContext,Method) in line 106
      11 lines of code
      2 parameters
      2 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function visitLocation(ClassContext,Location,MethodGen,LockDataflow) defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
   function clone() in line 63
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function preScreen(MethodGen) in line 118
      protection public
      24 lines of code
      1 parameters
      5 conditional paths
   function report() in line 168
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 72
      protection public
      33 lines of code
      1 parameters
      8 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable possibleWaitBugs defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses variable possibleNotifyLocations defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function preScreen(MethodGen) defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitLocation(ClassContext,Location,MethodGen,LockDataflow) in line 143
      protection public
      23 lines of code
      4 parameters
      5 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses variable possibleWaitBugs defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable possibleNotifyLocations defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
   function FindTwoLockWait(BugReporter) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
   variable bugReporter in line 50
   variable javaClass in line 52
   variable possibleNotifyLocations in line 56
   variable possibleWaitBugs in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindUncalledPrivateMethods.java
module edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 75
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable className defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable calledMethodNames defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
   function visitClassContext(ClassContext) in line 96
      protection public
      28 lines of code
      1 parameters
      4 conditional paths
      uses variable definedPrivateMethods defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
      uses variable calledMethodNames defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
      uses variable className defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitMethod(Method) in line 51
      protection public
      22 lines of code
      1 parameters
      5 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable definedPrivateMethods defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
   function FindUncalledPrivateMethods(BugReporter) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
   variable bugReporter in line 38
   variable calledMethodNames in line 44
   variable className in line 40
   variable definedPrivateMethods in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindUnconditionalWait.java
module edu::umd::cs::findbugs::detect::FindUnconditionalWait
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawBranchTo(int) in line 51
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function sawOpcode(int) in line 58
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnconditionalWait
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function FindUnconditionalWait(BugReporter) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnconditionalWait
   variable bugReporter in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindUninitializedGet.java
module edu::umd::cs::findbugs::detect::FindUninitializedGet
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawBranchTo(int) in line 118
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getStartBytecode() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function sawOpcode(int) in line 129
      protection public
      67 lines of code
      1 parameters
      14 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isContainerField(XField) defined in edu::umd::cs::findbugs::detect::UnreadFieldsData
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getReadFields() defined in edu::umd::cs::findbugs::detect::UnreadFieldsData
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function callsOverriddenMethodsFromSuperConstructor(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function visit(JavaClass) in line 68
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function visit(Field) in line 76
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 95
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Code) in line 105
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUninitializedGet
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitAnnotation(String,Map< String, ElementValue >,boolean) in line 84
      protection public
      9 lines of code
      3 parameters
      3 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function FindUninitializedGet(BugReporter) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUninitializedGet
   variable bugReporter in line 61
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindUnrelatedTypesInGenericContainer.java
module edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
   inherits from edu::umd::cs::findbugs::Detector
   function addCheckedCall(@DottedClassName String,String,String,int,int) in line 141
      6 lines of code
      5 parameters
      1 conditional paths
      uses function getClassDescriptorForDottedClassName(@DottedClassName String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable callMap defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function add(K,V) defined in edu::umd::cs::findbugs::util::MultiMap
   function addCheckedCall(@DottedClassName String,String,int) in line 148
      3 lines of code
      3 parameters
      1 conditional paths
      uses function addCheckedCall(@DottedClassName String,String,String,int,int) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
   function analyzeMethod(ClassContext,Method) in line 378
      320 lines of code
      2 parameters
      57 conditional paths
      uses function isSynthetic(Method) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function prescreen(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function getClassName(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberDataflow
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable callMap defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function get(K) defined in edu::umd::cs::findbugs::util::MultiMap
      uses function containsKey(K) defined in edu::umd::cs::findbugs::util::MultiMap
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSlotsFromTopOfStackForParameter(int) defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getTotalArgumentSize() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function hasParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function isGenericCollection(ClassDescriptor) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function getParameterAt(int) defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function compareTypes(Type,Type,boolean) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function getPriority() defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable IGNORE_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValueNumbersThatAreUnconditionallyDereferenced() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function mightBeEqualTo(ClassDescriptor,ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ClassSummary
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addFoundAndExpectedType(Type,Type) defined in edu::umd::cs::findbugs::BugInstance
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable NOISY_BUG defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function compareTypeParameters(GenericObjectType,GenericObjectType) in line 839
      13 lines of code
      2 parameters
      4 conditional paths
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function compareTypes(Type,Type,boolean) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function getParameterAt(int) defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function compareTypes(Type,Type,boolean) in line 711
      127 lines of code
      3 parameters
      23 conditional paths
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function compareTypeParameters(GenericObjectType,GenericObjectType) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses variable ARRAY_AND_OBJECT defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable ARRAY_AND_NON_ARRAY defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function getObjectType() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function compareTypesOld(Type,Type) in line 854
      45 lines of code
      2 parameters
      10 conditional paths
      uses function getTypeCategory() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getExtension() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function hasParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function isGenericCollection(ClassDescriptor) in line 310
      67 lines of code
      1 parameters
      17 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getSourceSignature() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
   function isSynthetic(Method) in line 289
      12 lines of code
      1 parameters
      4 conditional paths
   function prescreen(ClassContext,Method) in line 277
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function report() in line 906
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 249
      protection public
      24 lines of code
      1 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindUnrelatedTypesInGenericContainer(BugReporter) in line 153
      protection public
      89 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function addCheckedCall(@DottedClassName String,String,String,int,int) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
   variable bugReporter in line 108
   variable callMap in line 138
   variable DEBUG in line 110
module edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer::Info
   function toString() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Info(ClassDescriptor,int,int) in line 113
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindUnreleasedLock.java
module edu::umd::cs::findbugs::detect::Lock
   inherits from edu::umd::cs::findbugs::ResourceCreationPoint
   function getLockValue() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Lock(Location,String,ValueNumber) in line 72
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   variable lockValue in line 70
module edu::umd::cs::findbugs::detect::FindUnreleasedLock
   inherits from edu::umd::cs::findbugs::ResourceTrackingDetector
   function getResourceTracker(ClassContext,Method) in line 419
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function inspectResult(ClassContext,MethodGen,CFG,Dataflow< ResourceValueFrame, ResourceValueAnalysis< Lock >>,Lock) in line 426
      protection public
      34 lines of code
      5 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getStatus() defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable OPEN defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable OPEN_ON_EXCEPTION_PATH defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function prescreen(ClassContext,Method,boolean) in line 403
      protection public
      14 lines of code
      3 parameters
      3 conditional paths
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function report() in line 462
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
   function visitClassContext(ClassContext) in line 374
      protection public
      27 lines of code
      1 parameters
      6 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function FindUnreleasedLock(BugReporter) in line 362
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable DEBUG in line 83
   variable numAcquires in line 85
module edu::umd::cs::findbugs::detect::FindUnreleasedLock::LockFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function instanceEscapes(InvokeInstruction,int) in line 180
      3 lines of code
      2 parameters
      23 conditional paths
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function toString() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function isInstance() defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses function getExceptionThrowerLocation(Edge) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function transferInstruction(InstructionHandle,BasicBlock) in line 106
      protection public
      72 lines of code
      2 parameters
      17 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
      uses variable OPEN defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable CLOSED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function toString() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable RETURN_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function fuzzyMatch(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses function setStatus(int) defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function LockFrameModelingVisitor(ConstantPoolGen,LockResourceTracker,Lock,ValueNumberDataflow,IsNullValueDataflow) in line 96
      protection public
      8 lines of code
      5 parameters
      1 conditional paths
   variable lock in line 90
   variable resourceTracker in line 88
   variable vnaDataflow in line 92
module edu::umd::cs::findbugs::detect::FindUnreleasedLock::LockResourceTracker
   inherits from edu::umd::cs::findbugs::ba::ResourceTracker
   function createVisitor(Lock,ConstantPoolGen) in line 274
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function ignoreExceptionEdge(Edge,Lock,ConstantPoolGen) in line 286
      protection public
      53 lines of code
      3 parameters
      1 conditional paths
   function ignoreImplicitExceptions(Lock) in line 279
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function isParamInstance(Lock,int) in line 341
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function isResourceClose(BasicBlock,InstructionHandle,ConstantPoolGen,Lock,ResourceValueFrame) in line 262
      protection public
      10 lines of code
      5 parameters
      1 conditional paths
   function isResourceCreation(BasicBlock,InstructionHandle,ConstantPoolGen) in line 203
      protection public
      32 lines of code
      3 parameters
      1 conditional paths
   function mightCloseResource(BasicBlock,InstructionHandle,ConstantPoolGen) in line 237
      protection public
      23 lines of code
      3 parameters
      1 conditional paths
   function toInvokeInstruction(Instruction) in line 347
      7 lines of code
      1 parameters
      1 conditional paths
   function LockResourceTracker(RepositoryLookupFailureCallback,CFG,ValueNumberDataflow,IsNullValueDataflow) in line 194
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
   variable cfg in line 188
   variable isNullDataflow in line 192
   variable lookupFailureCallback in line 186
   variable vnaDataflow in line 190
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindUnsatisfiedObligation.java
module edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
   inherits from edu::umd::cs::findbugs::bcel::CFGDetector
   function report() in line 736
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitClass(ClassDescriptor) in line 125
      protection public
      26 lines of code
      1 parameters
      7 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function signatureInvolvesObligations(String) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
   function visitMethodCFG(MethodDescriptor,CFG) in line 153
      5 lines of code
      2 parameters
      1 conditional paths
      uses function analyzeMethod() defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation::MethodChecker
   function FindUnsatisfiedObligation(BugReporter) in line 116
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses variable database defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   variable bugReporter in line 112
   variable COMPUTE_TRANSFERS in line 97
   variable database in line 114
   variable DEBUG in line 87
   variable DEBUG_FP in line 91
   variable DEBUG_METHOD in line 89
   variable REPORT_OBLIGATION_SET in line 110
   variable REPORT_PATH in line 103
   variable REPORT_PATH_DEBUG in line 105
module edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation::PossibleObligationTransfer
   function balanced(State) in line 179
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function getCount(int) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function getId() defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function matches(Obligation) in line 185
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 190
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PossibleObligationTransfer(@Nonnull Obligation,@Nonnull Obligation) in line 166
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation::MethodChecker
   function analyzeMethod() in line 222
      protection public
      57 lines of code
      0 parameters
      7 conditional paths
      uses variable DEBUG_METHOD defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
   function annotateWarningWithSourceLineInformation(State,Obligation,BugInstance) in line 339
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable REPORT_PATH defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
   function checkStateForLeakedObligations(State,Map< Obligation, State >) in line 280
      30 lines of code
      2 parameters
      6 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getLength() defined in edu::umd::cs::findbugs::ba::Path
      uses function getBlockIdAt(int) defined in edu::umd::cs::findbugs::ba::Path
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses variable database defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getMaxObligationTypes() defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function getObligationById(int) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function getAdjustedLeakCount(State,int) in line 612
      13 lines of code
      2 parameters
      2 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getObligationById(int) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function getPath() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function acceptVisitor(CFG,PathVisitor) defined in edu::umd::cs::findbugs::ba::Path
      uses function getAdjustedLeakCount() defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation::MethodChecker::PostProcessingPathVisitor
   function isPossibleInstanceOfObligationType(Subtypes2,ObjectType,ObjectType) in line 626
      11 lines of code
      3 parameters
      1 conditional paths
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function reportPath(final BugInstance,final Obligation,final State) in line 638
      91 lines of code
      3 parameters
      13 conditional paths
      uses function getPath() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function stateIterator() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function getCount(int) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function getId() defined in edu::umd::cs::findbugs::ba::obl::Obligation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable ROLE_OBLIGATION_CREATED_BY_WILLCLOSE_PARAMETER defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable REPORT_PATH_DEBUG defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable ROLE_OBLIGATION_CREATED defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable ROLE_PATH_CONTINUES defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
      uses function getEdgeExceptionSet(Edge) defined in edu::umd::cs::findbugs::ba::type::TypeDataflow
      uses function acceptVisitor(CFG,PathVisitor) defined in edu::umd::cs::findbugs::ba::Path
   function reportWarning(Obligation,State,StateSet) in line 311
      27 lines of code
      3 parameters
      3 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::obl::Obligation
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isOnExceptionPath() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addInt(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function getCount(int) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function getId() defined in edu::umd::cs::findbugs::ba::obl::Obligation
      uses variable INT_OBLIGATIONS_REMAINING defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable REPORT_OBLIGATION_SET defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function toString() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable REMAINING_OBLIGATIONS_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
module edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation::MethodChecker::PostProcessingPathVisitor
   inherits from edu::umd::cs::findbugs::ba::PathVisitor
   function applyPossibleObligationTransfers() in line 441
      42 lines of code
      0 parameters
      8 conditional paths
      uses variable DEBUG_FP defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function matches(Obligation) defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation::PossibleObligationTransfer
      uses function balanced(State) defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation::PossibleObligationTransfer
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
   function checkForPossibleObligationTransfer(InvokeInstruction,InstructionHandle) in line 484
      81 lines of code
      2 parameters
      15 conditional paths
      uses variable DEBUG_FP defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses variable database defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getFactory() defined in edu::umd::cs::findbugs::ba::obl::ObligationPolicyDatabase
      uses function getObligationByType(ObjectType) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function getParameterObligationTypes(XMethod) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function getCount(int) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function getId() defined in edu::umd::cs::findbugs::ba::obl::Obligation
      uses function PossibleObligationTransfer(@Nonnull Obligation,@Nonnull Obligation) defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation::PossibleObligationTransfer
   function couldNotAnalyze() in line 381
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAdjustedLeakCount() in line 377
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTransferState(InstructionHandle) in line 573
      21 lines of code
      1 parameters
      4 conditional paths
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getPrefixStates(Path) defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function getPath() defined in edu::umd::cs::findbugs::ba::obl::State
      uses variable DEBUG_FP defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
   function visitBasicBlock(BasicBlock) in line 386
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable COMPUTE_TRANSFERS defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
   function visitEdge(Edge) in line 567
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG_FP defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
   function visitInstructionHandle(InstructionHandle) in line 399
      protection public
      41 lines of code
      1 parameters
      8 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getType() defined in edu::umd::cs::findbugs::ba::obl::Obligation
      uses variable COMPUTE_TRANSFERS defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function PostProcessingPathVisitor(Obligation,State) in line 364
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function getCount(int) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function getId() defined in edu::umd::cs::findbugs::ba::obl::Obligation
      uses variable COMPUTE_TRANSFERS defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindUnsyncGet.java
module edu::umd::cs::findbugs::detect::FindUnsyncGet
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function report() in line 51
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
      uses variable getMethods defined in edu::umd::cs::findbugs::detect::FindUnsyncGet
      uses variable setMethods defined in edu::umd::cs::findbugs::detect::FindUnsyncGet
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnsyncGet
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(JavaClass) in line 70
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function report() defined in edu::umd::cs::findbugs::detect::FindUnsyncGet
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Method) in line 76
      protection public
      26 lines of code
      1 parameters
      4 conditional paths
      uses variable getMethods defined in edu::umd::cs::findbugs::detect::FindUnsyncGet
      uses variable setMethods defined in edu::umd::cs::findbugs::detect::FindUnsyncGet
   function FindUnsyncGet(BugReporter) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnsyncGet
   variable bugReporter in line 37
   variable getMethods in line 42
   variable setMethods in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindUselessControlFlow.java
module edu::umd::cs::findbugs::detect::FindUselessControlFlow
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function getNextSourceLine(LineNumberTable,int) in line 116
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
   function sawOpcode(int) in line 89
      protection public
      26 lines of code
      1 parameters
      6 conditional paths
      uses variable ifInstructionSet defined in edu::umd::cs::findbugs::detect::FindUselessControlFlow
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchFallThrough() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNextSourceLine(LineNumberTable,int) defined in edu::umd::cs::findbugs::detect::FindUselessControlFlow
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindUselessControlFlow
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function visit(Code) in line 83
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindUselessControlFlow
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function FindUselessControlFlow(BugReporter) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable bugAccumulator in line 76
   variable ifInstructionSet in line 55
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FindUseOfNonSerializableValue.java
module edu::umd::cs::findbugs::detect::FindUseOfNonSerializableValue
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 125
      93 lines of code
      2 parameters
      17 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindUseOfNonSerializableValue
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindUseOfNonSerializableValue
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
   function report() in line 220
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 57
      protection public
      47 lines of code
      1 parameters
      13 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindUseOfNonSerializableValue
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindUseOfNonSerializableValue
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUseOfNonSerializableValue
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::FindUseOfNonSerializableValue
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function FindUseOfNonSerializableValue(BugReporter) in line 51
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUseOfNonSerializableValue
   variable bugAccumulator in line 47
   variable bugReporter in line 45
   variable DEBUG in line 49
module edu::umd::cs::findbugs::detect::FindUseOfNonSerializableValue::Use
   variable PASSED_TO_WRITE_OBJECT in line 105
      protection public
   variable STORE_INTO_HTTP_SESSION in line 105
      protection public
   variable STORED_IN_SERIALZIED_FIELD in line 105
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FormatStringChecker.java
module edu::umd::cs::findbugs::detect::FormatStringChecker
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 76
      protection public
      146 lines of code
      1 parameters
      21 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getXMethodOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isVarArgs() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable FORMAT_STRING_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable FORMAT_SPECIFIER_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addValueSource(@CheckForNull OpcodeStack.Item,DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function addInt(int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable INT_EXPECTED_ARGUMENTS defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable INT_ACTUAL_ARGUMENTS defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable STRING_MESSAGE defined in edu::umd::cs::findbugs::StringAnnotation
   function visit(Code) in line 64
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function FormatStringChecker(BugReporter) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::detect::FormatStringChecker::FormatState
   variable EXPECTING_ASSIGNMENT in line 53
      protection public
   variable NONE in line 52
      protection public
   variable READY_FOR_FORMAT in line 52
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/FunctionsThatMightBeMistakenForProcedures.java
module edu::umd::cs::findbugs::detect::FunctionsThatMightBeMistakenForProcedures
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::FirstPassDetector
   function sawOpcode(int) in line 203
      protection public
      105 lines of code
      1 parameters
      23 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getItemMethodInvokedOn(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isInitialParameter() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function isAbstract() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(JavaClass) in line 66
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visit(Field) in line 73
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function visit(Code) in line 106
      protection public
      95 lines of code
      1 parameters
      18 conditional paths
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getReturnTypeSignature() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getParameter(int) defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getSourceSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getReturnTypeSignature() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses variable testingEnabled defined in edu::umd::cs::findbugs::detect::FunctionsThatMightBeMistakenForProcedures
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addFunctionThatMightBeMistakenForProcedures(MethodDescriptor) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitAfter(JavaClass) in line 83
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function FunctionsThatMightBeMistakenForProcedures(BugReporter) in line 57
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function setVisitMethodsInCallOrder(boolean) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable testingEnabled defined in edu::umd::cs::findbugs::detect::FunctionsThatMightBeMistakenForProcedures
   variable testingEnabled in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/HugeSharedStringConstants.java
module edu::umd::cs::findbugs::detect::HugeSharedStringConstants
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function report() in line 97
      protection public
      32 lines of code
      0 parameters
      7 conditional paths
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable SIZE_OF_HUGE_CONSTANT defined in edu::umd::cs::findbugs::detect::HugeSharedStringConstants
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addInt(int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable INT_OCCURRENCES defined in edu::umd::cs::findbugs::IntAnnotation
   function visit(ConstantString) in line 63
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable SIZE_OF_HUGE_CONSTANT defined in edu::umd::cs::findbugs::detect::HugeSharedStringConstants
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(ConstantValue) in line 78
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable SIZE_OF_HUGE_CONSTANT defined in edu::umd::cs::findbugs::detect::HugeSharedStringConstants
   function HugeSharedStringConstants(BugReporter) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable SIZE_OF_HUGE_CONSTANT in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/IDivResultCastToDouble.java
module edu::umd::cs::findbugs::detect::IDivResultCastToDouble
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 44
      protection public
      30 lines of code
      1 parameters
      6 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::IDivResultCastToDouble
      uses variable prevOpCode defined in edu::umd::cs::findbugs::detect::IDivResultCastToDouble
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::IDivResultCastToDouble
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 29
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::IDivResultCastToDouble
   function visit(Code) in line 36
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::IDivResultCastToDouble
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function IDivResultCastToDouble(BugReporter) in line 23
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable bugAccumulator in line 19
   variable DEBUG in line 15
   variable prevOpCode in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/IncompatMask.java
module edu::umd::cs::findbugs::detect::IncompatMask
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function checkState(int) in line 57
      7 lines of code
      1 parameters
      2 conditional paths
   function noteVal(long) in line 65
      10 lines of code
      1 parameters
      3 conditional paths
   function sawInt(int) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function noteVal(long) defined in edu::umd::cs::findbugs::detect::IncompatMask
   function sawLong(long) in line 82
      protection public
      3 lines of code
      1 parameters
      3 conditional paths
      uses function noteVal(long) defined in edu::umd::cs::findbugs::detect::IncompatMask
   function sawOpcode(int) in line 98
      protection public
      137 lines of code
      1 parameters
      41 conditional paths
      uses function noteVal(long) defined in edu::umd::cs::findbugs::detect::IncompatMask
      uses function checkState(int) defined in edu::umd::cs::findbugs::detect::IncompatMask
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::IncompatMask
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
   function visit(Method) in line 52
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function IncompatMask(BugReporter) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::IncompatMask
   variable bugReporter in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/InconsistentAnnotations.java
module edu::umd::cs::findbugs::detect::InconsistentAnnotations
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::UseAnnotationDatabase
   function report() in line 88
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 55
      protection public
      31 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function iterable() defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
      uses variable nonnullTypeQualifierValue defined in edu::umd::cs::findbugs::detect::InconsistentAnnotations
      uses variable when defined in edu::umd::cs::findbugs::ba::jsr305::TypeQualifierAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function InconsistentAnnotations(BugReporter) in line 48
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   variable nonnullTypeQualifierValue in line 44
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/InconsistentSyncWarningProperty.java
module edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function InconsistentSyncWarningProperty(String,PriorityAdjustment) in line 30
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable ANNOTATED_AS_GUARDED_BY_THIS in line 72
      protection public
   variable ANNOTATED_AS_THREAD_SAFE in line 78
      protection public
   variable BELOW_MIN_SYNC_PERCENT in line 65
      protection public
   variable MANY_BIASED_UNLOCKED in line 46
      protection public
   variable MUTABLE_SERVLET_FIELD in line 75
      protection public
   variable NEVER_READ in line 54
      protection public
   variable NEVER_WRITTEN in line 50
      protection public
   variable NO_LOCAL_LOCKS in line 61
      protection public
   variable ONLY_UNSYNC_IN_GETTERS in line 69
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/InefficientIndexOf.java
module edu::umd::cs::findbugs::detect::InefficientIndexOf
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 42
      protection public
      23 lines of code
      1 parameters
      7 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InefficientIndexOf
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable STRING_MESSAGE defined in edu::umd::cs::findbugs::StringAnnotation
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function InefficientIndexOf(BugReporter) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InefficientIndexOf
   variable bugReporter in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/InefficientMemberAccess.java
module edu::umd::cs::findbugs::detect::InefficientMemberAccess
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 55
      protection public
      52 lines of code
      1 parameters
      12 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable ACCESS_PREFIX defined in edu::umd::cs::findbugs::detect::InefficientMemberAccess
      uses variable methodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable dottedClassConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getField() defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InefficientMemberAccess
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitClassContext(ClassContext) in line 46
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable clsName defined in edu::umd::cs::findbugs::detect::InefficientMemberAccess
   function InefficientMemberAccess(BugReporter) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InefficientMemberAccess
   variable ACCESS_PREFIX in line 35
      protection public
   variable bugReporter in line 37
   variable clsName in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/InefficientToArray.java
module edu::umd::cs::findbugs::detect::InefficientToArray
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 100
      protection public
      43 lines of code
      1 parameters
      10 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses variable state defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable collectionClass defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(Method) in line 84
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses variable state defined in edu::umd::cs::findbugs::detect::InefficientToArray
   function visit(Code) in line 93
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function visitClassContext(ClassContext) in line 77
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable collectionClass defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function InefficientToArray(BugReporter) in line 71
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InefficientToArray
   variable bugAccumulator in line 57
   variable bugReporter in line 55
   variable collectionClass in line 53
   variable DEBUG in line 45
   variable state in line 59
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/InfiniteLoop.java
module edu::umd::cs::findbugs::detect::InfiniteLoop
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function addBackwardsReach() in line 447
      20 lines of code
      0 parameters
      6 conditional paths
      uses function getBranchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function clearRegModified() in line 61
      5 lines of code
      0 parameters
      2 conditional paths
   function constantSince(Item,int) in line 479
      10 lines of code
      2 parameters
      3 conditional paths
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getLastUpdate(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getBackwardsReach(int) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses variable branchTarget defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function constantSince(Item) in line 490
      8 lines of code
      1 parameters
      5 conditional paths
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getLastUpdate(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function lowerPriorityALot() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryLocalVariableAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function lowerPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function getBackwardsReach(int) in line 468
      10 lines of code
      1 parameters
      3 conditional paths
   function isConstant(Item,BackwardsBranch) in line 291
      11 lines of code
      2 parameters
      3 conditional paths
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function isRegModified(int,int,int) in line 67
      8 lines of code
      3 parameters
      12 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getNumLastUpdates() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getLastUpdate(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getBackwardsReach(int) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
   function regModifiedAt(int,int) in line 56
      4 lines of code
      2 parameters
      1 conditional paths
   function sawBranchTo(int) in line 304
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function sawOpcode(int) in line 310
      protection public
      133 lines of code
      1 parameters
      44 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function addBackwardsReach() defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getDefaultSwitchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSwitchOffsets() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function constantSince(Item,int) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isRegModified(int,int,int) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
   function visit(Code) in line 211
      protection public
      79 lines of code
      1 parameters
      16 conditional paths
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function clearRegModified() defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses function getBackwardsReach(int) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses function isConstant(Item,BackwardsBranch) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable DESCRIPTION_LOOP_BOTTOM defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function isRegModified(int,int,int) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses function constantSince(Item,int) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable DESCRIPTION_LAST_CHANGE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function InfiniteLoop(BugReporter) in line 206
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::detect::InfiniteLoop::Jump
   function equals(Object) in line 95
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::detect::InfiniteLoop::BackwardsBranch
   inherits from edu::umd::cs::findbugs::detect::InfiniteLoop::Jump
   function equals(Object) in line 128
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::detect::InfiniteLoop::ForwardConditionalBranch
   inherits from edu::umd::cs::findbugs::detect::InfiniteLoop::Jump
   function equals(Object) in line 152
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/InfiniteRecursiveLoop.java
module edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawBranchTo(int) in line 70
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function getNextPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable largestBranchTarget defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable seenTransferOfControl defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
   function sawOpcode(int) in line 86
      protection public
      148 lines of code
      1 parameters
      39 conditional paths
      uses variable seenReturn defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable seenTransferOfControl defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable seenStateChange defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable largestBranchTarget defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 55
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable seenTransferOfControl defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable seenStateChange defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable seenReturn defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable largestBranchTarget defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function InfiniteRecursiveLoop(BugReporter) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
   variable bugReporter in line 36
   variable DEBUG in line 48
   variable largestBranchTarget in line 46
   variable seenReturn in line 40
   variable seenStateChange in line 44
   variable seenTransferOfControl in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/InheritanceUnsafeGetResource.java
module edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function adjustPriority(int) in line 135
      27 lines of code
      1 parameters
      6 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function hasSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function sawOpcode(int) in line 79
      protection public
      48 lines of code
      1 parameters
      11 conditional paths
      uses function getConstantRefOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function adjustPriority(int) defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable methodIsStatic defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
      uses variable classIsFinal defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
      uses variable classIsVisibleToOtherPackages defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(JavaClass) in line 65
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable classIsFinal defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
      uses variable classIsVisibleToOtherPackages defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
   function visit(Method) in line 72
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable methodIsStatic defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
   function InheritanceUnsafeGetResource(BugReporter) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
   variable bugReporter in line 40
   variable classIsFinal in line 42
   variable classIsVisibleToOtherPackages in line 45
   variable methodIsStatic in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/InitializationChain.java
module edu::umd::cs::findbugs::detect::InitializationChain
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function compute() in line 185
      protection public
      21 lines of code
      0 parameters
      5 conditional paths
   function getMethodVisitOrder(JavaClass) in line 80
      17 lines of code
      1 parameters
      5 conditional paths
   function report() in line 208
      protection public
      31 lines of code
      0 parameters
      7 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses function compute() defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function sawOpcode(int) in line 133
      protection public
      51 lines of code
      1 parameters
      13 conditional paths
      uses variable lastInvocation defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable staticFieldsReadInAnyConstructor defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable fieldsReadInThisConstructor defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getXMethodOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable staticFieldsRead defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses variable constructorsInvokedInStaticInitializer defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable invocationInfo defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses variable warningGiven defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable STORED_ROLE defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_CONSTRUCTOR defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function addReferencedField(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses variable VALUE_OF_ROLE defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 100
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses variable fieldsReadInThisConstructor defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses variable staticFieldsRead defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitAfter(JavaClass) in line 119
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses variable staticFieldsRead defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses variable staticFieldsReadInAnyConstructor defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses variable fieldsReadInThisConstructor defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses variable constructorsInvokedInStaticInitializer defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses variable invocationInfo defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses variable lastInvocation defined in edu::umd::cs::findbugs::detect::InitializationChain
   function InitializationChain(BugReporter) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InitializationChain
   variable bugReporter in line 51
   variable constructorsInvokedInStaticInitializer in line 57
   variable DEBUG in line 73
   variable fieldsReadInThisConstructor in line 55
   variable invocationInfo in line 58
   variable lastInvocation in line 61
   variable staticFieldsRead in line 53
   variable staticFieldsReadInAnyConstructor in line 54
   variable warningGiven in line 59
module edu::umd::cs::findbugs::detect::InitializationChain::InvocationInfo
   function InvocationInfo(XMethod,int) in line 64
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/InitializeNonnullFieldsInConstructor.java
module edu::umd::cs::findbugs::detect::InitializeNonnullFieldsInConstructor
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function checkForInitialization(XField) in line 80
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function isReferenceType() defined in edu::umd::cs::findbugs::ba::XField
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   function isSelfOperation() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function sawOpcode(int) in line 128
      protection public
      53 lines of code
      1 parameters
      15 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isSelfOperation() defined in edu::umd::cs::findbugs::detect::InitializeNonnullFieldsInConstructor
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getItemMethodInvokedOn(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function checkForInitialization(XField) defined in edu::umd::cs::findbugs::detect::InitializeNonnullFieldsInConstructor
   function setupVisitorForClass(JavaClass) in line 54
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(Field) in line 68
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function checkForInitialization(XField) defined in edu::umd::cs::findbugs::detect::InitializeNonnullFieldsInConstructor
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function visit(Code) in line 91
      protection public
      33 lines of code
      1 parameters
      7 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitAfter(JavaClass) in line 60
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function InitializeNonnullFieldsInConstructor(BugReporter) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/InstanceFieldLoadStreamFactory.java
module edu::umd::cs::findbugs::detect::InstanceFieldLoadStreamFactory
   inherits from edu::umd::cs::findbugs::detect::StreamFactory
   function createStream(Location,ObjectType,ConstantPoolGen,RepositoryLookupFailureCallback) in line 66
      protection public
      31 lines of code
      4 parameters
      6 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable streamBaseClass defined in edu::umd::cs::findbugs::detect::InstanceFieldLoadStreamFactory
      uses function setIsOpenOnCreation(boolean) defined in edu::umd::cs::findbugs::detect::Stream
      uses function setOpenLocation(Location) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable bugPatternType defined in edu::umd::cs::findbugs::detect::InstanceFieldLoadStreamFactory
      uses function setInteresting(String) defined in edu::umd::cs::findbugs::detect::Stream
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function setBugPatternType(String) in line 60
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugPatternType defined in edu::umd::cs::findbugs::detect::InstanceFieldLoadStreamFactory
   function InstanceFieldLoadStreamFactory(String) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable streamBaseClass defined in edu::umd::cs::findbugs::detect::InstanceFieldLoadStreamFactory
   variable bugPatternType in line 39
   variable streamBaseClass in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/InstantiateStaticClass.java
module edu::umd::cs::findbugs::detect::InstantiateStaticClass
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function isStaticOnlyClass(XClass) in line 71
      40 lines of code
      1 parameters
      11 conditional paths
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getXMethods() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getXFields() defined in edu::umd::cs::findbugs::ba::XClass
   function sawOpcode(int) in line 41
      protection public
      29 lines of code
      1 parameters
      7 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getXClassOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isStaticOnlyClass(XClass) defined in edu::umd::cs::findbugs::detect::InstantiateStaticClass
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InstantiateStaticClass
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function InstantiateStaticClass(BugReporter) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InstantiateStaticClass
   variable bugReporter in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/IntCast2LongAsInstant.java
module edu::umd::cs::findbugs::detect::IntCast2LongAsInstant
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function report() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function sawOpcode(int) in line 47
      protection public
      34 lines of code
      1 parameters
      8 conditional paths
      uses function getIntConstant() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSpecialKind() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RESULT_OF_I2L defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getMethodDescriptorOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getPrevOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function addValueSource(@CheckForNull OpcodeStack.Item,DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitClassContext(ClassContext) in line 93
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function IntCast2LongAsInstant(BugReporter) in line 40
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/InvalidJUnitTest.java
module edu::umd::cs::findbugs::detect::InvalidJUnitTest
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function enabled() in line 155
      3 lines of code
      0 parameters
      1 conditional paths
   function hasSuite(Method[]) in line 136
      11 lines of code
      1 parameters
      3 conditional paths
   function hasTestMethods(JavaClass) in line 108
      26 lines of code
      1 parameters
      7 conditional paths
      uses function hasSuite(Method[]) defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
   function isJunit3TestCase(XClass) in line 83
      24 lines of code
      1 parameters
      6 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function sawOpcode(int) in line 205
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses variable SEEN_ALOAD_0 defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sawSuperCall defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
   function visit(Method) in line 160
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 178
      protection public
      25 lines of code
      1 parameters
      6 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sawSuperCall defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable METHOD_OVERRIDDEN defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function visitClassContext(ClassContext) in line 57
      protection public
      25 lines of code
      1 parameters
      6 conditional paths
      uses function enabled() defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getXClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function isJunit3TestCase(XClass) defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses function hasTestMethods(JavaClass) defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function InvalidJUnitTest(BugReporter) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
   variable bugReporter in line 46
   variable sawSuperCall in line 175
   variable SEEN_ALOAD_0 in line 44
   variable SEEN_NOTHING in line 42
   variable state in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/IOStreamFactory.java
module edu::umd::cs::findbugs::detect::IOStreamFactory
   inherits from edu::umd::cs::findbugs::detect::StreamFactory
   function createStream(Location,ObjectType,ConstantPoolGen,RepositoryLookupFailureCallback) in line 57
      protection public
      31 lines of code
      4 parameters
      7 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable baseClassType defined in edu::umd::cs::findbugs::detect::IOStreamFactory
      uses variable uninterestingSubclassTypeList defined in edu::umd::cs::findbugs::detect::IOStreamFactory
      uses function setInteresting(String) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable bugType defined in edu::umd::cs::findbugs::detect::IOStreamFactory
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function toString() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable baseClassType defined in edu::umd::cs::findbugs::detect::IOStreamFactory
   function IOStreamFactory(String,String[],String) in line 47
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
      uses variable bugType defined in edu::umd::cs::findbugs::detect::IOStreamFactory
   variable baseClassType in line 37
   variable bugType in line 41
   variable uninterestingSubclassTypeList in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/IteratorIdioms.java
module edu::umd::cs::findbugs::detect::IteratorIdioms
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 90
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sawNoSuchElement defined in edu::umd::cs::findbugs::detect::IteratorIdioms
      uses variable sawCall defined in edu::umd::cs::findbugs::detect::IteratorIdioms
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Method) in line 65
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable shouldVisitCode defined in edu::umd::cs::findbugs::detect::IteratorIdioms
   function visit(Code) in line 75
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable shouldVisitCode defined in edu::umd::cs::findbugs::detect::IteratorIdioms
      uses variable sawNoSuchElement defined in edu::umd::cs::findbugs::detect::IteratorIdioms
      uses variable sawCall defined in edu::umd::cs::findbugs::detect::IteratorIdioms
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::IteratorIdioms
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitClassContext(ClassContext) in line 52
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable iteratorDescriptor defined in edu::umd::cs::findbugs::detect::IteratorIdioms
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::IteratorIdioms
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function IteratorIdioms(BugReporter) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::IteratorIdioms
   variable bugReporter in line 39
   variable iteratorDescriptor in line 37
   variable sawCall in line 43
   variable sawNoSuchElement in line 41
   variable shouldVisitCode in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/LazyInit.java
module edu::umd::cs::findbugs::detect::LazyInit
   inherits from edu::umd::cs::findbugs::ByteCodePatternDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function clone() in line 103
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getBugReporter() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::LazyInit
   function getPattern() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pattern defined in edu::umd::cs::findbugs::detect::LazyInit
   function potentialInitialization(InstructionHandle) in line 380
      13 lines of code
      1 parameters
      4 conditional paths
   function prescreen(Method,ClassContext) in line 124
      protection public
      31 lines of code
      2 parameters
      6 conditional paths
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function reportMatch(ClassContext,Method,ByteCodePatternMatch) in line 157
      protection public
      222 lines of code
      3 parameters
      39 conditional paths
      uses function lookup(String) defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses function getVariable() defined in edu::umd::cs::findbugs::ba::bcp::Binding
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function getFieldName() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function getFieldSig() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::LazyInit
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getFirstLabeledMatch(String) defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function getMatchedInstructionInstructionHandle() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function getAllDominatedBy(BasicBlock) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function getBlocks(BitSet) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function copyFrom(LockSet) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function intersectWith(LockSet) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::LockSet
      uses function potentialInitialization(InstructionHandle) defined in edu::umd::cs::findbugs::detect::LazyInit
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::LazyInit
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function LazyInit(BugReporter) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::LazyInit
   variable bugReporter in line 83
   variable DEBUG in line 85
   variable pattern in line 90
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/LoadOfKnownNullValue.java
module edu::umd::cs::findbugs::detect::LoadOfKnownNullValue
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 78
      179 lines of code
      2 parameters
      28 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullTestedClose(ClassContext,ALOAD,InstructionHandle,Instruction) defined in edu::umd::cs::findbugs::detect::LoadOfKnownNullValue
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isChecked() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function isNamed() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::LoadOfKnownNullValue
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function isNullTestedClose(ClassContext,ALOAD,InstructionHandle,Instruction) in line 263
      44 lines of code
      4 parameters
      10 conditional paths
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
   function report() in line 309
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 53
      protection public
      24 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::LoadOfKnownNullValue
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::LoadOfKnownNullValue
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::LoadOfKnownNullValue
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function LoadOfKnownNullValue(BugReporter) in line 47
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::LoadOfKnownNullValue
   variable bugAccumulator in line 45
   variable bugReporter in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/LostLoggerDueToWeakReference.java
module edu::umd::cs::findbugs::detect::LostLoggerDueToWeakReference
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function checkForFieldEscape() in line 168
      11 lines of code
      0 parameters
      3 conditional paths
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
   function checkForImport() in line 146
      5 lines of code
      0 parameters
      2 conditional paths
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function checkForMethodExportImport() in line 152
      15 lines of code
      0 parameters
      4 conditional paths
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
   function sawOpcode(int) in line 86
      protection public
      59 lines of code
      1 parameters
      16 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function checkForImport() defined in edu::umd::cs::findbugs::detect::LostLoggerDueToWeakReference
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getItemMethodInvokedOn(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addValueSource(@CheckForNull OpcodeStack.Item,DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function checkForMethodExportImport() defined in edu::umd::cs::findbugs::detect::LostLoggerDueToWeakReference
      uses function checkForFieldEscape() defined in edu::umd::cs::findbugs::detect::LostLoggerDueToWeakReference
   function visit(Code) in line 60
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
      uses function clearBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function LostLoggerDueToWeakReference(BugReporter) in line 50
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/MethodReturnCheck.java
module edu::umd::cs::findbugs::detect::MethodReturnCheck
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::UseAnnotationDatabase
   function badUseOfCompareResult(Item,Item) in line 93
      38 lines of code
      2 parameters
      10 conditional paths
      uses function getReturnValueOf() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function isPop(int) in line 265
      3 lines of code
      1 parameters
      1 conditional paths
   function sawMethodCallWithIgnoredReturnValue() in line 219
      45 lines of code
      0 parameters
      11 conditional paths
      uses variable checkReturnAnnotationDatabase defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function getResolvedAnnotation(Object,boolean) defined in edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
      uses variable callSeen defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isFunctionshatMightBeMistakenForProcedures(MethodDescriptor) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable CHECK_RETURN_VALUE_INFERRED defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses function getPriority() defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function getSizeOfSurroundingTryBlock(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function annotationIsDirect(Object) defined in edu::umd::cs::findbugs::ba::AnnotationDatabase
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isPrivate() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getPattern() defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable callPC defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable state defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable SCAN defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
   function sawOpcode(int) in line 132
      protection public
      83 lines of code
      1 parameters
      17 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable state defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function badUseOfCompareResult(Item,Item) defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function addValueSource(@CheckForNull OpcodeStack.Item,DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable callSeen defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable callPC defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function sawMethodCallWithIgnoredReturnValue() defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable SCAN defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable SAW_INVOKE defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function isPop(int) defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable INVOKE_OPCODE_SET defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable checkReturnAnnotationDatabase defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function getResolvedAnnotation(Object,boolean) defined in edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
      uses variable CHECK_RETURN_VALUE_IGNORE defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses function getPriority() defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses function annotationIsDirect(Object) defined in edu::umd::cs::findbugs::ba::AnnotationDatabase
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getPattern() defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
   function visitAfter(Code) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function visitClassContext(ClassContext) in line 83
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable checkReturnAnnotationDatabase defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
   function MethodReturnCheck(BugReporter) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable bugAccumulator in line 68
   variable callPC in line 76
   variable callSeen in line 72
   variable checkReturnAnnotationDatabase in line 70
   variable DEBUG in line 52
   variable INVOKE_OPCODE_SET in line 58
   variable SAW_INVOKE in line 56
   variable SCAN in line 54
   variable state in line 74
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/MethodReturnValueStreamFactory.java
module edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
   inherits from edu::umd::cs::findbugs::detect::StreamFactory
   function createStream(Location,ObjectType,ConstantPoolGen,RepositoryLookupFailureCallback) in line 101
      protection public
      44 lines of code
      4 parameters
      7 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable invokeOpcodeSet defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses variable baseClassType defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses variable methodName defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses variable methodSig defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses function setIgnoreImplicitExceptions(boolean) defined in edu::umd::cs::findbugs::detect::Stream
      uses function setIsOpenOnCreation(boolean) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable isUninteresting defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses function setInteresting(String) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable bugType defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function MethodReturnValueStreamFactory(String,String,String) in line 71
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses variable methodSig defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
   function MethodReturnValueStreamFactory(String,String,String,String) in line 92
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses variable methodSig defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses variable bugType defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
   variable baseClassType in line 50
   variable bugType in line 58
   variable invokeOpcodeSet in line 41
   variable isUninteresting in line 56
   variable methodName in line 52
   variable methodSig in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/Methods.java
module edu::umd::cs::findbugs::detect::Methods
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function Methods(BugReporter) in line 30
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/MultithreadedInstanceAccess.java
module edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function getMtClasses() in line 63
      19 lines of code
      0 parameters
      4 conditional paths
      uses variable mtClasses defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable STRUTS_ACTION_NAME defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable SERVLET_NAME defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
   function sawField() in line 137
      protection public
      42 lines of code
      0 parameters
      8 conditional paths
      uses variable monitorCount defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable writingField defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses function getConstantRefOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable alreadyReported defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable STRUTS_ACTION_NAME defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable mtClassName defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function sawOpcode(int) in line 181
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable monitorCount defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable writingField defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
   function shouldVisitCode(Code) in line 131
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitClassContext(ClassContext) in line 84
      protection public
      37 lines of code
      1 parameters
      7 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable STRUTS_ACTION_NAME defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable mtClassName defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable SERVLET_NAME defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses function getMtClasses() defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
   function visitMethod(Method) in line 123
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable monitorCount defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable alreadyReported defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable writingField defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
   function MultithreadedInstanceAccess(BugReporter) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
   variable alreadyReported in line 57
   variable bugReporter in line 47
   variable monitorCount in line 53
   variable mtClasses in line 49
   variable mtClassName in line 51
   variable SERVLET_NAME in line 45
   variable STRUTS_ACTION_NAME in line 43
   variable writingField in line 55
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/MutableLock.java
module edu::umd::cs::findbugs::detect::MutableLock
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 69
      protection public
      28 lines of code
      1 parameters
      7 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function asUnsignedByte(byte) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::MutableLock
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(JavaClass) in line 48
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(Field) in line 54
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function visit(Method) in line 62
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function MutableLock(BugReporter) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::MutableLock
   variable bugReporter in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/MutableStaticFields.java
module edu::umd::cs::findbugs::detect::MutableStaticFields
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function interesting(XField) in line 195
      15 lines of code
      1 parameters
      4 conditional paths
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isProtected() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function report() in line 244
      protection public
      74 lines of code
      0 parameters
      17 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isInterface() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::MutableStaticFields
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function sawOpcode(int) in line 131
      protection public
      63 lines of code
      1 parameters
      16 conditional paths
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function interesting(XField) defined in edu::umd::cs::findbugs::detect::MutableStaticFields
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(JavaClass) in line 102
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable isEclipseNLS defined in edu::umd::cs::findbugs::detect::MutableStaticFields
   function visit(Method) in line 112
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Code) in line 119
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
   function visit(Field) in line 212
      protection public
      30 lines of code
      1 parameters
      6 conditional paths
      uses function getFieldSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable isEclipseNLS defined in edu::umd::cs::findbugs::detect::MutableStaticFields
      uses function getXField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function MutableStaticFields(BugReporter) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::MutableStaticFields
   variable bugReporter in line 86
   variable isEclipseNLS in line 95
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/Naming.java
module edu::umd::cs::findbugs::detect::Naming
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function allAbstract(Set< XMethod >) in line 239
      9 lines of code
      1 parameters
      3 conditional paths
   function badFieldName(Field) in line 458
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function badMethodName(String) in line 620
      4 lines of code
      1 parameters
      1 conditional paths
   function checkNonSuper(XMethod,Set< XMethod >) in line 249
      25 lines of code
      2 parameters
      6 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function confusingMethodNamesWrongCapitalization(XMethod,XMethod) defined in edu::umd::cs::findbugs::detect::Naming
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::Naming
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
   function checkSuper(XMethod,Set< XMethod >) in line 145
      93 lines of code
      2 parameters
      20 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function confusingMethodNamesWrongCapitalization(XMethod,XMethod) defined in edu::umd::cs::findbugs::detect::Naming
      uses function confusingMethodNamesWrongPackage(XMethod,XMethod) defined in edu::umd::cs::findbugs::detect::Naming
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function definedIn(JavaClass,XMethod) defined in edu::umd::cs::findbugs::detect::Naming
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isCalled(XMethod) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable METHOD_IS_CALLED defined in edu::umd::cs::findbugs::detect::Naming::NamingProperty
      uses function isDeprecated() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable METHOD_IS_DEPRECATED defined in edu::umd::cs::findbugs::detect::Naming::NamingProperty
      uses function allAbstract(Set< XMethod >) defined in edu::umd::cs::findbugs::detect::Naming
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable SUPERCLASS_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_DID_YOU_MEAN_TO_OVERRIDE defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable METHOD_OVERRIDDEN defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::Naming
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function removePackageNamesFromSignature(String) defined in edu::umd::cs::findbugs::detect::Naming
      uses function addFoundAndExpectedType(Type,Type) defined in edu::umd::cs::findbugs::BugInstance
   function codeDoesSomething(Code) in line 625
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function confusingMethodNamesWrongCapitalization(XMethod,XMethod) in line 92
      protection public
      16 lines of code
      2 parameters
      5 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function removePackageNamesFromSignature(String) defined in edu::umd::cs::findbugs::detect::Naming
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function confusingMethodNamesWrongPackage(XMethod,XMethod) in line 109
      protection public
      19 lines of code
      2 parameters
      6 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function removePackageNamesFromSignature(String) defined in edu::umd::cs::findbugs::detect::Naming
   function definedIn(JavaClass,XMethod) in line 83
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function findVoidConstructor(JavaClass) in line 506
      9 lines of code
      1 parameters
      3 conditional paths
      uses function isVoidConstructor(JavaClass,Method) defined in edu::umd::cs::findbugs::detect::Naming
   function getSignatureOfOuterClass(JavaClass) in line 470
      8 lines of code
      1 parameters
      3 conditional paths
   function isVoidConstructor(JavaClass,Method) in line 612
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getSignatureOfOuterClass(JavaClass) defined in edu::umd::cs::findbugs::detect::Naming
   function markedAsNotUsable(Method) in line 479
      25 lines of code
      1 parameters
      8 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function mightInheritFromException(ClassDescriptor) in line 360
      14 lines of code
      1 parameters
      4 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
   function removePackageNamesFromSignature(String) in line 630
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable sigType defined in edu::umd::cs::findbugs::detect::Naming
   function report() in line 276
      protection public
      24 lines of code
      0 parameters
      8 conditional paths
      uses function checkSuper(XMethod,Set< XMethod >) defined in edu::umd::cs::findbugs::detect::Naming
      uses function checkNonSuper(XMethod,Set< XMethod >) defined in edu::umd::cs::findbugs::detect::Naming
   function sameSimpleName(String,String) in line 311
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function stripPackageName(String) defined in edu::umd::cs::findbugs::detect::Naming
   function stripPackageName(String) in line 301
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(JavaClass) in line 392
      protection public
      44 lines of code
      1 parameters
      11 conditional paths
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::Naming
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function mightInheritFromException(ClassDescriptor) defined in edu::umd::cs::findbugs::detect::Naming
      uses function badFieldName(Field) defined in edu::umd::cs::findbugs::detect::Naming
      uses function badMethodName(String) defined in edu::umd::cs::findbugs::detect::Naming
      uses variable isEclipseNLS defined in edu::umd::cs::findbugs::detect::Naming
   function visit(Field) in line 438
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses function getFieldName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable isEclipseNLS defined in edu::umd::cs::findbugs::detect::Naming
      uses function getFieldSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function badFieldName(Field) defined in edu::umd::cs::findbugs::detect::Naming
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::Naming
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addVisitedField(PreorderVisitor) defined in edu::umd::cs::findbugs::BugInstance
   function visit(Method) in line 517
      protection public
      94 lines of code
      1 parameters
      23 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function findVoidConstructor(JavaClass) defined in edu::umd::cs::findbugs::detect::Naming
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function markedAsNotUsable(Method) defined in edu::umd::cs::findbugs::detect::Naming
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function codeDoesSomething(Code) defined in edu::umd::cs::findbugs::detect::Naming
      uses function isVoidConstructor(JavaClass,Method) defined in edu::umd::cs::findbugs::detect::Naming
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getAnnotations() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::Naming
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function badMethodName(String) defined in edu::umd::cs::findbugs::detect::Naming
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function removePackageNamesFromSignature(String) defined in edu::umd::cs::findbugs::detect::Naming
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitClassContext(ClassContext) in line 141
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function visitJavaClass(JavaClass) in line 316
      protection public
      35 lines of code
      1 parameters
      10 conditional paths
      uses function sameSimpleName(String,String) defined in edu::umd::cs::findbugs::detect::Naming
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::Naming
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function Naming(BugReporter) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::Naming
   variable bugReporter in line 134
   variable isEclipseNLS in line 389
   variable sigType in line 465
module edu::umd::cs::findbugs::detect::Naming::NamingProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function NamingProperty(String,PriorityAdjustment) in line 67
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable METHOD_IS_CALLED in line 71
      protection public
   variable METHOD_IS_DEPRECATED in line 74
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/Noise.java
module edu::umd::cs::findbugs::detect::Noise
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawClass() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function sawInt(int) in line 135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function sawLong(long) in line 140
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function sawOpcode(int) in line 156
      protection public
      100 lines of code
      1 parameters
      66 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function sawString(String) in line 146
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 127
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function Noise(BugReporter) in line 120
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::detect::Noise::HashQueue
   function getHash() in line 83
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function getPriority() in line 92
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
   function push(byte) in line 52
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function push(String) in line 66
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function push(int) in line 76
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function pushHash(Object) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function reset() in line 59
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/NoiseNullDeref.java
module edu::umd::cs::findbugs::detect::NoiseNullDeref
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::UseAnnotationDatabase
   inherits from edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonCollector
   function addPropertiesForDereferenceLocations(WarningPropertySet< WarningProperty >,Collection< Location >) in line 355
      34 lines of code
      2 parameters
      8 conditional paths
      uses function isDoomed(Location) defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable DOOMED_CODE defined in edu::umd::cs::findbugs::detect::DoomedCodeWarningProperty
      uses function uniqueLocations(Collection< Location >) defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function skipIfInsideCatchNull() defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable FALSE_POSITIVE defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses variable DEREFS_IN_CATCH_BLOCKS defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses variable DEREFS_ARE_CLONED defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses function addPropertiesForMethodContainingWarning(WarningPropertySet< WarningProperty >) defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
   function addPropertiesForMethodContainingWarning(WarningPropertySet< WarningProperty >) in line 407
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isPrivate() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable IN_UNCALLABLE_METHOD defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
   function analyzeMethod(ClassContext,Method) in line 171
      32 lines of code
      2 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable DEBUG_NULLARG defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function findPreviouslyDeadBlocks() defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute() defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function findPreviouslyDeadBlocks() in line 212
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function foundGuaranteedNullDeref(@Nonnull Set< Location >,@Nonnull Set< Location >,SortedSet< Location >,ValueNumberDataflow,ValueNumber,@CheckForNull BugAnnotation,NullValueUnconditionalDeref,boolean) in line 350
      protection public
      4 lines of code
      8 parameters
      1 conditional paths
   function foundNullDeref(Location,ValueNumber,IsNullValue,ValueNumberFrame) in line 245
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function foundNullDeref(Location,ValueNumber,IsNullValue,ValueNumberFrame,boolean) in line 250
      protection public
      52 lines of code
      5 parameters
      9 conditional paths
      uses function isNullOnComplicatedPath23() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function addProperty(T) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable ON_EXCEPTION_PATH defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses variable method defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function addPropertiesForDereferenceLocations(WarningPropertySet< WarningProperty >,Collection< Location >) defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable classContext defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function setDescription(String) defined in edu::umd::cs::findbugs::BugAnnotation
      uses variable METHOD_CALLED defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable CLOSING_NULL defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses function skipIfInsideCatchNull() defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isNullOnComplicatedPath2() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function reportNullDeref(WarningPropertySet< WarningProperty >,Location,String,int,BugAnnotation,@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
   function foundRedundantNullCheck(Location,RedundantBranch) in line 345
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function isDoomed(Location) in line 417
      17 lines of code
      1 parameters
      9 conditional paths
      uses variable MARK_DOOMED defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getReturnPathTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function getUsagesRequiringNonNullValues(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function get(Location,ValueNumber,ValueNumberDataflow) defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getDescription() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function isThrower(BasicBlock) in line 325
      protection public
      18 lines of code
      1 parameters
      5 conditional paths
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function report() in line 230
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function reportNullDeref(WarningPropertySet< WarningProperty >,Location,String,int,BugAnnotation,@CheckForNull BugAnnotation) in line 303
      21 lines of code
      6 parameters
      3 conditional paths
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable classContext defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addPropertiesForDereferenceLocations(WarningPropertySet< WarningProperty >,Collection< Location >) defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function skipIfInsideCatchNull() in line 233
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
   function uniqueLocations(Collection< Location >) in line 390
      16 lines of code
      1 parameters
      4 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function linesMentionedMultipleTimes(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function visitClassContext(ClassContext) in line 130
      protection public
      40 lines of code
      1 parameters
      8 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable CLASS defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable method defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable METHOD defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable DEBUG_NULLARG defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function NoiseNullDeref(BugReporter) in line 124
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::NoiseNullDeref
   variable bugAccumulator in line 115
   variable bugReporter in line 113
   variable CLASS in line 110
   variable classContext in line 118
   variable DEBUG in line 100
      protection public
   variable DEBUG_NULLARG in line 102
   variable MARK_DOOMED in line 106
   variable METHOD in line 108
   variable method in line 120
   variable vnaDataflow in line 122
module edu::umd::cs::findbugs::detect::NoiseNullDeref::CheckCallSitesAndReturnInstructions
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/NonNullReturnProperty.java
module edu::umd::cs::findbugs::detect::NonNullReturnProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function NonNullReturnProperty(String,PriorityAdjustment) in line 29
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable EXACT_METHOD in line 33
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/NoteAnnotationRetention.java
module edu::umd::cs::findbugs::detect::NoteAnnotationRetention
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   inherits from edu::umd::cs::findbugs::FirstPassDetector
   function report() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(JavaClass) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable runtimeRetention defined in edu::umd::cs::findbugs::detect::NoteAnnotationRetention
   function visitAfter(JavaClass) in line 63
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable runtimeRetention defined in edu::umd::cs::findbugs::detect::NoteAnnotationRetention
   function visitAnnotation(String,Map< String, ElementValue >,boolean) in line 45
      protection public
      11 lines of code
      3 parameters
      3 conditional paths
      uses variable runtimeRetention defined in edu::umd::cs::findbugs::detect::NoteAnnotationRetention
   function visitClassContext(ClassContext) in line 74
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function NoteAnnotationRetention(BugReporter) in line 41
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   variable runtimeRetention in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/NoteCheckReturnValueAnnotations.java
module edu::umd::cs::findbugs::detect::NoteCheckReturnValueAnnotations
   inherits from edu::umd::cs::findbugs::detect::BuildCheckReturnAnnotationDatabase
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 48
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 39
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function NoteCheckReturnValueAnnotations(BugReporter) in line 35
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/NoteDirectlyRelevantTypeQualifiers.java
module edu::umd::cs::findbugs::detect::NoteDirectlyRelevantTypeQualifiers
   inherits from edu::umd::cs::findbugs::visitclass::DismantleBytecode
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 135
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function sawOpcode(int) in line 88
      protection public
      36 lines of code
      1 parameters
      12 conditional paths
      uses variable FIND_EFFECTIVE_RELEVANT_QUALIFIERS defined in edu::umd::cs::findbugs::ba::jsr305::Analysis
      uses function getXMethodOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function updateApplicableAnnotations(XMethod) defined in edu::umd::cs::findbugs::detect::NoteDirectlyRelevantTypeQualifiers
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function updateApplicableAnnotations(XMethod) in line 128
      5 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 71
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function updateApplicableAnnotations(XMethod) defined in edu::umd::cs::findbugs::detect::NoteDirectlyRelevantTypeQualifiers
      uses variable qualifiers defined in edu::umd::cs::findbugs::detect::NoteDirectlyRelevantTypeQualifiers
      uses function setDirectlyRelevantTypeQualifiers(MethodDescriptor,Collection< TypeQualifierValue<?>>) defined in edu::umd::cs::findbugs::ba::jsr305::DirectlyRelevantTypeQualifiersDatabase
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitClassContext(ClassContext) in line 57
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable qualifiers defined in edu::umd::cs::findbugs::detect::NoteDirectlyRelevantTypeQualifiers
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function NoteDirectlyRelevantTypeQualifiers(BugReporter) in line 53
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   variable qualifiers in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/NoteJCIPAnnotation.java
module edu::umd::cs::findbugs::detect::NoteJCIPAnnotation
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitAnnotation(String,Map< String, ElementValue >,boolean) in line 48
      protection public
      22 lines of code
      3 parameters
      5 conditional paths
      uses variable NET_JCIP_ANNOTATIONS defined in edu::umd::cs::findbugs::detect::NoteJCIPAnnotation
      uses variable JSR305_CONCURRENT_ANNOTATIONS defined in edu::umd::cs::findbugs::detect::NoteJCIPAnnotation
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addEntryForClass(@DottedClassName String,String,ElementValue) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addEntryForClassMember(ClassMember,String,ElementValue) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function visitClassContext(ClassContext) in line 72
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function NoteJCIPAnnotation(BugReporter) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable JSR305_CONCURRENT_ANNOTATIONS in line 41
   variable NET_JCIP_ANNOTATIONS in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/NoteNonNullAnnotations.java
module edu::umd::cs::findbugs::detect::NoteNonNullAnnotations
   inherits from edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function getDatabase() in line 47
      3 lines of code
      0 parameters
      1 conditional paths
   function report() in line 61
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 52
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function NoteNonNullAnnotations(BugReporter) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getDatabase() defined in edu::umd::cs::findbugs::detect::NoteNonNullAnnotations
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/NoteNonnullReturnValues.java
module edu::umd::cs::findbugs::detect::NoteNonnullReturnValues
   inherits from edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   inherits from edu::umd::cs::findbugs::InterproceduralFirstPassDetector
   function report() in line 46
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable returnsNonNull defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
      uses variable returnsReference defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
   function NoteNonnullReturnValues(BugReporter) in line 37
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/NoteSuppressedWarnings.java
module edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function isSuppressWarnings(String) in line 98
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function report() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function suppressWarning(int,String) in line 122
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable suppressionMatcher defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
      uses function addSuppressor(ClassWarningSuppressor) defined in edu::umd::cs::findbugs::SuppressionMatcher
   function suppressWarning(String) in line 130
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable suppressionMatcher defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
      uses function addPackageSuppressor(PackageWarningSuppressor) defined in edu::umd::cs::findbugs::SuppressionMatcher
      uses function getPackageName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addSuppressor(ClassWarningSuppressor) defined in edu::umd::cs::findbugs::SuppressionMatcher
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitAnnotation(String,Map< String, ElementValue >,boolean) in line 84
      protection public
      13 lines of code
      3 parameters
      4 conditional paths
      uses function isSuppressWarnings(String) defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
      uses function suppressWarning(int,String) defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
   function visitClassContext(ClassContext) in line 59
      protection public
      23 lines of code
      1 parameters
      6 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable packageName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable packages defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
   function visitParameterAnnotation(int,String,Map< String, ElementValue >,boolean) in line 104
      protection public
      17 lines of code
      4 parameters
      5 conditional paths
      uses function isSuppressWarnings(String) defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function suppressWarning(int,String) defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
   function NoteSuppressedWarnings(BugReporter) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable suppressionMatcher defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   variable packages in line 50
   variable suppressionMatcher in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/NoteUnconditionalParamDerefs.java
module edu::umd::cs::findbugs::detect::NoteUnconditionalParamDerefs
   inherits from edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   inherits from edu::umd::cs::findbugs::InterproceduralFirstPassDetector
   function report() in line 48
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function reportBug(BugInstance) in line 52
      4 lines of code
      1 parameters
      1 conditional paths
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function NoteUnconditionalParamDerefs(BugReporter) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/NullArgumentWarningProperty.java
module edu::umd::cs::findbugs::detect::NullArgumentWarningProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function NullArgumentWarningProperty(String,PriorityAdjustment) in line 32
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable ACTUAL_PARAMETER_GUARANTEED_NULL in line 45
      protection public
   variable ALL_DANGEROUS_TARGETS in line 42
      protection public
   variable ARG_DEFINITELY_NULL in line 36
      protection public
   variable MONOMORPHIC_CALL_SITE in line 39
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/NullDerefProperty.java
module edu::umd::cs::findbugs::detect::NullDerefProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function NullDerefProperty(String,PriorityAdjustment) in line 32
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable ALWAYS_ON_EXCEPTION_PATH in line 45
      protection public
   variable CHECKED_VALUE in line 37
      protection public
   variable CLOSING_NULL in line 59
      protection public
   variable CREATED_DEAD_CODE in line 53
      protection public
   variable DEREFS_ARE_CLONED in line 56
      protection public
   variable DEREFS_ARE_INLINED_FINALLY_BLOCKS in line 61
      protection public
   variable DEREFS_IN_CATCH_BLOCKS in line 64
      protection public
   variable LONG_RANGE_NULL_SOURCE in line 41
      protection public
   variable WOULD_HAVE_BEEN_A_KABOOM in line 49
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/NumberConstructor.java
module edu::umd::cs::findbugs::detect::NumberConstructor
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function getShouldCall() in line 120
      23 lines of code
      0 parameters
      5 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable boxClasses defined in edu::umd::cs::findbugs::detect::NumberConstructor
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function matchArguments(String,String) defined in edu::umd::cs::findbugs::detect::NumberConstructor
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function handle(@SlashedClassName String,boolean,String) in line 88
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable boxClasses defined in edu::umd::cs::findbugs::detect::NumberConstructor
   function matchArguments(String,String) in line 114
      5 lines of code
      2 parameters
      1 conditional paths
   function sawOpcode(int) in line 144
      protection public
      36 lines of code
      1 parameters
      7 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getShouldCall() defined in edu::umd::cs::findbugs::detect::NumberConstructor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::NumberConstructor
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function visit(Code) in line 109
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::NumberConstructor
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function visitClassContext(ClassContext) in line 101
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function NumberConstructor(BugReporter) in line 76
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses function handle(@SlashedClassName String,boolean,String) defined in edu::umd::cs::findbugs::detect::NumberConstructor
   variable boxClasses in line 66
   variable bugAccumulator in line 68
module edu::umd::cs::findbugs::detect::NumberConstructor::Pair
   function Pair(XMethod,XMethod) in line 60
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/OptionalReturnNull.java
module edu::umd::cs::findbugs::detect::OptionalReturnNull
   inherits from edu::umd::cs::findbugs::detect::TypeReturnNull
   function accumulateBug() in line 42
      4 lines of code
      0 parameters
      1 conditional paths
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function matchesReturnSignature(String) in line 36
      4 lines of code
      1 parameters
      1 conditional paths
   function OptionalReturnNull(BugReporter) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/OverridingEqualsNotSymmetrical.java
module edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::FirstPassDetector
   function callToInvoke(int) in line 325
      12 lines of code
      1 parameters
      3 conditional paths
      uses function invokesMethodWithEqualLikeName() defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable EQUALS_SIGNATURE defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
   function checkForComparingClasses() in line 345
      55 lines of code
      0 parameters
      11 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getReturnValueOf() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function getDirectSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable SUBCLASS_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function count(EqualsKindSummary.KindOfEquals) in line 197
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable count defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
   function invokesMethodWithEqualLikeName() in line 338
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable EQUALS_NAME defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
   function report() in line 402
      protection public
      103 lines of code
      0 parameters
      24 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function get(ClassAnnotation) defined in edu::umd::cs::findbugs::ba::EqualsKindSummary
      uses function getXFields() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable count defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
      uses variable INSTANCE_OF_EQUALS defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable METHOD_OVERRIDDEN defined in edu::umd::cs::findbugs::MethodAnnotation
   function sawOpcode(int) in line 207
      protection public
      117 lines of code
      1 parameters
      27 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPrevOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function checkForComparingClasses() defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
      uses function callToInvoke(int) defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getReturnValueOf() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable EQUALS_NAME defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
      uses variable EQUALS_SIGNATURE defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
      uses function getClassDescriptorOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Code) in line 80
      protection public
      85 lines of code
      1 parameters
      22 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable EQUALS_NAME defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable EQUALS_SIGNATURE defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
      uses variable UNKNOWN defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable ALWAYS_TRUE defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable ALWAYS_FALSE defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable RETURNS_SUPER defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable INVOKES_SUPER defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable INSTANCE_OF_SUPERCLASS_EQUALS defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable ABSTRACT_INSTANCE_OF defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable INSTANCE_OF_EQUALS defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable ABSTRACT_GETCLASS_GOOD_EQUALS defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable GETCLASS_GOOD_EQUALS defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable GETCLASS_BAD_EQUALS defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable DELEGATE_EQUALS defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable TRIVIAL_EQUALS defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable CHECKED_CAST_EQUALS defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable COMPARE_EQUALS defined in edu::umd::cs::findbugs::ba::EqualsKindSummary::KindOfEquals
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function put(ClassAnnotation,EqualsKindSummary.KindOfEquals) defined in edu::umd::cs::findbugs::ba::EqualsKindSummary
      uses variable count defined in edu::umd::cs::findbugs::detect::OverridingEqualsNotSymmetrical
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function OverridingEqualsNotSymmetrical(BugReporter) in line 73
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   variable count in line 194
   variable EQUALS_NAME in line 53
   variable EQUALS_SIGNATURE in line 55
   variable STATIC_EQUALS_SIGNATURE in line 57
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/PreferZeroLengthArrays.java
module edu::umd::cs::findbugs::detect::PreferZeroLengthArrays
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 68
      protection public
      20 lines of code
      1 parameters
      5 conditional paths
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 45
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::PreferZeroLengthArrays
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function PreferZeroLengthArrays(BugReporter) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::PreferZeroLengthArrays
   variable bugReporter in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/PublicSemaphores.java
module edu::umd::cs::findbugs::detect::PublicSemaphores
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 77
      protection public
      28 lines of code
      1 parameters
      7 conditional paths
      uses variable alreadyReported defined in edu::umd::cs::findbugs::detect::PublicSemaphores
      uses variable state defined in edu::umd::cs::findbugs::detect::PublicSemaphores
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::PublicSemaphores
      uses variable SEEN_ALOAD_0 defined in edu::umd::cs::findbugs::detect::PublicSemaphores
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::PublicSemaphores
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 66
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable alreadyReported defined in edu::umd::cs::findbugs::detect::PublicSemaphores
      uses variable state defined in edu::umd::cs::findbugs::detect::PublicSemaphores
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::PublicSemaphores
   function visitClassContext(ClassContext) in line 55
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable alreadyReported defined in edu::umd::cs::findbugs::detect::PublicSemaphores
   function PublicSemaphores(BugReporter) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::PublicSemaphores
   variable alreadyReported in line 48
   variable bugReporter in line 44
   variable SEEN_ALOAD_0 in line 42
   variable SEEN_NOTHING in line 40
   variable state in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/QuestionableBooleanAssignment.java
module edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 60
      protection public
      55 lines of code
      1 parameters
      14 conditional paths
      uses function getBranchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable state defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable SEEN_GOTO defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable SEEN_ICONST_0_OR_1 defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable SEEN_DUP defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable SEEN_ISTORE defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable bug defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable SEEN_IF defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitCode(Code) in line 53
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable bug defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
   function QuestionableBooleanAssignment(BugReporter) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
   variable bug in line 46
   variable bugReporter in line 42
   variable SEEN_DUP in line 34
      protection public
   variable SEEN_GOTO in line 38
      protection public
   variable SEEN_ICONST_0_OR_1 in line 32
      protection public
   variable SEEN_IF in line 40
      protection public
   variable SEEN_ISTORE in line 36
      protection public
   variable SEEN_NOTHING in line 30
      protection public
   variable state in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/ReadOfInstanceFieldInMethodInvokedByConstructorInSuperclass.java
module edu::umd::cs::findbugs::detect::ReadOfInstanceFieldInMethodInvokedByConstructorInSuperclass
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function getConstructorThatCallsSuperConstructor(XMethod) in line 167
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSuperCall(XMethod) defined in edu::umd::cs::findbugs::ba::FieldSummary
   function sawOpcode(int) in line 69
      protection public
      96 lines of code
      1 parameters
      20 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getCalledFromSuperConstructor(ClassDescriptor,XMethod) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isWrittenInConstructor(XField) defined in edu::umd::cs::findbugs::detect::UnreadFieldsData
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isWrittenDuringInitialization(XField) defined in edu::umd::cs::findbugs::detect::UnreadFieldsData
      uses function isWrittenOutsideOfInitialization(XField) defined in edu::umd::cs::findbugs::detect::UnreadFieldsData
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getNextOpcode() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getConstructorThatCallsSuperConstructor(XMethod) defined in edu::umd::cs::findbugs::detect::ReadOfInstanceFieldInMethodInvokedByConstructorInSuperclass
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_SUPERCLASS_CONSTRUCTOR defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable ROLE_CALLED_FROM_SUPERCLASS_AT defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable METHOD_CONSTRUCTOR defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable ROLE_FIELD_SET_TOO_LATE_AT defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function visit(Code) in line 58
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function ReadOfInstanceFieldInMethodInvokedByConstructorInSuperclass(BugReporter) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/ReadReturnShouldBeChecked.java
module edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function isBufferedInputStream() in line 75
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable lastCallClass defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
   function isImageIOInputStream() in line 86
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable lastCallClass defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
   function isInputStream() in line 64
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable lastCallClass defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
   function sawOpcode(int) in line 98
      protection public
      65 lines of code
      1 parameters
      9 conditional paths
      uses variable lastCallClass defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isInputStream() defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
      uses variable locationOfCall defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isImageIOInputStream() defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
      uses function isBufferedInputStream() defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 56
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function ReadReturnShouldBeChecked(BugReporter) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable lastCallClass in line 49
   variable locationOfCall in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/RedundantInterfaces.java
module edu::umd::cs::findbugs::detect::RedundantInterfaces
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function report() in line 84
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 43
      protection public
      39 lines of code
      1 parameters
      9 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::RedundantInterfaces
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function RedundantInterfaces(BugReporter) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::RedundantInterfaces
   variable bugReporter in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/RefComparisonWarningProperty.java
module edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function RefComparisonWarningProperty(String,PriorityAdjustment) in line 30
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable COMPARE_IN_TEST_CASE in line 43
      protection public
   variable COMPARE_STATIC_STRINGS in line 47
      protection public
   variable DYNAMIC_AND_UNKNOWN in line 51
      protection public
   variable EMPTY_AND_UNKNOWN in line 64
      protection public
   variable PRIVATE_METHOD in line 39
      protection public
   variable SAW_CALL_TO_EQUALS in line 35
      protection public
   variable SAW_INTERN in line 68
      protection public
   variable STATIC_AND_UNKNOWN in line 61
      protection public
   variable STRING_PARAMETER in line 57
      protection public
   variable STRING_PARAMETER_IN_PUBLIC_METHOD in line 54
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/ReflectiveClasses.java
module edu::umd::cs::findbugs::detect::ReflectiveClasses
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function process(@SlashedClassName String) in line 69
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function sawClass() in line 48
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getOpcode() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function process(@SlashedClassName String) defined in edu::umd::cs::findbugs::detect::ReflectiveClasses
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function sawOpcode(int) in line 56
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function process(@SlashedClassName String) defined in edu::umd::cs::findbugs::detect::ReflectiveClasses
   function sawString(String) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ReflectiveClasses(BugReporter) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/RepeatedConditionals.java
module edu::umd::cs::findbugs::detect::RepeatedConditionals
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function reset() in line 149
      6 lines of code
      0 parameters
      1 conditional paths
   function sawBranchTo(int) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function sawOpcode(int) in line 72
      protection public
      76 lines of code
      1 parameters
      16 conditional paths
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isReturn(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function reset() defined in edu::umd::cs::findbugs::detect::RepeatedConditionals
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getCodeByte(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function isJumpTarget(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visit(Code) in line 44
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reset() defined in edu::umd::cs::findbugs::detect::RepeatedConditionals
   function RepeatedConditionals(BugReporter) in line 38
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function reset() defined in edu::umd::cs::findbugs::detect::RepeatedConditionals
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/ResolveAllReferences.java
module edu::umd::cs::findbugs::detect::ResolveAllReferences
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function addAllDefinitions(JavaClass) in line 81
      protection public
      17 lines of code
      1 parameters
      5 conditional paths
      uses function getMemberName(JavaClass,String,int,int) defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
   function compute() in line 46
      24 lines of code
      0 parameters
      4 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function addAllDefinitions(JavaClass) defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function find(JavaClass,String,String) in line 113
      18 lines of code
      3 parameters
      6 conditional paths
      uses function getMemberName(JavaClass,String,int,int) defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
   function getClassName(JavaClass,int) in line 99
      4 lines of code
      2 parameters
      1 conditional paths
   function getMemberName(JavaClass,String,int,int) in line 104
      4 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getMemberName(String,String,String) in line 109
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function report() in line 78
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visit(JavaClass) in line 133
      protection public
      47 lines of code
      1 parameters
      10 conditional paths
      uses function compute() defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function find(JavaClass,String,String) defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
      uses function getMemberName(JavaClass,String,int,int) defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitClassContext(ClassContext) in line 72
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function ResolveAllReferences(BugReporter) in line 39
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
   variable bugReporter in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/RuntimeExceptionCapture.java
module edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 219
      protection public
      48 lines of code
      1 parameters
      13 conditional paths
      uses variable seen defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionCaught
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable throwList defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getThrownExceptions() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(CodeException) in line 173
      protection public
      44 lines of code
      1 parameters
      7 conditional paths
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function ExceptionCaught(String,int,int,int) defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionCaught
      uses variable catchList defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getLiveLocalStoreDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getBlocksContainingInstructionWithOffset(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses variable dead defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionCaught
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function reportSkippedAnalysis(MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitAfter(Code) in line 122
      protection public
      49 lines of code
      1 parameters
      15 conditional paths
      uses variable catchList defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses variable throwList defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
   function visitJavaClass(JavaClass) in line 116
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function RuntimeExceptionCapture(BugReporter) in line 110
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
   variable accumulator in line 79
   variable bugReporter in line 73
   variable catchList in line 75
   variable DEBUG in line 71
   variable throwList in line 77
module edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionCaught
   function ExceptionCaught(String,int,int,int) in line 90
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable exceptionClass defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionCaught
      uses variable startOffset defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionCaught
   variable dead in line 88
      protection public
   variable exceptionClass in line 82
      protection public
   variable seen in line 86
      protection public
   variable startOffset in line 84
      protection public
module edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionThrown
   function ExceptionThrown(@DottedClassName String,int) in line 104
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable exceptionClass defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionCaught
   variable exceptionClass in line 100
      protection public
   variable offset in line 102
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/SerializableIdiom.java
module edu::umd::cs::findbugs::detect::SerializableIdiom
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function computePriority(double,double) in line 744
      12 lines of code
      2 parameters
      3 conditional paths
      uses function strongEvidenceForIntendedSerialization() defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function flush() in line 140
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable sawReadExternal defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawWriteExternal defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawWriteObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable fieldWarningList defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function sawOpcode(int) in line 538
      protection public
      67 lines of code
      1 parameters
      15 conditional paths
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isNull() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable transientFieldsSetToDefaultValueInConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable transientFieldsUpdates defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable transientFieldsSetInConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable fieldsThatMightBeAProblem defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getJavaClass() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function computePriority(double,double) defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable fieldWarningList defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function strongEvidenceForIntendedSerialization() in line 313
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable sawReadObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadResolve defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawWriteObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(JavaClass) in line 158
      protection public
      154 lines of code
      1 parameters
      33 conditional paths
      uses variable isEnum defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable directlyImplementsExternalizable defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable fieldsThatMightBeAProblem defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable transientFieldsUpdates defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable transientFieldsSetInConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable transientFieldsSetToDefaultValueInConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable hasPublicVoidConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable superClassHasVoidConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable superClassHasReadObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable superClassImplementsSerializable defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getXMethods() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable sawReadExternal defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawWriteExternal defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadResolve defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawWriteObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
   function visit(Method) in line 423
      protection public
      96 lines of code
      1 parameters
      29 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable hasPublicVoidConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadExternal defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sawWriteExternal defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadResolve defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable SUBCLASS_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable sawReadObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawWriteObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
   function visit(Code) in line 531
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function visit(Field) in line 607
      protection public
      136 lines of code
      1 parameters
      33 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSummary(XField) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function getXField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable testingEnabled defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable transientFieldsUpdates defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getFieldName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldsThatMightBeAProblem defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function computePriority(double,double) defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function strongEvidenceForIntendedSerialization() defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldWarningList defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitAfter(JavaClass) in line 324
      protection public
      97 lines of code
      1 parameters
      23 conditional paths
      uses variable isEnum defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable hasPublicVoidConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable superClassHasVoidConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable superClassImplementsSerializable defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadResolve defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable superClassHasReadObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable transientFieldsUpdates defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable transientFieldsSetInConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable transientFieldsSetToDefaultValueInConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable directlyImplementsExternalizable defined in edu::umd::cs::findbugs::detect::SerializableIdiom
   function visitClassContext(ClassContext) in line 135
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function flush() defined in edu::umd::cs::findbugs::detect::SerializableIdiom
   function SerializableIdiom(BugReporter) in line 129
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable testingEnabled defined in edu::umd::cs::findbugs::detect::SerializableIdiom
   variable bugReporter in line 88
   variable DEBUG in line 63
   variable directlyImplementsExternalizable in line 120
   variable fieldsThatMightBeAProblem in line 94
   variable fieldWarningList in line 92
   variable hasPublicVoidConstructor in line 116
   variable isEnum in line 155
   variable sawReadExternal in line 102
   variable sawReadObject in line 106
   variable sawReadResolve in line 108
   variable sawWriteExternal in line 104
   variable sawWriteObject in line 110
   variable superClassHasReadObject in line 114
   variable superClassHasVoidConstructor in line 118
   variable superClassImplementsSerializable in line 112
   variable testingEnabled in line 122
   variable transientFieldsSetInConstructor in line 98
   variable transientFieldsSetToDefaultValueInConstructor in line 100
   variable transientFieldsUpdates in line 96
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/StartInConstructor.java
module edu::umd::cs::findbugs::detect::StartInConstructor
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 64
      protection public
      25 lines of code
      1 parameters
      7 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDirectSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable SUBCLASS_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::StartInConstructor
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::StartInConstructor
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function shouldVisit(JavaClass) in line 50
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 56
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::StartInConstructor
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function StartInConstructor(BugReporter) in line 44
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::StartInConstructor
   variable bugAccumulator in line 42
   variable bugReporter in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/StaticCalendarDetector.java
module edu::umd::cs::findbugs::detect::StaticCalendarDetector
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function isLocked() in line 352
      17 lines of code
      0 parameters
      5 conditional paths
      uses variable currentMethod defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentLockDataFlow defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentCFG defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function getLocationsContainingInstructionWithOffset(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getNumLockedObjects() defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable reporter defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function report() in line 371
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable pendingBugs defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable reporter defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function sawOpcode(int) in line 253
      protection public
      98 lines of code
      1 parameters
      20 conditional paths
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable pendingBugs defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function isLocked() defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable reporter defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable calendarType defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable dateFormatType defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable PROP_SKIP_SYNCHRONIZED_CHECK defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function amVisitingMainMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function visit(JavaClass) in line 126
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable currentClass defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentMethod defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentCFG defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentLockDataFlow defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable sawDateClass defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
   function visit(ConstantPool) in line 136
      protection public
      24 lines of code
      1 parameters
      6 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sawDateClass defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable calendarType defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable dateFormatType defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable reporter defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(Field) in line 167
      protection public
      42 lines of code
      1 parameters
      10 conditional paths
      uses variable superclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable calendarType defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable dateFormatType defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getXClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function usesConcurrency() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable pendingBugs defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function getXField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentClass defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
   function visit(Code) in line 234
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable sawDateClass defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function visitMethod(Method) in line 218
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable sawDateClass defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentMethod defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentLockDataFlow defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getLockDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable currentCFG defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable reporter defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function StaticCalendarDetector(BugReporter) in line 113
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   variable bugAccumulator in line 80
   variable calendarType in line 88
   variable currentCFG in line 100
   variable currentClass in line 83
   variable currentLockDataFlow in line 103
   variable currentMethod in line 97
   variable dateFormatType in line 94
   variable DEBUG in line 65
   variable pendingBugs in line 105
   variable PROP_SKIP_SYNCHRONIZED_CHECK in line 75
   variable reporter in line 78
   variable sawDateClass in line 120
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/StaticFieldLoadStreamFactory.java
module edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
   inherits from edu::umd::cs::findbugs::detect::StreamFactory
   function createStream(Location,ObjectType,ConstantPoolGen,RepositoryLookupFailureCallback) in line 64
      protection public
      17 lines of code
      4 parameters
      3 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable className defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
      uses variable fieldName defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
      uses variable fieldSig defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
      uses variable streamBaseClass defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
      uses function setIsOpenOnCreation(boolean) defined in edu::umd::cs::findbugs::detect::Stream
   function StaticFieldLoadStreamFactory(String,String,String,String) in line 56
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable streamBaseClass defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
      uses variable className defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
      uses variable fieldName defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
      uses variable fieldSig defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
   variable className in line 38
      protection public
   variable fieldName in line 40
      protection public
   variable fieldSig in line 42
      protection public
   variable streamBaseClass in line 36
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/Stream.java
module edu::umd::cs::findbugs::detect::Stream
   inherits from edu::umd::cs::findbugs::ResourceCreationPoint
   inherits from Comparable
   function compareTo(Stream) in line 304
      protection public
      28 lines of code
      1 parameters
      5 conditional paths
      uses function getLocation() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses function compareTo(Location) defined in edu::umd::cs::findbugs::ba::Location
      uses variable streamBase defined in edu::umd::cs::findbugs::detect::Stream
      uses function getResourceClass() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses variable instanceParam defined in edu::umd::cs::findbugs::detect::Stream
   function equals(Object) in line 283
      protection public
      19 lines of code
      1 parameters
      6 conditional paths
      uses function Stream(Location,String,String) defined in edu::umd::cs::findbugs::detect::Stream
      uses function getLocation() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::Location
      uses variable streamBase defined in edu::umd::cs::findbugs::detect::Stream
      uses function getResourceClass() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses variable instanceParam defined in edu::umd::cs::findbugs::detect::Stream
   function getBugType() in line 171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugType defined in edu::umd::cs::findbugs::detect::Stream
   function getInstanceParam() in line 167
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceParam defined in edu::umd::cs::findbugs::detect::Stream
   function getInstanceValue(ResourceValueFrame,InvokeInstruction,ConstantPoolGen) in line 265
      7 lines of code
      3 parameters
      2 conditional paths
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
   function getOpenLocation() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable openLocation defined in edu::umd::cs::findbugs::detect::Stream
   function getStreamBase() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable streamBase defined in edu::umd::cs::findbugs::detect::Stream
   function hashCode() in line 278
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLocation() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::Location
      uses variable streamBase defined in edu::umd::cs::findbugs::detect::Stream
      uses function getResourceClass() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses variable instanceParam defined in edu::umd::cs::findbugs::detect::Stream
   function ignoreImplicitExceptions() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isClosed() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isOpenOnCreation() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isStreamClose(BasicBlock,InstructionHandle,ConstantPoolGen,ResourceValueFrame,RepositoryLookupFailureCallback) in line 220
      protection public
      40 lines of code
      5 parameters
      8 conditional paths
      uses function mightCloseStream(BasicBlock,InstructionHandle,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::Stream
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstanceValue(ResourceValueFrame,InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::Stream
      uses function isInstance() defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses function relatedType(String) defined in edu::umd::cs::findbugs::detect::Stream
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function isStreamOpen(BasicBlock,InstructionHandle,ConstantPoolGen,ResourceValueFrame) in line 183
      protection public
      16 lines of code
      4 parameters
      3 conditional paths
      uses function isOpenOnCreation() defined in edu::umd::cs::findbugs::detect::Stream
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstanceValue(ResourceValueFrame,InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::Stream
      uses function isInstance() defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses function matchMethod(InvokeInstruction,ConstantPoolGen,String,String) defined in edu::umd::cs::findbugs::detect::Stream
      uses function getResourceClass() defined in edu::umd::cs::findbugs::ResourceCreationPoint
   function isUninteresting() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function matchMethod(InvokeInstruction,ConstantPoolGen,String,String) in line 273
      3 lines of code
      4 parameters
      1 conditional paths
   function mightCloseStream(BasicBlock,InstructionHandle,ConstantPoolGen) in line 200
      protection public
      19 lines of code
      3 parameters
      2 conditional paths
   function relatedType(String) in line 261
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable streamBase defined in edu::umd::cs::findbugs::detect::Stream
   function setClosed() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isClosed() defined in edu::umd::cs::findbugs::detect::Stream
   function setIgnoreImplicitExceptions(boolean) in line 112
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function ignoreImplicitExceptions() defined in edu::umd::cs::findbugs::detect::Stream
   function setInstanceParam(int) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceParam defined in edu::umd::cs::findbugs::detect::Stream
   function setInteresting(String) in line 101
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable bugType defined in edu::umd::cs::findbugs::detect::Stream
   function setIsOpenOnCreation(boolean) in line 121
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function isOpenOnCreation() defined in edu::umd::cs::findbugs::detect::Stream
   function setOpenLocation(Location) in line 155
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable openLocation defined in edu::umd::cs::findbugs::detect::Stream
   function toString() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable streamBase defined in edu::umd::cs::findbugs::detect::Stream
      uses variable openLocation defined in edu::umd::cs::findbugs::detect::Stream
   function Stream(Location,String,String) in line 87
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses variable streamBase defined in edu::umd::cs::findbugs::detect::Stream
      uses function isUninteresting() defined in edu::umd::cs::findbugs::detect::Stream
      uses variable instanceParam defined in edu::umd::cs::findbugs::detect::Stream
   variable bugType in line 63
   variable ignoreImplicitExceptions in line 61
   variable instanceParam in line 65
   variable isClosed in line 67
   variable isOpenOnCreation in line 57
   variable isUninteresting in line 55
   variable openLocation in line 59
   variable streamBase in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/StreamEquivalenceClass.java
module edu::umd::cs::findbugs::detect::StreamEquivalenceClass
   function addAll(StreamEquivalenceClass) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable memberSet defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
   function addMember(Stream) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable memberSet defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
   function memberIterator() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable memberSet defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
   function setClosed() in line 73
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable isClosed defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
      uses variable memberSet defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
   function StreamEquivalenceClass() in line 38
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable isClosed in line 33
   variable memberSet in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/StreamEscape.java
module edu::umd::cs::findbugs::detect::StreamEscape
   inherits from Comparable
   function compareTo(StreamEscape) in line 48
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses function compareTo(Stream) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable target defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses function compareTo(Location) defined in edu::umd::cs::findbugs::ba::Location
   function equals(Object) in line 62
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function StreamEscape(Stream,Location) defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses variable source defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses function equals(Object) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable target defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::Location
   function hashCode() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses function hashCode() defined in edu::umd::cs::findbugs::detect::Stream
      uses variable target defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::Location
   function toString() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses variable target defined in edu::umd::cs::findbugs::detect::StreamEscape
   function StreamEscape(Stream,Location) in line 42
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses variable target defined in edu::umd::cs::findbugs::detect::StreamEscape
   variable source in line 30
      protection public
   variable target in line 32
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/StreamFactory.java
module edu::umd::cs::findbugs::detect::StreamFactory
   function createStream(Location,ObjectType,ConstantPoolGen,RepositoryLookupFailureCallback) in line 51
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/StreamFrameModelingVisitor.java
module edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function instanceEscapes(InvokeInstruction,int) in line 99
      35 lines of code
      2 parameters
      6 conditional paths
      uses variable cpg defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getCPG() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable location defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
      uses variable stream defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
      uses function getOpenLocation() defined in edu::umd::cs::findbugs::detect::Stream
      uses variable resourceTracker defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
      uses function addStreamEscape(Stream,Location) defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function transferInstruction(InstructionHandle,BasicBlock) in line 53
      protection public
      44 lines of code
      2 parameters
      7 conditional paths
      uses variable frame defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getFrame() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable stream defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
      uses function getLocation() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
      uses variable isOpenOnCreation defined in edu::umd::cs::findbugs::detect::Stream
      uses variable OPEN defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function setOpenLocation(Location) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable location defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
      uses variable resourceTracker defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
      uses function addStreamOpenLocation(Location,Stream) defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable CREATED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function isResourceOpen(BasicBlock,InstructionHandle,ConstantPoolGen,Stream,ResourceValueFrame) defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable cpg defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function isResourceClose(BasicBlock,InstructionHandle,ConstantPoolGen,Stream,ResourceValueFrame) defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable CLOSED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function analyzeInstruction(Instruction) defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
   function StreamFrameModelingVisitor(ConstantPoolGen,StreamResourceTracker,Stream) in line 46
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable cpg defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable resourceTracker defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
      uses variable stream defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
   variable location in line 44
   variable resourceTracker in line 40
   variable stream in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/StreamResourceTracker.java
module edu::umd::cs::findbugs::detect::StreamResourceTracker
   inherits from edu::umd::cs::findbugs::ba::ResourceTracker
   function addStreamEscape(Stream,Location) in line 118
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable streamEscapeSet defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function addStreamOpenLocation(Location,Stream) in line 208
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable streamOpenLocationMap defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable isUninteresting defined in edu::umd::cs::findbugs::detect::Stream
      uses variable uninterestingStreamEscapeSet defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function createVisitor(Stream,ConstantPoolGen) in line 292
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getStreamEquivalenceClass(Stream) in line 226
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable streamEquivalenceMap defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function ignoreExceptionEdge(Edge,Stream,ConstantPoolGen) in line 302
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function ignoreImplicitExceptions(Stream) in line 297
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreImplicitExceptions defined in edu::umd::cs::findbugs::detect::Stream
   function isParamInstance(Stream,int) in line 307
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getInstanceParam() defined in edu::umd::cs::findbugs::detect::Stream
   function isResourceClose(BasicBlock,InstructionHandle,ConstantPoolGen,Stream,ResourceValueFrame) in line 280
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses function isStreamClose(BasicBlock,InstructionHandle,ConstantPoolGen,ResourceValueFrame,RepositoryLookupFailureCallback) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function isResourceCreation(BasicBlock,InstructionHandle,ConstantPoolGen) in line 241
      protection public
      32 lines of code
      3 parameters
      6 conditional paths
      uses variable resourceCollection defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable streamFactoryList defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function isResourceOpen(BasicBlock,InstructionHandle,ConstantPoolGen,Stream,ResourceValueFrame) in line 274
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses function isStreamOpen(BasicBlock,InstructionHandle,ConstantPoolGen,ResourceValueFrame) defined in edu::umd::cs::findbugs::detect::Stream
   function isStreamOpenLocation(Location) in line 236
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable streamOpenLocationMap defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function isUninterestingStreamEscape(Stream) in line 196
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable uninterestingStreamEscapeSet defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function markTransitiveUninterestingStreamEscapes() in line 131
      protection public
      56 lines of code
      0 parameters
      12 conditional paths
      uses variable streamEscapeSet defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses function isStreamOpenLocation(Location) defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable target defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses variable resourceCollection defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses function addMember(Stream) defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
      uses variable streamEquivalenceMap defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable uninterestingStreamEscapeSet defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses function isUninterestingStreamEscape(Stream) defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable streamOpenLocationMap defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses function addAll(StreamEquivalenceClass) defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
      uses function memberIterator() defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
   function mightCloseResource(BasicBlock,InstructionHandle,ConstantPoolGen) in line 286
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function setResourceCollection(ResourceCollection< Stream >) in line 106
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable resourceCollection defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function StreamResourceTracker(StreamFactory[],RepositoryLookupFailureCallback) in line 93
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses variable streamFactoryList defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   variable lookupFailureCallback in line 55
   variable resourceCollection in line 57
   variable streamEquivalenceMap in line 81
   variable streamEscapeSet in line 73
   variable streamFactoryList in line 53
   variable streamOpenLocationMap in line 62
   variable uninterestingStreamEscapeSet in line 68
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/StringConcatenation.java
module edu::umd::cs::findbugs::detect::StringConcatenation
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function reset() in line 89
      13 lines of code
      0 parameters
      2 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable createPC defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable registerOnStack defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable stringSource defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::StringConcatenation
   function sawOpcode(int) in line 121
      protection public
      170 lines of code
      1 parameters
      40 conditional paths
      uses variable reportedThisMethod defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable state defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function printOpCode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable clobberedRegisters defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable createPC defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable registerOnStack defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable stringSource defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function reset() defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function storeIntoRegister(int,int) defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function storeIntoRegister(int,int) in line 103
      16 lines of code
      2 parameters
      6 conditional paths
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Method) in line 79
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function reset() defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable clobberedRegisters defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable reportedThisMethod defined in edu::umd::cs::findbugs::detect::StringConcatenation
   function StringConcatenation(BugReporter) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::StringConcatenation
   variable bugReporter in line 58
   variable clobberedRegisters in line 76
   variable createPC in line 66
   variable DEBUG in line 44
   variable registerOnStack in line 62
   variable reportedThisMethod in line 60
   variable state in line 68
   variable stringSource in line 64
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/SuperfluousInstanceOf.java
module edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 76
      protection public
      43 lines of code
      1 parameters
      11 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable SEEN_ALOAD defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
      uses variable varTable defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(Method) in line 60
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
      uses variable varTable defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
   function visit(Code) in line 69
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable varTable defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
   function SuperfluousInstanceOf(BugReporter) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
   variable bugReporter in line 47
   variable register in line 53
   variable SEEN_ALOAD in line 45
   variable SEEN_NOTHING in line 43
   variable state in line 51
   variable varTable in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/SuspiciousThreadInterrupted.java
module edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 65
      protection public
      64 lines of code
      1 parameters
      18 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses variable SEEN_POSSIBLE_THREAD defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses variable SEEN_UNKNOWNCONTEXT_POP defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable SEEN_CURRENTTHREAD defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses variable localsWithCurrentThreadValue defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable SEEN_POP_AFTER_CURRENTTHREAD defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 58
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable localsWithCurrentThreadValue defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses variable state defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
   function SuspiciousThreadInterrupted(BugReporter) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
   variable bugReporter in line 47
   variable localsWithCurrentThreadValue in line 49
   variable SEEN_CURRENTTHREAD in line 39
      protection public
   variable SEEN_NOTHING in line 37
      protection public
   variable SEEN_POP_AFTER_CURRENTTHREAD in line 41
      protection public
   variable SEEN_POSSIBLE_THREAD in line 45
      protection public
   variable SEEN_UNKNOWNCONTEXT_POP in line 43
      protection public
   variable state in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/SwitchFallthrough.java
module edu::umd::cs::findbugs::detect::SwitchFallthrough
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function clearAllDeadStores() in line 315
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable potentiallyDeadStores defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable potentiallyDeadStoresFromBeforeFallthrough defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable potentiallyDeadFields defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable potentiallyDeadFieldsFromBeforeFallthrough defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
   function foundSwitchNoDefault(SourceLineAnnotation) in line 121
      22 lines of code
      1 parameters
      5 conditional paths
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getStartBytecode() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function hasFallThruComment(int,int) in line 322
      43 lines of code
      2 parameters
      11 conditional paths
      uses variable LOOK_IN_SOURCE_FOR_FALLTHRU_COMMENT defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable lastPC defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable sourceFile defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function sawOpcode(int) in line 147
      protection public
      163 lines of code
      1 parameters
      42 conditional paths
      uses variable switchHdlr defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function getDefaultOffset() defined in edu::umd::cs::findbugs::SwitchHandler
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isOnSwitchOffset(DismantleBytecode) defined in edu::umd::cs::findbugs::SwitchHandler
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable reachable defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function stackSize() defined in edu::umd::cs::findbugs::SwitchHandler
      uses variable fallthroughDistance defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable potentiallyDeadStoresFromBeforeFallthrough defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable potentiallyDeadStores defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable potentiallyDeadFieldsFromBeforeFallthrough defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable potentiallyDeadFields defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function hasFallThruComment(int,int) defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable lastPC defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses variable biggestJumpTarget defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function getCurrentSwitchStatement(BytecodeScanningDetector) defined in edu::umd::cs::findbugs::SwitchHandler
      uses function foundSwitchNoDefault(SourceLineAnnotation) defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function clearAllDeadStores() defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable priority defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable deadStore defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function isRegisterLoad() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function atCatchBlock() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getXClassOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function enterSwitch(DismantleBytecode,@CheckForNull XClass) defined in edu::umd::cs::findbugs::SwitchHandler
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 93
      protection public
      27 lines of code
      1 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable reachable defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable lastPC defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable biggestJumpTarget defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable switchHdlr defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function clearAllDeadStores() defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable deadStore defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable priority defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable fallthroughDistance defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function visitClassContext(ClassContext) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function SwitchFallthrough(BugReporter) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable biggestJumpTarget in line 65
   variable bugAccumulator in line 62
   variable deadStore in line 75
   variable DEBUG in line 54
   variable fallthroughDistance in line 79
   variable lastPC in line 64
   variable LOOK_IN_SOURCE_FOR_FALLTHRU_COMMENT in line 56
   variable potentiallyDeadFields in line 69
   variable potentiallyDeadFieldsFromBeforeFallthrough in line 73
   variable potentiallyDeadStores in line 67
   variable potentiallyDeadStoresFromBeforeFallthrough in line 71
   variable priority in line 77
   variable reachable in line 60
   variable switchHdlr in line 58
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/SynchronizationOnSharedBuiltinConstant.java
module edu::umd::cs::findbugs::detect::SynchronizationOnSharedBuiltinConstant
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function accumulateBug() in line 133
      7 lines of code
      0 parameters
      2 conditional paths
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function newlyConstructedObject(OpcodeStack.Item) in line 54
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function sawOpcode(int) in line 80
      protection public
      52 lines of code
      1 parameters
      10 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function accumulateBug() defined in edu::umd::cs::findbugs::detect::SynchronizationOnSharedBuiltinConstant
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable identified defined in edu::umd::cs::findbugs::detect::SynchronizationOnSharedBuiltinConstant
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable STRING_CONSTANT_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
      uses function equals(Object) defined in edu::umd::cs::findbugs::BugInstance
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSummary(XField) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function newlyConstructedObject(OpcodeStack.Item) defined in edu::umd::cs::findbugs::detect::SynchronizationOnSharedBuiltinConstant
      uses function addType(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalField(@CheckForNull XField) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalLocalVariable(DismantleBytecode,OpcodeStack.Item) defined in edu::umd::cs::findbugs::BugInstance
   function visit(Code) in line 73
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function accumulateBug() defined in edu::umd::cs::findbugs::detect::SynchronizationOnSharedBuiltinConstant
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function SynchronizationOnSharedBuiltinConstant(BugReporter) in line 47
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   variable identified in line 62
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/SynchronizeAndNullCheckField.java
module edu::umd::cs::findbugs::detect::SynchronizeAndNullCheckField
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 59
      protection public
      52 lines of code
      1 parameters
      13 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visit(Method) in line 46
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function SynchronizeAndNullCheckField(BugReporter) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/SynchronizeOnClassLiteralNotGetClass.java
module edu::umd::cs::findbugs::detect::SynchronizeOnClassLiteralNotGetClass
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 65
      protection public
      77 lines of code
      1 parameters
      21 conditional paths
      uses variable classConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDirectSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable SUBCLASS_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function visit(Code) in line 43
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function SynchronizeOnClassLiteralNotGetClass(BugReporter) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/SynchronizingOnContentsOfFieldToProtectField.java
module edu::umd::cs::findbugs::detect::SynchronizingOnContentsOfFieldToProtectField
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 63
      protection public
      84 lines of code
      1 parameters
      21 conditional paths
      uses function getSurroundingTryBlock(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function lowerPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getPrevOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 41
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function SynchronizingOnContentsOfFieldToProtectField(BugReporter) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/TestASM.java
module edu::umd::cs::findbugs::detect::TestASM
   inherits from edu::umd::cs::findbugs::asm::ClassNodeDetector
   function visitField(int,String,String,String,Object) in line 80
      protection public
      8 lines of code
      5 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::asm::ClassNodeDetector
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function visitMethod(final int,final String,final String,final String,final String[]) in line 47
      protection public
      31 lines of code
      5 parameters
      3 conditional paths
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::asm::ClassNodeDetector
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function TestASM(BugReporter) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::asm::ClassNodeDetector
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/TestDataflowAnalysis.java
module edu::umd::cs::findbugs::detect::TestDataflowAnalysis
   inherits from edu::umd::cs::findbugs::Detector2
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function asDataflowClass(Class<?>) in line 177
      3 lines of code
      1 parameters
      1 conditional paths
   function finishPass() in line 69
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function getDetectorClassName() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initialize() in line 133
      41 lines of code
      0 parameters
      6 conditional paths
      uses variable initialized defined in edu::umd::cs::findbugs::detect::TestDataflowAnalysis
      uses variable dataflowClassName defined in edu::umd::cs::findbugs::detect::TestDataflowAnalysis
      uses function asDataflowClass(Class<?>) defined in edu::umd::cs::findbugs::detect::TestDataflowAnalysis
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function pluginIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getClassLoader() defined in edu::umd::cs::findbugs::Plugin
      uses function getErrorLogger() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable dataflowClass defined in edu::umd::cs::findbugs::detect::TestDataflowAnalysis
   function visitClass(ClassDescriptor) in line 91
      protection public
      41 lines of code
      1 parameters
      7 conditional paths
      uses variable dataflowClassName defined in edu::umd::cs::findbugs::detect::TestDataflowAnalysis
      uses variable initialized defined in edu::umd::cs::findbugs::detect::TestDataflowAnalysis
      uses function initialize() defined in edu::umd::cs::findbugs::detect::TestDataflowAnalysis
      uses variable dataflowClass defined in edu::umd::cs::findbugs::detect::TestDataflowAnalysis
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getXMethods() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable methodName defined in edu::umd::cs::findbugs::detect::TestDataflowAnalysis
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getNumIterations() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function print(PrintStream) defined in edu::umd::cs::findbugs::ba::CFGPrinter
   function TestDataflowAnalysis(BugReporter) in line 58
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable dataflowClassName defined in edu::umd::cs::findbugs::detect::TestDataflowAnalysis
      uses variable methodName defined in edu::umd::cs::findbugs::detect::TestDataflowAnalysis
   variable dataflowClass in line 54
   variable dataflowClassName in line 50
   variable initialized in line 56
   variable methodName in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/TestingGround.java
module edu::umd::cs::findbugs::detect::TestingGround
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function visit(Code) in line 39
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function TestingGround(BugReporter) in line 33
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/TestingGround.java
module edu::umd::cs::findbugs::workflow::TestingGround
   function execute() in line 46
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses function countBug(BugInstance) defined in edu::umd::cs::findbugs::ProjectPackagePrefixes
      uses function report() defined in edu::umd::cs::findbugs::ProjectPackagePrefixes
   function main(String[]) in line 70
      protection public
      74 lines of code
      1 parameters
      15 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function add(E) defined in edu::umd::cs::findbugs::util::Bag
      uses function createEmptyCollectionWithMetadata() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(OutputStream) defined in edu::umd::cs::findbugs::SortedBugCollection
   function setBugCollection(BugCollection) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function TestingGround() in line 35
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function TestingGround(BugCollection) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::TestingGround::CommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 60
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 65
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/TestingGround2.java
module edu::umd::cs::findbugs::detect::TestingGround2
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 38
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function TestingGround2(BugReporter) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/TrainFieldStoreTypes.java
module edu::umd::cs::findbugs::detect::TrainFieldStoreTypes
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::TrainingDetector
   function analyzeMethod(ClassContext,Method) in line 83
      58 lines of code
      2 parameters
      9 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isProtected() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable database defined in edu::umd::cs::findbugs::detect::TrainFieldStoreTypes
      uses function getProperty(KeyType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses function getFieldDescriptor() defined in edu::umd::cs::findbugs::ba::XField
      uses function setProperty(KeyType,ValueType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
   function report() in line 143
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::TrainFieldStoreTypes
      uses function purgeBoringEntries() defined in edu::umd::cs::findbugs::ba::type::FieldStoreTypeDatabase
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable DEFAULT_FILENAME defined in edu::umd::cs::findbugs::ba::type::FieldStoreTypeDatabase
   function visitClassContext(ClassContext) in line 66
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::TrainFieldStoreTypes
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::TrainFieldStoreTypes
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function TrainFieldStoreTypes(BugReporter) in line 60
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::TrainFieldStoreTypes
   variable bugReporter in line 56
   variable database in line 58
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/TrainLongInstantfParams.java
module edu::umd::cs::findbugs::detect::TrainLongInstantfParams
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::TrainingDetector
   function report() in line 119
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function visit(Code) in line 74
      protection public
      38 lines of code
      1 parameters
      8 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitClassContext(ClassContext) in line 126
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function TrainLongInstantfParams(BugReporter) in line 70
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::detect::TrainLongInstantfParams::LongInstantParameterDatabase
   inherits from edu::umd::cs::findbugs::ba::interproc::MethodPropertyDatabase
   function decodeProperty(String) in line 43
      9 lines of code
      1 parameters
      1 conditional paths
   function encodeProperty(ParameterProperty) in line 62
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/TrainNonNullAnnotations.java
module edu::umd::cs::findbugs::detect::TrainNonNullAnnotations
   inherits from edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::TrainingDetector
   function report() in line 63
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function TrainNonNullAnnotations(BugReporter) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/TrainUnconditionalDerefParams.java
module edu::umd::cs::findbugs::detect::TrainUnconditionalDerefParams
   inherits from edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
   inherits from edu::umd::cs::findbugs::TrainingDetector
   function report() in line 41
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable UNCONDITIONAL_DEREF_DB_FILENAME defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NONNULL_RETURN_DB_FILENAME defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function reportBug(BugInstance) in line 51
      3 lines of code
      1 parameters
      1 conditional paths
   function TrainUnconditionalDerefParams(BugReporter) in line 37
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/TypeReturnNull.java
module edu::umd::cs::findbugs::detect::TypeReturnNull
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   abstract class
   function accumulateBug() in line 88
      1 lines of code
      0 parameters
      1 conditional paths
   function isExplicitlyNullable() in line 65
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getNullnessAnnotationDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getResolvedAnnotation(final Object,boolean) defined in edu::umd::cs::findbugs::ba::INullnessAnnotationDatabase
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   function matchesReturnSignature(String) in line 83
      1 lines of code
      1 parameters
      1 conditional paths
   function sawOpcode(int) in line 74
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getPrevOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function accumulateBug() defined in edu::umd::cs::findbugs::detect::TypeReturnNull
      uses function matchesReturnSignature(String) defined in edu::umd::cs::findbugs::detect::TypeReturnNull
   function visit(Code) in line 49
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getReturnTypeSignature() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function matchesReturnSignature(String) defined in edu::umd::cs::findbugs::detect::TypeReturnNull
      uses function isExplicitlyNullable() defined in edu::umd::cs::findbugs::detect::TypeReturnNull
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function TypeReturnNull(BugReporter) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/UncallableMethodOfAnonymousClass.java
module edu::umd::cs::findbugs::detect::UncallableMethodOfAnonymousClass
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function doVisitMethod(Method) in line 187
      protection public
      53 lines of code
      1 parameters
      11 conditional paths
      uses variable SUPERCLASS_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable superclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable IMPLEMENTED_INTERFACE_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getXMethods() defined in edu::umd::cs::findbugs::ba::XClass
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_DID_YOU_MEAN_TO_OVERRIDE defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function sawOpcode(int) in line 94
      protection public
      13 lines of code
      1 parameters
      13 conditional paths
      uses function getXMethodOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getXClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function findMatchingMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::ba::XClass
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function hasStubs() defined in edu::umd::cs::findbugs::ba::XClass
      uses function skip(Method) defined in edu::umd::cs::findbugs::detect::UncallableMethodOfAnonymousClass
   function skip(Method) in line 147
      36 lines of code
      1 parameters
      11 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getAnnotationDescriptors() defined in edu::umd::cs::findbugs::ba::XMethod
   function visit(Code) in line 242
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function visit(Method) in line 249
      protection public
      43 lines of code
      1 parameters
      9 conditional paths
      uses function skip(Method) defined in edu::umd::cs::findbugs::detect::UncallableMethodOfAnonymousClass
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isCalled(XMethod) defined in edu::umd::cs::findbugs::ba::XFactory
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitJavaClass(JavaClass) in line 59
      protection public
      16 lines of code
      1 parameters
      6 conditional paths
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function UncallableMethodOfAnonymousClass(BugReporter) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/UnnecessaryMath.java
module edu::umd::cs::findbugs::detect::UnnecessaryMath
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 124
      protection public
      34 lines of code
      1 parameters
      11 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
      uses variable constValue defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
      uses function getConstantRefOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable zeroMethods defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
      uses variable oneMethods defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
      uses variable anyMethods defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 112
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable state defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
   function UnnecessaryMath(BugReporter) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
   variable anyMethods in line 97
   variable bugReporter in line 49
   variable constValue in line 53
   variable oneMethods in line 81
   variable state in line 51
   variable zeroMethods in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/UnreadFields.java
module edu::umd::cs::findbugs::detect::UnreadFields
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function addClassFieldAndAccess(BugInstance,XField) in line 1177
      11 lines of code
      2 parameters
      3 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function classHasParameter(JavaClass) in line 236
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function existsStrongEvidenceForIntendedSerialization(ClassDescriptor) in line 178
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function existsStrongEvidenceForIntendedSerialization(ClassDescriptor) defined in edu::umd::cs::findbugs::detect::UnreadFieldsData
   function getReadFields() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReadFields() defined in edu::umd::cs::findbugs::detect::UnreadFieldsData
   function getWrittenFields() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getWrittenFields() defined in edu::umd::cs::findbugs::detect::UnreadFieldsData
   function isContainerField(XField) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isContainerField(XField) defined in edu::umd::cs::findbugs::detect::UnreadFieldsData
   function isInjectionAttribute(@DottedClassName String) in line 301
      protection public
      23 lines of code
      1 parameters
      3 conditional paths
   function isReflexive(XField) in line 773
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isReflexive(XField) defined in edu::umd::cs::findbugs::detect::UnreadFieldsData
   function isSeleniumWebElement(String) in line 282
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function isWrittenDuringInitialization(XField) in line 135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isWrittenDuringInitialization(XField) defined in edu::umd::cs::findbugs::detect::UnreadFieldsData
   function isWrittenInConstructor(XField) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isWrittenInConstructor(XField) defined in edu::umd::cs::findbugs::detect::UnreadFieldsData
   function isWrittenOutsideOfInitialization(XField) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isWrittenOutsideOfInitialization(XField) defined in edu::umd::cs::findbugs::detect::UnreadFieldsData
   function report() in line 782
      protection public
      394 lines of code
      0 parameters
      90 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function isReflectiveClass(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function add(E) defined in edu::umd::cs::findbugs::util::Bag
      uses function getCount(E) defined in edu::umd::cs::findbugs::util::Bag
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isProtected() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function addClassFieldAndAccess(BugInstance,XField) defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable thisClass defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function isPrivate() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function classHasParameter(JavaClass) defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getXFields() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getClassDescriptor(Class<?>) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable method defined in edu::umd::cs::findbugs::ProgramPoint
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getSourceLineAnnotation() defined in edu::umd::cs::findbugs::ProgramPoint
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function lowerPriorityIfDeprecated() defined in edu::umd::cs::findbugs::BugInstance
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function sawOpcode(int) in line 386
      protection public
      382 lines of code
      1 parameters
      99 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStack() defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isReferenceType() defined in edu::umd::cs::findbugs::ba::XField
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getAvailableLoad(AvailableLoad) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function isTrackValueNumbers() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function getKnownValue(ValueNumber) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isSynthetic() defined in edu::umd::cs::findbugs::classfile::analysis::AnnotatedObject
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldDescriptor() defined in edu::umd::cs::findbugs::ba::XField
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable IGNORE_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function equals(Object) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable previousOpcode defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses variable previousPreviousOpcode defined in edu::umd::cs::findbugs::detect::UnreadFields
   function strongEvidenceForIntendedSerialization(ClassDescriptor) in line 170
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function strongEvidenceForIntendedSerialization(ClassDescriptor) defined in edu::umd::cs::findbugs::detect::UnreadFieldsData
   function visit(JavaClass) in line 183
      protection public
      52 lines of code
      1 parameters
      10 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSubtypes(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(Field) in line 265
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getFieldName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isSeleniumWebElement(String) defined in edu::umd::cs::findbugs::detect::UnreadFields
   function visit(ConstantValue) in line 326
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 340
      protection public
      18 lines of code
      1 parameters
      2 conditional paths
      uses variable previousOpcode defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses variable previousPreviousOpcode defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function visit(Method) in line 360
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitAfter(JavaClass) in line 247
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
   function visitAnnotation(String,Map< String, ElementValue >,boolean) in line 288
      protection public
      12 lines of code
      3 parameters
      4 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isInjectionAttribute(@DottedClassName String) defined in edu::umd::cs::findbugs::detect::UnreadFields
   function UnreadFields(BugReporter) in line 155
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getUnreadFieldsData() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function setUnreadFields(@Nonnull UnreadFields) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   variable bugAccumulator in line 103
   variable bugReporter in line 101
   variable DEBUG in line 83
   variable previousOpcode in line 335
   variable previousPreviousOpcode in line 337
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/UnreadFieldsData.java
module edu::umd::cs::findbugs::detect::UnreadFieldsData
   function existsStrongEvidenceForIntendedSerialization(ClassDescriptor) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getReadFields() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getWrittenFields() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isContainerField(XField) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isReflexive(XField) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isWrittenDuringInitialization(XField) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isWrittenInConstructor(XField) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isWrittenOutsideOfInitialization(XField) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function strongEvidenceForIntendedSerialization(ClassDescriptor) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/URLProblems.java
module edu::umd::cs::findbugs::detect::URLProblems
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 92
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::URLProblems
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Signature) in line 55
      protection public
      16 lines of code
      1 parameters
      9 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::URLProblems
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::URLProblems
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function visitAfter(JavaClass) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::URLProblems
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function URLProblems(BugReporter) in line 44
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::URLProblems
   variable accumulator in line 42
   variable bugReporter in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/UselessSubclassMethod.java
module edu::umd::cs::findbugs::detect::UselessSubclassMethod
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function checkParm(int,int,int,int) in line 250
      15 lines of code
      4 parameters
      5 conditional paths
      uses variable curParmOffset defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable state defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function differentAttributes(Method,Method) in line 310
      20 lines of code
      2 parameters
      4 conditional paths
   function findSuperclassMethod(@DottedClassName String,Method) in line 266
      33 lines of code
      2 parameters
      11 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable superclassName defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
   function getPackage(@DottedClassName String) in line 155
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function samePackage(@DottedClassName String,@DottedClassName String) in line 162
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getPackage(@DottedClassName String) defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
   function sawOpcode(int) in line 167
      protection public
      82 lines of code
      1 parameters
      22 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable argTypes defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable curParmOffset defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable curParm defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function checkParm(int,int,int,int) defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable invokePC defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitAfter(JavaClass) in line 91
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable interfaceMethods defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
   function visitClassContext(ClassContext) in line 69
      protection public
      20 lines of code
      1 parameters
      5 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable superclassName defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable interfaceMethods defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitCode(Code) in line 111
      protection public
      43 lines of code
      1 parameters
      8 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable state defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable invokePC defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function findSuperclassMethod(@DottedClassName String,Method) defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable superclassName defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function differentAttributes(Method,Method) defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function samePackage(@DottedClassName String,@DottedClassName String) defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitMethod(Method) in line 97
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses variable interfaceMethods defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
   function UselessSubclassMethod(BugReporter) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
   variable argTypes in line 60
   variable bugReporter in line 48
   variable curParm in line 54
   variable curParmOffset in line 56
   variable interfaceMethods in line 62
   variable invokePC in line 58
   variable state in line 52
   variable superclassName in line 50
module edu::umd::cs::findbugs::detect::UselessSubclassMethod::State
   variable SEEN_INVALID in line 46
      protection public
   variable SEEN_INVOKE in line 45
      protection public
   variable SEEN_LAST_PARM in line 45
      protection public
   variable SEEN_NOTHING in line 45
      protection public
   variable SEEN_PARM in line 45
      protection public
   variable SEEN_RETURN in line 45
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/VarArgsProblems.java
module edu::umd::cs::findbugs::detect::VarArgsProblems
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 79
      protection public
      81 lines of code
      1 parameters
      19 conditional paths
      uses function getBranchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable state defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_GOTO defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_ICONST_1 defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable SEEN_ANEWARRAY defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_DUP defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_ICONST_0 defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_ALOAD defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_AASTORE defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function visitCode(Code) in line 53
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::VarArgsProblems
   function VarArgsProblems(BugReporter) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::VarArgsProblems
   variable bugReporter in line 44
   variable SEEN_AASTORE in line 70
      protection public
   variable SEEN_ALOAD in line 68
      protection public
   variable SEEN_ANEWARRAY in line 62
      protection public
   variable SEEN_DUP in line 64
      protection public
   variable SEEN_GOTO in line 72
      protection public
   variable SEEN_ICONST_0 in line 66
      protection public
   variable SEEN_ICONST_1 in line 60
      protection public
   variable SEEN_NOTHING in line 58
      protection public
   variable state in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/VolatileUsage.java
module edu::umd::cs::findbugs::detect::VolatileUsage
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function isVolatile(XField) in line 157
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
   function isVolatileArray(XField) in line 161
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isVolatile(XField) defined in edu::umd::cs::findbugs::detect::VolatileUsage
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function report() in line 142
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isVolatileArray(XField) defined in edu::umd::cs::findbugs::detect::VolatileUsage
      uses function isApplicationClass(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::VolatileUsage
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function resetIncrementState() in line 136
      4 lines of code
      0 parameters
      1 conditional paths
   function sawOpcode(int) in line 67
      protection public
      65 lines of code
      1 parameters
      16 conditional paths
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isVolatile(XField) defined in edu::umd::cs::findbugs::detect::VolatileUsage
      uses function resetIncrementState() defined in edu::umd::cs::findbugs::detect::VolatileUsage
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::VolatileUsage
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function isVolatileArray(XField) defined in edu::umd::cs::findbugs::detect::VolatileUsage
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Code) in line 61
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function resetIncrementState() defined in edu::umd::cs::findbugs::detect::VolatileUsage
   function visitClassContext(ClassContext) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function VolatileUsage(BugReporter) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::VolatileUsage
   variable bugReporter in line 41
module edu::umd::cs::findbugs::detect::VolatileUsage::IncrementState
   variable ADD in line 39
      protection public
   variable GETFIELD in line 38
      protection public
   variable LOADCONSTANT in line 38
      protection public
   variable START in line 38
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/WaitInLoop.java
module edu::umd::cs::findbugs::detect::WaitInLoop
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function isConditionAwait() in line 96
      28 lines of code
      0 parameters
      7 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function isMonitorWait() in line 125
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function sawOpcode(int) in line 71
      protection public
      24 lines of code
      1 parameters
      5 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isMonitorWait() defined in edu::umd::cs::findbugs::detect::WaitInLoop
      uses function isConditionAwait() defined in edu::umd::cs::findbugs::detect::WaitInLoop
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 52
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::WaitInLoop
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function WaitInLoop(BugReporter) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::WaitInLoop
   variable bugReporter in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/WrongMapIterator.java
module edu::umd::cs::findbugs::detect::WrongMapIterator
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function getLoadStoreRegister(int,boolean) in line 254
      35 lines of code
      2 parameters
      15 conditional paths
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function implementsMap(ClassDescriptor) in line 106
      21 lines of code
      1 parameters
      6 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
   function sawOpcode(int) in line 129
      protection public
      124 lines of code
      1 parameters
      29 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_NOTHING defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable loadedRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses function getLoadStoreRegister(int,boolean) defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_MAP_LOAD1 defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function implementsMap(ClassDescriptor) defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses function getClassDescriptorOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable mapRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_KEYSET defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable keySetRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_KEYSET_STORE defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_ITERATOR defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable NEED_KEYSET_LOAD defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable iteratorRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_ITERATOR_STORE defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_ITERATOR_LOAD defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_NEXT defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_CHECKCAST_ON_NEXT defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable keyRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_KEY_STORE defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_MAP_LOAD2 defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_KEY_LOAD defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 83
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_NOTHING defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable loadedRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable mapRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable keySetRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable iteratorRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable keyRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
   function visit(Code) in line 93
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugAccumulator defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function WrongMapIterator(BugReporter) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable bugAccumulator in line 38
   variable iteratorRegister in line 74
   variable keyRegister in line 76
   variable keySetRegister in line 72
   variable loadedRegister in line 68
   variable mapRegister in line 70
   variable NEED_KEYSET_LOAD in line 60
   variable SAW_CHECKCAST_ON_NEXT in line 56
   variable SAW_ITERATOR in line 48
   variable SAW_ITERATOR_LOAD in line 52
   variable SAW_ITERATOR_STORE in line 50
   variable SAW_KEY_LOAD in line 64
   variable SAW_KEY_STORE in line 58
   variable SAW_KEYSET in line 44
   variable SAW_KEYSET_STORE in line 46
   variable SAW_MAP_LOAD1 in line 42
   variable SAW_MAP_LOAD2 in line 62
   variable SAW_NEXT in line 54
   variable SAW_NOTHING in line 40
   variable state in line 66
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/detect/XMLFactoryBypass.java
module edu::umd::cs::findbugs::detect::XMLFactoryBypass
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function samePackageBase(String,String) in line 117
      protection public
      17 lines of code
      2 parameters
      4 conditional paths
   function sawOpcode(int) in line 70
      protection public
      46 lines of code
      1 parameters
      11 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable rejectedXMLClasses defined in edu::umd::cs::findbugs::detect::XMLFactoryBypass
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function samePackageBase(String,String) defined in edu::umd::cs::findbugs::detect::XMLFactoryBypass
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable curClass defined in edu::umd::cs::findbugs::detect::XMLFactoryBypass
      uses variable xmlInterfaces defined in edu::umd::cs::findbugs::detect::XMLFactoryBypass
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::XMLFactoryBypass
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitClassContext(ClassContext) in line 64
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable curClass defined in edu::umd::cs::findbugs::detect::XMLFactoryBypass
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function XMLFactoryBypass(BugReporter) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::XMLFactoryBypass
   variable bugReporter in line 35
   variable curClass in line 57
   variable rejectedXMLClasses in line 55
   variable xmlInterfaces in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/Detector.java
module edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::Priorities
   function report() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/Detector2.java
module edu::umd::cs::findbugs::Detector2
   inherits from edu::umd::cs::findbugs::Priorities
   function finishPass() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDetectorClassName() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function visitClass(ClassDescriptor) in line 40
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/DetectorFactory.java
module edu::umd::cs::findbugs::DetectorFactory
   function create(BugReporter) in line 378
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable detectorCreator defined in edu::umd::cs::findbugs::DetectorFactory
   function createDetector2(BugReporter) in line 392
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable detectorCreator defined in edu::umd::cs::findbugs::DetectorFactory
   function equals(Object) in line 430
      protection public
      16 lines of code
      1 parameters
      5 conditional paths
      uses function DetectorFactory(@Nonnull Plugin,@Nonnull String,Class<?>,boolean,String,String,String) defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable className defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable plugin defined in edu::umd::cs::findbugs::DetectorFactory
   function getDetailHTML() in line 357
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detailHTML defined in edu::umd::cs::findbugs::DetectorFactory
   function getFullName() in line 416
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::DetectorFactory
   function getPlugin() in line 205
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::DetectorFactory
   function getPositionSpecifiedInPluginDescriptor() in line 196
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable positionSpecifiedInPluginDescriptor defined in edu::umd::cs::findbugs::DetectorFactory
   function getPriorityAdjustment() in line 315
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable enabledButNonReporting defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::DetectorFactory
   function getReportedBugPatternCodes() in line 333
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reports defined in edu::umd::cs::findbugs::DetectorFactory
   function getReportedBugPatterns() in line 341
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable reports defined in edu::umd::cs::findbugs::DetectorFactory
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getShortName() in line 403
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::DetectorFactory
   function getSpeed() in line 326
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable speed defined in edu::umd::cs::findbugs::DetectorFactory
   function hashCode() in line 421
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable plugin defined in edu::umd::cs::findbugs::DetectorFactory
   function isDefaultEnabled() in line 292
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable defEnabled defined in edu::umd::cs::findbugs::DetectorFactory
   function isDetectorClassSubtypeOf(Class<?>) in line 218
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable detectorCreator defined in edu::umd::cs::findbugs::DetectorFactory
   function isEnabledForCurrentJRE() in line 243
      protection public
      26 lines of code
      0 parameters
      6 conditional paths
      uses variable requireJRE defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable DEBUG_JAVA_VERSION defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function isSameOrNewerThan(JavaVersion) defined in edu::umd::cs::findbugs::JavaVersion
   function isHidden() in line 285
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable hidden defined in edu::umd::cs::findbugs::DetectorFactory
   function isReportingDetector() in line 231
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isDetectorClassSubtypeOf(Class<?>) defined in edu::umd::cs::findbugs::DetectorFactory
   function setDetailHTML(String) in line 364
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detailHTML defined in edu::umd::cs::findbugs::DetectorFactory
   function setEnabledButNonReporting(boolean) in line 306
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHidden(boolean) in line 278
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable hidden defined in edu::umd::cs::findbugs::DetectorFactory
   function setPositionSpecifiedInPluginDescriptor(int) in line 186
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable positionSpecifiedInPluginDescriptor defined in edu::umd::cs::findbugs::DetectorFactory
   function setPriorityAdjustment(int) in line 302
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::DetectorFactory
   function toString() in line 175
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
   function DetectorFactory(@Nonnull Plugin,@Nonnull String,Class<?>,boolean,String,String,String) in line 160
      protection public
      13 lines of code
      7 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable className defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable speed defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable reports defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable requireJRE defined in edu::umd::cs::findbugs::DetectorFactory
   variable className in line 118
   variable constructorArgTypes in line 51
   variable DEBUG_JAVA_VERSION in line 41
   variable defEnabled in line 122
   variable detailHTML in line 130
   variable detectorCreator in line 116
   variable enabledButNonReporting in line 134
   variable hidden in line 136
   variable plugin in line 114
   variable positionSpecifiedInPluginDescriptor in line 120
   variable priorityAdjustment in line 132
   variable reports in line 126
   variable requireJRE in line 128
   variable speed in line 124
   variable SUPPORT_OLD_DETECTOR_INTERFACE in line 48
module edu::umd::cs::findbugs::DetectorFactory::ReflectionDetectorCreator
   function createDetector(BugReporter) in line 75
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function createDetector2(BugReporter) in line 88
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
   function getDetectorClass() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable detectorClass in line 54
   variable setAnalysisContext in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/DetectorFactoryChooser.java
module edu::umd::cs::findbugs::DetectorFactoryChooser
   function choose(DetectorFactory) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function enable(DetectorFactory) in line 43
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/DetectorFactoryCollection.java
module edu::umd::cs::findbugs::DetectorFactoryCollection
   inherits from edu::umd::cs::findbugs::updates::UpdateCheckCallback
   function addPluginUpdateListener(PluginUpdateListener) in line 450
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable pluginUpdateListeners defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable updates defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function pluginUpdateCheckComplete(Collection< UpdateChecker.PluginUpdate >,boolean) defined in edu::umd::cs::findbugs::updates::PluginUpdateListener
      uses variable updatesForced defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable updateChecker defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function updateChecksGloballyDisabled() defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function checkForUpdates(boolean) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function bugPatternIterator() in line 525
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugPatternMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function checkForUpdates(boolean) in line 130
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable updateChecker defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function checkForUpdates(Collection< Plugin >,final boolean) defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses variable pluginsToUpdate defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function combine(Collection< Plugin >) in line 134
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable corePlugin defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function factoryIterator() in line 243
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factoryList defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getBugCategories() in line 604
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable categoryDescriptionMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getBugCategory(String) in line 592
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable categoryDescriptionMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getBugCategoryObjects() in line 614
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable categoryDescriptionMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getBugCode(String) in line 568
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function lookupBugCode(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getBugCodes() in line 554
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCodeMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getBugPatterns() in line 532
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugPatternMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getCorePlugin() in line 220
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable corePlugin defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getCoreResource(String) in line 364
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFactories() in line 251
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factoryList defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getFactory(String) in line 263
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable factoriesByName defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getFactoryByClassName(String) in line 275
      protection public
      3 lines of code
      1 parameters
      4 conditional paths
      uses variable factoriesByDetectorClassName defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable factoryList defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable LOGGER defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getPlugin() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable factoriesByName defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getFindBugsHome() in line 350
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses function inferFindBugsHome() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getGlobalOption(String) in line 195
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getGlobalOptionSetter(String) in line 200
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getPluginById(String) in line 235
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pluginByIdMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getRegisteredClouds() in line 471
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable registeredClouds defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable LOGGER defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getId() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
   function getUpdateChecker() in line 618
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable updateChecker defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getUpdates() in line 459
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addPluginUpdateListener(PluginUpdateListener) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function pluginUpdateCheckComplete(List< UpdateChecker.PluginUpdate >,boolean) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function inferFindBugsHome() in line 314
      35 lines of code
      0 parameters
      8 conditional paths
   function instance() in line 160
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable lock defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable theInstance defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function DetectorFactoryCollection() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function jawsDebugMessage(String) in line 374
      protection public
      7 lines of code
      1 parameters
      14 conditional paths
      uses variable DEBUG_JAWS defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses variable pluginByIdMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function setGlobalOptions() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getDetectorFactories() defined in edu::umd::cs::findbugs::Plugin
      uses function getBugCategories() defined in edu::umd::cs::findbugs::Plugin
      uses function registerBugCategory(BugCategory) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getBugPatterns() defined in edu::umd::cs::findbugs::Plugin
      uses function registerBugPattern(BugPattern) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getBugCodes() defined in edu::umd::cs::findbugs::Plugin
      uses function registerBugCode(BugCode) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getCloudPlugins() defined in edu::umd::cs::findbugs::Plugin
      uses function unRegisterBugCategory(BugCategory) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function unRegisterBugPattern(BugPattern) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function unRegisterBugCode(BugCode) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function loadCorePlugin() in line 368
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getPlugin() defined in edu::umd::cs::findbugs::PluginLoader
      uses variable corePlugin defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function lookupBugCode(String) in line 580
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugCodeMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function lookupBugPattern(String) in line 543
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugPatternMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function pluginIterator() in line 208
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pluginByIdMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function plugins() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pluginByIdMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function pluginUpdateCheckComplete(List< UpdateChecker.PluginUpdate >,boolean) in line 438
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable updates defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable pluginUpdateListeners defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable LOGGER defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function registerBugCategory(BugCategory) in line 493
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getCategory() defined in edu::umd::cs::findbugs::BugCategory
      uses variable categoryDescriptionMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function registerBugCode(BugCode) in line 547
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugCodeMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugCode
   function registerBugPattern(BugPattern) in line 514
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugPatternMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getType() defined in edu::umd::cs::findbugs::BugPattern
   function resetInstance(@CheckForNull DetectorFactoryCollection) in line 150
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable lock defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable theInstance defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function instance() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function setGlobalOptions() in line 169
      25 lines of code
      0 parameters
      6 conditional paths
      uses function plugins() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
   function unRegisterBugCategory(BugCategory) in line 502
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getCategory() defined in edu::umd::cs::findbugs::BugCategory
      uses variable categoryDescriptionMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function unRegisterBugCode(BugCode) in line 550
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugCodeMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugCode
   function unRegisterBugPattern(BugPattern) in line 518
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugPatternMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getType() defined in edu::umd::cs::findbugs::BugPattern
   function DetectorFactoryCollection() in line 88
      3 lines of code
      0 parameters
      1 conditional paths
   function DetectorFactoryCollection(Plugin) in line 92
      3 lines of code
      1 parameters
      1 conditional paths
   function DetectorFactoryCollection(Collection< Plugin >) in line 96
      3 lines of code
      1 parameters
      1 conditional paths
   function DetectorFactoryCollection(boolean,boolean,@Nonnull Collection< Plugin >,@Nonnull Collection< Plugin >) in line 100
      25 lines of code
      4 parameters
      5 conditional paths
      uses function loadCorePlugin() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function setGlobalOptions() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable updateChecker defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable pluginsToUpdate defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function combine(Collection< Plugin >) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   variable bugCodeMap in line 77
   variable bugPatternMap in line 76
   variable categoryDescriptionMap in line 75
   variable corePlugin in line 70
   variable DEBUG_JAWS in line 63
   variable factoriesByDetectorClassName in line 73
   variable factoriesByName in line 72
   variable factoryList in line 71
   variable lock in line 67
   variable LOGGER in line 62
   variable pluginByIdMap in line 69
   variable pluginsToUpdate in line 84
   variable pluginUpdateListeners in line 80
   variable registeredClouds in line 74
   variable theInstance in line 66
   variable updateChecker in line 79
   variable updates in line 82
   variable updatesForced in line 83
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/DetectorToDetector2Adapter.java
module edu::umd::cs::findbugs::DetectorToDetector2Adapter
   inherits from edu::umd::cs::findbugs::Detector2
   function finishPass() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detector defined in edu::umd::cs::findbugs::DetectorToDetector2Adapter
      uses function report() defined in edu::umd::cs::findbugs::Detector
   function getDetectorClassName() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detector defined in edu::umd::cs::findbugs::DetectorToDetector2Adapter
   function visitClass(ClassDescriptor) in line 66
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getProfiler() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses variable detector defined in edu::umd::cs::findbugs::DetectorToDetector2Adapter
      uses function visitClassContext(ClassContext) defined in edu::umd::cs::findbugs::Detector
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
   function DetectorToDetector2Adapter(Detector) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detector defined in edu::umd::cs::findbugs::DetectorToDetector2Adapter
   variable detector in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/DiscoverSourceDirectories.java
module edu::umd::cs::findbugs::DiscoverSourceDirectories
   function buildClassPath(IClassPathBuilder,IClassFactory) in line 276
      21 lines of code
      2 parameters
      3 conditional paths
      uses variable progress defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function startScanningArchives(int) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses variable project defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function getFileCount() defined in edu::umd::cs::findbugs::Project
      uses function getFileList() defined in edu::umd::cs::findbugs::Project
      uses function getAuxClasspathEntryList() defined in edu::umd::cs::findbugs::Project
      uses function doneScanningArchives() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
   function execute() in line 233
      protection public
      42 lines of code
      0 parameters
      5 conditional paths
      uses variable rootSourceDirectory defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses variable progress defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function startRecursiveDirectorySearch() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses function search() defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses function doneRecursiveDirectorySearch() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses function getDirectoriesScanned() defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses function createClassPathBuilder(IErrorLogger) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses variable errorLogger defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function buildClassPath(IClassPathBuilder,IClassFactory) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function findFullyQualifiedSourceFileNames(IClassPathBuilder,IClassPath) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses variable DEBUG defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function findSourceDirectoriesForAllSourceFiles(List< String >,List< String >) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function close() defined in edu::umd::cs::findbugs::classfile::IClassPath
   function findFullyQualifiedSourceFileName(IClassPath,ClassDescriptor) in line 298
      34 lines of code
      2 parameters
      3 conditional paths
      uses function openResource() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses function parse(final ClassNameAndSuperclassInfo.Builder) defined in edu::umd::cs::findbugs::classfile::engine::ClassParserUsingASM
      uses function getPackageName() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses function getSource() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses variable errorLogger defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable progress defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function finishClass() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
   function findFullyQualifiedSourceFileNames(IClassPathBuilder,IClassPath) in line 333
      23 lines of code
      2 parameters
      3 conditional paths
      uses function getAppClassList() defined in edu::umd::cs::findbugs::classfile::IClassPathBuilder
      uses variable progress defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function startScanningClasses(int) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses function findFullyQualifiedSourceFileName(IClassPath,ClassDescriptor) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses variable errorLogger defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function doneScanningClasses() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
   function findSourceDirectoriesForAllSourceFiles(List< String >,List< String >) in line 357
      34 lines of code
      2 parameters
      7 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses variable discoveredSourceDirectoryList defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
   function getDiscoveredSourceDirectoryList() in line 222
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable discoveredSourceDirectoryList defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
   function main(String[]) in line 395
      protection public
      108 lines of code
      1 parameters
      4 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses variable errorLogger defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function toString() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable progress defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function startRecursiveDirectorySearch() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses function doneRecursiveDirectorySearch() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses function startScanningArchives(int) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses function doneScanningArchives() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses function startScanningClasses(int) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses function finishClass() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses function doneScanningClasses() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
      uses function finishArchive() defined in edu::umd::cs::findbugs::classfile::IClassPathBuilderProgress
      uses function startArchive(String) defined in edu::umd::cs::findbugs::classfile::IClassPathBuilderProgress
      uses function DiscoverSourceDirectories() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function setProject(Project) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function setRootSourceDirectory(String) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function setErrorLogger(IErrorLogger) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function setProgress(Progress) defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function execute() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
      uses function getDiscoveredSourceDirectoryList() defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
   function setErrorLogger(IErrorLogger) in line 202
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable errorLogger defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
   function setProgress(Progress) in line 212
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable progress defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
   function setProject(Project) in line 168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
   function setRootSourceDirectory(String) in line 179
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rootSourceDirectory defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
   function setScanForNestedArchives(boolean) in line 191
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable scanForNestedArchives defined in edu::umd::cs::findbugs::DiscoverSourceDirectories
   function DiscoverSourceDirectories() in line 156
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG in line 57
   variable discoveredSourceDirectoryList in line 151
   variable errorLogger in line 147
   variable progress in line 149
   variable project in line 141
   variable rootSourceDirectory in line 143
   variable scanForNestedArchives in line 145
module edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
   inherits from edu::umd::cs::findbugs::classfile::IClassPathBuilderProgress
   function doneRecursiveDirectorySearch() in line 66
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function doneScanningArchives() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function doneScanningClasses() in line 76
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function finishClass() in line 74
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function startRecursiveDirectorySearch() in line 64
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function startScanningArchives(int) in line 68
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function startScanningClasses(int) in line 72
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::DiscoverSourceDirectories::NoOpErrorLogger
   inherits from edu::umd::cs::findbugs::classfile::IErrorLogger
   function logError(String) in line 90
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function logError(String,Throwable) in line 94
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function reportMissingClass(ClassNotFoundException) in line 82
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function reportMissingClass(ClassDescriptor) in line 86
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function reportSkippedAnalysis(MethodDescriptor) in line 98
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::DiscoverSourceDirectories::NoOpProgress
   inherits from edu::umd::cs::findbugs::DiscoverSourceDirectories::Progress
   function doneRecursiveDirectorySearch() in line 132
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function doneScanningArchives() in line 108
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function doneScanningClasses() in line 120
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function finishArchive() in line 124
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function finishClass() in line 116
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function startArchive(String) in line 136
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function startRecursiveDirectorySearch() in line 128
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function startScanningArchives(int) in line 104
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function startScanningClasses(int) in line 112
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/EmacsBugReporter.java
module edu::umd::cs::findbugs::EmacsBugReporter
   inherits from edu::umd::cs::findbugs::TextUIBugReporter
   function doReportBug(BugInstance) in line 112
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable seenAlready defined in edu::umd::cs::findbugs::EmacsBugReporter
      uses function printBug(BugInstance) defined in edu::umd::cs::findbugs::EmacsBugReporter
      uses function notifyObservers(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function fileNameFor(final String,final String) in line 57
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getFullFileName() defined in edu::umd::cs::findbugs::ba::SourceFile
   function finish() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
   function getBugCollection() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function observeClass(ClassDescriptor) in line 47
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function fileNameFor(final String,final String) defined in edu::umd::cs::findbugs::EmacsBugReporter
      uses variable sourceFileNameCache defined in edu::umd::cs::findbugs::EmacsBugReporter
   function printBug(BugInstance) in line 69
      41 lines of code
      1 parameters
      7 conditional paths
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   variable seenAlready in line 42
   variable sourceFileNameCache in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ErrorCountingBugReporter.java
module edu::umd::cs::findbugs::ErrorCountingBugReporter
   inherits from edu::umd::cs::findbugs::DelegatingBugReporter
   function getBugCount() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCount defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function getErrorCount() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable errors defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function getMissingClassCount() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable missingClassSet defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function logError(String) in line 63
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable errors defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function reportMissingClass(ClassNotFoundException) in line 70
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable missingClassSet defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function ErrorCountingBugReporter(BugReporter) in line 35
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses function addObserver(BugReporterObserver) defined in edu::umd::cs::findbugs::BugReporter
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses variable bugCount defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   variable bugCount in line 29
   variable errors in line 31
   variable missingClassSet in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ExcludingHashesBugReporter.java
module edu::umd::cs::findbugs::ExcludingHashesBugReporter
   inherits from edu::umd::cs::findbugs::DelegatingBugReporter
   function addToExcludedInstanceHashes(Set< String >,String) in line 52
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
   function reportBug(@Nonnull BugInstance) in line 64
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getDelegate() defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function ExcludingHashesBugReporter(BugReporter,String) in line 42
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function addToExcludedInstanceHashes(Set< String >,String) defined in edu::umd::cs::findbugs::ExcludingHashesBugReporter
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ExitCodes.java
module edu::umd::cs::findbugs::ExitCodes
   variable BUGS_FOUND_FLAG in line 41
      protection public
   variable ERROR_FLAG in line 31
      protection public
   variable MISSING_CLASS_FLAG in line 36
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/FatalException.java
module edu::umd::cs::findbugs::FatalException
   inherits from RuntimeException
   function FatalException(String) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function FatalException(String,Throwable) in line 48
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/FieldAnnotation.java
module edu::umd::cs::findbugs::FieldAnnotation
   inherits from edu::umd::cs::findbugs::PackageMemberAnnotation
   function accept(BugAnnotationVisitor) in line 261
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitFieldAnnotation(FieldAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function compareTo(BugAnnotation) in line 327
      protection public
      18 lines of code
      1 parameters
      4 conditional paths
      uses function FieldAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
   function equals(Object) in line 317
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function FieldAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::FieldAnnotation
   function formatPackageMember(String,ClassAnnotation) in line 266
      28 lines of code
      2 parameters
      7 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getNameInClass(ClassAnnotation) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function parseNext() defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function fromBCELField(@DottedClassName String,Field) in line 159
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function FieldAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function fromBCELField(JavaClass,Field) in line 172
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function FieldAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
   function fromFieldDescriptor(FieldDescriptor) in line 183
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function FieldAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function fromReferencedField(DismantleBytecode) in line 144
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function FieldAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRefFieldIsStatic() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function fromVisitedField(PreorderVisitor) in line 130
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function FieldAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldIsStatic() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function fromXField(XField) in line 188
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function FieldAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSourceSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function getFieldName() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
   function getFieldSignature() in line 211
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
   function getNameInClass(ClassAnnotation) in line 295
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function getSourceLines() in line 347
      protection public
      19 lines of code
      0 parameters
      4 conditional paths
      uses variable sourceLines defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable sourceFileName defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function getSourceInfoMap() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getFieldLine(String,String) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
   function hashCode() in line 312
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
   function isRead(Instruction,ConstantPoolGen) in line 231
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function FieldAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
   function isStatic() in line 218
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isWrite(Instruction,ConstantPoolGen) in line 250
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function FieldAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
   function toFieldDescriptor() in line 198
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function toXField() in line 194
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::FieldAnnotation
   function writeXML(XMLOutput) in line 376
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean,boolean) in line 381
      protection public
      25 lines of code
      3 parameters
      5 conditional paths
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getFieldName() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getFieldSignature() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSourceSig defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getSourceLines() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable MESSAGE_TAG defined in edu::umd::cs::findbugs::BugAnnotation
      uses function toString() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function FieldAnnotation(@DottedClassName String,String,String,boolean) in line 89
      protection public
      10 lines of code
      4 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::FieldAnnotation
   function FieldAnnotation(@DottedClassName String,String,String,String,boolean) in line 100
      protection public
      5 lines of code
      5 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSourceSig defined in edu::umd::cs::findbugs::FieldAnnotation
   function FieldAnnotation(@DottedClassName String,String,String,int) in line 118
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
   variable ARGUMENT_ROLE in line 69
      protection public
   variable DEFAULT_ROLE in line 57
      protection public
   variable DID_YOU_MEAN_ROLE in line 59
      protection public
   variable ELEMENT_NAME in line 373
   variable fieldName in line 71
   variable fieldSig in line 73
   variable fieldSourceSig in line 75
   variable INVOKED_ON_ROLE in line 67
      protection public
   variable isStatic in line 77
   variable LOADED_FROM_ROLE in line 63
      protection public
   variable serialVersionUID in line 55
   variable STORED_ROLE in line 65
      protection public
   variable VALUE_OF_ROLE in line 61
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/FieldWarningSuppressor.java
module edu::umd::cs::findbugs::FieldWarningSuppressor
   inherits from edu::umd::cs::findbugs::ClassWarningSuppressor
   function match(BugInstance) in line 18
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
      uses function equals(Object) defined in edu::umd::cs::findbugs::FieldAnnotation
   function toString() in line 14
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FieldWarningSuppressor(String,ClassAnnotation,FieldAnnotation) in line 7
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/AndMatcher.java
module edu::umd::cs::findbugs::filter::AndMatcher
   inherits from edu::umd::cs::findbugs::filter::CompoundMatcher
   function anyMatches() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function match(BugInstance) in line 37
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
      uses function anyMatches() defined in edu::umd::cs::findbugs::filter::AndMatcher
   function toString() in line 67
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function numberChildren() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function writeXML(XMLOutput,boolean) in line 51
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses function numberChildren() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/BugMatcher.java
module edu::umd::cs::findbugs::filter::BugMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function addAttribute(XMLOutput,String,StringSetMatch) in line 99
      protection public
      6 lines of code
      3 parameters
      2 conditional paths
   function equals(Object) in line 78
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function BugMatcher(String,String,String) defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable codes defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses function equals(Object) defined in edu::umd::cs::findbugs::filter::StringSetMatch
      uses variable patterns defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable categories defined in edu::umd::cs::findbugs::filter::BugMatcher
   function hashCode() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codes defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses function hashCode() defined in edu::umd::cs::findbugs::filter::StringSetMatch
      uses variable patterns defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable categories defined in edu::umd::cs::findbugs::filter::BugMatcher
   function match(BugInstance) in line 59
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable codes defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses function match(String) defined in edu::umd::cs::findbugs::filter::StringSetMatch
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugInstance
      uses variable patterns defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses variable categories defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses variable DEBUG defined in edu::umd::cs::findbugs::filter::BugMatcher
   function toString() in line 107
      protection public
      15 lines of code
      0 parameters
      4 conditional paths
      uses variable codes defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses function isEmpty() defined in edu::umd::cs::findbugs::filter::StringSetMatch
      uses variable patterns defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable categories defined in edu::umd::cs::findbugs::filter::BugMatcher
   function writeXML(XMLOutput,boolean) in line 87
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(XMLOutput,String,StringSetMatch) defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable codes defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable patterns defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable categories defined in edu::umd::cs::findbugs::filter::BugMatcher
   function BugMatcher(String,String,String) in line 52
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable codes defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable patterns defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable categories defined in edu::umd::cs::findbugs::filter::BugMatcher
   variable categories in line 40
   variable codes in line 36
   variable DEBUG in line 34
   variable patterns in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/ClassMatcher.java
module edu::umd::cs::findbugs::filter::ClassMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 45
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable className defined in edu::umd::cs::findbugs::filter::ClassMatcher
      uses function match(String) defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable DEBUG defined in edu::umd::cs::findbugs::filter::ClassMatcher
   function toString() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::filter::ClassMatcher
      uses function getValue() defined in edu::umd::cs::findbugs::filter::NameMatch
   function writeXML(XMLOutput,boolean) in line 56
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable className defined in edu::umd::cs::findbugs::filter::ClassMatcher
      uses function getSpec() defined in edu::umd::cs::findbugs::filter::NameMatch
   function ClassMatcher(String) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::filter::ClassMatcher
   variable className in line 33
   variable DEBUG in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/ConfidenceMatcher.java
module edu::umd::cs::findbugs::filter::ConfidenceMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function equals(Object) in line 57
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function ConfidenceMatcher(String) defined in edu::umd::cs::findbugs::filter::ConfidenceMatcher
      uses variable confidence defined in edu::umd::cs::findbugs::filter::ConfidenceMatcher
   function hashCode() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable confidence defined in edu::umd::cs::findbugs::filter::ConfidenceMatcher
   function match(BugInstance) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable confidence defined in edu::umd::cs::findbugs::filter::ConfidenceMatcher
   function toString() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable confidence defined in edu::umd::cs::findbugs::filter::ConfidenceMatcher
   function writeXML(XMLOutput,boolean) in line 71
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable confidence defined in edu::umd::cs::findbugs::filter::ConfidenceMatcher
   function ConfidenceMatcher(String) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable confidence in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/DesignationMatcher.java
module edu::umd::cs::findbugs::filter::DesignationMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function addAttribute(XMLOutput,String,StringSetMatch) in line 79
      protection public
      6 lines of code
      3 parameters
      2 conditional paths
   function equals(Object) in line 61
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function DesignationMatcher(String) defined in edu::umd::cs::findbugs::filter::DesignationMatcher
      uses variable designations defined in edu::umd::cs::findbugs::filter::DesignationMatcher
      uses function equals(Object) defined in edu::umd::cs::findbugs::filter::StringSetMatch
   function hashCode() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable designations defined in edu::umd::cs::findbugs::filter::DesignationMatcher
      uses function hashCode() defined in edu::umd::cs::findbugs::filter::StringSetMatch
   function match(BugInstance) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable designations defined in edu::umd::cs::findbugs::filter::DesignationMatcher
      uses function match(String) defined in edu::umd::cs::findbugs::filter::StringSetMatch
      uses function getUserDesignationKey() defined in edu::umd::cs::findbugs::BugInstance
   function toString() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable designations defined in edu::umd::cs::findbugs::filter::DesignationMatcher
   function writeXML(XMLOutput,boolean) in line 70
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(XMLOutput,String,StringSetMatch) defined in edu::umd::cs::findbugs::filter::DesignationMatcher
      uses variable designations defined in edu::umd::cs::findbugs::filter::DesignationMatcher
   function DesignationMatcher(String) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable designations defined in edu::umd::cs::findbugs::filter::DesignationMatcher
   variable designations in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/FieldMatcher.java
module edu::umd::cs::findbugs::filter::FieldMatcher
   inherits from edu::umd::cs::findbugs::filter::MemberMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 49
      protection public
      23 lines of code
      1 parameters
      7 conditional paths
      uses variable role defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAnnotations() defined in edu::umd::cs::findbugs::BugInstance
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function match(String) defined in edu::umd::cs::findbugs::filter::NameMatch
      uses function getFieldName() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function getFieldSignature() defined in edu::umd::cs::findbugs::FieldAnnotation
   function toString() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 74
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function getSpec() defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function addOptionalAttribute(@Nonnull String,@CheckForNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
   function FieldMatcher(String) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function FieldMatcher(String,String) in line 39
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/Filter.java
module edu::umd::cs::findbugs::filter::Filter
   inherits from edu::umd::cs::findbugs::filter::OrMatcher
   function addChild(Matcher) in line 167
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function enable(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
   function clear() in line 179
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable disabled defined in edu::umd::cs::findbugs::filter::Filter
   function contains(Matcher) in line 153
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function disable(Matcher) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable disabled defined in edu::umd::cs::findbugs::filter::Filter
   function enable(Matcher) in line 115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable disabled defined in edu::umd::cs::findbugs::filter::Filter
   function equals(Object) in line 74
      protection public
      20 lines of code
      1 parameters
      7 conditional paths
      uses function Filter() defined in edu::umd::cs::findbugs::filter::Filter
      uses variable disabled defined in edu::umd::cs::findbugs::filter::Filter
   function hashCode() in line 66
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable disabled defined in edu::umd::cs::findbugs::filter::Filter
   function isEmpty() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isEnabled(Matcher) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable disabled defined in edu::umd::cs::findbugs::filter::Filter
   function main(String[]) in line 232
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function Filter() defined in edu::umd::cs::findbugs::filter::Filter
      uses function writeAsXML(@WillClose OutputStream) defined in edu::umd::cs::findbugs::filter::Filter
   function match(BugInstance) in line 185
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function isEnabled(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
   function parse(String) in line 205
      4 lines of code
      1 parameters
      1 conditional paths
   function parse(String,@WillClose InputStream) in line 219
      12 lines of code
      2 parameters
      2 conditional paths
   function parseFilter(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function Filter() defined in edu::umd::cs::findbugs::filter::Filter
   function removeChild(Matcher) in line 173
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function enable(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
   function setEnabled(Matcher,boolean) in line 99
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function enable(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses function disable(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
   function softAdd(Matcher) in line 162
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeAsXML(@WillClose OutputStream) in line 247
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function beginDocument() defined in edu::umd::cs::findbugs::xml::XMLOutput
      uses function openTag(String) defined in edu::umd::cs::findbugs::xml::XMLOutput
      uses function writeBodyAsXML(XMLOutput) defined in edu::umd::cs::findbugs::filter::Filter
      uses function closeTag(String) defined in edu::umd::cs::findbugs::xml::XMLOutput
      uses function finish() defined in edu::umd::cs::findbugs::xml::XMLOutput
   function writeBodyAsXML(XMLOutput) in line 280
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function writeXML(XMLOutput,boolean) defined in edu::umd::cs::findbugs::filter::Matcher
      uses variable disabled defined in edu::umd::cs::findbugs::filter::Filter
   function writeEnabledMatchersAsXML(@WillClose OutputStream) in line 260
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses function beginDocument() defined in edu::umd::cs::findbugs::xml::XMLOutput
      uses function openTag(String) defined in edu::umd::cs::findbugs::xml::XMLOutput
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses variable disabled defined in edu::umd::cs::findbugs::filter::Filter
      uses function writeXML(XMLOutput,boolean) defined in edu::umd::cs::findbugs::filter::Matcher
      uses function closeTag(String) defined in edu::umd::cs::findbugs::xml::XMLOutput
      uses function finish() defined in edu::umd::cs::findbugs::xml::XMLOutput
   function Filter() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Filter(String) in line 130
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function parse(String) defined in edu::umd::cs::findbugs::filter::Filter
   function Filter(InputStream) in line 145
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function parse(String) defined in edu::umd::cs::findbugs::filter::Filter
   variable DEBUG in line 53
   variable disabled in line 55
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/Filter.java
module edu::umd::cs::findbugs::workflow::Filter
   function disconnect(boolean,final FilterCommandLine,SortedBugCollection,String) in line 894
      8 lines of code
      4 parameters
      2 conditional paths
      uses function addError(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function main(String[]) in line 758
      protection public
      133 lines of code
      1 parameters
      25 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function createEmptyCollectionWithMetadata() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProject() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setWithMessages(boolean) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function computeBugHashes() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function clearBugCounts() defined in edu::umd::cs::findbugs::ProjectStats
      uses function purgeClassesThatDontMatch(Pattern) defined in edu::umd::cs::findbugs::ProjectStats
      uses function appVersionIterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getReleaseName() defined in edu::umd::cs::findbugs::AppVersion
      uses function getTimestamp() defined in edu::umd::cs::findbugs::AppVersion
      uses function getCurrentAppVersion() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::AppVersion
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getAppVersionFromSequenceNumber(long) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function trimAppVersions(long) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCloud() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getSigninState() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function canDownload() defined in edu::umd::cs::findbugs::cloud::Cloud::SigninState
      uses function getCloudName() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function waitUntilIssueDataDownloaded() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function clearAppVersions() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable hasClassStats defined in edu::umd::cs::findbugs::ProjectStats
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function findSource(SourceLineAnnotation) defined in edu::umd::cs::findbugs::workflow::SourceSearcher
      uses function recomputeFromComponents() defined in edu::umd::cs::findbugs::ProjectStats
      uses function writeXML(OutputStream) defined in edu::umd::cs::findbugs::SortedBugCollection
   function parsePriority(String) in line 744
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
module edu::umd::cs::findbugs::workflow::Filter::FilterCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function addCategoryKey(String) in line 560
      12 lines of code
      1 parameters
      1 conditional paths
   function addDesignationKey(String) in line 546
      13 lines of code
      1 parameters
      1 conditional paths
   function atMutationPoint(BugInstance) in line 720
      3 lines of code
      1 parameters
      1 conditional paths
   function bugLiveAt(BugInstance,long) in line 573
      9 lines of code
      2 parameters
      1 conditional paths
   function getAppropriateSeq(SortedMap< Long, AppVersion >,long,boolean) in line 336
      15 lines of code
      3 parameters
      1 conditional paths
   function getBugLocation(BugInstance) in line 728
      13 lines of code
      1 parameters
      1 conditional paths
   function getReady(SortedBugCollection) in line 698
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
   function getVersionNum(BugCollection,String,boolean) in line 272
      protection public
      21 lines of code
      3 parameters
      1 conditional paths
   function getVersionNum(Map< String, AppVersion >,SortedMap< Long, AppVersion >,String,boolean,long) in line 294
      protection public
      36 lines of code
      5 parameters
      1 conditional paths
   function handleOption(String,String) in line 584
      9 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 607
      83 lines of code
      2 parameters
      1 conditional paths
   function setField(String,boolean) in line 594
      11 lines of code
      2 parameters
      1 conditional paths
   variable active in line 137
      protection public
   variable activeSpecified in line 135
      protection public
   variable applySuppression in line 155
      protection public
   variable applySuppressionSpecified in line 157
      protection public
   variable dontUpdateStats in line 187
      protection public
   variable dontUpdateStatsSpecified in line 189
      protection public
   variable excludeFilter in line 201
   variable hasField in line 147
      protection public
   variable hasFieldSpecified in line 149
      protection public
   variable hashChanged in line 179
      protection public
   variable hashChangedSpecified in line 181
      protection public
   variable hasLocal in line 151
      protection public
   variable hasLocalSpecified in line 153
      protection public
   variable includeFilter in line 199
   variable introducedByChange in line 167
      protection public
   variable introducedByChangeSpecified in line 169
      protection public
   variable knownSource in line 163
      protection public
   variable knownSourceSpecified in line 165
      protection public
   variable maxAge in line 191
      protection public
   variable maxAgeSpecified in line 193
      protection public
   variable MILLISECONDS_PER_DAY in line 79
      protection public
   variable minFirstSeen in line 352
   variable newCode in line 175
      protection public
   variable newCodeSpecified in line 177
      protection public
   variable not in line 85
      protection public
   variable notAProblem in line 139
      protection public
   variable notAProblemSpecified in line 141
      protection public
   variable notSpecified in line 83
      protection public
   variable purgeHistory in line 133
      protection public
   variable purgeHistorySpecified in line 131
      protection public
   variable removedByChange in line 171
      protection public
   variable removedByChangeSpecified in line 173
      protection public
   variable removedCode in line 183
      protection public
   variable removedCodeSpecified in line 185
      protection public
   variable shouldFix in line 143
      protection public
   variable shouldFixSpecified in line 145
      protection public
   variable sloppyUnique in line 129
      protection public
   variable sloppyUniqueSpecified in line 127
      protection public
   variable withMessages in line 197
      protection public
   variable withMessagesSpecified in line 195
      protection public
   variable withSource in line 159
      protection public
   variable withSourceSpecified in line 161
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/FilterException.java
module edu::umd::cs::findbugs::filter::FilterException
   inherits from RuntimeException
   function FilterException(String) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function FilterException(String,Throwable) in line 29
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/FirstVersionMatcher.java
module edu::umd::cs::findbugs::filter::FirstVersionMatcher
   inherits from edu::umd::cs::findbugs::filter::VersionMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses function check(T,T) defined in edu::umd::cs::findbugs::filter::RelationalOp
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
   function toString() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
   function writeXML(XMLOutput,boolean) in line 54
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses function getName() defined in edu::umd::cs::findbugs::filter::RelationalOp
   function FirstVersionMatcher(String,String) in line 31
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function FirstVersionMatcher(String,RelationalOp) in line 35
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
   function FirstVersionMatcher(long,RelationalOp) in line 39
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/LastVersionMatcher.java
module edu::umd::cs::findbugs::filter::LastVersionMatcher
   inherits from edu::umd::cs::findbugs::filter::VersionMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses function check(T,T) defined in edu::umd::cs::findbugs::filter::RelationalOp
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
   function toString() in line 62
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable EQ defined in edu::umd::cs::findbugs::filter::RelationalOp
      uses variable NEQ defined in edu::umd::cs::findbugs::filter::RelationalOp
   function writeXML(XMLOutput,boolean) in line 52
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses function getName() defined in edu::umd::cs::findbugs::filter::RelationalOp
   function LastVersionMatcher(String,String) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function LastVersionMatcher(String,RelationalOp) in line 38
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
   function LastVersionMatcher(long,RelationalOp) in line 42
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
   variable DEAD_BUG_MATCHER in line 32
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/LocalMatcher.java
module edu::umd::cs::findbugs::filter::LocalMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 46
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function getPrimaryLocalVariableAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses variable name defined in edu::umd::cs::findbugs::filter::LocalMatcher
      uses function match(String) defined in edu::umd::cs::findbugs::filter::NameMatch
      uses function getName() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function toString() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::LocalMatcher
   function writeXML(XMLOutput,boolean) in line 58
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable name defined in edu::umd::cs::findbugs::filter::LocalMatcher
      uses function getSpec() defined in edu::umd::cs::findbugs::filter::NameMatch
   function LocalMatcher(String) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::LocalMatcher
   function LocalMatcher(String,String) in line 36
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::LocalMatcher
   variable name in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/Matcher.java
module edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 41
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 43
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/MemberMatcher.java
module edu::umd::cs::findbugs::filter::MemberMatcher
   function equals(Object) in line 89
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function MemberMatcher(String) defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function equals(Object) defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function hashCode() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function hashCode() defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function toString() in line 65
      protection public
      17 lines of code
      0 parameters
      4 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function isUniversal() defined in edu::umd::cs::findbugs::filter::NameMatch
      uses function getSpec() defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function MemberMatcher(String) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function MemberMatcher(String,String) in line 43
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function MemberMatcher(String,String,String) in line 47
      protection public
      16 lines of code
      3 parameters
      3 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses variable role defined in edu::umd::cs::findbugs::filter::MemberMatcher
   variable name in line 31
   variable role in line 34
   variable signature in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/MethodMatcher.java
module edu::umd::cs::findbugs::filter::MethodMatcher
   inherits from edu::umd::cs::findbugs::filter::MemberMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 49
      protection public
      24 lines of code
      1 parameters
      7 conditional paths
      uses variable role defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAnnotations() defined in edu::umd::cs::findbugs::BugInstance
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function match(String) defined in edu::umd::cs::findbugs::filter::NameMatch
      uses function getMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function getMethodSignature() defined in edu::umd::cs::findbugs::MethodAnnotation
   function toString() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 80
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function getSpec() defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function addOptionalAttribute(@Nonnull String,@CheckForNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable role defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function MethodMatcher(String) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function MethodMatcher(String,String) in line 36
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses variable role defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function MethodMatcher(String,String,String) in line 40
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function MethodMatcher(String,String,String,String) in line 44
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses variable role defined in edu::umd::cs::findbugs::filter::MemberMatcher
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/NameMatch.java
module edu::umd::cs::findbugs::filter::NameMatch
   function equals(Object) in line 73
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable spec defined in edu::umd::cs::findbugs::filter::NameMatch
   function getSpec() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable spec defined in edu::umd::cs::findbugs::filter::NameMatch
   function getValue() in line 80
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable exact defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable pattern defined in edu::umd::cs::findbugs::filter::NameMatch
   function hashCode() in line 58
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable spec defined in edu::umd::cs::findbugs::filter::NameMatch
   function isUniversal() in line 65
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable spec defined in edu::umd::cs::findbugs::filter::NameMatch
   function match(String) in line 101
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable exact defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable pattern defined in edu::umd::cs::findbugs::filter::NameMatch
   function toString() in line 112
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable exact defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable pattern defined in edu::umd::cs::findbugs::filter::NameMatch
   function NameMatch(String) in line 90
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable spec defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable pattern defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable exact defined in edu::umd::cs::findbugs::filter::NameMatch
   variable exact in line 52
   variable pattern in line 55
   variable spec in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/NotMatcher.java
module edu::umd::cs::findbugs::filter::NotMatcher
   inherits from edu::umd::cs::findbugs::filter::CompoundMatcher
   function match(BugInstance) in line 33
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
   function maxChildren() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function originalMatcher() in line 70
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function toString() in line 59
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function writeXML(XMLOutput,boolean) in line 43
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function writeXML(XMLOutput,boolean) defined in edu::umd::cs::findbugs::filter::Matcher
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/OrMatcher.java
module edu::umd::cs::findbugs::filter::OrMatcher
   inherits from edu::umd::cs::findbugs::filter::CompoundMatcher
   function match(BugInstance) in line 31
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
   function toString() in line 58
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function numberChildren() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function writeXML(XMLOutput,boolean) in line 43
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses function numberChildren() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function writeChildrenXML(XMLOutput) defined in edu::umd::cs::findbugs::filter::CompoundMatcher
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/PriorityMatcher.java
module edu::umd::cs::findbugs::filter::PriorityMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function equals(Object) in line 57
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function PriorityMatcher(String) defined in edu::umd::cs::findbugs::filter::PriorityMatcher
      uses variable priority defined in edu::umd::cs::findbugs::filter::PriorityMatcher
   function hashCode() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::filter::PriorityMatcher
   function match(BugInstance) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable priority defined in edu::umd::cs::findbugs::filter::PriorityMatcher
   function toString() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::filter::PriorityMatcher
   function writeXML(XMLOutput,boolean) in line 71
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable priority defined in edu::umd::cs::findbugs::filter::PriorityMatcher
   function PriorityMatcher(String) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable priority in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/RankMatcher.java
module edu::umd::cs::findbugs::filter::RankMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function equals(Object) in line 59
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function RankMatcher(String) defined in edu::umd::cs::findbugs::filter::RankMatcher
      uses variable rank defined in edu::umd::cs::findbugs::filter::RankMatcher
   function hashCode() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rank defined in edu::umd::cs::findbugs::filter::RankMatcher
   function match(BugInstance) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rank defined in edu::umd::cs::findbugs::filter::RankMatcher
   function toString() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rank defined in edu::umd::cs::findbugs::filter::RankMatcher
   function writeXML(XMLOutput,boolean) in line 73
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable rank defined in edu::umd::cs::findbugs::filter::RankMatcher
   function RankMatcher(String) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable rank in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/RelationalOp.java
module edu::umd::cs::findbugs::filter::RelationalOp
   abstract class
   function byName(String) in line 42
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::filter::RelationalOp
   function check(T,T) in line 33
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getName() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function values() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::filter::RelationalOp
   function RelationalOp(String) in line 58
      3 lines of code
      1 parameters
      1 conditional paths
   function RelationalOp(String,String) in line 62
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::filter::RelationalOp
   variable EQ in line 77
      protection public
   variable GEQ in line 101
      protection public
   variable GT in line 117
      protection public
   variable LEQ in line 85
      protection public
   variable LT in line 109
      protection public
   variable map in line 40
   variable NEQ in line 93
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/SignatureUtil.java
module edu::umd::cs::findbugs::filter::SignatureUtil
   function createFieldSignature(String) in line 63
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function typeToSignature(String) defined in edu::umd::cs::findbugs::filter::SignatureUtil
   function createMethodSignature(String,String) in line 30
      protection public
      32 lines of code
      2 parameters
      6 conditional paths
      uses function typeToSignature(String) defined in edu::umd::cs::findbugs::filter::SignatureUtil
   function scalarTypeToSiganture(String) in line 78
      23 lines of code
      1 parameters
      10 conditional paths
   function typeToSignature(String) in line 70
      7 lines of code
      1 parameters
      2 conditional paths
      uses function scalarTypeToSiganture(String) defined in edu::umd::cs::findbugs::filter::SignatureUtil
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/SourceMatcher.java
module edu::umd::cs::findbugs::filter::SourceMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 47
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getSourceFileName() defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses variable fileName defined in edu::umd::cs::findbugs::filter::SourceMatcher
      uses function match(String) defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable DEBUG defined in edu::umd::cs::findbugs::filter::SourceMatcher
   function toString() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fileName defined in edu::umd::cs::findbugs::filter::SourceMatcher
      uses function getValue() defined in edu::umd::cs::findbugs::filter::NameMatch
   function writeXML(XMLOutput,boolean) in line 64
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable fileName defined in edu::umd::cs::findbugs::filter::SourceMatcher
      uses function getSpec() defined in edu::umd::cs::findbugs::filter::NameMatch
   function SourceMatcher(String) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fileName defined in edu::umd::cs::findbugs::filter::SourceMatcher
   variable DEBUG in line 33
   variable fileName in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/StringSetMatch.java
module edu::umd::cs::findbugs::filter::StringSetMatch
   function equals(Object) in line 43
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable strings defined in edu::umd::cs::findbugs::filter::StringSetMatch
   function hashCode() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable strings defined in edu::umd::cs::findbugs::filter::StringSetMatch
   function isEmpty() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable strings defined in edu::umd::cs::findbugs::filter::StringSetMatch
   function match(String) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable strings defined in edu::umd::cs::findbugs::filter::StringSetMatch
   function toString() in line 80
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable strings defined in edu::umd::cs::findbugs::filter::StringSetMatch
   function StringSetMatch(String) in line 56
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable strings defined in edu::umd::cs::findbugs::filter::StringSetMatch
   variable strings in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/filter/VersionMatcher.java
module edu::umd::cs::findbugs::filter::VersionMatcher
   function equals(Object) in line 39
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function VersionMatcher(long,@Nonnull RelationalOp) defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
   function hashCode() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
   function VersionMatcher(long,@Nonnull RelationalOp) in line 47
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
   variable relOp in line 31
   variable version in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/FilterBugReporter.java
module edu::umd::cs::findbugs::FilterBugReporter
   inherits from edu::umd::cs::findbugs::DelegatingBugReporter
   function reportBug(@Nonnull BugInstance) in line 40
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FilterBugReporter
      uses variable filter defined in edu::umd::cs::findbugs::FilterBugReporter
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
      uses variable include defined in edu::umd::cs::findbugs::FilterBugReporter
      uses function getDelegate() defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function FilterBugReporter(BugReporter,Matcher,boolean) in line 33
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable filter defined in edu::umd::cs::findbugs::FilterBugReporter
      uses variable include defined in edu::umd::cs::findbugs::FilterBugReporter
   variable DEBUG in line 27
   variable filter in line 29
   variable include in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/FindBugs.java
module edu::umd::cs::findbugs::FindBugs
   abstract class
   function checkExitCodeFail(TextUICommandLine,Exception) in line 469
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable setExitCode defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable ERROR_FLAG defined in edu::umd::cs::findbugs::ExitCodes
   function configureBaselineFilter(BugReporter,String) in line 531
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function configureBugCollection(IFindBugsEngine) in line 543
      protection public
      23 lines of code
      1 parameters
      4 conditional paths
      uses function getBugReporter() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugReporter
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function getReleaseName() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function getProject() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function getProjectName() defined in edu::umd::cs::findbugs::Project
      uses function getProjectName() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function setProjectName(String) defined in edu::umd::cs::findbugs::Project
      uses function getTimestamp() defined in edu::umd::cs::findbugs::Project
      uses function validTimestamp(long) defined in edu::umd::cs::findbugs::FindBugs
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function setTimestamp(String) defined in edu::umd::cs::findbugs::ProjectStats
   function configureFilter(BugReporter,String,boolean) in line 514
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
   function configureTrainingDatabases(IFindBugsEngine) in line 213
      protection public
      25 lines of code
      1 parameters
      5 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getHome() in line 202
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable home defined in edu::umd::cs::findbugs::FindBugs
   function handleBugCategories(String) in line 308
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
   function isDetectorEnabled(IFindBugsEngine,DetectorFactory,int) in line 250
      protection public
      49 lines of code
      3 parameters
      11 conditional paths
      uses function getUserPreferences() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function isDetectorEnabled(DetectorFactory) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function isEnabledForCurrentJRE() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable INTERPROCEDURAL_ANALYSIS defined in edu::umd::cs::findbugs::FindBugsAnalysisFeatures
      uses function isDetectorClassSubtypeOf(Class<?>) defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getReportedBugPatterns() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function emitTrainingOutput() defined in edu::umd::cs::findbugs::IFindBugsEngine
   function isNoAnalysis() in line 153
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable noAnalysis defined in edu::umd::cs::findbugs::FindBugs
   function isNoMains() in line 169
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable noMains defined in edu::umd::cs::findbugs::FindBugs
   function processCommandLine(TextUICommandLine,String[],IFindBugsEngine) in line 331
      protection public
      38 lines of code
      3 parameters
      5 conditional paths
      uses function showHelp(TextUICommandLine) defined in edu::umd::cs::findbugs::FindBugs
      uses function addFile(String) defined in edu::umd::cs::findbugs::Project
   function runMain(IFindBugsEngine,TextUICommandLine) in line 393
      protection public
      71 lines of code
      2 parameters
      15 conditional paths
      uses function getUpdates() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function checkExitCodeFail(TextUICommandLine,Exception) defined in edu::umd::cs::findbugs::FindBugs
      uses function getUpdateChecker() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function updatesHaveBeenSeenBefore(Collection< UpdateChecker.PluginUpdate >) defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses variable ERROR_FLAG defined in edu::umd::cs::findbugs::ExitCodes
      uses variable MISSING_CLASS_FLAG defined in edu::umd::cs::findbugs::ExitCodes
      uses variable BUGS_FOUND_FLAG defined in edu::umd::cs::findbugs::ExitCodes
   function setHome(String) in line 195
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable home defined in edu::umd::cs::findbugs::FindBugs
   function setNoAnalysis() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable noAnalysis defined in edu::umd::cs::findbugs::FindBugs
   function setNoMains() in line 162
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable noMains defined in edu::umd::cs::findbugs::FindBugs
   function showCommandLineOptions() in line 479
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function showCommandLineOptions(TextUICommandLine) in line 489
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function printUsage(OutputStream) defined in edu::umd::cs::findbugs::config::CommandLine
   function showHelp(TextUICommandLine) in line 376
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function showSynopsis() defined in edu::umd::cs::findbugs::FindBugs
      uses function showCommandLineOptions() defined in edu::umd::cs::findbugs::FindBugs
   function showSynopsis() in line 496
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function validTimestamp(long) in line 570
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable MINIMUM_TIMESTAMP defined in edu::umd::cs::findbugs::FindBugs
   variable DEBUG in line 135
      protection public
   variable DEFAULT_EFFORT in line 90
      protection public
   variable home in line 140
   variable knownURLProtocolSet in line 184
      protection public
   variable LESS_EFFORT in line 75
      protection public
   variable LOGGER in line 173
      protection public
   variable MAX_EFFORT in line 120
      protection public
   variable MIN_EFFORT in line 60
      protection public
   variable MINIMUM_TIMESTAMP in line 568
      protection public
   variable MORE_EFFORT in line 105
      protection public
   variable noAnalysis in line 142
   variable noMains in line 157
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/FindBugs2.java
module edu::umd::cs::findbugs::FindBugs2
   inherits from edu::umd::cs::findbugs::IFindBugsEngine
   function addClassObserver(IClassObserver) in line 368
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classObserverList defined in edu::umd::cs::findbugs::FindBugs2
   function addFilter(String,boolean) in line 373
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
   function analyzeApplication() in line 948
      199 lines of code
      0 parameters
      32 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugReporter
      uses function getProfiler() defined in edu::umd::cs::findbugs::ProjectStats
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable executionPlan defined in edu::umd::cs::findbugs::FindBugs2
      uses function getNumPasses() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable referencedClassSet defined in edu::umd::cs::findbugs::FindBugs2
      uses variable appClassList defined in edu::umd::cs::findbugs::FindBugs2
      uses variable progress defined in edu::umd::cs::findbugs::FindBugs2
      uses function predictPassCount(int[]) defined in edu::umd::cs::findbugs::FindBugsProgress
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function intern(XClass) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function setReferencedClasses(int) defined in edu::umd::cs::findbugs::ProjectStats
      uses function passIterator() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable yourkitController defined in edu::umd::cs::findbugs::FindBugs2
      uses function instantiateDetector2sInPass(BugReporter) defined in edu::umd::cs::findbugs::plan::AnalysisPass
      uses variable PROGRESS defined in edu::umd::cs::findbugs::FindBugs2
      uses variable LIST_ORDER defined in edu::umd::cs::findbugs::FindBugs2
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs2
      uses function getCalledClassDescriptors() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function sortByCallGraph(Collection< ClassDescriptor >,OutEdges< ClassDescriptor >) defined in edu::umd::cs::findbugs::FindBugs2
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function updateDatabases(int) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function startAnalysis(int) defined in edu::umd::cs::findbugs::FindBugsProgress
      uses function purgeAllMethodAnalysis() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function purgeClassAnalysis(Class<?>) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable SCREEN_FIRST_PASS_CLASSES defined in edu::umd::cs::findbugs::FindBugs2
      uses variable classScreener defined in edu::umd::cs::findbugs::FindBugs2
      uses function matches(String) defined in edu::umd::cs::findbugs::IClassScreener
      uses function isTooBig(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isApplicationClass(JavaClass) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable currentClassName defined in edu::umd::cs::findbugs::FindBugs2
      uses function notifyClassObservers(ClassDescriptor) defined in edu::umd::cs::findbugs::FindBugs2
      uses function startContext(Object) defined in edu::umd::cs::findbugs::log::Profiler
      uses function setClassBeingAnalyzed(@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function logRecoverableException(ClassDescriptor,Detector2,Throwable) defined in edu::umd::cs::findbugs::FindBugs2
      uses function getErrorLogger() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function finishClass() defined in edu::umd::cs::findbugs::FindBugsProgress
      uses function endContext(Object) defined in edu::umd::cs::findbugs::log::Profiler
      uses function clearClassBeingAnalyzed() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassSize(ClassDescriptor) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function finishPerClassAnalysis() defined in edu::umd::cs::findbugs::FindBugsProgress
      uses function finish() defined in edu::umd::cs::findbugs::BugReporter
      uses function reportQueuedErrors() defined in edu::umd::cs::findbugs::BugReporter
   function buildClassPath() in line 658
      45 lines of code
      0 parameters
      9 conditional paths
      uses variable classFactory defined in edu::umd::cs::findbugs::FindBugs2
      uses function createClassPathBuilder(IErrorLogger) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses variable project defined in edu::umd::cs::findbugs::FindBugs2
      uses function getFileArray() defined in edu::umd::cs::findbugs::Project
      uses function addCodeBase(ICodeBaseLocator,boolean) defined in edu::umd::cs::findbugs::classfile::IClassPathBuilder
      uses function createFilesystemCodeBaseLocator(String) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses function getAuxClasspathEntryList() defined in edu::umd::cs::findbugs::Project
      uses function scanNestedArchives(boolean) defined in edu::umd::cs::findbugs::classfile::IClassPathBuilder
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
      uses variable scanNestedArchives defined in edu::umd::cs::findbugs::AnalysisOptions
      uses function build(IClassPath,IClassPathBuilderProgress) defined in edu::umd::cs::findbugs::classfile::IClassPathBuilder
      uses variable classPath defined in edu::umd::cs::findbugs::FindBugs2
      uses variable progress defined in edu::umd::cs::findbugs::FindBugs2
      uses variable appClassList defined in edu::umd::cs::findbugs::FindBugs2
      uses function getAppClassList() defined in edu::umd::cs::findbugs::classfile::IClassPathBuilder
      uses variable PROGRESS defined in edu::umd::cs::findbugs::FindBugs2
      uses function appCodeBaseIterator() defined in edu::umd::cs::findbugs::classfile::IClassPath
      uses function containsSourceFiles() defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses function getPathName() defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
      uses function addTimestamp(long) defined in edu::umd::cs::findbugs::Project
      uses function getLastModifiedTime() defined in edu::umd::cs::findbugs::classfile::ICodeBase
   function buildReferencedClassSet() in line 704
      128 lines of code
      0 parameters
      18 conditional paths
      uses variable PROGRESS defined in edu::umd::cs::findbugs::FindBugs2
      uses variable appClassList defined in edu::umd::cs::findbugs::FindBugs2
      uses function getAllClassDescriptors() defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses function getPackageName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::ba::XClass
      uses function getImmediateEnclosingClass() defined in edu::umd::cs::findbugs::ba::XClass
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses function purge(Collection< ClassDescriptor >) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable referencedClassSet defined in edu::umd::cs::findbugs::FindBugs2
   function clearAnalysisContext() in line 840
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function clearCaches() in line 314
      13 lines of code
      0 parameters
      2 conditional paths
      uses variable classPath defined in edu::umd::cs::findbugs::FindBugs2
      uses function close() defined in edu::umd::cs::findbugs::classfile::IClassPath
   function configureAnalysisFeatures() in line 883
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
      uses variable analysisFeatureSettingList defined in edu::umd::cs::findbugs::AnalysisOptions
      uses function configure(AnalysisContext) defined in edu::umd::cs::findbugs::config::AnalysisFeatureSetting
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable MERGE_SIMILAR_WARNINGS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses variable mergeSimilarWarnings defined in edu::umd::cs::findbugs::AnalysisOptions
   function configureFilters(UserPreferences) in line 478
      57 lines of code
      1 parameters
      17 conditional paths
      uses function getExcludeBugsFiles() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function excludeBaselineBugs(String) defined in edu::umd::cs::findbugs::FindBugs2
      uses function getBugReporter() defined in edu::umd::cs::findbugs::FindBugs2
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getIncludeFilterFiles() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function addFilter(String,boolean) defined in edu::umd::cs::findbugs::FindBugs2
      uses function getExcludeFilterFiles() defined in edu::umd::cs::findbugs::config::UserPreferences
   function createAnalysisCache() in line 587
      15 lines of code
      0 parameters
      1 conditional paths
      uses function createAnalysisCache(IClassPath,BugReporter) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses variable classPath defined in edu::umd::cs::findbugs::FindBugs2
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function registerBuiltInAnalysisEngines(IAnalysisCache) defined in edu::umd::cs::findbugs::FindBugs2
      uses function registerPluginAnalysisEngines(DetectorFactoryCollection,IAnalysisCache) defined in edu::umd::cs::findbugs::FindBugs2
      uses variable detectorFactoryCollection defined in edu::umd::cs::findbugs::FindBugs2
      uses function eagerlyPutDatabase(Class< E >,E) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function createAnalysisContext(Project,List< ClassDescriptor >,@CheckForNull String) in line 855
      protection public
      17 lines of code
      3 parameters
      2 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugs2
      uses function clearRepository() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSourceInfoMap() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function read(@WillClose InputStream) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function createClassPath() in line 549
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classPath defined in edu::umd::cs::findbugs::FindBugs2
      uses variable classFactory defined in edu::umd::cs::findbugs::FindBugs2
      uses function createClassPath() defined in edu::umd::cs::findbugs::classfile::IClassFactory
   function createExecutionPlan() in line 897
      47 lines of code
      0 parameters
      6 conditional paths
      uses variable executionPlan defined in edu::umd::cs::findbugs::FindBugs2
      uses variable rankThreshold defined in edu::umd::cs::findbugs::FindBugs2
      uses variable DEBUG defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function setEnabledButNonReporting(boolean) defined in edu::umd::cs::findbugs::DetectorFactory
      uses function setDetectorFactoryChooser(DetectorFactoryChooser) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable detectorFactoryCollection defined in edu::umd::cs::findbugs::FindBugs2
      uses function pluginIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs2
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses function addPlugin(Plugin) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function build() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function eagerlyPutDatabase(Class< E >,E) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable PROGRESS defined in edu::umd::cs::findbugs::FindBugs2
      uses function getNumPasses() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function dispose() in line 332
      protection public
      24 lines of code
      0 parameters
      5 conditional paths
      uses variable executionPlan defined in edu::umd::cs::findbugs::FindBugs2
      uses function dispose() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable appClassList defined in edu::umd::cs::findbugs::FindBugs2
      uses variable classObserverList defined in edu::umd::cs::findbugs::FindBugs2
      uses variable referencedClassSet defined in edu::umd::cs::findbugs::FindBugs2
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
      uses variable analysisFeatureSettingList defined in edu::umd::cs::findbugs::AnalysisOptions
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses variable classFactory defined in edu::umd::cs::findbugs::FindBugs2
      uses variable classPath defined in edu::umd::cs::findbugs::FindBugs2
      uses variable classScreener defined in edu::umd::cs::findbugs::FindBugs2
      uses variable detectorFactoryCollection defined in edu::umd::cs::findbugs::FindBugs2
      uses variable progress defined in edu::umd::cs::findbugs::FindBugs2
      uses variable project defined in edu::umd::cs::findbugs::FindBugs2
   function emitTrainingOutput() in line 537
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
      uses variable trainingOutputDir defined in edu::umd::cs::findbugs::AnalysisOptions
   function enableTrainingInput(String) in line 383
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable trainingInputDir defined in edu::umd::cs::findbugs::AnalysisOptions
   function enableTrainingOutput(String) in line 388
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable trainingOutputDir defined in edu::umd::cs::findbugs::AnalysisOptions
   function excludeBaselineBugs(String) in line 378
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
   function execute() in line 191
      protection public
      119 lines of code
      0 parameters
      15 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugReporter
      uses function getProfiler() defined in edu::umd::cs::findbugs::ProjectStats
      uses variable classFactory defined in edu::umd::cs::findbugs::FindBugs2
      uses function createClassPath() defined in edu::umd::cs::findbugs::FindBugs2
      uses variable progress defined in edu::umd::cs::findbugs::FindBugs2
      uses function reportNumberOfArchives(int) defined in edu::umd::cs::findbugs::FindBugsProgress
      uses variable project defined in edu::umd::cs::findbugs::FindBugs2
      uses function getFileCount() defined in edu::umd::cs::findbugs::Project
      uses function getNumAuxClasspathEntries() defined in edu::umd::cs::findbugs::Project
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function createAnalysisCache() defined in edu::umd::cs::findbugs::FindBugs2
      uses function createAnalysisContext(Project,List< ClassDescriptor >,@CheckForNull String) defined in edu::umd::cs::findbugs::FindBugs2
      uses variable appClassList defined in edu::umd::cs::findbugs::FindBugs2
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
      uses variable sourceInfoFileName defined in edu::umd::cs::findbugs::AnalysisOptions
      uses function buildClassPath() defined in edu::umd::cs::findbugs::FindBugs2
      uses function buildReferencedClassSet() defined in edu::umd::cs::findbugs::FindBugs2
      uses function setAppClassList(List< ClassDescriptor >) defined in edu::umd::cs::findbugs::FindBugs2
      uses variable relaxedReportingMode defined in edu::umd::cs::findbugs::AnalysisOptions
      uses variable abridgedMessages defined in edu::umd::cs::findbugs::AnalysisOptions
      uses function configureAnalysisFeatures() defined in edu::umd::cs::findbugs::FindBugs2
      uses function createExecutionPlan() defined in edu::umd::cs::findbugs::FindBugs2
      uses variable detectorFactoryCollection defined in edu::umd::cs::findbugs::FindBugs2
      uses function plugins() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable classScreener defined in edu::umd::cs::findbugs::FindBugs2
      uses function vacuous() defined in edu::umd::cs::findbugs::IClassScreener
      uses function matches(String) defined in edu::umd::cs::findbugs::IClassScreener
      uses function reportBug(@Nonnull BugInstance) defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses variable executionPlan defined in edu::umd::cs::findbugs::FindBugs2
      uses function isActive(@DottedClassName String) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable classPath defined in edu::umd::cs::findbugs::FindBugs2
      uses function getApplicationCodebaseEntries() defined in edu::umd::cs::findbugs::classfile::IClassPath
      uses variable noClassOk defined in edu::umd::cs::findbugs::AnalysisOptions
      uses function analyzeApplication() defined in edu::umd::cs::findbugs::FindBugs2
      uses function getFileList() defined in edu::umd::cs::findbugs::Project
      uses function getAuxClasspathEntryList() defined in edu::umd::cs::findbugs::Project
      uses function clearCaches() defined in edu::umd::cs::findbugs::FindBugs2
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function report() defined in edu::umd::cs::findbugs::log::Profiler
      uses function reportQueuedErrors() defined in edu::umd::cs::findbugs::BugReporter
   function finishSettings() in line 1226
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
      uses variable applySuppression defined in edu::umd::cs::findbugs::AnalysisOptions
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function getProject() defined in edu::umd::cs::findbugs::FindBugs2
   function getBugCount() in line 393
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable errorCountingBugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function getBugCount() defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function getBugReporter() in line 358
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
   function getCurrentClass() in line 398
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentClassName defined in edu::umd::cs::findbugs::FindBugs2
   function getErrorCount() in line 403
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable errorCountingBugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function getErrorCount() defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function getMissingClassCount() in line 408
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable errorCountingBugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function getMissingClassCount() defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function getProject() in line 363
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugs2
   function getProjectName() in line 418
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
   function getReleaseName() in line 413
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
   function getTrainingInputDir() in line 554
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
      uses variable trainingInputDir defined in edu::umd::cs::findbugs::AnalysisOptions
   function getTrainingOutputDir() in line 559
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
      uses variable trainingOutputDir defined in edu::umd::cs::findbugs::AnalysisOptions
   function getUserPreferences() in line 542
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
   function logRecoverableException(ClassDescriptor,Detector2,Throwable) in line 1171
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getDetectorClassName() defined in edu::umd::cs::findbugs::Detector2
   function main(String[]) in line 1177
      protection public
      26 lines of code
      1 parameters
      3 conditional paths
      uses function FindBugs2() defined in edu::umd::cs::findbugs::FindBugs2
      uses function justPrintConfiguration() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function justPrintVersion() defined in edu::umd::cs::findbugs::TextUICommandLine
   function notifyClassObservers(ClassDescriptor) in line 1154
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable classObserverList defined in edu::umd::cs::findbugs::FindBugs2
   function registerBuiltInAnalysisEngines(IAnalysisCache) in line 608
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function registerAnalysisEngines(IAnalysisCache) defined in edu::umd::cs::findbugs::classfile::engine::EngineRegistrar
      uses function registerAnalysisEngines(IAnalysisCache) defined in edu::umd::cs::findbugs::classfile::engine::asm::EngineRegistrar
      uses function registerAnalysisEngines(IAnalysisCache) defined in edu::umd::cs::findbugs::classfile::engine::bcel::EngineRegistrar
   function registerPluginAnalysisEngines(DetectorFactoryCollection,IAnalysisCache) in line 624
      protection public
      24 lines of code
      2 parameters
      4 conditional paths
      uses variable detectorFactoryCollection defined in edu::umd::cs::findbugs::FindBugs2
      uses function pluginIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getEngineRegistrarClass() defined in edu::umd::cs::findbugs::Plugin
      uses function registerAnalysisEngines(IAnalysisCache) defined in edu::umd::cs::findbugs::classfile::IAnalysisEngineRegistrar
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
   function setAbridgedMessages(boolean) in line 1206
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
      uses variable abridgedMessages defined in edu::umd::cs::findbugs::AnalysisOptions
   function setAnalysisFeatureSettings(AnalysisFeatureSetting[]) in line 428
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable analysisFeatureSettingList defined in edu::umd::cs::findbugs::AnalysisOptions
   function setAppClassList(List< ClassDescriptor >) in line 873
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function setAppClassList(List< ClassDescriptor >) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable appClassList defined in edu::umd::cs::findbugs::FindBugs2
   function setApplySuppression(boolean) in line 1216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable applySuppression defined in edu::umd::cs::findbugs::AnalysisOptions
   function setBugReporter(BugReporter) in line 433
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function addClassObserver(IClassObserver) defined in edu::umd::cs::findbugs::FindBugs2
   function setBugReporterDecorators(Set< String >,Set< String >) in line 1239
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function setClassScreener(IClassScreener) in line 440
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classScreener defined in edu::umd::cs::findbugs::FindBugs2
   function setDetectorFactoryCollection(DetectorFactoryCollection) in line 178
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detectorFactoryCollection defined in edu::umd::cs::findbugs::FindBugs2
   function setMergeSimilarWarnings(boolean) in line 1211
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mergeSimilarWarnings defined in edu::umd::cs::findbugs::AnalysisOptions
   function setNoClassOk(boolean) in line 574
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable noClassOk defined in edu::umd::cs::findbugs::AnalysisOptions
   function setProgressCallback(FindBugsProgress) in line 445
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setProject(Project) in line 450
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugs2
   function setProjectName(String) in line 423
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
   function setRankThreshold(int) in line 1221
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rankThreshold defined in edu::umd::cs::findbugs::FindBugs2
   function setRelaxedReportingMode(boolean) in line 455
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable relaxedReportingMode defined in edu::umd::cs::findbugs::AnalysisOptions
   function setReleaseName(String) in line 460
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setScanNestedArchives(boolean) in line 569
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable scanNestedArchives defined in edu::umd::cs::findbugs::AnalysisOptions
   function setSourceInfoFile(String) in line 465
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceInfoFileName defined in edu::umd::cs::findbugs::AnalysisOptions
   function setUserPreferences(UserPreferences) in line 470
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function configureFilters(UserPreferences) defined in edu::umd::cs::findbugs::FindBugs2
   function sortByCallGraph(Collection< ClassDescriptor >,OutEdges< ClassDescriptor >) in line 833
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function useTrainingInput() in line 564
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisOptions defined in edu::umd::cs::findbugs::FindBugs2
      uses variable trainingInputDir defined in edu::umd::cs::findbugs::AnalysisOptions
   function FindBugs2() in line 134
      protection public
      35 lines of code
      0 parameters
      3 conditional paths
      uses variable analysisFeatureSettingList defined in edu::umd::cs::findbugs::AnalysisOptions
      uses variable DEFAULT_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable PROP_FINDBUGS_HOST_APP defined in edu::umd::cs::findbugs::FindBugs2
      uses variable PROP_FINDBUGS_HOST_APP_VERSION defined in edu::umd::cs::findbugs::FindBugs2
      uses variable scanNestedArchives defined in edu::umd::cs::findbugs::AnalysisOptions
      uses variable rankThreshold defined in edu::umd::cs::findbugs::FindBugs2
      uses variable VISIBLE_RANK_MAX defined in edu::umd::cs::findbugs::BugRanker
   variable analysisOptions in line 129
   variable appClassList in line 113
   variable bugReporter in line 103
   variable classFactory in line 109
   variable classObserverList in line 101
   variable classPath in line 111
   variable classScreener in line 127
   variable currentClassName in line 123
   variable DEBUG in line 90
      protection public
   variable detectorFactoryCollection in line 117
   variable errorCountingBugReporter in line 105
   variable executionPlan in line 119
   variable LIST_ORDER in line 86
   variable PROGRESS in line 92
      protection public
   variable progress in line 125
   variable project in line 107
   variable PROP_FINDBUGS_HOST_APP in line 96
      protection public
   variable PROP_FINDBUGS_HOST_APP_VERSION in line 97
      protection public
   variable rankThreshold in line 99
   variable referencedClassSet in line 115
   variable SCREEN_FIRST_PASS_CLASSES in line 94
   variable VERBOSE in line 88
   variable yourkitController in line 121
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/FindBugsAnalysisFeatures.java
module edu::umd::cs::findbugs::FindBugsAnalysisFeatures
   abstract class
   function isRelaxedMode() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable RELAXED_REPORTING_MODE defined in edu::umd::cs::findbugs::FindBugsAnalysisFeatures
   function setRelaxedMode(boolean) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable RELAXED_REPORTING_MODE defined in edu::umd::cs::findbugs::FindBugsAnalysisFeatures
   variable INTERPROCEDURAL_ANALYSIS in line 49
      protection public
   variable INTERPROCEDURAL_ANALYSIS_OF_REFERENCED_CLASSES in line 52
      protection public
   variable RELAXED_REPORTING_MODE in line 43
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/FindBugsCommandLine.java
module edu::umd::cs::findbugs::FindBugsCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   abstract class
   function getProject() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
   function getSettingList() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable settingList defined in edu::umd::cs::findbugs::FindBugsCommandLine
   function handleOption(String,String) in line 105
      28 lines of code
      2 parameters
      11 conditional paths
      uses variable settingList defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses variable MIN_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable LESS_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable DEFAULT_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable MORE_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable MAX_EFFORT defined in edu::umd::cs::findbugs::FindBugs
   function handleOptionWithArgument(String,String) in line 135
      26 lines of code
      2 parameters
      7 conditional paths
      uses function getProject() defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function getConfiguration() defined in edu::umd::cs::findbugs::Project
      uses function getCustomPlugins() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function loadProject(String) defined in edu::umd::cs::findbugs::FindBugsCommandLine
   function isProjectLoadedFromFile() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable projectLoadedFromFile defined in edu::umd::cs::findbugs::FindBugsCommandLine
   function loadProject(String) in line 169
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function setConfiguration(@Nonnull UserPreferences) defined in edu::umd::cs::findbugs::Project
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function getConfiguration() defined in edu::umd::cs::findbugs::Project
      uses variable projectLoadedFromFile defined in edu::umd::cs::findbugs::FindBugsCommandLine
   function FindBugsCommandLine() in line 57
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function startOptionGroup(String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function addOption(String,String,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function addSwitchWithOptionalExtraPart(String,String,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function addSwitch(String,String) defined in edu::umd::cs::findbugs::config::CommandLine
   function FindBugsCommandLine(boolean) in line 77
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses function addOption(String,String,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function addSwitch(String,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function makeOptionUnlisted(String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function addSwitchWithOptionalExtraPart(String,String,String) defined in edu::umd::cs::findbugs::config::CommandLine
   variable project in line 47
   variable projectLoadedFromFile in line 52
   variable settingList in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/FindBugsDisplayFeatures.java
module edu::umd::cs::findbugs::FindBugsDisplayFeatures
   function isAbridgedMessages() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable abridgedMessages defined in edu::umd::cs::findbugs::FindBugsDisplayFeatures
   function setAbridgedMessages(boolean) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable abridgedMessages defined in edu::umd::cs::findbugs::FindBugsDisplayFeatures
   variable abridgedMessages in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/FindBugsMain.java
module edu::umd::cs::findbugs::FindBugsMain
   inherits from Comparable
   function compareTo(FindBugsMain) in line 66
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::FindBugsMain
      uses variable cmd defined in edu::umd::cs::findbugs::FindBugsMain
   function equals(Object) in line 76
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function FindBugsMain(Class<?>,String,String,String,boolean) defined in edu::umd::cs::findbugs::FindBugsMain
      uses variable kind defined in edu::umd::cs::findbugs::FindBugsMain
      uses variable cmd defined in edu::umd::cs::findbugs::FindBugsMain
   function hashCode() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::FindBugsMain
      uses variable cmd defined in edu::umd::cs::findbugs::FindBugsMain
   function invoke(String[]) in line 58
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function FindBugsMain(Class<?>,String,String,String,boolean) in line 33
      protection public
      9 lines of code
      5 parameters
      1 conditional paths
      uses variable cmd defined in edu::umd::cs::findbugs::FindBugsMain
      uses variable description defined in edu::umd::cs::findbugs::FindBugsMain
      uses variable kind defined in edu::umd::cs::findbugs::FindBugsMain
   variable cmd in line 49
      protection public
   variable description in line 51
      protection public
   variable kind in line 54
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/FindBugsMessageFormat.java
module edu::umd::cs::findbugs::FindBugsMessageFormat
   function format(BugAnnotation[],ClassAnnotation) in line 56
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function format(BugAnnotation[],ClassAnnotation,boolean) in line 70
      protection public
      71 lines of code
      3 parameters
      11 conditional paths
      uses variable pattern defined in edu::umd::cs::findbugs::FindBugsMessageFormat
      uses function format(String,ClassAnnotation) defined in edu::umd::cs::findbugs::BugAnnotation
      uses variable ASSERTIONS_ENABLED defined in edu::umd::cs::findbugs::SystemProperties
   function FindBugsMessageFormat(String) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pattern defined in edu::umd::cs::findbugs::FindBugsMessageFormat
   variable pattern in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/FindBugsProgress.java
module edu::umd::cs::findbugs::FindBugsProgress
   inherits from edu::umd::cs::findbugs::classfile::IClassPathBuilderProgress
   function finishArchive() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function finishClass() in line 74
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function finishPerClassAnalysis() in line 80
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function predictPassCount(int[]) in line 60
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reportNumberOfArchives(int) in line 39
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function startAnalysis(int) in line 69
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function startArchive(String) in line 46
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/FirstPassDetector.java
module edu::umd::cs::findbugs::FirstPassDetector
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/Footprint.java
module edu::umd::cs::findbugs::Footprint
   function getClockTime() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable clockTime defined in edu::umd::cs::findbugs::Footprint
   function getCollectionTime() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable collectionTime defined in edu::umd::cs::findbugs::Footprint
   function getCpuTime() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cpuTime defined in edu::umd::cs::findbugs::Footprint
   function getPeakMemory() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable peakMem defined in edu::umd::cs::findbugs::Footprint
   function main(String[]) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function Footprint() defined in edu::umd::cs::findbugs::Footprint
   function pullData() in line 76
      38 lines of code
      0 parameters
      4 conditional paths
      uses variable cpuTime defined in edu::umd::cs::findbugs::Footprint
      uses function getProcessCpuTime() defined in edu::umd::cs::findbugs::Footprint::OperatingSystemBeanWrapper
      uses variable NOCLASSDEF_ERROR defined in edu::umd::cs::findbugs::Footprint
      uses variable CLASSCAST_ERROR defined in edu::umd::cs::findbugs::Footprint
      uses variable ERROR_ERROR defined in edu::umd::cs::findbugs::Footprint
      uses variable RUNTIME_EXCEPTION defined in edu::umd::cs::findbugs::Footprint
      uses variable clockTime defined in edu::umd::cs::findbugs::Footprint
      uses variable peakMem defined in edu::umd::cs::findbugs::Footprint
      uses function getPeakUsage() defined in edu::umd::cs::findbugs::Footprint::MemoryBeanWrapper
      uses variable collectionTime defined in edu::umd::cs::findbugs::Footprint
      uses function getCollectionTime() defined in edu::umd::cs::findbugs::Footprint::CollectionBeanWrapper
   function toString() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cpuTime defined in edu::umd::cs::findbugs::Footprint
      uses variable clockTime defined in edu::umd::cs::findbugs::Footprint
      uses variable peakMem defined in edu::umd::cs::findbugs::Footprint
   function Footprint() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function pullData() defined in edu::umd::cs::findbugs::Footprint
   function Footprint(Footprint) in line 62
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function pullData() defined in edu::umd::cs::findbugs::Footprint
      uses variable cpuTime defined in edu::umd::cs::findbugs::Footprint
      uses variable clockTime defined in edu::umd::cs::findbugs::Footprint
      uses variable collectionTime defined in edu::umd::cs::findbugs::Footprint
   variable CLASSCAST_ERROR in line 43
   variable clockTime in line 51
   variable collectionTime in line 55
   variable cpuTime in line 49
   variable ERROR_ERROR in line 45
   variable NOCLASSDEF_ERROR in line 41
   variable peakMem in line 53
   variable RUNTIME_EXCEPTION in line 47
module edu::umd::cs::findbugs::Footprint::MemoryBeanWrapper
   function getPeakUsage() in line 155
      protection public
      22 lines of code
      0 parameters
      4 conditional paths
module edu::umd::cs::findbugs::Footprint::OperatingSystemBeanWrapper
   function getProcessCpuTime() in line 196
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::Footprint::CollectionBeanWrapper
   function getCollectionTime() in line 209
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/FuzzyBugComparator.java
module edu::umd::cs::findbugs::FuzzyBugComparator
   inherits from edu::umd::cs::findbugs::WarningComparator
   function compare(BugInstance,BugInstance) in line 141
      protection public
      70 lines of code
      2 parameters
      13 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses variable bugCollectionMap defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function FilteringBugAnnotationIterator(Iterator< BugAnnotation >) defined in edu::umd::cs::findbugs::FuzzyBugComparator::FilteringBugAnnotationIterator
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function compareClasses(BugCollection,BugCollection,ClassAnnotation,ClassAnnotation) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function compareMethods(BugCollection,BugCollection,MethodAnnotation,MethodAnnotation) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function compareSourceLines(BugCollection,BugCollection,SourceLineAnnotation,SourceLineAnnotation) defined in edu::umd::cs::findbugs::FuzzyBugComparator
   function compareClasses(BugCollection,BugCollection,ClassAnnotation,ClassAnnotation) in line 234
      protection public
      8 lines of code
      4 parameters
      2 conditional paths
      uses function compareNullElements(Object,Object) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function compareClassesByName(BugCollection,BugCollection,String,String) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function compareClassesByName(BugCollection,BugCollection,String,String) in line 245
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
      uses function rewriteClassName(String) defined in edu::umd::cs::findbugs::FuzzyBugComparator
   function compareMethods(BugCollection,BugCollection,MethodAnnotation,MethodAnnotation) in line 267
      protection public
      11 lines of code
      4 parameters
      2 conditional paths
      uses function compareNullElements(Object,Object) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function compareTo(BugAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
   function compareNullElements(Object,Object) in line 224
      9 lines of code
      2 parameters
      3 conditional paths
   function compareSourceLines(BugCollection,BugCollection,SourceLineAnnotation,SourceLineAnnotation) in line 298
      protection public
      14 lines of code
      4 parameters
      3 conditional paths
      uses function compareNullElements(Object,Object) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function compareClassesByName(BugCollection,BugCollection,String,String) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function ignore(BugAnnotation) in line 352
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable significantDescriptionSet defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function getDescription() defined in edu::umd::cs::findbugs::BugAnnotation
   function registerBugCollection(BugCollection) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function rewriteClassName(String) in line 258
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function rewriteClassName(String) defined in edu::umd::cs::findbugs::model::ClassNameRewriter
   function setClassNameRewriter(ClassNameRewriter) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::FuzzyBugComparator
   function FuzzyBugComparator() in line 115
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FuzzyBugComparator
   variable bugCollectionMap in line 105
   variable classNameRewriter in line 107
   variable DEBUG in line 46
   variable significantDescriptionSet in line 315
module edu::umd::cs::findbugs::FuzzyBugComparator::FilteringBugAnnotationIterator
   inherits from java::util::Iterator
   function findNext() in line 66
      11 lines of code
      0 parameters
      4 conditional paths
      uses function next() defined in edu::umd::cs::findbugs::FuzzyBugComparator::FilteringBugAnnotationIterator
      uses function ignore(BugAnnotation) defined in edu::umd::cs::findbugs::FuzzyBugComparator
   function hasNext() in line 79
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::FuzzyBugComparator::FilteringBugAnnotationIterator
      uses function next() defined in edu::umd::cs::findbugs::FuzzyBugComparator::FilteringBugAnnotationIterator
   function next() in line 85
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::FuzzyBugComparator::FilteringBugAnnotationIterator
   function remove() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FilteringBugAnnotationIterator(Iterator< BugAnnotation >) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/GlobalOptions.java
module edu::umd::cs::findbugs::GlobalOptions
   function getGlobalOption(String) in line 7
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getGlobalOptionSetter(String) in line 10
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/graph/AbstractDepthFirstSearch.java
module edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch
   inherits from edu::umd::cs::findbugs::graph::DFSEdgeTypes
   abstract class
   function classifyUnknownEdges() in line 364
      23 lines of code
      0 parameters
      1 conditional paths
   function containsCycle() in line 201
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function getColor(VertexType) in line 399
      3 lines of code
      1 parameters
      1 conditional paths
   function getDFSEdgeType(EdgeType) in line 220
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDiscoveryTime(VertexType) in line 230
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFinishTime(VertexType) in line 241
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFinishTimeList() in line 251
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNextSearchTreeRoot() in line 137
      10 lines of code
      0 parameters
      1 conditional paths
   function getSource(EdgeType) in line 128
      1 lines of code
      1 parameters
      1 conditional paths
   function getTarget(EdgeType) in line 123
      1 lines of code
      1 parameters
      1 conditional paths
   function outgoingEdgeIterator(GraphType,VertexType) in line 118
      1 lines of code
      2 parameters
      1 conditional paths
   function search() in line 187
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function setColor(VertexType,int) in line 388
      3 lines of code
      2 parameters
      1 conditional paths
   function setDFSEdgeType(EdgeType,int) in line 424
      3 lines of code
      2 parameters
      1 conditional paths
   function setDiscoveryTime(VertexType,int) in line 416
      3 lines of code
      2 parameters
      1 conditional paths
   function setFinishTime(VertexType,int) in line 420
      3 lines of code
      2 parameters
      1 conditional paths
   function setSearchTreeCallback(SearchTreeCallback< VertexType >) in line 178
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setVertexChooser(VertexChooser< VertexType >) in line 168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function topologicalSortIterator() in line 259
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function unvisitedVertices() in line 148
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function visitAll() in line 293
      34 lines of code
      0 parameters
      1 conditional paths
   function visitMe(VertexType) in line 412
      3 lines of code
      1 parameters
      1 conditional paths
   function visitSuccessor(ArrayList< Visit >,EdgeType) in line 328
      34 lines of code
      2 parameters
      1 conditional paths
   function AbstractDepthFirstSearch(GraphType) in line 95
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
   variable BLACK in line 85
   variable colorList in line 55
   variable DEBUG in line 51
      protection public
   variable dfsEdgeTypeList in line 61
   variable discoveryTimeList in line 57
   variable finishTimeList in line 59
   variable graph in line 53
   variable GRAY in line 80
   variable searchTreeCallback in line 69
   variable timestamp in line 63
   variable topologicalSortList in line 65
   variable vertexChooser in line 67
   variable WHITE in line 74
module edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch::Visit
   function getNextEdge() in line 288
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable outgoingEdgeIterator defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch::Visit
   function getVertex() in line 280
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vertex defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch::Visit
   function hasNextEdge() in line 284
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable outgoingEdgeIterator defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch::Visit
   function Visit(VertexType) in line 268
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable vertex defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch::Visit
      uses variable outgoingEdgeIterator defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch::Visit
      uses variable graph defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch
      uses function setColor(VertexType,int) defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch
      uses variable GRAY defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch
      uses function setDiscoveryTime(VertexType,int) defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch
      uses variable timestamp defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch
   variable outgoingEdgeIterator in line 266
   variable vertex in line 264
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/graph/AbstractEdge.java
module edu::umd::cs::findbugs::graph::AbstractEdge
   inherits from GraphEdge< ActualEdgeType, VertexType >
   function compareTo(ActualEdgeType) in line 91
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 82
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getLabel() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSource() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTarget() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setLabel(int) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractEdge(VertexType,VertexType) in line 51
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable label in line 37
   variable nextIncomingEdge in line 41
   variable nextOutgoingEdge in line 39
   variable source in line 33
   variable target in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/graph/AbstractGraph.java
module edu::umd::cs::findbugs::graph::AbstractGraph
   inherits from Graph< EdgeType, VertexType >
   abstract class
   function addVertex(VertexType) in line 167
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function allocateEdge(VertexType,VertexType) in line 330
      1 lines of code
      2 parameters
      1 conditional paths
   function containsVertex(VertexType) in line 173
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function createEdge(VertexType,VertexType) in line 183
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function edgeIterator() in line 153
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumEdgeLabels() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumEdges() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumIncomingEdges(VertexType) in line 259
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function getNumOutgoingEdges(VertexType) in line 270
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function getNumVertexLabels() in line 205
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumVertices() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function incomingEdgeIterator(VertexType) in line 254
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function lookupEdge(VertexType,VertexType) in line 193
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
   function outgoingEdgeIterator(VertexType) in line 249
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function predecessorIterator(final VertexType) in line 303
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(EdgeType) in line 225
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function removeVertex(VertexType) in line 234
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function setNumEdgeLabels(int) in line 220
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNumVertexLabels(int) in line 210
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function successorIterator(final VertexType) in line 281
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
   function vertexIterator() in line 158
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function vertices() in line 162
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AbstractGraph() in line 135
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   variable edgeList in line 122
   variable maxEdgeLabel in line 127
   variable maxVertexLabel in line 124
   variable vertexList in line 120
module edu::umd::cs::findbugs::graph::AbstractGraph::OutgoingEdgeIterator
   inherits from java::util::Iterator
   function hasNext() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable edge defined in edu::umd::cs::findbugs::graph::AbstractGraph::OutgoingEdgeIterator
   function next() in line 66
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function hasNext() defined in edu::umd::cs::findbugs::graph::AbstractGraph::OutgoingEdgeIterator
      uses variable edge defined in edu::umd::cs::findbugs::graph::AbstractGraph::OutgoingEdgeIterator
   function remove() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function OutgoingEdgeIterator(VertexType) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable edge in line 54
module edu::umd::cs::findbugs::graph::AbstractGraph::IncomingEdgeIterator
   inherits from java::util::Iterator
   function hasNext() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable edge defined in edu::umd::cs::findbugs::graph::AbstractGraph::OutgoingEdgeIterator
   function next() in line 99
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function hasNext() defined in edu::umd::cs::findbugs::graph::AbstractGraph::OutgoingEdgeIterator
      uses variable edge defined in edu::umd::cs::findbugs::graph::AbstractGraph::OutgoingEdgeIterator
   function remove() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function IncomingEdgeIterator(VertexType) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable edge in line 87
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/graph/AbstractVertex.java
module edu::umd::cs::findbugs::graph::AbstractVertex
   inherits from edu::umd::cs::findbugs::graph::GraphVertex
   function compareTo(ActualVertexType) in line 64
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 55
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getLabel() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setLabel(int) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable label in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/graph/Graph.java
module edu::umd::cs::findbugs::graph::Graph
   function addVertex(VertexType) in line 59
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function containsVertex(VertexType) in line 68
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function createEdge(VertexType,VertexType) in line 80
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function edgeIterator() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumEdgeLabels() in line 110
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumEdges() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumIncomingEdges(VertexType) in line 153
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getNumOutgoingEdges(VertexType) in line 162
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getNumVertexLabels() in line 99
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumVertices() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function incomingEdgeIterator(VertexType) in line 144
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function lookupEdge(VertexType,VertexType) in line 92
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function outgoingEdgeIterator(VertexType) in line 135
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function predecessorIterator(VertexType) in line 182
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(EdgeType) in line 120
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function removeVertex(VertexType) in line 126
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setNumEdgeLabels(int) in line 115
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setNumVertexLabels(int) in line 105
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function successorIterator(VertexType) in line 172
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function vertexIterator() in line 50
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/graph/GraphEdge.java
module edu::umd::cs::findbugs::graph::GraphEdge
   inherits from Comparable
   function getLabel() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSource() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTarget() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setLabel(int) in line 48
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/graph/GraphToolkit.java
module edu::umd::cs::findbugs::graph::GraphToolkit
   function copyEdge(EdgeType,EdgeType) in line 52
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function createGraph() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function duplicateVertex(VertexType) in line 42
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/graph/GraphVertex.java
module edu::umd::cs::findbugs::graph::GraphVertex
   inherits from Comparable
   function getLabel() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setLabel(int) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/graph/MergeVertices.java
module edu::umd::cs::findbugs::graph::MergeVertices
   function mergeVertices(Set< VertexType >,GraphType,VertexCombinator< VertexType >,GraphToolkit< GraphType, EdgeType, VertexType >) in line 52
      protection public
      58 lines of code
      4 parameters
      8 conditional paths
      uses function combineVertices(Set< VertexType >) defined in edu::umd::cs::findbugs::graph::VertexCombinator
      uses function copyEdge(EdgeType,EdgeType) defined in edu::umd::cs::findbugs::graph::GraphToolkit
   function MergeVertices() in line 37
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/graph/SearchTree.java
module edu::umd::cs::findbugs::graph::SearchTree
   function addChild(SearchTree< VertexType >) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable m_childList defined in edu::umd::cs::findbugs::graph::SearchTree
   function addVerticesToSet(Set< VertexType >) in line 71
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function childIterator() defined in edu::umd::cs::findbugs::graph::SearchTree
      uses function addVerticesToSet(Set< VertexType >) defined in edu::umd::cs::findbugs::graph::SearchTree
   function childIterator() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable m_childList defined in edu::umd::cs::findbugs::graph::SearchTree
   function getVertex() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable m_vertex defined in edu::umd::cs::findbugs::graph::SearchTree
   function SearchTree(VertexType) in line 41
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable m_vertex defined in edu::umd::cs::findbugs::graph::SearchTree
      uses variable m_childList defined in edu::umd::cs::findbugs::graph::SearchTree
   variable m_childList in line 36
   variable m_vertex in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/graph/SearchTreeBuilder.java
module edu::umd::cs::findbugs::graph::SearchTreeBuilder
   inherits from SearchTreeCallback< VertexType >
   function addToSearchTree(VertexType,VertexType) in line 45
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable searchTreeMap defined in edu::umd::cs::findbugs::graph::SearchTreeBuilder
      uses function createSearchTree(VertexType) defined in edu::umd::cs::findbugs::graph::SearchTreeBuilder
      uses function addChild(SearchTree< VertexType >) defined in edu::umd::cs::findbugs::graph::SearchTree
   function createSearchTree(VertexType) in line 61
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable searchTreeMap defined in edu::umd::cs::findbugs::graph::SearchTreeBuilder
   function searchTreeIterator() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable searchTreeList defined in edu::umd::cs::findbugs::graph::SearchTreeBuilder
   function startSearchTree(VertexType) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable searchTreeList defined in edu::umd::cs::findbugs::graph::SearchTreeBuilder
      uses function createSearchTree(VertexType) defined in edu::umd::cs::findbugs::graph::SearchTreeBuilder
   variable searchTreeList in line 37
   variable searchTreeMap in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/graph/SearchTreeCallback.java
module edu::umd::cs::findbugs::graph::SearchTreeCallback
   function addToSearchTree(VertexType,VertexType) in line 42
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function startSearchTree(VertexType) in line 32
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/graph/StronglyConnectedComponents.java
module edu::umd::cs::findbugs::graph::StronglyConnectedComponents
   function copySearchTree(SearchTree< VertexType >,Transpose< GraphType, EdgeType, VertexType >) in line 134
      13 lines of code
      2 parameters
      2 conditional paths
      uses function getOriginalGraphVertex(VertexType) defined in edu::umd::cs::findbugs::graph::Transpose
      uses function getVertex() defined in edu::umd::cs::findbugs::graph::SearchTree
      uses function childIterator() defined in edu::umd::cs::findbugs::graph::SearchTree
      uses function addChild(SearchTree< VertexType >) defined in edu::umd::cs::findbugs::graph::SearchTree
   function findStronglyConnectedComponents(GraphType,GraphToolkit< GraphType, EdgeType, VertexType >) in line 65
      protection public
      58 lines of code
      2 parameters
      7 conditional paths
      uses variable m_vertexChooser defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
      uses function setVertexChooser(VertexChooser< VertexType >) defined in AbstractDepthFirstSearch< GraphType, EdgeType, VertexType >
      uses function search() defined in AbstractDepthFirstSearch< GraphType, EdgeType, VertexType >
      uses function transpose(GraphType,GraphToolkit< GraphType, EdgeType, VertexType >) defined in edu::umd::cs::findbugs::graph::Transpose
      uses function getFinishTimeList() defined in AbstractDepthFirstSearch< GraphType, EdgeType, VertexType >
      uses variable DESCENDING defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
      uses function setSearchTreeCallback(SearchTreeCallback< VertexType >) defined in AbstractDepthFirstSearch< GraphType, EdgeType, VertexType >
      uses function searchTreeIterator() defined in edu::umd::cs::findbugs::graph::SearchTreeBuilder
      uses variable m_stronglyConnectedSearchTreeList defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
      uses function copySearchTree(SearchTree< VertexType >,Transpose< GraphType, EdgeType, VertexType >) defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
   function searchTreeIterator() in line 154
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable m_stronglyConnectedSearchTreeList defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
   function setIterator() in line 194
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function SCCSetIterator() defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents::SCCSetIterator
   function setVertexChooser(VertexChooser< VertexType >) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable m_vertexChooser defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
   function StronglyConnectedComponents() in line 42
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable m_stronglyConnectedSearchTreeList defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
      uses variable m_vertexChooser defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
   variable m_stronglyConnectedSearchTreeList in line 35
   variable m_vertexChooser in line 37
module edu::umd::cs::findbugs::graph::StronglyConnectedComponents::SCCSetIterator
   inherits from java::util::Iterator
   function hasNext() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable m_searchTreeIterator defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents::SCCSetIterator
   function next() in line 175
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable m_searchTreeIterator defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents::SCCSetIterator
      uses function addVerticesToSet(Set< VertexType >) defined in edu::umd::cs::findbugs::graph::SearchTree
   function remove() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SCCSetIterator() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable m_searchTreeIterator defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents::SCCSetIterator
      uses function searchTreeIterator() defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
   variable m_searchTreeIterator in line 163
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/graph/Transpose.java
module edu::umd::cs::findbugs::graph::Transpose
   function getOriginalGraphVertex(VertexType) in line 117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable m_transposeToOrigMap defined in edu::umd::cs::findbugs::graph::Transpose
   function getTransposedGraphVertex(VertexType) in line 105
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable m_origToTransposeMap defined in edu::umd::cs::findbugs::graph::Transpose
   function transpose(GraphType,GraphToolkit< GraphType, EdgeType, VertexType >) in line 54
      protection public
      42 lines of code
      2 parameters
      3 conditional paths
      uses function createGraph() defined in edu::umd::cs::findbugs::graph::GraphToolkit
      uses function duplicateVertex(VertexType) defined in edu::umd::cs::findbugs::graph::GraphToolkit
      uses variable m_origToTransposeMap defined in edu::umd::cs::findbugs::graph::Transpose
      uses variable m_transposeToOrigMap defined in edu::umd::cs::findbugs::graph::Transpose
      uses function copyEdge(EdgeType,EdgeType) defined in edu::umd::cs::findbugs::graph::GraphToolkit
   function Transpose() in line 39
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable m_origToTransposeMap defined in edu::umd::cs::findbugs::graph::Transpose
      uses variable m_transposeToOrigMap defined in edu::umd::cs::findbugs::graph::Transpose
   variable m_origToTransposeMap in line 32
   variable m_transposeToOrigMap in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/graph/VertexChooser.java
module edu::umd::cs::findbugs::graph::VertexChooser
   function isChosen(VertexType) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/graph/VertexCombinator.java
module edu::umd::cs::findbugs::graph::VertexCombinator
   function combineVertices(Set< VertexType >) in line 38
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/graph/VisitationTimeComparator.java
module edu::umd::cs::findbugs::graph::VisitationTimeComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(VertexType,VertexType) in line 70
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable m_visitationTimeList defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
      uses variable m_direction defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
      uses variable ASCENDING defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
   function VisitationTimeComparator(int[],int) in line 60
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable m_visitationTimeList defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
      uses variable m_direction defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
      uses variable ASCENDING defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
      uses variable DESCENDING defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
   variable ASCENDING in line 40
      protection public
   variable DESCENDING in line 45
      protection public
   variable m_direction in line 49
   variable m_visitationTimeList in line 47
   variable serialVersionUID in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/gui2/CloudCommentsPaneSwing.java
module edu::umd::cs::findbugs::gui2::CloudCommentsPaneSwing
   inherits from edu::umd::cs::findbugs::gui2::CloudCommentsPane
   function getPreferredSize() in line 20
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function isDisabled(CloudPlugin) in line 44
      3 lines of code
      1 parameters
      1 conditional paths
   function setSignInOutText(String) in line 70
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable signInOutLink defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane
   function setupLinksOrButtons() in line 26
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable signInOutLink defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane
      uses function signInOrOutClicked() defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane
      uses variable cancelLink defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane
      uses function cancelClicked() defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane
   function showCloudChooser(List< CloudPlugin >,List< String >) in line 49
      19 lines of code
      2 parameters
      2 conditional paths
      uses variable _bugCollection defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function getPlugin() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getId() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
      uses function getDetails() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
      uses function changeCloud(String) defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane
      uses variable signInOutLink defined in edu::umd::cs::findbugs::gui2::CloudCommentsPane
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/HTMLBugReporter.java
module edu::umd::cs::findbugs::HTMLBugReporter
   inherits from edu::umd::cs::findbugs::BugCollectionBugReporter
   function finish() in line 47
      protection public
      36 lines of code
      0 parameters
      3 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function setWithMessages(boolean) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function toDocument() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getStylesheetStream(String) defined in edu::umd::cs::findbugs::HTMLBugReporter
      uses variable stylesheet defined in edu::umd::cs::findbugs::HTMLBugReporter
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function logError(String) defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses variable fatalException defined in edu::umd::cs::findbugs::HTMLBugReporter
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
   function getFatalException() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fatalException defined in edu::umd::cs::findbugs::HTMLBugReporter
   function getStylesheetStream(String) in line 88
      21 lines of code
      1 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses variable stylesheet defined in edu::umd::cs::findbugs::HTMLBugReporter
   function HTMLBugReporter(Project,String) in line 41
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses variable stylesheet defined in edu::umd::cs::findbugs::HTMLBugReporter
   variable fatalException in line 39
   variable stylesheet in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/I18N.java
module edu::umd::cs::findbugs::I18N
   function getAnnotationDescription(String) in line 142
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable annotationDescriptionBundle defined in edu::umd::cs::findbugs::I18N
      uses variable DEBUG defined in edu::umd::cs::findbugs::I18N
      uses variable englishAnnotationDescriptionBundle defined in edu::umd::cs::findbugs::I18N
   function getBugCategoryDescription(String) in line 185
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getBugCategory(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugCategory
   function getBugTypeDescription(String) in line 169
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function lookupBugCode(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getDescription() defined in edu::umd::cs::findbugs::BugCode
   function getDetailHTML(String) in line 126
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getDetailHTML() defined in edu::umd::cs::findbugs::BugPattern
   function getMessage(String) in line 85
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getLongDescription() defined in edu::umd::cs::findbugs::BugPattern
   function getShortMessage(String) in line 102
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
   function getShortMessageWithoutCode(String) in line 111
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
   function getUserDesignation(String) in line 198
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable userDesignationBundle defined in edu::umd::cs::findbugs::I18N
   function getUserDesignationKey(int) in line 234
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getUserDesignationKeys() defined in edu::umd::cs::findbugs::I18N
   function getUserDesignationKeys() in line 208
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable userDesignationBundle defined in edu::umd::cs::findbugs::I18N
   function getUserDesignationKeys(boolean) in line 226
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getUserDesignationKeys() defined in edu::umd::cs::findbugs::I18N
      uses variable designationKeyComparator defined in edu::umd::cs::findbugs::I18N
   function instance() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::I18N
   variable annotationDescriptionBundle in line 49
   variable DEBUG in line 42
   variable defaultLocale in line 47
      protection public
   variable designationKeyComparator in line 45
      protection public
   variable englishAnnotationDescriptionBundle in line 55
   variable theInstance in line 65
   variable userDesignationBundle in line 58
module edu::umd::cs::findbugs::I18N::DesignationKeyComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function categoryOf(String) in line 257
      52 lines of code
      1 parameters
      19 conditional paths
   function compare(String,String) in line 247
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function categoryOf(String) defined in edu::umd::cs::findbugs::I18N::DesignationKeyComparator
   variable serialVersionUID in line 240
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/IClassScreener.java
module edu::umd::cs::findbugs::IClassScreener
   function matches(String) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function vacuous() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/IFindBugsEngine.java
module edu::umd::cs::findbugs::IFindBugsEngine
   function addClassObserver(IClassObserver) in line 116
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addFilter(String,boolean) in line 89
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function emitTrainingOutput() in line 237
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function enableTrainingInput(String) in line 150
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function enableTrainingOutput(String) in line 141
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function excludeBaselineBugs(String) in line 98
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function execute() in line 200
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function finishSettings() in line 295
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBugCount() in line 212
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBugReporter() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCurrentClass() in line 207
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getErrorCount() in line 217
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMissingClassCount() in line 222
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getProject() in line 69
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getProjectName() in line 174
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getReleaseName() in line 163
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTrainingInputDir() in line 258
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTrainingOutputDir() in line 244
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getUserPreferences() in line 229
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setAbridgedMessages(boolean) in line 289
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setAnalysisFeatureSettings(AnalysisFeatureSetting[]) in line 158
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setApplySuppression(boolean) in line 293
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setBugReporter(BugReporter) in line 54
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setBugReporterDecorators(Set< String >,Set< String >) in line 299
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function setClassScreener(IClassScreener) in line 125
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setDetectorFactoryCollection(DetectorFactoryCollection) in line 284
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setMergeSimilarWarnings(boolean) in line 291
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setNoClassOk(boolean) in line 275
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setProgressCallback(FindBugsProgress) in line 78
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setProject(Project) in line 62
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setProjectName(String) in line 180
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setRankThreshold(int) in line 297
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setRelaxedReportingMode(boolean) in line 133
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setReleaseName(String) in line 169
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setScanNestedArchives(boolean) in line 266
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setSourceInfoFile(String) in line 189
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setUserPreferences(UserPreferences) in line 108
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function useTrainingInput() in line 251
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/IGuiCallback.java
module edu::umd::cs::findbugs::IGuiCallback
   function displayNonmodelMessage(String,String) in line 65
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getBugUpdateExecutor() in line 81
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getProgressMonitorInputStream(InputStream,int,String) in line 61
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function invokeInGUIThread(Runnable) in line 53
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isHeadless() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function registerCloud(Project,BugCollection,Cloud) in line 73
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function setErrorMessage(String) in line 63
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function showConfirmDialog(String,String,String,String) in line 55
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
   function showDocument(URL) in line 67
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function showForm(String,String,List< FormItem >) in line 59
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function showMessageDialog(String) in line 39
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function showMessageDialogAndWait(String) in line 83
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function showQuestionDialog(String,String,String) in line 57
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function unregisterCloud(Project,BugCollection,Cloud) in line 75
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   variable CANCEL_OPTION in line 45
      protection public
   variable NO_OPTION in line 43
      protection public
   variable OK_CANCEL_OPTION in line 51
      protection public
   variable YES_NO_CANCEL_OPTION in line 49
      protection public
   variable YES_NO_OPTION in line 47
      protection public
   variable YES_OPTION in line 41
      protection public
module edu::umd::cs::findbugs::IGuiCallback::FormItem
   function getCurrentValue() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentValue defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
   function getDefaultValue() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable defaultValue defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
   function getField() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable field defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
   function getItems() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable items defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
   function getLabel() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable label defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
   function getPossibleValues() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable possibleValues defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
   function isPassword() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function password() defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
   function password() in line 114
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setCurrentValue(String) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable currentValue defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
   function setField(JComponent) in line 139
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable field defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
   function setItems(List< FormItem >) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable items defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
   function updated() in line 159
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function FormItem(String) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable label defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
   function FormItem(String,String) in line 104
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable label defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
      uses variable defaultValue defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
   function FormItem(String,String,List< String >) in line 108
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable label defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
      uses variable defaultValue defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
      uses variable possibleValues defined in edu::umd::cs::findbugs::IGuiCallback::FormItem
   variable currentValue in line 96
   variable defaultValue in line 88
   variable field in line 94
   variable items in line 98
   variable label in line 86
   variable password in line 90
   variable possibleValues in line 92
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/InstructionScanner.java
module edu::umd::cs::findbugs::InstructionScanner
   function isDone() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function scanInstruction(InstructionHandle) in line 39
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function traverseEdge(Edge) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/InstructionScannerDriver.java
module edu::umd::cs::findbugs::InstructionScannerDriver
   function execute(InstructionScannerGenerator) in line 61
      protection public
      40 lines of code
      1 parameters
      8 conditional paths
      uses variable edgeIter defined in edu::umd::cs::findbugs::InstructionScannerDriver
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable DEBUG defined in edu::umd::cs::findbugs::InstructionScannerDriver
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable next defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function start(org.apache.bcel.generic.InstructionHandle) defined in edu::umd::cs::findbugs::InstructionScannerGenerator
      uses variable scannerList defined in edu::umd::cs::findbugs::InstructionScannerDriver
      uses function createScanner() defined in edu::umd::cs::findbugs::InstructionScannerGenerator
   function InstructionScannerDriver(Iterator< Edge >) in line 48
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable edgeIter defined in edu::umd::cs::findbugs::InstructionScannerDriver
      uses variable scannerList defined in edu::umd::cs::findbugs::InstructionScannerDriver
   variable DEBUG in line 40
   variable edgeIter in line 36
   variable scannerList in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/InstructionScannerGenerator.java
module edu::umd::cs::findbugs::InstructionScannerGenerator
   function createScanner() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function start(org.apache.bcel.generic.InstructionHandle) in line 33
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/IntAnnotation.java
module edu::umd::cs::findbugs::IntAnnotation
   inherits from edu::umd::cs::findbugs::BugAnnotation
   function accept(BugAnnotationVisitor) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitIntAnnotation(IntAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function clone() in line 73
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function compareTo(BugAnnotation) in line 159
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
      uses function IntAnnotation(int) defined in edu::umd::cs::findbugs::IntAnnotation
   function equals(Object) in line 151
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
      uses function IntAnnotation(int) defined in edu::umd::cs::findbugs::IntAnnotation
   function format(String,ClassAnnotation) in line 96
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses function isSignificant() defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
      uses function getShortInteger(int) defined in edu::umd::cs::findbugs::IntAnnotation
   function getDescription() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::IntAnnotation
   function getShortInteger(int) in line 107
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
      uses function uniqueDigits(String) defined in edu::umd::cs::findbugs::IntAnnotation
   function getShortInteger(long) in line 117
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
      uses function uniqueDigits(String) defined in edu::umd::cs::findbugs::IntAnnotation
   function getValue() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
   function hashCode() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
   function isSignificant() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable INT_SYNC_PERCENT defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable INT_OCCURRENCES defined in edu::umd::cs::findbugs::IntAnnotation
   function setDescription(String) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::IntAnnotation
   function toString() in line 168
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getAnnotationDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses variable description defined in edu::umd::cs::findbugs::IntAnnotation
      uses function format(String,ClassAnnotation) defined in edu::umd::cs::findbugs::IntAnnotation
   function toString(ClassAnnotation) in line 205
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::IntAnnotation
   function uniqueDigits(String) in line 127
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
   function writeXML(XMLOutput) in line 183
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean,boolean) in line 188
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::IntAnnotation
   function IntAnnotation(int) in line 67
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::IntAnnotation
   variable DEFAULT_ROLE in line 38
   variable description in line 42
   variable ELEMENT_NAME in line 180
   variable INT_ACTUAL_ARGUMENTS in line 57
      protection public
   variable INT_EXPECTED_ARGUMENTS in line 55
      protection public
   variable INT_OBLIGATIONS_REMAINING in line 59
      protection public
   variable INT_OCCURRENCES in line 49
      protection public
   variable INT_SHIFT in line 53
      protection public
   variable INT_SYNC_PERCENT in line 47
      protection public
   variable INT_VALUE in line 51
      protection public
   variable serialVersionUID in line 36
   variable value in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/internalAnnotations/AnalysisContextContained.java
module edu::umd::cs::findbugs::internalAnnotations::AnalysisContextContained
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/internalAnnotations/DottedClassName.java
module edu::umd::cs::findbugs::internalAnnotations::DottedClassName
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/internalAnnotations/SlashedClassName.java
module edu::umd::cs::findbugs::internalAnnotations::SlashedClassName
   function when() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable NOT_AVAILABLE in line 43
      protection public
module edu::umd::cs::findbugs::internalAnnotations::SlashedClassName::Checker
   inherits from javax::annotation::meta::TypeQualifierValidator
   function forConstantValue(@Nonnull SlashedClassName,Object) in line 58
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/internalAnnotations/StaticConstant.java
module edu::umd::cs::findbugs::internalAnnotations::StaticConstant
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/InterproceduralFirstPassDetector.java
module edu::umd::cs::findbugs::InterproceduralFirstPassDetector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/io/IO.java
module edu::umd::cs::findbugs::io::IO
   function close(@CheckForNull Closeable) in line 171
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function close(@CheckForNull InputStream) in line 190
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function close(@CheckForNull OutputStream) in line 209
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function copy(@WillNotClose InputStream,@WillNotClose OutputStream) in line 124
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function copy(Reader,Writer) in line 128
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copy(@WillNotClose InputStream,@WillNotClose OutputStream) defined in edu::umd::cs::findbugs::io::IO
   function copy(@WillNotClose InputStream,@WillNotClose OutputStream,long) in line 132
      protection public
      17 lines of code
      3 parameters
      2 conditional paths
   function copy(Reader,Writer,long) in line 150
      protection public
      16 lines of code
      3 parameters
      2 conditional paths
   function readAll(@WillClose InputStream) in line 70
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function copy(@WillNotClose InputStream,@WillNotClose OutputStream) defined in edu::umd::cs::findbugs::io::IO
      uses function close(@CheckForNull Closeable) defined in edu::umd::cs::findbugs::io::IO
   function readAll(@WillClose InputStream,int) in line 88
      protection public
      28 lines of code
      2 parameters
      7 conditional paths
      uses function close(@CheckForNull Closeable) defined in edu::umd::cs::findbugs::io::IO
   function readAll(Reader) in line 117
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function copy(@WillNotClose InputStream,@WillNotClose OutputStream) defined in edu::umd::cs::findbugs::io::IO
   function skipFully(InputStream,long) in line 234
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
   function verifyURL(URL) in line 249
      protection public
      22 lines of code
      1 parameters
      3 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/io/SlowInputStream.java
module edu::umd::cs::findbugs::io::SlowInputStream
   inherits from java::io::FilterInputStream
   function close() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function delay() in line 38
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable started defined in edu::umd::cs::findbugs::io::SlowInputStream
      uses variable length defined in edu::umd::cs::findbugs::io::SlowInputStream
      uses variable bytesPerSecond defined in edu::umd::cs::findbugs::io::SlowInputStream
   function read() in line 50
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable length defined in edu::umd::cs::findbugs::io::SlowInputStream
      uses function delay() defined in edu::umd::cs::findbugs::io::SlowInputStream
   function read(byte[]) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function read() defined in edu::umd::cs::findbugs::io::SlowInputStream
   function read(byte[],int,int) in line 65
      protection public
      11 lines of code
      3 parameters
      3 conditional paths
      uses variable bytesPerSecond defined in edu::umd::cs::findbugs::io::SlowInputStream
      uses variable length defined in edu::umd::cs::findbugs::io::SlowInputStream
      uses function delay() defined in edu::umd::cs::findbugs::io::SlowInputStream
   function skip(long) in line 78
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable length defined in edu::umd::cs::findbugs::io::SlowInputStream
      uses function delay() defined in edu::umd::cs::findbugs::io::SlowInputStream
   function SlowInputStream(InputStream,int) in line 33
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable bytesPerSecond in line 31
   variable length in line 29
   variable started in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/jaif/JAIFEnumConstant.java
module edu::umd::cs::findbugs::jaif::JAIFEnumConstant
   function getName() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::jaif::JAIFEnumConstant
   function toString() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::jaif::JAIFEnumConstant
   function JAIFEnumConstant(String) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::jaif::JAIFEnumConstant
   variable name in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/jaif/JAIFEvents.java
module edu::umd::cs::findbugs::jaif::JAIFEvents
   function annotationField(String,Object) in line 72
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function annotationFieldDefinition(String,String) in line 100
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function endAnnotation(String) in line 61
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function endAnnotationDefinition(String) in line 90
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function endPackageDefinition(String) in line 45
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function startAnnotation(String) in line 53
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function startAnnotationDefinition(String,String) in line 82
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function startPackageDefinition(String) in line 38
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/jaif/JAIFParser.java
module edu::umd::cs::findbugs::jaif::JAIFParser
   function expect(String) in line 54
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function nextToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function expect(JAIFTokenKind) in line 62
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function nextToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function expectEndOfLine() in line 70
      28 lines of code
      0 parameters
      5 conditional paths
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function atEOF() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function peekToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses function nextToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function main(String[]) in line 369
      protection public
      48 lines of code
      1 parameters
      2 conditional paths
      uses variable callback defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function JAIFParser(Reader,JAIFEvents) defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function parse() defined in edu::umd::cs::findbugs::jaif::JAIFParser
   function parse() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseAnnotationFile() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function getLineNumber() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function parseAnnotation() in line 186
      21 lines of code
      0 parameters
      3 conditional paths
      uses function readCompoundName() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable callback defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function startAnnotation(String) defined in edu::umd::cs::findbugs::jaif::JAIFEvents
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function peekToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable LPAREN defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses function parseAnnotationField() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable RPAREN defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses function expect(String) defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function nextToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function endAnnotation(String) defined in edu::umd::cs::findbugs::jaif::JAIFEvents
   function parseAnnotationDefinition() in line 334
      23 lines of code
      0 parameters
      3 conditional paths
      uses function expect(String) defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function peekToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function nextToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable IDENTIFIER_OR_KEYWORD defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable COLON defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses function expectEndOfLine() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable callback defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function startAnnotationDefinition(String,String) defined in edu::umd::cs::findbugs::jaif::JAIFEvents
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses function parseAnnotationFieldDefinition() defined in edu::umd::cs::findbugs::jaif::JAIFParser
   function parseAnnotationDefinitionOrClassDefinition() in line 322
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function peekToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function parseAnnotationDefinition() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function parseClassDefinition() defined in edu::umd::cs::findbugs::jaif::JAIFParser
   function parseAnnotationField() in line 208
      7 lines of code
      0 parameters
      1 conditional paths
      uses function expect(String) defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable IDENTIFIER_OR_KEYWORD defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses function parseConstant() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable callback defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function annotationField(String,Object) defined in edu::umd::cs::findbugs::jaif::JAIFEvents
   function parseAnnotationFieldDefinition() in line 358
      6 lines of code
      0 parameters
      1 conditional paths
      uses function readType() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function expect(String) defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable IDENTIFIER_OR_KEYWORD defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable callback defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function annotationFieldDefinition(String,String) defined in edu::umd::cs::findbugs::jaif::JAIFEvents
   function parseAnnotationFile() in line 140
      6 lines of code
      0 parameters
      2 conditional paths
      uses function parsePackageDefinition() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function atEOF() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function parseClassDefinition() in line 365
      3 lines of code
      0 parameters
      1 conditional paths
   function parseConstant() in line 216
      33 lines of code
      0 parameters
      8 conditional paths
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function peekToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function readCompoundName() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function nextToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function unparseStringLiteral(String) defined in edu::umd::cs::findbugs::jaif::JAIFParser
   function parsePackageDefinition() in line 147
      38 lines of code
      0 parameters
      5 conditional paths
      uses function expect(String) defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function peekToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses function readCompoundName() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function parseAnnotation() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function expectEndOfLine() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable callback defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function startPackageDefinition(String) defined in edu::umd::cs::findbugs::jaif::JAIFEvents
      uses function atEOF() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function parseAnnotationDefinitionOrClassDefinition() defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function endPackageDefinition(String) defined in edu::umd::cs::findbugs::jaif::JAIFEvents
   function readCompoundName() in line 99
      28 lines of code
      0 parameters
      5 conditional paths
      uses variable scanner defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses function nextToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable IDENTIFIER_OR_KEYWORD defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses function peekToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable DOT defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function readType() in line 128
      11 lines of code
      0 parameters
      1 conditional paths
      uses function expect(String) defined in edu::umd::cs::findbugs::jaif::JAIFParser
      uses variable IDENTIFIER_OR_KEYWORD defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function unparseStringLiteral(String) in line 250
      71 lines of code
      1 parameters
      13 conditional paths
   function JAIFParser(Reader,JAIFEvents) in line 41
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable callback defined in edu::umd::cs::findbugs::jaif::JAIFParser
   variable callback in line 39
   variable scanner in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/jaif/JAIFScanner.java
module edu::umd::cs::findbugs::jaif::JAIFScanner
   function atEOF() in line 168
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function fillLineBuf() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable lineBuf defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function fetchToken() in line 186
      40 lines of code
      0 parameters
      7 conditional paths
      uses variable next defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function fillLineBuf() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable lineBuf defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function isHorizWhitespace(char) defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable lineNum defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable TOKEN_PATTERNS defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function fillLineBuf() in line 173
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable lineBuf defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable reader defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses variable lineNum defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function getLineNumber() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lineNum defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function isHorizWhitespace(char) in line 182
      3 lines of code
      1 parameters
      1 conditional paths
   function nextToken() in line 152
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable next defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function fetchToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function peekToken() in line 161
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable next defined in edu::umd::cs::findbugs::jaif::JAIFScanner
      uses function fetchToken() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   function JAIFScanner(Reader) in line 143
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable reader defined in edu::umd::cs::findbugs::jaif::JAIFScanner
   variable DIGIT in line 66
   variable DIGITS in line 68
   variable DIGITS_OPT in line 70
   variable DOT in line 74
   variable ESCAPE_SEQ in line 99
   variable EXP_PART in line 76
   variable EXP_PART_OPT in line 78
   variable FLOAT_TYPE_SUFFIX in line 80
   variable FLOAT_TYPE_SUFFIX_OPT in line 82
   variable HEX_DIGITS in line 88
   variable HEX_SIGNIFIER in line 86
   variable ID_REST in line 64
   variable ID_START in line 62
   variable INPUT_CHAR in line 92
   variable INT_TYPE_SUFFIX_OPT in line 90
   variable lineBuf in line 136
   variable lineNum in line 138
   variable next in line 134
   variable OCT_ESCAPE in line 97
   variable OCTAL_DIGITS in line 84
   variable reader in line 132
   variable SIGN_OPT in line 72
   variable STRING_CHARS_OPT in line 101
   variable TOKEN_PATTERNS in line 103
module edu::umd::cs::findbugs::jaif::JAIFScanner::TokenPattern
   function getKind(String) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getPattern() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function TokenPattern(String,JAIFTokenKind) in line 43
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable kind in line 41
   variable pattern in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/jaif/JAIFSyntaxException.java
module edu::umd::cs::findbugs::jaif::JAIFSyntaxException
   inherits from Exception
   function JAIFSyntaxException(JAIFParser,String) in line 26
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function JAIFSyntaxException(JAIFScanner,String) in line 30
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getLineNumber() defined in edu::umd::cs::findbugs::jaif::JAIFScanner
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/jaif/JAIFToken.java
module edu::umd::cs::findbugs::jaif::JAIFToken
   function isStartOfAnnotationName() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 53
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function JAIFToken(JAIFTokenKind,String,int) in line 36
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/jaif/JAIFTokenKind.java
module edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function toString() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function JAIFTokenKind(String) in line 29
      3 lines of code
      1 parameters
      1 conditional paths
   variable COLON in line 23
      protection public
   variable COMMA in line 24
      protection public
   variable DECIMAL_LITERAL in line 24
      protection public
   variable DOT in line 23
      protection public
   variable EQUALS in line 24
      protection public
   variable FLOATING_POINT_LITERAL in line 25
      protection public
   variable HEX_LITERAL in line 25
      protection public
   variable IDENTIFIER_OR_KEYWORD in line 23
      protection public
   variable LPAREN in line 23
      protection public
   variable NEWLINE in line 23
      protection public
   variable OCTAL_LITERAL in line 24
      protection public
   variable RPAREN in line 23
      protection public
   variable STRING_LITERAL in line 25
      protection public
   variable stringRep in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/JavaVersion.java
module edu::umd::cs::findbugs::JavaVersion
   function getMajor() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable major defined in edu::umd::cs::findbugs::JavaVersion
   function getMinor() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable minor defined in edu::umd::cs::findbugs::JavaVersion
   function getRest() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rest defined in edu::umd::cs::findbugs::JavaVersion
   function getRuntimeVersion() in line 134
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable runtimeVersion defined in edu::umd::cs::findbugs::JavaVersion
   function isSameOrNewerThan(JavaVersion) in line 146
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable major defined in edu::umd::cs::findbugs::JavaVersion
      uses variable minor defined in edu::umd::cs::findbugs::JavaVersion
   function toString() in line 119
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses variable major defined in edu::umd::cs::findbugs::JavaVersion
      uses variable minor defined in edu::umd::cs::findbugs::JavaVersion
      uses variable rest defined in edu::umd::cs::findbugs::JavaVersion
   function JavaVersion(String) in line 65
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable PATTERN defined in edu::umd::cs::findbugs::JavaVersion
      uses variable major defined in edu::umd::cs::findbugs::JavaVersion
      uses variable minor defined in edu::umd::cs::findbugs::JavaVersion
      uses variable rest defined in edu::umd::cs::findbugs::JavaVersion
   function JavaVersion(int,int) in line 91
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable major defined in edu::umd::cs::findbugs::JavaVersion
      uses variable minor defined in edu::umd::cs::findbugs::JavaVersion
   variable JAVA_1_5 in line 56
      protection public
   variable major in line 31
   variable minor in line 33
   variable PATTERN in line 29
   variable rest in line 35
   variable runtimeVersion in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/JavaVersionException.java
module edu::umd::cs::findbugs::JavaVersionException
   inherits from Exception
   function JavaVersionException(String) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function JavaVersionException(String,Throwable) in line 33
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/L10N.java
module edu::umd::cs::findbugs::L10N
   function getLocalString(String,String) in line 75
      protection public
      29 lines of code
      2 parameters
      7 conditional paths
      uses function lookup(ResourceBundle,String) defined in edu::umd::cs::findbugs::L10N
      uses variable bundle defined in edu::umd::cs::findbugs::L10N
      uses variable bundle_en defined in edu::umd::cs::findbugs::L10N
      uses variable DEBUG defined in edu::umd::cs::findbugs::L10N
      uses variable extraProperties defined in edu::umd::cs::findbugs::L10N
   function lookup(ResourceBundle,String) in line 67
      7 lines of code
      2 parameters
      2 conditional paths
   function L10N() in line 64
      2 lines of code
      0 parameters
      1 conditional paths
   variable bundle in line 42
   variable bundle_en in line 44
   variable DEBUG in line 38
   variable extraProperties in line 46
   variable GENERATE_MISSING_KEYS in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/LaunchAppropriateUI.java
module edu::umd::cs::findbugs::LaunchAppropriateUI
   function getLaunchProperty() in line 145
      43 lines of code
      0 parameters
      9 conditional paths
      uses variable args defined in edu::umd::cs::findbugs::LaunchAppropriateUI
      uses variable uiNameToCodeMap defined in edu::umd::cs::findbugs::LaunchAppropriateUI
      uses variable TEXTUI defined in edu::umd::cs::findbugs::LaunchAppropriateUI
      uses variable GUI2 defined in edu::umd::cs::findbugs::LaunchAppropriateUI
   function launch() in line 97
      protection public
      21 lines of code
      0 parameters
      5 conditional paths
      uses function getLaunchProperty() defined in edu::umd::cs::findbugs::LaunchAppropriateUI
      uses variable TEXTUI defined in edu::umd::cs::findbugs::LaunchAppropriateUI
      uses variable args defined in edu::umd::cs::findbugs::LaunchAppropriateUI
      uses variable SHOW_HELP defined in edu::umd::cs::findbugs::LaunchAppropriateUI
      uses variable SHOW_VERSION defined in edu::umd::cs::findbugs::LaunchAppropriateUI
   function main(String) in line 196
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function LaunchAppropriateUI(String[]) defined in edu::umd::cs::findbugs::LaunchAppropriateUI
      uses variable args defined in edu::umd::cs::findbugs::LaunchAppropriateUI
      uses function launch() defined in edu::umd::cs::findbugs::LaunchAppropriateUI
   function LaunchAppropriateUI(String[]) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable args defined in edu::umd::cs::findbugs::LaunchAppropriateUI
   variable args in line 80
   variable GUI1 in line 46
      protection public
   variable GUI2 in line 51
      protection public
   variable SHOW_HELP in line 56
      protection public
   variable SHOW_VERSION in line 61
      protection public
   variable TEXTUI in line 41
      protection public
   variable uiNameToCodeMap in line 67
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/launchGUI/LaunchGUI.java
module edu::umd::cs::findbugs::launchGUI::LaunchGUI
   function launchGUI(SortedBugCollection) in line 35
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses function waitUntilReady() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function openBugCollection(SortedBugCollection) defined in edu::umd::cs::findbugs::gui2::MainFrame
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/LocalVariableAnnotation.java
module edu::umd::cs::findbugs::LocalVariableAnnotation
   inherits from edu::umd::cs::findbugs::BugAnnotation
   function accept(BugAnnotationVisitor) in line 204
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitLocalVariableAnnotation(LocalVariableAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function clone() in line 195
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function compareTo(BugAnnotation) in line 257
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function equals(Object) in line 249
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function findMatchingIgnoredParameter(ClassContext,Method,String,String) in line 344
      protection public
      45 lines of code
      4 parameters
      8 conditional paths
      uses function getLiveLocalStoreDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getLocalVariableAnnotation(Method,Location,IndexedInstruction) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable DID_YOU_MEAN_ROLE defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function isNamed() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable name defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function getName() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function findUniqueBestMatchingParameter(ClassContext,Method,String,String) in line 391
      protection public
      35 lines of code
      4 parameters
      8 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getLocalVariableAnnotation(Method,Location,IndexedInstruction) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function isNamed() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable name defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function getName() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable DID_YOU_MEAN_ROLE defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function format(String,ClassAnnotation) in line 209
      protection public
      23 lines of code
      2 parameters
      8 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function getDescription() in line 239
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function getLocalVariableAnnotation(Method,Location,IndexedInstruction) in line 134
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function getLocalVariableAnnotation(Method,int,int,int) in line 142
      protection public
      32 lines of code
      4 parameters
      8 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function LocalVariableAnnotation(String,int,int) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function getLocalVariableAnnotation(Method,Item,int) in line 324
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getLocalVariableAnnotation(Method,Location,IndexedInstruction) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function getPC() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getLocalVariableAnnotation(DismantleBytecode,Item) in line 334
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getLocalVariableAnnotation(Method,Location,IndexedInstruction) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getName() in line 306
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function getParameterLocalVariableAnnotation(Method,int) in line 184
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getLocalVariableAnnotation(Method,Location,IndexedInstruction) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function isNamed() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable PARAMETER_NAMED_ROLE defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable PARAMETER_ROLE defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function getPC() in line 310
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRegister() in line 314
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 244
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function isNamed() in line 299
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function isSignificant() in line 319
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function setDescription(String) in line 234
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function toString() in line 267
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getAnnotationDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses variable description defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function format(String,ClassAnnotation) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function toString(ClassAnnotation) in line 428
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function writeXML(XMLOutput) in line 282
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean,boolean) in line 287
      protection public
      11 lines of code
      3 parameters
      2 conditional paths
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable name defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function LocalVariableAnnotation(String,int,int) in line 105
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function LocalVariableAnnotation(String,int,int,int) in line 125
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   variable ARGUMENT_ROLE in line 82
      protection public
   variable DEFAULT_ROLE in line 60
      protection public
   variable description in line 92
   variable DID_YOU_MEAN_ROLE in line 78
      protection public
   variable ELEMENT_NAME in line 279
   variable INVOKED_ON_ROLE in line 80
      protection public
   variable name in line 86
   variable NAMED_ROLE in line 62
      protection public
   variable PARAMETER_NAMED_ROLE in line 68
      protection public
   variable PARAMETER_ROLE in line 66
      protection public
   variable PARAMETER_VALUE_SOURCE_NAMED_ROLE in line 72
      protection public
   variable PARAMETER_VALUE_SOURCE_ROLE in line 70
      protection public
   variable serialVersionUID in line 58
   variable UNKNOWN_ROLE in line 64
      protection public
   variable VALUE_DOOMED_NAMED_ROLE in line 76
      protection public
   variable VALUE_DOOMED_ROLE in line 74
      protection public
   variable VALUE_OF_ROLE in line 84
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/log/ConsoleLogger.java
module edu::umd::cs::findbugs::log::ConsoleLogger
   inherits from edu::umd::cs::findbugs::log::Logger
   function logMessage(int,String) in line 47
      protection public
      20 lines of code
      2 parameters
      4 conditional paths
      uses variable ERROR defined in edu::umd::cs::findbugs::log::Logger
      uses variable logSync defined in edu::umd::cs::findbugs::log::ConsoleLogger
      uses function error(String) defined in edu::umd::cs::findbugs::log::LogSync
      uses variable WARNING defined in edu::umd::cs::findbugs::log::Logger
      uses function writeToLog(String) defined in edu::umd::cs::findbugs::log::LogSync
   function ConsoleLogger(LogSync) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable logSync defined in edu::umd::cs::findbugs::log::ConsoleLogger
   variable logSync in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/log/Logger.java
module edu::umd::cs::findbugs::log::Logger
   function logMessage(int,String) in line 30
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   variable ERROR in line 28
      protection public
   variable INFO in line 24
      protection public
   variable WARNING in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/log/LogSync.java
module edu::umd::cs::findbugs::log::LogSync
   function error(String) in line 24
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writeToLog(String) in line 22
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/log/Profiler.java
module edu::umd::cs::findbugs::log::Profiler
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   function clear() in line 417
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function end(Class<?>) in line 247
      protection public
      30 lines of code
      1 parameters
      6 conditional paths
      uses function handleCall(long,Object) defined in edu::umd::cs::findbugs::log::Profiler::Profile
      uses function getContext() defined in edu::umd::cs::findbugs::log::Profiler
   function endContext(Object) in line 220
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getContext() in line 225
      10 lines of code
      0 parameters
      3 conditional paths
   function getProfile(Class<?>) in line 422
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
   function report() in line 370
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function report(Comparator< Class<?>>,Filter,PrintStream) in line 382
      protection public
      26 lines of code
      3 parameters
      4 conditional paths
      uses function getProfile(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function accepts(Profile) defined in edu::umd::cs::findbugs::log::Profiler::Filter
   function start(Class<?>) in line 235
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
   function startContext(Object) in line 216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput) in line 443
      protection public
      25 lines of code
      1 parameters
      5 conditional paths
      uses function getProfile(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::log::Profiler::Profile
   function Profiler() in line 48
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
module edu::umd::cs::findbugs::log::Profiler::Filter
   function accepts(Profile) in line 57
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::log::Profiler::FilterByTime
   inherits from edu::umd::cs::findbugs::log::Profiler::Filter
   function accepts(Profile) in line 68
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function FilterByTime(long) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable minNanoSeconds in line 61
module edu::umd::cs::findbugs::log::Profiler::FilterByTimePerCall
   inherits from edu::umd::cs::findbugs::log::Profiler::Filter
   function accepts(Profile) in line 85
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function FilterByTimePerCall(long) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable minNanoSeconds in line 78
module edu::umd::cs::findbugs::log::Profiler::FilterByCalls
   inherits from edu::umd::cs::findbugs::log::Profiler::Filter
   function accepts(Profile) in line 103
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function FilterByCalls(int) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable minCalls in line 96
module edu::umd::cs::findbugs::log::Profiler::Profile
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   function getTotalTime() in line 149
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function handleCall(long,Object) in line 135
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
   function writeXML(XMLOutput) in line 159
      protection public
      27 lines of code
      1 parameters
      3 conditional paths
   function Profile(String) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable className in line 123
module edu::umd::cs::findbugs::log::Profiler::Clock
module edu::umd::cs::findbugs::log::Profiler::ClassNameComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(Class<?>,Class<?>) in line 286
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
   function ClassNameComparator(Profiler) in line 281
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable profiler in line 279
module edu::umd::cs::findbugs::log::Profiler::TotalTimeComparator
   inherits from edu::umd::cs::findbugs::log::Profiler::ClassNameComparator
   function compare(Class<?>,Class<?>) in line 311
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
   function TotalTimeComparator(Profiler) in line 306
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::log::Profiler::TimePerCallComparator
   inherits from edu::umd::cs::findbugs::log::Profiler::ClassNameComparator
   function compare(Class<?>,Class<?>) in line 330
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
   function TimePerCallComparator(Profiler) in line 325
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::log::Profiler::TotalCallsComparator
   inherits from edu::umd::cs::findbugs::log::Profiler::ClassNameComparator
   function compare(Class<?>,Class<?>) in line 351
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
   function TotalCallsComparator(Profiler) in line 346
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/log/YourKitController.java
module edu::umd::cs::findbugs::log::YourKitController
   function advanceGeneration(String) in line 59
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
   function captureMemorySnapshot() in line 84
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
   function getStatus() in line 70
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
   function YourKitController() in line 40
      protection public
      18 lines of code
      0 parameters
      3 conditional paths
      uses variable ENABLED defined in edu::umd::cs::findbugs::log::YourKitController
      uses function captureMemorySnapshot() defined in edu::umd::cs::findbugs::log::YourKitController
      uses function getStatus() defined in edu::umd::cs::findbugs::log::YourKitController
   variable ALLOCATION_RECORDING in line 38
      protection public
   variable ENABLED in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/Lookup.java
module edu::umd::cs::findbugs::Lookup
   inherits from edu::umd::cs::findbugs::visitclass::Constants2
   function findImplementation(JavaClass,String,String) in line 190
      protection public
      9 lines of code
      3 parameters
      3 conditional paths
   function findImplementor(XClass,String,String,boolean,BugReporter) in line 71
      protection public
      13 lines of code
      5 parameters
      2 conditional paths
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function findImplementor(XClass,String,String,boolean) in line 95
      protection public
      8 lines of code
      4 parameters
      2 conditional paths
      uses function findSuperImplementor(XClass,String,String,boolean,BugReporter) defined in edu::umd::cs::findbugs::Lookup
   function findImplementor(JavaClass[],String,String) in line 178
      protection public
      11 lines of code
      3 parameters
      3 conditional paths
      uses function findImplementation(JavaClass,String,String) defined in edu::umd::cs::findbugs::Lookup
   function findSuperDefiner(JavaClass,String,String,BugReporter) in line 105
      protection public
      18 lines of code
      4 parameters
      5 conditional paths
      uses function findImplementation(JavaClass,String,String) defined in edu::umd::cs::findbugs::Lookup
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function findSuperImplementor(XClass,String,String,boolean,BugReporter) in line 56
      protection public
      14 lines of code
      5 parameters
      2 conditional paths
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function findSuperImplementor(XClass,String,String,boolean) in line 85
      protection public
      9 lines of code
      4 parameters
      2 conditional paths
      uses function findImplementor(XClass,String,String,boolean,BugReporter) defined in edu::umd::cs::findbugs::Lookup
      uses function getXClass(ClassDescriptor) defined in edu::umd::cs::findbugs::Lookup
   function findSuperImplementor(JavaClass,String,String,BugReporter) in line 125
      protection public
      19 lines of code
      4 parameters
      5 conditional paths
      uses function findImplementation(JavaClass,String,String) defined in edu::umd::cs::findbugs::Lookup
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function findSuperImplementor(@DottedClassName String,String,String,BugReporter) in line 167
      protection public
      9 lines of code
      4 parameters
      2 conditional paths
      uses function findImplementor(XClass,String,String,boolean,BugReporter) defined in edu::umd::cs::findbugs::Lookup
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function findSuperImplementorAsXMethod(JavaClass,String,String,BugReporter) in line 146
      protection public
      19 lines of code
      4 parameters
      5 conditional paths
      uses function findImplementation(JavaClass,String,String) defined in edu::umd::cs::findbugs::Lookup
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function getXClass(ClassDescriptor) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function getXClass(@SlashedClassName String) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/MethodAnnotation.java
module edu::umd::cs::findbugs::MethodAnnotation
   inherits from edu::umd::cs::findbugs::PackageMemberAnnotation
   function accept(BugAnnotationVisitor) in line 326
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitMethodAnnotation(MethodAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function compareTo(BugAnnotation) in line 476
      protection public
      18 lines of code
      1 parameters
      4 conditional paths
      uses function MethodAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
   function equals(Object) in line 467
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function MethodAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
   function formatPackageMember(String,ClassAnnotation) in line 331
      32 lines of code
      2 parameters
      10 conditional paths
      uses variable UGLY_METHODS defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getUglyMethod() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getFullMethod(ClassAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getSignatureInClass(ClassAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getNameInClass(ClassAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function parseNext() defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function fromCalledMethod(DismantleBytecode) in line 143
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getOpcode() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStack() defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function isTop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
   function fromCalledMethod(String,String,String,boolean) in line 246
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses function fromForeignMethod(@SlashedClassName String,String,String,int) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function fromForeignMethod(@SlashedClassName String,String,String,int) in line 180
      protection public
      15 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function MethodAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable sourceLines defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function setSourceLines(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function fromForeignMethod(String,String,String,boolean) in line 211
      protection public
      19 lines of code
      4 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function MethodAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable sourceLines defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function setSourceLines(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function fromMethodDescriptor(MethodDescriptor) in line 272
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function fromForeignMethod(@SlashedClassName String,String,String,int) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getSlashedClassName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function fromVisitedMethod(PreorderVisitor) in line 123
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function MethodAnnotation(@DottedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function setSourceLines(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function fromXMethod(XMethod) in line 261
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function fromForeignMethod(@SlashedClassName String,String,String,int) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
   function getFullMethod(ClassAnnotation) in line 438
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable fullMethod defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function stripJavaLang(@DottedClassName String) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getSignatureInClass(ClassAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getNameInClass(ClassAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
   function getJavaSourceMethodName() in line 285
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getSimpleClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function getMethodName() in line 280
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
   function getMethodSignature() in line 299
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
   function getNameInClass(ClassAnnotation) in line 368
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getNameInClass(boolean,boolean,boolean) in line 376
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function getNameInClass(ClassAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
   function getNameInClass(boolean,boolean,boolean,boolean) in line 392
      protection public
      41 lines of code
      4 parameters
      8 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getJavaSourceMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getFirst() defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function skip() defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function parseNext() defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function getSignatureInClass(ClassAnnotation) in line 372
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getNameInClass(ClassAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
   function getUglyMethod() in line 457
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
   function hashCode() in line 462
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
   function isSignificant() in line 538
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function getDescription() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable METHOD_DANGEROUS_TARGET defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable METHOD_DANGEROUS_TARGET_ACTUAL_GUARANTEED_NULL defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable METHOD_SAFE_TARGET defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable METHOD_EQUALS_USED defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable METHOD_COMPUTED_IN defined in edu::umd::cs::findbugs::MethodAnnotation
   function isStatic() in line 308
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function stripJavaLang(@DottedClassName String) in line 450
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function toMethodDescriptor() in line 321
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
   function toXMethod() in line 317
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::MethodAnnotation
   function writeXML(XMLOutput) in line 504
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean,boolean) in line 508
      protection public
      28 lines of code
      3 parameters
      6 conditional paths
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getMethodSignature() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable sourceLines defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable MESSAGE_TAG defined in edu::umd::cs::findbugs::BugAnnotation
      uses function toString() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function MethodAnnotation(@DottedClassName String,String,String,boolean) in line 103
      protection public
      12 lines of code
      4 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable fullMethod defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable sourceLines defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   variable DEFAULT_ROLE in line 55
      protection public
   variable ELEMENT_NAME in line 501
   variable fullMethod in line 61
   variable isStatic in line 63
   variable METHOD_ALTERNATIVE_TARGET in line 87
      protection public
   variable METHOD_CALLED in line 75
      protection public
   variable METHOD_COMPUTED_IN in line 85
      protection public
   variable METHOD_CONSTRUCTOR in line 79
      protection public
   variable METHOD_DANGEROUS_TARGET in line 67
      protection public
   variable METHOD_DANGEROUS_TARGET_ACTUAL_GUARANTEED_NULL in line 65
      protection public
   variable METHOD_DID_YOU_MEAN_TO_OVERRIDE in line 83
      protection public
   variable METHOD_EQUALS_USED in line 73
      protection public
   variable METHOD_OVERRIDDEN in line 81
      protection public
   variable METHOD_RETURN_VALUE_OF in line 69
      protection public
   variable METHOD_SAFE_TARGET in line 71
      protection public
   variable METHOD_SUPERCLASS_CONSTRUCTOR in line 77
      protection public
   variable methodName in line 57
   variable methodSig in line 59
   variable serialVersionUID in line 51
   variable SHOULD_CALL in line 89
      protection public
   variable UGLY_METHODS in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/MethodWarningSuppressor.java
module edu::umd::cs::findbugs::MethodWarningSuppressor
   inherits from edu::umd::cs::findbugs::ClassWarningSuppressor
   function match(BugInstance) in line 13
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses function equals(Object) defined in edu::umd::cs::findbugs::MethodAnnotation
   function MethodWarningSuppressor(String,ClassAnnotation,MethodAnnotation) in line 7
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/model/ClassFeatureSet.java
module edu::umd::cs::findbugs::model::ClassFeatureSet
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   function addFeature(String) in line 213
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable featureSet defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function featureIterator() in line 217
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable featureSet defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function getClassName() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function getNumFeatures() in line 209
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable featureSet defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function hasFeature(String) in line 221
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable featureSet defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function initialize(JavaClass) in line 82
      protection public
      30 lines of code
      1 parameters
      7 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function addFeature(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable CLASS_NAME_KEY defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function transformClassName(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function isSynthetic(FieldOrMethod) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function transformMethodSignature(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function overridesSuperclassMethod(JavaClass,Method) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable METHOD_NAME_KEY defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable MIN_CODE_LENGTH defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable CODE_LENGTH_KEY defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable FIELD_NAME_KEY defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function transformSignature(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function isInterface() in line 197
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSynthetic(FieldOrMethod) in line 161
      17 lines of code
      1 parameters
      4 conditional paths
   function isUnlikelyToBeRenamed(String) in line 251
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 352
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses function ClassFeatureSet() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function similarity(ClassFeatureSet,ClassFeatureSet) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function similarTo(ClassFeatureSet) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function overridesSuperclassMethod(JavaClass,Method) in line 124
      29 lines of code
      2 parameters
      7 conditional paths
      uses variable INSTANCE_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
   function setClassName(String) in line 190
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function setInterface(boolean) in line 205
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isInterface() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function similarity(ClassFeatureSet,ClassFeatureSet) in line 324
      protection public
      23 lines of code
      2 parameters
      5 conditional paths
      uses variable isInterface defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function getNumFeatures() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable MIN_FEATURES defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function getClassName() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable EXACT_CLASS_NAME_MATCH defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function featureIterator() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function hasFeature(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function similarTo(ClassFeatureSet) in line 348
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function similarity(ClassFeatureSet,ClassFeatureSet) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable MIN_MATCH defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function transformClassName(String) in line 232
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function isUnlikelyToBeRenamed(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function transformMethodSignature(String) in line 263
      protection public
      16 lines of code
      1 parameters
      2 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function transformSignature(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function transformSignature(String) in line 288
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses function transformClassName(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function writeXML(XMLOutput) in line 380
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable className defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function featureIterator() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable FEATURE_ELEMENT_NAME defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function ClassFeatureSet() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable CLASS_NAME_KEY in line 49
      protection public
   variable className in line 57
   variable CODE_LENGTH_KEY in line 53
      protection public
   variable ELEMENT_NAME in line 368
      protection public
   variable EXACT_CLASS_NAME_MATCH in line 322
      protection public
   variable FEATURE_ELEMENT_NAME in line 370
      protection public
   variable featureSet in line 61
   variable FIELD_NAME_KEY in line 55
      protection public
   variable isInterface in line 59
   variable METHOD_NAME_KEY in line 51
      protection public
   variable MIN_CODE_LENGTH in line 73
      protection public
   variable MIN_FEATURES in line 311
      protection public
   variable MIN_MATCH in line 316
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/model/ClassNameRewriter.java
module edu::umd::cs::findbugs::model::ClassNameRewriter
   function rewriteClassName(String) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/model/ClassNameRewriterUtil.java
module edu::umd::cs::findbugs::model::ClassNameRewriterUtil
   abstract class
   function convertFieldAnnotation(ClassNameRewriter,FieldAnnotation) in line 115
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function rewriteClassName(String) defined in edu::umd::cs::findbugs::model::ClassNameRewriter
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getFieldName() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function rewriteSignature(ClassNameRewriter,String) defined in edu::umd::cs::findbugs::model::ClassNameRewriterUtil
      uses function getFieldSignature() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable isStatic defined in edu::umd::cs::findbugs::FieldAnnotation
   function convertMethodAnnotation(ClassNameRewriter,MethodAnnotation) in line 95
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function rewriteClassName(String) defined in edu::umd::cs::findbugs::model::ClassNameRewriter
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function rewriteMethodSignature(ClassNameRewriter,String) defined in edu::umd::cs::findbugs::model::ClassNameRewriterUtil
      uses function getMethodSignature() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable isStatic defined in edu::umd::cs::findbugs::MethodAnnotation
   function rewriteMethodSignature(ClassNameRewriter,String) in line 44
      protection public
      19 lines of code
      2 parameters
      3 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function rewriteSignature(ClassNameRewriter,String) defined in edu::umd::cs::findbugs::model::ClassNameRewriterUtil
      uses function getReturnTypeSignature() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function rewriteSignature(ClassNameRewriter,String) in line 73
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function rewriteClassName(String) defined in edu::umd::cs::findbugs::model::ClassNameRewriter
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/model/IdentityClassNameRewriter.java
module edu::umd::cs::findbugs::model::IdentityClassNameRewriter
   inherits from edu::umd::cs::findbugs::model::ClassNameRewriter
   inherits from java::io::Serializable
   function instance() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::model::IdentityClassNameRewriter
   function rewriteClassName(String) in line 48
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   variable serialVersionUID in line 33
   variable theInstance in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/model/MovedClassMap.java
module edu::umd::cs::findbugs::model::MovedClassMap
   inherits from edu::umd::cs::findbugs::model::ClassNameRewriter
   function buildClassSet(BugCollection) in line 109
      16 lines of code
      1 parameters
      4 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::BugCollection
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
   function buildShortNameToFullNameMap(Set< String >) in line 133
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getShortClassName(String) defined in edu::umd::cs::findbugs::model::MovedClassMap
   function execute() in line 57
      protection public
      32 lines of code
      0 parameters
      4 conditional paths
      uses function buildClassSet(BugCollection) defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses variable before defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses variable after defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses function buildShortNameToFullNameMap(Set< String >) defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses function getShortClassName(String) defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses variable DEBUG defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses variable rewriteMap defined in edu::umd::cs::findbugs::model::MovedClassMap
   function getShortClassName(String) in line 149
      7 lines of code
      1 parameters
      2 conditional paths
   function isEmpty() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rewriteMap defined in edu::umd::cs::findbugs::model::MovedClassMap
   function rewriteClassName(String) in line 95
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable rewriteMap defined in edu::umd::cs::findbugs::model::MovedClassMap
   function MovedClassMap(BugCollection,BugCollection) in line 51
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable before defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses variable after defined in edu::umd::cs::findbugs::model::MovedClassMap
   variable after in line 47
   variable before in line 45
   variable DEBUG in line 43
   variable rewriteMap in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/model/RegenerateClassFeatures.java
module edu::umd::cs::findbugs::model::RegenerateClassFeatures
   function execute() in line 51
      protection public
      32 lines of code
      0 parameters
      5 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::model::RegenerateClassFeatures
      uses function clearClassFeatures() defined in edu::umd::cs::findbugs::BugCollection
      uses variable jarFile defined in edu::umd::cs::findbugs::model::RegenerateClassFeatures
      uses function initialize(JavaClass) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function setClassFeatureSet(ClassFeatureSet) defined in edu::umd::cs::findbugs::BugCollection
   function getBugCollection() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::model::RegenerateClassFeatures
   function main(String[]) in line 91
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::model::RegenerateClassFeatures
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function RegenerateClassFeatures(BugCollection,String) defined in edu::umd::cs::findbugs::model::RegenerateClassFeatures
      uses function writeXML(String) defined in edu::umd::cs::findbugs::BugCollection
   function RegenerateClassFeatures(BugCollection,String) in line 46
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::model::RegenerateClassFeatures
      uses variable jarFile defined in edu::umd::cs::findbugs::model::RegenerateClassFeatures
   variable bugCollection in line 42
   variable jarFile in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/model/SimilarClassFinder.java
module edu::umd::cs::findbugs::model::SimilarClassFinder
   function add(ClassFeatureSet) in line 36
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable similarClassSetList defined in edu::umd::cs::findbugs::model::SimilarClassFinder
      uses function addMember(ClassFeatureSet) defined in edu::umd::cs::findbugs::model::SimilarClassSet
   function similarClassSetIterator() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable similarClassSetList defined in edu::umd::cs::findbugs::model::SimilarClassFinder
   function size() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable similarClassSetList defined in edu::umd::cs::findbugs::model::SimilarClassFinder
   function SimilarClassFinder() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable similarClassSetList in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/model/SimilarClassSet.java
module edu::umd::cs::findbugs::model::SimilarClassSet
   function addMember(ClassFeatureSet) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable memberList defined in edu::umd::cs::findbugs::model::SimilarClassSet
   function getRepresentativeClassName() in line 50
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable memberList defined in edu::umd::cs::findbugs::model::SimilarClassSet
   function shouldContain(ClassFeatureSet) in line 37
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable memberList defined in edu::umd::cs::findbugs::model::SimilarClassSet
      uses function similarTo(ClassFeatureSet) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function size() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable memberList defined in edu::umd::cs::findbugs::model::SimilarClassSet
   function SimilarClassSet() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable memberList in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/NewResults.java
module edu::umd::cs::findbugs::NewResults
   function execute() in line 43
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable newCollection defined in edu::umd::cs::findbugs::NewResults
      uses function iterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable origCollection defined in edu::umd::cs::findbugs::NewResults
      uses function contains(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
   function main(String[]) in line 57
      protection public
      16 lines of code
      1 parameters
      2 conditional paths
      uses function NewResults(String,String) defined in edu::umd::cs::findbugs::NewResults
      uses function execute() defined in edu::umd::cs::findbugs::NewResults
      uses function writeXML(OutputStream) defined in edu::umd::cs::findbugs::SortedBugCollection
   function NewResults(String,String) in line 32
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable origCollection defined in edu::umd::cs::findbugs::NewResults
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable newCollection defined in edu::umd::cs::findbugs::NewResults
   function NewResults(SortedBugCollection,SortedBugCollection) in line 38
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable origCollection defined in edu::umd::cs::findbugs::NewResults
      uses variable newCollection defined in edu::umd::cs::findbugs::NewResults
   variable newCollection in line 30
   variable origCollection in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/NoClassesFoundToAnalyzeException.java
module edu::umd::cs::findbugs::NoClassesFoundToAnalyzeException
   inherits from java::io::IOException
   function getClassPath() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable f_classPath defined in edu::umd::cs::findbugs::NoClassesFoundToAnalyzeException
   function NoClassesFoundToAnalyzeException(final IClassPath) in line 55
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable f_classPath defined in edu::umd::cs::findbugs::NoClassesFoundToAnalyzeException
   variable f_classPath in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/NonReportingDetector.java
module edu::umd::cs::findbugs::NonReportingDetector
   inherits from edu::umd::cs::findbugs::FirstPassDetector
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/NonReportingDetectorToDetector2Adapter.java
module edu::umd::cs::findbugs::NonReportingDetectorToDetector2Adapter
   inherits from edu::umd::cs::findbugs::DetectorToDetector2Adapter
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function NonReportingDetectorToDetector2Adapter(Detector) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detector defined in edu::umd::cs::findbugs::DetectorToDetector2Adapter
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/NoOpFindBugsProgress.java
module edu::umd::cs::findbugs::NoOpFindBugsProgress
   inherits from edu::umd::cs::findbugs::FindBugsProgress
   function finishArchive() in line 12
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function finishClass() in line 20
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function finishPerClassAnalysis() in line 24
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function predictPassCount(int[]) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function reportNumberOfArchives(int) in line 8
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function startAnalysis(int) in line 16
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function startArchive(String) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/Obfuscate.java
module edu::umd::cs::findbugs::Obfuscate
   function hashClass(@DottedClassName String) in line 58
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function hashData(String) defined in edu::umd::cs::findbugs::Obfuscate
   function hashData(String) in line 36
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
   function hashFieldSignature(String) in line 94
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function hashData(String) defined in edu::umd::cs::findbugs::Obfuscate
   function hashFilename(String) in line 49
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function hashData(String) defined in edu::umd::cs::findbugs::Obfuscate
   function hashMethodSignature(String) in line 102
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function hashSignature(String) defined in edu::umd::cs::findbugs::Obfuscate
      uses function getReturnTypeSignature() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getMethodSignature() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function hashData(String) defined in edu::umd::cs::findbugs::Obfuscate
      uses function hashClass(@DottedClassName String) defined in edu::umd::cs::findbugs::Obfuscate
      uses variable isStatic defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getFieldName() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getFieldSignature() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable isStatic defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getTypeDescriptor() defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function getValue() defined in edu::umd::cs::findbugs::IntAnnotation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::IntAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::IntAnnotation
      uses function getValue() defined in edu::umd::cs::findbugs::StringAnnotation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::StringAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::StringAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function hashFilename(String) defined in edu::umd::cs::findbugs::Obfuscate
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getStartBytecode() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndBytecode() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getName() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function getRegister() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function getPC() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function hashSignature(String) in line 65
      protection public
      28 lines of code
      1 parameters
      14 conditional paths
      uses function hashFieldSignature(String) defined in edu::umd::cs::findbugs::Obfuscate
   function obfuscate(BugInstance) in line 191
      protection public
      59 lines of code
      1 parameters
      2 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getAnnotations() defined in edu::umd::cs::findbugs::BugInstance
      uses function setOldInstanceHash(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function hashData(String) defined in edu::umd::cs::findbugs::Obfuscate
      uses function getInstanceHash() defined in edu::umd::cs::findbugs::BugInstance
      uses function setHistory(BugInstance) defined in edu::umd::cs::findbugs::BugInstance
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/OpcodeStack.java
module edu::umd::cs::findbugs::OpcodeStack
   inherits from edu::umd::cs::findbugs::visitclass::Constants2
   function addBoxedType(Class<?>...) in line 2352
      11 lines of code
      1 parameters
      3 conditional paths
   function addJumpValue(int,int) in line 2842
      31 lines of code
      2 parameters
      9 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable methodName defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses function setJumpInfoChangedByBackwardBranch(String,int,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpEntryLocations defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpStackEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses function mergeLists(List< Item >,List< Item >,boolean) defined in edu::umd::cs::findbugs::OpcodeStack
   function clear() in line 2695
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
   function constantToDouble(Item) in line 2153
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function constantToFloat(Item) in line 2149
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function constantToInt(Item) in line 2138
      10 lines of code
      1 parameters
      3 conditional paths
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function constantToLong(Item) in line 2157
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function eraseKnowledgeOf(XField) in line 2103
      15 lines of code
      1 parameters
      6 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
   function getExceptionSig(DismantleBytecode,CodeException) in line 1082
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getItemMethodInvokedOn(DismantleBytecode) in line 3398
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function getOpcode() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
   function getJumpInfo() in line 2934
      16 lines of code
      0 parameters
      4 conditional paths
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
   function getJumpInfoFromStackMap() in line 2950
      18 lines of code
      0 parameters
      4 conditional paths
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
   function getLastUpdate(int) in line 1212
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable lastUpdate defined in edu::umd::cs::findbugs::OpcodeStack
   function getLVValue(int) in line 3494
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
   function getNumLastUpdates() in line 1219
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastUpdate defined in edu::umd::cs::findbugs::OpcodeStack
   function getNumLocalValues() in line 3507
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
   function getStackDepth() in line 3030
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
   function getStackItem(int) in line 3034
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getStringFromIndex(DismantleBytecode,int) in line 3412
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function handleDcmp(int) in line 2161
      25 lines of code
      1 parameters
      6 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function constantToDouble(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleDup() in line 2239
      6 lines of code
      0 parameters
      1 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleDup2() in line 2256
      14 lines of code
      0 parameters
      2 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSize() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleDup2X1() in line 2271
      23 lines of code
      0 parameters
      2 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleDup2X2() in line 2295
      35 lines of code
      0 parameters
      4 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isWide() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleDupX1() in line 2246
      9 lines of code
      0 parameters
      1 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleDupX2() in line 2331
      20 lines of code
      0 parameters
      2 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleFcmp(int) in line 2187
      24 lines of code
      1 parameters
      6 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function constantToFloat(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleLcmp() in line 2212
      19 lines of code
      0 parameters
      4 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function constantToLong(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleSwap() in line 2232
      6 lines of code
      0 parameters
      1 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function hasIncomingBranches(int) in line 1077
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable jumpEntryLocations defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpEntries defined in edu::umd::cs::findbugs::OpcodeStack
   function initialize() in line 2887
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function setTop(boolean) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpStackEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpEntryLocations defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lastUpdate defined in edu::umd::cs::findbugs::OpcodeStack
   function isJumpTarget(int) in line 2838
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable jumpEntryLocations defined in edu::umd::cs::findbugs::OpcodeStack
   function isTop() in line 3521
      protection public
      6 lines of code
      0 parameters
      3 conditional paths
      uses variable top defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable reachOnlyByBranch defined in edu::umd::cs::findbugs::OpcodeStack
      uses function setTop(boolean) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpInfoChangedByBackwardsBranch defined in edu::umd::cs::findbugs::OpcodeStack
   function learnFrom(JumpInfo) in line 2878
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable jumpEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpStackEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpEntryLocations defined in edu::umd::cs::findbugs::OpcodeStack
   function markConstantValueUnknown(Item) in line 2369
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getLVValue(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function mergeJumps(DismantleBytecode) in line 1093
      protection public
      111 lines of code
      1 parameters
      23 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable top defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable NONZERO_MEANS_NULL defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable ZERO_MEANS_NULL defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isTop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function setCouldBeZero(boolean) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable jumpEntryLocations defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpStackEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable DEBUG2 defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses function setTop(boolean) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function mergeLists(List< Item >,List< Item >,boolean) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getExceptionSig(DismantleBytecode,CodeException) defined in edu::umd::cs::findbugs::OpcodeStack
   function mergeLists(List< Item >,List< Item >,boolean) in line 2642
      52 lines of code
      3 parameters
      9 conditional paths
      uses variable DEBUG2 defined in edu::umd::cs::findbugs::OpcodeStack
      uses function merge(Item,Item) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function equals(Object) defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function pop() in line 3052
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
   function pop(int) in line 3075
      5 lines of code
      1 parameters
      2 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
   function precomputation(DismantleBytecode) in line 2119
      protection public
      18 lines of code
      1 parameters
      6 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function cloneAndSetSpecialKind(@SpecialKind int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NON_NEGATIVE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
   function printJumpEntries() in line 2700
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable jumpEntryLocations defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpStackEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpEntries defined in edu::umd::cs::findbugs::OpcodeStack
   function processInvokeDynamic(DismantleBytecode) in line 2633
      8 lines of code
      1 parameters
      1 conditional paths
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pushBySignature(String,DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
   function processMethodCall(DismantleBytecode,int) in line 2379
      253 lines of code
      2 parameters
      52 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable methodName defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable source defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NOT_SPECIAL defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable SIGNED_BYTE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NON_NEGATIVE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function markConstantValueUnknown(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isServletWriter() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isServletParameterTainted() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable injection defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setSpecialKind(@SpecialKind int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable FILE_OPENED_IN_APPEND_MODE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setPC(int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSpecialKind() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setServletParameterTainted() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable JAVA_UTIL_ARRAYS_ARRAY_LIST defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pushByInvoke(DismantleBytecode,boolean) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function setIsServletWriter() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setLVValue(int,Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable RANDOM_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable MATH_ABS_OF_HASHCODE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable MATH_ABS_OF_RANDOM defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable MATH_ABS defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable SERVLET_REQUEST_TAINTED defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function push(Item) in line 3081
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByConstant(DismantleBytecode,Constant) in line 3085
      19 lines of code
      2 parameters
      7 conditional paths
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStringFromIndex(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByDoubleMath(int,Item,Item) in line 3350
      27 lines of code
      3 parameters
      8 conditional paths
      uses variable FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function constantToDouble(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable NASTY_FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setSpecialKind(@SpecialKind int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByFloatMath(int,Item,Item) in line 3323
      26 lines of code
      3 parameters
      8 conditional paths
      uses variable FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function constantToFloat(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable NASTY_FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setSpecialKind(@SpecialKind int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByIntMath(DismantleBytecode,int,Item,Item) in line 3119
      151 lines of code
      4 parameters
      46 conditional paths
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function constantToInt(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function setSpecialKind(@SpecialKind int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable LOW_8_BITS_CLEAR defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NON_NEGATIVE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSpecialKind() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable ZERO_MEANS_NULL defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setPC(int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getPC() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NONZERO_MEANS_NULL defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable INTEGER_SUM defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable AVERAGE_COMPUTED_USING_DIVISION defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NOT_SPECIAL defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RANDOM_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RANDOM_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function checkForIntegerMinValue() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSpecialKindForRemainder() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function pushByInvoke(DismantleBytecode,boolean) in line 3378
      19 lines of code
      2 parameters
      4 conditional paths
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable source defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable pc defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function replace(int,Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pushBySignature(String,DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByLocalLoad(String,int) in line 3463
      18 lines of code
      2 parameters
      4 conditional paths
      uses function getLVValue(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByLocalObjectLoad(DismantleBytecode,int) in line 3105
      13 lines of code
      2 parameters
      3 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function pushByLocalLoad(String,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByLocalStore(int) in line 3433
      29 lines of code
      1 parameters
      11 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setLVValue(int,Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByLongMath(int,Item,Item) in line 3271
      51 lines of code
      3 parameters
      19 conditional paths
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function constantToLong(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function constantToInt(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function setSpecialKind(@SpecialKind int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable LOW_8_BITS_CLEAR defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushBySignature(String,DismantleBytecode) in line 3417
      15 lines of code
      2 parameters
      5 conditional paths
      uses function setPC(int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function setSpecialKind(@SpecialKind int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable SIGNED_BYTE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NON_NEGATIVE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function replace(int,Item) in line 3056
      protection public
      13 lines of code
      2 parameters
      2 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function replaceTop(Item) in line 3070
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function resetForMethodEntry(final DismantleBytecode) in line 2901
      protection public
      25 lines of code
      1 parameters
      6 conditional paths
      uses function initialize() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function resetForMethodEntry0(PreorderVisitor) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable useIterativeAnalysis defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getJumpInfo() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getJumpInfoFromStackMap() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function learnFrom(JumpInfo) defined in edu::umd::cs::findbugs::OpcodeStack
   function resetForMethodEntry0(PreorderVisitor) in line 2982
      3 lines of code
      1 parameters
      8 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodName defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable top defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable seenTransferOfControl defined in edu::umd::cs::findbugs::OpcodeStack
      uses function initialArgument(String,int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setLVValue(int,Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSize() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function sawOpcode(DismantleBytecode,int) in line 1223
      protection public
      879 lines of code
      2 parameters
      265 conditional paths
      uses variable isRegisterStore defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function setLastUpdate(int,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function precomputation(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isTop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getMaxPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPrevOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getCodeByte(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function pushByLocalObjectLoad(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pushByLocalLoad(String,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getXFieldOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isComplete() defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::AccessibleEntity
      uses function getSummary(XField) defined in edu::umd::cs::findbugs::ba::FieldSummary
      uses function setLoadedFromField(XField,int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setPC(int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getFieldName() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function setSpecialKind(@SpecialKind int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable FILE_SEPARATOR_STRING defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstantRefOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function pushByConstant(DismantleBytecode,Constant) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable seenTransferOfControl defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function valueCouldBeNegative() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSpecialKind() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable NOT_SPECIAL defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses function addJumpValue(int,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSwitchOffsets() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function eraseKnowledgeOf(XField) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isNull() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setTop(boolean) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function hasConstantValue(int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function mightRarelyBeNegative() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSize() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function handleDup() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleDup2() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleDupX1() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleDupX2() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleDup2X1() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleDup2X2() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getLVValue(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getIntConstant() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function pushByIntMath(DismantleBytecode,int,Item,Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pushByLocalStore(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function handleSwap() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NON_NEGATIVE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable SIGNED_BYTE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function constantToInt(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function constantToLong(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function constantToFloat(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function constantToDouble(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pushByLongMath(int,Item,Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleLcmp() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleFcmp(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleDcmp(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pushByFloatMath(int,Item,Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pushByDoubleMath(int,Item,Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function setCouldBeNegative() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RESULT_OF_I2L defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RESULT_OF_L2I defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NEWLY_ALLOCATED defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function pushBySignature(String,DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function processMethodCall(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function processInvokeDynamic(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
      uses function clear() defined in edu::umd::cs::findbugs::OpcodeStack
   function setJumpInfoChangedByBackwardBranch(String,int,int) in line 2969
      protection public
      12 lines of code
      3 parameters
      3 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
   function setLastUpdate(int,int) in line 1205
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable lastUpdate defined in edu::umd::cs::findbugs::OpcodeStack
   function setLVValue(int,Item) in line 3482
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable useIterativeAnalysis defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable seenTransferOfControl defined in edu::umd::cs::findbugs::OpcodeStack
      uses function merge(Item,Item) defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function setTop(boolean) in line 3511
      9 lines of code
      1 parameters
      4 conditional paths
      uses variable top defined in edu::umd::cs::findbugs::OpcodeStack
   function toString() in line 1064
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
   function OpcodeStack() in line 1071
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lastUpdate defined in edu::umd::cs::findbugs::OpcodeStack
   variable DEBUG in line 122
   variable DEBUG2 in line 124
   variable JAVA_UTIL_ARRAYS_ARRAY_LIST in line 120
   variable jumpEntries in line 161
   variable jumpEntryLocations in line 165
   variable jumpInfoChangedByBackwardsBranch in line 159
   variable jumpStackEntries in line 163
   variable lastUpdate in line 133
   variable lvValues in line 131
   variable methodName in line 2874
   variable reachOnlyByBranch in line 179
   variable seenTransferOfControl in line 148
   variable stack in line 129
   variable top in line 135
   variable useIterativeAnalysis in line 150
module edu::umd::cs::findbugs::OpcodeStack::CustomUserValue
module edu::umd::cs::findbugs::OpcodeStack::HttpParameterInjection
module edu::umd::cs::findbugs::OpcodeStack::Item
   function checkForIntegerMinValue() in line 964
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable RANDOM_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function clearNewlyAllocated() in line 1035
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
   function cloneAndSetSpecialKind(@SpecialKind int) in line 842
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function couldBeZero() in line 888
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function defineNewSpecialKind(String) in line 274
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 363
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable source defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable userValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable injection defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable flags defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable fieldLoadedFromRegister defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getConstant() in line 817
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getElementSignature() in line 773
      protection public
      15 lines of code
      0 parameters
      4 conditional paths
   function getFieldAnnotation() in line 823
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFieldLoadedFromRegister() in line 661
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHttpParameterName() in line 672
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
   function getInjectionPC() in line 682
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
   function getJavaClass() in line 751
      protection public
      16 lines of code
      0 parameters
      3 conditional paths
   function getPC() in line 325
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRegisterNumber() in line 804
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getReturnValueOf() in line 881
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function getSignature() in line 808
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSize() in line 318
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function getSpecialKind() in line 852
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSpecialKindForAbs() in line 941
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable HASHCODE_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable MATH_ABS_OF_HASHCODE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RANDOM_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable MATH_ABS_OF_RANDOM defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable MATH_ABS defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getSpecialKindForRemainder() in line 952
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable HASHCODE_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RANDOM_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RANDOM_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NOT_SPECIAL defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getUserValue() in line 903
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getXField() in line 827
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function hasConstantValue(int) in line 1048
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function hasConstantValue(long) in line 1055
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function hashCode() in line 338
      protection public
      20 lines of code
      0 parameters
      4 conditional paths
   function initialArgument(String,int) in line 574
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function setInitialParameter(boolean) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function isArray() in line 768
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isBooleanNullnessValue() in line 859
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isCouldBeZero() in line 1000
      4 lines of code
      0 parameters
      1 conditional paths
   function isInitialParameter() in line 985
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isNewlyAllocated() in line 1044
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isNonNegative() in line 789
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
   function isNull() in line 1028
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPrimitive() in line 800
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isServletParameterTainted() in line 907
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable SERVLET_REQUEST_TAINTED defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function isServletWriter() in line 919
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable SERVLET_OUTPUT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
   function isWide() in line 333
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isZero() in line 1005
      3 lines of code
      0 parameters
      1 conditional paths
   function makeCrossMethod() in line 312
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function merge(Item,Item) in line 500
      protection public
      68 lines of code
      2 parameters
      23 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSpecialKind() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable flags defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setCouldBeZero(boolean) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isCouldBeZero() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable pc defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isNull() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable source defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable userValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable fieldLoadedFromRegister defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable injection defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
   function mightRarelyBeNegative() in line 969
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MATH_ABS_OF_RANDOM defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable MATH_ABS_OF_HASHCODE defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function mustBeZero() in line 892
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function nullItem(String) in line 742
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setNull(boolean) defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function setCouldBeNegative() in line 730
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
   function setCouldBeZero(boolean) in line 993
      3 lines of code
      1 parameters
      1 conditional paths
   function setFlag(boolean,int) in line 1017
      7 lines of code
      2 parameters
      2 conditional paths
   function setInitialParameter(boolean) in line 978
      3 lines of code
      1 parameters
      1 conditional paths
   function setIsServletWriter() in line 914
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable SERVLET_OUTPUT defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function setLoadedFromField(XField,int) in line 665
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function setNull(boolean) in line 1013
      3 lines of code
      1 parameters
      1 conditional paths
   function setPC(int) in line 329
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setServletParameterTainted() in line 911
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable SERVLET_REQUEST_TAINTED defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function setSpecialKind(@SpecialKind int) in line 838
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSpecialKindFromSignature() in line 717
      12 lines of code
      0 parameters
      3 conditional paths
   function setUserValue(@Nullable Object) in line 871
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 378
      protection public
      121 lines of code
      0 parameters
      34 conditional paths
   function typeOnly(String) in line 584
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function setSpecialKind(@SpecialKind int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function usesTwoSlots() in line 359
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function valueCouldBeNegative() in line 933
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable RANDOM_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable SIGNED_BYTE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RANDOM_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable MATH_ABS_OF_RANDOM defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable MATH_ABS_OF_HASHCODE defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function Item(String,int) in line 569
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function Item(String) in line 581
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function Item(Item) in line 589
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable source defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable fieldLoadedFromRegister defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable userValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable injection defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable flags defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable pc defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function Item(Item,String) in line 604
      protection public
      27 lines of code
      2 parameters
      9 conditional paths
   function Item(Item,int) in line 632
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function Item(String,FieldAnnotation) in line 637
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
   function Item(String,FieldAnnotation,int) in line 646
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
   function Item(String,Object) in line 692
      protection public
      24 lines of code
      2 parameters
      7 conditional paths
   function Item() in line 736
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   variable AVERAGE_COMPUTED_USING_DIVISION in line 212
      protection public
   variable constValue in line 294
   variable COULD_BE_ZERO_FLAG in line 283
   variable fieldLoadedFromRegister in line 310
   variable FILE_OPENED_IN_APPEND_MODE in line 242
      protection public
   variable FILE_SEPARATOR_STRING in line 224
      protection public
   variable flags in line 301
   variable FLOAT_MATH in line 215
      protection public
   variable HASHCODE_INT in line 206
      protection public
   variable HASHCODE_INT_REMAINDER in line 221
      protection public
   variable injection in line 308
   variable INTEGER_SUM in line 209
      protection public
   variable IS_INITIAL_PARAMETER_FLAG in line 281
   variable IS_NULL_FLAG in line 285
   variable LOW_8_BITS_CLEAR in line 203
      protection public
   variable MATH_ABS in line 227
      protection public
   variable MATH_ABS_OF_HASHCODE in line 233
      protection public
   variable MATH_ABS_OF_RANDOM in line 230
      protection public
   variable NASTY_FLOAT_MATH in line 239
      protection public
   variable NEWLY_ALLOCATED in line 248
      protection public
   variable nextSpecialKind in line 271
   variable NON_NEGATIVE in line 236
      protection public
   variable NONZERO_MEANS_NULL in line 254
      protection public
   variable NOT_SPECIAL in line 194
      protection public
   variable pc in line 299
   variable RANDOM_INT in line 200
      protection public
   variable RANDOM_INT_REMAINDER in line 218
      protection public
   variable registerNumber in line 303
   variable RESULT_OF_I2L in line 257
      protection public
   variable RESULT_OF_L2I in line 260
      protection public
   variable SERVLET_OUTPUT in line 263
      protection public
   variable SERVLET_REQUEST_TAINTED in line 245
      protection public
   variable signature in line 292
   variable SIGNED_BYTE in line 197
      protection public
   variable source in line 297
   variable specialKind in line 290
   variable specialKindNames in line 269
      protection public
   variable TYPE_ONLY in line 266
      protection public
   variable UNKNOWN in line 287
      protection public
   variable userValue in line 306
   variable ZERO_MEANS_NULL in line 251
      protection public
module edu::umd::cs::findbugs::OpcodeStack::Item::SpecialKind
module edu::umd::cs::findbugs::OpcodeStack::JumpInfo
   function getNextJump(int) in line 2725
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable jumpEntryLocations defined in edu::umd::cs::findbugs::OpcodeStack
module edu::umd::cs::findbugs::OpcodeStack::JumpInfoFactory
   inherits from AnalysisFactory< JumpInfo >
   function analyze(IAnalysisCache,MethodDescriptor) in line 2738
      protection public
      12 lines of code
      2 parameters
      7 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses function OpcodeStack() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function computeJumpInfo(JavaClass,Method,JumpStackComputation) in line 2795
      protection public
      41 lines of code
      3 parameters
      7 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
      uses function printJumpEntries() defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpStackEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpEntryLocations defined in edu::umd::cs::findbugs::OpcodeStack
   function JumpInfoFactory() in line 2733
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::OpcodeStack::JumpInfoFactory::JumpStackComputation
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function getStack() in line 2761
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function sawOpcode(int) in line 2781
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function visitCode(Code) in line 2766
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function JumpStackComputation(MethodDescriptor) in line 2755
      3 lines of code
      1 parameters
      1 conditional paths
   variable stack in line 2759
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/PackageMemberAnnotation.java
module edu::umd::cs::findbugs::PackageMemberAnnotation
   inherits from edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   abstract class
   function computeSourceFile(String) in line 55
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function lookupSourceFile(@Nonnull @DottedClassName String) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable UNKNOWN_SOURCE_FILE defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function format(String,ClassAnnotation) in line 137
      protection public
      18 lines of code
      2 parameters
      6 conditional paths
      uses function shorten(String,String) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function formatPackageMember(String,ClassAnnotation) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function formatPackageMember(String,ClassAnnotation) in line 209
      1 lines of code
      2 parameters
      1 conditional paths
   function getClassDescriptor() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassDescriptorForDottedClassName(@DottedClassName String) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function getClassName() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function getDescription() in line 162
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function getPackageName() in line 118
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function getSimpleClassName() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function getSlashedClassName() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function isSignificant() in line 230
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function removePackage(String) in line 182
      7 lines of code
      1 parameters
      2 conditional paths
   function removePackageName(String) in line 193
      7 lines of code
      1 parameters
      2 conditional paths
      uses function formatPackageMember(String,ClassAnnotation) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function setDescription(String) in line 157
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function shorten(String,String) in line 171
      10 lines of code
      2 parameters
      3 conditional paths
   function toString() in line 218
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(ClassAnnotation) in line 223
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getAnnotationDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses variable description defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function format(String,ClassAnnotation) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function PackageMemberAnnotation(@DottedClassName String,String) in line 51
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable description defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function computeSourceFile(String) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function PackageMemberAnnotation(@DottedClassName String,String,String) in line 71
      15 lines of code
      3 parameters
      4 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable sourceFileName defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses variable description defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   variable className in line 41
   variable description in line 43
   variable serialVersionUID in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/PackageStats.java
module edu::umd::cs::findbugs::BugCounts
   function addError(BugInstance) in line 49
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function clearBugCounts() in line 75
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function ensureNonnullBugCounts() in line 55
      6 lines of code
      0 parameters
      1 conditional paths
   function getBugsAtPriority(int) in line 68
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function getTotalBugs() in line 61
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function writeBugPriorities(XMLOutput) in line 89
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function writeBugPriorities(XMLOutput,@Nonnull int) in line 95
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   variable nBugs in line 46
module edu::umd::cs::findbugs::PackageStats
   inherits from edu::umd::cs::findbugs::BugCounts
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   function addClass(String,String,boolean,int) in line 247
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function addClass(String,String,boolean,int,boolean) in line 251
      protection public
      6 lines of code
      5 parameters
      1 conditional paths
      uses function setInterface(boolean) defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function setSize(int) defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function addClass(ClassStats) in line 258
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function addClass(ClassStats,boolean) in line 262
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable size defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function addError(BugInstance) in line 239
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function clearBugCounts() in line 337
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function getClassStats() in line 209
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getClassStats(String,String) in line 222
      10 lines of code
      2 parameters
      2 conditional paths
   function getClassStatsOrNull(String) in line 233
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getNumClasses() in line 277
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPackageName() in line 273
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSortedClassStats() in line 312
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function purgeClassesThatDontMatch(Pattern) in line 349
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function recomputeFromClassStats() in line 320
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
   function setNumClasses(int) in line 281
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSize(int) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function size() in line 213
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function writeXML(XMLOutput) in line 286
      protection public
      25 lines of code
      1 parameters
      4 conditional paths
   function PackageStats(String) in line 199
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function PackageStats(String,int,int) in line 203
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable ALL_ERRORS in line 180
      protection public
   variable ELEMENT_NAME in line 178
      protection public
   variable numClasses in line 185
   variable packageMembers in line 197
   variable packageName in line 182
   variable size in line 183
module edu::umd::cs::findbugs::PackageStats::ClassStats
   inherits from edu::umd::cs::findbugs::BugCounts
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   inherits from Cloneable
   function clone() in line 123
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function getName() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSourceFile() in line 149
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setInterface(boolean) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSize(int) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function size() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function writeXML(XMLOutput) in line 154
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
   function ClassStats(String,String) in line 117
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable isInterface in line 113
   variable name in line 109
   variable size in line 115
   variable sourceFile in line 111
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/PackageWarningSuppressor.java
module edu::umd::cs::findbugs::PackageWarningSuppressor
   inherits from edu::umd::cs::findbugs::WarningSuppressor
   function getPackageName() in line 12
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function match(BugInstance) in line 17
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function PackageWarningSuppressor(String,String) in line 7
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ParameterWarningSuppressor.java
module edu::umd::cs::findbugs::ParameterWarningSuppressor
   inherits from edu::umd::cs::findbugs::ClassWarningSuppressor
   function match(BugInstance) in line 16
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryLocalVariableAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function equals(Object) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getRegister() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function ParameterWarningSuppressor(String,ClassAnnotation,MethodAnnotation,int) in line 9
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/plan/AnalysisPass.java
module edu::umd::cs::findbugs::plan::AnalysisPass
   function addToPass(DetectorFactory) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function append(DetectorFactory) in line 75
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable memberSet defined in edu::umd::cs::findbugs::plan::AnalysisPass
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
   function contains(DetectorFactory) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable memberSet defined in edu::umd::cs::findbugs::plan::AnalysisPass
   function getMembers() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable memberSet defined in edu::umd::cs::findbugs::plan::AnalysisPass
   function getUnpositionedMembers() in line 95
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable memberSet defined in edu::umd::cs::findbugs::plan::AnalysisPass
      uses variable orderedFactoryList defined in edu::umd::cs::findbugs::plan::AnalysisPass
   function instantiateDetector2sInPass(BugReporter) in line 128
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable orderedFactoryList defined in edu::umd::cs::findbugs::plan::AnalysisPass
      uses function iterator() defined in edu::umd::cs::findbugs::plan::AnalysisPass
   function instantiateDetectorsInPass(BugReporter) in line 149
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses variable orderedFactoryList defined in edu::umd::cs::findbugs::plan::AnalysisPass
   function iterator() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable orderedFactoryList defined in edu::umd::cs::findbugs::plan::AnalysisPass
   function AnalysisPass() in line 52
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable memberSet in line 43
   variable orderedFactoryList in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/plan/ByInterfaceDetectorFactorySelector.java
module edu::umd::cs::findbugs::plan::ByInterfaceDetectorFactorySelector
   inherits from edu::umd::cs::findbugs::plan::DetectorFactorySelector
   function selectFactory(DetectorFactory) in line 42
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::plan::ByInterfaceDetectorFactorySelector
      uses function getPlugin() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function isDetectorClassSubtypeOf(Class<?>) defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable detectorInterface defined in edu::umd::cs::findbugs::plan::ByInterfaceDetectorFactorySelector
   function ByInterfaceDetectorFactorySelector(Plugin,Class<?>) in line 36
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::plan::ByInterfaceDetectorFactorySelector
      uses variable detectorInterface defined in edu::umd::cs::findbugs::plan::ByInterfaceDetectorFactorySelector
   variable detectorInterface in line 34
   variable plugin in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/plan/ConstraintEdge.java
module edu::umd::cs::findbugs::plan::ConstraintEdge
   inherits from edu::umd::cs::findbugs::graph::AbstractEdge
   function isSingleSource() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable constraint defined in edu::umd::cs::findbugs::plan::ConstraintEdge
      uses function isSingleSource() defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
   function setConstraint(DetectorOrderingConstraint) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable constraint defined in edu::umd::cs::findbugs::plan::ConstraintEdge
   function ConstraintEdge(DetectorNode,DetectorNode) in line 44
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable target defined in edu::umd::cs::findbugs::graph::AbstractEdge
   variable constraint in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/plan/ConstraintGraph.java
module edu::umd::cs::findbugs::plan::ConstraintGraph
   inherits from edu::umd::cs::findbugs::graph::AbstractGraph
   function allocateEdge(DetectorNode,DetectorNode) in line 36
      3 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNumVertices() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getNumEdges() defined in edu::umd::cs::findbugs::graph::AbstractGraph
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/plan/DetectorFactorySelector.java
module edu::umd::cs::findbugs::plan::DetectorFactorySelector
   function selectFactory(DetectorFactory) in line 38
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/plan/DetectorNode.java
module edu::umd::cs::findbugs::plan::DetectorNode
   inherits from edu::umd::cs::findbugs::graph::AbstractVertex
   function getFactory() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::plan::DetectorNode
   function toString() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::plan::DetectorNode
      uses function getReportedBugPatternCodes() defined in edu::umd::cs::findbugs::DetectorFactory
   function DetectorNode(DetectorFactory) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::plan::DetectorNode
   variable factory in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/plan/DetectorOrderingConstraint.java
module edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
   function getEarlier() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable earlier defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
   function getLater() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable later defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
   function isSingleSource() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable singleSource defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
   function setSingleSource(boolean) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable singleSource defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
   function toString() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable earlier defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
      uses variable later defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
   function DetectorOrderingConstraint(DetectorFactorySelector,DetectorFactorySelector) in line 37
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable earlier defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
      uses variable later defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
   variable earlier in line 31
   variable later in line 33
   variable singleSource in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/plan/ExecutionPlan.java
module edu::umd::cs::findbugs::plan::ExecutionPlan
   function addOrCreateDetectorNode(DetectorFactory,Map< String, DetectorNode >,ConstraintGraph) in line 319
      10 lines of code
      3 parameters
      2 conditional paths
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function addVertex(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function addOrCreateDetectorNodes(DetectorFactorySelector,Map< String, DetectorNode >,Set< DetectorFactory >,ConstraintGraph) in line 305
      13 lines of code
      4 parameters
      2 conditional paths
      uses function selectDetectors(DetectorFactorySelector,Set< DetectorFactory >) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function addOrCreateDetectorNode(DetectorFactory,Map< String, DetectorNode >,ConstraintGraph) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function addPass(AnalysisPass) in line 393
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable passList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function addPlugin(Plugin) in line 122
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable pluginList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function copyTo(Iterator< T >,Collection< T >) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable interPassConstraintList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable intraPassConstraintList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable factoryMap defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function appendDetectorsToPass(Collection< DetectorFactory >,AnalysisPass) in line 489
      19 lines of code
      2 parameters
      3 conditional paths
      uses function getPlugin() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses function getPositionSpecifiedInPluginDescriptor() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function appendToPass(DetectorFactory,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function appendToPass(DetectorFactory,AnalysisPass) in line 485
      3 lines of code
      2 parameters
      1 conditional paths
      uses function append(DetectorFactory) defined in edu::umd::cs::findbugs::plan::AnalysisPass
   function assignToPass(DetectorFactory,AnalysisPass) in line 476
      4 lines of code
      2 parameters
      1 conditional paths
      uses function addToPass(DetectorFactory) defined in edu::umd::cs::findbugs::plan::AnalysisPass
      uses variable assignedToPassSet defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function build() in line 149
      protection public
      92 lines of code
      0 parameters
      16 conditional paths
      uses variable factoryMap defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable interPassConstraintList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable intraPassConstraintList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function buildConstraintGraph(Map< String, DetectorNode >,Set< DetectorFactory >,List< DetectorOrderingConstraint >) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable factoryChooser defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function choose(DetectorFactory) defined in edu::umd::cs::findbugs::DetectorFactoryChooser
      uses function getFactory() defined in edu::umd::cs::findbugs::plan::DetectorNode
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function isSingleSource() defined in edu::umd::cs::findbugs::plan::ConstraintEdge
      uses function enable(DetectorFactory) defined in edu::umd::cs::findbugs::DetectorFactoryChooser
      uses variable DEBUG defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs2
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function buildPassList(ConstraintGraph) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable passList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function sortPass(List< DetectorOrderingConstraint >,Map< String, DetectorFactory >,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable assignedToPassSet defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function addPass(AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getUnassignedSet() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function assignToPass(DetectorFactory,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function appendDetectorsToPass(Collection< DetectorFactory >,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function print() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function buildConstraintGraph(Map< String, DetectorNode >,Set< DetectorFactory >,List< DetectorOrderingConstraint >) in line 280
      14 lines of code
      3 parameters
      2 conditional paths
      uses function addOrCreateDetectorNodes(DetectorFactorySelector,Map< String, DetectorNode >,Set< DetectorFactory >,ConstraintGraph) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function createConstraintEdges(ConstraintGraph,Set< DetectorNode >,Set< DetectorNode >,DetectorOrderingConstraint) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function buildPassList(ConstraintGraph) in line 347
      45 lines of code
      1 parameters
      9 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getFactory() defined in edu::umd::cs::findbugs::plan::DetectorNode
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function addPass(AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function assignToPass(DetectorFactory,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function copyTo(Iterator< T >,Collection< T >) in line 258
      5 lines of code
      2 parameters
      2 conditional paths
   function createConstraintEdges(ConstraintGraph,Set< DetectorNode >,Set< DetectorNode >,DetectorOrderingConstraint) in line 330
      16 lines of code
      4 parameters
      4 conditional paths
      uses function createEdge(VertexType,VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function setConstraint(DetectorOrderingConstraint) defined in edu::umd::cs::findbugs::plan::ConstraintEdge
   function dispose() in line 92
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable pluginList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable factoryChooser defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable passList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable factoryMap defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable interPassConstraintList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable intraPassConstraintList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable assignedToPassSet defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function dumpGraph(ConstraintGraph) in line 523
      7 lines of code
      1 parameters
      2 conditional paths
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getNumPasses() in line 254
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable passList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function getUnassignedSet() in line 466
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable factoryMap defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable assignedToPassSet defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function isActive(@DottedClassName String) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable factoryMap defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function isActive(Class<?extends Detector >) in line 115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isActive(@DottedClassName String) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function main(String[]) in line 531
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses function ExecutionPlan() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getPluginById(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function addPlugin(Plugin) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function build() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getNumPasses() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function print() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function passIterator() in line 245
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable passList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function print() in line 509
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable passList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function iterator() defined in edu::umd::cs::findbugs::plan::AnalysisPass
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
   function selectDetectors(DetectorFactorySelector,Set< DetectorFactory >) in line 295
      9 lines of code
      2 parameters
      3 conditional paths
      uses function selectFactory(DetectorFactory) defined in edu::umd::cs::findbugs::plan::DetectorFactorySelector
   function setDetectorFactoryChooser(DetectorFactoryChooser) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable factoryChooser defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function sortPass(List< DetectorOrderingConstraint >,Map< String, DetectorFactory >,AnalysisPass) in line 400
      65 lines of code
      3 parameters
      10 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function selectDetectors(DetectorFactorySelector,Set< DetectorFactory >) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getUnassignedSet() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function buildConstraintGraph(Map< String, DetectorNode >,Set< DetectorFactory >,List< DetectorOrderingConstraint >) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function dumpGraph(ConstraintGraph) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function assignToPass(DetectorFactory,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function search() defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch
      uses function appendToPass(DetectorFactory,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getFactory() defined in edu::umd::cs::findbugs::plan::DetectorNode
      uses function appendDetectorsToPass(Collection< DetectorFactory >,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function ExecutionPlan() in line 72
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
   variable assignedToPassSet in line 67
   variable DEBUG in line 53
      protection public
   variable factoryChooser in line 57
   variable factoryMap in line 61
   variable interPassConstraintList in line 63
   variable intraPassConstraintList in line 65
   variable passList in line 59
   variable pluginList in line 55
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/plan/OrderingConstraintException.java
module edu::umd::cs::findbugs::plan::OrderingConstraintException
   inherits from edu::umd::cs::findbugs::classfile::CheckedAnalysisException
   function OrderingConstraintException(String) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable serialVersionUID in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/plan/ReportingDetectorFactorySelector.java
module edu::umd::cs::findbugs::plan::ReportingDetectorFactorySelector
   inherits from edu::umd::cs::findbugs::plan::DetectorFactorySelector
   function selectFactory(DetectorFactory) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::plan::ReportingDetectorFactorySelector
      uses function getPlugin() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function isReportingDetector() defined in edu::umd::cs::findbugs::DetectorFactory
   function toString() in line 57
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::plan::ReportingDetectorFactorySelector
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
   function ReportingDetectorFactorySelector(Plugin) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::plan::ReportingDetectorFactorySelector
   variable plugin in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/plan/SingleDetectorFactorySelector.java
module edu::umd::cs::findbugs::plan::SingleDetectorFactorySelector
   inherits from edu::umd::cs::findbugs::plan::DetectorFactorySelector
   function selectFactory(DetectorFactory) in line 41
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::plan::SingleDetectorFactorySelector
      uses function getPlugin() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable className defined in edu::umd::cs::findbugs::plan::SingleDetectorFactorySelector
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
   function toString() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::plan::SingleDetectorFactorySelector
   function SingleDetectorFactorySelector(Plugin,String) in line 35
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::plan::SingleDetectorFactorySelector
      uses variable className defined in edu::umd::cs::findbugs::plan::SingleDetectorFactorySelector
   variable className in line 33
   variable plugin in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/Plugin.java
module edu::umd::cs::findbugs::Plugin
   function addBugCategory(BugCategory) in line 280
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCategories defined in edu::umd::cs::findbugs::Plugin
      uses function getCategory() defined in edu::umd::cs::findbugs::BugCategory
   function addBugCode(BugCode) in line 271
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugCodeList defined in edu::umd::cs::findbugs::Plugin
   function addBugPattern(BugPattern) in line 262
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugPatterns defined in edu::umd::cs::findbugs::Plugin
   function addCloudPlugin(CloudPlugin) in line 253
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cloudList defined in edu::umd::cs::findbugs::Plugin
   function addCustomPlugin(URL) in line 675
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getClassLoader() defined in edu::umd::cs::findbugs::PluginLoader
   function addCustomPlugin(URI) in line 679
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addCustomPlugin(URL) defined in edu::umd::cs::findbugs::Plugin
      uses function getClassLoader() defined in edu::umd::cs::findbugs::PluginLoader
   function addCustomPlugin(URL,ClassLoader) in line 683
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable pluginLoader defined in edu::umd::cs::findbugs::Plugin
      uses function loadPlugin() defined in edu::umd::cs::findbugs::PluginLoader
   function addCustomPlugin(URI,ClassLoader) in line 692
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function addCustomPlugin(URL) defined in edu::umd::cs::findbugs::Plugin
   function addDetectorFactory(DetectorFactory) in line 249
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detectorFactoryList defined in edu::umd::cs::findbugs::Plugin
   function addInterPassOrderingConstraint(DetectorOrderingConstraint) in line 304
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable interPassConstraintList defined in edu::umd::cs::findbugs::Plugin
   function addIntraPassOrderingConstraint(DetectorOrderingConstraint) in line 314
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable intraPassConstraintList defined in edu::umd::cs::findbugs::Plugin
   function addOrCreateBugCategory(String) in line 288
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCategories defined in edu::umd::cs::findbugs::Plugin
   function cannotDisable() in line 578
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function findFirstMatchingFactory(FactoryChooser) in line 450
      8 lines of code
      1 parameters
      3 conditional paths
      uses function getDetectorFactories() defined in edu::umd::cs::findbugs::Plugin
      uses function choose(DetectorFactory) defined in edu::umd::cs::findbugs::Plugin::FactoryChooser
   function getAllFindBugsMain() in line 478
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable mainPlugins defined in edu::umd::cs::findbugs::Plugin
      uses function getComponentClass() defined in edu::umd::cs::findbugs::ComponentPlugin
      uses variable componentPlugins defined in edu::umd::cs::findbugs::Plugin
      uses function getId() defined in edu::umd::cs::findbugs::ComponentPlugin
   function getAllPluginIds() in line 527
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getAllPlugins() in line 523
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAllPluginsMap() in line 538
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAllPluginsURIs() in line 542
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses function getAllPlugins() defined in edu::umd::cs::findbugs::Plugin
   function getBugCategories() in line 381
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCategories defined in edu::umd::cs::findbugs::Plugin
   function getBugCategory(String) in line 390
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugCategories defined in edu::umd::cs::findbugs::Plugin
   function getBugCodes() in line 372
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCodeList defined in edu::umd::cs::findbugs::Plugin
   function getBugPatterns() in line 363
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugPatterns defined in edu::umd::cs::findbugs::Plugin
   function getBugRanker() in line 463
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugRanker defined in edu::umd::cs::findbugs::Plugin
      uses variable mainPlugins defined in edu::umd::cs::findbugs::Plugin
   function getByPluginId(String) in line 503
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
   function getClassLoader() in line 639
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getPluginLoader() defined in edu::umd::cs::findbugs::Plugin
      uses function getClassLoader() defined in edu::umd::cs::findbugs::PluginLoader
   function getCloudPlugins() in line 394
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cloudList defined in edu::umd::cs::findbugs::Plugin
   function getDetailedDescription() in line 235
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detailedDescription defined in edu::umd::cs::findbugs::Plugin
   function getDetectorFactories() in line 355
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detectorFactoryList defined in edu::umd::cs::findbugs::Plugin
   function getEngineRegistrarClass() in line 437
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable engineRegistrarClass defined in edu::umd::cs::findbugs::Plugin
   function getFactoryByFullName(final String) in line 341
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function findFirstMatchingFactory(FactoryChooser) defined in edu::umd::cs::findbugs::Plugin
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
   function getFactoryByShortName(final String) in line 325
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function findFirstMatchingFactory(FactoryChooser) defined in edu::umd::cs::findbugs::Plugin
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
   function getFindBugsMain(String) in line 473
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable mainPlugins defined in edu::umd::cs::findbugs::Plugin
   function getParentPlugin() in line 643
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function getPluginLoader() defined in edu::umd::cs::findbugs::Plugin
      uses function getByPluginId(String) defined in edu::umd::cs::findbugs::Plugin
   function getPluginId() in line 412
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pluginId defined in edu::umd::cs::findbugs::Plugin
   function getPluginLoader() in line 441
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pluginLoader defined in edu::umd::cs::findbugs::Plugin
   function getProvider() in line 172
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable provider defined in edu::umd::cs::findbugs::Plugin
   function getReleaseDate() in line 223
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable releaseDate defined in edu::umd::cs::findbugs::Plugin
   function getResource(String) in line 635
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPluginLoader() defined in edu::umd::cs::findbugs::Plugin
      uses function getResource(String) defined in edu::umd::cs::findbugs::PluginLoader
   function getShortDescription() in line 231
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable shortDescription defined in edu::umd::cs::findbugs::Plugin
   function getShortPluginId() in line 416
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable pluginId defined in edu::umd::cs::findbugs::Plugin
   function getUpdateUrl() in line 180
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable updateUrl defined in edu::umd::cs::findbugs::Plugin
   function getVersion() in line 219
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable version defined in edu::umd::cs::findbugs::Plugin
   function getWebsite() in line 208
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable website defined in edu::umd::cs::findbugs::Plugin
   function getWebsiteURI() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable website defined in edu::umd::cs::findbugs::Plugin
   function interPassConstraintIterator() in line 401
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable interPassConstraintList defined in edu::umd::cs::findbugs::Plugin
   function intraPassConstraintIterator() in line 408
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable intraPassConstraintList defined in edu::umd::cs::findbugs::Plugin
   function isCorePlugin() in line 574
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pluginLoader defined in edu::umd::cs::findbugs::Plugin
      uses function isCorePlugin() defined in edu::umd::cs::findbugs::PluginLoader
   function isEnabledByDefault() in line 153
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable enabledByDefault defined in edu::umd::cs::findbugs::Plugin
   function isGloballyEnabled() in line 582
      protection public
      15 lines of code
      0 parameters
      5 conditional paths
      uses function isCorePlugin() defined in edu::umd::cs::findbugs::Plugin
      uses variable enabled defined in edu::umd::cs::findbugs::Plugin
      uses function isEnabledByDefault() defined in edu::umd::cs::findbugs::Plugin
   function isInitialPlugin() in line 631
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getPluginLoader() defined in edu::umd::cs::findbugs::Plugin
   function loadCustomPlugin(File,@CheckForNull Project) in line 653
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
   function loadCustomPlugin(URL,@CheckForNull Project) in line 667
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function addCustomPlugin(URL) defined in edu::umd::cs::findbugs::Plugin
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
   function removeCustomPlugin(Plugin) in line 702
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
   function removePlugin(URI) in line 516
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBugRanker(BugRanker) in line 459
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDetailedDescription(String) in line 239
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detailedDescription defined in edu::umd::cs::findbugs::Plugin
   function setEngineRegistrarClass(Class<?extends IAnalysisEngineRegistrar >) in line 427
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable engineRegistrarClass defined in edu::umd::cs::findbugs::Plugin
   function setGloballyEnabled(boolean) in line 598
      protection public
      32 lines of code
      1 parameters
      8 conditional paths
      uses function isCorePlugin() defined in edu::umd::cs::findbugs::Plugin
      uses variable enabled defined in edu::umd::cs::findbugs::Plugin
      uses function cannotDisable() defined in edu::umd::cs::findbugs::Plugin
      uses variable pluginId defined in edu::umd::cs::findbugs::Plugin
      uses function isEnabledByDefault() defined in edu::umd::cs::findbugs::Plugin
   function setMyGlobalOption(String,String) in line 184
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable myGlobalOptions defined in edu::umd::cs::findbugs::Plugin
   function setProvider(String) in line 163
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable provider defined in edu::umd::cs::findbugs::Plugin
   function setShortDescription(String) in line 227
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable shortDescription defined in edu::umd::cs::findbugs::Plugin
   function setUpdateUrl(String) in line 176
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setWebsite(String) in line 199
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable website defined in edu::umd::cs::findbugs::Plugin
   function toString() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pluginId defined in edu::umd::cs::findbugs::Plugin
   function Plugin(String,String,Date,@Nonnull PluginLoader,boolean,boolean) in line 116
      protection public
      26 lines of code
      6 parameters
      3 conditional paths
      uses variable pluginId defined in edu::umd::cs::findbugs::Plugin
      uses variable version defined in edu::umd::cs::findbugs::Plugin
      uses variable USE_FINDBUGS_VERSION defined in edu::umd::cs::findbugs::Plugin
      uses variable COMPUTED_RELEASE defined in edu::umd::cs::findbugs::Version
      uses variable releaseDate defined in edu::umd::cs::findbugs::Plugin
      uses variable enabled defined in edu::umd::cs::findbugs::Plugin
      uses function cannotDisable() defined in edu::umd::cs::findbugs::Plugin
      uses variable myGlobalOptions defined in edu::umd::cs::findbugs::Plugin
      uses variable cloudList defined in edu::umd::cs::findbugs::Plugin
      uses variable componentPlugins defined in edu::umd::cs::findbugs::Plugin
      uses variable pluginLoader defined in edu::umd::cs::findbugs::Plugin
   variable bugCategories in line 82
   variable bugCodeList in line 80
   variable bugPatterns in line 78
   variable bugRanker in line 89
   variable cannotDisable in line 104
   variable cloudList in line 83
   variable componentPlugins in line 87
   variable detailedDescription in line 73
   variable detectorFactoryList in line 75
   variable enabled in line 108
   variable enabledByDefault in line 102
   variable engineRegistrarClass in line 97
   variable interPassConstraintList in line 92
   variable intraPassConstraintList in line 94
   variable mainPlugins in line 76
   variable myGlobalOptions in line 85
   variable pluginId in line 62
   variable pluginLoader in line 100
   variable provider in line 67
   variable releaseDate in line 65
   variable shortDescription in line 72
   variable updateUrl in line 70
   variable USE_FINDBUGS_VERSION in line 60
   variable version in line 64
   variable website in line 69
module edu::umd::cs::findbugs::Plugin::EnabledState
   variable DISABLED in line 106
      protection public
   variable ENABLED in line 106
      protection public
   variable PLUGIN_DEFAULT in line 106
      protection public
module edu::umd::cs::findbugs::Plugin::FactoryChooser
   function choose(DetectorFactory) in line 446
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/PluginDoesntContainMetadataException.java
module edu::umd::cs::findbugs::PluginDoesntContainMetadataException
   inherits from edu::umd::cs::findbugs::PluginException
   function PluginDoesntContainMetadataException(String) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/PluginException.java
module edu::umd::cs::findbugs::PluginException
   inherits from Exception
   function PluginException(String) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function PluginException(String,Throwable) in line 52
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/PluginLoader.java
module edu::umd::cs::findbugs::PluginLoader
   function addClassPathFromManifest(@Nonnull URL,@Nonnull List< URL >,@Nonnull Manifest) in line 342
      17 lines of code
      3 parameters
      4 conditional paths
   function addCollection(List< Document >,String) in line 1301
      18 lines of code
      2 parameters
      4 conditional paths
      uses function getResource(String) defined in edu::umd::cs::findbugs::PluginLoader
   function computeCoreUrl() in line 426
      32 lines of code
      0 parameters
      7 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::PluginLoader
   function constructMinimalPlugin(Document,List< Document >) in line 1057
      93 lines of code
      2 parameters
      17 conditional paths
      uses variable XPATH_PLUGIN_PLUGINID defined in edu::umd::cs::findbugs::PluginLoader
      uses variable nextUnknownId defined in edu::umd::cs::findbugs::PluginLoader
      uses variable optionalPlugin defined in edu::umd::cs::findbugs::PluginLoader
      uses function getPluginLoader() defined in edu::umd::cs::findbugs::Plugin
      uses function getURL() defined in edu::umd::cs::findbugs::PluginLoader
      uses variable loadedFrom defined in edu::umd::cs::findbugs::PluginLoader
      uses function isCorePlugin() defined in edu::umd::cs::findbugs::PluginLoader
      uses variable CORE_PLUGIN_RELEASE_DATE defined in edu::umd::cs::findbugs::Version
      uses function parseDate(String) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable XPATH_PLUGIN_PROVIDER defined in edu::umd::cs::findbugs::PluginLoader
      uses function setProvider(String) defined in edu::umd::cs::findbugs::Plugin
      uses variable XPATH_PLUGIN_WEBSITE defined in edu::umd::cs::findbugs::PluginLoader
      uses function setWebsite(String) defined in edu::umd::cs::findbugs::Plugin
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses function setUpdateUrl(String) defined in edu::umd::cs::findbugs::Plugin
      uses function findMessageNode(List< Document >,String,String) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable XPATH_PLUGIN_SHORT_DESCRIPTION defined in edu::umd::cs::findbugs::PluginLoader
      uses function setShortDescription(String) defined in edu::umd::cs::findbugs::Plugin
      uses function setDetailedDescription(String) defined in edu::umd::cs::findbugs::Plugin
      uses function setMyGlobalOption(String,String) defined in edu::umd::cs::findbugs::Plugin
   function createClassloaderUrls(@Nonnull URL) in line 298
      43 lines of code
      1 parameters
      7 conditional paths
      uses function guessManifest(@Nonnull File) defined in edu::umd::cs::findbugs::PluginLoader
      uses function addClassPathFromManifest(@Nonnull URL,@Nonnull List< URL >,@Nonnull Manifest) defined in edu::umd::cs::findbugs::PluginLoader
   function findMessageNode(List< Document >,String,String) in line 1320
      10 lines of code
      3 parameters
      3 conditional paths
   function findMessageText(List< Document >,String,String) in line 1331
      9 lines of code
      3 parameters
      3 conditional paths
   function finishLazyInitialization() in line 235
      47 lines of code
      0 parameters
      8 conditional paths
      uses function getPlugin() defined in edu::umd::cs::findbugs::PluginLoader
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses function hasParent() defined in edu::umd::cs::findbugs::PluginLoader
      uses function createClassloaderUrls(@Nonnull URL) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable loadedFrom defined in edu::umd::cs::findbugs::PluginLoader
      uses variable classLoader defined in edu::umd::cs::findbugs::PluginLoader
      uses function getClassLoader() defined in edu::umd::cs::findbugs::Plugin
      uses function loadPluginComponents() defined in edu::umd::cs::findbugs::PluginLoader
      uses variable loadedFromUri defined in edu::umd::cs::findbugs::PluginLoader
      uses variable plugin defined in edu::umd::cs::findbugs::PluginLoader
   function getChildText(Node,String) in line 1341
      7 lines of code
      2 parameters
      2 conditional paths
   function getClass(ClassLoader,@DottedClassName String,Class< T >) in line 637
      9 lines of code
      3 parameters
      2 conditional paths
   function getClassLoader() in line 482
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable classLoader defined in edu::umd::cs::findbugs::PluginLoader
   function getConstraintSelector(Element,Plugin,String) in line 1254
      46 lines of code
      3 parameters
      10 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::PluginLoader
   function getCorePluginLoader() in line 1361
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::PluginLoader
      uses function getPluginLoader() defined in edu::umd::cs::findbugs::Plugin
   function getJarName(URL) in line 475
      6 lines of code
      1 parameters
      1 conditional paths
   function getMessageDocuments() in line 1204
      21 lines of code
      0 parameters
      6 conditional paths
      uses function getPotentialMessageFiles() defined in edu::umd::cs::findbugs::PluginLoader
      uses function addCollection(List< Document >,String) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable plugin defined in edu::umd::cs::findbugs::PluginLoader
      uses function getClass(ClassLoader,@DottedClassName String,Class< T >) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable classLoader defined in edu::umd::cs::findbugs::PluginLoader
   function getPlugin() in line 499
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::PluginLoader
   function getPluginDescriptor() in line 1151
      protection public
      37 lines of code
      0 parameters
      6 conditional paths
      uses function getResource(String) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable DEBUG defined in edu::umd::cs::findbugs::PluginLoader
      uses variable jarName defined in edu::umd::cs::findbugs::PluginLoader
      uses variable corePlugin defined in edu::umd::cs::findbugs::PluginLoader
      uses variable classLoader defined in edu::umd::cs::findbugs::PluginLoader
   function getPluginLoader(URL,ClassLoader,boolean,boolean) in line 1349
      protection public
      10 lines of code
      4 parameters
      2 conditional paths
      uses function toUri(URL) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable plugin defined in edu::umd::cs::findbugs::PluginLoader
      uses function getPluginLoader() defined in edu::umd::cs::findbugs::Plugin
      uses function getClassLoader() defined in edu::umd::cs::findbugs::PluginLoader
      uses function PluginLoader() defined in edu::umd::cs::findbugs::PluginLoader
   function getPotentialMessageFiles() in line 1189
      14 lines of code
      0 parameters
      2 conditional paths
   function getResource(String) in line 531
      protection public
      51 lines of code
      1 parameters
      17 conditional paths
      uses function isCorePlugin() defined in edu::umd::cs::findbugs::PluginLoader
      uses variable loadedFrom defined in edu::umd::cs::findbugs::PluginLoader
      uses function resourceFromPlugin(URL,String) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable DEBUG defined in edu::umd::cs::findbugs::PluginLoader
      uses variable classLoaderForResources defined in edu::umd::cs::findbugs::PluginLoader
      uses function loadFromFindBugsPluginDir(String) defined in edu::umd::cs::findbugs::PluginLoader
      uses function loadFromFindBugsEtcDir(String) defined in edu::umd::cs::findbugs::PluginLoader
      uses function getResource(String) defined in edu::umd::cs::findbugs::PluginLoader
   function getURI() in line 463
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable loadedFromUri defined in edu::umd::cs::findbugs::PluginLoader
   function getURL() in line 459
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable loadedFrom defined in edu::umd::cs::findbugs::PluginLoader
   function getUrlBase(URL) in line 1526
      10 lines of code
      1 parameters
      2 conditional paths
   function guessManifest(@Nonnull File) in line 365
      13 lines of code
      1 parameters
      4 conditional paths
   function hasParent() in line 185
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function init() in line 647
      17 lines of code
      0 parameters
      3 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::PluginLoader
      uses variable loadedFrom defined in edu::umd::cs::findbugs::PluginLoader
      uses function getPluginDescriptor() defined in edu::umd::cs::findbugs::PluginLoader
      uses function getMessageDocuments() defined in edu::umd::cs::findbugs::PluginLoader
      uses function constructMinimalPlugin(Document,List< Document >) defined in edu::umd::cs::findbugs::PluginLoader
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
   function isCorePlugin() in line 1369
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
      uses variable corePlugin defined in edu::umd::cs::findbugs::PluginLoader
      uses function loadPlugins(File) defined in edu::umd::cs::findbugs::PluginLoader
   function loadCorePlugin() in line 1463
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::PluginLoader
      uses function PluginLoader() defined in edu::umd::cs::findbugs::PluginLoader
      uses function getPlugin() defined in edu::umd::cs::findbugs::PluginLoader
   function loadFromFindBugsEtcDir(String) in line 602
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
   function loadFromFindBugsPluginDir(String) in line 620
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
   function loadInitialPlugin(URL,boolean,boolean) in line 1477
      12 lines of code
      3 parameters
      9 conditional paths
      uses function getPluginLoader(URL,ClassLoader,boolean,boolean) defined in edu::umd::cs::findbugs::PluginLoader
      uses function getClassLoader() defined in edu::umd::cs::findbugs::PluginLoader
      uses variable DEBUG defined in edu::umd::cs::findbugs::PluginLoader
      uses function getUrlBase(URL) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable plugin defined in edu::umd::cs::findbugs::PluginLoader
   function loadPlugin() in line 495
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getPlugin() defined in edu::umd::cs::findbugs::PluginLoader
   function loadPluginComponents() in line 665
      391 lines of code
      0 parameters
      62 conditional paths
      uses function getPluginDescriptor() defined in edu::umd::cs::findbugs::PluginLoader
      uses function getMessageDocuments() defined in edu::umd::cs::findbugs::PluginLoader
      uses variable DEFAULT_CLOUD defined in edu::umd::cs::findbugs::cloud::CloudFactory
      uses function getClass(ClassLoader,@DottedClassName String,Class< T >) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable classLoader defined in edu::umd::cs::findbugs::PluginLoader
      uses function findMessageNode(List< Document >,String,String) defined in edu::umd::cs::findbugs::PluginLoader
      uses function getChildText(Node,String) defined in edu::umd::cs::findbugs::PluginLoader
      uses function loadPropertiesFromURL(URL) defined in edu::umd::cs::findbugs::PropertyBundle
      uses function setProperty(String,String) defined in edu::umd::cs::findbugs::PropertyBundle
      uses function setFindbugsPluginId(String) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses variable plugin defined in edu::umd::cs::findbugs::PluginLoader
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses function setClassLoader(ClassLoader) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function setCloudClass(Class<?extends Cloud >) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function setUsernameClass(Class<?extends NameLookup >) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function setHidden(boolean) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function setProperties(PropertyBundle) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function setDescription(String) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function setDetails(String) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function setOnlineStorage(boolean) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function createCloudPlugin() defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function addCloudPlugin(CloudPlugin) defined in edu::umd::cs::findbugs::Plugin
      uses variable loadedFrom defined in edu::umd::cs::findbugs::PluginLoader
      uses variable classLoaderForResources defined in edu::umd::cs::findbugs::PluginLoader
      uses function setHidden(boolean) defined in edu::umd::cs::findbugs::DetectorFactory
      uses function setPositionSpecifiedInPluginDescriptor(int) defined in edu::umd::cs::findbugs::DetectorFactory
      uses function addDetectorFactory(DetectorFactory) defined in edu::umd::cs::findbugs::Plugin
      uses function setDetailHTML(String) defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getConstraintSelector(Element,Plugin,String) defined in edu::umd::cs::findbugs::PluginLoader
      uses function setSingleSource(boolean) defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
      uses function addInterPassOrderingConstraint(DetectorOrderingConstraint) defined in edu::umd::cs::findbugs::Plugin
      uses function addIntraPassOrderingConstraint(DetectorOrderingConstraint) defined in edu::umd::cs::findbugs::Plugin
      uses function addOrCreateBugCategory(String) defined in edu::umd::cs::findbugs::Plugin
      uses function setHidden(boolean) defined in edu::umd::cs::findbugs::BugCategory
      uses variable DEBUG defined in edu::umd::cs::findbugs::PluginLoader
      uses function setShortDescription(String) defined in edu::umd::cs::findbugs::BugCategory
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugCategory
      uses function setAbbrev(String) defined in edu::umd::cs::findbugs::BugCategory
      uses function getDetailText() defined in edu::umd::cs::findbugs::BugCategory
      uses function setDetailText(String) defined in edu::umd::cs::findbugs::BugCategory
      uses function addBugPattern(BugPattern) defined in edu::umd::cs::findbugs::Plugin
      uses function addBugCode(BugCode) defined in edu::umd::cs::findbugs::Plugin
      uses function setEngineRegistrarClass(Class<?extends IAnalysisEngineRegistrar >) defined in edu::umd::cs::findbugs::Plugin
      uses function getResource(String) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable FILENAME defined in edu::umd::cs::findbugs::BugRanker
      uses function setBugRanker(BugRanker) defined in edu::umd::cs::findbugs::Plugin
   function loadPlugins(File) in line 1382
      6 lines of code
      1 parameters
      3 conditional paths
      uses function loadPluginsInDir(File,boolean) defined in edu::umd::cs::findbugs::PluginLoader
   function loadPluginsInDir(File,boolean) in line 1398
      22 lines of code
      2 parameters
      14 conditional paths
      uses function loadInitialPlugin(URL,boolean,boolean) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses function loadCorePlugin() defined in edu::umd::cs::findbugs::PluginLoader
      uses function finishLazyInitialization() defined in edu::umd::cs::findbugs::PluginLoader
   function parseDate(String) in line 1240
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable PLUGIN_RELEASE_DATE_FMT defined in edu::umd::cs::findbugs::updates::UpdateChecker
   function parseDocument(@WillClose InputStream) in line 1614
      10 lines of code
      1 parameters
      2 conditional paths
   function resourceFromPlugin(URL,String) in line 507
      11 lines of code
      2 parameters
      3 conditional paths
   function toString() in line 1538
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::PluginLoader
      uses variable loadedFrom defined in edu::umd::cs::findbugs::PluginLoader
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
   function toUri(URL) in line 467
      7 lines of code
      1 parameters
      2 conditional paths
   function validate(File) in line 1560
      protection public
      53 lines of code
      1 parameters
      9 conditional paths
      uses function parseDocument(@WillClose InputStream) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable XPATH_PLUGIN_PLUGINID defined in edu::umd::cs::findbugs::PluginLoader
      uses variable provider defined in edu::umd::cs::findbugs::PluginLoader::Summary
      uses variable XPATH_PLUGIN_PROVIDER defined in edu::umd::cs::findbugs::PluginLoader
      uses variable XPATH_PLUGIN_WEBSITE defined in edu::umd::cs::findbugs::PluginLoader
      uses function getPotentialMessageFiles() defined in edu::umd::cs::findbugs::PluginLoader
      uses function findMessageText(List< Document >,String,String) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable XPATH_PLUGIN_SHORT_DESCRIPTION defined in edu::umd::cs::findbugs::PluginLoader
      uses function Summary(String,String,String,String) defined in edu::umd::cs::findbugs::PluginLoader::Summary
   function PluginLoader(URL) in line 166
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function toUri(URL) defined in edu::umd::cs::findbugs::PluginLoader
   function PluginLoader(URL,ClassLoader) in line 181
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function toUri(URL) defined in edu::umd::cs::findbugs::PluginLoader
   function PluginLoader(@Nonnull URL,URI,ClassLoader,boolean,boolean) in line 202
      32 lines of code
      5 parameters
      6 conditional paths
      uses function createClassloaderUrls(@Nonnull URL) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable classLoaderForResources defined in edu::umd::cs::findbugs::PluginLoader
      uses variable loadedFrom defined in edu::umd::cs::findbugs::PluginLoader
      uses variable loadedFromUri defined in edu::umd::cs::findbugs::PluginLoader
      uses variable jarName defined in edu::umd::cs::findbugs::PluginLoader
      uses function getJarName(URL) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable corePlugin defined in edu::umd::cs::findbugs::PluginLoader
      uses variable optionalPlugin defined in edu::umd::cs::findbugs::PluginLoader
      uses variable plugin defined in edu::umd::cs::findbugs::PluginLoader
      uses function init() defined in edu::umd::cs::findbugs::PluginLoader
      uses function hasParent() defined in edu::umd::cs::findbugs::PluginLoader
      uses variable classLoader defined in edu::umd::cs::findbugs::PluginLoader
      uses function getClassLoader() defined in edu::umd::cs::findbugs::PluginLoader
      uses function getClassLoader() defined in edu::umd::cs::findbugs::Plugin
      uses function loadPluginComponents() defined in edu::umd::cs::findbugs::PluginLoader
   function PluginLoader() in line 386
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
      uses variable classLoader defined in edu::umd::cs::findbugs::PluginLoader
      uses function getClass(ClassLoader,@DottedClassName String,Class< T >) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable classLoaderForResources defined in edu::umd::cs::findbugs::PluginLoader
      uses variable corePlugin defined in edu::umd::cs::findbugs::PluginLoader
      uses variable optionalPlugin defined in edu::umd::cs::findbugs::PluginLoader
      uses variable loadedFrom defined in edu::umd::cs::findbugs::PluginLoader
      uses function computeCoreUrl() defined in edu::umd::cs::findbugs::PluginLoader
      uses variable loadedFromUri defined in edu::umd::cs::findbugs::PluginLoader
      uses variable jarName defined in edu::umd::cs::findbugs::PluginLoader
      uses function getJarName(URL) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable plugin defined in edu::umd::cs::findbugs::PluginLoader
      uses function init() defined in edu::umd::cs::findbugs::PluginLoader
      uses function loadPluginComponents() defined in edu::umd::cs::findbugs::PluginLoader
   function PluginLoader(boolean,URL) in line 409
      protection public
      16 lines of code
      2 parameters
      2 conditional paths
      uses variable classLoader defined in edu::umd::cs::findbugs::PluginLoader
      uses function getClass(ClassLoader,@DottedClassName String,Class< T >) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable classLoaderForResources defined in edu::umd::cs::findbugs::PluginLoader
      uses variable corePlugin defined in edu::umd::cs::findbugs::PluginLoader
      uses variable optionalPlugin defined in edu::umd::cs::findbugs::PluginLoader
      uses variable loadedFrom defined in edu::umd::cs::findbugs::PluginLoader
      uses variable loadedFromUri defined in edu::umd::cs::findbugs::PluginLoader
      uses variable jarName defined in edu::umd::cs::findbugs::PluginLoader
      uses function getJarName(URL) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable plugin defined in edu::umd::cs::findbugs::PluginLoader
   variable classLoader in line 124
   variable classLoaderForResources in line 126
   variable corePlugin in line 131
   variable DEBUG in line 114
   variable jarName in line 141
   variable loadedFrom in line 139
   variable loadedFromUri in line 143
   variable nextUnknownId in line 121
   variable optionalPlugin in line 137
   variable plugin in line 129
   variable XPATH_PLUGIN_PLUGINID in line 112
   variable XPATH_PLUGIN_PROVIDER in line 111
   variable XPATH_PLUGIN_SHORT_DESCRIPTION in line 109
   variable XPATH_PLUGIN_WEBSITE in line 110
module edu::umd::cs::findbugs::PluginLoader::Summary
   function Summary(String,String,String,String) in line 1551
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses variable id defined in edu::umd::cs::findbugs::PluginLoader::Summary
      uses variable description defined in edu::umd::cs::findbugs::PluginLoader::Summary
      uses variable provider defined in edu::umd::cs::findbugs::PluginLoader::Summary
   variable description in line 1547
      protection public
   variable id in line 1546
      protection public
   variable provider in line 1548
      protection public
   variable webbsite in line 1549
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/plugins/DuplicatePluginIdError.java
module edu::umd::cs::findbugs::plugins::DuplicatePluginIdError
   inherits from Error
   function getLoadedFrom() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPluginId() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPreviouslyLoadedFrom() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function DuplicatePluginIdError(String,URL,URL) in line 48
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/plugins/DuplicatePluginIdException.java
module edu::umd::cs::findbugs::plugins::DuplicatePluginIdException
   inherits from RuntimeException
   function getLoadedFrom() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPluginId() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPreviouslyLoadedFrom() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function DuplicatePluginIdException(String,URL,URL) in line 48
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/PrintingBugReporter.java
module edu::umd::cs::findbugs::PrintingBugReporter
   inherits from edu::umd::cs::findbugs::TextUIBugReporter
   function doReportBug(BugInstance) in line 53
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable seenAlready defined in edu::umd::cs::findbugs::PrintingBugReporter
      uses function printBug(BugInstance) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function notifyObservers(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function finish() in line 61
      protection public
      3 lines of code
      0 parameters
      16 conditional paths
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable VISIBLE_RANK_MAX defined in edu::umd::cs::findbugs::BugRanker
      uses function setUseLongBugCodes(boolean) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function setShowRank(boolean) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function setReportUserDesignations(boolean) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function setApplySuppressions(boolean) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function setReportHistory(boolean) defined in edu::umd::cs::findbugs::TextUIBugReporter
   function getBugCollection() in line 286
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function main(String[]) in line 154
      protection public
      106 lines of code
      1 parameters
      21 conditional paths
      uses function xslt(String,boolean,String[],int) defined in edu::umd::cs::findbugs::PrintingBugReporter
      uses function isApplySuppressions() defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setOutputStream(PrintStream) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function computeBugHashes() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function iterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getInstanceHash() defined in edu::umd::cs::findbugs::BugInstance
      uses function getInstanceOccurrenceNum() defined in edu::umd::cs::findbugs::BugInstance
      uses function getInstanceOccurrenceMax() defined in edu::umd::cs::findbugs::BugInstance
      uses function getUserDesignationKey() defined in edu::umd::cs::findbugs::BugInstance
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::BugDesignation
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getAnnotationText() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProject() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Filter
      uses function printBug(BugInstance) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function add(E) defined in edu::umd::cs::findbugs::util::Bag
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function finish() defined in edu::umd::cs::findbugs::PrintingBugReporter
      uses function entrySet() defined in edu::umd::cs::findbugs::util::Bag
      uses function getBugCategoryDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses variable ERROR_FLAG defined in edu::umd::cs::findbugs::ExitCodes
      uses variable BUGS_FOUND_FLAG defined in edu::umd::cs::findbugs::ExitCodes
   function observeClass(ClassDescriptor) in line 47
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function xslt(String,boolean,String[],int) in line 261
      protection public
      22 lines of code
      4 parameters
      4 conditional paths
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function setApplySuppressions(boolean) defined in edu::umd::cs::findbugs::BugCollection
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function setOutputStream(PrintStream) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function finish() defined in edu::umd::cs::findbugs::HTMLBugReporter
      uses function getFatalException() defined in edu::umd::cs::findbugs::HTMLBugReporter
   variable seenAlready in line 44
module edu::umd::cs::findbugs::PrintingBugReporter::PrintingCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function getProject() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function handleOption(String,String) in line 99
      25 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 126
      26 lines of code
      2 parameters
      1 conditional paths
   function PrintingCommandLine() in line 78
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   variable annotationUploadFormat in line 68
   variable maxRank in line 70
   variable project in line 74
   variable setExitCode in line 76
   variable stylesheet in line 66
   variable summarizeMaxRank in line 72
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/Priorities.java
module edu::umd::cs::findbugs::Priorities
   variable EXP_PRIORITY in line 37
      protection public
   variable HIGH_PRIORITY in line 52
      protection public
   variable IGNORE_PRIORITY in line 32
      protection public
   variable LOW_PRIORITY in line 42
      protection public
   variable NORMAL_PRIORITY in line 47
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ProgramPoint.java
module edu::umd::cs::findbugs::ProgramPoint
   function equals(Object) in line 52
      protection public
      23 lines of code
      1 parameters
      8 conditional paths
      uses function ProgramPoint(BytecodeScanningDetector) defined in edu::umd::cs::findbugs::ProgramPoint
      uses variable method defined in edu::umd::cs::findbugs::ProgramPoint
      uses variable pc defined in edu::umd::cs::findbugs::ProgramPoint
   function getMethodAnnotation() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ProgramPoint
   function getSourceLineAnnotation() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ProgramPoint
      uses function getMethodDescriptor() defined in edu::umd::cs::findbugs::ba::XMethod
      uses variable pc defined in edu::umd::cs::findbugs::ProgramPoint
   function hashCode() in line 38
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ProgramPoint
      uses variable pc defined in edu::umd::cs::findbugs::ProgramPoint
   function toString() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ProgramPoint
      uses variable pc defined in edu::umd::cs::findbugs::ProgramPoint
   function ProgramPoint(BytecodeScanningDetector) in line 25
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ProgramPoint
      uses function getXMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable pc defined in edu::umd::cs::findbugs::ProgramPoint
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   variable method in line 30
      protection public
   variable pc in line 76
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/Project.java
module edu::umd::cs::findbugs::Project
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   function add(Project) in line 242
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
      uses function appendWithoutDuplicates(List< T >,List< T >) defined in edu::umd::cs::findbugs::Project
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
   function addAuxClasspathEntry(String) in line 418
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
      uses function makeAbsoluteCWD(String) defined in edu::umd::cs::findbugs::Project
   function addFile(String) in line 283
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
      uses function makeAbsoluteCWD(String) defined in edu::umd::cs::findbugs::Project
   function addSourceDir(String) in line 295
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function makeAbsoluteCwdCandidates(String) defined in edu::umd::cs::findbugs::Project
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses variable sourceFinder defined in edu::umd::cs::findbugs::Project
   function addTimestamp(long) in line 1111
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function addWorkingDir(String) in line 312
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable currentWorkingDirectoryList defined in edu::umd::cs::findbugs::Project
   function appendWithoutDuplicates(List< T >,List< T >) in line 248
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function convertToRelative(List< String >,String) in line 919
      7 lines of code
      2 parameters
      2 conditional paths
   function convertToRelative(String,String) in line 934
      60 lines of code
      2 parameters
      12 conditional paths
      uses variable FILE_IGNORE_CASE defined in edu::umd::cs::findbugs::Project
   function duplicate() in line 214
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function Project() defined in edu::umd::cs::findbugs::Project
      uses variable currentWorkingDirectoryList defined in edu::umd::cs::findbugs::Project
      uses variable projectName defined in edu::umd::cs::findbugs::Project
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
      uses variable timestampForAnalyzedClasses defined in edu::umd::cs::findbugs::Project
      uses variable guiCallback defined in edu::umd::cs::findbugs::Project
      uses variable cloudId defined in edu::umd::cs::findbugs::Project
      uses variable cloudProperties defined in edu::umd::cs::findbugs::Project
   function getAuxClasspathEntry(int) in line 432
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
   function getAuxClasspathEntryList() in line 447
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
   function getCloudId() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cloudId defined in edu::umd::cs::findbugs::Project
   function getCloudProperties() in line 172
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cloudProperties defined in edu::umd::cs::findbugs::Project
   function getConfiguration() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable configuration defined in edu::umd::cs::findbugs::Project
   function getFile(int) in line 335
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
   function getFileArray() in line 392
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
   function getFileCount() in line 324
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
   function getFileList() in line 353
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
   function getGuiCallback() in line 1143
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable guiCallback defined in edu::umd::cs::findbugs::Project
   function getImplicitClasspathEntryList() in line 560
      protection public
      24 lines of code
      0 parameters
      4 conditional paths
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
      uses variable url defined in edu::umd::cs::findbugs::Project::WorkListItem
      uses function WorkListItem(URL) defined in edu::umd::cs::findbugs::Project::WorkListItem
      uses function processComponentJar(URL,WorkList,List< String >) defined in edu::umd::cs::findbugs::Project
      uses function getURL() defined in edu::umd::cs::findbugs::Project::WorkListItem
   function getNumAuxClasspathEntries() in line 425
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
   function getNumSourceDirs() in line 362
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
   function getPluginStatus(Plugin) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable enabledPlugins defined in edu::umd::cs::findbugs::Project
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
   function getProjectName() in line 1125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable projectName defined in edu::umd::cs::findbugs::Project
   function getResolvedSourcePaths() in line 1150
      protection public
      28 lines of code
      0 parameters
      8 conditional paths
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses variable currentWorkingDirectoryList defined in edu::umd::cs::findbugs::Project
   function getSourceDir(int) in line 373
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
   function getSourceDirArray() in line 399
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
   function getSourceDirList() in line 406
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
   function getSourceFinder() in line 228
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable sourceFinder defined in edu::umd::cs::findbugs::Project
   function getSuppressionFilter() in line 1135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable suppressionFilter defined in edu::umd::cs::findbugs::Project
   function getTimestamp() in line 1117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable timestampForAnalyzedClasses defined in edu::umd::cs::findbugs::Project
   function isGuiAvaliable() in line 235
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable guiCallback defined in edu::umd::cs::findbugs::Project
   function isModified() in line 264
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeAbsoluteCWD(String) in line 1026
      4 lines of code
      1 parameters
      1 conditional paths
      uses function makeAbsoluteCwdCandidates(String) defined in edu::umd::cs::findbugs::Project
   function makeAbsoluteCwdCandidates(String) in line 1043
      27 lines of code
      1 parameters
      7 conditional paths
      uses variable currentWorkingDirectoryList defined in edu::umd::cs::findbugs::Project
      uses function isModified() defined in edu::umd::cs::findbugs::Project
   function processComponentJar(URL,WorkList,List< String >) in line 596
      42 lines of code
      3 parameters
      10 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::Project
      uses function createRelativeURL(URL,String) defined in edu::umd::cs::findbugs::Project::WorkList
      uses function add(WorkListItem) defined in edu::umd::cs::findbugs::Project::WorkList
   function readProject(String) in line 755
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses function readXML(File) defined in edu::umd::cs::findbugs::Project
   function readXML(File) in line 704
      protection public
      32 lines of code
      1 parameters
      4 conditional paths
      uses function Project() defined in edu::umd::cs::findbugs::Project
      uses function setModified(boolean) defined in edu::umd::cs::findbugs::Project
   function removeAuxClasspathEntry(int) in line 439
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
      uses function isModified() defined in edu::umd::cs::findbugs::Project
   function removeFile(int) in line 345
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
      uses function isModified() defined in edu::umd::cs::findbugs::Project
   function removeSourceDir(int) in line 383
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses variable sourceFinder defined in edu::umd::cs::findbugs::Project
      uses function isModified() defined in edu::umd::cs::findbugs::Project
   function setCloudId(@Nullable String) in line 148
      protection public
      18 lines of code
      1 parameters
      5 conditional paths
      uses variable cloudId defined in edu::umd::cs::findbugs::Project
      uses function getRegisteredClouds() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function setCloudProperties(Properties) in line 180
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cloudProperties defined in edu::umd::cs::findbugs::Project
   function setConfiguration(@Nonnull UserPreferences) in line 139
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable configuration defined in edu::umd::cs::findbugs::Project
   function setCurrentWorkingDirectory(File) in line 255
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function addWorkingDir(String) defined in edu::umd::cs::findbugs::Project
   function setGuiCallback(IGuiCallback) in line 1139
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable guiCallback defined in edu::umd::cs::findbugs::Project
   function setModified(boolean) in line 271
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isModified() defined in edu::umd::cs::findbugs::Project
   function setPluginStatusTrinary(String,Boolean) in line 128
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable enabledPlugins defined in edu::umd::cs::findbugs::Project
   function setProjectName(String) in line 1121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable projectName defined in edu::umd::cs::findbugs::Project
   function setSuppressionFilter(@Nonnull Filter) in line 1129
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable suppressionFilter defined in edu::umd::cs::findbugs::Project
   function setTimestamp(long) in line 1107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 790
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable projectName defined in edu::umd::cs::findbugs::Project
      uses variable UNNAMED_PROJECT defined in edu::umd::cs::findbugs::Project
   function transformFilename(String) in line 801
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function write(String,boolean,String) in line 665
      protection public
      38 lines of code
      3 parameters
      9 conditional paths
      uses variable JAR_FILES_KEY defined in edu::umd::cs::findbugs::Project
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
      uses function convertToRelative(List< String >,String) defined in edu::umd::cs::findbugs::Project
      uses variable SRC_DIRS_KEY defined in edu::umd::cs::findbugs::Project
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses variable AUX_CLASSPATH_ENTRIES_KEY defined in edu::umd::cs::findbugs::Project
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
      uses variable OPTIONS_KEY defined in edu::umd::cs::findbugs::Project
      uses variable RELATIVE_PATHS defined in edu::umd::cs::findbugs::Project
      uses function isModified() defined in edu::umd::cs::findbugs::Project
   function writeXML(File,@CheckForNull BugCollection) in line 737
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function finish() defined in edu::umd::cs::findbugs::xml::XMLOutput
   function writeXML(XMLOutput) in line 832
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function writeXML(File,@CheckForNull BugCollection) defined in edu::umd::cs::findbugs::Project
   function writeXML(XMLOutput,@CheckForNull File,@CheckForNull BugCollection) in line 836
      protection public
      75 lines of code
      3 parameters
      11 conditional paths
      uses function getProjectName() defined in edu::umd::cs::findbugs::Project
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable PROJECT_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function convertToRelative(List< String >,String) defined in edu::umd::cs::findbugs::Project
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses variable currentWorkingDirectoryList defined in edu::umd::cs::findbugs::Project
      uses variable suppressionFilter defined in edu::umd::cs::findbugs::Project
      uses function isEmpty() defined in edu::umd::cs::findbugs::filter::Filter
      uses function writeBodyAsXML(XMLOutput) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable enabledPlugins defined in edu::umd::cs::findbugs::Project
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses function getId() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
      uses variable cloudId defined in edu::umd::cs::findbugs::Project
      uses function isOnline() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
      uses variable url defined in edu::umd::cs::findbugs::Project::WorkListItem
      uses function getProperties() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
      uses function getProperty(String) defined in edu::umd::cs::findbugs::PropertyBundle
      uses variable cloudProperties defined in edu::umd::cs::findbugs::Project
   function Project() in line 201
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable enabledPlugins defined in edu::umd::cs::findbugs::Project
      uses variable configuration defined in edu::umd::cs::findbugs::Project
      uses variable analysisTargets defined in edu::umd::cs::findbugs::Project
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
      uses function isModified() defined in edu::umd::cs::findbugs::Project
      uses variable currentWorkingDirectoryList defined in edu::umd::cs::findbugs::Project
   variable analysisTargets in line 99
   variable AUX_CLASSPATH_ENTRIES_KEY in line 645
   variable auxClasspathEntryList in line 109
   variable cloudId in line 116
   variable cloudProperties in line 167
   variable configuration in line 118
   variable currentWorkingDirectoryList in line 92
   variable DEBUG in line 90
   variable enabledPlugins in line 121
   variable FILE_IGNORE_CASE in line 917
   variable guiCallback in line 191
   variable isModified in line 114
   variable JAR_FILES_KEY in line 641
   variable OPTIONS_KEY in line 639
   variable projectName in line 94
   variable RELATIVE_PATHS in line 648
      protection public
   variable sourceFinder in line 196
   variable SRC_DIRS_KEY in line 643
   variable srcDirList in line 104
   variable suppressionFilter in line 194
   variable timestampForAnalyzedClasses in line 189
   variable UNNAMED_PROJECT in line 187
      protection public
module edu::umd::cs::findbugs::Project::WorkListItem
   function getURL() in line 470
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable url defined in edu::umd::cs::findbugs::Project::WorkListItem
   function WorkListItem(URL) in line 463
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable url defined in edu::umd::cs::findbugs::Project::WorkListItem
   variable url in line 455
module edu::umd::cs::findbugs::Project::WorkList
   function add(WorkListItem) in line 518
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::Project
      uses function getURL() defined in edu::umd::cs::findbugs::Project::WorkListItem
   function createRelativeURL(URL,String) in line 505
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function createURL(String) in line 494
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getNextItem() in line 543
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isEmpty() in line 536
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function WorkList() in line 486
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable addedSet in line 481
   variable itemList in line 479
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ProjectPackagePrefixes.java
module edu::umd::cs::findbugs::ProjectPackagePrefixes
   function countBug(BugInstance) in line 91
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function countPackageMember(String) defined in edu::umd::cs::findbugs::ProjectPackagePrefixes
   function countPackageMember(String) in line 100
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getProjects(@DottedClassName String) defined in edu::umd::cs::findbugs::ProjectPackagePrefixes
   function getFilter(String) in line 110
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getProjects(@DottedClassName String) in line 114
      protection public
      9 lines of code
      1 parameters
      4 conditional paths
   function report() in line 140
      protection public
      66 lines of code
      0 parameters
      15 conditional paths
      uses function size() defined in edu::umd::cs::findbugs::ProjectPackagePrefixes
   function size() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ProjectPackagePrefixes() in line 207
      protection public
      27 lines of code
      0 parameters
      6 conditional paths
module edu::umd::cs::findbugs::ProjectPackagePrefixes::PrefixFilter
   function toString() in line 70
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ProjectStats.java
module edu::umd::cs::findbugs::ProjectStats
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   inherits from Cloneable
   function addBug(BugInstance) in line 263
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function addError(BugInstance) defined in edu::umd::cs::findbugs::PackageStats
      uses variable totalErrors defined in edu::umd::cs::findbugs::ProjectStats
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
   function addClass(@DottedClassName String,@CheckForNull String,boolean,int) in line 203
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function addClass(@DottedClassName String,@CheckForNull String,boolean,int,boolean) in line 221
      protection public
      16 lines of code
      5 parameters
      2 conditional paths
      uses function hasClassStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function addClass(String,String,boolean,int) defined in edu::umd::cs::findbugs::PackageStats
      uses variable totalClasses defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalSize defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalClassesFromPackageStats defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalSizeFromPackageStats defined in edu::umd::cs::findbugs::ProjectStats
   function addStats(ProjectStats) in line 556
      protection public
      33 lines of code
      1 parameters
      9 conditional paths
      uses variable totalSize defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalSizeFromPackageStats defined in edu::umd::cs::findbugs::ProjectStats
      uses function getCodeSize() defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalClasses defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalClassesFromPackageStats defined in edu::umd::cs::findbugs::ProjectStats
      uses function getNumClasses() defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalErrors defined in edu::umd::cs::findbugs::ProjectStats
      uses variable hasPackageStats defined in edu::umd::cs::findbugs::ProjectStats
      uses variable hasClassStats defined in edu::umd::cs::findbugs::ProjectStats
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
      uses function getClassStats() defined in edu::umd::cs::findbugs::PackageStats
      uses function addClass(String,String,boolean,int) defined in edu::umd::cs::findbugs::PackageStats
   function clearBugCounts() in line 278
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable totalErrors defined in edu::umd::cs::findbugs::ProjectStats
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
   function clone() in line 129
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function clone() defined in edu::umd::cs::findbugs::ProjectStats
   function computeFileStats(BugCollection) in line 371
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
   function getBaseFootprint() in line 186
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable baseFootprint defined in edu::umd::cs::findbugs::ProjectStats
   function getBugsOfPriority(int) in line 150
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable totalErrors defined in edu::umd::cs::findbugs::ProjectStats
   function getClassStats(@DottedClassName String) in line 245
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function hasClassStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function getClassStatsOrNull(String) defined in edu::umd::cs::findbugs::PackageStats
   function getCodeSize() in line 138
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable totalSizeFromPackageStats defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalSize defined in edu::umd::cs::findbugs::ProjectStats
   function getFileHashes(BugCollection) in line 459
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function computeFileStats(BugCollection) defined in edu::umd::cs::findbugs::ProjectStats
      uses function getSourceFiles() defined in edu::umd::cs::findbugs::workflow::FileBugHash
      uses function getHash(String) defined in edu::umd::cs::findbugs::workflow::FileBugHash
   function getNumClasses() in line 176
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable totalClassesFromPackageStats defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalClasses defined in edu::umd::cs::findbugs::ProjectStats
   function getPackageStats() in line 522
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
   function getPackageStats(String) in line 526
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
   function getProfiler() in line 604
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable profiler defined in edu::umd::cs::findbugs::ProjectStats
   function getReferencedClasses() in line 597
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable referencedClasses defined in edu::umd::cs::findbugs::ProjectStats
   function getTotalBugs() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable totalErrors defined in edu::umd::cs::findbugs::ProjectStats
   function hasClassStats() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasPackageStats() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function purgeClassesThatDontMatch(Pattern) in line 287
      protection public
      31 lines of code
      1 parameters
      10 conditional paths
      uses function hasClassStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
      uses function purgeClassesThatDontMatch(Pattern) defined in edu::umd::cs::findbugs::PackageStats
      uses function getClassStats() defined in edu::umd::cs::findbugs::PackageStats
      uses function hasPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
   function purgeClassStats() in line 319
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses function hasClassStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalClassesFromPackageStats defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalClasses defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalSizeFromPackageStats defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalSize defined in edu::umd::cs::findbugs::ProjectStats
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
   function purgePackageStats() in line 333
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses function hasPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalClassesFromPackageStats defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalClasses defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalSizeFromPackageStats defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalSize defined in edu::umd::cs::findbugs::ProjectStats
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
   function putPackageStats(String,int,int) in line 535
      protection public
      17 lines of code
      3 parameters
      2 conditional paths
      uses function hasPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalSizeFromPackageStats defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalClassesFromPackageStats defined in edu::umd::cs::findbugs::ProjectStats
      uses variable size defined in edu::umd::cs::findbugs::PackageStats
      uses function getNumClasses() defined in edu::umd::cs::findbugs::PackageStats
      uses function setNumClasses(int) defined in edu::umd::cs::findbugs::PackageStats
      uses function setSize(int) defined in edu::umd::cs::findbugs::PackageStats
   function recomputeFromComponents() in line 345
      protection public
      23 lines of code
      0 parameters
      6 conditional paths
      uses function hasClassStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function hasPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalErrors defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalSize defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalClasses defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalSizeFromPackageStats defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalClassesFromPackageStats defined in edu::umd::cs::findbugs::ProjectStats
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
   function reportSummary(@WillClose OutputStream) in line 479
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::ProjectStats
      uses function finish() defined in edu::umd::cs::findbugs::xml::XMLOutput
   function setReferencedClasses(int) in line 593
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setTimestamp(String) in line 161
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable TIMESTAMP_FORMAT defined in edu::umd::cs::findbugs::ProjectStats
   function setTimestamp(long) in line 165
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setTotalClasses(int) in line 608
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable totalClasses defined in edu::umd::cs::findbugs::ProjectStats
   function setTotalSize(int) in line 612
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable totalSize defined in edu::umd::cs::findbugs::ProjectStats
   function setVMVersion(String) in line 169
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 98
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function getNumClasses() defined in edu::umd::cs::findbugs::ProjectStats
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
   function transformSummaryToHTML(Writer) in line 494
      protection public
      27 lines of code
      1 parameters
      4 conditional paths
      uses function reportSummary(@WillClose OutputStream) defined in edu::umd::cs::findbugs::ProjectStats
   function writeXML(XMLOutput) in line 382
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 389
      protection public
      69 lines of code
      2 parameters
      12 conditional paths
      uses variable TIMESTAMP_FORMAT defined in edu::umd::cs::findbugs::ProjectStats
      uses variable analysisTimestamp defined in edu::umd::cs::findbugs::ProjectStats
      uses function getNumClasses() defined in edu::umd::cs::findbugs::ProjectStats
      uses variable referencedClasses defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalErrors defined in edu::umd::cs::findbugs::ProjectStats
      uses function getCodeSize() defined in edu::umd::cs::findbugs::ProjectStats
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
      uses variable java_version defined in edu::umd::cs::findbugs::ProjectStats
      uses variable java_vm_version defined in edu::umd::cs::findbugs::ProjectStats
      uses variable baseFootprint defined in edu::umd::cs::findbugs::ProjectStats
      uses function getCpuTime() defined in edu::umd::cs::findbugs::Footprint
      uses function getClockTime() defined in edu::umd::cs::findbugs::Footprint
      uses function getPeakMemory() defined in edu::umd::cs::findbugs::Footprint
      uses function getCollectionTime() defined in edu::umd::cs::findbugs::Footprint
      uses function getSourceFiles() defined in edu::umd::cs::findbugs::workflow::FileBugHash
      uses function getBugCount(String) defined in edu::umd::cs::findbugs::workflow::FileBugHash
      uses function getSize(String) defined in edu::umd::cs::findbugs::workflow::FileBugHash
      uses function getHash(String) defined in edu::umd::cs::findbugs::workflow::FileBugHash
      uses variable OMIT_PACKAGE_STATS defined in edu::umd::cs::findbugs::ProjectStats
      uses function getProfiler() defined in edu::umd::cs::findbugs::ProjectStats
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::log::Profiler
   function ProjectStats() in line 112
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   variable analysisTimestamp in line 84
   variable baseFootprint in line 90
   variable hasClassStats in line 86
   variable hasPackageStats in line 88
   variable java_version in line 92
   variable java_vm_version in line 93
   variable OMIT_PACKAGE_STATS in line 68
   variable packageStatsMap in line 70
   variable profiler in line 95
   variable referencedClasses in line 76
   variable TIMESTAMP_FORMAT in line 66
   variable totalClasses in line 74
   variable totalClassesFromPackageStats in line 82
   variable totalErrors in line 72
   variable totalSize in line 78
   variable totalSizeFromPackageStats in line 80
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/PropertyBundle.java
module edu::umd::cs::findbugs::PropertyBundle
   function copy() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function PropertyBundle() defined in edu::umd::cs::findbugs::PropertyBundle
      uses variable properties defined in edu::umd::cs::findbugs::PropertyBundle
   function getBoolean(String) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBoolean(String,boolean) in line 135
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses function getProperty(String) defined in edu::umd::cs::findbugs::PropertyBundle
      uses function toBoolean(String) defined in edu::umd::cs::findbugs::PropertyBundle
   function getInt(String,int) in line 160
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function getProperty(String) defined in edu::umd::cs::findbugs::PropertyBundle
   function getOSDependentProperty(String) in line 177
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getProperty(String) defined in edu::umd::cs::findbugs::PropertyBundle
   function getProperties() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable properties defined in edu::umd::cs::findbugs::PropertyBundle
   function getProperty(String) in line 191
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable properties defined in edu::umd::cs::findbugs::PropertyBundle
   function getProperty(String,String) in line 220
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getProperty(String) defined in edu::umd::cs::findbugs::PropertyBundle
   function loadProperties(Properties) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable properties defined in edu::umd::cs::findbugs::PropertyBundle
   function loadPropertiesFromString(String) in line 90
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable properties defined in edu::umd::cs::findbugs::PropertyBundle
   function loadPropertiesFromURL(URL) in line 105
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable properties defined in edu::umd::cs::findbugs::PropertyBundle
   function rewriteURLAccordingToProperties(String) in line 228
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function setProperty(String,String) in line 204
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable properties defined in edu::umd::cs::findbugs::PropertyBundle
   function toBoolean(String) in line 149
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 209
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable properties defined in edu::umd::cs::findbugs::PropertyBundle
   function PropertyBundle() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable properties defined in edu::umd::cs::findbugs::PropertyBundle
   function PropertyBundle(Properties) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable properties defined in edu::umd::cs::findbugs::PropertyBundle
   variable properties in line 38
module edu::umd::cs::findbugs::PropertyBundle::Rewriter
   variable urlRewriteFormat in line 45
   variable urlRewritePattern in line 43
   variable urlRewritePatternString in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/props/AbstractWarningProperty.java
module edu::umd::cs::findbugs::props::AbstractWarningProperty
   inherits from edu::umd::cs::findbugs::props::WarningProperty
   abstract class
   function getName() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable shortName defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   function getPriorityAdjustment() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   function AbstractWarningProperty(String,PriorityAdjustment) in line 41
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable shortName defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable priorityAdjustment in line 30
   variable shortName in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/props/GeneralWarningProperty.java
module edu::umd::cs::findbugs::props::GeneralWarningProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function GeneralWarningProperty(String,PriorityAdjustment) in line 30
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable CALLED_METHOD_1 in line 42
      protection public
   variable CALLED_METHOD_2 in line 46
      protection public
   variable CALLED_METHOD_3 in line 50
      protection public
   variable CALLED_METHOD_4 in line 54
      protection public
   variable FALSE_POSITIVE in line 65
      protection public
   variable IN_UNCALLABLE_METHOD in line 62
      protection public
   variable NOISY_BUG in line 68
      protection public
   variable ON_EXCEPTION_PATH in line 58
      protection public
   variable RECEIVER_OBJECT_TYPE in line 38
      protection public
   variable SILENT_BUG in line 71
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/props/PriorityAdjustment.java
module edu::umd::cs::findbugs::props::PriorityAdjustment
   function toString() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::props::PriorityAdjustment
   function PriorityAdjustment(String) in line 30
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::props::PriorityAdjustment
   variable A_LITTLE_BIT_HIGHER_PRIORITY in line 72
      protection public
   variable A_LITTLE_BIT_LOWER_PRIORITY in line 69
      protection public
   variable AT_MOST_LOW in line 57
      protection public
   variable AT_MOST_MEDIUM in line 60
      protection public
   variable FALSE_POSITIVE in line 75
      protection public
   variable LOWER_PRIORITY in line 66
      protection public
   variable LOWER_PRIORITY_TO_AT_MOST_NORMAL in line 50
      protection public
   variable NO_ADJUSTMENT in line 40
      protection public
   variable PEGGED_HIGH in line 63
      protection public
   variable RAISE_PRIORITY in line 43
      protection public
   variable RAISE_PRIORITY_TO_AT_LEAST_NORMAL in line 46
      protection public
   variable RAISE_PRIORITY_TO_HIGH in line 54
      protection public
   variable value in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/props/WarningProperty.java
module edu::umd::cs::findbugs::props::WarningProperty
   function getName() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPriorityAdjustment() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/props/WarningPropertySet.java
module edu::umd::cs::findbugs::props::WarningPropertySet
   inherits from Cloneable
   function addProperty(T) in line 83
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function checkProperty(T,Object) in line 149
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function clone() in line 67
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function computePriority(int) in line 175
      protection public
      79 lines of code
      1 parameters
      1 conditional paths
   function containsProperty(T) in line 134
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function decorateBugInstance(BugInstance) in line 274
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function getProperty(T) in line 163
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isFalsePositive(int) in line 264
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeProperty(T) in line 95
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setProperty(T,String) in line 109
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function setProperty(T,Boolean) in line 122
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 42
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
   function WarningPropertySet() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable map in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/props/WarningPropertyUtil.java
module edu::umd::cs::findbugs::props::WarningPropertyUtil
   abstract class
   function addPropertiesForDataMining(WarningPropertySet< WarningProperty >,ClassContext,Method,Location) in line 186
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses function addReceiverObjectType(WarningPropertySet< WarningProperty >,ClassContext,Method,Location) defined in edu::umd::cs::findbugs::props::WarningPropertyUtil
      uses function addRecentlyCalledMethods(WarningPropertySet< WarningProperty >,ClassContext,Method,Location) defined in edu::umd::cs::findbugs::props::WarningPropertyUtil
   function addPropertiesForLocation(WarningPropertySet< WarningProperty >,ClassContext,Method,int) in line 205
      protection public
      11 lines of code
      4 parameters
      3 conditional paths
      uses function pcToLocation(ClassContext,Method,int) defined in edu::umd::cs::findbugs::props::WarningPropertyUtil
      uses function addPropertiesForDataMining(WarningPropertySet< WarningProperty >,ClassContext,Method,Location) defined in edu::umd::cs::findbugs::props::WarningPropertyUtil
   function addReceiverObjectType(WarningPropertySet< WarningProperty >,ClassContext,Method,Location) in line 99
      23 lines of code
      4 parameters
      5 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable receiverObjectInstructionSet defined in edu::umd::cs::findbugs::props::WarningPropertyUtil
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function setProperty(T,String) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable RECEIVER_OBJECT_TYPE defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
   function addRecentlyCalledMethods(WarningPropertySet< WarningProperty >,ClassContext,Method,Location) in line 136
      36 lines of code
      4 parameters
      8 conditional paths
      uses function getCallListDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses function callIterator() defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses variable CALLED_METHOD_1 defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses variable CALLED_METHOD_2 defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses variable CALLED_METHOD_3 defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses variable CALLED_METHOD_4 defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses function setProperty(T,String) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses function getMethodName() defined in edu::umd::cs::findbugs::ba::ca::Call
   function pcToLocation(ClassContext,Method,int) in line 75
      10 lines of code
      3 parameters
      3 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   variable receiverObjectInstructionSet in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/QueryBugAnnotations.java
module edu::umd::cs::findbugs::QueryBugAnnotations
   abstract class
   function addKeyword(String) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable keywordSet defined in edu::umd::cs::findbugs::QueryBugAnnotations
   function match(BugInstance,String) in line 91
      1 lines of code
      2 parameters
      1 conditional paths
   function scan(String) in line 53
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
   function scan(BugCollection,String) in line 68
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
      uses function getTextAnnotationWords() defined in edu::umd::cs::findbugs::BugInstance
      uses variable keywordSet defined in edu::umd::cs::findbugs::QueryBugAnnotations
      uses function match(BugInstance,String) defined in edu::umd::cs::findbugs::QueryBugAnnotations
   variable keywordSet in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/RecursiveFileSearch.java
module edu::umd::cs::findbugs::RecursiveFileSearch
   function fileNameIterator() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable resultList defined in edu::umd::cs::findbugs::RecursiveFileSearch
   function getDirectoriesScanned() in line 137
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable directoriesScannedList defined in edu::umd::cs::findbugs::RecursiveFileSearch
   function search() in line 83
      protection public
      42 lines of code
      0 parameters
      9 conditional paths
      uses variable baseDir defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses variable directoryWorkList defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses variable directoriesScanned defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses variable directoriesScannedList defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses variable fileFilter defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses variable resultList defined in edu::umd::cs::findbugs::RecursiveFileSearch
   function RecursiveFileSearch(String,FileFilter) in line 61
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable baseDir defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses variable fileFilter defined in edu::umd::cs::findbugs::RecursiveFileSearch
   variable baseDir in line 40
   variable directoriesScanned in line 46
   variable directoriesScannedList in line 48
   variable directoryWorkList in line 44
   variable fileFilter in line 42
   variable resultList in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ResourceCollection.java
module edu::umd::cs::findbugs::ResourceCollection
   function addCreatedResource(Location,Resource) in line 77
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function addPreexistingResource(Resource) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getCreatedResource(Location) in line 105
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isEmpty() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function resourceIterator() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ResourceCollection() in line 52
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable locationToResourceMap in line 47
   variable resourceList in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ResourceCreationPoint.java
module edu::umd::cs::findbugs::ResourceCreationPoint
   function getLocation() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ResourceCreationPoint
   function getResourceClass() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable resourceClass defined in edu::umd::cs::findbugs::ResourceCreationPoint
   function ResourceCreationPoint(Location,String) in line 51
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses variable resourceClass defined in edu::umd::cs::findbugs::ResourceCreationPoint
   variable location in line 36
   variable resourceClass in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ResourceTrackingDetector.java
module edu::umd::cs::findbugs::ResourceTrackingDetector
   inherits from edu::umd::cs::findbugs::Detector
   abstract class
   function analyzeMethod(ClassContext,Method,ResourceTrackerType,ResourceCollection< Resource >) in line 161
      protection public
      37 lines of code
      4 parameters
      1 conditional paths
   function buildResourceCollection(ClassContext,Method,ResourceTrackerType) in line 125
      18 lines of code
      3 parameters
      1 conditional paths
   function getResourceTracker(ClassContext,Method) in line 70
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function inspectResult(ClassContext,MethodGen,CFG,Dataflow< ResourceValueFrame, ResourceValueAnalysis< Resource >>,Resource) in line 73
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   function mightCloseResource(ClassContext,Method,ResourceTrackerType) in line 144
      16 lines of code
      3 parameters
      1 conditional paths
   function prescreen(ClassContext,Method,boolean) in line 68
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function report() in line 200
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 77
      protection public
      47 lines of code
      1 parameters
      1 conditional paths
   function ResourceTrackingDetector(BugReporter) in line 63
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable bugAccumulator in line 59
   variable bugReporter in line 61
   variable DEBUG in line 55
   variable DEBUG_METHOD_NAME in line 57
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/SAXBugCollectionHandler.java
module edu::umd::cs::findbugs::SAXBugCollectionHandler
   inherits from org::xml::sax::helpers::DefaultHandler
   function addMatcher(Matcher) in line 450
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable matcherStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function characters(char[],int,int) in line 831
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable textBuffer defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function createSourceLineAnnotation(String,Attributes) in line 697
      31 lines of code
      2 parameters
      4 conditional paths
      uses function getRequiredAttribute(Attributes,String,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function getOptionalAttribute(Attributes,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable UNKNOWN_SOURCE_FILE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function setSynthetic(boolean) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function discardedElement(String) in line 152
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function endElement(String,String,String) in line 730
      protection public
      84 lines of code
      3 parameters
      27 conditional paths
      uses function discardedElement(String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable nestingOfIgnoredElements defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable elementStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function isTopLevelFilter(String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function isCompoundElementTag(String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable DEBUG defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable matcherStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable BUG_COLLECTION defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable bugCollection defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::BugCollection
      uses variable bugInstance defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable PROJECT defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable project defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function addFile(String) defined in edu::umd::cs::findbugs::Project
      uses function makeAbsolute(String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function getTextContents() defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
      uses function addAuxClasspathEntry(String) defined in edu::umd::cs::findbugs::Project
      uses variable cloudPropertyKey defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function getCloudProperties() defined in edu::umd::cs::findbugs::Project
      uses function setAnnotationText(String,@CheckForNull BugCollection) defined in edu::umd::cs::findbugs::BugInstance
      uses variable ERRORS_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ANALYSIS_ERROR_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable analysisError defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setMessage(String) defined in edu::umd::cs::findbugs::AnalysisError
      uses function addError(String) defined in edu::umd::cs::findbugs::BugCollection
      uses variable ERROR_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable stackTrace defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setStackTrace(String[]) defined in edu::umd::cs::findbugs::AnalysisError
      uses variable MISSING_CLASS_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function addMissingClass(String) defined in edu::umd::cs::findbugs::BugCollection
      uses variable ERROR_MESSAGE_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ERROR_EXCEPTION_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function setExceptionMessage(String) defined in edu::umd::cs::findbugs::AnalysisError
      uses variable ERROR_STACK_TRACE_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function setClassFeatureSet(ClassFeatureSet) defined in edu::umd::cs::findbugs::BugCollection
      uses variable classFeatureSet defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function getOptionalAttribute(Attributes,String) in line 80
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function memoized(String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function getRequiredAttribute(Attributes,String,String) in line 835
      7 lines of code
      3 parameters
      2 conditional paths
      uses function memoized(String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function getTextContents() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function memoized(String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable textBuffer defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function isCompoundElementTag(String) in line 442
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable outerElementTags defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function isTopLevelFilter(String) in line 446
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable FIND_BUGS_FILTER defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function makeAbsolute(String) in line 815
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable base defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function memoized(String) in line 161
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable cache defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function parseBugInstanceContents(String,Attributes) in line 555
      102 lines of code
      2 parameters
      23 conditional paths
      uses function getRequiredAttribute(Attributes,String,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable bugAnnotationWithSourceLines defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function getOptionalAttribute(Attributes,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setTypeParameters(String) defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function createSourceLineAnnotation(String,Attributes) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function isSynthetic() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable bugInstance defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setProperty(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function setUserDesignationKey(String,@CheckForNull BugCollection) defined in edu::umd::cs::findbugs::BugInstance
      uses function setUser(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function setUserAnnotationTimestamp(long) defined in edu::umd::cs::findbugs::BugInstance
      uses function setUserAnnotationDirty(boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function setDescription(String) defined in edu::umd::cs::findbugs::BugAnnotation
      uses function setAnnotationRole(Attributes,BugAnnotation) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function parseLong(String,long) in line 658
      9 lines of code
      2 parameters
      2 conditional paths
   function parseMatcher(String,Attributes) in line 485
      69 lines of code
      2 parameters
      23 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable elementStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable matcherStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function getOptionalAttribute(Attributes,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function addMatcher(Matcher) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function getRequiredAttribute(Attributes,String,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function pushCompoundMatcherAsChild(CompoundMatcher) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function pushCompoundMatcher(CompoundMatcher) in line 475
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable matcherStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function pushCompoundMatcherAsChild(CompoundMatcher) in line 470
      4 lines of code
      1 parameters
      1 conditional paths
      uses function addMatcher(Matcher) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function pushCompoundMatcher(CompoundMatcher) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function setAnnotationRole(Attributes,BugAnnotation) in line 690
      6 lines of code
      2 parameters
      2 conditional paths
      uses function getOptionalAttribute(Attributes,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setDescription(String) defined in edu::umd::cs::findbugs::BugAnnotation
   function startElement(String,String,String,Attributes) in line 176
      protection public
      265 lines of code
      4 parameters
      59 conditional paths
      uses function discardedElement(String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable nestingOfIgnoredElements defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable elementStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable topLevelName defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable BUG_COLLECTION defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable bugCollection defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function getOptionalAttribute(Attributes,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setAnalysisVersion(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function parseLong(String,long) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setSequenceNumber(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function setAnalysisTimestamp(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function isTopLevelFilter(String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable project defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable filter defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setSuppressionFilter(@Nonnull Filter) defined in edu::umd::cs::findbugs::Project
      uses variable matcherStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function pushCompoundMatcher(CompoundMatcher) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable PROJECT defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setProjectName(String) defined in edu::umd::cs::findbugs::Project
      uses function getRequiredAttribute(Attributes,String,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable bugInstance defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setFirstVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses function setLastVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses function isDead() defined in edu::umd::cs::findbugs::BugInstance
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function setIntroducedByChangeOfExistingClass(boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function setRemovedByChangeOfPersistingClass(boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function setOldInstanceHash(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getXmlProps() defined in edu::umd::cs::findbugs::BugInstance
      uses function setFirstSeen(Date) defined in edu::umd::cs::findbugs::BugInstance::XmlProps
      uses variable LOGGER defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setIsInCloud(boolean) defined in edu::umd::cs::findbugs::BugInstance::XmlProps
      uses function setReviewCount(int) defined in edu::umd::cs::findbugs::BugInstance::XmlProps
      uses function setConsensus(String) defined in edu::umd::cs::findbugs::BugInstance::XmlProps
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function setTotalClasses(int) defined in edu::umd::cs::findbugs::ProjectStats
      uses function setTotalSize(int) defined in edu::umd::cs::findbugs::ProjectStats
      uses function setReferencedClasses(int) defined in edu::umd::cs::findbugs::ProjectStats
      uses function setVMVersion(String) defined in edu::umd::cs::findbugs::ProjectStats
      uses function setTimestamp(String) defined in edu::umd::cs::findbugs::ProjectStats
      uses function parseBugInstanceContents(String,Attributes) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable bugAnnotationWithSourceLines defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setSourceLines(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function createSourceLineAnnotation(String,Attributes) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable ERRORS_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ANALYSIS_ERROR_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ERROR_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable analysisError defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable stackTrace defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function putPackageStats(String,int,int) defined in edu::umd::cs::findbugs::ProjectStats
      uses function addClass(@DottedClassName String,@CheckForNull String,boolean,int) defined in edu::umd::cs::findbugs::ProjectStats
      uses function isCompoundElementTag(String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function parseMatcher(String,Attributes) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable classFeatureSet defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setClassName(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable FEATURE_ELEMENT_NAME defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function addFeature(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable HISTORY_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::AppVersion
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::AppVersion
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::AppVersion
      uses function setCodeSize(int) defined in edu::umd::cs::findbugs::AppVersion
      uses function setNumClasses(int) defined in edu::umd::cs::findbugs::AppVersion
      uses function addAppVersion(AppVersion) defined in edu::umd::cs::findbugs::BugCollection
      uses variable PROJECT_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function setCloudId(@Nullable String) defined in edu::umd::cs::findbugs::Project
      uses function setXmlCloudDetails(Map< String, String >) defined in edu::umd::cs::findbugs::BugCollection
      uses function setPluginStatusTrinary(String,Boolean) defined in edu::umd::cs::findbugs::Project
      uses variable cloudPropertyKey defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable textBuffer defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function SAXBugCollectionHandler(String,@CheckForNull BugCollection,@CheckForNull Project,@CheckForNull File) in line 119
      12 lines of code
      4 parameters
      1 conditional paths
      uses variable topLevelName defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable bugCollection defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable project defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable base defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function SAXBugCollectionHandler(BugCollection,@CheckForNull File) in line 132
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable BUG_COLLECTION defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable bugCollection defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses variable base defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function SAXBugCollectionHandler(BugCollection) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable BUG_COLLECTION defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable bugCollection defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
   function SAXBugCollectionHandler(Project,File) in line 140
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable PROJECT defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable project defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable base defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function SAXBugCollectionHandler(Filter,File) in line 144
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable FIND_BUGS_FILTER defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable base defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable filter defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function pushCompoundMatcher(CompoundMatcher) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   variable analysisError in line 104
   variable base in line 113
   variable BUG_COLLECTION in line 76
   variable bugAnnotationWithSourceLines in line 102
   variable bugCollection in line 85
   variable bugInstance in line 100
   variable cache in line 94
   variable classFeatureSet in line 107
   variable cloudPropertyKey in line 117
   variable DEBUG in line 173
   variable elementStack in line 96
   variable filter in line 92
   variable FIND_BUGS_FILTER in line 72
   variable LOGGER in line 78
   variable matcherStack in line 90
   variable nestingOfIgnoredElements in line 111
   variable outerElementTags in line 483
   variable PROJECT in line 74
   variable project in line 88
   variable stackTrace in line 109
   variable textBuffer in line 98
   variable topLevelName in line 115
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/SelfCalls.java
module edu::umd::cs::findbugs::SelfCalls
   function calledMethodIterator() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable calledMethodSet defined in edu::umd::cs::findbugs::SelfCalls
   function callSiteIterator() in line 132
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable callGraph defined in edu::umd::cs::findbugs::SelfCalls
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function execute() in line 71
      protection public
      30 lines of code
      0 parameters
      7 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::SelfCalls
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable DEBUG defined in edu::umd::cs::findbugs::SelfCalls
      uses variable callGraph defined in edu::umd::cs::findbugs::SelfCalls
      uses function addNode(Method) defined in edu::umd::cs::findbugs::CallGraph
      uses function getNumVertices() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function scan(CallGraphNode) defined in edu::umd::cs::findbugs::SelfCalls
      uses function getNodeForMethod(Method) defined in edu::umd::cs::findbugs::CallGraph
      uses function getNumEdges() defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function getCallGraph() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable callGraph defined in edu::umd::cs::findbugs::SelfCalls
   function hasSynchronization() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSelfCall(InvokeInstruction) in line 203
      39 lines of code
      1 parameters
      5 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::SelfCalls
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function wantCallsFor(Method) defined in edu::umd::cs::findbugs::SelfCalls
      uses variable DEBUG defined in edu::umd::cs::findbugs::SelfCalls
   function scan(CallGraphNode) in line 166
      33 lines of code
      1 parameters
      7 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::SelfCalls
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function hasSynchronization() defined in edu::umd::cs::findbugs::SelfCalls
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable next defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function isSelfCall(InvokeInstruction) defined in edu::umd::cs::findbugs::SelfCalls
      uses variable callGraph defined in edu::umd::cs::findbugs::SelfCalls
      uses function createEdge(CallGraphNode,CallGraphNode,CallSite) defined in edu::umd::cs::findbugs::CallGraph
      uses function getNodeForMethod(Method) defined in edu::umd::cs::findbugs::CallGraph
      uses variable calledMethodSet defined in edu::umd::cs::findbugs::SelfCalls
   function wantCallsFor(Method) in line 125
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function SelfCalls(ClassContext) in line 61
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::SelfCalls
   variable calledMethodSet in line 51
   variable callGraph in line 49
   variable classContext in line 47
   variable DEBUG in line 45
   variable hasSynchronization in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/ShowHelp.java
module edu::umd::cs::findbugs::ShowHelp
   function main(String[]) in line 30
      protection public
      29 lines of code
      1 parameters
      4 conditional paths
      uses variable RELEASE defined in edu::umd::cs::findbugs::Version
      uses variable WEBSITE defined in edu::umd::cs::findbugs::Version
      uses function showGeneralOptions() defined in edu::umd::cs::findbugs::ShowHelp
   function showGeneralOptions() in line 64
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function showSynopsis() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/SloppyBugComparator.java
module edu::umd::cs::findbugs::SloppyBugComparator
   inherits from edu::umd::cs::findbugs::WarningComparator
   function compare(BugInstance,BugInstance) in line 112
      protection public
      48 lines of code
      2 parameters
      9 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses variable DEBUG defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function compareClassesAllowingNull(ClassAnnotation,ClassAnnotation) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses function compareMethodsAllowingNull(MethodAnnotation,MethodAnnotation) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function compareFieldsAllowingNull(FieldAnnotation,FieldAnnotation) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
   function compareClassesAllowingNull(ClassAnnotation,ClassAnnotation) in line 63
      18 lines of code
      2 parameters
      4 conditional paths
      uses function compareNullElements(Object,Object) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function rewriteClassName(String) defined in edu::umd::cs::findbugs::model::ClassNameRewriter
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEBUG defined in edu::umd::cs::findbugs::SloppyBugComparator
   function compareFieldsAllowingNull(FieldAnnotation,FieldAnnotation) in line 91
      11 lines of code
      2 parameters
      3 conditional paths
      uses function compareNullElements(Object,Object) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function convertField(FieldAnnotation) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses variable DEBUG defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function compareTo(BugAnnotation) defined in edu::umd::cs::findbugs::FieldAnnotation
   function compareMethodsAllowingNull(MethodAnnotation,MethodAnnotation) in line 82
      8 lines of code
      2 parameters
      2 conditional paths
      uses function compareNullElements(Object,Object) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function convertMethod(MethodAnnotation) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function compareTo(BugAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
   function compareNullElements(Object,Object) in line 46
      7 lines of code
      2 parameters
      2 conditional paths
   function convertField(FieldAnnotation) in line 107
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::SloppyBugComparator
   function convertMethod(MethodAnnotation) in line 103
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::SloppyBugComparator
   function setClassNameRewriter(ClassNameRewriter) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::SloppyBugComparator
   function SloppyBugComparator() in line 38
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable classNameRewriter in line 36
   variable DEBUG in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/SortedBugCollection.java
module edu::umd::cs::findbugs::SortedBugCollection
   inherits from edu::umd::cs::findbugs::BugCollection
   function add(BugInstance) in line 275
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
   function add(BugInstance,boolean) in line 1007
      protection public
      19 lines of code
      2 parameters
      4 conditional paths
      uses function bugsPopulated() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable preciseHashOccurrenceNumbersAvailable defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setFirstVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses variable sequence defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function invalidateHashes() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function isDead() defined in edu::umd::cs::findbugs::BugInstance
      uses variable projectStats defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function addBug(BugInstance) defined in edu::umd::cs::findbugs::ProjectStats
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function addAll(Collection< BugInstance >) in line 244
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
   function addAll(Collection< BugInstance >,boolean) in line 259
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
   function addAppVersion(AppVersion) in line 1228
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable appVersionList defined in edu::umd::cs::findbugs::SortedBugCollection
   function addError(String) in line 287
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function addError(String,Throwable) in line 1046
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses function addMissingClass(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses variable errorList defined in edu::umd::cs::findbugs::SortedBugCollection
   function addError(AnalysisError) in line 1066
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable errorList defined in edu::umd::cs::findbugs::SortedBugCollection
   function addMissingClass(String) in line 1075
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function addError(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable missingClassSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function appVersionIterator() in line 1223
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable appVersionList defined in edu::umd::cs::findbugs::SortedBugCollection
   function bugsPopulated() in line 1409
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function checkInputStream(@WillNotClose InputStream) in line 831
      36 lines of code
      1 parameters
      7 conditional paths
   function classFeatureSetIterator() in line 1264
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classFeatureSetMap defined in edu::umd::cs::findbugs::SortedBugCollection
   function clearAppVersions() in line 1233
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable appVersionList defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable sequence defined in edu::umd::cs::findbugs::SortedBugCollection
   function clearBugInstances() in line 1199
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function invalidateHashes() defined in edu::umd::cs::findbugs::SortedBugCollection
   function clearClassFeatures() in line 1269
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classFeatureSetMap defined in edu::umd::cs::findbugs::SortedBugCollection
   function clearCloud() in line 1359
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable cloud defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::Project
      uses function unregisterCloud(Project,BugCollection,Cloud) defined in edu::umd::cs::findbugs::IGuiCallback
      uses function shutdown() defined in edu::umd::cs::findbugs::cloud::Cloud
   function clearErrors() in line 1070
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable errorList defined in edu::umd::cs::findbugs::SortedBugCollection
   function clearMissingClasses() in line 1205
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable missingClassSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function cloneAll(Collection< BugInstance >,Collection< BugInstance >) in line 877
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
   function computeBugHashes() in line 537
      protection public
      24 lines of code
      0 parameters
      5 conditional paths
      uses variable preciseHashOccurrenceNumbersAvailable defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function invalidateHashes() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
   function contains(BugInstance) in line 1098
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function createEmptyCollectionWithMetadata() in line 1181
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
      uses function SortedBugCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable projectStats defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function clone() defined in edu::umd::cs::findbugs::ProjectStats
      uses variable comparator defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function clearBugCounts() defined in edu::umd::cs::findbugs::ProjectStats
      uses variable errorList defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable missingClassSet defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable summaryHTML defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable classFeatureSetMap defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable sequence defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable timestamp defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable releaseName defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable appVersionList defined in edu::umd::cs::findbugs::SortedBugCollection
   function doReadXML(@WillClose InputStream,@CheckForNull File) in line 380
      13 lines of code
      2 parameters
      2 conditional paths
      uses function checkInputStream(@WillNotClose InputStream) defined in edu::umd::cs::findbugs::SortedBugCollection
   function doReadXML(@WillClose Reader,@CheckForNull File) in line 394
      40 lines of code
      2 parameters
      5 conditional paths
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProfiler() defined in edu::umd::cs::findbugs::ProjectStats
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function bugsPopulated() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setModified(boolean) defined in edu::umd::cs::findbugs::Project
   function duplicate() in line 1174
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function createEmptyCollectionWithMetadata() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function cloneAll(Collection< BugInstance >,Collection< BugInstance >) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function emitErrors(XMLOutput) in line 778
      52 lines of code
      1 parameters
      5 conditional paths
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable errorList defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable missingClassSet defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable ERRORS_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function getErrors() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable ERROR_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ERROR_MESSAGE_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ERROR_EXCEPTION_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ERROR_STACK_TRACE_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable MISSING_CLASS_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function missingClassIterator() defined in edu::umd::cs::findbugs::SortedBugCollection
   function findBug(String,String,int) in line 1297
      protection public
      9 lines of code
      3 parameters
      3 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function getAnalysisTimestamp() in line 228
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAnalysisVersion() in line 1312
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAppVersionFromSequenceNumber(long) in line 1284
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses variable appVersionList defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCurrentAppVersion() defined in edu::umd::cs::findbugs::SortedBugCollection
   function getClassFeatureSet(String) in line 1255
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classFeatureSetMap defined in edu::umd::cs::findbugs::SortedBugCollection
   function getCloud() in line 185
      protection public
      31 lines of code
      0 parameters
      7 conditional paths
      uses variable cloud defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProject() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::Project
      uses variable LOGGER defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCloudName() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function showMessageDialog(String) defined in edu::umd::cs::findbugs::IGuiCallback
      uses variable FAIL_ON_CLOUD_ERROR defined in edu::umd::cs::findbugs::cloud::CloudFactory
      uses variable FAIL_ON_CLOUD_ERROR_PROP defined in edu::umd::cs::findbugs::cloud::CloudFactory
      uses function registerCloud(Project,BugCollection,Cloud) defined in edu::umd::cs::findbugs::IGuiCallback
      uses function isInitialized() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function bugsPopulated() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function bugsPopulated() defined in edu::umd::cs::findbugs::cloud::Cloud
   function getCloudLazily() in line 177
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable cloud defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function bugsPopulated() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function bugsPopulated() defined in edu::umd::cs::findbugs::cloud::Cloud
   function getCollection() in line 1042
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function getCurrentAppVersion() in line 295
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::AppVersion
      uses function getReleaseName() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::AppVersion
      uses function getTimestamp() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setNumClasses(int) defined in edu::umd::cs::findbugs::AppVersion
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setCodeSize(int) defined in edu::umd::cs::findbugs::AppVersion
   function getDataSource() in line 167
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getErrors() in line 1090
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable errorList defined in edu::umd::cs::findbugs::SortedBugCollection
   function getMatching(BugInstance) in line 1102
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function equals(Object) defined in edu::umd::cs::findbugs::BugInstance
   function getProject() in line 172
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getProjectStats() in line 1128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable projectStats defined in edu::umd::cs::findbugs::SortedBugCollection
   function getReleaseName() in line 1210
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable releaseName defined in edu::umd::cs::findbugs::SortedBugCollection
   function getSequenceNumber() in line 1165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::SortedBugCollection
   function getSummaryHTML() in line 1111
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses variable summaryHTML defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function transformSummaryToHTML(Writer) defined in edu::umd::cs::findbugs::ProjectStats
   function getTimeFinishedLoading() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTimestamp() in line 1251
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::SortedBugCollection
   function getTimeStartedLoading() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getWithMessages() in line 1279
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable withMessages defined in edu::umd::cs::findbugs::SortedBugCollection
   function getXmlCloudDetails() in line 1395
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable xmlCloudDetails defined in edu::umd::cs::findbugs::SortedBugCollection
   function hasDeadBugs() in line 1152
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function invalidateHashes() in line 1027
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable preciseHashOccurrenceNumbersAvailable defined in edu::umd::cs::findbugs::SortedBugCollection
   function isApplySuppressions() in line 218
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable applySuppressions defined in edu::umd::cs::findbugs::SortedBugCollection
   function isMultiversion() in line 1147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::SortedBugCollection
   function iterator() in line 1037
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function lookupFromUniqueId(String) in line 1134
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function missingClassIterator() in line 1094
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable missingClassSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function newIOException(Object,IOException) in line 332
      5 lines of code
      2 parameters
      1 conditional paths
   function progessMonitoredInputStream(File,String) in line 1316
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function wrapGzip(InputStream,Object) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function progressMonitoredInputStream(InputStream,int,String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function progessMonitoredInputStream(URLConnection,String) in line 1325
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function wrapGzip(InputStream,Object) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function progressMonitoredInputStream(InputStream,int,String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function progressMonitoredInputStream(InputStream,int,String) in line 1331
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::Project
      uses function getProgressMonitorInputStream(InputStream,int,String) defined in edu::umd::cs::findbugs::IGuiCallback
   function readXML(String) in line 308
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function readXML(File) in line 319
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function setCurrentWorkingDirectory(File) defined in edu::umd::cs::findbugs::Project
      uses function progessMonitoredInputStream(File,String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function newIOException(Object,IOException) defined in edu::umd::cs::findbugs::SortedBugCollection
   function readXML(URL) in line 338
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function progessMonitoredInputStream(File,String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function newIOException(Object,IOException) defined in edu::umd::cs::findbugs::SortedBugCollection
   function readXML(@WillClose InputStream,File) in line 358
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function doReadXML(@WillClose InputStream,@CheckForNull File) defined in edu::umd::cs::findbugs::SortedBugCollection
   function readXML(@WillClose InputStream) in line 367
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function doReadXML(@WillClose InputStream,@CheckForNull File) defined in edu::umd::cs::findbugs::SortedBugCollection
   function readXML(@WillClose Reader) in line 374
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function doReadXML(@WillClose InputStream,@CheckForNull File) defined in edu::umd::cs::findbugs::SortedBugCollection
   function reinitializeCloud() in line 1370
      protection public
      18 lines of code
      0 parameters
      3 conditional paths
      uses variable cloud defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getGuiCallback() defined in edu::umd::cs::findbugs::Project
      uses function unregisterCloud(Project,BugCollection,Cloud) defined in edu::umd::cs::findbugs::IGuiCallback
      uses function shutdown() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getCloud() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function isInitialized() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function bugsPopulated() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function bugsPopulated() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function initiateCommunication() defined in edu::umd::cs::findbugs::cloud::Cloud
   function remove(BugInstance) in line 1031
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function invalidateHashes() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function setAnalysisTimestamp(long) in line 233
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::SortedBugCollection
   function setAnalysisVersion(String) in line 1308
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setApplySuppressions(boolean) in line 223
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable applySuppressions defined in edu::umd::cs::findbugs::SortedBugCollection
   function setClassFeatureSet(ClassFeatureSet) in line 1260
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classFeatureSetMap defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getClassName() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function setDoNotUseCloud(boolean) in line 1404
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setMinimalXML(boolean) in line 1400
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable minimalXML defined in edu::umd::cs::findbugs::SortedBugCollection
   function setReleaseName(String) in line 1218
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable releaseName defined in edu::umd::cs::findbugs::SortedBugCollection
   function setSequenceNumber(long) in line 1170
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::SortedBugCollection
   function setTimestamp(long) in line 1246
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::SortedBugCollection
   function setWithMessages(boolean) in line 1274
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable withMessages defined in edu::umd::cs::findbugs::SortedBugCollection
   function setXmlCloudDetails(Map< String, String >) in line 1390
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toDocument() in line 476
      protection public
      15 lines of code
      0 parameters
      2 conditional paths
      uses function writeXML(OutputStream) defined in edu::umd::cs::findbugs::SortedBugCollection
   function trimAppVersions(long) in line 1238
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable appVersionList defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable sequence defined in edu::umd::cs::findbugs::SortedBugCollection
   function wrapGzip(InputStream,Object) in line 1339
      protection public
      19 lines of code
      2 parameters
      6 conditional paths
   function writeBugCategories(XMLOutput) in line 750
      27 lines of code
      1 parameters
      4 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getBugCategoryDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
   function writeBugCodes(XMLOutput) in line 717
      32 lines of code
      1 parameters
      6 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugCode(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getDescription() defined in edu::umd::cs::findbugs::BugCode
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getCWEid() defined in edu::umd::cs::findbugs::BugCode
   function writeBugPatterns(XMLOutput) in line 681
      35 lines of code
      1 parameters
      5 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getType() defined in edu::umd::cs::findbugs::BugPattern
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getCWEid() defined in edu::umd::cs::findbugs::BugPattern
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses function getDetailText() defined in edu::umd::cs::findbugs::BugPattern
   function writeEpilogue(XMLOutput) in line 629
      protection public
      51 lines of code
      1 parameters
      8 conditional paths
      uses variable withMessages defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeBugCategories(XMLOutput) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeBugPatterns(XMLOutput) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeBugCodes(XMLOutput) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable minimalXML defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function emitErrors(XMLOutput) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::ProjectStats
      uses function classFeatureSetIterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable HISTORY_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function appVersionIterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::AppVersion
      uses variable REPORT_SUMMARY_HTML defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getSummaryHTML() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable SUMMARY_HTML_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ROOT_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
   function writePrologue(XMLOutput) in line 525
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses variable ROOT_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getTimestamp() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getAnalysisTimestamp() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getReleaseName() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(File,@CheckForNull BugCollection) defined in edu::umd::cs::findbugs::Project
   function writeXML(OutputStream) in line 437
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(String) in line 448
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function writeXML(OutputStream) defined in edu::umd::cs::findbugs::SortedBugCollection
   function writeXML(File) in line 462
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function writeXML(OutputStream) defined in edu::umd::cs::findbugs::SortedBugCollection
   function writeXML(@WillClose Writer) in line 500
      protection public
      23 lines of code
      1 parameters
      3 conditional paths
      uses function bugsPopulated() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable withMessages defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable cloud defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function bugsPopulated() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function initiateCommunication() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function waitUntilIssueDataDownloaded() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable LOGGER defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function waitUntilNewIssuesUploaded() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function writeXML(OutputStream) defined in edu::umd::cs::findbugs::SortedBugCollection
   function writeXML(@WillClose XMLOutput) in line 575
      protection public
      44 lines of code
      1 parameters
      12 conditional paths
      uses function writePrologue(XMLOutput) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable withMessages defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function computeBugHashes() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function computeFileStats(BugCollection) defined in edu::umd::cs::findbugs::ProjectStats
      uses function getSourceDirList() defined in edu::umd::cs::findbugs::Project
      uses variable minimalXML defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::ProjectStats
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable applySuppressions defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Filter
      uses function writeEpilogue(XMLOutput) defined in edu::umd::cs::findbugs::SortedBugCollection
   function SortedBugCollection(Project) in line 942
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::SortedBugCollection::MultiversionBugInstanceComparator
   function SortedBugCollection(File) in line 946
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function SortedBugCollection() in line 954
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SortedBugCollection(Comparator< BugInstance >) in line 961
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable comparator defined in edu::umd::cs::findbugs::SortedBugCollection
   function SortedBugCollection(ProjectStats) in line 971
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable projectStats defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable instance defined in edu::umd::cs::findbugs::SortedBugCollection::MultiversionBugInstanceComparator
   function SortedBugCollection(ProjectStats,Project) in line 975
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable projectStats defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable instance defined in edu::umd::cs::findbugs::SortedBugCollection::MultiversionBugInstanceComparator
   function SortedBugCollection(ProjectStats,Comparator< BugInstance >) in line 987
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable projectStats defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable comparator defined in edu::umd::cs::findbugs::SortedBugCollection
   function SortedBugCollection(ProjectStats,Comparator< BugInstance >,Project) in line 991
      protection public
      14 lines of code
      3 parameters
      1 conditional paths
      uses variable projectStats defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable comparator defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable errorList defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable missingClassSet defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable summaryHTML defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable classFeatureSetMap defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable sequence defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable appVersionList defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable releaseName defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable timestamp defined in edu::umd::cs::findbugs::SortedBugCollection
   variable applySuppressions in line 110
   variable appVersionList in line 139
   variable bugSet in line 124
   variable classFeatureSetMap in line 137
   variable cloud in line 112
   variable comparator in line 122
   variable errorList in line 126
   variable LOGGER in line 94
   variable minimalXML in line 108
   variable missingClassSet in line 128
   variable preciseHashOccurrenceNumbersAvailable in line 141
   variable projectStats in line 135
   variable releaseName in line 151
   variable REPORT_SUMMARY_HTML in line 96
   variable sequence in line 146
   variable summaryHTML in line 131
   variable timestamp in line 156
   variable withMessages in line 106
   variable xmlCloudDetails in line 120
module edu::umd::cs::findbugs::SortedBugCollection::BoundedLinkedHashSet
   inherits from java::util::LinkedHashSet
   function add(AnalysisError) in line 885
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
module edu::umd::cs::findbugs::SortedBugCollection::BugInstanceComparator
   inherits from java::util::Comparator
   function compare(BugInstance,BugInstance) in line 899
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function compareTo(BugInstance) defined in edu::umd::cs::findbugs::BugInstance
   function BugInstanceComparator() in line 895
      2 lines of code
      0 parameters
      1 conditional paths
   variable instance in line 912
      protection public
module edu::umd::cs::findbugs::SortedBugCollection::MultiversionBugInstanceComparator
   inherits from edu::umd::cs::findbugs::SortedBugCollection::BugInstanceComparator
   function compare(BugInstance,BugInstance) in line 921
      protection public
      17 lines of code
      2 parameters
      5 conditional paths
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
   function MultiversionBugInstanceComparator() in line 917
      2 lines of code
      0 parameters
      1 conditional paths
   variable instance in line 939
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/SortingBugReporter.java
module edu::umd::cs::findbugs::SortingBugReporter
   inherits from edu::umd::cs::findbugs::TextUIBugReporter
   function doReportBug(BugInstance) in line 42
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::SortingBugReporter
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function notifyObservers(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function finish() in line 49
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::SortingBugReporter
      uses function iterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function printBug(BugInstance) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
   function getBugCollection() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::SortingBugReporter
   function observeClass(ClassDescriptor) in line 36
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable bugCollection in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/SourceLineAnnotation.java
module edu::umd::cs::findbugs::SourceLineAnnotation
   inherits from edu::umd::cs::findbugs::BugAnnotation
   function accept(BugAnnotationVisitor) in line 711
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitSourceLineAnnotation(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function appendLines(StringBuilder) in line 744
      8 lines of code
      1 parameters
      2 conditional paths
      uses function isUnknown() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function appendLinesRaw(StringBuilder) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function appendLinesRaw(StringBuilder) in line 753
      15 lines of code
      1 parameters
      3 conditional paths
      uses function isUnknown() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function clearGenerateRelativeSource() in line 865
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function clone() in line 148
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function compareTo(BugAnnotation) in line 791
      protection public
      29 lines of code
      1 parameters
      7 conditional paths
      uses function SourceLineAnnotation(@Nonnull @DottedClassName String,@Nonnull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function createReallyUnknown(@DottedClassName String) in line 190
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createUnknown(@DottedClassName String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable UNKNOWN_SOURCE_FILE defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function createUnknown(@DottedClassName String,String) in line 165
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function createUnknown(@DottedClassName String) in line 178
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createUnknown(@DottedClassName String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function createUnknown(@DottedClassName String,String,int,int) in line 205
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses function SourceLineAnnotation(@Nonnull @DottedClassName String,@Nonnull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function equals(Object) in line 830
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function SourceLineAnnotation(@Nonnull @DottedClassName String,@Nonnull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function forEntireMethod(@DottedClassName String,String,LineNumberTable,int) in line 258
      protection public
      11 lines of code
      4 parameters
      2 conditional paths
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function SourceLineAnnotation(@Nonnull @DottedClassName String,@Nonnull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createUnknown(@DottedClassName String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function forEntireMethod(JavaClass,@CheckForNull Method) in line 279
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createUnknown(@DottedClassName String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function forEntireMethod(@DottedClassName String,String,LineNumberTable,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function forEntireMethod(JavaClass,XMethod) in line 302
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function createUnknown(@DottedClassName String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function forEntireMethod(@DottedClassName String,String,LineNumberTable,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function forFirstLineOfMethod(MethodDescriptor) in line 320
      protection public
      33 lines of code
      1 parameters
      7 conditional paths
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSource() defined in edu::umd::cs::findbugs::ba::XClass
      uses function SourceLineAnnotation(@Nonnull @DottedClassName String,@Nonnull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function createUnknown(@DottedClassName String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function format(String,ClassAnnotation) in line 716
      protection public
      27 lines of code
      2 parameters
      6 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function appendLines(StringBuilder) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function appendLinesRaw(StringBuilder) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable CANONICAL_PACKAGE_SEPARATOR defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromRawData(String,String,int,int,int,int) in line 541
      protection public
      8 lines of code
      6 parameters
      2 conditional paths
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createUnknown(@DottedClassName String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function SourceLineAnnotation(@Nonnull @DottedClassName String,@Nonnull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromVisitedInstruction(BytecodeScanningDetector,int) in line 365
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function fromVisitedInstructionRange(BytecodeScanningDetector,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
   function fromVisitedInstruction(ClassContext,PreorderVisitor,int) in line 382
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function fromVisitedInstructionRange(BytecodeScanningDetector,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromVisitedInstruction(ClassContext,Method,Location) in line 397
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function fromVisitedInstruction(BytecodeScanningDetector,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function fromVisitedInstruction(ClassContext,Method,InstructionHandle) in line 412
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function fromVisitedInstruction(BytecodeScanningDetector,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromVisitedInstruction(MethodDescriptor,Location) in line 425
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function fromVisitedInstruction(BytecodeScanningDetector,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function fromVisitedInstruction(MethodDescriptor,int) in line 429
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function fromVisitedInstruction(BytecodeScanningDetector,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createReallyUnknown(@DottedClassName String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function fromVisitedInstruction(ClassContext,Method,int) in line 451
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function fromVisitedInstruction(BytecodeScanningDetector,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function fromVisitedInstruction(JavaClass,Method,int) in line 466
      protection public
      11 lines of code
      3 parameters
      2 conditional paths
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createUnknown(@DottedClassName String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function SourceLineAnnotation(@Nonnull @DottedClassName String,@Nonnull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromVisitedInstruction(BytecodeScanningDetector) in line 559
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function fromVisitedInstruction(BytecodeScanningDetector,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function fromVisitedInstruction(ClassContext,MethodGen,String,@Nonnull InstructionHandle) in line 577
      protection public
      14 lines of code
      4 parameters
      2 conditional paths
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createUnknown(@DottedClassName String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function SourceLineAnnotation(@Nonnull @DottedClassName String,@Nonnull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromVisitedInstructionRange(BytecodeScanningDetector,int,int) in line 492
      protection public
      13 lines of code
      3 parameters
      2 conditional paths
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function createUnknown(@DottedClassName String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function SourceLineAnnotation(@Nonnull @DottedClassName String,@Nonnull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromVisitedInstructionRange(ClassContext,PreorderVisitor,int,int) in line 522
      protection public
      18 lines of code
      4 parameters
      3 conditional paths
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function createUnknown(@DottedClassName String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function SourceLineAnnotation(@Nonnull @DottedClassName String,@Nonnull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromVisitedInstructionRange(ClassContext,MethodGen,String,InstructionHandle,InstructionHandle) in line 605
      protection public
      13 lines of code
      5 parameters
      2 conditional paths
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createUnknown(@DottedClassName String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function SourceLineAnnotation(@Nonnull @DottedClassName String,@Nonnull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromVisitedMethod(PreorderVisitor) in line 219
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function fromVisitedMethod(MethodGen,String) in line 235
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createUnknown(@DottedClassName String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function forEntireMethod(@DottedClassName String,String,LineNumberTable,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function generateRelativeSource(File,Project) in line 856
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
   function getClassName() in line 629
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getDescription() in line 770
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getEndBytecode() in line 699
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable endBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getEndLine() in line 685
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getLineNumberTable(PreorderVisitor) in line 619
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getPackageName() in line 666
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getSimpleClassName() in line 661
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getSourceFile() in line 637
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getSourcePath() in line 935
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable CANONICAL_PACKAGE_SEPARATOR defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getStartBytecode() in line 692
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable startBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getStartLine() in line 678
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function hashCode() in line 822
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function isSignificant() in line 954
      protection public
      3 lines of code
      0 parameters
      12 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getMethodLine(String,String,String) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses function SourceLineAnnotation(@Nonnull @DottedClassName String,@Nonnull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function fallBackToClassfile() defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses function forEntireMethod(@DottedClassName String,String,LineNumberTable,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function createUnknown(@DottedClassName String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function isSourceFileKnown() in line 644
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable UNKNOWN_SOURCE_FILE defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function isSynthetic() in line 949
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable synthetic defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function isUnknown() in line 706
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function setDescription(String) in line 775
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function setSourceFile(String) in line 654
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function setSynthetic(boolean) in line 945
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable synthetic defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function toString() in line 780
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function isUnknown() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable DEFAULT_ROLE_UNKNOWN_LINE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getAnnotationDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses function format(String,ClassAnnotation) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function toString(ClassAnnotation) in line 1023
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function writeXML(XMLOutput) in line 852
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean,boolean) in line 871
      protection public
      63 lines of code
      3 parameters
      13 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourcePath() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getStartBytecode() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndBytecode() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function isSourceFileKnown() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFinder() defined in edu::umd::cs::findbugs::Project
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getFullFileName() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function getDescription() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable synthetic defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function toString() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function SourceLineAnnotation(@Nonnull @DottedClassName String,@Nonnull String,int,int,int,int) in line 134
      protection public
      12 lines of code
      6 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
   variable CANONICAL_PACKAGE_SEPARATOR in line 90
      protection public
   variable className in line 94
   variable DEFAULT_ROLE in line 64
      protection public
   variable DEFAULT_ROLE_UNKNOWN_LINE in line 66
      protection public
   variable description in line 92
   variable DESCRIPTION_LAST_CHANGE in line 108
      protection public
   variable DESCRIPTION_LOOP_BOTTOM in line 110
      protection public
   variable ELEMENT_NAME in line 116
   variable endBytecode in line 104
   variable endLine in line 100
   variable ROLE_ANOTHER_INSTANCE in line 68
      protection public
   variable ROLE_CALLED_FROM_SUPERCLASS_AT in line 70
      protection public
   variable ROLE_FIELD_SET_TOO_LATE_AT in line 72
      protection public
   variable ROLE_GENERATED_AT in line 74
      protection public
   variable ROLE_LOCK_OBTAINED_AT in line 82
      protection public
   variable ROLE_OBLIGATION_CREATED in line 76
      protection public
   variable ROLE_OBLIGATION_CREATED_BY_WILLCLOSE_PARAMETER in line 78
      protection public
   variable ROLE_PATH_CONTINUES in line 80
      protection public
   variable serialVersionUID in line 62
   variable sourceFile in line 96
   variable startBytecode in line 102
   variable startLine in line 98
   variable synthetic in line 106
   variable UNKNOWN_SOURCE_FILE in line 88
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/StackMapAnalyzer.java
module edu::umd::cs::findbugs::StackMapAnalyzer
   function addLocals(List< Item >,StackMapType[]) in line 308
      10 lines of code
      2 parameters
      3 conditional paths
      uses function getItem(StackMapType) defined in edu::umd::cs::findbugs::StackMapAnalyzer
      uses function usesTwoSlots() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function addStack(List< Item >,StackMapType[]) in line 318
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getItem(StackMapType) defined in edu::umd::cs::findbugs::StackMapAnalyzer
   function getFromStackMap(IAnalysisCache,MethodDescriptor) in line 183
      90 lines of code
      2 parameters
      18 conditional paths
      uses function getMethodAnalysis(Class< E >,@Nonnull MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getErrorLogger() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function addStack(List< Item >,StackMapType[]) defined in edu::umd::cs::findbugs::StackMapAnalyzer
      uses function usesTwoSlots() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function addLocals(List< Item >,StackMapType[]) defined in edu::umd::cs::findbugs::StackMapAnalyzer
   function getItem(StackMapType) in line 274
      34 lines of code
      1 parameters
      11 conditional paths
      uses function setSpecialKind(@SpecialKind int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable TYPE_ONLY defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
module edu::umd::cs::findbugs::StackMapAnalyzer::StackMapAnalysisFactory
   inherits from AnalysisFactory< JumpInfoFromStackMap >
   function analyze(IAnalysisCache,MethodDescriptor) in line 65
      protection public
      6 lines of code
      2 parameters
      18 conditional paths
      uses function getFromStackMap(IAnalysisCache,MethodDescriptor) defined in edu::umd::cs::findbugs::StackMapAnalyzer
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSlashedClassName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSize() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function usesTwoSlots() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function StackMapAnalysisFactory() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::StackMapAnalyzer::JumpInfoFromStackMap
   inherits from edu::umd::cs::findbugs::OpcodeStack::JumpInfo
module edu::umd::cs::findbugs::StackMapAnalyzer::StackFrameType
   function get(int) in line 86
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
   variable APPEND_FRAME in line 84
      protection public
   variable CHOP_FRAME in line 84
      protection public
   variable SAME_FRAME in line 84
      protection public
   variable SAME_LOCALS_1_STACK_ITEM_FRAME in line 84
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/StartTime.java
module edu::umd::cs::findbugs::StartTime
   variable START_TIME in line 32
      protection public
   variable VM_START_TIME in line 34
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/StatelessDetector.java
module edu::umd::cs::findbugs::StatelessDetector
   inherits from Cloneable
   function clone() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/StringAnnotation.java
module edu::umd::cs::findbugs::StringAnnotation
   inherits from edu::umd::cs::findbugs::BugAnnotation
   function accept(BugAnnotationVisitor) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitStringAnnotation(StringAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function clone() in line 89
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function compareTo(BugAnnotation) in line 141
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
   function equals(Object) in line 133
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
   function format(String,ClassAnnotation) in line 112
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
   function fromRawString(String) in line 78
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function StringAnnotation(String) defined in edu::umd::cs::findbugs::StringAnnotation
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
   function fromXMLEscapedString(String) in line 83
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function StringAnnotation(String) defined in edu::umd::cs::findbugs::StringAnnotation
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
   function getDescription() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::StringAnnotation
   function getValue() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
   function hashCode() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
   function isSignificant() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setDescription(String) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::StringAnnotation
   function toString() in line 151
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getAnnotationDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses variable description defined in edu::umd::cs::findbugs::StringAnnotation
      uses function format(String,ClassAnnotation) defined in edu::umd::cs::findbugs::StringAnnotation
   function toString(ClassAnnotation) in line 188
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::StringAnnotation
   function writeXML(XMLOutput) in line 166
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean,boolean) in line 171
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::StringAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::StringAnnotation
   function StringAnnotation(String) in line 73
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
   variable DEFAULT_ROLE in line 37
      protection public
   variable description in line 62
   variable ELEMENT_NAME in line 163
   variable ERROR_MSG_ROLE in line 46
      protection public
   variable FORMAT_SPECIFIER_ROLE in line 58
      protection public
   variable FORMAT_STRING_ROLE in line 56
      protection public
   variable PARAMETER_NAME_ROLE in line 50
      protection public
   variable REGEX_ROLE in line 44
      protection public
   variable REMAINING_OBLIGATIONS_ROLE in line 54
      protection public
   variable serialVersionUID in line 35
   variable STRING_CONSTANT_ROLE in line 39
      protection public
   variable STRING_MESSAGE in line 48
      protection public
   variable STRING_NONSTRING_CONSTANT_ROLE in line 42
      protection public
   variable TYPE_QUALIFIER_ROLE in line 52
      protection public
   variable value in line 60
module edu::umd::cs::findbugs::StringAnnotation::QuotedStringMarker
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/SwitchHandler.java
module edu::umd::cs::findbugs::SwitchHandler
   function enterSwitch(DismantleBytecode,@CheckForNull XClass) in line 59
      protection public
      16 lines of code
      2 parameters
      3 conditional paths
      uses function getOpcode() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSwitchOffsets() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDefaultSwitchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable switchOffsetStack defined in edu::umd::cs::findbugs::SwitchHandler
   function getCurrentSwitchStatement(BytecodeScanningDetector) in line 115
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable switchOffsetStack defined in edu::umd::cs::findbugs::SwitchHandler
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
   function getDefaultOffset() in line 105
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable switchOffsetStack defined in edu::umd::cs::findbugs::SwitchHandler
      uses function getDefaultOffset() defined in edu::umd::cs::findbugs::SwitchHandler::SwitchDetails
   function getNextSwitchOffset(DismantleBytecode) in line 85
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses variable switchOffsetStack defined in edu::umd::cs::findbugs::SwitchHandler
      uses function getNextSwitchOffset(int) defined in edu::umd::cs::findbugs::SwitchHandler::SwitchDetails
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDefaultOffset() defined in edu::umd::cs::findbugs::SwitchHandler::SwitchDetails
   function isOnSwitchOffset(DismantleBytecode) in line 76
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDefaultOffset() defined in edu::umd::cs::findbugs::SwitchHandler
      uses function getNextSwitchOffset(DismantleBytecode) defined in edu::umd::cs::findbugs::SwitchHandler
   function stackSize() in line 41
      protection public
      3 lines of code
      0 parameters
      4 conditional paths
      uses variable switchOffsetStack defined in edu::umd::cs::findbugs::SwitchHandler
   function SwitchHandler() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable switchOffsetStack defined in edu::umd::cs::findbugs::SwitchHandler
   variable switchOffsetStack in line 35
module edu::umd::cs::findbugs::SwitchHandler::SwitchDetails
   function getDefaultOffset() in line 180
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function getNextSwitchOffset(int) in line 168
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function SwitchDetails(int,int[],int,boolean) in line 135
      protection public
      32 lines of code
      4 parameters
      7 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/SystemProperties.java
module edu::umd::cs::findbugs::SystemProperties
   function getAllProperties() in line 95
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable properties defined in edu::umd::cs::findbugs::SystemProperties
   function getBoolean(String) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBoolean(String,boolean) in line 140
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses function getProperty(String) defined in edu::umd::cs::findbugs::SystemProperties
      uses function toBoolean(String) defined in edu::umd::cs::findbugs::SystemProperties
   function getInt(String,int) in line 178
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function getProperty(String) defined in edu::umd::cs::findbugs::SystemProperties
   function getInteger(String,int) in line 167
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getInt(String,int) defined in edu::umd::cs::findbugs::SystemProperties
   function getLocalProperties() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable properties defined in edu::umd::cs::findbugs::SystemProperties
   function getOSDependentProperty(String) in line 195
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getProperty(String) defined in edu::umd::cs::findbugs::SystemProperties
   function getProperty(String) in line 209
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable properties defined in edu::umd::cs::findbugs::SystemProperties
   function getProperty(String,String) in line 233
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable properties defined in edu::umd::cs::findbugs::SystemProperties
   function loadPropertiesFromConfigFile() in line 75
      15 lines of code
      0 parameters
      3 conditional paths
      uses function loadPropertiesFromURL(URL) defined in edu::umd::cs::findbugs::SystemProperties
   function loadPropertiesFromURL(URL) in line 108
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable properties defined in edu::umd::cs::findbugs::SystemProperties
   function rewriteURLAccordingToProperties(String) in line 272
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable URL_REWRITE_PATTERN defined in edu::umd::cs::findbugs::SystemProperties
      uses variable URL_REWRITE_FORMAT defined in edu::umd::cs::findbugs::SystemProperties
   function setProperty(String,String) in line 222
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable properties defined in edu::umd::cs::findbugs::SystemProperties
   function toBoolean(String) in line 154
      3 lines of code
      1 parameters
      1 conditional paths
   variable ASSERTIONS_ENABLED in line 43
      protection public
   variable properties in line 41
   variable RUNNING_IN_ECLIPSE in line 45
      protection public
   variable URL_REWRITE_FORMAT in line 247
   variable URL_REWRITE_PATTERN in line 249
   variable URL_REWRITE_PATTERN_STRING in line 245
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/Test.java
module edu::umd::cs::findbugs::Test
   function main(String) in line 29
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/TextUIBugReporter.java
module edu::umd::cs::findbugs::TextUIBugReporter
   inherits from edu::umd::cs::findbugs::AbstractBugReporter
   abstract class
   function checkBugInstance(BugInstance) in line 241
      11 lines of code
      1 parameters
      4 conditional paths
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function getSourceLines() defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function emitLine(String) in line 197
      4 lines of code
      1 parameters
      1 conditional paths
   function getRealBugReporter() in line 231
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUseLongBugCodes() in line 202
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable useLongBugCodes defined in edu::umd::cs::findbugs::TextUIBugReporter
   function isApplySuppressions() in line 253
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable applySuppressions defined in edu::umd::cs::findbugs::TextUIBugReporter
   function printBug(BugInstance) in line 90
      56 lines of code
      1 parameters
      12 conditional paths
      uses variable showRank defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugCategory(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugCategory
      uses variable useLongBugCodes defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses variable reportUserDesignations defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getUserDesignationKey() defined in edu::umd::cs::findbugs::BugInstance
      uses variable reportHistory defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
      uses function toString() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function reportAnalysisError(AnalysisError) in line 162
      protection public
      18 lines of code
      1 parameters
      6 conditional paths
      uses variable analysisErrors defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function emitLine(String) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getMessage() defined in edu::umd::cs::findbugs::AnalysisError
      uses function getExceptionMessage() defined in edu::umd::cs::findbugs::AnalysisError
      uses variable reportStackTrace defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getStackTrace() defined in edu::umd::cs::findbugs::AnalysisError
   function reportMissingClass(String) in line 182
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable missingClasses defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function emitLine(String) defined in edu::umd::cs::findbugs::TextUIBugReporter
   function reportQueuedErrors() in line 152
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable analysisErrors defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable missingClasses defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getQueuedErrors() defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function emitLine(String) defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setApplySuppressions(boolean) in line 218
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable applySuppressions defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setOutputStream(PrintStream) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setReportHistory(boolean) in line 206
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reportHistory defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setReportStackTrace(boolean) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reportStackTrace defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setReportUserDesignations(boolean) in line 222
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reportUserDesignations defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setShowRank(boolean) in line 214
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable showRank defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setUseLongBugCodes(boolean) in line 210
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable useLongBugCodes defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setWriter(PrintWriter) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function TextUIBugReporter() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reportStackTrace defined in edu::umd::cs::findbugs::TextUIBugReporter
   variable analysisErrors in line 147
   variable applySuppressions in line 50
   variable missingClasses in line 149
   variable outputStream in line 54
   variable reportHistory in line 46
   variable reportStackTrace in line 40
   variable reportUserDesignations in line 48
   variable showRank in line 44
   variable useLongBugCodes in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/TextUICommandLine.java
module edu::umd::cs::findbugs::TextUICommandLine
   inherits from edu::umd::cs::findbugs::FindBugsCommandLine
   function addAuxClassPathEntries(String) in line 582
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function addAuxClasspathEntry(String) defined in edu::umd::cs::findbugs::Project
   function applySuppression() in line 243
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function choose(String,String,Chooser) in line 599
      11 lines of code
      3 parameters
      3 conditional paths
      uses function choose(boolean,String) defined in edu::umd::cs::findbugs::TextUICommandLine::Chooser
   function configureEngine(IFindBugsEngine) in line 611
      protection public
      107 lines of code
      1 parameters
      17 conditional paths
      uses variable redoAnalysisFile defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function getProject() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function duplicate() defined in edu::umd::cs::findbugs::Project
      uses variable bugReporterType defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable PRINTING_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable SORTING_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable XML_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function setAddMessages(boolean) defined in edu::umd::cs::findbugs::XMLBugReporter
      uses variable xmlWithMessages defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function setMinimalXML(boolean) defined in edu::umd::cs::findbugs::XMLBugReporter
      uses variable xmlMinimal defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable EMACS_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable HTML_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable stylesheet defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable XDOCS_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function quiet() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function setErrorVerbosity(int) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable SILENT defined in edu::umd::cs::findbugs::BugReporter
      uses function setPriorityThreshold(int) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable priorityThreshold defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function setRankThreshold(int) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable rankThreshold defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function setUseLongBugCodes(boolean) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable useLongBugCodes defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function setOutputStream(PrintStream) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable bugCategorySet defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable showProgress defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function getUserPreferences() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable classScreener defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable relaxedReportingMode defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable xmlWithAbridgedMessages defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable trainingOutputDir defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable trainingInputDir defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable sourceInfoFile defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable settingList defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses variable mergeSimilarWarnings defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable releaseName defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable projectName defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable scanNestedArchives defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function noClassOk() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable enabledBugReporterDecorators defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable disabledBugReporterDecorators defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function applySuppression() defined in edu::umd::cs::findbugs::TextUICommandLine
   function getProject() in line 223
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
   function getUserPreferences() in line 787
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function getConfiguration() defined in edu::umd::cs::findbugs::Project
   function getXargs() in line 227
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable xargs defined in edu::umd::cs::findbugs::TextUICommandLine
   function handleAnalyzeFromFile(String) in line 769
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function addFile(String) defined in edu::umd::cs::findbugs::Project
   function handleAuxClassPathFromFile(String) in line 748
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function addAuxClasspathEntry(String) defined in edu::umd::cs::findbugs::Project
   function handleOption(String,String) in line 259
      120 lines of code
      2 parameters
      44 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function pluginIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses function isEnabledByDefault() defined in edu::umd::cs::findbugs::Plugin
      uses function getShortDescription() defined in edu::umd::cs::findbugs::Plugin
      uses function getProvider() defined in edu::umd::cs::findbugs::Plugin
      uses function getWebsite() defined in edu::umd::cs::findbugs::Plugin
      uses variable priorityThreshold defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable useLongBugCodes defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable showProgress defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::Project
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable mergeSimilarWarnings defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable bugReporterType defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable SORTING_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable XML_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable xmlWithMessages defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable xmlWithAbridgedMessages defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable xmlMinimal defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable EMACS_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable relaxedReportingMode defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable trainingOutputDir defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable trainingInputDir defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable HTML_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable stylesheet defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable XDOCS_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function applySuppression() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function quiet() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable scanNestedArchives defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function setExitCode() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function addAuxClassPathEntries(String) defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function noClassOk() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable xargs defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable printConfiguration defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable printVersion defined in edu::umd::cs::findbugs::TextUICommandLine
   function handleOptionWithArgument(String,String) in line 383
      193 lines of code
      2 parameters
      50 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable outputFile defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable bugReporterType defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable PRINTING_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable XML_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function setCloudId(@Nullable String) defined in edu::umd::cs::findbugs::Project
      uses function getCloudProperties() defined in edu::umd::cs::findbugs::Project
      uses variable disabledBugReporterDecorators defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable enabledBugReporterDecorators defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable redoAnalysisFile defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable sourceInfoFile defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function getUserPreferences() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function enableAllDetectors(boolean) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function getFactory(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function enableDetector(DetectorFactory,boolean) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function choose(boolean,String) defined in edu::umd::cs::findbugs::TextUICommandLine::Chooser
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getPluginById(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function setGloballyEnabled(boolean) defined in edu::umd::cs::findbugs::Plugin
      uses function setPriorityAdjustment(int) defined in edu::umd::cs::findbugs::DetectorFactory
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function adjustPriority(int) defined in edu::umd::cs::findbugs::BugPattern
      uses variable classScreener defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function addAllowedPrefix(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses function addAllowedPackage(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses function addAllowedClass(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses function getConfiguration() defined in edu::umd::cs::findbugs::Project
      uses function getExcludeFilterFiles() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function getExcludeBugsFiles() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function getIncludeFilterFiles() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function handleAuxClassPathFromFile(String) defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function handleAnalyzeFromFile(String) defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function addAuxClassPathEntries(String) defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
      uses function read() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function setConfiguration(@Nonnull UserPreferences) defined in edu::umd::cs::findbugs::Project
   function handleXArgs() in line 725
      protection public
      16 lines of code
      0 parameters
      5 conditional paths
      uses function getXargs() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function addFile(String) defined in edu::umd::cs::findbugs::Project
   function justPrintConfiguration() in line 247
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable printConfiguration defined in edu::umd::cs::findbugs::TextUICommandLine
   function justPrintVersion() in line 251
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable printVersion defined in edu::umd::cs::findbugs::TextUICommandLine
   function noClassOk() in line 235
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function quiet() in line 239
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setExitCode() in line 231
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function TextUICommandLine() in line 148
      protection public
      73 lines of code
      0 parameters
      1 conditional paths
      uses function addSwitch(String,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function addOption(String,String,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function startOptionGroup(String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function makeOptionUnlisted(String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function addSwitchWithOptionalExtraPart(String,String,String) defined in edu::umd::cs::findbugs::config::CommandLine
   variable applySuppression in line 139
   variable bugCategorySet in line 119
   variable bugReporterType in line 85
   variable classScreener in line 103
   variable DEBUG in line 71
   variable disabledBugReporterDecorators in line 107
   variable EMACS_REPORTER in line 79
   variable enabledBugReporterDecorators in line 105
   variable HTML_REPORTER in line 81
   variable mergeSimilarWarnings in line 133
   variable noClassOk in line 111
   variable outputFile in line 380
   variable outputStream in line 117
   variable printConfiguration in line 141
   variable PRINTING_REPORTER in line 73
   variable printVersion in line 143
   variable priorityThreshold in line 113
   variable projectName in line 127
   variable quiet in line 101
   variable rankThreshold in line 115
   variable redoAnalysisFile in line 131
   variable relaxedReportingMode in line 87
   variable releaseName in line 125
   variable scanNestedArchives in line 137
   variable setExitCode in line 109
   variable showProgress in line 91
   variable SORTING_REPORTER in line 75
   variable sourceInfoFile in line 129
   variable stylesheet in line 99
   variable trainingInputDir in line 123
   variable trainingOutputDir in line 121
   variable useLongBugCodes in line 89
   variable xargs in line 135
   variable XDOCS_REPORTER in line 83
   variable XML_REPORTER in line 77
   variable xmlMinimal in line 93
   variable xmlWithAbridgedMessages in line 97
   variable xmlWithMessages in line 95
module edu::umd::cs::findbugs::TextUICommandLine::Chooser
   function choose(boolean,String) in line 68
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/TextUIProgressCallback.java
module edu::umd::cs::findbugs::TextUIProgressCallback
   inherits from edu::umd::cs::findbugs::FindBugsProgress
   function analyzingClasses(int) in line 94
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable pass defined in edu::umd::cs::findbugs::TextUIProgressCallback
      uses variable goal defined in edu::umd::cs::findbugs::TextUIProgressCallback
      uses function printMessage(String) defined in edu::umd::cs::findbugs::TextUIProgressCallback
   function finishArchive() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function scanningArchives(int) defined in edu::umd::cs::findbugs::TextUIProgressCallback
      uses variable count defined in edu::umd::cs::findbugs::TextUIProgressCallback
   function finishClass() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function analyzingClasses(int) defined in edu::umd::cs::findbugs::TextUIProgressCallback
      uses variable count defined in edu::umd::cs::findbugs::TextUIProgressCallback
   function finishPerClassAnalysis() in line 81
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::TextUIProgressCallback
      uses variable pass defined in edu::umd::cs::findbugs::TextUIProgressCallback
      uses variable numPasses defined in edu::umd::cs::findbugs::TextUIProgressCallback
   function predictPassCount(int[]) in line 58
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::TextUIProgressCallback
      uses function printMessage(String) defined in edu::umd::cs::findbugs::TextUIProgressCallback
   function printMessage(String) in line 99
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::TextUIProgressCallback
   function reportNumberOfArchives(int) in line 46
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function scanningArchives(int) defined in edu::umd::cs::findbugs::TextUIProgressCallback
   function scanningArchives(int) in line 89
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable goal defined in edu::umd::cs::findbugs::TextUIProgressCallback
      uses function printMessage(String) defined in edu::umd::cs::findbugs::TextUIProgressCallback
   function startAnalysis(int) in line 66
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable pass defined in edu::umd::cs::findbugs::TextUIProgressCallback
      uses variable out defined in edu::umd::cs::findbugs::TextUIProgressCallback
      uses function analyzingClasses(int) defined in edu::umd::cs::findbugs::TextUIProgressCallback
   function startArchive(String) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function TextUIProgressCallback(PrintStream) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::TextUIProgressCallback
   variable count in line 35
   variable goal in line 33
   variable numPasses in line 37
   variable out in line 31
   variable pass in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/Token.java
module edu::umd::cs::findbugs::Token
   function getKind() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::Token
   function getLexeme() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lexeme defined in edu::umd::cs::findbugs::Token
   function Token(int,String) in line 71
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::Token
      uses variable lexeme defined in edu::umd::cs::findbugs::Token
   function Token(int) in line 82
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::Token
   variable COMMENT in line 57
      protection public
   variable EOF in line 32
      protection public
   variable EOL in line 37
      protection public
   variable kind in line 59
   variable lexeme in line 61
   variable SINGLE in line 52
      protection public
   variable STRING in line 47
      protection public
   variable WORD in line 42
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/Tokenizer.java
module edu::umd::cs::findbugs::Tokenizer
   function maybeComment() in line 154
      57 lines of code
      0 parameters
      15 conditional paths
      uses variable reader defined in edu::umd::cs::findbugs::Tokenizer
      uses variable COMMENT defined in edu::umd::cs::findbugs::Token
      uses variable SINGLE defined in edu::umd::cs::findbugs::Token
   function munchString(int) in line 121
      32 lines of code
      1 parameters
      7 conditional paths
      uses variable reader defined in edu::umd::cs::findbugs::Tokenizer
      uses variable STRING defined in edu::umd::cs::findbugs::Token
   function next() in line 89
      protection public
      18 lines of code
      0 parameters
      6 conditional paths
      uses function skipWhitespace() defined in edu::umd::cs::findbugs::Tokenizer
      uses variable reader defined in edu::umd::cs::findbugs::Tokenizer
      uses variable EOF defined in edu::umd::cs::findbugs::Token
      uses variable EOL defined in edu::umd::cs::findbugs::Token
      uses function munchString(int) defined in edu::umd::cs::findbugs::Tokenizer
      uses function maybeComment() defined in edu::umd::cs::findbugs::Tokenizer
      uses variable single defined in edu::umd::cs::findbugs::Tokenizer
      uses variable SINGLE defined in edu::umd::cs::findbugs::Token
      uses function parseWord() defined in edu::umd::cs::findbugs::Tokenizer
   function parseWord() in line 212
      15 lines of code
      0 parameters
      4 conditional paths
      uses variable reader defined in edu::umd::cs::findbugs::Tokenizer
      uses variable whiteSpace defined in edu::umd::cs::findbugs::Tokenizer
      uses variable single defined in edu::umd::cs::findbugs::Tokenizer
      uses variable WORD defined in edu::umd::cs::findbugs::Token
   function skipWhitespace() in line 108
      12 lines of code
      0 parameters
      4 conditional paths
      uses variable reader defined in edu::umd::cs::findbugs::Tokenizer
      uses variable whiteSpace defined in edu::umd::cs::findbugs::Tokenizer
   function Tokenizer(Reader) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reader defined in edu::umd::cs::findbugs::Tokenizer
   variable reader in line 72
   variable single in line 44
   variable whiteSpace in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/TrainingDetector.java
module edu::umd::cs::findbugs::TrainingDetector
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/TypeAnnotation.java
module edu::umd::cs::findbugs::TypeAnnotation
   inherits from edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function accept(BugAnnotationVisitor) in line 113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitTypeAnnotation(TypeAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function compareTo(BugAnnotation) in line 160
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::TypeAnnotation
   function equals(Object) in line 152
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::TypeAnnotation
   function format(String,ClassAnnotation) in line 118
      protection public
      13 lines of code
      2 parameters
      4 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function parseNext() defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable typeParameters defined in edu::umd::cs::findbugs::TypeAnnotation
   function getDescription() in line 138
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable roleDescription defined in edu::umd::cs::findbugs::TypeAnnotation
   function getTypeDescriptor() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::TypeAnnotation
   function hashCode() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::TypeAnnotation
   function isSignificant() in line 206
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setDescription(String) in line 133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable roleDescription defined in edu::umd::cs::findbugs::TypeAnnotation
   function setTypeParameters(String) in line 142
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable typeParameters defined in edu::umd::cs::findbugs::TypeAnnotation
   function toString() in line 171
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getAnnotationDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses variable roleDescription defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function format(String,ClassAnnotation) defined in edu::umd::cs::findbugs::TypeAnnotation
   function writeXML(XMLOutput) in line 186
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean,boolean) in line 191
      protection public
      13 lines of code
      3 parameters
      3 conditional paths
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable descriptor defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::TypeAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses variable typeParameters defined in edu::umd::cs::findbugs::TypeAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::TypeAnnotation
   function TypeAnnotation(String) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
   function TypeAnnotation(Type) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
   function TypeAnnotation(Type,String) in line 78
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable roleDescription defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function getTypeCategory() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses variable typeParameters defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function getGenericParametersAsString() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function TypeAnnotation(String,String) in line 88
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::TypeAnnotation
      uses variable roleDescription defined in edu::umd::cs::findbugs::TypeAnnotation
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable sourceFileName defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function lookupSourceFile(@Nonnull @DottedClassName String) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable sourceLines defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses variable UNKNOWN_SOURCE_FILE defined in edu::umd::cs::findbugs::SourceLineAnnotation
   variable CLOSEIT_ROLE in line 47
      protection public
   variable DEFAULT_ROLE in line 41
      protection public
   variable descriptor in line 51
   variable ELEMENT_NAME in line 183
   variable EXPECTED_ROLE in line 43
      protection public
   variable FOUND_ROLE in line 45
      protection public
   variable roleDescription in line 53
   variable serialVersionUID in line 39
   variable typeParameters in line 55
   variable UNHASHABLE_ROLE in line 49
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/updates/PluginUpdateListener.java
module edu::umd::cs::findbugs::updates::PluginUpdateListener
   function pluginUpdateCheckComplete(Collection< UpdateChecker.PluginUpdate >,boolean) in line 6
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/updates/UpdateCheckCallback.java
module edu::umd::cs::findbugs::updates::UpdateCheckCallback
   inherits from edu::umd::cs::findbugs::GlobalOptions
   function pluginUpdateCheckComplete(List< UpdateChecker.PluginUpdate >,boolean) in line 8
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/updates/UpdateChecker.java
module edu::umd::cs::findbugs::updates::UpdateChecker
   function actuallyCheckforUpdates(URI,Collection< Plugin >,String) in line 234
      27 lines of code
      3 parameters
      4 conditional paths
      uses variable LOGGER defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function getPluginNames(Collection< Plugin >) defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function writeXml(OutputStream,Collection< Plugin >,String,boolean) defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function logError(Level,String) defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses variable ASSERTIONS_ENABLED defined in edu::umd::cs::findbugs::SystemProperties
   function buildPluginUpdateHash(Collection< UpdateChecker.PluginUpdate >) in line 148
      7 lines of code
      1 parameters
      2 conditional paths
   function checkForUpdates(Collection< Plugin >,final boolean) in line 63
      protection public
      31 lines of code
      2 parameters
      6 conditional paths
      uses function updateChecksGloballyDisabled() defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses variable dfc defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function pluginUpdateCheckComplete(List< UpdateChecker.PluginUpdate >,boolean) defined in edu::umd::cs::findbugs::updates::UpdateCheckCallback
      uses variable pluginUpdates defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function getRedirectURL(final boolean) defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function startUpdateCheckThread(final URI,final Collection< Plugin >,final CountDownLatch) defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function logError(Level,String) defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function add(K,V) defined in edu::umd::cs::findbugs::util::MultiMap
      uses function keySet() defined in edu::umd::cs::findbugs::util::MultiMap
      uses function get(K) defined in edu::umd::cs::findbugs::util::MultiMap
      uses function waitForCompletion(final CountDownLatch,final boolean) defined in edu::umd::cs::findbugs::updates::UpdateChecker
   function checkPlugin(Element,Plugin) in line 350
      5 lines of code
      2 parameters
      2 conditional paths
      uses function checkPluginRelease(Plugin,Element) defined in edu::umd::cs::findbugs::updates::UpdateChecker
   function checkPluginRelease(Plugin,Element) in line 356
      16 lines of code
      2 parameters
      3 conditional paths
      uses function parseReleaseDate(Element) defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function getReleaseDate() defined in edu::umd::cs::findbugs::Plugin
      uses function getVersion() defined in edu::umd::cs::findbugs::Plugin
      uses variable pluginUpdates defined in edu::umd::cs::findbugs::updates::UpdateChecker
   function dontWarnAgainUntil() in line 119
      13 lines of code
      0 parameters
      3 conditional paths
   function getEntryPoint() in line 406
      10 lines of code
      0 parameters
      3 conditional paths
   function getMajorJavaVersion() in line 434
      8 lines of code
      0 parameters
      2 conditional paths
   function getPluginNames(Collection< Plugin >) in line 396
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getShortDescription() defined in edu::umd::cs::findbugs::Plugin
   function getPluginThatDisabledUpdateChecks() in line 180
      protection public
      16 lines of code
      0 parameters
      3 conditional paths
      uses variable dfc defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function getGlobalOption(String) defined in edu::umd::cs::findbugs::GlobalOptions
      uses variable KEY_DISABLE_ALL_UPDATE_CHECKS defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function getGlobalOptionSetter(String) defined in edu::umd::cs::findbugs::GlobalOptions
      uses function getShortDescription() defined in edu::umd::cs::findbugs::Plugin
      uses function logError(Level,String) defined in edu::umd::cs::findbugs::updates::UpdateChecker
   function getRedirectURL(final boolean) in line 95
      protection public
      23 lines of code
      1 parameters
      4 conditional paths
      uses variable dfc defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function getGlobalOption(String) defined in edu::umd::cs::findbugs::GlobalOptions
      uses variable KEY_REDIRECT_ALL_UPDATE_CHECKS defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function getGlobalOptionSetter(String) defined in edu::umd::cs::findbugs::GlobalOptions
      uses function getShortDescription() defined in edu::umd::cs::findbugs::Plugin
      uses function logError(Level,String) defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function pluginUpdateCheckComplete(List< UpdateChecker.PluginUpdate >,boolean) defined in edu::umd::cs::findbugs::updates::UpdateCheckCallback
      uses variable pluginUpdates defined in edu::umd::cs::findbugs::updates::UpdateChecker
   function getUuid() in line 420
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable random defined in edu::umd::cs::findbugs::updates::UpdateChecker
   function logError(Level,String) in line 374
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in edu::umd::cs::findbugs::updates::UpdateChecker
   function logError(Exception,String) in line 379
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in edu::umd::cs::findbugs::updates::UpdateChecker
   function main(String) in line 503
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable dfc defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function updateChecksGloballyDisabled() defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function getRedirectURL(final boolean) defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function writeXml(OutputStream,Collection< Plugin >,String,boolean) defined in edu::umd::cs::findbugs::updates::UpdateChecker
   function parseReleaseDate(Element) in line 383
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable PLUGIN_RELEASE_DATE_FMT defined in edu::umd::cs::findbugs::updates::UpdateChecker
   function startUpdateCheckThread(final URI,final Collection< Plugin >,final CountDownLatch) in line 197
      34 lines of code
      3 parameters
      6 conditional paths
      uses function logError(Level,String) defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function getPluginNames(Collection< Plugin >) defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function getEntryPoint() defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses variable LOGGER defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function actuallyCheckforUpdates(URI,Collection< Plugin >,String) defined in edu::umd::cs::findbugs::updates::UpdateChecker
   function updateChecksGloballyDisabled() in line 176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ENV_FB_NO_UPDATE_CHECKS defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function getPluginThatDisabledUpdateChecks() defined in edu::umd::cs::findbugs::updates::UpdateChecker
   function updatesHaveBeenSeenBefore(Collection< UpdateChecker.PluginUpdate >) in line 133
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses function buildPluginUpdateHash(Collection< UpdateChecker.PluginUpdate >) defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function dontWarnAgainUntil() defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses variable LOGGER defined in edu::umd::cs::findbugs::updates::UpdateChecker
   function waitForCompletion(final CountDownLatch,final boolean) in line 156
      19 lines of code
      2 parameters
      4 conditional paths
      uses function logError(Level,String) defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses variable dfc defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function pluginUpdateCheckComplete(List< UpdateChecker.PluginUpdate >,boolean) defined in edu::umd::cs::findbugs::updates::UpdateCheckCallback
      uses variable pluginUpdates defined in edu::umd::cs::findbugs::updates::UpdateChecker
   function writeXml(OutputStream,Collection< Plugin >,String,boolean) in line 264
      51 lines of code
      4 parameters
      13 conditional paths
      uses function beginDocument() defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses function startTag(String) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses function addAttribute(String,String) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable RELEASE defined in edu::umd::cs::findbugs::Version
      uses function getMajorJavaVersion() defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function getUuid() defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function stopTag(boolean) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses function closeTag(String) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses function flush() defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses function finish() defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses function checkPlugin(Element,Plugin) defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function logError(Level,String) defined in edu::umd::cs::findbugs::updates::UpdateChecker
   function UpdateChecker(UpdateCheckCallback) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dfc defined in edu::umd::cs::findbugs::updates::UpdateChecker
   variable dfc in line 56
   variable ENV_FB_NO_UPDATE_CHECKS in line 54
   variable KEY_DISABLE_ALL_UPDATE_CHECKS in line 52
   variable KEY_REDIRECT_ALL_UPDATE_CHECKS in line 53
   variable LOGGER in line 51
   variable PLUGIN_RELEASE_DATE_FMT in line 50
      protection public
   variable pluginUpdates in line 57
   variable random in line 418
module edu::umd::cs::findbugs::updates::UpdateChecker::PluginUpdate
   function getDate() in line 466
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable date defined in edu::umd::cs::findbugs::updates::UpdateChecker::PluginUpdate
   function getMessage() in line 474
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::updates::UpdateChecker::PluginUpdate
   function getPlugin() in line 458
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::updates::UpdateChecker::PluginUpdate
   function getUrl() in line 470
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable url defined in edu::umd::cs::findbugs::updates::UpdateChecker::PluginUpdate
   function getVersion() in line 462
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable version defined in edu::umd::cs::findbugs::updates::UpdateChecker::PluginUpdate
   function toString() in line 479
      protection public
      22 lines of code
      0 parameters
      3 conditional paths
      uses variable PLUGIN_RELEASE_DATE_FMT defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function getPlugin() defined in edu::umd::cs::findbugs::updates::UpdateChecker::PluginUpdate
      uses function isCorePlugin() defined in edu::umd::cs::findbugs::Plugin
      uses function getShortDescription() defined in edu::umd::cs::findbugs::Plugin
      uses function getVersion() defined in edu::umd::cs::findbugs::updates::UpdateChecker::PluginUpdate
      uses variable date defined in edu::umd::cs::findbugs::updates::UpdateChecker::PluginUpdate
      uses variable message defined in edu::umd::cs::findbugs::updates::UpdateChecker::PluginUpdate
      uses variable url defined in edu::umd::cs::findbugs::updates::UpdateChecker::PluginUpdate
   function PluginUpdate(Plugin,String,@CheckForNull Date,@CheckForNull String,@Nonnull String) in line 450
      7 lines of code
      5 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::updates::UpdateChecker::PluginUpdate
      uses variable version defined in edu::umd::cs::findbugs::updates::UpdateChecker::PluginUpdate
      uses variable date defined in edu::umd::cs::findbugs::updates::UpdateChecker::PluginUpdate
      uses variable url defined in edu::umd::cs::findbugs::updates::UpdateChecker::PluginUpdate
      uses variable message defined in edu::umd::cs::findbugs::updates::UpdateChecker::PluginUpdate
   variable date in line 446
   variable message in line 448
   variable plugin in line 444
   variable url in line 447
   variable version in line 445
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/UseAnnotationDatabase.java
module edu::umd::cs::findbugs::UseAnnotationDatabase
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/AnyTypeMatcher.java
module edu::umd::cs::findbugs::util::AnyTypeMatcher
   inherits from edu::umd::cs::findbugs::util::TypeMatcher
   function matches(Type) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/Archive.java
module edu::umd::cs::findbugs::util::Archive
   function getExtension(String) in line 62
      8 lines of code
      1 parameters
      2 conditional paths
   function isArchiveFileName(String) in line 57
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getExtension(String) defined in edu::umd::cs::findbugs::util::Archive
      uses variable ARCHIVE_EXTENSION_SET defined in edu::umd::cs::findbugs::util::Archive
   function isLibraryFileName(String) in line 71
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getExtension(String) defined in edu::umd::cs::findbugs::util::Archive
   variable ARCHIVE_EXTENSION_SET in line 39
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/Bag.java
module edu::umd::cs::findbugs::util::Bag
   function add(E) in line 43
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function add(E,int) in line 53
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   function entrySet() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCount(E) in line 71
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function keySet() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Bag() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Bag(Map< E, Integer >) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/ClassName.java
module edu::umd::cs::findbugs::util::ClassName
   abstract class
   function assertIsDotted(@DottedClassName String) in line 41
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function assertIsSlashed(@SlashedClassName String) in line 45
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function extractClassName(String) in line 212
      protection public
      16 lines of code
      1 parameters
      5 conditional paths
   function extractPackageName(@DottedClassName String) in line 149
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function extractPackagePrefix(String,int) in line 229
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
   function extractSimpleName(@DottedClassName String) in line 157
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
   function fromFieldSignature(String) in line 99
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function getPrimitiveType(@SlashedClassName String) in line 59
      protection public
      31 lines of code
      1 parameters
      10 conditional paths
   function isAnonymous(String) in line 196
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function isMathClass(@SlashedClassName String) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isValidClassName(String) in line 179
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function matchedPrefixes(String[],@DottedClassName String) in line 246
      protection public
      15 lines of code
      2 parameters
      4 conditional paths
   function toDottedClassName(@SlashedClassName(when=When.UNKNOWN) String) in line 133
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function toSignature(@SlashedClassName String) in line 49
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function toSlashedClassName(@SlashedClassName(when=When.UNKNOWN) String) in line 116
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function toSlashedClassName(Class<?>) in line 263
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function toSlashedClassName(@SlashedClassName(when=When.UNKNOWN) String) defined in edu::umd::cs::findbugs::util::ClassName
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/ClassPathUtil.java
module edu::umd::cs::findbugs::util::ClassPathUtil
   function findCodeBaseInClassPath(@Nonnull String,String) in line 46
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
   function findCodeBaseInClassPath(Pattern,String) in line 75
      protection public
      17 lines of code
      2 parameters
      4 conditional paths
   function getJavaClassPath() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/ContainsCamelCaseWordStringMatcher.java
module edu::umd::cs::findbugs::util::ContainsCamelCaseWordStringMatcher
   inherits from edu::umd::cs::findbugs::util::StringMatcher
   function matches(String) in line 48
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function split() defined in edu::umd::cs::findbugs::util::SplitCamelCaseIdentifier
      uses variable expected defined in edu::umd::cs::findbugs::util::ContainsCamelCaseWordStringMatcher
   function toString() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable expected defined in edu::umd::cs::findbugs::util::ContainsCamelCaseWordStringMatcher
   function ContainsCamelCaseWordStringMatcher(String) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable expected defined in edu::umd::cs::findbugs::util::ContainsCamelCaseWordStringMatcher
   variable expected in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/DualKeyHashMap.java
module edu::umd::cs::findbugs::util::DualKeyHashMap
   function containsKey(K1,K2) in line 41
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function get(K1,K2) in line 33
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function get(K1) in line 49
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function keySet() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function put(K1,K2,V) in line 61
      protection public
      16 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/EditDistance.java
module edu::umd::cs::findbugs::util::EditDistance
   function distance(char,char) in line 38
      9 lines of code
      2 parameters
      3 conditional paths
   function editDistance(String,String) in line 54
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable INSERT_OR_DELETE_COST defined in edu::umd::cs::findbugs::util::EditDistance
      uses function editDistance1(String,String) defined in edu::umd::cs::findbugs::util::EditDistance
   function editDistance0(String,String) in line 65
      protection public
      23 lines of code
      2 parameters
      5 conditional paths
      uses function distance(char,char) defined in edu::umd::cs::findbugs::util::EditDistance
      uses variable INSERT_OR_DELETE_COST defined in edu::umd::cs::findbugs::util::EditDistance
      uses function minimum(int,int,int) defined in edu::umd::cs::findbugs::util::EditDistance
   function editDistance1(String,String) in line 89
      protection public
      26 lines of code
      2 parameters
      4 conditional paths
      uses function distance(char,char) defined in edu::umd::cs::findbugs::util::EditDistance
      uses variable INSERT_OR_DELETE_COST defined in edu::umd::cs::findbugs::util::EditDistance
      uses function minimum(int,int,int) defined in edu::umd::cs::findbugs::util::EditDistance
      uses function editDistance0(String,String) defined in edu::umd::cs::findbugs::util::EditDistance
   function editDistanceRatio(String,String) in line 48
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function distance(char,char) defined in edu::umd::cs::findbugs::util::EditDistance
      uses function editDistance(String,String) defined in edu::umd::cs::findbugs::util::EditDistance
      uses variable INSERT_OR_DELETE_COST defined in edu::umd::cs::findbugs::util::EditDistance
   function minimum(int,int,int) in line 31
      6 lines of code
      3 parameters
      2 conditional paths
   variable INSERT_OR_DELETE_COST in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/ExactStringMatcher.java
module edu::umd::cs::findbugs::util::ExactStringMatcher
   inherits from edu::umd::cs::findbugs::util::StringMatcher
   function matches(String) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable expected defined in edu::umd::cs::findbugs::util::ExactStringMatcher
   function ExactStringMatcher(String) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable expected defined in edu::umd::cs::findbugs::util::ExactStringMatcher
   variable expected in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/FractionalMultiset.java
module edu::umd::cs::findbugs::util::FractionalMultiset
   function add(K,double) in line 53
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
   function clear() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function compareValues(Entry< E, Double >,Entry< E, Double >) in line 109
      11 lines of code
      2 parameters
      3 conditional paths
   function entriesInDecreasingOrder() in line 87
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
   function entriesInIncreasingOrder() in line 98
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
   function entrySet() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getValue(K) in line 62
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function numKeys() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function turnTotalIntoAverage(Multiset< K >) in line 70
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function getCount(K) defined in edu::umd::cs::findbugs::util::Multiset
   function FractionalMultiset() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FractionalMultiset(Map< K, Double >) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::util::FractionalMultiset::DecreasingOrderEntryComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(Entry< E, Double >,Entry< E, Double >) in line 123
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::util::FractionalMultiset::IncreasingOrderEntryComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(Entry< E, Double >,Entry< E, Double >) in line 130
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/FutureValue.java
module edu::umd::cs::findbugs::util::FutureValue
   inherits from java::util::concurrent::Future
   function cancel(boolean) in line 39
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function get() in line 49
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function get(long,TimeUnit) in line 58
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
   function get(long,TimeUnit,V) in line 68
      protection public
      10 lines of code
      3 parameters
      3 conditional paths
   function isCancelled() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isDone() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function set(V) in line 89
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/HTML.java
module edu::umd::cs::findbugs::util::HTML
   function convertHtmlSnippetToText(String) in line 143
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function convertHtmlToText(Reader,Writer) defined in edu::umd::cs::findbugs::util::HTML
   function convertHtmlToText(Reader,Writer) in line 131
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses function HTMLtoPlainTextWriter2(Writer,HTMLDocument) defined in edu::umd::cs::findbugs::util::HTML::HTMLtoPlainTextWriter2
   function HTML() in line 128
      2 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::util::HTML::HTMLtoPlainTextWriter2
   inherits from javax::swing::text::html::HTMLWriter
   function decrIndent() in line 96
      2 lines of code
      0 parameters
      1 conditional paths
   function emptyTag(Element) in line 100
      5 lines of code
      1 parameters
      2 conditional paths
   function endTag(Element) in line 73
      17 lines of code
      1 parameters
      5 conditional paths
   function incrIndent() in line 92
      2 lines of code
      0 parameters
      1 conditional paths
   function startTag(Element) in line 51
      15 lines of code
      1 parameters
      4 conditional paths
   function text(Element) in line 107
      19 lines of code
      1 parameters
      5 conditional paths
   function writeEmbeddedTags(AttributeSet) in line 68
      3 lines of code
      1 parameters
      1 conditional paths
   function HTMLtoPlainTextWriter2(Writer,HTMLDocument) in line 44
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/JavaWebStart.java
module edu::umd::cs::findbugs::util::JavaWebStart
   function isRunningViaJavaWebstart() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function resolveRelativeToJnlpCodebase(String) in line 78
      protection public
      15 lines of code
      1 parameters
      9 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/LaunchBrowser.java
module edu::umd::cs::findbugs::util::LaunchBrowser
   function showDocument(URL) in line 160
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
   variable desktopBrowseMethod in line 48
   variable desktopObject in line 46
   variable execCommand in line 41
      protection public
   variable launchViaExec in line 43
      protection public
   variable launchViaExecFailed in line 50
   variable validExec in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/MapCache.java
module edu::umd::cs::findbugs::util::MapCache
   inherits from java::util::LinkedHashMap
   function removeEldestEntry(Map.Entry< K, V >) in line 52
      7 lines of code
      1 parameters
      1 conditional paths
   function MapCache(int) in line 45
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   variable serialVersionUID in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/MergeMap.java
module edu::umd::cs::findbugs::util::MergeMap
   abstract class
   function containsKey(K) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function entrySet() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function get(K) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function main(String) in line 92
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses function put(K,V) defined in edu::umd::cs::findbugs::util::MergeMap
      uses function entrySet() defined in edu::umd::cs::findbugs::util::MergeMap
   function mergeValues(V,V) in line 56
      1 lines of code
      2 parameters
      1 conditional paths
   function put(K,V) in line 66
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses function mergeValues(V,V) defined in edu::umd::cs::findbugs::util::MergeMap::MaxMap
   function MergeMap() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function MergeMap(Map< K, V >) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::util::MergeMap::MinMap
   inherits from edu::umd::cs::findbugs::util::MergeMap
   function mergeValues(V,V) in line 33
      7 lines of code
      2 parameters
      2 conditional paths
module edu::umd::cs::findbugs::util::MergeMap::MaxMap
   inherits from edu::umd::cs::findbugs::util::MergeMap
   function mergeValues(V,V) in line 45
      7 lines of code
      2 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/MultiMap.java
module edu::umd::cs::findbugs::util::MultiMap
   function add(K,V) in line 61
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function asMap() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function clear() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function containsKey(K) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function get(K) in line 84
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function keySet() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeCollection() in line 38
      9 lines of code
      0 parameters
      1 conditional paths
   function remove(K,V) in line 70
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   function removeAll(K) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function MultiMap(@SuppressWarnings("rawtypes") Class<?extends Collection >) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/Multiset.java
module edu::umd::cs::findbugs::util::Multiset
   function add(K) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function add(K,int) in line 79
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
   function addAll(Iterable< K >) in line 88
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function add(K) defined in edu::umd::cs::findbugs::util::Multiset
   function clear() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function entriesInDecreasingFrequency() in line 111
      protection public
      9 lines of code
      0 parameters
      4 conditional paths
   function entrySet() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCount(K) in line 94
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function isEmpty() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function numKeys() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function remove(K) in line 66
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
   function uniqueKeys() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Multiset() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Multiset(Map< K, Integer >) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function Multiset(Multiset< K >) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::util::Multiset::EntryComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(Entry< E, Integer >,Entry< E, Integer >) in line 124
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/NotImplementedYetException.java
module edu::umd::cs::findbugs::util::NotImplementedYetException
   inherits from RuntimeException
   function NotImplementedYetException(String) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/NullIterator.java
module edu::umd::cs::findbugs::util::NullIterator
   inherits from java::util::Iterator
   function hasNext() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function remove() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/ProfilingMapCache.java
module edu::umd::cs::findbugs::util::ProfilingMapCache
   inherits from edu::umd::cs::findbugs::util::MapCache
   function get(Object) in line 49
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
   function getStatistics() in line 65
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function ProfilingMapCache(int,String) in line 31
      protection public
      14 lines of code
      2 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/RegexStringMatcher.java
module edu::umd::cs::findbugs::util::RegexStringMatcher
   inherits from edu::umd::cs::findbugs::util::StringMatcher
   function matches(String) in line 45
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable pattern defined in edu::umd::cs::findbugs::util::RegexStringMatcher
   function toString() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pattern defined in edu::umd::cs::findbugs::util::RegexStringMatcher
   function RegexStringMatcher(String) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pattern defined in edu::umd::cs::findbugs::util::RegexStringMatcher
   variable pattern in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/SplitCamelCaseIdentifier.java
module edu::umd::cs::findbugs::util::SplitCamelCaseIdentifier
   function split() in line 49
      protection public
      46 lines of code
      0 parameters
      9 conditional paths
      uses variable ident defined in edu::umd::cs::findbugs::util::SplitCamelCaseIdentifier
   function SplitCamelCaseIdentifier(String) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ident defined in edu::umd::cs::findbugs::util::SplitCamelCaseIdentifier
   variable ident in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/StringMatcher.java
module edu::umd::cs::findbugs::util::StringMatcher
   function matches(String) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/Strings.java
module edu::umd::cs::findbugs::util::Strings
   function escapeLFCRBackSlash(String) in line 298
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function escapeXml(String) in line 163
      protection public
      26 lines of code
      1 parameters
      5 conditional paths
      uses function initializeEscapeMap() defined in edu::umd::cs::findbugs::util::Strings
      uses function isInvalidXMLCharacter(int) defined in edu::umd::cs::findbugs::util::Strings
      uses variable xmlLowValueEscapeStrings defined in edu::umd::cs::findbugs::util::Strings
   function initializeEscapeMap() in line 119
      protection public
      26 lines of code
      0 parameters
      5 conditional paths
      uses variable xmlLowValueEscapeStringsInitialized defined in edu::umd::cs::findbugs::util::Strings
      uses variable escapeInitLockObject defined in edu::umd::cs::findbugs::util::Strings
      uses variable xmlAllowedLowCharacterBound defined in edu::umd::cs::findbugs::util::Strings
      uses function isInvalidXMLCharacter(int) defined in edu::umd::cs::findbugs::util::Strings
      uses variable xmlLowValueEscapeStrings defined in edu::umd::cs::findbugs::util::Strings
   function initializeUnescapePattern() in line 202
      protection public
      25 lines of code
      0 parameters
      4 conditional paths
      uses variable paternIsInitialized defined in edu::umd::cs::findbugs::util::Strings
      uses variable unescapeInitLockObject defined in edu::umd::cs::findbugs::util::Strings
      uses variable unescapePattern defined in edu::umd::cs::findbugs::util::Strings
      uses variable unicodeUnescapeMatchExpression defined in edu::umd::cs::findbugs::util::Strings
   function isInvalidXMLCharacter(int) in line 96
      8 lines of code
      1 parameters
      2 conditional paths
   function replace(String,String,String) in line 55
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function toString(final Object[]) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function trimComma(String) in line 81
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function unescapeXml(String) in line 244
      protection public
      53 lines of code
      1 parameters
      7 conditional paths
      uses function initializeEscapeMap() defined in edu::umd::cs::findbugs::util::Strings
      uses function initializeUnescapePattern() defined in edu::umd::cs::findbugs::util::Strings
      uses variable unescapePattern defined in edu::umd::cs::findbugs::util::Strings
      uses function isInvalidXMLCharacter(int) defined in edu::umd::cs::findbugs::util::Strings
   variable escapeInitLockObject in line 109
   variable paternIsInitialized in line 194
   variable unescapeInitLockObject in line 196
   variable unescapePattern in line 192
   variable unicodeUnescapeMatchExpression in line 190
   variable xmlAllowedLowCharacterBound in line 94
   variable xmlLowValueEscapeStrings in line 107
   variable xmlLowValueEscapeStringsInitialized in line 105
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/SubtypeTypeMatcher.java
module edu::umd::cs::findbugs::util::SubtypeTypeMatcher
   inherits from edu::umd::cs::findbugs::util::TypeMatcher
   function matches(Type) in line 63
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
      uses variable supertype defined in edu::umd::cs::findbugs::util::SubtypeTypeMatcher
      uses function getErrorLogger() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function toString() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable supertype defined in edu::umd::cs::findbugs::util::SubtypeTypeMatcher
   function SubtypeTypeMatcher(ReferenceType) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable supertype defined in edu::umd::cs::findbugs::util::SubtypeTypeMatcher
   function SubtypeTypeMatcher(ClassDescriptor) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   variable supertype in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/TestDesktopIntegration.java
module edu::umd::cs::findbugs::util::TestDesktopIntegration
   inherits from javax::swing::JPanel
   function createAndShowGUI() in line 72
      13 lines of code
      0 parameters
      1 conditional paths
      uses function TestDesktopIntegration() defined in edu::umd::cs::findbugs::util::TestDesktopIntegration
   function main(String) in line 60
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses function createAndShowGUI() defined in edu::umd::cs::findbugs::util::TestDesktopIntegration
   function TestDesktopIntegration() in line 124
      protection public
      166 lines of code
      0 parameters
      20 conditional paths
      uses variable execCommand defined in edu::umd::cs::findbugs::util::LaunchBrowser
      uses variable launchViaExec defined in edu::umd::cs::findbugs::util::LaunchBrowser
      uses variable propertyNames defined in edu::umd::cs::findbugs::util::TestDesktopIntegration
   variable propertyNames in line 53
module edu::umd::cs::findbugs::util::TestDesktopIntegration::ConsoleWriter
   inherits from java::io::Writer
   function close() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function flush() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function write(char[],int,int) in line 113
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/TopologicalSort.java
module edu::umd::cs::findbugs::util::TopologicalSort
   function countBadEdges(List< E >,OutEdges< E >) in line 85
      protection public
      21 lines of code
      2 parameters
      33 conditional paths
      uses function getOutEdges(E) defined in edu::umd::cs::findbugs::util::TopologicalSort::OutEdges
      uses function add(K,V) defined in edu::umd::cs::findbugs::util::MultiMap
      uses function get(K) defined in edu::umd::cs::findbugs::util::MultiMap
      uses function remove(K,V) defined in edu::umd::cs::findbugs::util::MultiMap
   function sortByCallGraph(Collection< E >,OutEdges< E >) in line 74
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function getProfiler() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function start(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
      uses function end(Class<?>) defined in edu::umd::cs::findbugs::log::Profiler
module edu::umd::cs::findbugs::util::TopologicalSort::OutEdges
   function getOutEdges(E) in line 45
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::util::TopologicalSort::OutEdges2
   inherits from edu::umd::cs::findbugs::util::TopologicalSort::OutEdges
   function score(E) in line 49
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::util::TopologicalSort::OutEdgesCache
   inherits from edu::umd::cs::findbugs::util::TopologicalSort::OutEdges
   function getOutEdges(E) in line 63
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function OutEdgesCache(OutEdges< E >) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::util::TopologicalSort::SortAlgorithm
   function compute() in line 108
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::util::TopologicalSort::Worker
   inherits from edu::umd::cs::findbugs::util::TopologicalSort::SortAlgorithm
   function compute() in line 128
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::util::TopologicalSort::Worker2
   inherits from edu::umd::cs::findbugs::util::TopologicalSort::SortAlgorithm
   function compute() in line 181
      protection public
      78 lines of code
      0 parameters
      1 conditional paths
   function getScore(E) in line 264
      11 lines of code
      1 parameters
      1 conditional paths
   function removeVertex(E) in line 166
      13 lines of code
      1 parameters
      1 conditional paths
   function score(E) in line 280
      18 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/TripleKeyHashMap.java
module edu::umd::cs::findbugs::util::TripleKeyHashMap
   function get(K1,K2,K3) in line 31
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses function get(K1,K2) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
   function put(K1,K2,K3,V) in line 39
      protection public
      8 lines of code
      4 parameters
      2 conditional paths
      uses function get(K1,K2) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
      uses function put(K1,K2,V) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/TypeMatcher.java
module edu::umd::cs::findbugs::util::TypeMatcher
   function matches(Type) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/Util.java
module edu::umd::cs::findbugs::util::Util
   function addTo(Set< K >,K) in line 558
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
      uses function makeSmallHashSet(Collection< K >) defined in edu::umd::cs::findbugs::util::Util
   function addTo(List< K >,K) in line 575
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses function makeSmallArrayList(List< K >) defined in edu::umd::cs::findbugs::util::Util
   function closeSilently(@WillClose Connection) in line 266
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function closeSilently(@WillClose PreparedStatement) in line 276
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function closeSilently(@WillClose ResultSet) in line 286
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function closeSilently(@WillClose InputStream) in line 296
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function closeSilently(@WillClose Reader) in line 306
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function closeSilently(@WillClose OutputStream) in line 316
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function closeSilently(@WillClose Closeable) in line 326
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function closeSilently(@WillClose ZipFile) in line 336
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function commonPrefix(String,String) in line 422
      protection public
      20 lines of code
      2 parameters
      6 conditional paths
   function compare(int,int) in line 100
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
   function compare(long,long) in line 113
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
   function emptyOrNonnullSingleton(T) in line 202
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function first(Iterable< E >) in line 414
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getFileExtension(String) in line 383
      7 lines of code
      1 parameters
      2 conditional paths
   function getFileExtension(File) in line 391
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getFileExtension(String) defined in edu::umd::cs::findbugs::util::Util
   function getFileExtensionIgnoringGz(File) in line 394
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getFileExtension(String) defined in edu::umd::cs::findbugs::util::Util
   function getFileReader(String) in line 250
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getReader(@WillCloseWhenClosed InputStream) defined in edu::umd::cs::findbugs::util::Util
   function getFileReader(File) in line 254
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getReader(@WillCloseWhenClosed InputStream) defined in edu::umd::cs::findbugs::util::Util
   function getFileWriter(String) in line 262
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getWriter(@WillCloseWhenClosed OutputStream) defined in edu::umd::cs::findbugs::util::Util
   function getMD5Digest() in line 586
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function getNetworkErrorMessage(Throwable) in line 165
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
   function getReader(@WillCloseWhenClosed InputStream) in line 246
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getWriter(@WillCloseWhenClosed OutputStream) in line 258
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getXMLType(@WillNotClose InputStream) in line 349
      protection public
      28 lines of code
      1 parameters
      6 conditional paths
      uses function getReader(@WillCloseWhenClosed InputStream) defined in edu::umd::cs::findbugs::util::Util
   function immutableMap(Map< K, V >) in line 209
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function isPowerOfTwo(int) in line 595
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function isPowerOfTwo(long) in line 605
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function makeIOException(String,Throwable) in line 378
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function makeSmallArrayList(List< K >) in line 551
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function makeSmallHashMap(Map< K, V >) in line 537
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function makeSmallHashSet(Collection< K >) in line 544
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function newSetFromMap(Map< E, Boolean >) in line 444
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function nullSafeCompareTo(@CheckForNull T,@CheckForNull T) in line 233
      protection public
      12 lines of code
      2 parameters
      4 conditional paths
   function nullSafeEquals(@CheckForNull T,@CheckForNull T) in line 223
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
   function nullSafeHashcode(@CheckForNull Object) in line 216
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function repeat(String,int) in line 155
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
   function runInDameonThread(Runnable,String) in line 77
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function startDameonThread(Thread) defined in edu::umd::cs::findbugs::util::Util
   function runInDameonThread(Runnable) in line 82
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function startDameonThread(Thread) defined in edu::umd::cs::findbugs::util::Util
   function runLogAtShutdown(Runnable) in line 180
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
   function setBitIteratable(final BitSet) in line 123
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function setBitIterator(final BitSet) defined in edu::umd::cs::findbugs::util::Util
   function setBitIterator(final BitSet) in line 132
      protection public
      22 lines of code
      1 parameters
      1 conditional paths
   function sign(int) in line 88
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function startDameonThread(Thread) in line 71
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function throwIOException(String,Throwable) in line 403
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::util::Util::ShutdownLogging
   variable LOGGING in line 177
      protection public
module edu::umd::cs::findbugs::util::Util::SetFromMap
   inherits from java::util::AbstractSet
   function add(E) in line 489
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function clear() in line 464
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function contains(Object) in line 479
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function containsAll(Collection<?>) in line 519
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 514
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 509
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isEmpty() in line 474
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterator() in line 459
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function remove(Object) in line 484
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeAll(Collection<?>) in line 524
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function retainAll(Collection<?>) in line 529
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function size() in line 469
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toArray() in line 494
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 504
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/visitclass/Util.java
module edu::umd::cs::findbugs::visitclass::Util
   function getOuterClass(JavaClass) in line 55
      protection public
      16 lines of code
      1 parameters
      5 conditional paths
   function getSizeOfSurroundingTryBlock(@CheckForNull Method,Class<?extends Throwable >,int) in line 72
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
   function getSizeOfSurroundingTryBlock(@CheckForNull Method,@CheckForNull String,int) in line 79
      protection public
      6 lines of code
      3 parameters
      2 conditional paths
      uses function getSizeOfSurroundingTryBlock(@CheckForNull Method,Class<?extends Throwable >,int) defined in edu::umd::cs::findbugs::visitclass::Util
   function getSizeOfSurroundingTryBlock(ConstantPool,Code,@CheckForNull @SlashedClassName String,int) in line 114
      protection public
      50 lines of code
      4 parameters
      12 conditional paths
   function getSurroundingTryBlock(ConstantPool,Code,@CheckForNull String,int) in line 87
      protection public
      26 lines of code
      4 parameters
      7 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/util/WriteOnceProperties.java
module edu::umd::cs::findbugs::util::WriteOnceProperties
   inherits from java::util::Properties
   function dumpProperties() in line 81
      8 lines of code
      0 parameters
      2 conditional paths
   function equals(Object) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getProperty(String) in line 32
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable propertReadAt defined in edu::umd::cs::findbugs::util::WriteOnceProperties
   function getProperty(String,String) in line 41
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable propertReadAt defined in edu::umd::cs::findbugs::util::WriteOnceProperties
   function hashCode() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function main(String) in line 68
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses function dumpProperties() defined in edu::umd::cs::findbugs::util::WriteOnceProperties
      uses function makeSystemPropertiesWriteOnce() defined in edu::umd::cs::findbugs::util::WriteOnceProperties
   function makeSystemPropertiesWriteOnce() in line 60
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function WriteOnceProperties(Properties) defined in edu::umd::cs::findbugs::util::WriteOnceProperties
   function setProperty(String,String) in line 50
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable propertReadAt defined in edu::umd::cs::findbugs::util::WriteOnceProperties
   function WriteOnceProperties(Properties) in line 16
      3 lines of code
      1 parameters
      1 conditional paths
   variable propertReadAt in line 10
   variable serialVersionUID in line 9
module edu::umd::cs::findbugs::util::WriteOnceProperties::PropertyReadAt
   inherits from Exception
   variable serialVersionUID in line 13
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/Version.java
module edu::umd::cs::findbugs::Version
   function getApplicationName() in line 212
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable applicationName defined in edu::umd::cs::findbugs::Version
   function getApplicationVersion() in line 216
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable applicationVersion defined in edu::umd::cs::findbugs::Version
   function getReleaseDate() in line 281
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable releaseDate defined in edu::umd::cs::findbugs::Version
   function getReleaseWithDateIfDev() in line 274
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable IS_DEVELOPMENT defined in edu::umd::cs::findbugs::Version
      uses variable RELEASE defined in edu::umd::cs::findbugs::Version
      uses variable DATE defined in edu::umd::cs::findbugs::Version
   function main(String[]) in line 220
      protection public
      49 lines of code
      1 parameters
      11 conditional paths
      uses variable IS_DEVELOPMENT defined in edu::umd::cs::findbugs::Version
      uses variable RELEASE_CANDIDATE defined in edu::umd::cs::findbugs::Version
      uses function printVersion(boolean) defined in edu::umd::cs::findbugs::Version
      uses variable RELEASE defined in edu::umd::cs::findbugs::Version
      uses variable DATE defined in edu::umd::cs::findbugs::Version
      uses variable RELEASE_BASE defined in edu::umd::cs::findbugs::Version
      uses variable COMPUTED_RELEASE defined in edu::umd::cs::findbugs::Version
      uses variable COMPUTED_DATE defined in edu::umd::cs::findbugs::Version
      uses variable COMPUTED_PLUGIN_RELEASE_DATE defined in edu::umd::cs::findbugs::Version
      uses variable COMPUTED_ECLIPSE_UI_VERSION defined in edu::umd::cs::findbugs::Version
      uses variable WEBSITE defined in edu::umd::cs::findbugs::Version
      uses variable DOWNLOADS_WEBSITE defined in edu::umd::cs::findbugs::Version
      uses variable GIT_REVISION defined in edu::umd::cs::findbugs::Version
      uses function usage() defined in edu::umd::cs::findbugs::Version
   function printPluginUpdates(boolean,int) in line 327
      38 lines of code
      2 parameters
      9 conditional paths
      uses function getUpdateChecker() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function updateChecksGloballyDisabled() defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses function getUpdates() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function printVersion(boolean) in line 289
      protection public
      37 lines of code
      1 parameters
      10 conditional paths
      uses variable COMPUTED_RELEASE defined in edu::umd::cs::findbugs::Version
      uses function getParentPlugin() defined in edu::umd::cs::findbugs::Plugin
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses function printPluginUpdates(boolean,int) defined in edu::umd::cs::findbugs::Version
   function registerApplication(String,String) in line 207
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable applicationName defined in edu::umd::cs::findbugs::Version
      uses variable applicationVersion defined in edu::umd::cs::findbugs::Version
   function usage() in line 270
      3 lines of code
      0 parameters
      1 conditional paths
   variable applicationName in line 86
   variable applicationVersion in line 88
   variable COMPUTED_DATE in line 76
   variable COMPUTED_ECLIPSE_DATE in line 82
   variable COMPUTED_ECLIPSE_UI_VERSION in line 138
   variable COMPUTED_PLUGIN_RELEASE_DATE in line 84
   variable COMPUTED_RELEASE in line 128
      protection public
   variable CORE_PLUGIN_RELEASE_DATE in line 80
      protection public
   variable DATE in line 78
      protection public
   variable DOWNLOADS_WEBSITE in line 199
      protection public
   variable GIT_REVISION in line 71
      protection public
   variable IS_DEVELOPMENT in line 62
      protection public
   variable MAJOR in line 47
      protection public
   variable MINOR in line 52
      protection public
   variable PATCHLEVEL in line 57
      protection public
   variable PREVIEW in line 105
      protection public
   variable RELEASE in line 133
      protection public
   variable RELEASE_BASE in line 123
      protection public
   variable RELEASE_CANDIDATE in line 68
      protection public
   variable RELEASE_SUFFIX_WORD in line 107
   variable releaseDate in line 205
   variable SUPPORT_EMAIL in line 204
      protection public
   variable WEBSITE in line 194
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/VersionInsensitiveBugComparator.java
module edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   inherits from edu::umd::cs::findbugs::WarningComparator
   function compare(BugInstance,BugInstance) in line 135
      protection public
      129 lines of code
      2 parameters
      22 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function isExactBugPatternMatch() defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
      uses function getType() defined in edu::umd::cs::findbugs::BugPattern
      uses variable comparePriorities defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function FilteringAnnotationIterator(Iterator< BugAnnotation >) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function isSignificant() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function getName() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
      uses function rewriteClassName(String) defined in edu::umd::cs::findbugs::model::ClassNameRewriter
      uses function compareTo(BugAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function compareTo(BugAnnotation) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function isBoring(BugAnnotation) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
      uses function interestingNext(Iterator< BugAnnotation >) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   function interestingNext(Iterator< BugAnnotation >) in line 265
      15 lines of code
      1 parameters
      5 conditional paths
      uses function isBoring(BugAnnotation) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   function isBoring(BugAnnotation) in line 104
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isSignificant() defined in edu::umd::cs::findbugs::BugAnnotation
   function isExactBugPatternMatch() in line 285
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exactBugPatternMatch defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   function setClassNameRewriter(ClassNameRewriter) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   function setComparePriorities(boolean) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable comparePriorities defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   function setExactBugPatternMatch(boolean) in line 281
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable exactBugPatternMatch defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   function VersionInsensitiveBugComparator() in line 41
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable classNameRewriter in line 35
   variable comparePriorities in line 39
   variable exactBugPatternMatch in line 37
module edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
   inherits from java::util::Iterator
   function findNext() in line 89
      12 lines of code
      0 parameters
      4 conditional paths
      uses function next() defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
      uses variable iter defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
      uses function isBoring(BugAnnotation) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   function hasNext() in line 68
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
      uses function next() defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
   function next() in line 74
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
   function remove() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FilteringAnnotationIterator(Iterator< BugAnnotation >) in line 62
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable iter defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
   variable iter in line 58
   variable next in line 60
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/visitclass/AnnotationVisitor.java
module edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getAnnotationParameterAsString(Map< String, ElementValue >,String) in line 70
      13 lines of code
      2 parameters
      3 conditional paths
   function getAnnotationParameterAsStringArray(Map< String, ElementValue >,String) in line 86
      15 lines of code
      2 parameters
      3 conditional paths
   function visitAnnotation(@DottedClassName String,Map< String, ElementValue >,boolean) in line 60
      protection public
      9 lines of code
      3 parameters
      3 conditional paths
   function visitAnnotation(Annotations) in line 291
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses function visitAnnotation(@DottedClassName String,Map< String, ElementValue >,boolean) defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   function visitParameterAnnotation(int,@DottedClassName String,Map< String, ElementValue >,boolean) in line 115
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   function visitParameterAnnotation(ParameterAnnotations) in line 256
      protection public
      26 lines of code
      1 parameters
      6 conditional paths
      uses function getNumberMethodArguments() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function visitParameterAnnotation(int,@DottedClassName String,Map< String, ElementValue >,boolean) defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   function visitSyntheticParameterAnnotation(int,boolean) in line 120
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/visitclass/BetterVisitor.java
module edu::umd::cs::findbugs::visitclass::BetterVisitor
   inherits from org::apache::bcel::classfile::Visitor
   abstract class
   function clone() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function report(PrintStream) in line 384
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(JavaClass) in line 82
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(ConstantPool) in line 85
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Field) in line 88
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 91
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Constant) in line 96
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(ConstantCP) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantMethodref) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantFieldref) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantInterfaceMethodref) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantClass) in line 115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantDouble) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantFloat) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantInteger) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantLong) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantNameAndType) in line 135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantString) in line 139
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantUtf8) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(Attribute) in line 148
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantValue) in line 155
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ExceptionTable) in line 159
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(InnerClasses) in line 163
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(LineNumberTable) in line 167
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(LocalVariableTable) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(LocalVariableTypeTable) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(SourceFile) in line 179
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(Synthetic) in line 183
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(org.apache.bcel.classfile.Deprecated) in line 187
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(Unknown) in line 191
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(Signature) in line 195
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(InnerClass) in line 200
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(LocalVariable) in line 203
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(LineNumber) in line 206
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(CodeException) in line 209
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(StackMapEntry) in line 212
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitCode(Code) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitCodeException(CodeException) in line 222
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantClass(ConstantClass) in line 228
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantDouble(ConstantDouble) in line 233
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantFieldref(ConstantFieldref) in line 238
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantFloat(ConstantFloat) in line 243
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantInteger(ConstantInteger) in line 248
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantInterfaceMethodref(ConstantInterfaceMethodref) in line 253
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantLong(ConstantLong) in line 258
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantMethodref(ConstantMethodref) in line 263
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantNameAndType(ConstantNameAndType) in line 268
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantPool(ConstantPool) in line 273
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantString(ConstantString) in line 278
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantUtf8(ConstantUtf8) in line 283
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantValue(ConstantValue) in line 288
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitDeprecated(org.apache.bcel.classfile.Deprecated) in line 293
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitExceptionTable(ExceptionTable) in line 298
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitField(Field) in line 303
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitInnerClass(InnerClass) in line 309
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitInnerClasses(InnerClasses) in line 314
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitJavaClass(JavaClass) in line 320
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitLineNumber(LineNumber) in line 325
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitLineNumberTable(LineNumberTable) in line 330
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitLocalVariable(LocalVariable) in line 335
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitLocalVariableTable(LocalVariableTable) in line 340
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitLocalVariableTypeTable(LocalVariableTypeTable) in line 345
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitMethod(Method) in line 350
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitSignature(Signature) in line 355
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitSourceFile(SourceFile) in line 360
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitStackMap(StackMap) in line 380
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitStackMapEntry(StackMapEntry) in line 375
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitSynthetic(Synthetic) in line 365
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitUnknown(Unknown) in line 370
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/visitclass/Constants2.java
module edu::umd::cs::findbugs::visitclass::Constants2
   inherits from org::apache::bcel::Constants
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/visitclass/DismantleBytecode.java
module edu::umd::cs::findbugs::visitclass::DismantleBytecode
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   abstract class
   function afterOpcode(int) in line 980
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function areOppositeBranches(int,int) in line 1067
      protection public
      32 lines of code
      2 parameters
      19 conditional paths
      uses function isBranch(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function atCatchBlock() in line 525
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function beforeOpcode(int) in line 976
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBranchFallThrough() in line 389
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable branchFallThrough defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable INVALID_OFFSET defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getBranchOffset() in line 375
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable branchOffset defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable INVALID_OFFSET defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getBranchTarget() in line 382
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable branchTarget defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable INVALID_OFFSET defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getClassConstantOperand() in line 329
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable classConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getClassDescriptorOperand() in line 189
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable referencedClass defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getCodeByte(int) in line 517
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getConstantRefOperand() in line 345
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable constantRefOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getDefaultSwitchOffset() in line 396
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable defaultSwitchOffset defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable INVALID_OFFSET defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getDottedClassConstantOperand() in line 269
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable dottedClassConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable classConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getFieldDescriptorOperand() in line 242
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable nameConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedField defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getFieldDescriptor(@SlashedClassName String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable classConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getIntConstant() in line 367
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getOpcode() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getConstantRefOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable intConstant defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getLongConstant() in line 371
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getOpcode() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getConstantRefOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable longConstant defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getMaxPC() in line 513
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getMethodDescriptorOperand() in line 214
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable nameConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable classConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedMethod defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getMethodDescriptor(JavaClass,Method) defined in edu::umd::cs::findbugs::classfile::DescriptorFactory
      uses variable sigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getNameConstantOperand() in line 304
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable nameConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getNextOpcode() in line 1049
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getNextPC() in line 1045
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getOpcode() in line 521
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getPC() in line 407
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable PC defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getPrevOpcode(int) in line 417
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable prevOpcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sizePrevOpcodeBuffer defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable currentPosInPrevOpcodeBuffer defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getRefConstantOperand() in line 287
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses variable refConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable dottedClassConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable nameConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getReferencedXClass() in line 1149
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable referencedXClass defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedClass defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function getRefFieldIsStatic() in line 403
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable refFieldIsStatic defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getRegisterOperand() in line 360
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable registerOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getSigConstantOperand() in line 316
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable sigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getStringConstantOperand() in line 338
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable stringConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getSwitchLabels() in line 467
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable switchLabels defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getSwitchOffsets() in line 459
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable switchOffsets defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getXClassOperand() in line 197
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getReferencedXClass() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getXFieldOperand() in line 255
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function getReferencedXClass() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedXField defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function findField(String,String,boolean) defined in edu::umd::cs::findbugs::ba::XClass
      uses variable nameConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getXMethodOperand() in line 228
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable nameConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable classConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getReferencedXClass() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedXMethod defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function isBranch(int) in line 442
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable M_BR defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function isMethodCall() in line 201
      protection public
      11 lines of code
      0 parameters
      5 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function isRegisterLoad() in line 352
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isRegisterStore() in line 356
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isRegisterStore(int) in line 1100
      protection public
      37 lines of code
      1 parameters
      26 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function isReturn(int) in line 1053
      protection public
      13 lines of code
      1 parameters
      7 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function isSwitch(int) in line 454
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function isWideOpcode() in line 431
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable opcodeIsWide defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function printOpCode(int) in line 1007
      protection public
      34 lines of code
      1 parameters
      10 conditional paths
      uses variable formatter defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getConstantRefOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStringConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSwitchOffsets() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDefaultSwitchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function resetState() in line 474
      17 lines of code
      0 parameters
      1 conditional paths
      uses variable classConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable nameConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stringConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable refConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable refFieldIsStatic defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable constantRefOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable registerOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterLoad() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable branchOffset defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable branchTarget defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable branchFallThrough defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable defaultSwitchOffset defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable INVALID_OFFSET defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable switchOffsets defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable switchLabels defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable dottedClassConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedClass defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function setReferencedXClass(XClass) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedMethod defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedXMethod defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedField defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedXField defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function sawBranchTo(int) in line 972
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawClass() in line 998
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function sawDouble(double) in line 957
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawField() in line 989
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function sawFloat(float) in line 960
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawIMethod() in line 995
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function sawInt(int) in line 966
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawLong(long) in line 969
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawMethod() in line 992
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function sawOpcode(int) in line 983
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawRegister(int) in line 963
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawString(String) in line 986
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function setReferencedXClass(XClass) in line 1142
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable referencedXClass defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function sortByOffset(int[],int[]) in line 492
      20 lines of code
      2 parameters
      5 conditional paths
      uses variable switchOffsets defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable switchLabels defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 535
      protection public
      421 lines of code
      1 parameters
      133 conditional paths
      uses variable sizePrevOpcodeBuffer defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable currentPosInPrevOpcodeBuffer defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable prevOpcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable lineNumberTable defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function resetState() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable PC defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable opcodeIsWide defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable defaultSwitchOffset defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable branchOffset defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable branchTarget defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable switchOffsets defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable switchLabels defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sortByOffset(int[],int[]) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable registerOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable intConstant defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable M_CP defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable M_R defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable M_UINT defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable M_BR defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable branchFallThrough defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable constantRefOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable classConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStringFromIndex(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable referencedClass defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable longConstant defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable floatConstant defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable doubleConstant defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stringConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable referencedXClass defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable nameConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable refConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable M_INT defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable M_PAD defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterLoad() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable refFieldIsStatic defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function beforeOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function afterOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawInt(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawBranchTo(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawLong(long) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawFloat(float) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawDouble(double) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawString(String) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawField() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawMethod() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawIMethod() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawClass() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawRegister(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   variable branchFallThrough in line 73
   variable branchOffset in line 69
   variable branchTarget in line 71
   variable classConstantOperand in line 88
   variable codeBytes in line 183
   variable constantRefOperand in line 114
   variable currentPosInPrevOpcodeBuffer in line 81
   variable defaultSwitchOffset in line 85
   variable dottedClassConstantOperand in line 102
   variable doubleConstant in line 122
   variable floatConstant in line 120
   variable formatter in line 1001
   variable intConstant in line 116
   variable INVALID_OFFSET in line 130
   variable isRegisterLoad in line 126
   variable isRegisterStore in line 128
   variable lineNumberTable in line 185
   variable longConstant in line 118
   variable M_BR in line 149
      protection public
   variable M_CP in line 145
      protection public
   variable M_INT in line 141
      protection public
   variable M_PAD in line 151
      protection public
   variable M_R in line 147
      protection public
   variable M_UINT in line 143
      protection public
   variable nameConstantOperand in line 104
   variable NOT_AVAILABLE in line 132
   variable opcode in line 63
   variable opcodeIsWide in line 65
   variable PC in line 67
   variable prevOpcode in line 79
   variable refConstantOperand in line 110
   variable referencedClass in line 90
   variable referencedField in line 98
   variable referencedMethod in line 94
   variable referencedXClass in line 92
   variable referencedXField in line 100
   variable referencedXMethod in line 96
   variable refFieldIsStatic in line 112
   variable registerOperand in line 124
   variable sigConstantOperand in line 106
   variable sizePrevOpcodeBuffer in line 83
   variable stringConstantOperand in line 108
   variable switchLabels in line 77
   variable switchOffsets in line 75
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/visitclass/LVTHelper.java
module edu::umd::cs::findbugs::visitclass::LVTHelper
   function getLocalVariableAtPC(@Nonnull LocalVariableTable,int,int) in line 43
      protection public
      15 lines of code
      3 parameters
      4 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/visitclass/PreorderVisitor.java
module edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::visitclass::BetterVisitor
   inherits from edu::umd::cs::findbugs::visitclass::Constants2
   function amVisitingMainMethod() in line 310
      protection public
      16 lines of code
      0 parameters
      5 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function asUnsignedByte(byte) in line 144
      3 lines of code
      1 parameters
      1 conditional paths
   function doVisitField(Field) in line 265
      22 lines of code
      1 parameters
      4 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedFieldSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fullyQualifiedFieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable thisFieldInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable thisClassInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function findField(String,String,boolean) defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses function getFieldName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFullyQualifiedFieldName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldIsStatic defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function doVisitMethod(Method) in line 288
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedMethodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fullyQualifiedMethodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable thisMethodInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable thisClassInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function findMethod(String,String,boolean) defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getClassDescriptor() in line 449
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable thisClassInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getClassName() in line 479
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getCode() in line 153
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getConstantPool() in line 470
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable constantPool defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getDottedClassName() in line 485
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dottedClassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getDottedFieldSig() in line 695
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedFieldSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getDottedMethodSig() in line 641
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedMethodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getDottedSuperclassName() in line 516
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dottedSuperclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getField() in line 557
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getFieldDescriptor() in line 465
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable thisFieldInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getFieldIsStatic() in line 675
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldIsStatic defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getFieldName() in line 652
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStringFromIndex(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getFieldSig() in line 664
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStringFromIndex(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getFullyQualifiedFieldName() in line 683
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fullyQualifiedFieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getFullyQualifiedMethodName() in line 526
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fullyQualifiedMethodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedClassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedMethodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getMethod() in line 565
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getMethodDescriptor() in line 457
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable thisMethodInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getMethodName() in line 573
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStringFromIndex(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getMethodSig() in line 630
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStringFromIndex(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getMethodVisitOrder(JavaClass) in line 355
      3 lines of code
      1 parameters
      1 conditional paths
   function getNumberArguments(String) in line 586
      protection public
      35 lines of code
      1 parameters
      9 conditional paths
   function getNumberMethodArguments() in line 622
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNumberArguments(String) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getPackageName() in line 493
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable packageName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getSizeOfSurroundingTryBlock(int) in line 197
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSizeOfSurroundingTryBlock(String,int) in line 207
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable constantPool defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getSourceFile() in line 498
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getStringFromIndex(int) in line 139
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable constantPool defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getSuperclassName() in line 507
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable superclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getSurroundingCaughtExceptions(int) in line 160
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSurroundingCaughtExceptions(int,int) in line 164
      protection public
      26 lines of code
      2 parameters
      7 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable constantPool defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getSurroundingTryBlock(int) in line 214
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSurroundingTryBlock(String,int) in line 218
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable constantPool defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getThisClass() in line 521
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable thisClass defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getXClass() in line 442
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable thisClassInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getXField() in line 461
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable thisFieldInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getXMethod() in line 453
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable thisMethodInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function isVisitMethodsInCallOrder() in line 347
      3 lines of code
      0 parameters
      1 conditional paths
   function setupVisitorForClass(JavaClass) in line 399
      protection public
      22 lines of code
      1 parameters
      3 conditional paths
      uses variable constantPool defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable thisClass defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStringFromIndex(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedClassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable packageName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sourceFile defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedSuperclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable superclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable thisClassInfo defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function setVisitMethodsInCallOrder(boolean) in line 351
      3 lines of code
      1 parameters
      1 conditional paths
   function shouldVisit(JavaClass) in line 340
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 706
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitAfter(Code) in line 248
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitAfter(JavaClass) in line 337
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitAnnotation(Annotations) in line 723
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visitAnnotationDefault(AnnotationDefault) in line 736
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visitAnnotationEntry(AnnotationEntry) in line 749
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visitCode(Code) in line 227
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function visitAfter(Code) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitConstantPool(ConstantPool) in line 253
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function visitEnclosingMethod(EnclosingMethod) in line 762
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visitingField() in line 552
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitingMethod() in line 545
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitInnerClasses(InnerClasses) in line 329
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function visitJavaClass(JavaClass) in line 360
      protection public
      38 lines of code
      1 parameters
      9 conditional paths
      uses function setupVisitorForClass(JavaClass) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function shouldVisit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable constantPool defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function doVisitField(Field) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassAnalysis(Class< E >,@Nonnull ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getMethodsInCallOrder() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function doVisitMethod(Method) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodVisitOrder(JavaClass) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function visitAfter(Code) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitLineNumberTable(LineNumberTable) in line 423
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function visitLocalVariableTable(LocalVariableTable) in line 432
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function visitParameterAnnotation(ParameterAnnotations) in line 775
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitStackMapTable(StackMapTable) in line 786
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visitStackMapTableEntry(StackMapTableEntry) in line 799
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable className in line 96
   variable code in line 137
   variable constantPool in line 86
   variable dottedClassName in line 98
   variable dottedFieldSig in line 132
   variable dottedMethodSig in line 113
   variable dottedSuperclassName in line 106
   variable field in line 122
   variable fieldIsStatic in line 134
   variable fieldName in line 128
   variable fieldSig in line 130
   variable fullyQualifiedFieldName in line 126
   variable fullyQualifiedMethodName in line 119
   variable method in line 115
   variable methodName in line 117
   variable methodSig in line 111
   variable packageName in line 100
   variable sourceFile in line 102
   variable superclassName in line 104
   variable thisClass in line 88
   variable thisClassInfo in line 90
   variable thisFieldInfo in line 94
   variable thisMethodInfo in line 92
   variable visitingField in line 124
   variable visitingMethod in line 109
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/visitclass/PrintClass.java
module edu::umd::cs::findbugs::visitclass::PrintClass
   function main(String) in line 73
      protection public
      66 lines of code
      1 parameters
      21 conditional paths
      uses function printClass(ClassParser) defined in edu::umd::cs::findbugs::visitclass::PrintClass
   function printClass(ClassParser) in line 141
      28 lines of code
      1 parameters
      7 conditional paths
      uses function printCode(Method[]) defined in edu::umd::cs::findbugs::visitclass::PrintClass
   function printCode(Method[]) in line 173
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
module edu::umd::cs::findbugs::visitclass::PrintClass::ZipEntryComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(ZipEntry,ZipEntry) in line 47
      protection public
      20 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/WarningComparator.java
module edu::umd::cs::findbugs::WarningComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(BugInstance,BugInstance) in line 35
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function setClassNameRewriter(ClassNameRewriter) in line 32
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/WarningSuppressor.java
module edu::umd::cs::findbugs::WarningSuppressor
   inherits from edu::umd::cs::findbugs::filter::Matcher
   abstract class
   function match(BugInstance) in line 22
      protection public
      18 lines of code
      1 parameters
      4 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
   function writeXML(XMLOutput,boolean) in line 42
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function WarningSuppressor(String) in line 14
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/BackdateHistoryUsingSource.java
module edu::umd::cs::findbugs::workflow::BackdateHistoryUsingSource
   function main(String[]) in line 44
      protection public
      49 lines of code
      1 parameters
      9 conditional paths
      uses variable USAGE defined in edu::umd::cs::findbugs::workflow::BackdateHistoryUsingSource
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollection
      uses function isSourceFileKnown() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function hasSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getLastModified() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function bugsPopulated() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getSigninState() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable SIGNED_IN defined in edu::umd::cs::findbugs::cloud::Cloud::SigninState
      uses variable NO_SIGNIN_REQUIRED defined in edu::umd::cs::findbugs::cloud::Cloud::SigninState
      uses function signIn() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function waitUntilIssueDataDownloaded() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function waitUntilNewIssuesUploaded() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function shutdown() defined in edu::umd::cs::findbugs::cloud::Cloud
   variable USAGE in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/Churn.java
module edu::umd::cs::findbugs::workflow::Churn
   function dump(PrintStream) in line 151
      protection public
      49 lines of code
      1 parameters
      10 conditional paths
   function execute() in line 109
      protection public
      41 lines of code
      0 parameters
      8 conditional paths
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::BugCollection
      uses function iterator() defined in edu::umd::cs::findbugs::BugCollection
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
   function main(String[]) in line 222
      protection public
      27 lines of code
      1 parameters
      4 conditional paths
      uses function Churn() defined in edu::umd::cs::findbugs::workflow::Churn
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setBugCollection(BugCollection) defined in edu::umd::cs::findbugs::workflow::Churn
      uses function execute() defined in edu::umd::cs::findbugs::workflow::Churn
      uses function dump(PrintStream) defined in edu::umd::cs::findbugs::workflow::Churn
   function setBugCollection(BugCollection) in line 51
      protection public
      3 lines of code
      1 parameters
      8 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategoryAbbrev() defined in edu::umd::cs::findbugs::BugInstance
      uses function isDead() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
   function Churn() in line 44
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function Churn(BugCollection) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::Churn::Data
module edu::umd::cs::findbugs::workflow::Churn::ChurnCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 208
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 213
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/CloudReport.java
module edu::umd::cs::findbugs::workflow::CloudReport
   function main(String[]) in line 45
      protection public
      21 lines of code
      1 parameters
      3 conditional paths
      uses variable USAGE defined in edu::umd::cs::findbugs::workflow::CloudReport
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function getCloud() defined in edu::umd::cs::findbugs::BugCollection
      uses function waitUntilIssueDataDownloaded() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function printCloudSummary(PrintWriter,Iterable< BugInstance >,String[]) defined in edu::umd::cs::findbugs::cloud::Cloud
   variable USAGE in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/CloudSyncAndReport.java
module edu::umd::cs::findbugs::workflow::CloudSyncAndReport
   function load() in line 137
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable analysisFile defined in edu::umd::cs::findbugs::workflow::CloudSyncAndReport::CSPoptions
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable cloudId defined in edu::umd::cs::findbugs::workflow::CloudSyncAndReport::CSPoptions
      uses function getProject() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCloudId() defined in edu::umd::cs::findbugs::Project
      uses function setCloudId(@Nullable String) defined in edu::umd::cs::findbugs::Project
      uses function reinitializeCloud() defined in edu::umd::cs::findbugs::SortedBugCollection
   function main(String[]) in line 102
      protection public
      22 lines of code
      1 parameters
      2 conditional paths
      uses variable analysisFile defined in edu::umd::cs::findbugs::workflow::CloudSyncAndReport::CSPoptions
      uses function CloudSyncAndReport(CSPoptions) defined in edu::umd::cs::findbugs::workflow::CloudSyncAndReport
      uses function load() defined in edu::umd::cs::findbugs::workflow::CloudSyncAndReport
      uses function sync() defined in edu::umd::cs::findbugs::workflow::CloudSyncAndReport
      uses function report(PrintWriter) defined in edu::umd::cs::findbugs::workflow::CloudSyncAndReport
      uses function shutdown() defined in edu::umd::cs::findbugs::workflow::CloudSyncAndReport
   function report(PrintWriter) in line 160
      protection public
      54 lines of code
      1 parameters
      8 conditional paths
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCloud() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setMode(Mode) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable COMMUNAL defined in edu::umd::cs::findbugs::cloud::Cloud::Mode
      uses function getProject() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProjectName() defined in edu::umd::cs::findbugs::Project
      uses function getTimestamp() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getAnalysisTimestamp() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable ageInHours defined in edu::umd::cs::findbugs::workflow::CloudSyncAndReport::CSPoptions
      uses function getFirstSeen(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable cloudSummary defined in edu::umd::cs::findbugs::workflow::CloudSyncAndReport::CSPoptions
      uses function supportsCloudSummaries() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function printCloudSummary(PrintWriter,Iterable< BugInstance >,String[]) defined in edu::umd::cs::findbugs::cloud::Cloud
   function shutdown() in line 215
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getCloud() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function shutdown() defined in edu::umd::cs::findbugs::cloud::Cloud
   function sync() in line 149
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getCloud() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function initiateCommunication() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function waitUntilIssueDataDownloaded() defined in edu::umd::cs::findbugs::cloud::Cloud
   function CloudSyncAndReport(CSPoptions) in line 132
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::CloudSyncAndReport::CSPoptions
   variable ageInHours in line 54
      protection public
   variable analysisFile in line 48
      protection public
   variable cloudId in line 52
      protection public
   variable cloudSummary in line 50
      protection public
module edu::umd::cs::findbugs::workflow::CloudSyncAndReport::CSRCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 76
      4 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 89
      11 lines of code
      2 parameters
      1 conditional paths
   function CSRCommandLine(CSPoptions) in line 61
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::CloudSyncAndReport::Stats
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/CopyBuggySource.java
module edu::umd::cs::findbugs::workflow::CopyBuggySource
   function close(InputStream) in line 237
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function close(OutputStream) in line 247
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
   function copySourceFile(String,SourceFile) in line 125
      32 lines of code
      2 parameters
      7 conditional paths
      uses function getOutputStream(String,long) defined in edu::umd::cs::findbugs::workflow::CopyBuggySource
      uses function close(InputStream) defined in edu::umd::cs::findbugs::workflow::CopyBuggySource
   function copySourceForAnnotation(BugAnnotation) in line 158
      33 lines of code
      1 parameters
      8 conditional paths
      uses function isUnknown() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function copySourceFile(String,SourceFile) defined in edu::umd::cs::findbugs::workflow::CopyBuggySource
   function execute() in line 192
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function copySourceForAnnotation(BugAnnotation) defined in edu::umd::cs::findbugs::workflow::CopyBuggySource
   function getOutputStream(String,long) in line 207
      29 lines of code
      2 parameters
      5 conditional paths
   function main(String[]) in line 78
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable USAGE defined in edu::umd::cs::findbugs::workflow::CopyBuggySource
      uses function CopyBuggySource(String[]) defined in edu::umd::cs::findbugs::workflow::CopyBuggySource
   function CopyBuggySource(String[]) in line 101
      protection public
      22 lines of code
      1 parameters
      4 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProject() defined in edu::umd::cs::findbugs::SortedBugCollection
   variable USAGE in line 75
module edu::umd::cs::findbugs::workflow::CopyBuggySource::SrcKind
   function get(File) in line 55
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   variable DIR in line 54
      protection public
   variable ZIP in line 54
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/CountByPackagePrefix.java
module edu::umd::cs::findbugs::workflow::CountByPackagePrefix
   function main(String[]) in line 47
      protection public
      58 lines of code
      1 parameters
      11 conditional paths
      uses variable USAGE defined in edu::umd::cs::findbugs::workflow::CountByPackagePrefix
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
   variable USAGE in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/CountClassVersions.java
module edu::umd::cs::findbugs::workflow::CountClassVersions
   function main(String) in line 100
      protection public
      72 lines of code
      1 parameters
      15 conditional paths
      uses function readFrom(Reader) defined in edu::umd::cs::findbugs::workflow::CountClassVersions
      uses function readFromStandardInput() defined in edu::umd::cs::findbugs::workflow::CountClassVersions
      uses function put(K1,K2,V) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
      uses function keySet() defined in edu::umd::cs::findbugs::util::DualKeyHashMap
      uses function get(K1,K2) defined in edu::umd::cs::findbugs::util::DualKeyHashMap
   function readFrom(Reader) in line 54
      protection public
      11 lines of code
      1 parameters
      6 conditional paths
   function readFromStandardInput() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function readFrom(Reader) defined in edu::umd::cs::findbugs::workflow::CountClassVersions
module edu::umd::cs::findbugs::workflow::CountClassVersions::CountClassVersionsCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 81
      3 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 86
      11 lines of code
      2 parameters
      1 conditional paths
   variable inputFileList in line 69
      protection public
   variable prefix in line 67
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/DefectDensity.java
module edu::umd::cs::findbugs::workflow::DefectDensity
   function density(int,int) in line 43
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
   function main(String) in line 51
      protection public
      40 lines of code
      1 parameters
      9 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function printRow(Object...) defined in edu::umd::cs::findbugs::workflow::DefectDensity
      uses function density(int,int) defined in edu::umd::cs::findbugs::workflow::DefectDensity
      uses function getTotalBugs() defined in edu::umd::cs::findbugs::ProjectStats
      uses function getCodeSize() defined in edu::umd::cs::findbugs::ProjectStats
      uses function getCurrentAppVersion() defined in edu::umd::cs::findbugs::BugCollection
      uses function getReleaseName() defined in edu::umd::cs::findbugs::AppVersion
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
   function printRow(Object...) in line 34
      8 lines of code
      1 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/FB.java
module edu::umd::cs::findbugs::workflow::FB
   function main(String) in line 31
      protection public
      31 lines of code
      1 parameters
      6 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/FileBugHash.java
module edu::umd::cs::findbugs::workflow::FileBugHash
   function compute(BugCollection) in line 153
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBugCount(String) in line 117
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getHash(String) in line 104
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
   function getSize(String) in line 125
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getSourceFiles() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function main(String) in line 133
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function compute(BugCollection) defined in edu::umd::cs::findbugs::workflow::FileBugHash
      uses function getSourceFiles() defined in edu::umd::cs::findbugs::workflow::FileBugHash
      uses function getHash(String) defined in edu::umd::cs::findbugs::workflow::FileBugHash
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/ListBugDatabaseInfo.java
module edu::umd::cs::findbugs::workflow::ListBugDatabaseInfo
   function listVersion(PrintWriter,@CheckForNull String,boolean) in line 92
      41 lines of code
      3 parameters
      4 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCurrentAppVersion() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getReleaseName() defined in edu::umd::cs::findbugs::AppVersion
      uses function getTimestamp() defined in edu::umd::cs::findbugs::AppVersion
      uses function getNumClasses() defined in edu::umd::cs::findbugs::AppVersion
      uses function getCodeSize() defined in edu::umd::cs::findbugs::AppVersion
      uses function getErrors() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getTotalBugs() defined in edu::umd::cs::findbugs::ProjectStats
      uses function getBugsOfPriority(int) defined in edu::umd::cs::findbugs::ProjectStats
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function main(String[]) in line 73
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses variable USAGE defined in edu::umd::cs::findbugs::workflow::ListBugDatabaseInfo
      uses function listVersion(PrintWriter,@CheckForNull String,boolean) defined in edu::umd::cs::findbugs::workflow::ListBugDatabaseInfo
   variable USAGE in line 46
module edu::umd::cs::findbugs::workflow::ListBugDatabaseInfo::ListBugDatabaseInfoCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 58
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 67
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/ListErrors.java
module edu::umd::cs::findbugs::workflow::ListErrors
   function main(String[]) in line 32
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getErrors() defined in edu::umd::cs::findbugs::SortedBugCollection
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/MergeSummarizeAndView.java
module edu::umd::cs::findbugs::workflow::MergeSummarizeAndView
   function execute() in line 214
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function load() defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView
      uses function shutdown() defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView
   function getAllBugs() in line 243
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHarmless() in line 250
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLowConfidence() in line 258
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getScaryBugs() in line 236
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTooOld() in line 266
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isConnectedToCloud() in line 222
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function load() in line 277
      77 lines of code
      0 parameters
      16 conditional paths
      uses variable workingDirList defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses variable analysisFiles defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses variable srcDirList defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable maxConsideredRank defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses variable cloudId defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses function getProject() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setCloudId(@Nullable String) defined in edu::umd::cs::findbugs::Project
      uses function reinitializeCloud() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCloud() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function waitUntilIssueDataDownloaded() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function isConnectedToCloud() defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView
      uses function getMode() defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function setMode(Mode) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable COMMUNAL defined in edu::umd::cs::findbugs::cloud::Cloud::Mode
      uses variable maxAge defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses variable baselineDate defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses function createEmptyCollectionWithMetadata() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable VISIBLE_RANK_MAX defined in edu::umd::cs::findbugs::BugRanker
      uses function getConsensusDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function score() defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getFirstSeen(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable maxRank defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
   function main(String[]) in line 167
      protection public
      24 lines of code
      1 parameters
      4 conditional paths
      uses variable analysisFiles defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses function MergeSummarizeAndView(MSVOptions) defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView
      uses function load() defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView
      uses function report() defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView
      uses function shutdown() defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView
      uses function isConnectedToCloud() defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView
   function numScaryBugs() in line 229
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
   function report() in line 355
      46 lines of code
      0 parameters
      12 conditional paths
      uses function getCloud() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable alwaysShowGui defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses variable workingDirList defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses variable srcDirList defined in edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
      uses function addWorkingDir(String) defined in edu::umd::cs::findbugs::Project
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
      uses function setGuiCallback(IGuiCallback) defined in edu::umd::cs::findbugs::Project
   function shutdown() in line 270
      6 lines of code
      0 parameters
      2 conditional paths
      uses function shutdown() defined in edu::umd::cs::findbugs::cloud::Cloud
   function union(SortedBugCollection,SortedBugCollection) in line 149
      protection public
      17 lines of code
      2 parameters
      2 conditional paths
      uses function duplicate() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function addStats(ProjectStats) defined in edu::umd::cs::findbugs::ProjectStats
      uses function getProject() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function add(Project) defined in edu::umd::cs::findbugs::Project
   function MergeSummarizeAndView(MSVOptions) in line 210
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVOptions
   variable alwaysShowGui in line 71
      protection public
   variable analysisFiles in line 61
      protection public
   variable baselineDate in line 74
      protection public
   variable cloudId in line 76
      protection public
   variable maxAge in line 69
      protection public
   variable maxConsideredRank in line 67
      protection public
   variable maxRank in line 65
      protection public
   variable srcDirList in line 63
      protection public
   variable workingDirList in line 59
      protection public
module edu::umd::cs::findbugs::workflow::MergeSummarizeAndView::MSVCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 104
      7 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 120
      21 lines of code
      2 parameters
      1 conditional paths
   function MSVCommandLine(MSVOptions) in line 83
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/MineBugHistory.java
module edu::umd::cs::findbugs::workflow::MineBugHistory
   function dump(PrintStream) in line 187
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function dumpXml(PrintStream) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function dumpNoTabs(PrintStream) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function dumpSummary(PrintStream) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function dumpOriginal(PrintStream) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
   function dumpNoTabs(PrintStream) in line 305
      protection public
      51 lines of code
      1 parameters
      4 conditional paths
      uses function print(int,boolean,PrintStream,Object) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses variable WIDTH defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function getReleaseName() defined in edu::umd::cs::findbugs::AppVersion
      uses function getTimestamp() defined in edu::umd::cs::findbugs::AppVersion
      uses function getNumClasses() defined in edu::umd::cs::findbugs::AppVersion
      uses function getCodeSize() defined in edu::umd::cs::findbugs::AppVersion
   function dumpOriginal(PrintStream) in line 234
      protection public
      31 lines of code
      1 parameters
      5 conditional paths
      uses function getReleaseName() defined in edu::umd::cs::findbugs::AppVersion
      uses function getTimestamp() defined in edu::umd::cs::findbugs::AppVersion
      uses function getNumClasses() defined in edu::umd::cs::findbugs::AppVersion
      uses function getCodeSize() defined in edu::umd::cs::findbugs::AppVersion
   function dumpSummary(PrintStream) in line 199
      protection public
      33 lines of code
      1 parameters
      7 conditional paths
      uses variable WIDTH defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function getErrors() defined in edu::umd::cs::findbugs::SortedBugCollection
   function dumpXml(PrintStream) in line 358
      protection public
      47 lines of code
      1 parameters
      5 conditional paths
      uses function getReleaseName() defined in edu::umd::cs::findbugs::AppVersion
      uses function getTimestamp() defined in edu::umd::cs::findbugs::AppVersion
   function execute() in line 146
      protection public
      40 lines of code
      0 parameters
      8 conditional paths
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function appVersionIterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::AppVersion
      uses function getCurrentAppVersion() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function iterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function isDead() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getKey(boolean,boolean) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function isRemovedByChangeOfPersistingClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function isIntroducedByChangeOfExistingClass() defined in edu::umd::cs::findbugs::BugInstance
   function getKey(boolean,boolean) in line 417
      8 lines of code
      2 parameters
      6 conditional paths
      uses function setFormatDates(boolean) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function setNoTabs() defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function setXml() defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function setSummary() defined in edu::umd::cs::findbugs::workflow::MineBugHistory
   function main(String[]) in line 457
      protection public
      30 lines of code
      1 parameters
      4 conditional paths
      uses function MineBugHistory() defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setBugCollection(SortedBugCollection) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function execute() defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function dump(PrintStream) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
   function pad(int,PrintStream) in line 267
      5 lines of code
      2 parameters
      2 conditional paths
   function print(int,boolean,PrintStream,Object) in line 285
      11 lines of code
      4 parameters
      3 conditional paths
      uses function pad(int,PrintStream) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
   function setBugCollection(SortedBugCollection) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFormatDates(boolean) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNoTabs() in line 128
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function setSummary() in line 140
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function setXml() in line 134
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function MineBugHistory() in line 113
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function MineBugHistory(SortedBugCollection) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable WIDTH in line 51
module edu::umd::cs::findbugs::workflow::MineBugHistory::Version
   function getSequence() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::MineBugHistory::MineBugHistoryCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 436
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 451
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/ObfuscateBugs.java
module edu::umd::cs::findbugs::workflow::ObfuscateBugs
   function execute() in line 46
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses function countBug(BugInstance) defined in edu::umd::cs::findbugs::ProjectPackagePrefixes
      uses function report() defined in edu::umd::cs::findbugs::ProjectPackagePrefixes
   function main(String[]) in line 78
      protection public
      35 lines of code
      1 parameters
      4 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function createEmptyCollectionWithMetadata() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProject() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getSourceDirList() defined in edu::umd::cs::findbugs::Project
      uses function getFileList() defined in edu::umd::cs::findbugs::Project
      uses function getAuxClasspathEntryList() defined in edu::umd::cs::findbugs::Project
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function clearMissingClasses() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function clearErrors() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(OutputStream) defined in edu::umd::cs::findbugs::SortedBugCollection
   function setBugCollection(BugCollection) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ObfuscateBugs() in line 35
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function ObfuscateBugs(BugCollection) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::ObfuscateBugs::CommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 60
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 72
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/PrintAppVersion.java
module edu::umd::cs::findbugs::workflow::PrintAppVersion
   function main(String[]) in line 31
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCurrentAppVersion() defined in edu::umd::cs::findbugs::SortedBugCollection
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/RebornIssues.java
module edu::umd::cs::findbugs::workflow::RebornIssues
   function execute() in line 57
      protection public
      47 lines of code
      0 parameters
      13 conditional paths
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
   function main(String[]) in line 118
      protection public
      19 lines of code
      1 parameters
      2 conditional paths
      uses function RebornIssues() defined in edu::umd::cs::findbugs::workflow::RebornIssues
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setBugCollection(BugCollection) defined in edu::umd::cs::findbugs::workflow::RebornIssues
      uses function execute() defined in edu::umd::cs::findbugs::workflow::RebornIssues
   function setBugCollection(BugCollection) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function RebornIssues() in line 46
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function RebornIssues(BugCollection) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::RebornIssues::CommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 108
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 113
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/RecursiveSearchForJavaFiles.java
module edu::umd::cs::findbugs::workflow::RecursiveSearchForJavaFiles
   function main(String) in line 29
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function search(File) defined in edu::umd::cs::findbugs::workflow::RecursiveSearchForJavaFiles
   function search(File) in line 35
      protection public
      24 lines of code
      1 parameters
      6 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/RejarClassesForAnalysis.java
module edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
   function advanceAuxilaryOut() in line 642
      4 lines of code
      0 parameters
      8 conditional paths
      uses function createZipFile(String) defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
   function copyEntry(ZipFile,ZipEntry,boolean,ZipOutputStream,boolean,ZipOutputStream) in line 617
      24 lines of code
      6 parameters
      7 conditional paths
   function createZipFile(String) in line 593
      4 lines of code
      1 parameters
      1 conditional paths
   function embeddedNameMismatch(ZipFile,ZipEntry) in line 599
      17 lines of code
      2 parameters
      3 conditional paths
   function exclude(String) in line 311
      11 lines of code
      1 parameters
      3 conditional paths
   function execute() in line 324
      protection public
      268 lines of code
      0 parameters
      49 conditional paths
      uses function readFrom(Collection< String >,@WillClose Reader) defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
      uses function readFromStandardInput(Collection< String >) defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
      uses function exclude(String) defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
      uses function embeddedNameMismatch(ZipFile,ZipEntry) defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
      uses function createZipFile(String) defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
      uses function getZipOutputFile(String) defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
      uses function newZipEntry(ZipEntry) defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
      uses function advanceAuxilaryOut() defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
      uses function copyEntry(ZipFile,ZipEntry,boolean,ZipOutputStream,boolean,ZipOutputStream) defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
   function getZipOutputFile(String) in line 230
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
   function main(String) in line 296
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function RejarClassesForAnalysis(RejarClassesForAnalysisCommandLine,int,String[]) defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
      uses function execute() defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
   function newZipEntry(ZipEntry) in line 686
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function readFrom(Collection< String >,@WillClose Reader) in line 244
      protection public
      12 lines of code
      2 parameters
      5 conditional paths
   function readFromStandardInput(Collection< String >) in line 223
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function readFrom(Collection< String >,@WillClose Reader) defined in edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis
   function RejarClassesForAnalysis(RejarClassesForAnalysisCommandLine,int,String[]) in line 217
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis::RejarClassesForAnalysisCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 166
      9 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 184
      21 lines of code
      2 parameters
      1 conditional paths
   variable auxFileList in line 131
      protection public
   variable inputFileList in line 129
      protection public
module edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis::RejarClassesForAnalysisCommandLine::PatternMatcher
   function matches(String) in line 77
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis::RejarClassesForAnalysisCommandLine::PrefixMatcher
   function matches(String) in line 99
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function matchesEverything() in line 109
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis::ClassFileNameMismatch
   inherits from java::io::IOException
module edu::umd::cs::findbugs::workflow::RejarClassesForAnalysis::ZipElementHandler
   function handle(ZipFile,ZipEntry) in line 699
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/SetBugDatabaseInfo.java
module edu::umd::cs::findbugs::workflow::SetBugDatabaseInfo
   function main(String[]) in line 167
      protection public
      150 lines of code
      1 parameters
      35 conditional paths
      uses variable USAGE defined in edu::umd::cs::findbugs::workflow::SetBugDatabaseInfo
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProject() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setProjectName(String) defined in edu::umd::cs::findbugs::Project
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setWithMessages(boolean) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setSuppressionFilter(@Nonnull Filter) defined in edu::umd::cs::findbugs::Project
      uses function getSourceDirList() defined in edu::umd::cs::findbugs::Project
      uses function getFileList() defined in edu::umd::cs::findbugs::Project
      uses function getAuxClasspathEntryList() defined in edu::umd::cs::findbugs::Project
      uses function setCloudId(@Nullable String) defined in edu::umd::cs::findbugs::Project
      uses function getCloudProperties() defined in edu::umd::cs::findbugs::Project
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function clearMissingClasses() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getAppVersionFromSequenceNumber(long) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getReleaseName() defined in edu::umd::cs::findbugs::AppVersion
      uses function getTimestamp() defined in edu::umd::cs::findbugs::AppVersion
      uses function trimAppVersions(long) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function clearCloud() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(OutputStream) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   variable USAGE in line 54
module edu::umd::cs::findbugs::workflow::SetBugDatabaseInfo::SetInfoCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 111
      20 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 133
      31 lines of code
      2 parameters
      1 conditional paths
   variable searchSourcePaths in line 87
      protection public
   variable sourcePaths in line 85
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/SourceSearcher.java
module edu::umd::cs::findbugs::workflow::SourceSearcher
   function findSource(SourceLineAnnotation) in line 44
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFinder defined in edu::umd::cs::findbugs::workflow::SourceSearcher
      uses function hasSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
   function findSource0(SourceLineAnnotation) in line 60
      protection public
      22 lines of code
      1 parameters
      5 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFinder defined in edu::umd::cs::findbugs::workflow::SourceSearcher
      uses function openSource(String,String) defined in edu::umd::cs::findbugs::ba::SourceFinder
   function SourceSearcher(Project) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceFinder defined in edu::umd::cs::findbugs::workflow::SourceSearcher
   variable sourceFinder in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/TreemapVisualization.java
module edu::umd::cs::findbugs::workflow::TreemapVisualization
   function addInteriorPackages(String) in line 44
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function superpackage(String) defined in edu::umd::cs::findbugs::workflow::TreemapVisualization
   function cleanCode(String,int,int) in line 65
      protection public
      13 lines of code
      3 parameters
      3 conditional paths
      uses function superpackage(String) defined in edu::umd::cs::findbugs::workflow::TreemapVisualization
      uses function add(E) defined in edu::umd::cs::findbugs::util::Bag
   function generateTreeMap(BugCollection) in line 79
      protection public
      35 lines of code
      1 parameters
      9 conditional paths
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function addInteriorPackages(String) defined in edu::umd::cs::findbugs::workflow::TreemapVisualization
      uses function cleanCode(String,int,int) defined in edu::umd::cs::findbugs::workflow::TreemapVisualization
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isInteriorPackage(String) defined in edu::umd::cs::findbugs::workflow::TreemapVisualization
      uses function getCount(E) defined in edu::umd::cs::findbugs::util::Bag
   function isInteriorPackage(String) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 115
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function generateTreeMap(BugCollection) defined in edu::umd::cs::findbugs::workflow::TreemapVisualization
   function superpackage(String) in line 52
      8 lines of code
      1 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/UnionResults.java
module edu::umd::cs::findbugs::workflow::UnionResults
   function main(String[]) in line 117
      protection public
      41 lines of code
      1 parameters
      6 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function createEmptyCollectionWithMetadata() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function merge(HashSet< String >,SortedBugCollection,SortedBugCollection) defined in edu::umd::cs::findbugs::workflow::UnionResults
      uses function setWithMessages(boolean) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(OutputStream) defined in edu::umd::cs::findbugs::SortedBugCollection
   function merge(HashSet< String >,SortedBugCollection,SortedBugCollection) in line 95
      protection public
      21 lines of code
      3 parameters
      4 conditional paths
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function addStats(ProjectStats) defined in edu::umd::cs::findbugs::ProjectStats
      uses function getProject() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function add(Project) defined in edu::umd::cs::findbugs::Project
      uses function getErrors() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function addError(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function union(SortedBugCollection,SortedBugCollection) in line 90
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function duplicate() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function merge(HashSet< String >,SortedBugCollection,SortedBugCollection) defined in edu::umd::cs::findbugs::workflow::UnionResults
module edu::umd::cs::findbugs::workflow::UnionResults::UnionResultsCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 59
      7 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 75
      7 lines of code
      2 parameters
      1 conditional paths
   variable outputFile in line 42
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/workflow/Update.java
module edu::umd::cs::findbugs::workflow::Update
   function discardUnwantedBugs(BugCollection) in line 351
      11 lines of code
      1 parameters
      4 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::BugCollection
   function doit(String[]) in line 423
      protection public
      142 lines of code
      1 parameters
      27 conditional paths
      uses variable USAGE defined in edu::umd::cs::findbugs::workflow::Update
      uses function getFilePathParts(String) defined in edu::umd::cs::findbugs::workflow::Update
      uses function lengthCommonPrefix(String[],String[]) defined in edu::umd::cs::findbugs::workflow::Update
      uses function readXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function getReleaseName() defined in edu::umd::cs::findbugs::BugCollection
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function getAnalysisTimestamp() defined in edu::umd::cs::findbugs::BugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses function discardUnwantedBugs(BugCollection) defined in edu::umd::cs::findbugs::workflow::Update
      uses function mergeCollections(BugCollection,BugCollection,boolean,boolean) defined in edu::umd::cs::findbugs::workflow::Update
      uses function setWithMessages(boolean) defined in edu::umd::cs::findbugs::BugCollection
      uses function writeXML(String) defined in edu::umd::cs::findbugs::BugCollection
   function getFilePathParts(String) in line 413
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function lengthCommonPrefix(String[],String[]) in line 566
      9 lines of code
      2 parameters
      3 conditional paths
   function main(String[]) in line 418
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function doit(String[]) defined in edu::umd::cs::findbugs::workflow::Update
   function matchBugs(BugCollection,BugCollection) in line 374
      36 lines of code
      2 parameters
      6 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::SortedBugCollection::BugInstanceComparator
      uses variable mapFromNewToOldBug defined in edu::umd::cs::findbugs::workflow::Update
      uses variable matchedOldBugs defined in edu::umd::cs::findbugs::workflow::Update
      uses function execute() defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses function isEmpty() defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses function setClassNameRewriter(ClassNameRewriter) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
      uses function setComparePriorities(boolean) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
      uses function setExactBugPatternMatch(boolean) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   function matchBugs(Comparator< BugInstance >,BugCollection,BugCollection) in line 598
      5 lines of code
      3 parameters
      1 conditional paths
      uses function matchBugs(BugCollection,BugCollection) defined in edu::umd::cs::findbugs::workflow::Update
   function matchBugs(Comparator< BugInstance >,BugCollection,BugCollection,MatchOldBugs) in line 604
      57 lines of code
      4 parameters
      12 conditional paths
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses variable matchedOldBugs defined in edu::umd::cs::findbugs::workflow::Update
      uses function getCurrentAppVersion() defined in edu::umd::cs::findbugs::BugCollection
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::AppVersion
      uses variable mapFromNewToOldBug defined in edu::umd::cs::findbugs::workflow::Update
      uses function isDead() defined in edu::umd::cs::findbugs::BugInstance
      uses function isRemovedByChangeOfPersistingClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses variable resurrected defined in edu::umd::cs::findbugs::workflow::Update
   function mergeBugHistory(BugInstance,BugInstance) in line 576
      6 lines of code
      2 parameters
      4 conditional paths
      uses function setFirstVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function setIntroducedByChangeOfExistingClass(boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function isIntroducedByChangeOfExistingClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function isDead() defined in edu::umd::cs::findbugs::BugInstance
      uses function isRemovedByChangeOfPersistingClass() defined in edu::umd::cs::findbugs::BugInstance
   function mergeCollections(BugCollection,BugCollection,boolean,boolean) in line 198
      protection public
      149 lines of code
      4 parameters
      19 conditional paths
      uses variable mapFromNewToOldBug defined in edu::umd::cs::findbugs::workflow::Update
      uses variable matchedOldBugs defined in edu::umd::cs::findbugs::workflow::Update
      uses function createEmptyCollectionWithMetadata() defined in edu::umd::cs::findbugs::BugCollection
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::BugCollection
      uses function clearAppVersions() defined in edu::umd::cs::findbugs::BugCollection
      uses function appVersionIterator() defined in edu::umd::cs::findbugs::BugCollection
      uses function addAppVersion(AppVersion) defined in edu::umd::cs::findbugs::BugCollection
      uses function clone() defined in edu::umd::cs::findbugs::AppVersion
      uses function getCurrentAppVersion() defined in edu::umd::cs::findbugs::BugCollection
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::AppVersion
      uses function getTimestamp() defined in edu::umd::cs::findbugs::AppVersion
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::AppVersion
      uses function getReleaseName() defined in edu::umd::cs::findbugs::AppVersion
      uses function setNumClasses(int) defined in edu::umd::cs::findbugs::AppVersion
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function getNumClasses() defined in edu::umd::cs::findbugs::ProjectStats
      uses function setCodeSize(int) defined in edu::umd::cs::findbugs::AppVersion
      uses function getCodeSize() defined in edu::umd::cs::findbugs::ProjectStats
      uses function setSequenceNumber(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function matchBugs(BugCollection,BugCollection) defined in edu::umd::cs::findbugs::workflow::Update
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses function clone() defined in edu::umd::cs::findbugs::BugInstance
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::BugCollection
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getSourceFileName() defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function setRemovedByChangeOfPersistingClass(boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function setLastVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses function isDead() defined in edu::umd::cs::findbugs::BugInstance
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function mergeBugHistory(BugInstance,BugInstance) defined in edu::umd::cs::findbugs::workflow::Update
      uses function getUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function merge(@CheckForNull BugDesignation) defined in edu::umd::cs::findbugs::BugDesignation
      uses function setUserDesignation(BugDesignation) defined in edu::umd::cs::findbugs::BugInstance
      uses function setFirstVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassStats(@DottedClassName String) defined in edu::umd::cs::findbugs::ProjectStats
      uses function setIntroducedByChangeOfExistingClass(boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
   function removeBaselineBugs(BugCollection,BugCollection) in line 184
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses function matchBugs(BugCollection,BugCollection) defined in edu::umd::cs::findbugs::workflow::Update
      uses variable instance defined in edu::umd::cs::findbugs::SortedBugCollection::BugInstanceComparator
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses variable matchedOldBugs defined in edu::umd::cs::findbugs::workflow::Update
   variable mapFromNewToOldBug in line 65
   variable matchedOldBugs in line 69
   variable resurrected in line 67
   variable USAGE in line 63
module edu::umd::cs::findbugs::workflow::Update::UpdateCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 112
      38 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 152
      12 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::Update::MatchOldBugs
   function match(BugInstance) in line 585
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   variable IF_CLASS_NOT_SEEN_UNTIL_NOW in line 584
      protection public
   variable IF_LIVE in line 584
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/XDocsBugReporter.java
module edu::umd::cs::findbugs::XDocsBugReporter
   inherits from edu::umd::cs::findbugs::TextUIBugReporter
   function doReportBug(BugInstance) in line 96
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function printBug(BugInstance) defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function notifyObservers(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function endDocument(Project) in line 130
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable root defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable ERRORS_ELEMENT_NAME defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable bugCollection defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function getErrors() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable ANALYSIS_ERROR_ELEMENT_NAME defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function missingClassIterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable MISSING_CLASS_ELEMENT_NAME defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable document defined in edu::umd::cs::findbugs::XDocsBugReporter
   function finish() in line 113
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function writeXML(Writer,Project) defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable project defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function logError(String) defined in edu::umd::cs::findbugs::XDocsBugReporter
   function getBugCollection() in line 222
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::XDocsBugReporter
   function logError(String) in line 80
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function addError(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function observeClass(ClassDescriptor) in line 76
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function printBug(BugInstance) in line 104
      7 lines of code
      1 parameters
      2 conditional paths
      uses function toElement(BugInstance) defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function logError(String) defined in edu::umd::cs::findbugs::XDocsBugReporter
   function reportMissingClass(ClassNotFoundException) in line 86
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function addMissingClass(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function toElement(BugInstance) in line 174
      protection public
      38 lines of code
      1 parameters
      6 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable root defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable FILE_ELEMENT_NAME defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function xmlEscape(String) defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function writeXML(Writer,Project) in line 123
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function endDocument(Project) defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable project defined in edu::umd::cs::findbugs::XDocsBugReporter
   function xmlEscape(String) in line 144
      29 lines of code
      1 parameters
      7 conditional paths
   function XDocsBugReporter(Project) in line 66
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable document defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable ROOT_ELEMENT_NAME defined in edu::umd::cs::findbugs::XDocsBugReporter
   variable ANALYSIS_ERROR_ELEMENT_NAME in line 56
   variable bugCollection in line 42
   variable document in line 46
   variable ELEMENT_NAME in line 62
   variable ERRORS_ELEMENT_NAME in line 54
   variable FILE_ELEMENT_NAME in line 64
   variable MISSING_CLASS_ELEMENT_NAME in line 58
   variable project in line 44
   variable PROJECT_ELEMENT_NAME in line 52
   variable root in line 48
   variable ROOT_ELEMENT_NAME in line 50
   variable SUMMARY_HTML_ELEMENT_NAME in line 60
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/xml/Dom4JXMLOutput.java
module edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   inherits from edu::umd::cs::findbugs::xml::XMLOutput
   function addAttribute(String,String) in line 93
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function beginDocument() in line 51
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function closeTag(String) in line 106
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function finish() in line 166
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function openCloseTag(String) in line 74
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function openTag(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
      uses function closeTag(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function openCloseTag(String,XMLAttributeList) in line 80
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function openTag(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
      uses function closeTag(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function openTag(String) in line 55
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function openTag(String,XMLAttributeList) in line 62
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
      uses function iterator() defined in edu::umd::cs::findbugs::xml::XMLAttributeList
   function startTag(String) in line 86
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function stopTag(boolean) in line 99
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function closeTag(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function write(XMLWriteable) in line 145
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::xml::XMLWriteable
   function writeCDATA(String) in line 117
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function writeCollection(Collection<?extends XMLWriteable >) in line 159
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function write(XMLWriteable) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function writeElementList(String,Collection< String >) in line 131
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function openTag(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
      uses function writeText(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
      uses function closeTag(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function writeText(String) in line 111
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function Dom4JXMLOutput(Branch) in line 45
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   variable stack in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/xml/MetaCharacterMap.java
module edu::umd::cs::findbugs::xml::MetaCharacterMap
   function addMeta(char,String) in line 53
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable metaCharacterSet defined in edu::umd::cs::findbugs::xml::MetaCharacterMap
      uses variable replacementMap defined in edu::umd::cs::findbugs::xml::MetaCharacterMap
   function MetaCharacterMap() in line 40
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable metaCharacterSet in line 33
   variable replacementMap in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/xml/OutputStreamXMLOutput.java
module edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   inherits from edu::umd::cs::findbugs::xml::XMLOutput
   function addAttribute(String,String) in line 140
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function beginDocument() in line 105
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable OPENING defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses function getStylesheetCode(String) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable stylesheet defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable newLine defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function closeTag(String) in line 177
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable nestingLevel defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable newLine defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses function indent() defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function emitTag(String,boolean) in line 161
      4 lines of code
      2 parameters
      1 conditional paths
      uses function startTag(String) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses function stopTag(boolean) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function emitTag(String,String,boolean) in line 166
      9 lines of code
      3 parameters
      2 conditional paths
      uses function startTag(String) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses function stopTag(boolean) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function finish() in line 207
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function flush() in line 202
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function getStylesheetCode(String) in line 42
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable stylesheet defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function indent() in line 211
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable newLine defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable nestingLevel defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function openCloseTag(String) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function emitTag(String,boolean) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function openCloseTag(String,XMLAttributeList) in line 128
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function emitTag(String,boolean) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function openTag(String) in line 113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function emitTag(String,boolean) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function openTag(String,XMLAttributeList) in line 118
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function emitTag(String,boolean) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function startTag(String) in line 133
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function indent() defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable nestingLevel defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function stopTag(boolean) in line 150
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable nestingLevel defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable newLine defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function writeCDATA(String) in line 192
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable newLine defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function writeText(String) in line 187
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function OutputStreamXMLOutput(@WillCloseWhenClosed OutputStream) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function OutputStreamXMLOutput(@WillCloseWhenClosed Writer) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function OutputStreamXMLOutput(@WillCloseWhenClosed OutputStream,String) in line 85
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable nestingLevel defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable newLine defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable stylesheet defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function OutputStreamXMLOutput(@WillCloseWhenClosed Writer,String) in line 98
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable nestingLevel defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable newLine defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable stylesheet defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   variable nestingLevel in line 51
   variable newLine in line 53
   variable OPENING in line 40
   variable out in line 49
   variable stylesheet in line 55
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/xml/QuoteMetaCharacters.java
module edu::umd::cs::findbugs::xml::QuoteMetaCharacters
   abstract class
   function emitLiteral(String) in line 82
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function findNextMeta(String,int) in line 84
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
   function process() in line 60
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses function findNextMeta(String,int) defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
      uses variable text defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
      uses function emitLiteral(String) defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
      uses variable map defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
   function QuoteMetaCharacters(@Nonnull String,@Nonnull MetaCharacterMap) in line 46
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable text defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
      uses variable map defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
   variable map in line 36
   variable text in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/xml/XMLAttributeList.java
module edu::umd::cs::findbugs::xml::XMLAttributeList
   function addAttribute(@Nonnull String,@Nonnull String) in line 75
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
      uses variable value defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
      uses variable nameValuePairList defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function NameValuePair(String,String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
   function addOptionalAttribute(@Nonnull String,@CheckForNull String) in line 95
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
      uses function addAttribute(@Nonnull String,@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable name defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
   function getQuotedAttributeValue(@Nonnull String) in line 134
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function iterator() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nameValuePairList defined in edu::umd::cs::findbugs::xml::XMLAttributeList
   function toString() in line 107
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses variable nameValuePairList defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getQuotedAttributeValue(@Nonnull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
   function XMLAttributeList() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable nameValuePairList in line 57
module edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
   function getName() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
   function getValue() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
   function NameValuePair(String,String) in line 42
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
      uses variable value defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
   variable name in line 38
   variable value in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/xml/XMLOutput.java
module edu::umd::cs::findbugs::xml::XMLOutput
   function addAttribute(String,String) in line 75
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function beginDocument() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function closeTag(String) in line 109
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function finish() in line 136
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function openCloseTag(String) in line 91
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function openCloseTag(String,XMLAttributeList) in line 101
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function openTag(String) in line 46
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function openTag(String,XMLAttributeList) in line 56
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function startTag(String) in line 65
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function stopTag(boolean) in line 83
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writeCDATA(String) in line 127
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writeText(String) in line 118
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/xml/XMLOutputUtil.java
module edu::umd::cs::findbugs::xml::XMLOutputUtil
   abstract class
   function writeCollection(XMLOutput,Collection<?extends XMLWriteable >) in line 109
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
   function writeElementList(XMLOutput,String,Iterable< String >) in line 44
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function writeElementList(XMLOutput,String,Iterator< String >) in line 58
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
   function writeFileList(XMLOutput,String,Iterable< File >) in line 77
      protection public
      5 lines of code
      3 parameters
      2 conditional paths
   function writeFileList(XMLOutput,String,Iterator< File >) in line 93
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/xml/XMLUtil.java
module edu::umd::cs::findbugs::xml::XMLUtil
   function selectNodes(Node,String) in line 32
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/xml/XMLWriteable.java
module edu::umd::cs::findbugs::xml::XMLWriteable
   function writeXML(XMLOutput) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/xml/XPathFind.java
module edu::umd::cs::findbugs::xml::XPathFind
   abstract class
   function find(String) in line 52
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::xml::XPathFind
      uses function match(Node) defined in edu::umd::cs::findbugs::xml::XPathFind
   function main(String[]) in line 61
      protection public
      34 lines of code
      1 parameters
      5 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::xml::XPathFind
      uses function XPathFind(Document) defined in edu::umd::cs::findbugs::xml::XPathFind
      uses function match(Node) defined in edu::umd::cs::findbugs::xml::XPathFind
      uses function find(String) defined in edu::umd::cs::findbugs::xml::XPathFind
   function match(Node) in line 59
      1 lines of code
      1 parameters
      1 conditional paths
   function XPathFind(Document) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::xml::XPathFind
   variable document in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/XMLBugReporter.java
module edu::umd::cs::findbugs::XMLBugReporter
   inherits from edu::umd::cs::findbugs::BugCollectionBugReporter
   function finish() in line 40
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function bugsPopulated() defined in edu::umd::cs::findbugs::BugCollection
      uses function writeXML(String) defined in edu::umd::cs::findbugs::BugCollection
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setAddMessages(boolean) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function setWithMessages(boolean) defined in edu::umd::cs::findbugs::BugCollection
   function setMinimalXML(boolean) in line 58
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function setMinimalXML(boolean) defined in edu::umd::cs::findbugs::BugCollection
   function XMLBugReporter(Project) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::BugCollectionBugReporter
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/java/edu/umd/cs/findbugs/XMLWriteableWithMessages.java
module edu::umd::cs::findbugs::XMLWriteableWithMessages
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   function writeXML(XMLOutput,boolean,boolean) in line 32
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/architecture/PackageDependenciesTest.java
module edu::umd::cs::findbugs::architecture::PackageDependenciesTest
   inherits from junit::framework::TestCase
   function assertPackageConstraint(String,String) in line 77
      8 lines of code
      2 parameters
      1 conditional paths
      uses variable engine defined in edu::umd::cs::findbugs::architecture::PackageDependenciesTest
   function setUp() in line 58
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable engine defined in edu::umd::cs::findbugs::architecture::PackageDependenciesTest
   function tearDown() in line 71
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable engine defined in edu::umd::cs::findbugs::architecture::PackageDependenciesTest
   function testGui2Dependencies() in line 36
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function assertPackageConstraint(String,String) defined in edu::umd::cs::findbugs::architecture::PackageDependenciesTest
   variable engine in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/ba/ch/Subtypes2Test.java
module edu::umd::cs::findbugs::ba::ch::Subtypes2Test
   inherits from edu::umd::cs::findbugs::FindBugsTestCase
   function getSubtypes2() in line 129
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function setUp() in line 98
      30 lines of code
      0 parameters
      1 conditional paths
   function testArrayFirstCommonSuperclass() in line 337
      protection public
      27 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function getFirstCommonSuperclass(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testArrayFirstCommonSuperclassTricky() in line 365
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function getFirstCommonSuperclass(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testArrayOfPrimitiveIsSubtypeOfObject() in line 261
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testArrays() in line 194
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testArraysWrongDimension() in line 227
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testEasyFirstCommonSuperclass() in line 295
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function getFirstCommonSuperclass(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testIdentitySubtype() in line 165
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testInterfaceFirstCommonSuperclass() in line 317
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function getFirstCommonSuperclass(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testInterfaceIsSubtypeOfObject() in line 183
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testInterfaces() in line 383
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function getFirstCommonSuperclass(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testMultidimensionalArrayIsSubtypeOfObjectArray() in line 243
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testSpecialStringSubclasses() in line 277
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testStringSubtypeOfObject() in line 133
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testStringSubtypeOfSerializable() in line 149
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
   function testUnrelatedTypes() in line 211
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function executeFindBugsTest(final RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase
      uses function getSubtypes2() defined in edu::umd::cs::findbugs::ba::ch::Subtypes2Test
      uses function isSubtype(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::ch::Subtypes2
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/ba/generic/GenericSignatureParserTest.java
module edu::umd::cs::findbugs::ba::generic::GenericSignatureParserTest
   inherits from junit::framework::TestCase
   function test1() in line 29
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function test2() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/ba/generic/GenericUtilitiesTest.java
module edu::umd::cs::findbugs::ba::generic::GenericUtilitiesTest
   inherits from junit::framework::TestCase
   function notestNestedSignature() in line 42
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable SAMPLE_SIGNATURE defined in edu::umd::cs::findbugs::ba::generic::GenericUtilitiesTest
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function notestNestedSignature2() in line 47
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function testMapSignature() in line 57
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function testNestedSignatureParser() in line 63
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable SAMPLE_SIGNATURE defined in edu::umd::cs::findbugs::ba::generic::GenericUtilitiesTest
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function testOKSignaturesThatHaveCausedProblems() in line 68
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testUnmatchedRightAngleBracket() in line 37
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable SAMPLE_SIGNATURE in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/ba/generic/TestGenericObjectType.java
module edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
   inherits from junit::framework::TestCase
   function compareTypes(Type,Type) in line 97
      7 lines of code
      2 parameters
      2 conditional paths
   function initTest(String,String,String,GenericUtilities.TypeCategory,@Nullable String,@Nullable Type,@Nullable List< ReferenceType >) in line 53
      protection public
      11 lines of code
      7 parameters
      1 conditional paths
   function notestCreateTypes() in line 112
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function initTest(String,String,String,GenericUtilities.TypeCategory,@Nullable String,@Nullable Type,@Nullable List< ReferenceType >) defined in edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
      uses function processTest() defined in edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
   function notestTypeVariables() in line 120
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function initTest(String,String,String,GenericUtilities.TypeCategory,@Nullable String,@Nullable Type,@Nullable List< ReferenceType >) defined in edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
      uses function processTest() defined in edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
   function processTest() in line 65
      protection public
      31 lines of code
      0 parameters
      6 conditional paths
      uses function toString(boolean) defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getTypeCategory() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function hasParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function compareTypes(Type,Type) defined in edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
      uses function getParameterAt(int) defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getVariable() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getExtension() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function testParameterizedList() in line 105
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function initTest(String,String,String,GenericUtilities.TypeCategory,@Nullable String,@Nullable Type,@Nullable List< ReferenceType >) defined in edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
      uses function processTest() defined in edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/ba/generic/TestGenericSignatureParser.java
module edu::umd::cs::findbugs::ba::generic::TestGenericSignatureParser
   inherits from junit::framework::TestCase
   function processTest(String,String...) in line 31
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function testSignatures() in line 42
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function processTest(String,String...) defined in edu::umd::cs::findbugs::ba::generic::TestGenericSignatureParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/ba/jsr305/ValidationSecurityManagerTest.java
module edu::umd::cs::findbugs::ba::jsr305::ValidationSecurityManagerTest
   function havePermissions() in line 65
      protection public
      15 lines of code
      0 parameters
      2 conditional paths
   function test(TypeQualifierValidator< SlashedClassName >) in line 60
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable ANNOTATION defined in edu::umd::cs::findbugs::ba::jsr305::ValidationSecurityManagerTest
   function test() in line 83
      protection public
      19 lines of code
      0 parameters
      2 conditional paths
      uses function havePermissions() defined in edu::umd::cs::findbugs::ba::jsr305::ValidationSecurityManagerTest
   variable ANNOTATION in line 41
module edu::umd::cs::findbugs::ba::jsr305::ValidationSecurityManagerTest::BadValidator
   inherits from javax::annotation::meta::TypeQualifierValidator
   function forConstantValue(@Nonnull SlashedClassName,Object) in line 46
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::jsr305::ValidationSecurityManagerTest::AnnotationTemplate
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/ba/MethodHashTest.java
module edu::umd::cs::findbugs::ba::MethodHashTest
   inherits from junit::framework::TestCase
   function setUp() in line 53
      9 lines of code
      0 parameters
      1 conditional paths
   function testGreater() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testHashToString() in line 63
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testLesser() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testLonger() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testSame() in line 73
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testShorter() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testStringToHash() in line 68
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/ba/npe/IsNullValueTest.java
module edu::umd::cs::findbugs::ba::npe::IsNullValueTest
   inherits from junit::framework::TestCase
   function testMerge1() in line 6
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function toExceptionValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function testMerge2() in line 14
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function toExceptionValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function testMerge3() in line 23
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function toExceptionValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function testMerge5() in line 39
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function toExceptionValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function testMerge6() in line 47
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function toExceptionValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/ba/npe/NonNullParamPropertyTest.java
module edu::umd::cs::findbugs::ba::npe::NonNullParamPropertyTest
   inherits from junit::framework::TestCase
   function setUp() in line 16
      11 lines of code
      0 parameters
      1 conditional paths
      uses function setParamWithProperty(int,boolean) defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
   function testEmpty() in line 28
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function hasProperty(int) defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
   function testExtremes() in line 46
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function hasProperty(int) defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
   function testIsEmpty() in line 34
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
   function testNonEmpty() in line 40
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function hasProperty(int) defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
   function testOutOfBounds() in line 52
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function hasProperty(int) defined in edu::umd::cs::findbugs::ba::interproc::ParameterProperty
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/ba/npe/ReturnPathTypeTest.java
module edu::umd::cs::findbugs::ba::npe::ReturnPathTypeTest
   inherits from junit::framework::TestCase
   function setUp() in line 44
      7 lines of code
      0 parameters
      1 conditional paths
      uses function setCanReturnNormally(boolean) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testAbnormalMergeWithAbnormal() in line 108
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function setCanReturnNormally(boolean) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function mergeWith(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testAbnormalMergeWithNormal() in line 95
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function mergeWith(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testCannotReturnNormally() in line 68
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testCanReturnNormally() in line 63
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testMergeWithTop() in line 73
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function mergeWith(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testNormalMergeWIthAbnormal() in line 90
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function mergeWith(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testNormalMergeWithNormal() in line 100
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function setCanReturnNormally(boolean) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function mergeWith(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testTop() in line 52
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function isTop() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testTopMergeWithAbnormalReturn() in line 85
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function mergeWith(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testTopMergeWithNormalReturn() in line 80
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function mergeWith(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/ba/SignatureParserTest.java
module edu::umd::cs::findbugs::ba::SignatureParserTest
   inherits from junit::framework::TestCase
   function setUp() in line 14
      4 lines of code
      0 parameters
      1 conditional paths
   function testManyParams() in line 24
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function testNoParams() in line 19
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/ba/type/TypeFrameModelingVisitorTest.java
module edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitorTest
   function testMapSignaturePattern() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/BugInstanceTest.java
module edu::umd::cs::findbugs::BugInstanceTest
   inherits from junit::framework::TestCase
   function checkProperty(BugProperty,String,String) in line 170
      4 lines of code
      3 parameters
      1 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::BugProperty
      uses function getValue() defined in edu::umd::cs::findbugs::BugProperty
   function checkPropertyIterator(Iterator< BugProperty >,String[],String[]) in line 157
      12 lines of code
      3 parameters
      3 conditional paths
      uses function checkProperty(BugProperty,String,String) defined in edu::umd::cs::findbugs::BugInstanceTest
   function get(Iterator< BugProperty >) in line 139
      8 lines of code
      1 parameters
      2 conditional paths
   function noMore(Iterator< BugProperty >) in line 148
      8 lines of code
      1 parameters
      2 conditional paths
   function removeThroughIterator(Iterator< BugProperty >,String) in line 175
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable next defined in edu::umd::cs::findbugs::BugProperty
      uses function getName() defined in edu::umd::cs::findbugs::BugProperty
   function setUp() in line 18
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function setProperty(String,String) defined in edu::umd::cs::findbugs::BugInstance
   function testIterateTooFar() in line 44
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function noMore(Iterator< BugProperty >) defined in edu::umd::cs::findbugs::BugInstanceTest
   function testMultipleRemove() in line 52
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
   function testPropertyIterator() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkPropertyIterator(Iterator< BugProperty >,String[],String[]) defined in edu::umd::cs::findbugs::BugInstanceTest
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
   function testRemoveAll1() in line 82
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function removeThroughIterator(Iterator< BugProperty >,String) defined in edu::umd::cs::findbugs::BugInstanceTest
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function checkPropertyIterator(Iterator< BugProperty >,String[],String[]) defined in edu::umd::cs::findbugs::BugInstanceTest
   function testRemoveAndAdd() in line 74
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function removeThroughIterator(Iterator< BugProperty >,String) defined in edu::umd::cs::findbugs::BugInstanceTest
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function setProperty(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function checkPropertyIterator(Iterator< BugProperty >,String[],String[]) defined in edu::umd::cs::findbugs::BugInstanceTest
   function testRemoveBeforeNext() in line 64
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
   function testRemoveThroughIterator1() in line 29
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function removeThroughIterator(Iterator< BugProperty >,String) defined in edu::umd::cs::findbugs::BugInstanceTest
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function checkPropertyIterator(Iterator< BugProperty >,String[],String[]) defined in edu::umd::cs::findbugs::BugInstanceTest
   function testRemoveThroughIterator2() in line 34
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function removeThroughIterator(Iterator< BugProperty >,String) defined in edu::umd::cs::findbugs::BugInstanceTest
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function checkPropertyIterator(Iterator< BugProperty >,String[],String[]) defined in edu::umd::cs::findbugs::BugInstanceTest
   function testRemoveThroughIterator3() in line 39
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function removeThroughIterator(Iterator< BugProperty >,String) defined in edu::umd::cs::findbugs::BugInstanceTest
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function checkPropertyIterator(Iterator< BugProperty >,String[],String[]) defined in edu::umd::cs::findbugs::BugInstanceTest
   function testWriteCloudPropertiesWithMessagesEnabled() in line 111
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getXmlProps() defined in edu::umd::cs::findbugs::BugInstance
      uses function setConsensus(String) defined in edu::umd::cs::findbugs::BugInstance::XmlProps
      uses function setFirstSeen(Date) defined in edu::umd::cs::findbugs::BugInstance::XmlProps
      uses function setReviewCount(int) defined in edu::umd::cs::findbugs::BugInstance::XmlProps
      uses function setWithMessages(boolean) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(BugInstance,BugCollection) defined in edu::umd::cs::findbugs::BugInstanceTest
   function testWriteCloudPropertiesWithoutMessagesEnabled() in line 91
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function getXmlProps() defined in edu::umd::cs::findbugs::BugInstance
      uses function setConsensus(String) defined in edu::umd::cs::findbugs::BugInstance::XmlProps
      uses function setFirstSeen(Date) defined in edu::umd::cs::findbugs::BugInstance::XmlProps
      uses function setReviewCount(int) defined in edu::umd::cs::findbugs::BugInstance::XmlProps
      uses function setWithMessages(boolean) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(BugInstance,BugCollection) defined in edu::umd::cs::findbugs::BugInstanceTest
   function writeXML(BugInstance,BugCollection) in line 131
      7 lines of code
      2 parameters
      1 conditional paths
      uses function finish() defined in edu::umd::cs::findbugs::xml::XMLOutput
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/classfile/TestClassDescriptor.java
module edu::umd::cs::findbugs::classfile::TestClassDescriptor
   function testSimpleName() in line 32
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getPackageName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getSimpleName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/ClassScreenerTest.java
module edu::umd::cs::findbugs::ClassScreenerTest
   inherits from junit::framework::TestCase
   function makeFileName(String) in line 34
      3 lines of code
      1 parameters
      1 conditional paths
   function makeJarURL(String) in line 38
      3 lines of code
      1 parameters
      1 conditional paths
   function setUp() in line 67
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable emptyScreener defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable particularClassScreener defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses function addAllowedClass(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses variable SOME_CLASS defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable particularPackageScreener defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses function addAllowedPackage(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses variable FOOBAR_PACKAGE defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable particularPackageScreener2 defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable FOOBAR_PACKAGE_WITH_TRAILING_DOT defined in edu::umd::cs::findbugs::ClassScreenerTest
   function testEmptyClassScreener() in line 80
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable emptyScreener defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses function matches(String) defined in edu::umd::cs::findbugs::IClassScreener
      uses variable SOME_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_OTHER_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable UNRELATED_THING_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_OTHER_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable UNRELATED_THING_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
   function testPackageScreener(IClassScreener) in line 105
      8 lines of code
      1 parameters
      1 conditional paths
      uses function matches(String) defined in edu::umd::cs::findbugs::IClassScreener
      uses variable SOME_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_OTHER_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable UNRELATED_THING_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_OTHER_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable UNRELATED_THING_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
   function testParticularClassScreener() in line 90
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable particularClassScreener defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses function matches(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses variable SOME_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_OTHER_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable UNRELATED_THING_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_OTHER_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable UNRELATED_THING_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
   function testParticularPackageScreener() in line 100
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function testPackageScreener(IClassScreener) defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable particularPackageScreener defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable particularPackageScreener2 defined in edu::umd::cs::findbugs::ClassScreenerTest
   variable emptyScreener in line 26
   variable FOOBAR_PACKAGE in line 42
   variable FOOBAR_PACKAGE_WITH_TRAILING_DOT in line 44
   variable FURRYLEMUR_PACKAGE in line 46
   variable particularClassScreener in line 28
   variable particularPackageScreener in line 30
   variable particularPackageScreener2 in line 32
   variable SOME_CLASS in line 48
   variable SOME_CLASS_FILENAME in line 54
   variable SOME_CLASS_JARFILENAME in line 60
   variable SOME_OTHER_CLASS in line 50
   variable SOME_OTHER_CLASS_FILENAME in line 56
   variable SOME_OTHER_CLASS_JARFILENAME in line 62
   variable UNRELATED_THING_CLASS in line 52
   variable UNRELATED_THING_CLASS_FILENAME in line 58
   variable UNRELATED_THING_CLASS_JARFILENAME in line 64
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/cloud/AbstractCloudTest.java
module edu::umd::cs::findbugs::cloud::AbstractCloudTest
   inherits from junit::framework::TestCase
   function assertEqualText(String[],String) in line 131
      protection public
      13 lines of code
      2 parameters
      4 conditional paths
   function checkSourceLink(String,String,int) in line 263
      11 lines of code
      3 parameters
      2 conditional paths
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getSourceLink(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function checkVotingMode(Mode,String) in line 275
      10 lines of code
      2 parameters
      2 conditional paths
      uses function getProperties() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
      uses function getProperties() defined in edu::umd::cs::findbugs::PropertyBundle
      uses function setProperty(String,String) defined in edu::umd::cs::findbugs::PropertyBundle
      uses function initialize() defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function getMode() defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function createBug(String,String...) in line 298
      15 lines of code
      2 parameters
      2 conditional paths
      uses function setInstanceHash(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(@Nonnull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable designations defined in edu::umd::cs::findbugs::cloud::AbstractCloudTest::MyAbstractCloud
   function initializeSourceLinks(String,String,String) in line 286
      11 lines of code
      3 parameters
      3 conditional paths
      uses function getProperties() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
      uses function setProperty(String,String) defined in edu::umd::cs::findbugs::PropertyBundle
      uses function initialize() defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function lines(String...) in line 314
      12 lines of code
      1 parameters
      3 conditional paths
   function printSummary(BugInstance...) in line 327
      10 lines of code
      1 parameters
      2 conditional paths
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::BugCollection
      uses function addClass(@DottedClassName String,@CheckForNull String,boolean,int) defined in edu::umd::cs::findbugs::ProjectStats
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getSourceFileName() defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
      uses function printCloudSummary(PrintWriter,Iterable< BugInstance >,String[]) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function setUp() in line 47
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function setCloudid(String) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function setClassLoader(ClassLoader) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function setCloudClass(Class<?extends Cloud >) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function setUsernameClass(Class<?extends NameLookup >) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function setProperties(PropertyBundle) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function setDescription(String) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function setDetails(String) defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
      uses function createCloudPlugin() defined in edu::umd::cs::findbugs::cloud::CloudPluginBuilder
   function testCountReviewersNone() in line 63
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getNumberReviewers(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function testCountReviewersTwo() in line 58
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getNumberReviewers(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function testOverallClassificationNotAProblemChangedMindNo() in line 115
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NOT_A_BUG defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getConsensusDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function testOverallClassificationNotAProblemChangedMindYes() in line 120
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable MUST_FIX defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getConsensusDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function testOverallClassificationNotAProblemMostlyNo() in line 105
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getConsensusDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function score() defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function testOverallClassificationNotAProblemMostlyYes() in line 110
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getConsensusDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
      uses function score() defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
   function testOverallClassificationNotAProblemNeedsStudy() in line 73
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NEEDS_STUDY defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getConsensusDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function testOverallClassificationNotAProblemNo() in line 95
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NOT_A_BUG defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getConsensusDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function testOverallClassificationNotAProblemNoEvals() in line 68
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getConsensusDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function testOverallClassificationNotAProblemUnanimousNo() in line 100
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NOT_A_BUG defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getConsensusDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function testOverallClassificationNotAProblemUnanimousYes() in line 84
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MUST_FIX defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getConsensusDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function testOverallClassificationNotAProblemYes() in line 78
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable MUST_FIX defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getConsensusDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function testOverallClassificationNotAProblemYesAndNo() in line 89
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NEEDS_STUDY defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getConsensusDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function testPrintSummaryNoBugs() in line 126
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testPrintSummaryOneBugNoEvals() in line 145
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
   function testPrintSummaryWithEvaluations() in line 156
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   function testPrintSummaryWithMoreThan9Reviewers() in line 170
      protection public
      20 lines of code
      0 parameters
      3 conditional paths
   function testPrintSummaryWithMultipleEvaluationsPerBug() in line 191
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   function testSourceLinkFormatInvalid() in line 230
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testSourceLinkNoMatch() in line 250
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testSourceLinkPatternInvalid() in line 225
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testSourceLinkPatternNotSpecified() in line 220
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testSourceLinkTooltip() in line 255
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getProperties() defined in edu::umd::cs::findbugs::cloud::CloudPlugin
      uses function setProperty(String,String) defined in edu::umd::cs::findbugs::PropertyBundle
      uses function getSourceLinkToolTip(BugInstance) defined in edu::umd::cs::findbugs::cloud::AbstractCloud
   function testSourceLinkURLInvalid() in line 235
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testSourceLinkWithLineNumber() in line 245
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testSourceLinkWithoutLineNumber() in line 240
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testVotingModeProperty() in line 215
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable SECRET defined in edu::umd::cs::findbugs::cloud::Cloud::Mode
      uses variable COMMUNAL defined in edu::umd::cs::findbugs::cloud::Cloud::Mode
   function testVotingModePropertyInvalid() in line 211
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable COMMUNAL defined in edu::umd::cs::findbugs::cloud::Cloud::Mode
   function testVotingModePropertyNull() in line 207
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable COMMUNAL defined in edu::umd::cs::findbugs::cloud::Cloud::Mode
   function trimWhitespace(String) in line 338
      3 lines of code
      1 parameters
      1 conditional paths
   variable bugCollection in line 34
   variable cloud in line 36
   variable plugin in line 44
   variable projectStats in line 40
   variable summary in line 38
   variable timestampCounter in line 42
module edu::umd::cs::findbugs::cloud::AbstractCloudTest::MyAbstractCloud
   inherits from edu::umd::cs::findbugs::cloud::AbstractCloud
   function availableForInitialization() in line 402
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function bugFiled(BugInstance,Object) in line 397
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function bugsPopulated() in line 387
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function fileBug(BugInstance) in line 455
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getBugIsUnassigned(BugInstance) in line 467
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getCloudName() in line 439
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDesignations(BugInstance) in line 443
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getLatestDesignationFromEachUser(BugInstance) in line 503
      14 lines of code
      1 parameters
      4 conditional paths
      uses function getTimestamp() defined in edu::umd::cs::findbugs::BugDesignation
   function getPrimaryDesignation(BugInstance) in line 382
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getProjects(String) in line 424
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getReviewers(BugInstance) in line 479
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSigninState() in line 360
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NO_SIGNIN_REQUIRED defined in edu::umd::cs::findbugs::cloud::Cloud::SigninState
   function getUser() in line 355
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getWillNotBeFixed(BugInstance) in line 491
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function initiateCommunication() in line 392
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isInCloud(BugInstance) in line 429
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isOnlineCloud() in line 434
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSavingSignInInformationEnabled() in line 369
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setSaveSignInInformation(boolean) in line 365
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function signIn() in line 374
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function signOut() in line 378
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function storeUserAnnotation(BugInstance) in line 350
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function waitUntilIssueDataDownloaded() in line 407
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function waitUntilIssueDataDownloaded(long,TimeUnit) in line 419
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function waitUntilNewIssuesUploaded(long,TimeUnit) in line 410
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function waitUntilNewIssuesUploaded() in line 415
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function MyAbstractCloud(CloudPlugin,BugCollection,Properties) in line 345
      3 lines of code
      3 parameters
      1 conditional paths
   variable designations in line 343
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/config/ProjectFilterSettingsTest.java
module edu::umd::cs::findbugs::config::ProjectFilterSettingsTest
   inherits from junit::framework::TestCase
   function setUp() in line 41
      20 lines of code
      0 parameters
      1 conditional paths
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function removeCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function addCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testAddCategory() in line 77
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function containsCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function addCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testDisplayFalseWarnings() in line 135
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable displayFalseWarnings defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function setDisplayFalseWarnings(boolean) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function equals(Object) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function toEncodedString() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testEncodeDecode() in line 125
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function toEncodedString() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function hiddenToEncodedString() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testEquals() in line 106
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testPlainCategories() in line 66
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function getBugCategories() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function containsCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getActiveCategorySet() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testPlainPrio() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMinPriority() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable DEFAULT_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testRemoveCategory() in line 88
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function containsCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function removeCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testSetMinPriority() in line 94
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getMinPriority() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getMinPriorityAsInt() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/config/UserPreferencesTest.java
module edu::umd::cs::findbugs::config::UserPreferencesTest
   inherits from junit::framework::TestCase
   function setUp() in line 10
      3 lines of code
      0 parameters
      1 conditional paths
   function testClone() in line 14
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function clone() defined in edu::umd::cs::findbugs::config::UserPreferences
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/detect/FindSqlInjectionTest.java
module edu::umd::cs::findbugs::detect::FindSqlInjectionTest
   inherits from junit::framework::TestCase
   function testCloseQuote() in line 40
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function testOpenQuote() in line 29
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/detect/IncompatMaskTest.java
module edu::umd::cs::findbugs::detect::IncompatMaskTest
   inherits from junit::framework::TestCase
   function testGetFlagBits() in line 40
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/DetectorsTest.java
module edu::umd::cs::findbugs::DetectorsTest
   function checkForUnexpectedBugs() in line 124
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::DetectorsTest
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function isUnexpectedBug(BugInstance) defined in edu::umd::cs::findbugs::DetectorsTest
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getBugsLocations(List< BugInstance >) defined in edu::umd::cs::findbugs::DetectorsTest
   function getBugsLocations(List< BugInstance >) in line 142
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable FB_MISSING_EXPECTED_WARNING defined in edu::umd::cs::findbugs::DetectorsTest
      uses function getValue() defined in edu::umd::cs::findbugs::StringAnnotation
      uses function toString() defined in edu::umd::cs::findbugs::StringAnnotation
   function getFindbugsTestCases() in line 64
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable findbugsTestCases defined in edu::umd::cs::findbugs::DetectorsTest
   function getFindbugsTestCasesFile(String) in line 76
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getFindbugsTestCases() defined in edu::umd::cs::findbugs::DetectorsTest
   function isUnexpectedBug(BugInstance) in line 162
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable FB_MISSING_EXPECTED_WARNING defined in edu::umd::cs::findbugs::DetectorsTest
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses variable FB_UNEXPECTED_WARNING defined in edu::umd::cs::findbugs::DetectorsTest
   function loadFindbugsPlugin() in line 170
      4 lines of code
      0 parameters
      1 conditional paths
   function setUp() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function loadFindbugsPlugin() defined in edu::umd::cs::findbugs::DetectorsTest
   function setUpEngine(String...) in line 180
      40 lines of code
      1 parameters
      6 conditional paths
      uses function setProjectName(String) defined in edu::umd::cs::findbugs::Project
      uses function setProject(Project) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses variable engine defined in edu::umd::cs::findbugs::DetectorsTest
      uses function setDetectorFactoryCollection(DetectorFactoryCollection) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses variable bugReporter defined in edu::umd::cs::findbugs::DetectorsTest
      uses function setPriorityThreshold(int) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function setRankThreshold(int) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable VISIBLE_RANK_MAX defined in edu::umd::cs::findbugs::BugRanker
      uses function setBugReporter(BugReporter) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses variable enabledDetectors defined in edu::umd::cs::findbugs::DetectorsTest
      uses function getFactory(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function enableDetector(DetectorFactory,boolean) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function getFilterSettings() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function clearAllCategories() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function setUserPreferences(UserPreferences) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function addFile(String) defined in edu::umd::cs::findbugs::Project
      uses function getFindbugsTestCasesFile(String) defined in edu::umd::cs::findbugs::DetectorsTest
      uses function setNoClassOk(boolean) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function addAuxClasspathEntry(String) defined in edu::umd::cs::findbugs::Project
   function testAllRegressionFilesEcj() in line 111
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses function setUpEngine(String...) defined in edu::umd::cs::findbugs::DetectorsTest
      uses variable engine defined in edu::umd::cs::findbugs::DetectorsTest
      uses function execute() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses variable bugReporter defined in edu::umd::cs::findbugs::DetectorsTest
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
   function testAllRegressionFilesJavac() in line 93
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function setUpEngine(String...) defined in edu::umd::cs::findbugs::DetectorsTest
      uses variable engine defined in edu::umd::cs::findbugs::DetectorsTest
      uses function execute() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses variable bugReporter defined in edu::umd::cs::findbugs::DetectorsTest
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
   variable bugReporter in line 55
   variable enabledDetectors in line 62
   variable engine in line 57
   variable FB_MISSING_EXPECTED_WARNING in line 53
   variable FB_UNEXPECTED_WARNING in line 51
   variable findbugsTestCases in line 59
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/filter/NotMatcherTest.java
module edu::umd::cs::findbugs::filter::NotMatcherTest
   function canReturnChildMatcher() in line 73
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function originalMatcher() defined in edu::umd::cs::findbugs::filter::NotMatcher
   function invertsResultsFromWrappedMatcher_doesMatchWhenWrappedDoesnt() in line 50
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::NotMatcher
      uses variable bug defined in edu::umd::cs::findbugs::filter::NotMatcherTest
   function invertsResultsFromWrappedMatcher_doesntMatchWhenWrappedDoesMatch() in line 41
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::NotMatcher
      uses variable bug defined in edu::umd::cs::findbugs::filter::NotMatcherTest
   function throwsExceptionWhenTryingToGetNonExistentChildMatcher() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function originalMatcher() defined in edu::umd::cs::findbugs::filter::NotMatcher
   function writeXMLAndGetStringOutput(NotMatcher) in line 86
      10 lines of code
      1 parameters
      1 conditional paths
      uses function finish() defined in edu::umd::cs::findbugs::xml::XMLOutput
   function writeXMLOutputAddsNotTagsAroundWrappedMatchersOutput() in line 59
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function writeXMLAndGetStringOutput(NotMatcher) defined in edu::umd::cs::findbugs::filter::NotMatcherTest
   variable bug in line 38
module edu::umd::cs::findbugs::filter::NotMatcherTest::TestMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable alwaysMatches defined in edu::umd::cs::findbugs::filter::NotMatcherTest::TestMatcher
   function writeXML(XMLOutput,boolean) in line 112
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function TestMatcher(boolean) in line 102
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable alwaysMatches defined in edu::umd::cs::findbugs::filter::NotMatcherTest::TestMatcher
   variable alwaysMatches in line 100
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/filter/SourceMatcherTest.java
module edu::umd::cs::findbugs::filter::SourceMatcherTest
   function match() in line 84
      protection public
      33 lines of code
      0 parameters
      1 conditional paths
      uses variable fileName defined in edu::umd::cs::findbugs::filter::SourceMatcherTest
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::SourceMatcher
      uses variable bug defined in edu::umd::cs::findbugs::filter::SourceMatcherTest
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function setSourceLines(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationWithSourceLines
   function readXML() in line 63
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses variable fileName defined in edu::umd::cs::findbugs::filter::SourceMatcherTest
      uses function writeXMLAndGetStringOutput(SourceMatcher,boolean) defined in edu::umd::cs::findbugs::filter::SourceMatcherTest
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable bug defined in edu::umd::cs::findbugs::filter::SourceMatcherTest
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
   function setup() in line 45
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable bug defined in edu::umd::cs::findbugs::filter::SourceMatcherTest
      uses variable fileName defined in edu::umd::cs::findbugs::filter::SourceMatcherTest
   function writeXML() in line 51
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable fileName defined in edu::umd::cs::findbugs::filter::SourceMatcherTest
      uses function writeXMLAndGetStringOutput(SourceMatcher,boolean) defined in edu::umd::cs::findbugs::filter::SourceMatcherTest
   function writeXMLAndGetStringOutput(SourceMatcher,boolean) in line 118
      9 lines of code
      2 parameters
      1 conditional paths
      uses function finish() defined in edu::umd::cs::findbugs::xml::XMLOutput
   variable bug in line 41
   variable fileName in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/FindBugsTestCase.java
module edu::umd::cs::findbugs::FindBugsTestCase
   inherits from junit::framework::TestCase
   abstract class
   function executeFindBugsTest(final RunnableWithExceptions) in line 194
      15 lines of code
      1 parameters
      3 conditional paths
      uses function TestRunnerThread(RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
      uses variable runnable defined in edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
      uses function getDetectorAdapter() defined in edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
      uses function finishTest() defined in edu::umd::cs::findbugs::JUnitDetectorAdapter
   variable EMPTY_CLASS_DATA in line 44
      protection public
module edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
   inherits from Thread
   function createEmptyClassFile(File) in line 172
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable EMPTY_CLASS_DATA defined in edu::umd::cs::findbugs::FindBugsTestCase
   function getDetectorAdapter() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detectorAdapter defined in edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
   function run() in line 88
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function runTest(RunnableWithExceptions) defined in edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
      uses variable runnable defined in edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
   function runTest(RunnableWithExceptions) in line 98
      63 lines of code
      1 parameters
      6 conditional paths
      uses function createEmptyClassFile(File) defined in edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
      uses function setBugReporter(BugReporter) defined in edu::umd::cs::findbugs::FindBugs2
      uses function addFile(String) defined in edu::umd::cs::findbugs::Project
      uses function setProject(Project) defined in edu::umd::cs::findbugs::FindBugs2
      uses function factoryIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function setDetectorFactoryCollection(DetectorFactoryCollection) defined in edu::umd::cs::findbugs::FindBugs2
      uses function setUserPreferences(UserPreferences) defined in edu::umd::cs::findbugs::FindBugs2
      uses variable runnable defined in edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
      uses function execute() defined in edu::umd::cs::findbugs::FindBugs2
      uses variable detectorAdapter defined in edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
      uses variable instance defined in edu::umd::cs::findbugs::JUnitDetectorAdapter
   function TestRunnerThread(RunnableWithExceptions) in line 71
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable runnable defined in edu::umd::cs::findbugs::FindBugsTestCase::TestRunnerThread
   variable detectorAdapter in line 69
   variable runnable in line 67
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/gui2/FilterFactoryTest.java
module edu::umd::cs::findbugs::gui2::FilterFactoryTest
   function invertMatcherShouldNegateTheOriginalMatchingResult() in line 37
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable BUGCODE defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
   function shouldReturnTheOriginalMatcherWhenAskedToInvertANotMatcher() in line 49
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable BUGCODE defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/gui2/SaveTypeTest.java
module edu::umd::cs::findbugs::gui2::SaveTypeTest
   inherits from junit::framework::TestCase
   function check(SaveType,String) in line 31
      3 lines of code
      2 parameters
      1 conditional paths
   function testSaveTypes() in line 35
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function check(SaveType,String) defined in edu::umd::cs::findbugs::gui2::SaveTypeTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/IntAnnotationTest.java
module edu::umd::cs::findbugs::IntAnnotationTest
   function test() in line 32
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/internalAnnotations/SlashedClassNameTest.java
module edu::umd::cs::findbugs::internalAnnotations::SlashedClassNameTest
   inherits from junit::framework::TestCase
   function testFoo() in line 31
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testFoo1Bar2() in line 43
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function testFooBar() in line 36
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/io/IOTest.java
module edu::umd::cs::findbugs::io::IOTest
   function randomBytes(int) in line 36
      5 lines of code
      1 parameters
      1 conditional paths
   function testReadAllWithCorrectSize() in line 42
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function randomBytes(int) defined in edu::umd::cs::findbugs::io::IOTest
   function testReadAllWithLargeSize() in line 60
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function randomBytes(int) defined in edu::umd::cs::findbugs::io::IOTest
   function testReadAllWithoutSize() in line 69
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function randomBytes(int) defined in edu::umd::cs::findbugs::io::IOTest
   function testReadAllWithSmallSize() in line 51
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function randomBytes(int) defined in edu::umd::cs::findbugs::io::IOTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/jaif/JAIFScannerTest.java
module edu::umd::cs::findbugs::jaif::JAIFScannerTest
   inherits from junit::framework::TestCase
   function checkToken(JAIFScanner,String,JAIFTokenKind) in line 32
      6 lines of code
      3 parameters
      1 conditional paths
   function getScanner(String) in line 28
      3 lines of code
      1 parameters
      1 conditional paths
   function testScanColon() in line 39
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable COLON defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function testScanComma() in line 53
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable COMMA defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function testScanDecimalLiteral() in line 126
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable DECIMAL_LITERAL defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function testScanEquals() in line 60
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable EQUALS defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function testScanFloatingPointLiteral() in line 83
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable FLOATING_POINT_LITERAL defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function testScanFloatingPointLiteral2() in line 95
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable FLOATING_POINT_LITERAL defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function testScanHexLiteral() in line 117
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable HEX_LITERAL defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function testScanIdentifier() in line 67
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable IDENTIFIER_OR_KEYWORD defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable LPAREN defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable RPAREN defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function testScanOctalLiteral() in line 108
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable OCTAL_LITERAL defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function testScanParens() in line 45
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable LPAREN defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable RPAREN defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
   function testScanStringLiteral() in line 135
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function getScanner(String) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses function checkToken(JAIFScanner,String,JAIFTokenKind) defined in edu::umd::cs::findbugs::jaif::JAIFScannerTest
      uses variable STRING_LITERAL defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
      uses variable NEWLINE defined in edu::umd::cs::findbugs::jaif::JAIFTokenKind
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/JUnitDetectorAdapter.java
module edu::umd::cs::findbugs::JUnitDetectorAdapter
   inherits from edu::umd::cs::findbugs::Detector2
   function finishPass() in line 77
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function finishTest() in line 58
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses variable throwable defined in edu::umd::cs::findbugs::JUnitDetectorAdapter
   function getDetectorClassName() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setRunnable(RunnableWithExceptions) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable runnableInstance defined in edu::umd::cs::findbugs::JUnitDetectorAdapter
   function visitClass(ClassDescriptor) in line 98
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable testExecuted defined in edu::umd::cs::findbugs::JUnitDetectorAdapter
      uses variable runnableInstance defined in edu::umd::cs::findbugs::JUnitDetectorAdapter
      uses variable throwable defined in edu::umd::cs::findbugs::JUnitDetectorAdapter
   function JUnitDetectorAdapter(BugReporter) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function instance() defined in edu::umd::cs::findbugs::JUnitDetectorAdapter
   variable instance in line 38
   variable runnableInstance in line 40
   variable testExecuted in line 36
   variable throwable in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/ml/SplitCamelCaseIdentifierTest.java
module edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifierTest
   inherits from junit::framework::TestCase
   function checkContents(Collection< String >,String[]) in line 62
      6 lines of code
      2 parameters
      2 conditional paths
   function setUp() in line 23
      8 lines of code
      0 parameters
      1 conditional paths
   function testAllLower() in line 47
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function split() defined in edu::umd::cs::findbugs::util::SplitCamelCaseIdentifier
      uses function checkContents(Collection< String >,String[]) defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifierTest
   function testAllUpper() in line 52
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function split() defined in edu::umd::cs::findbugs::util::SplitCamelCaseIdentifier
      uses function checkContents(Collection< String >,String[]) defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifierTest
   function testCapitalized() in line 57
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function split() defined in edu::umd::cs::findbugs::util::SplitCamelCaseIdentifier
      uses function checkContents(Collection< String >,String[]) defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifierTest
   function testSplit() in line 32
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function split() defined in edu::umd::cs::findbugs::util::SplitCamelCaseIdentifier
      uses function checkContents(Collection< String >,String[]) defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifierTest
   function testSplit2() in line 37
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function split() defined in edu::umd::cs::findbugs::util::SplitCamelCaseIdentifier
      uses function checkContents(Collection< String >,String[]) defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifierTest
   function testSplitLong() in line 42
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function split() defined in edu::umd::cs::findbugs::util::SplitCamelCaseIdentifier
      uses function checkContents(Collection< String >,String[]) defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifierTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/ObfuscateTest.java
module edu::umd::cs::findbugs::ObfuscateTest
   inherits from junit::framework::TestCase
   function testMethodSignature() in line 29
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function testMethodSignatureDoesntChangeForCoreTypes() in line 36
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/OpcodeStackItemTest.java
module edu::umd::cs::findbugs::OpcodeStackItemTest
   inherits from junit::framework::TestCase
   function testMergeIntAndZero() in line 25
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function testMergeTypeOnly() in line 34
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/RunnableWithExceptions.java
module edu::umd::cs::findbugs::RunnableWithExceptions
   function run() in line 23
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/SAXBugCollectionHandlerTest.java
module edu::umd::cs::findbugs::SAXBugCollectionHandlerTest
   inherits from junit::framework::TestCase
   function testBugInstanceXmlPropsNoReviews() in line 10
      protection public
      36 lines of code
      0 parameters
      1 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCorePlugin() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses function getCloud() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function overallClassificationIsNotAProblem(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getNumberReviewers(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getConsensusDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
   function testBugInstanceXmlPropsWithReviews() in line 47
      protection public
      35 lines of code
      0 parameters
      1 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCloud() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function overallClassificationIsNotAProblem(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getNumberReviewers(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable NOT_A_BUG defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getConsensusDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
   function testBugInstanceXmlPropsWithReviewsShouldFix() in line 83
      protection public
      35 lines of code
      0 parameters
      1 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCloud() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function overallClassificationIsNotAProblem(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses function getNumberReviewers(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
      uses variable SHOULD_FIX defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
      uses function getConsensusDesignation(BugInstance) defined in edu::umd::cs::findbugs::cloud::Cloud
   function testReadAndThenStoreXmlProps() in line 119
      protection public
      46 lines of code
      0 parameters
      1 conditional paths
      uses function readXML(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(OutputStream) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCloud() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable SHOULD_FIX defined in edu::umd::cs::findbugs::cloud::Cloud::UserDesignation
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/updates/UpdateCheckerTest.java
module edu::umd::cs::findbugs::updates::UpdateCheckerTest
   inherits from junit::framework::TestCase
   function checkForUpdates(Plugin) in line 228
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable checker defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function checkForUpdates(Collection< Plugin >,final boolean) defined in edu::umd::cs::findbugs::updates::UpdateChecker
      uses variable latch defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
   function convertGlobToRE(String) in line 234
      13 lines of code
      1 parameters
      3 conditional paths
   function createPlugin(String,Date,String) in line 260
      12 lines of code
      3 parameters
      2 conditional paths
      uses function setShortDescription(String) defined in edu::umd::cs::findbugs::Plugin
      uses function setUpdateUrl(String) defined in edu::umd::cs::findbugs::Plugin
   function setResponseXml(String,String,String) in line 248
      10 lines of code
      3 parameters
      1 conditional paths
      uses variable responseXml defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
   function setUp() in line 51
      36 lines of code
      0 parameters
      1 conditional paths
      uses variable updateCollector defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable errors defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable latch defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable checked defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable globalOptions defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable uploadedXml defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable checker defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable responseXml defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function updateChecksGloballyDisabled() defined in edu::umd::cs::findbugs::updates::UpdateChecker
   function testDisableUpdateChecks() in line 163
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function setResponseXml(String,String,String) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable globalOptions defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function checkForUpdates(Plugin) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function createPlugin(String,Date,String) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable KEITHS_BIRTHDAY_2011 defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable checked defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable updateCollector defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
   function testDisableUpdateChecksFalse() in line 176
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function setResponseXml(String,String,String) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable globalOptions defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function checkForUpdates(Plugin) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function createPlugin(String,Date,String) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable KEITHS_BIRTHDAY_2011 defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable checked defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable updateCollector defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
   function testDisableUpdateChecksInvalid() in line 189
      protection public
      16 lines of code
      0 parameters
      2 conditional paths
      uses function setResponseXml(String,String,String) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable globalOptions defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function checkForUpdates(Plugin) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function createPlugin(String,Date,String) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable KEITHS_BIRTHDAY_2011 defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable checked defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable updateCollector defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
   function testPluginDifferentVersionSameDate() in line 127
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function setResponseXml(String,String,String) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function checkForUpdates(Plugin) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function createPlugin(String,Date,String) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable KEITHS_BIRTHDAY_2011 defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable updateCollector defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
   function testPluginNotPresent() in line 138
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function setResponseXml(String,String,String) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function checkForUpdates(Plugin) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function createPlugin(String,Date,String) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable KEITHS_BIRTHDAY_2011 defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable updateCollector defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
   function testPluginSameVersionDifferentDate() in line 105
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function setResponseXml(String,String,String) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function checkForUpdates(Plugin) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function createPlugin(String,Date,String) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable KEITHS_BIRTHDAY_2011 defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable updateCollector defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
   function testPluginSameVersionSameDate() in line 116
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function setResponseXml(String,String,String) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function checkForUpdates(Plugin) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function createPlugin(String,Date,String) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable KEITHS_BIRTHDAY_2011 defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable updateCollector defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
   function testRedirectUpdateChecks() in line 149
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function setResponseXml(String,String,String) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable globalOptions defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function checkForUpdates(Plugin) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function createPlugin(String,Date,String) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable KEITHS_BIRTHDAY_2011 defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable checked defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable updateCollector defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
   function testSimplePluginUpdate() in line 89
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function setResponseXml(String,String,String) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function checkForUpdates(Plugin) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function createPlugin(String,Date,String) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable KEITHS_BIRTHDAY_2011 defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable updateCollector defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
   function testSubmittedXml() in line 206
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function setResponseXml(String,String,String) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function checkForUpdates(Plugin) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function createPlugin(String,Date,String) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable KEITHS_BIRTHDAY_2011 defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses function convertGlobToRE(String) defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable uploadedXml defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
   variable checked in line 46
   variable checker in line 45
   variable errors in line 42
   variable globalOptions in line 47
   variable KEITHS_BIRTHDAY_2011 in line 31
   variable latch in line 44
   variable responseXml in line 43
   variable updateCollector in line 41
   variable uploadedXml in line 48
module edu::umd::cs::findbugs::updates::UpdateCheckerTest::TestingUpdateCheckCallback
   inherits from edu::umd::cs::findbugs::updates::UpdateCheckCallback
   function getGlobalOption(String) in line 287
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable globalOptions defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
   function getGlobalOptionSetter(String) in line 292
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function pluginUpdateCheckComplete(List< UpdateChecker.PluginUpdate >,boolean) in line 281
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable updateCollector defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest
      uses variable latch defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest::TestingUpdateCheckCallback
   function TestingUpdateCheckCallback(CountDownLatch) in line 276
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable latch defined in edu::umd::cs::findbugs::updates::UpdateCheckerTest::TestingUpdateCheckCallback
   variable latch in line 274
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/util/ClassNameTest.java
module edu::umd::cs::findbugs::util::ClassNameTest
   inherits from junit::framework::TestCase
   function testExtractClassName() in line 37
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function testExtractClassNameBad() in line 58
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
   function testExtractPackagePrefix() in line 29
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function testGetPrimitiveType() in line 45
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/util/StringsTest.java
module edu::umd::cs::findbugs::util::StringsTest
   inherits from junit::framework::TestCase
   function checkEscapeLFCRBackSlash(String,String) in line 71
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function testEscapeLFCRBackSlash() in line 76
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function checkEscapeLFCRBackSlash(String,String) defined in edu::umd::cs::findbugs::util::StringsTest
   function testEscapeXml() in line 49
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable escapedStrings defined in edu::umd::cs::findbugs::util::StringsTest
      uses variable unescapedStrings defined in edu::umd::cs::findbugs::util::StringsTest
   function testUnescapeXml() in line 60
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable escapedStrings defined in edu::umd::cs::findbugs::util::StringsTest
      uses variable unescapedStrings defined in edu::umd::cs::findbugs::util::StringsTest
   variable escapedStrings in line 26
      protection public
   variable unescapedStrings in line 45
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/visitclass/DismantleBytecodeTest.java
module edu::umd::cs::findbugs::visitclass::DismantleBytecodeTest
   inherits from junit::framework::TestCase
   function testAreOppositeBranches() in line 31
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/visitclass/GetNumberArgumentsTest.java
module edu::umd::cs::findbugs::visitclass::GetNumberArgumentsTest
   inherits from junit::framework::TestCase
   function testArrays() in line 44
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function testSimpleObjectArgument() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testSimpleWithVoidIntegerType() in line 38
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
   function testSimpleWithVoidReturnType() in line 32
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
   function testStringArguments() in line 51
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/visitclass/PreorderVisitorTest.java
module edu::umd::cs::findbugs::visitclass::PreorderVisitorTest
   inherits from junit::framework::TestCase
   function testGetNumberArguments() in line 29
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/junit/edu/umd/cs/findbugs/workflow/FindSeqNumTest.java
module edu::umd::cs::findbugs::workflow::FindSeqNumTest
   inherits from junit::framework::TestCase
   function setUp() in line 22
      16 lines of code
      0 parameters
      2 conditional paths
   function test0() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function test1() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAfterJune15() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAfterJune25() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAfterJune5() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAfterMay5() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testBeforeJune15() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testBeforeJune25() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testBeforeJune5() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testBeforeMay5() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testLast() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testlastVersion() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testminusOne() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testminusTwo() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testV1_0() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testV1_1() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testV2_0() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testV2_1() in line 75
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/tools/edu/umd/cs/findbugs/tools/CheckClassfileVersion.java
module edu::umd::cs::findbugs::tools::CheckClassfileVersion
   function isJarFile(File) in line 36
      4 lines of code
      1 parameters
      1 conditional paths
   function main(String) in line 41
      protection public
      55 lines of code
      1 parameters
      15 conditional paths
      uses function isJarFile(File) defined in edu::umd::cs::findbugs::tools::CheckClassfileVersion
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/tools/edu/umd/cs/findbugs/tools/ComparePerfomance.java
module edu::umd::cs::findbugs::tools::ComparePerfomance
   function foo(File,int) in line 65
      protection public
      29 lines of code
      2 parameters
      4 conditional paths
      uses function putStats(String,int,int) defined in edu::umd::cs::findbugs::tools::ComparePerfomance
   function getRecord(String) in line 55
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
   function main(String) in line 120
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function print() defined in edu::umd::cs::findbugs::tools::ComparePerfomance
   function print() in line 106
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
   function putStats(String,int,int) in line 101
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function getRecord(String) defined in edu::umd::cs::findbugs::tools::ComparePerfomance
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/tools/edu/umd/cs/findbugs/tools/FilterAndCombineBitfieldPropertyDatabase.java
module edu::umd::cs::findbugs::tools::FilterAndCombineBitfieldPropertyDatabase
   function main(String[]) in line 53
      protection public
      17 lines of code
      1 parameters
      8 conditional paths
      uses function process(@WillClose InputStream,Map< String, Integer >,Map< String, Integer >) defined in edu::umd::cs::findbugs::tools::FilterAndCombineBitfieldPropertyDatabase
   function process(@WillClose InputStream,Map< String, Integer >,Map< String, Integer >) in line 108
      34 lines of code
      3 parameters
      8 conditional paths
module edu::umd::cs::findbugs::tools::FilterAndCombineBitfieldPropertyDatabase::Status
   variable EXPOSED in line 72
      protection public
   variable NOT_FOUND in line 72
      protection public
   variable UNEXPOSED in line 73
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/tools/edu/umd/cs/findbugs/tools/FilterPropertyDatabase.java
module edu::umd::cs::findbugs::tools::FilterPropertyDatabase
   function main(String[]) in line 49
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function process(@WillClose InputStream) defined in edu::umd::cs::findbugs::tools::FilterPropertyDatabase
   function process(@WillClose InputStream) in line 63
      30 lines of code
      1 parameters
      7 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/tools/edu/umd/cs/findbugs/tools/FixIndentation.java
module edu::umd::cs::findbugs::tools::FixIndentation
   function main(String) in line 46
      protection public
      12 lines of code
      1 parameters
      29 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/tools/edu/umd/cs/findbugs/tools/GenerateUpdateXml.java
module edu::umd::cs::findbugs::tools::GenerateUpdateXml
   function main(String) in line 31
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function plugins() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/tools/edu/umd/cs/findbugs/tools/html/ColorAlternator.java
module edu::umd::cs::findbugs::tools::html::ColorAlternator
   function nextColor() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable colorList defined in edu::umd::cs::findbugs::tools::html::ColorAlternator
   function ColorAlternator(String[]) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable colorList defined in edu::umd::cs::findbugs::tools::html::ColorAlternator
   variable colorList in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/tools/edu/umd/cs/findbugs/tools/html/PlainPrintBugDescriptions.java
module edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   inherits from edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
   function beginBody() in line 74
      2 lines of code
      0 parameters
      1 conditional paths
   function emit(BugPattern) in line 58
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   function endBody() in line 78
      2 lines of code
      0 parameters
      1 conditional paths
   function epilogue() in line 64
      4 lines of code
      0 parameters
      1 conditional paths
      uses function endBody() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   function getDocTitle() in line 39
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable docTitle defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   function getPrintStream() in line 43
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   function header() in line 70
      2 lines of code
      0 parameters
      1 conditional paths
   function main(String[]) in line 81
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable docTitle defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function PlainPrintBugDescriptions(String,OutputStream) defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   function prologue() in line 48
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable docTitle defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function header() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function beginBody() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   function PlainPrintBugDescriptions(String,OutputStream) in line 34
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable docTitle defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   variable docTitle in line 30
   variable out in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/tools/edu/umd/cs/findbugs/tools/html/PrettyPrintBugDescriptions.java
module edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   inherits from edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   function beginBody() in line 113
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function getPrintStream() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable beginBodyText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function emit(BugPattern) in line 94
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugPatternSet defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function emitBugDescriptions() in line 146
      11 lines of code
      0 parameters
      2 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function getPrintStream() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable bugPatternSet defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function emitSummaryTable() in line 125
      20 lines of code
      0 parameters
      2 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function getPrintStream() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable TABLE_COLORS defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses variable bugPatternSet defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses function nextColor() defined in edu::umd::cs::findbugs::tools::html::ColorAlternator
      uses function getBugCategoryDescription(String) defined in edu::umd::cs::findbugs::I18N
   function endBody() in line 120
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function getPrintStream() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable endBodyText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function epilogue() in line 99
      5 lines of code
      0 parameters
      1 conditional paths
      uses function emitSummaryTable() defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses function emitBugDescriptions() defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function header() in line 106
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function getPrintStream() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable headerText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function isEnabled(DetectorFactory) in line 159
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable unabridged defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function main(String[]) in line 163
      protection public
      40 lines of code
      1 parameters
      9 conditional paths
      uses variable unabridged defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses variable docTitle defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function PrettyPrintBugDescriptions(String,OutputStream) defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses function setHeaderText(String) defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses function setBeginBodyText(String) defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses function setPrologueText(String) defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses function setEndBodyText(String) defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses function print() defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
   function prologue() in line 87
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function getPrintStream() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable prologueText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function setBeginBodyText(String) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable beginBodyText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function setEndBodyText(String) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable endBodyText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function setHeaderText(String) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable headerText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function setPrologueText(String) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable prologueText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function PrettyPrintBugDescriptions(String,OutputStream) in line 64
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable docTitle defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   variable beginBodyText in line 39
   variable bugPatternSet in line 35
   variable endBodyText in line 43
   variable headerText in line 37
   variable prologueText in line 41
   variable TABLE_COLORS in line 47
   variable unabridged in line 45
module edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions::BugPatternComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(BugPattern,BugPattern) in line 51
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getType() defined in edu::umd::cs::findbugs::BugPattern
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/tools/edu/umd/cs/findbugs/tools/html/PrintBugDescriptions.java
module edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
   abstract class
   function emit(BugPattern) in line 65
      1 lines of code
      1 parameters
      1 conditional paths
   function epilogue() in line 67
      1 lines of code
      0 parameters
      1 conditional paths
   function isEnabled(DetectorFactory) in line 59
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isDefaultEnabled() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function prologue() defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
      uses function emit(BugPattern) defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
      uses function epilogue() defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
   function print() in line 32
      protection public
      26 lines of code
      0 parameters
      5 conditional paths
      uses function factoryIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function isEnabled(DetectorFactory) defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
      uses function getReportedBugPatterns() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function prologue() defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
      uses function bugPatternIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function emit(BugPattern) defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
      uses function epilogue() defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
   function prologue() in line 63
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/tools/edu/umd/cs/findbugs/tools/junit/JUnitJarRunner.java
module edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
   function buildTestSuite() in line 74
      protection public
      45 lines of code
      0 parameters
      8 conditional paths
      uses variable jarFileName defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
      uses variable classpath defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
      uses function run(TestSuite,String) defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
      uses function getTestCase(ClassLoader) defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
   function getTestCase(ClassLoader) in line 122
      4 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 138
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses variable jarFileName defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
      uses function JUnitJarRunner(String) defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
      uses function setClassPath(String) defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
      uses function buildTestSuite() defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
      uses function run(TestSuite,String) defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
   function run(TestSuite,String) in line 127
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
   function setClassPath(String) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classpath defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
   function JUnitJarRunner(String) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable jarFileName defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
   variable classpath in line 46
   variable jarFileName in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-3.0.0-source/findbugs-3.0.0/src/tools/edu/umd/cs/findbugs/tools/xml/CheckMessages.java
module edu::umd::cs::findbugs::tools::xml::CheckMessages
   function checkDescribed(String,XMLFile,Set< String >,Set< String >) in line 198
      protection public
      11 lines of code
      4 parameters
      2 conditional paths
      uses function CheckMessagesException(String,XMLFile,Node) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages::CheckMessagesException
   function checkMessages(XMLFile) in line 160
      protection public
      37 lines of code
      1 parameters
      4 conditional paths
      uses function checkDescribed(String,XMLFile,Set< String >,Set< String >) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages
      uses variable declaredDetectorsSet defined in edu::umd::cs::findbugs::tools::xml::CheckMessages
      uses variable declaredAbbrevsSet defined in edu::umd::cs::findbugs::tools::xml::CheckMessages
   function main(String[]) in line 210
      protection public
      23 lines of code
      1 parameters
      4 conditional paths
      uses function checkMessages(XMLFile) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages
      uses function CheckMessages(String) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages
   function CheckMessages(String) in line 145
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable declaredDetectorsSet defined in edu::umd::cs::findbugs::tools::xml::CheckMessages
      uses function collectAttributes(String,String) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages::XMLFile
      uses variable declaredAbbrevsSet defined in edu::umd::cs::findbugs::tools::xml::CheckMessages
   variable declaredAbbrevsSet in line 143
   variable declaredDetectorsSet in line 141
module edu::umd::cs::findbugs::tools::xml::CheckMessages::CheckMessagesException
   inherits from org::dom4j::DocumentException
   function CheckMessagesException(String,XMLFile,Node) in line 49
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function getFilename() defined in edu::umd::cs::findbugs::tools::xml::CheckMessages::XMLFile
   function CheckMessagesException(String,XMLFile) in line 53
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getFilename() defined in edu::umd::cs::findbugs::tools::xml::CheckMessages::XMLFile
   variable serialVersionUID in line 47
module edu::umd::cs::findbugs::tools::xml::CheckMessages::XMLFile
   function checkAttribute(Node,String) in line 104
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function CheckMessagesException(String,XMLFile,Node) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages::CheckMessagesException
   function checkElement(Node,String) in line 116
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function CheckMessagesException(String,XMLFile,Node) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages::CheckMessagesException
   function checkNonEmptyText(Node) in line 128
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function CheckMessagesException(String,XMLFile,Node) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages::CheckMessagesException
   function collectAttributes(String,String) in line 92
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
   function getDocument() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFilename() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function xpathIterator(String) in line 83
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function XMLFile(String) in line 63
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   variable document in line 61
   variable filename in line 59
